; ModuleID = './Build/sw_gpt_interrupt_oneshot_mode.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %union.anon, %union.anon, %union.anon, i32, %union.anon, %union.anon, i32, %union.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.vdma_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vdma_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.vdma_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %union.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !0
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !196
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !260
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !257
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !212
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !234
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !261
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !544
@.str = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !655
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !673
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !687
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !698
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !668
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !699
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !771
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !776
@.str.79 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.80 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !784
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !875
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !862
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !880
@.str.95 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.96 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !959
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !961
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !963
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !965
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !967
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !969
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !971
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !973
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !975
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !977
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !979
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1292
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1294
@.str.99 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.100 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1303
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1296
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1304
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1356
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1359
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1392
@nor_egid = dso_local local_unnamed_addr global %struct.anon* null, align 4, !dbg !1403
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1719
@RegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1590
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1618
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1721
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1428
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1614
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1616
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1440
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1701
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1704
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }] } }, align 4, !dbg !1734
@BlockLayout = internal unnamed_addr global %struct.vdma_config_t* null, align 4, !dbg !1593
@BankInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1606
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1577
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1581
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1579
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1430
@.str.115 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.116 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1706
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1585
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1602
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1604
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1761
@.str.121 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.122 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1821
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1708
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1822
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1836
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1838
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1840
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1842
@.str.137 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.138 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1844
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !1898
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !1900
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !1902
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1914
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1916
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1918
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !1920
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2023
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2025
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2027
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2029
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2031
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2033
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2035
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2037
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2039
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2041
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2043
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2045
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2047
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2049
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2021
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2070
@.str.149 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.150 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@count1 = dso_local global i32 0, align 4, !dbg !2082
@handle = dso_local global i32 0, align 4, !dbg !2096
@.str.2 = private unnamed_addr constant [28 x i8] c"hal_gpt_sw_get_timer error!\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"hal_gpt_get_free_run_count return = %d error!\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"hal_gpt_sw_start_timer_ms error!\00", align 1
@.str.5 = private unnamed_addr constant [85 x i8] c"The original set of timeout time is 10 ms, and the detected duration time ms:%d ms\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2098
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2301
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2416
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:43 GMT +00:00\00", align 1, !dbg !2418
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2423
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2429

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2524, metadata !DIExpression()), !dbg !2525
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2526
  br i1 %2, label %3, label %26, !dbg !2528

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2529
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2531
  %6 = load i32, i32* %5, align 4, !dbg !2531
  %7 = icmp eq i32 %6, 1, !dbg !2532
  br i1 %7, label %26, label %8, !dbg !2533

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2534
  %10 = load i8, i8* %9, align 4, !dbg !2534, !range !2535
  %11 = icmp eq i8 %10, 0, !dbg !2534
  br i1 %11, label %12, label %26, !dbg !2536

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2537
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #21, !dbg !2538
  tail call void @gpt_open_clock_source() #21, !dbg !2539
  store i8 1, i8* %9, align 4, !dbg !2540
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2541
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !2541
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !2542
  %18 = load volatile i32, i32* %17, align 4, !dbg !2543
  %19 = and i32 %18, -2, !dbg !2543
  store volatile i32 %19, i32* %17, align 4, !dbg !2543
  %20 = shl nuw i32 1, %0, !dbg !2544
  %21 = xor i32 %20, -1, !dbg !2545
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !2546
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !2547
  %24 = load volatile i32, i32* %23, align 4, !dbg !2548
  %25 = and i32 %24, %21, !dbg !2548
  store volatile i32 %25, i32* %23, align 4, !dbg !2548
  br label %26, !dbg !2549

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !2525
  ret i32 %27, !dbg !2550
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #2 !dbg !2551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2555, metadata !DIExpression()), !dbg !2556
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2557, !range !2535
  %3 = icmp ne i8 %2, 0, !dbg !2559
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !2560
  %7 = and i1 %5, %6, !dbg !2560
  ret i1 %7, !dbg !2561
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !2562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2564, metadata !DIExpression()), !dbg !2565
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2566
  br i1 %2, label %3, label %14, !dbg !2568

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2569
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2571
  %6 = load i32, i32* %5, align 4, !dbg !2571
  %7 = icmp eq i32 %6, 1, !dbg !2572
  br i1 %7, label %14, label %8, !dbg !2573

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2574
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #21, !dbg !2575
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2576
  store i8 0, i8* %11, align 4, !dbg !2577
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2578
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !2578
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #21, !dbg !2579
  br label %14, !dbg !2580

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !2565
  ret i32 %15, !dbg !2581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2587, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.value(metadata i32* %1, metadata !2588, metadata !DIExpression()), !dbg !2589
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !2590

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2591
  %5 = icmp eq i32 %4, 1, !dbg !2595
  br i1 %5, label %8, label %6, !dbg !2596

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2597
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #21, !dbg !2599
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2600
  br label %8, !dbg !2601

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2602
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #21, !dbg !2603
  br label %20, !dbg !2604

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2605
  %13 = icmp eq i32 %12, 1, !dbg !2609
  br i1 %13, label %16, label %14, !dbg !2610

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2611
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #21, !dbg !2613
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2614
  br label %16, !dbg !2615

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2616
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #21, !dbg !2617
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #21, !dbg !2618
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !2619
  store i32 %21, i32* %1, align 4, !dbg !2619
  br label %22, !dbg !2620

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !2589
  ret i32 %23, !dbg !2621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 section ".tcm_code" !dbg !2622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2626, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i32 %1, metadata !2627, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i32* %2, metadata !2628, metadata !DIExpression()), !dbg !2629
  %4 = icmp eq i32* %2, null, !dbg !2630
  br i1 %4, label %7, label %5, !dbg !2632

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !2633
  store i32 %6, i32* %2, align 4, !dbg !2633
  br label %7, !dbg !2635

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !2629
  ret i32 %8, !dbg !2636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !2637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2642, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32* %1, metadata !2643, metadata !DIExpression()), !dbg !2644
  %3 = icmp ugt i32 %0, 5, !dbg !2645
  br i1 %3, label %7, label %4, !dbg !2647

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2648
  %6 = load i32, i32* %5, align 4, !dbg !2648
  store i32 %6, i32* %1, align 4, !dbg !2649
  br label %7, !dbg !2650

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !2644
  ret i32 %8, !dbg !2651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2656, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !2657, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata i8* %2, metadata !2658, metadata !DIExpression()), !dbg !2659
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2660
  br i1 %4, label %5, label %18, !dbg !2662

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2663
  %7 = load i32, i32* %6, align 4, !dbg !2663
  %8 = icmp eq i32 %7, 1, !dbg !2665
  br i1 %8, label %18, label %9, !dbg !2666

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2667
  %11 = load i8, i8* %10, align 4, !dbg !2667, !range !2535
  %12 = icmp eq i8 %11, 1, !dbg !2668
  br i1 %12, label %13, label %18, !dbg !2669

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !2670
  br i1 %14, label %18, label %15, !dbg !2672

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !2673
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !2674
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !2675
  store i8* %2, i8** %17, align 4, !dbg !2676
  tail call void @gpt_nvic_register() #21, !dbg !2677
  br label %18, !dbg !2678

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !2659
  ret i32 %19, !dbg !2679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2680 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2685, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i32 %1, metadata !2686, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i32 %2, metadata !2687, metadata !DIExpression()), !dbg !2689
  %5 = bitcast i32* %4 to i8*, !dbg !2690
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2690
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2688, metadata !DIExpression()), !dbg !2691
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2692
  br i1 %6, label %7, label %51, !dbg !2694

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2695
  %9 = load i32, i32* %8, align 4, !dbg !2695
  %10 = icmp eq i32 %9, 1, !dbg !2697
  br i1 %10, label %51, label %11, !dbg !2698

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2699
  %13 = load i8, i8* %12, align 4, !dbg !2699, !range !2535
  %14 = icmp eq i8 %13, 1, !dbg !2700
  br i1 %14, label %15, label %51, !dbg !2701

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !2702
  br i1 %16, label %51, label %17, !dbg !2704

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2705
  store volatile i32 %18, i32* %4, align 4, !dbg !2706
  tail call void @gpt_open_clock_source() #21, !dbg !2707
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2708
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2708
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !2709
  %22 = load volatile i32, i32* %21, align 4, !dbg !2710
  %23 = and i32 %22, -2, !dbg !2710
  store volatile i32 %23, i32* %21, align 4, !dbg !2710
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2711
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !2712
  %26 = load volatile i32, i32* %25, align 4, !dbg !2713
  %27 = and i32 %26, -2, !dbg !2713
  store volatile i32 %27, i32* %25, align 4, !dbg !2713
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2714
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !2715
  store volatile i32 16, i32* %29, align 4, !dbg !2716
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #21, !dbg !2717
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2718
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !2719
  store volatile i32 %30, i32* %32, align 4, !dbg !2720
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2721
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !2722
  store volatile i32 1, i32* %34, align 4, !dbg !2723
  %35 = shl i32 %2, 4, !dbg !2724
  %36 = or i32 %35, 2, !dbg !2725
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2726
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !2727
  store volatile i32 %36, i32* %38, align 4, !dbg !2728
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !2729

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !2730
  %43 = icmp eq i32 %42, 0, !dbg !2729
  br i1 %43, label %44, label %41, !dbg !2729, !llvm.loop !2731

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !2733
  %46 = load volatile i32, i32* %45, align 4, !dbg !2734
  %47 = or i32 %46, 1, !dbg !2734
  store volatile i32 %47, i32* %45, align 4, !dbg !2734
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2735
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !2736
  store volatile i32 1, i32* %49, align 4, !dbg !2737
  store i32 1, i32* %8, align 4, !dbg !2738
  %50 = load volatile i32, i32* %4, align 4, !dbg !2739
  tail call void @restore_interrupt_mask(i32 noundef %50) #21, !dbg !2740
  br label %51, !dbg !2741

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !2689
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2742
  ret i32 %52, !dbg !2742
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2747, metadata !DIExpression()), !dbg !2748
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2749
  %3 = icmp eq i32 %2, 1, !dbg !2751
  br i1 %3, label %6, label %4, !dbg !2752

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2753
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #21, !dbg !2755
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2756
  br label %6, !dbg !2757

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2758
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #21, !dbg !2759
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !2760
  ret i32 0, !dbg !2761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2762 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2764, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i32 %1, metadata !2765, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i32 %2, metadata !2766, metadata !DIExpression()), !dbg !2768
  %5 = bitcast i32* %4 to i8*, !dbg !2769
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2767, metadata !DIExpression()), !dbg !2770
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2771
  br i1 %6, label %7, label %50, !dbg !2773

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2774
  %9 = load i32, i32* %8, align 4, !dbg !2774
  %10 = icmp eq i32 %9, 1, !dbg !2776
  br i1 %10, label %50, label %11, !dbg !2777

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2778
  %13 = load i8, i8* %12, align 4, !dbg !2778, !range !2535
  %14 = icmp eq i8 %13, 1, !dbg !2779
  br i1 %14, label %15, label %50, !dbg !2780

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !2781
  store i8 1, i8* %16, align 1, !dbg !2782
  %17 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2783
  store volatile i32 %17, i32* %4, align 4, !dbg !2784
  tail call void @gpt_open_clock_source() #21, !dbg !2785
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2786
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2786
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !2787
  %21 = load volatile i32, i32* %20, align 4, !dbg !2788
  %22 = and i32 %21, -2, !dbg !2788
  store volatile i32 %22, i32* %20, align 4, !dbg !2788
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2789
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !2790
  %25 = load volatile i32, i32* %24, align 4, !dbg !2791
  %26 = and i32 %25, -2, !dbg !2791
  store volatile i32 %26, i32* %24, align 4, !dbg !2791
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2792
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !2793
  store volatile i32 12, i32* %28, align 4, !dbg !2794
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #21, !dbg !2795
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2796
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !2797
  store volatile i32 %29, i32* %31, align 4, !dbg !2798
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2799
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !2800
  store volatile i32 1, i32* %33, align 4, !dbg !2801
  %34 = shl i32 %2, 4, !dbg !2802
  %35 = or i32 %34, 2, !dbg !2803
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2804
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !2805
  store volatile i32 %35, i32* %37, align 4, !dbg !2806
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !2807

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !2808
  %42 = icmp eq i32 %41, 0, !dbg !2807
  br i1 %42, label %43, label %40, !dbg !2807, !llvm.loop !2809

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !2811
  %45 = load volatile i32, i32* %44, align 4, !dbg !2812
  %46 = or i32 %45, 1, !dbg !2812
  store volatile i32 %46, i32* %44, align 4, !dbg !2812
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2813
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !2814
  store volatile i32 1, i32* %48, align 4, !dbg !2815
  %49 = load volatile i32, i32* %4, align 4, !dbg !2816
  tail call void @restore_interrupt_mask(i32 noundef %49) #21, !dbg !2817
  store i32 1, i32* %8, align 4, !dbg !2818
  br label %50, !dbg !2819

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !2768
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2820
  ret i32 %51, !dbg !2820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2823, metadata !DIExpression()), !dbg !2824
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2825
  %3 = icmp eq i32 %2, 1, !dbg !2827
  br i1 %3, label %6, label %4, !dbg !2828

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2829
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #21, !dbg !2831
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2832
  br label %6, !dbg !2833

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2834
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #21, !dbg !2835
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !2836
  ret i32 0, !dbg !2837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !2838 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2840, metadata !DIExpression()), !dbg !2842
  %3 = bitcast i32* %2 to i8*, !dbg !2843
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !2843
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2841, metadata !DIExpression()), !dbg !2844
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2845
  br i1 %4, label %5, label %24, !dbg !2847

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2848
  store volatile i32 %6, i32* %2, align 4, !dbg !2849
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2850
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2850
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !2851
  %10 = load volatile i32, i32* %9, align 4, !dbg !2852
  %11 = and i32 %10, -2, !dbg !2852
  store volatile i32 %11, i32* %9, align 4, !dbg !2852
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2853
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !2854
  %14 = load volatile i32, i32* %13, align 4, !dbg !2855
  %15 = and i32 %14, -2, !dbg !2855
  store volatile i32 %15, i32* %13, align 4, !dbg !2855
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2856
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !2857
  store volatile i32 1, i32* %17, align 4, !dbg !2858
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2859
  store i32 0, i32* %18, align 4, !dbg !2860
  %19 = load volatile i32, i32* %2, align 4, !dbg !2861
  tail call void @restore_interrupt_mask(i32 noundef %19) #21, !dbg !2862
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !2863
  %21 = load i8, i8* %20, align 1, !dbg !2863, !range !2535
  %22 = icmp eq i8 %21, 0, !dbg !2863
  br i1 %22, label %24, label %23, !dbg !2865

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !2866
  br label %24, !dbg !2868

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !2842
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !2869
  ret i32 %25, !dbg !2869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !2870 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2874, metadata !DIExpression()), !dbg !2877
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2878
  %3 = icmp ugt i32 %2, 31, !dbg !2880
  br i1 %3, label %13, label %4, !dbg !2881

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !2882
  br i1 %5, label %13, label %6, !dbg !2884

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2885
  call void @llvm.dbg.value(metadata i32 %7, metadata !2876, metadata !DIExpression()), !dbg !2877
  %8 = tail call i32 @gpt_sw_get_free_timer() #21, !dbg !2886
  call void @llvm.dbg.value(metadata i32 %8, metadata !2875, metadata !DIExpression()), !dbg !2877
  %9 = or i32 %8, -559087616, !dbg !2887
  store i32 %9, i32* %0, align 4, !dbg !2888
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !2889
  store i8 1, i8* %10, align 4, !dbg !2890
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2891
  %12 = add i32 %11, 1, !dbg !2891
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2891
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !2892
  br label %13, !dbg !2893

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !2877
  ret i32 %14, !dbg !2894
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #7 !dbg !2895 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2897, metadata !DIExpression()), !dbg !2899
  %3 = bitcast i32* %2 to i8*, !dbg !2900
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !2900
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2898, metadata !DIExpression()), !dbg !2901
  %4 = and i32 %0, -559087616, !dbg !2902
  %5 = icmp eq i32 %4, -559087616, !dbg !2904
  br i1 %5, label %6, label %24, !dbg !2905

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !2906
  store volatile i32 %7, i32* %2, align 4, !dbg !2907
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2908
  %9 = icmp eq i32 %8, 0, !dbg !2910
  br i1 %9, label %24, label %10, !dbg !2911

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !2912
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !2914
  %13 = load i8, i8* %12, align 1, !dbg !2914, !range !2535
  %14 = icmp eq i8 %13, 0, !dbg !2914
  br i1 %14, label %15, label %24, !dbg !2915

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !2916
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !2918
  %18 = load i8, i8* %17, align 4, !dbg !2918, !range !2535
  %19 = icmp eq i8 %18, 1, !dbg !2919
  br i1 %19, label %20, label %24, !dbg !2920

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !2921
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !2922
  store i8 0, i8* %22, align 4, !dbg !2923
  %23 = add i32 %8, -1, !dbg !2924
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2924
  br label %24, !dbg !2925

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !2899
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !2926
  ret i32 %25, !dbg !2926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !2927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2931, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata i32 %1, metadata !2932, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !2933, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.value(metadata i8* %3, metadata !2934, metadata !DIExpression()), !dbg !2938
  %5 = and i32 %0, -559087616, !dbg !2939
  %6 = icmp ne i32 %5, -559087616, !dbg !2941
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !2942
  call void @llvm.dbg.value(metadata i32 %0, metadata !2937, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !2938
  br i1 %8, label %44, label %9, !dbg !2942

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !2943
  call void @llvm.dbg.value(metadata i32 %10, metadata !2937, metadata !DIExpression()), !dbg !2938
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !2944
  %12 = load i8, i8* %11, align 1, !dbg !2944, !range !2535
  %13 = icmp eq i8 %12, 0, !dbg !2944
  br i1 %13, label %14, label %44, !dbg !2946

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !2947
  %16 = load i8, i8* %15, align 4, !dbg !2947, !range !2535
  %17 = icmp eq i8 %16, 1, !dbg !2949
  br i1 %17, label %18, label %44, !dbg !2950

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !2951
  br i1 %19, label %44, label %20, !dbg !2953

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2954
  call void @llvm.dbg.value(metadata i32 %21, metadata !2936, metadata !DIExpression()), !dbg !2938
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2955
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !2956, !range !2535
  %23 = icmp eq i8 %22, 0, !dbg !2958
  br i1 %23, label %24, label %27, !dbg !2959

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #20, !dbg !2960
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #20, !dbg !2962
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !2963
  br label %27, !dbg !2964

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !2965
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !2966, !range !2535
  %30 = icmp eq i8 %29, 0, !dbg !2968
  br i1 %30, label %31, label %34, !dbg !2969

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !2970
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #21, !dbg !2972
  call void @llvm.dbg.value(metadata i32 %33, metadata !2935, metadata !DIExpression()), !dbg !2938
  br label %34, !dbg !2973

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !2974
  call void @llvm.dbg.value(metadata i32 %35, metadata !2935, metadata !DIExpression()), !dbg !2938
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !2975
  %37 = add i32 %36, %35, !dbg !2975
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !2975
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !2976
  %39 = add i32 %38, 1, !dbg !2976
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !2976
  store i8 1, i8* %11, align 1, !dbg !2977
  %40 = add i32 %37, %1, !dbg !2978
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !2979
  store i32 %40, i32* %41, align 4, !dbg !2980
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !2981
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !2982
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !2983
  store i8* %3, i8** %43, align 4, !dbg !2984
  tail call void @gpt_sw_start_timer() #21, !dbg !2985
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2986
  tail call void @restore_interrupt_mask(i32 noundef %21) #21, !dbg !2987
  br label %44, !dbg !2988

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !2938
  ret i32 %45, !dbg !2989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !2990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2992, metadata !DIExpression()), !dbg !2996
  %2 = and i32 %0, -559087616, !dbg !2997
  %3 = icmp eq i32 %2, -559087616, !dbg !2999
  br i1 %3, label %4, label %31, !dbg !3000

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3001
  call void @llvm.dbg.value(metadata i32 %5, metadata !2995, metadata !DIExpression()), !dbg !2996
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3002
  %7 = load i8, i8* %6, align 1, !dbg !3002, !range !2535
  %8 = icmp eq i8 %7, 1, !dbg !3004
  br i1 %8, label %9, label %31, !dbg !3005

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3006
  %11 = load i8, i8* %10, align 4, !dbg !3006, !range !2535
  %12 = icmp eq i8 %11, 1, !dbg !3008
  br i1 %12, label %13, label %31, !dbg !3009

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3010
  call void @llvm.dbg.value(metadata i32 %14, metadata !2994, metadata !DIExpression()), !dbg !2996
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3011
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3012
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3013
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3014, !range !2535
  %17 = icmp eq i8 %16, 0, !dbg !3016
  br i1 %17, label %18, label %21, !dbg !3017

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3018
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #21, !dbg !3020
  call void @llvm.dbg.value(metadata i32 %20, metadata !2993, metadata !DIExpression()), !dbg !2996
  br label %21, !dbg !3021

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3022
  call void @llvm.dbg.value(metadata i32 %22, metadata !2993, metadata !DIExpression()), !dbg !2996
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3023
  %24 = add i32 %23, %22, !dbg !3023
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3023
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3024
  %26 = add i32 %25, -1, !dbg !3024
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3024
  store i8 0, i8* %6, align 1, !dbg !3025
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3026
  %28 = icmp eq i32 %27, 0, !dbg !3028
  br i1 %28, label %30, label %29, !dbg !3029

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #21, !dbg !3030
  br label %30, !dbg !3032

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3033
  tail call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !3034
  br label %31, !dbg !3035

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !2996
  ret i32 %32, !dbg !3036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3041, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i32* %1, metadata !3042, metadata !DIExpression()), !dbg !3046
  %3 = and i32 %0, -559087616, !dbg !3047
  %4 = icmp eq i32 %3, -559087616, !dbg !3049
  br i1 %4, label %5, label %20, !dbg !3050

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %6, metadata !3045, metadata !DIExpression()), !dbg !3046
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3052
  %8 = load i8, i8* %7, align 4, !dbg !3052, !range !2535
  %9 = icmp eq i8 %8, 1, !dbg !3054
  br i1 %9, label %10, label %20, !dbg !3055

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3056
  call void @llvm.dbg.value(metadata i32 %11, metadata !3044, metadata !DIExpression()), !dbg !3046
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3057
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3058
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3059
  %15 = load volatile i32, i32* %14, align 4, !dbg !3059
  %16 = add i32 %15, %12, !dbg !3060
  call void @llvm.dbg.value(metadata i32 %16, metadata !3043, metadata !DIExpression()), !dbg !3046
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3061
  %18 = load i32, i32* %17, align 4, !dbg !3061
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3063
  store i32 %19, i32* %1, align 4, !dbg !3064
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !3065
  br label %20, !dbg !3066

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3046
  ret i32 %21, !dbg !3067
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 section ".tcm_code" !dbg !3068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3072, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 %1, metadata !3073, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 %2, metadata !3074, metadata !DIExpression()), !dbg !3079
  %4 = and i32 %0, 65535, !dbg !3080
  %5 = mul i32 %4, %1, !dbg !3081
  call void @llvm.dbg.value(metadata i32 %5, metadata !3075, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3079
  %6 = lshr i32 %0, 16, !dbg !3082
  %7 = mul i32 %6, %1, !dbg !3083
  call void @llvm.dbg.value(metadata i32 %7, metadata !3075, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3079
  %8 = and i32 %5, 65535, !dbg !3084
  call void @llvm.dbg.value(metadata i32 %8, metadata !3077, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3079
  %9 = lshr i32 %5, 16, !dbg !3085
  %10 = add i32 %9, %7, !dbg !3086
  call void @llvm.dbg.value(metadata i32 %10, metadata !3077, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3079
  %11 = udiv i32 %10, %2, !dbg !3087
  call void @llvm.dbg.value(metadata i32 %11, metadata !3078, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3079
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3088
  %15 = or i32 %14, %8, !dbg !3089
  %16 = udiv i32 %15, %2, !dbg !3090
  call void @llvm.dbg.value(metadata i32 %16, metadata !3078, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3079
  %17 = shl i32 %11, 16, !dbg !3091
  %18 = add i32 %16, %17, !dbg !3092
  ret i32 %18, !dbg !3093
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !3094 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3098, metadata !DIExpression()), !dbg !3099
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3100
  %3 = load volatile i32, i32* %2, align 4, !dbg !3100
  ret i32 %3, !dbg !3101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #8 section ".tcm_code" !dbg !3102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3106, metadata !DIExpression()), !dbg !3107
  %2 = shl i32 %0, 5, !dbg !3108
  %3 = mul i32 %0, 7, !dbg !3109
  %4 = udiv i32 %3, 10, !dbg !3110
  %5 = add i32 %4, %2, !dbg !3111
  %6 = mul i32 %0, 6, !dbg !3112
  %7 = udiv i32 %6, 100, !dbg !3113
  %8 = add i32 %5, %7, !dbg !3114
  %9 = shl i32 %0, 3, !dbg !3115
  %10 = udiv i32 %9, 1000, !dbg !3116
  %11 = add i32 %8, %10, !dbg !3117
  ret i32 %11, !dbg !3118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !207 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3119
  br i1 %1, label %10, label %2, !dbg !3121

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3122
  br i1 %3, label %4, label %6, !dbg !3125

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !3126
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3128
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3129

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3131
  br label %8, !dbg !3131

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3131
  br label %10, !dbg !3132

10:                                               ; preds = %8, %0
  ret void, !dbg !3132
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3133 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #21, !dbg !3134
  br i1 %1, label %4, label %2, !dbg !3136

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #21, !dbg !3137
  br label %4, !dbg !3139

4:                                                ; preds = %2, %0
  ret void, !dbg !3140
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3143, metadata !DIExpression()), !dbg !3144
  tail call void @gpt_get_lfosc_clock() #20, !dbg !3145
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3146
  br i1 %2, label %3, label %6, !dbg !3148

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3149
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #20, !dbg !3151
  br label %6, !dbg !3152

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3153
  ret i32 %7, !dbg !3154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3157, metadata !DIExpression()), !dbg !3158
  tail call void @gpt_get_lfosc_clock() #20, !dbg !3159
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3160
  br i1 %2, label %3, label %6, !dbg !3162

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3163
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #20, !dbg !3165
  br label %6, !dbg !3166

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3167
  ret i32 %7, !dbg !3168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3169 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3173, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.value(metadata i32 %1, metadata !3174, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.value(metadata i32 %2, metadata !3175, metadata !DIExpression()), !dbg !3176
  tail call void @gpt_open_clock_source() #20, !dbg !3177
  %4 = or i32 %2, %1, !dbg !3178
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3179
  store volatile i32 %4, i32* %5, align 4, !dbg !3180
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3181
  store volatile i32 49, i32* %6, align 4, !dbg !3182
  ret void, !dbg !3183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !3184 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3188, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.value(metadata i32 %1, metadata !3189, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.value(metadata i32 0, metadata !3190, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.value(metadata i32 0, metadata !3191, metadata !DIExpression()), !dbg !3192
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3193
  call void @llvm.dbg.value(metadata i32 %3, metadata !3191, metadata !DIExpression()), !dbg !3192
  %4 = add i32 %1, 1, !dbg !3194
  %5 = add i32 %4, %3, !dbg !3195
  call void @llvm.dbg.value(metadata i32 %5, metadata !3190, metadata !DIExpression()), !dbg !3192
  %6 = icmp ugt i32 %5, %3, !dbg !3196
  br i1 %6, label %7, label %10, !dbg !3198

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3199
  %9 = icmp ult i32 %8, %5, !dbg !3201
  br i1 %9, label %7, label %16, !dbg !3202, !llvm.loop !3203

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3205
  %12 = icmp ult i32 %11, %3, !dbg !3207
  br i1 %12, label %13, label %10, !dbg !3208, !llvm.loop !3209

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3211
  %15 = icmp ult i32 %14, %5, !dbg !3212
  br i1 %15, label %13, label %16, !dbg !3213, !llvm.loop !3214

16:                                               ; preds = %13, %7
  ret void, !dbg !3216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !3217 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3221, metadata !DIExpression()), !dbg !3222
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3223
  store volatile i32 0, i32* %2, align 4, !dbg !3224
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3225
  store volatile i32 0, i32* %3, align 4, !dbg !3226
  %4 = load volatile i32, i32* %3, align 4, !dbg !3227
  %5 = or i32 %4, 2, !dbg !3227
  store volatile i32 %5, i32* %3, align 4, !dbg !3227
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3228

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3229
  %9 = icmp eq i32 %8, 0, !dbg !3228
  br i1 %9, label %10, label %7, !dbg !3228, !llvm.loop !3230

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3232
  store volatile i32 16, i32* %11, align 4, !dbg !3233
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3234
  store volatile i32 1, i32* %12, align 4, !dbg !3235
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3236
  store volatile i32 -1, i32* %13, align 4, !dbg !3237
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3238
  br i1 %14, label %15, label %16, !dbg !3240

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3241
  br label %16, !dbg !3243

16:                                               ; preds = %15, %10
  ret void, !dbg !3244
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !3245 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3247, metadata !DIExpression()), !dbg !3249
  %3 = bitcast i32* %2 to i8*, !dbg !3250
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3250
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3248, metadata !DIExpression()), !dbg !3251
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3252
  %5 = load volatile i32, i32* %4, align 4, !dbg !3252
  store volatile i32 %5, i32* %2, align 4, !dbg !3253
  %6 = load volatile i32, i32* %4, align 4, !dbg !3254
  %7 = and i32 %6, -2, !dbg !3254
  store volatile i32 %7, i32* %4, align 4, !dbg !3254
  %8 = load volatile i32, i32* %2, align 4, !dbg !3255
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3256
  ret i32 %8, !dbg !3257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3258 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3262, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %1, metadata !3263, metadata !DIExpression()), !dbg !3264
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3265
  store volatile i32 %1, i32* %3, align 4, !dbg !3266
  ret void, !dbg !3267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3268 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3270, metadata !DIExpression()), !dbg !3275
  %5 = bitcast i32* %2 to i8*, !dbg !3276
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3276
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3272, metadata !DIExpression()), !dbg !3277
  %6 = bitcast i32* %3 to i8*, !dbg !3278
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3278
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3273, metadata !DIExpression()), !dbg !3279
  %7 = bitcast i32* %4 to i8*, !dbg !3280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3280
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3274, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata i32 undef, metadata !3270, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.value(metadata i32 0, metadata !3271, metadata !DIExpression()), !dbg !3275
  br label %8, !dbg !3282

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3271, metadata !DIExpression()), !dbg !3275
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3284
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3284
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3287
  %13 = load volatile i32, i32* %12, align 4, !dbg !3287
  store volatile i32 %13, i32* %3, align 4, !dbg !3288
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3289
  %15 = load volatile i32, i32* %14, align 4, !dbg !3289
  store volatile i32 %15, i32* %4, align 4, !dbg !3290
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #20, !dbg !3291
  store volatile i32 %16, i32* %2, align 4, !dbg !3292
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3293
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3294
  store volatile i32 1, i32* %18, align 4, !dbg !3295
  %19 = load volatile i32, i32* %3, align 4, !dbg !3296
  %20 = and i32 %19, 1, !dbg !3298
  %21 = icmp eq i32 %20, 0, !dbg !3298
  br i1 %21, label %33, label %22, !dbg !3299

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3300
  %24 = and i32 %23, 1, !dbg !3301
  %25 = icmp eq i32 %24, 0, !dbg !3301
  br i1 %25, label %33, label %26, !dbg !3302

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3303
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3303
  %29 = icmp eq void (i8*)* %28, null, !dbg !3306
  br i1 %29, label %33, label %30, !dbg !3307

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3308
  %32 = load i8*, i8** %31, align 4, !dbg !3308
  tail call void %28(i8* noundef %32) #21, !dbg !3310
  br label %33, !dbg !3311

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3312
  %35 = load volatile i32, i32* %2, align 4, !dbg !3313
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #20, !dbg !3314
  %36 = add nuw nsw i32 %9, 1, !dbg !3315
  call void @llvm.dbg.value(metadata i32 %36, metadata !3271, metadata !DIExpression()), !dbg !3275
  %37 = icmp eq i32 %36, 6, !dbg !3316
  br i1 %37, label %38, label %8, !dbg !3282, !llvm.loop !3317

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3319
  ret void, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3320 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #21, !dbg !3321
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #21, !dbg !3322
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #21, !dbg !3323
  ret void, !dbg !3324
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !3325 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3327, metadata !DIExpression()), !dbg !3332
  %3 = bitcast i32* %2 to i8*, !dbg !3333
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3333
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3328, metadata !DIExpression()), !dbg !3334
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %4, metadata !3329, metadata !DIExpression()), !dbg !3332
  %5 = lshr i32 %4, 15, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %5, metadata !3330, metadata !DIExpression()), !dbg !3332
  %6 = and i32 %4, 32767, !dbg !3337
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3338
  %8 = add nuw nsw i32 %7, 16384, !dbg !3339
  %9 = lshr i32 %8, 15, !dbg !3340
  call void @llvm.dbg.value(metadata i32 %9, metadata !3331, metadata !DIExpression()), !dbg !3332
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3341
  %11 = add nuw nsw i32 %9, %10, !dbg !3342
  store volatile i32 %11, i32* %2, align 4, !dbg !3343
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3344
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3345
  %14 = load volatile i32, i32* %13, align 4, !dbg !3346
  %15 = or i32 %14, 2, !dbg !3346
  store volatile i32 %15, i32* %13, align 4, !dbg !3346
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3347

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3348
  %20 = icmp eq i32 %19, 0, !dbg !3347
  br i1 %20, label %21, label %18, !dbg !3347, !llvm.loop !3349

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3352
  ret i32 %22, !dbg !3353
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #11 !dbg !3354 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3358, metadata !DIExpression()), !dbg !3359
  br label %1, !dbg !3360

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3358, metadata !DIExpression()), !dbg !3359
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3362
  %4 = load i8, i8* %3, align 4, !dbg !3362, !range !2535
  %5 = icmp eq i8 %4, 1, !dbg !3366
  br i1 %5, label %6, label %9, !dbg !3367

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %7, metadata !3358, metadata !DIExpression()), !dbg !3359
  %8 = icmp eq i32 %7, 32, !dbg !3369
  br i1 %8, label %9, label %1, !dbg !3360, !llvm.loop !3370

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3359
  ret i32 %10, !dbg !3372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3373 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3377
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3377
  %4 = bitcast i32* %2 to i8*, !dbg !3377
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3377
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3378, !range !2535
  %6 = icmp eq i8 %5, 0, !dbg !3378
  br i1 %6, label %7, label %11, !dbg !3380

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3375, metadata !DIExpression(DW_OP_deref)), !dbg !3381
  call void @llvm.dbg.value(metadata i32* %2, metadata !3376, metadata !DIExpression(DW_OP_deref)), !dbg !3381
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #20, !dbg !3382
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3383
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3384
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3385
  %9 = load i32, i32* %1, align 4, !dbg !3386
  call void @llvm.dbg.value(metadata i32 %9, metadata !3375, metadata !DIExpression()), !dbg !3381
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #21, !dbg !3387
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3388
  br label %11, !dbg !3389

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3389
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3389
  ret void, !dbg !3389
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #12 !dbg !3390 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3394, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32* %1, metadata !3395, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32 -1, metadata !3397, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32 0, metadata !3396, metadata !DIExpression()), !dbg !3399
  br label %3, !dbg !3400

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3396, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32 %5, metadata !3397, metadata !DIExpression()), !dbg !3399
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3402
  %7 = load i8, i8* %6, align 1, !dbg !3402, !range !2535
  %8 = icmp eq i8 %7, 0, !dbg !3402
  br i1 %8, label %13, label %9, !dbg !3406

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #20, !dbg !3407
  call void @llvm.dbg.value(metadata i32 %10, metadata !3398, metadata !DIExpression()), !dbg !3399
  %11 = icmp ult i32 %10, %5, !dbg !3409
  br i1 %11, label %12, label %13, !dbg !3411

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3397, metadata !DIExpression()), !dbg !3399
  store i32 %4, i32* %1, align 4, !dbg !3412
  br label %13, !dbg !3414

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3399
  call void @llvm.dbg.value(metadata i32 %14, metadata !3397, metadata !DIExpression()), !dbg !3399
  %15 = add nuw nsw i32 %4, 1, !dbg !3415
  call void @llvm.dbg.value(metadata i32 %15, metadata !3396, metadata !DIExpression()), !dbg !3399
  %16 = icmp eq i32 %15, 32, !dbg !3416
  br i1 %16, label %17, label %3, !dbg !3400, !llvm.loop !3417

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3419
  ret void, !dbg !3420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #2 !dbg !3421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3423, metadata !DIExpression()), !dbg !3427
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3428
  %3 = load i32, i32* %2, align 4, !dbg !3428
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3428
  %5 = sub i32 %3, %4, !dbg !3428
  call void @llvm.dbg.value(metadata i32 %5, metadata !3424, metadata !DIExpression()), !dbg !3427
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3429
  %7 = sub i32 %6, %4, !dbg !3429
  call void @llvm.dbg.value(metadata i32 %7, metadata !3425, metadata !DIExpression()), !dbg !3427
  %8 = icmp ugt i32 %5, %7, !dbg !3430
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3432
  call void @llvm.dbg.value(metadata i32 %10, metadata !3426, metadata !DIExpression()), !dbg !3427
  ret i32 %10, !dbg !3433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3434 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3436, metadata !DIExpression()), !dbg !3440
  %4 = bitcast i32* %2 to i8*, !dbg !3441
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3441
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3438, metadata !DIExpression()), !dbg !3442
  %5 = bitcast i32* %3 to i8*, !dbg !3443
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3443
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3439, metadata !DIExpression()), !dbg !3444
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3445
  %7 = icmp eq i32 %6, 0, !dbg !3447
  br i1 %7, label %38, label %8, !dbg !3448

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3449
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3451
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3452
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3453
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #20, !dbg !3454
  store volatile i32 %11, i32* %2, align 4, !dbg !3455
  %12 = load volatile i32, i32* %2, align 4, !dbg !3456
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3457
  %14 = add i32 %13, %12, !dbg !3457
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3457
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3458
  call void @llvm.dbg.value(metadata i32 0, metadata !3437, metadata !DIExpression()), !dbg !3440
  br label %15, !dbg !3459

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3437, metadata !DIExpression()), !dbg !3440
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3461
  %18 = load i8, i8* %17, align 1, !dbg !3461, !range !2535
  %19 = icmp eq i8 %18, 0, !dbg !3461
  br i1 %19, label %31, label %20, !dbg !3465

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #20, !dbg !3466
  store volatile i32 %21, i32* %3, align 4, !dbg !3468
  %22 = load volatile i32, i32* %3, align 4, !dbg !3469
  %23 = icmp eq i32 %22, 0, !dbg !3471
  br i1 %23, label %24, label %31, !dbg !3472

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3473
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3475
  %26 = add i32 %25, -1, !dbg !3475
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3475
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3476
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3476
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3477
  %30 = load i8*, i8** %29, align 4, !dbg !3477
  tail call void %28(i8* noundef %30) #21, !dbg !3478
  br label %31, !dbg !3479

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %32, metadata !3437, metadata !DIExpression()), !dbg !3440
  %33 = icmp eq i32 %32, 32, !dbg !3481
  br i1 %33, label %34, label %15, !dbg !3459, !llvm.loop !3482

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3484
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3485
  %36 = icmp eq i32 %35, 0, !dbg !3487
  br i1 %36, label %38, label %37, !dbg !3488

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #20, !dbg !3489
  br label %38, !dbg !3491

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3492
  ret void, !dbg !3492
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #13 !dbg !3493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3498, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !3500, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i32 0, metadata !3499, metadata !DIExpression()), !dbg !3501
  br label %5, !dbg !3503

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !3505
  call void @llvm.dbg.value(metadata i32 %3, metadata !3499, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 %6, metadata !3499, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3501
  %4 = icmp eq i32 %3, 5, !dbg !3507
  br i1 %4, label %10, label %5, !dbg !3503, !llvm.loop !3508

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3499, metadata !DIExpression()), !dbg !3501
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !3510
  %8 = load i32, i32* %7, align 4, !dbg !3510
  %9 = icmp eq i32 %8, %0, !dbg !3513
  call void @llvm.dbg.value(metadata i32 %6, metadata !3499, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3501
  br i1 %9, label %10, label %2, !dbg !3514

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !3501
  ret i32 %11, !dbg !3515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #8 !dbg !3516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3521, metadata !DIExpression()), !dbg !3522
  ret i32 0, !dbg !3523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #8 !dbg !3524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3526, metadata !DIExpression()), !dbg !3527
  ret i32 0, !dbg !3528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3533, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata i32 %1, metadata !3534, metadata !DIExpression()), !dbg !3537
  %3 = icmp ugt i32 %0, 48, !dbg !3538
  br i1 %3, label %13, label %4, !dbg !3540

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %5, metadata !3535, metadata !DIExpression()), !dbg !3537
  %6 = and i32 %0, 31, !dbg !3542
  call void @llvm.dbg.value(metadata i32 %6, metadata !3536, metadata !DIExpression()), !dbg !3537
  %7 = icmp eq i32 %1, 0, !dbg !3543
  %8 = shl nuw i32 1, %6, !dbg !3545
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3545
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !3546
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !3546
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !3546
  store volatile i32 %8, i32* %12, align 4, !dbg !3545
  br label %13, !dbg !3547

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3537
  ret i32 %14, !dbg !3547
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3553, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i32* %1, metadata !3554, metadata !DIExpression()), !dbg !3558
  %3 = icmp ugt i32 %0, 48, !dbg !3559
  br i1 %3, label %15, label %4, !dbg !3561

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3562
  br i1 %5, label %15, label %6, !dbg !3564

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %7, metadata !3555, metadata !DIExpression()), !dbg !3558
  %8 = and i32 %0, 31, !dbg !3566
  call void @llvm.dbg.value(metadata i32 %8, metadata !3556, metadata !DIExpression()), !dbg !3558
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3567
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !3568
  %11 = load volatile i32, i32* %10, align 4, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %11, metadata !3557, metadata !DIExpression()), !dbg !3558
  %12 = shl nuw i32 1, %8, !dbg !3569
  %13 = and i32 %11, %12, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %13, metadata !3557, metadata !DIExpression()), !dbg !3558
  %14 = lshr i32 %13, %8, !dbg !3571
  store i32 %14, i32* %1, align 4, !dbg !3572
  br label %15, !dbg !3573

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3558
  ret i32 %16, !dbg !3574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !3575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3580, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.value(metadata i8 %1, metadata !3581, metadata !DIExpression()), !dbg !3585
  %3 = icmp ugt i32 %0, 48, !dbg !3586
  br i1 %3, label %18, label %4, !dbg !3588

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !3589
  br i1 %5, label %18, label %6, !dbg !3591

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !3592
  %8 = lshr i32 %0, 3, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %8, metadata !3582, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.value(metadata i32 %0, metadata !3583, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3585
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3594
  call void @llvm.dbg.value(metadata i32 %9, metadata !3584, metadata !DIExpression()), !dbg !3585
  %10 = shl nuw nsw i32 %0, 2, !dbg !3595
  %11 = and i32 %10, 28, !dbg !3595
  %12 = shl nuw i32 15, %11, !dbg !3596
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3597
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !3598
  store volatile i32 %12, i32* %14, align 4, !dbg !3599
  %15 = shl nuw i32 %7, %11, !dbg !3600
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3601
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !3602
  store volatile i32 %15, i32* %17, align 4, !dbg !3603
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !3604
  br label %18, !dbg !3605

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3585
  ret i32 %19, !dbg !3606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3612, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32* %1, metadata !3613, metadata !DIExpression()), !dbg !3617
  %3 = icmp ugt i32 %0, 48, !dbg !3618
  br i1 %3, label %15, label %4, !dbg !3620

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3621
  br i1 %5, label %15, label %6, !dbg !3623

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %7, metadata !3614, metadata !DIExpression()), !dbg !3617
  %8 = and i32 %0, 31, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %8, metadata !3615, metadata !DIExpression()), !dbg !3617
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3626
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !3627
  %11 = load volatile i32, i32* %10, align 4, !dbg !3627
  call void @llvm.dbg.value(metadata i32 %11, metadata !3616, metadata !DIExpression()), !dbg !3617
  %12 = shl nuw i32 1, %8, !dbg !3628
  %13 = and i32 %11, %12, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %13, metadata !3616, metadata !DIExpression()), !dbg !3617
  %14 = lshr i32 %13, %8, !dbg !3630
  store i32 %14, i32* %1, align 4, !dbg !3631
  br label %15, !dbg !3632

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3617
  ret i32 %16, !dbg !3633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3638, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 %1, metadata !3639, metadata !DIExpression()), !dbg !3642
  %3 = icmp ugt i32 %0, 48, !dbg !3643
  br i1 %3, label %13, label %4, !dbg !3645

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %5, metadata !3640, metadata !DIExpression()), !dbg !3642
  %6 = and i32 %0, 31, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %6, metadata !3641, metadata !DIExpression()), !dbg !3642
  %7 = icmp eq i32 %1, 0, !dbg !3648
  %8 = shl nuw i32 1, %6, !dbg !3650
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3650
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !3651
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !3651
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !3651
  store volatile i32 %8, i32* %12, align 4, !dbg !3650
  br label %13, !dbg !3652

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3642
  ret i32 %14, !dbg !3652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3655, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32* %1, metadata !3656, metadata !DIExpression()), !dbg !3660
  %3 = icmp ugt i32 %0, 48, !dbg !3661
  br i1 %3, label %15, label %4, !dbg !3663

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3664
  br i1 %5, label %15, label %6, !dbg !3666

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %7, metadata !3657, metadata !DIExpression()), !dbg !3660
  %8 = and i32 %0, 31, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %8, metadata !3658, metadata !DIExpression()), !dbg !3660
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3669
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !3670
  %11 = load volatile i32, i32* %10, align 4, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %11, metadata !3659, metadata !DIExpression()), !dbg !3660
  %12 = shl nuw i32 1, %8, !dbg !3671
  %13 = and i32 %11, %12, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %13, metadata !3659, metadata !DIExpression()), !dbg !3660
  %14 = lshr i32 %13, %8, !dbg !3673
  store i32 %14, i32* %1, align 4, !dbg !3674
  br label %15, !dbg !3675

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3660
  ret i32 %16, !dbg !3676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #10 !dbg !3677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3679, metadata !DIExpression()), !dbg !3683
  %2 = icmp ugt i32 %0, 48, !dbg !3684
  br i1 %2, label %16, label %3, !dbg !3686

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %4, metadata !3680, metadata !DIExpression()), !dbg !3683
  %5 = and i32 %0, 31, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %5, metadata !3681, metadata !DIExpression()), !dbg !3683
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3689
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !3690
  %8 = load volatile i32, i32* %7, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %8, metadata !3682, metadata !DIExpression()), !dbg !3683
  %9 = shl nuw i32 1, %5, !dbg !3691
  %10 = and i32 %8, %9, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %10, metadata !3682, metadata !DIExpression()), !dbg !3683
  %11 = lshr i32 %10, %5, !dbg !3693
  %12 = icmp eq i32 %11, 0, !dbg !3693
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !3695
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !3695
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !3695
  store volatile i32 %9, i32* %15, align 4, !dbg !3696
  br label %16, !dbg !3697

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !3683
  ret i32 %17, !dbg !3697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !3698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3700, metadata !DIExpression()), !dbg !3703
  %2 = icmp ugt i32 %0, 48, !dbg !3704
  br i1 %2, label %9, label %3, !dbg !3706

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %4, metadata !3701, metadata !DIExpression()), !dbg !3703
  %5 = and i32 %0, 31, !dbg !3708
  call void @llvm.dbg.value(metadata i32 %5, metadata !3702, metadata !DIExpression()), !dbg !3703
  %6 = shl nuw i32 1, %5, !dbg !3709
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3710
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !3711
  store volatile i32 %6, i32* %8, align 4, !dbg !3712
  br label %9, !dbg !3713

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3703
  ret i32 %10, !dbg !3714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !3715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3717, metadata !DIExpression()), !dbg !3720
  %2 = icmp ugt i32 %0, 48, !dbg !3721
  br i1 %2, label %9, label %3, !dbg !3723

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3724
  call void @llvm.dbg.value(metadata i32 %4, metadata !3718, metadata !DIExpression()), !dbg !3720
  %5 = and i32 %0, 31, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %5, metadata !3719, metadata !DIExpression()), !dbg !3720
  %6 = shl nuw i32 1, %5, !dbg !3726
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3727
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !3728
  store volatile i32 %6, i32* %8, align 4, !dbg !3729
  br label %9, !dbg !3730

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3720
  ret i32 %10, !dbg !3731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #10 !dbg !3732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3734, metadata !DIExpression()), !dbg !3737
  %2 = icmp ugt i32 %0, 48, !dbg !3738
  br i1 %2, label %14, label %3, !dbg !3740

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3741
  %5 = icmp eq i32 %4, 0, !dbg !3741
  br i1 %5, label %14, label %6, !dbg !3742

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3743
  call void @llvm.dbg.value(metadata i32 %7, metadata !3735, metadata !DIExpression()), !dbg !3737
  %8 = and i32 %0, 31, !dbg !3744
  call void @llvm.dbg.value(metadata i32 %8, metadata !3736, metadata !DIExpression()), !dbg !3737
  %9 = shl nuw i32 1, %8, !dbg !3745
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3746
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !3747
  store volatile i32 %9, i32* %11, align 4, !dbg !3748
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3749
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !3750
  store volatile i32 %9, i32* %13, align 4, !dbg !3751
  br label %14, !dbg !3752

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3737
  ret i32 %15, !dbg !3753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #10 !dbg !3754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3756, metadata !DIExpression()), !dbg !3759
  %2 = icmp ugt i32 %0, 48, !dbg !3760
  br i1 %2, label %14, label %3, !dbg !3762

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3763
  %5 = icmp eq i32 %4, 0, !dbg !3763
  br i1 %5, label %14, label %6, !dbg !3764

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %7, metadata !3757, metadata !DIExpression()), !dbg !3759
  %8 = and i32 %0, 31, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %8, metadata !3758, metadata !DIExpression()), !dbg !3759
  %9 = shl nuw i32 1, %8, !dbg !3767
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3768
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !3769
  store volatile i32 %9, i32* %11, align 4, !dbg !3770
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3771
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !3772
  store volatile i32 %9, i32* %13, align 4, !dbg !3773
  br label %14, !dbg !3774

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3759
  ret i32 %15, !dbg !3775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #10 !dbg !3776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3778, metadata !DIExpression()), !dbg !3781
  %2 = icmp ugt i32 %0, 48, !dbg !3782
  br i1 %2, label %12, label %3, !dbg !3784

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3785
  %5 = icmp eq i32 %4, 0, !dbg !3785
  br i1 %5, label %12, label %6, !dbg !3786

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %7, metadata !3779, metadata !DIExpression()), !dbg !3781
  %8 = and i32 %0, 31, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %8, metadata !3780, metadata !DIExpression()), !dbg !3781
  %9 = shl nuw i32 1, %8, !dbg !3789
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3790
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !3791
  store volatile i32 %9, i32* %11, align 4, !dbg !3792
  br label %12, !dbg !3793

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3781
  ret i32 %13, !dbg !3794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3801, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i32 %1, metadata !3802, metadata !DIExpression()), !dbg !3803
  %3 = icmp ugt i32 %0, 5, !dbg !3804
  br i1 %3, label %7, label %4, !dbg !3806

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3807
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !3808
  store volatile i32 %1, i32* %6, align 4, !dbg !3809
  br label %7, !dbg !3810

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !3803
  ret i32 %8, !dbg !3811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !3812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3816, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8 %1, metadata !3817, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8 %2, metadata !3818, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8 %3, metadata !3819, metadata !DIExpression()), !dbg !3822
  %5 = icmp ugt i32 %0, 48, !dbg !3823
  br i1 %5, label %30, label %6, !dbg !3825

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3826
  %8 = icmp eq i32 %7, 0, !dbg !3826
  br i1 %8, label %9, label %30, !dbg !3827

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %10, metadata !3820, metadata !DIExpression()), !dbg !3822
  %11 = and i32 %0, 31, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %11, metadata !3821, metadata !DIExpression()), !dbg !3822
  %12 = icmp eq i8 %1, 0, !dbg !3830
  %13 = shl nuw i32 1, %11, !dbg !3832
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3832
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !3833
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !3833
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !3833
  store volatile i32 %13, i32* %17, align 4, !dbg !3832
  %18 = icmp eq i8 %2, 0, !dbg !3834
  %19 = shl nuw i32 1, %11, !dbg !3836
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3836
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !3837
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !3837
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !3837
  store volatile i32 %19, i32* %23, align 4, !dbg !3836
  %24 = icmp eq i8 %3, 0, !dbg !3838
  %25 = shl nuw i32 1, %11, !dbg !3840
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3840
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !3841
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !3841
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !3841
  store volatile i32 %25, i32* %29, align 4, !dbg !3840
  br label %30, !dbg !3842

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !3822
  ret i32 %31, !dbg !3842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !3843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3845, metadata !DIExpression()), !dbg !3852
  %2 = icmp ugt i32 %0, 48, !dbg !3853
  br i1 %2, label %40, label %3, !dbg !3855

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %4, metadata !3846, metadata !DIExpression()), !dbg !3852
  %5 = and i32 %0, 31, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %5, metadata !3849, metadata !DIExpression()), !dbg !3852
  %6 = lshr i32 %0, 4, !dbg !3858
  call void @llvm.dbg.value(metadata i32 %6, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i32 %0, metadata !3850, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3852
  %7 = lshr i32 %0, 3, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %7, metadata !3848, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i32 %0, metadata !3851, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3852
  %8 = shl nuw nsw i32 %0, 2, !dbg !3860
  %9 = and i32 %8, 28, !dbg !3860
  %10 = shl nuw i32 15, %9, !dbg !3861
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3862
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !3863
  store volatile i32 %10, i32* %12, align 4, !dbg !3864
  %13 = shl nuw i32 1, %5, !dbg !3865
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3866
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !3867
  store volatile i32 %13, i32* %15, align 4, !dbg !3868
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3869
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !3870
  store volatile i32 %13, i32* %17, align 4, !dbg !3871
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3872
  %19 = icmp eq i32 %18, 0, !dbg !3872
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3874
  br i1 %19, label %23, label %21, !dbg !3875

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !3876
  br label %29, !dbg !3878

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !3879
  store volatile i32 %13, i32* %24, align 4, !dbg !3881
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3882
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !3883
  store volatile i32 %13, i32* %26, align 4, !dbg !3884
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3885
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !3886
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !3874
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3887
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !3888
  store volatile i32 %13, i32* %32, align 4, !dbg !3889
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3890
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !3891
  store volatile i32 %13, i32* %34, align 4, !dbg !3892
  %35 = shl nuw nsw i32 %0, 1, !dbg !3893
  %36 = and i32 %35, 30, !dbg !3893
  %37 = shl nuw i32 3, %36, !dbg !3894
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3895
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !3896
  store volatile i32 %37, i32* %39, align 4, !dbg !3897
  br label %40, !dbg !3898

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !3852
  ret i32 %41, !dbg !3899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !3900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3902, metadata !DIExpression()), !dbg !3907
  %2 = icmp ugt i32 %0, 48, !dbg !3908
  br i1 %2, label %34, label %3, !dbg !3910

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %4, metadata !3903, metadata !DIExpression()), !dbg !3907
  %5 = and i32 %0, 31, !dbg !3912
  call void @llvm.dbg.value(metadata i32 %5, metadata !3905, metadata !DIExpression()), !dbg !3907
  %6 = lshr i32 %0, 3, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %6, metadata !3904, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %0, metadata !3906, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3907
  %7 = shl nuw nsw i32 %0, 2, !dbg !3914
  %8 = and i32 %7, 28, !dbg !3914
  %9 = shl nuw i32 15, %8, !dbg !3915
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3916
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !3917
  store volatile i32 %9, i32* %11, align 4, !dbg !3918
  %12 = shl nuw i32 1, %5, !dbg !3919
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3920
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !3921
  store volatile i32 %12, i32* %14, align 4, !dbg !3922
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3923
  %16 = icmp eq i32 %15, 0, !dbg !3923
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3925
  br i1 %16, label %22, label %18, !dbg !3926

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !3927
  store volatile i32 %12, i32* %19, align 4, !dbg !3929
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3930
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !3931
  br label %28, !dbg !3932

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !3933
  store volatile i32 %12, i32* %23, align 4, !dbg !3935
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3936
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !3937
  store volatile i32 %12, i32* %25, align 4, !dbg !3938
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3939
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !3940
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !3925
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3941
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !3942
  store volatile i32 %12, i32* %31, align 4, !dbg !3943
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3944
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !3945
  store volatile i32 %12, i32* %33, align 4, !dbg !3946
  br label %34, !dbg !3947

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !3907
  ret i32 %35, !dbg !3948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3953, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %1, metadata !3954, metadata !DIExpression()), !dbg !3957
  %3 = icmp ugt i32 %0, 48, !dbg !3958
  br i1 %3, label %14, label %4, !dbg !3960

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !3961
  call void @llvm.dbg.value(metadata i32 %5, metadata !3955, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %0, metadata !3956, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3957
  %6 = shl nuw nsw i32 %0, 1, !dbg !3962
  %7 = and i32 %6, 30, !dbg !3962
  %8 = shl nuw i32 3, %7, !dbg !3963
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3964
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !3965
  store volatile i32 %8, i32* %10, align 4, !dbg !3966
  %11 = shl i32 %1, %7, !dbg !3967
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3968
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !3969
  store volatile i32 %11, i32* %13, align 4, !dbg !3970
  br label %14, !dbg !3971

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3957
  ret i32 %15, !dbg !3972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3978, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32* %1, metadata !3979, metadata !DIExpression()), !dbg !3983
  %3 = icmp ugt i32 %0, 48, !dbg !3984
  br i1 %3, label %18, label %4, !dbg !3986

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3987
  br i1 %5, label %18, label %6, !dbg !3989

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %7, metadata !3980, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %0, metadata !3981, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3983
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3991
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !3992
  %10 = load volatile i32, i32* %9, align 4, !dbg !3992
  call void @llvm.dbg.value(metadata i32 %10, metadata !3982, metadata !DIExpression()), !dbg !3983
  %11 = shl nuw nsw i32 %0, 1, !dbg !3993
  %12 = and i32 %11, 30, !dbg !3993
  %13 = shl nuw i32 3, %12, !dbg !3994
  %14 = and i32 %10, %13, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %14, metadata !3982, metadata !DIExpression()), !dbg !3983
  %15 = lshr i32 %14, %12, !dbg !3996
  call void @llvm.dbg.value(metadata i32 %15, metadata !3982, metadata !DIExpression()), !dbg !3983
  %16 = shl i32 %15, 2, !dbg !3997
  %17 = add i32 %16, 4, !dbg !3997
  store i32 %17, i32* %1, align 4, !dbg !3998
  br label %18, !dbg !3999

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3983
  ret i32 %19, !dbg !4000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4001 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4005, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i1 %1, metadata !4006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4070
  %4 = bitcast i32* %3 to i8*, !dbg !4071
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4071
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4072
  %6 = load volatile i32, i32* %5, align 4, !dbg !4072
  %7 = icmp eq i32 %6, 2, !dbg !4074
  br i1 %7, label %9, label %8, !dbg !4075

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4076
  unreachable, !dbg !4076

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4078
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4078
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4012, metadata !DIExpression()), !dbg !4070
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %12, metadata !4007, metadata !DIExpression()), !dbg !4070
  br i1 %1, label %13, label %14, !dbg !4080

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #21, !dbg !4081
  br label %14, !dbg !4084

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4009, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %15, metadata !4068, metadata !DIExpression()), !dbg !4070
  %16 = icmp eq i32 %15, 0, !dbg !4086
  br i1 %16, label %18, label %17, !dbg !4088

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4089
  unreachable, !dbg !4089

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4091
  call void @llvm.dbg.value(metadata i32 %19, metadata !4009, metadata !DIExpression()), !dbg !4070
  %20 = icmp eq i32 %19, 0, !dbg !4093
  br i1 %20, label %43, label %21, !dbg !4094

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4095
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4095
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4010, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8* undef, metadata !4011, metadata !DIExpression()), !dbg !4070
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4096
  br i1 %24, label %25, label %26, !dbg !4098

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4099
  unreachable, !dbg !4099

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4101
  %28 = load i8*, i8** %27, align 4, !dbg !4101
  call void @llvm.dbg.value(metadata i8* %28, metadata !4011, metadata !DIExpression()), !dbg !4070
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4102
  call void %23(i32 noundef 1, i8* noundef %28) #21, !dbg !4103
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #21, !dbg !4104
  call void @llvm.dbg.value(metadata i32* %3, metadata !4009, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %31, metadata !4068, metadata !DIExpression()), !dbg !4070
  %32 = icmp eq i32 %31, 0, !dbg !4106
  br i1 %32, label %34, label %33, !dbg !4108

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4109
  unreachable, !dbg !4109

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %35, metadata !4009, metadata !DIExpression()), !dbg !4070
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4113
  %37 = load i32, i32* %36, align 4, !dbg !4113
  %38 = icmp ult i32 %35, %37, !dbg !4114
  br i1 %38, label %43, label %39, !dbg !4115

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %40, metadata !4068, metadata !DIExpression()), !dbg !4070
  %41 = icmp eq i32 %40, 0, !dbg !4118
  br i1 %41, label %43, label %42, !dbg !4120

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4121
  unreachable, !dbg !4121

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4123
  ret void, !dbg !4123
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #14

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4124 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4126, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i1 %1, metadata !4127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  %4 = bitcast i32* %3 to i8*, !dbg !4135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4135
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4136
  %6 = load volatile i32, i32* %5, align 4, !dbg !4136
  %7 = icmp eq i32 %6, 2, !dbg !4138
  br i1 %7, label %9, label %8, !dbg !4139

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4140
  unreachable, !dbg !4140

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %10, metadata !4128, metadata !DIExpression()), !dbg !4134
  br i1 %1, label %36, label %11, !dbg !4143

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4144
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4144
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4132, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i8* undef, metadata !4133, metadata !DIExpression()), !dbg !4134
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4147
  br i1 %14, label %15, label %16, !dbg !4149

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4150
  unreachable, !dbg !4150

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4152
  %18 = load i8*, i8** %17, align 4, !dbg !4152
  call void @llvm.dbg.value(metadata i8* %18, metadata !4133, metadata !DIExpression()), !dbg !4134
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4153
  tail call void %13(i32 noundef 2, i8* noundef %18) #21, !dbg !4154
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #21, !dbg !4155
  call void @llvm.dbg.value(metadata i32* %3, metadata !4131, metadata !DIExpression(DW_OP_deref)), !dbg !4134
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %21, metadata !4129, metadata !DIExpression()), !dbg !4134
  %22 = icmp eq i32 %21, 0, !dbg !4157
  br i1 %22, label %24, label %23, !dbg !4159

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4160
  unreachable, !dbg !4160

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4162
  %26 = load i32, i32* %25, align 4, !dbg !4162
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4163
  %28 = load i32, i32* %27, align 4, !dbg !4163
  %29 = sub i32 %26, %28, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %29, metadata !4130, metadata !DIExpression()), !dbg !4134
  %30 = load i32, i32* %3, align 4, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %30, metadata !4131, metadata !DIExpression()), !dbg !4134
  %31 = icmp ult i32 %30, %29, !dbg !4167
  br i1 %31, label %36, label %32, !dbg !4168

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %33, metadata !4129, metadata !DIExpression()), !dbg !4134
  %34 = icmp eq i32 %33, 0, !dbg !4171
  br i1 %34, label %36, label %35, !dbg !4173

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4174
  unreachable, !dbg !4174

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4176
  ret void, !dbg !4176
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4181, metadata !DIExpression()), !dbg !4185
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4186
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4186
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4182, metadata !DIExpression()), !dbg !4185
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4187
  %5 = icmp eq i32 %4, 0, !dbg !4187
  br i1 %5, label %6, label %14, !dbg !4189

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #21, !dbg !4190
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #21, !dbg !4192
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4193
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4193
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4183, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* undef, metadata !4184, metadata !DIExpression()), !dbg !4185
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4194
  br i1 %9, label %10, label %11, !dbg !4196

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4197
  unreachable, !dbg !4197

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4199
  %13 = load i8*, i8** %12, align 4, !dbg !4199
  call void @llvm.dbg.value(metadata i8* %13, metadata !4184, metadata !DIExpression()), !dbg !4185
  tail call void %8(i32 noundef -1, i8* noundef %13) #21, !dbg !4200
  br label %14, !dbg !4201

14:                                               ; preds = %11, %1
  ret void, !dbg !4202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4209, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.value(metadata i32 %1, metadata !4210, metadata !DIExpression()), !dbg !4214
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4215
  br i1 %3, label %4, label %16, !dbg !4217

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #20, !dbg !4218
  br i1 %5, label %6, label %16, !dbg !4219

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4220
  %8 = load volatile i32, i32* %7, align 4, !dbg !4220
  %9 = icmp eq i32 %8, 0, !dbg !4222
  br i1 %9, label %16, label %10, !dbg !4223

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %11, metadata !4212, metadata !DIExpression()), !dbg !4214
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !4225
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4226
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4226
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4213, metadata !DIExpression()), !dbg !4214
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4227
  %15 = load i32, i32* %14, align 4, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %15, metadata !4211, metadata !DIExpression()), !dbg !4214
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #21, !dbg !4228
  br label %16, !dbg !4229

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4214
  ret i32 %17, !dbg !4230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !4231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4235, metadata !DIExpression()), !dbg !4236
  %2 = icmp ult i32 %0, 4, !dbg !4237
  ret i1 %2, !dbg !4238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !4239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4243, metadata !DIExpression()), !dbg !4244
  %2 = icmp ult i32 %0, 13, !dbg !4245
  ret i1 %2, !dbg !4246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4263, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4264, metadata !DIExpression()), !dbg !4267
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4268
  br i1 %3, label %4, label %23, !dbg !4270

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #20, !dbg !4271
  br i1 %5, label %6, label %23, !dbg !4272

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4273
  %8 = load volatile i32, i32* %7, align 4, !dbg !4273
  %9 = icmp eq i32 %8, 0, !dbg !4275
  br i1 %9, label %23, label %10, !dbg !4276

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %11, metadata !4265, metadata !DIExpression()), !dbg !4267
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !4278
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4279
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4279
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4266, metadata !DIExpression()), !dbg !4267
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4280
  %15 = load i32, i32* %14, align 4, !dbg !4280
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #20, !dbg !4281
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4282
  %18 = load i32, i32* %17, align 4, !dbg !4282
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4283
  %20 = load i32, i32* %19, align 4, !dbg !4283
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4284
  %22 = load i32, i32* %21, align 4, !dbg !4284
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #21, !dbg !4285
  br label %23, !dbg !4286

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4267
  ret i32 %24, !dbg !4287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #2 !dbg !4288 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4292, metadata !DIExpression()), !dbg !4293
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4294
  %3 = load i32, i32* %2, align 4, !dbg !4294
  %4 = icmp ult i32 %3, 13, !dbg !4295
  br i1 %4, label %5, label %17, !dbg !4296

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4297
  %7 = load i32, i32* %6, align 4, !dbg !4297
  %8 = icmp ult i32 %7, 4, !dbg !4298
  br i1 %8, label %9, label %17, !dbg !4299

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4300
  %11 = load i32, i32* %10, align 4, !dbg !4300
  %12 = icmp ult i32 %11, 2, !dbg !4301
  br i1 %12, label %13, label %17, !dbg !4302

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4303
  %15 = load i32, i32* %14, align 4, !dbg !4303
  %16 = icmp ult i32 %15, 3, !dbg !4304
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4293
  ret i1 %18, !dbg !4305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4311, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4312, metadata !DIExpression()), !dbg !4319
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4320
  br i1 %3, label %4, label %41, !dbg !4322

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #20, !dbg !4323
  br i1 %5, label %6, label %41, !dbg !4324

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %7, metadata !4316, metadata !DIExpression()), !dbg !4319
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4326
  %9 = load volatile i32, i32* %8, align 4, !dbg !4326
  %10 = icmp eq i32 %9, 0, !dbg !4328
  br i1 %10, label %12, label %11, !dbg !4329

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !4330
  br label %41, !dbg !4332

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4333
  br i1 %13, label %22, label %14, !dbg !4335

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4314, metadata !DIExpression()), !dbg !4319
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4336
  store volatile i32 0, i32* %16, align 4, !dbg !4341
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4342
  store i8* null, i8** %17, align 4, !dbg !4343
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4344
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4345
  %19 = add nuw nsw i32 %15, 1, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %19, metadata !4314, metadata !DIExpression()), !dbg !4319
  %20 = icmp eq i32 %19, 4, !dbg !4347
  br i1 %20, label %21, label %14, !dbg !4348, !llvm.loop !4349

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4351
  br label %22, !dbg !4352

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4353
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !4354
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4355
  %24 = load i32, i32* %23, align 4, !dbg !4355
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #21, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %25, metadata !4317, metadata !DIExpression()), !dbg !4319
  %26 = icmp eq i32 %25, 0, !dbg !4357
  br i1 %26, label %28, label %27, !dbg !4359

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4360
  unreachable, !dbg !4360

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4362
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4362
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4313, metadata !DIExpression()), !dbg !4319
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #21, !dbg !4363
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4364
  %32 = load i32, i32* %31, align 4, !dbg !4364
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4365
  %34 = load i32, i32* %33, align 4, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %34, metadata !4315, metadata !DIExpression()), !dbg !4319
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #21, !dbg !4366
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4367
  %36 = load i32, i32* %35, align 4, !dbg !4367
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4368
  %38 = load i32, i32* %37, align 4, !dbg !4368
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4369
  %40 = load i32, i32* %39, align 4, !dbg !4369
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #21, !dbg !4370
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #21, !dbg !4371
  br label %41, !dbg !4372

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4319
  ret i32 %42, !dbg !4373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4378, metadata !DIExpression()), !dbg !4385
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4386
  br i1 %2, label %3, label %54, !dbg !4388

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %4, metadata !4382, metadata !DIExpression()), !dbg !4385
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4390
  %6 = load volatile i32, i32* %5, align 4, !dbg !4390
  %7 = icmp eq i32 %6, 0, !dbg !4392
  br i1 %7, label %52, label %8, !dbg !4393

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4394
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4394
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4379, metadata !DIExpression()), !dbg !4385
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4395
  %11 = load volatile i32, i32* %5, align 4, !dbg !4396
  %12 = icmp eq i32 %11, 2, !dbg !4398
  br i1 %12, label %13, label %43, !dbg !4399

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %14, metadata !4380, metadata !DIExpression()), !dbg !4385
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4402
  call void @llvm.dbg.value(metadata i32 %15, metadata !4381, metadata !DIExpression()), !dbg !4385
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #21, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %16, metadata !4383, metadata !DIExpression()), !dbg !4385
  %17 = icmp eq i32 %16, 0, !dbg !4404
  br i1 %17, label %19, label %18, !dbg !4406

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4407
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4409
  unreachable, !dbg !4409

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #21, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %20, metadata !4383, metadata !DIExpression()), !dbg !4385
  %21 = icmp eq i32 %20, 0, !dbg !4411
  br i1 %21, label %23, label %22, !dbg !4413

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4414
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4416
  unreachable, !dbg !4416

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #21, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %24, metadata !4383, metadata !DIExpression()), !dbg !4385
  %25 = icmp eq i32 %24, 0, !dbg !4418
  br i1 %25, label %27, label %26, !dbg !4420

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4421
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4423
  unreachable, !dbg !4423

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #21, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %28, metadata !4383, metadata !DIExpression()), !dbg !4385
  %29 = icmp eq i32 %28, 0, !dbg !4425
  br i1 %29, label %31, label %30, !dbg !4427

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4428
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4430
  unreachable, !dbg !4430

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #21, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %32, metadata !4383, metadata !DIExpression()), !dbg !4385
  %33 = icmp eq i32 %32, 0, !dbg !4432
  br i1 %33, label %35, label %34, !dbg !4434

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4435
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4437
  unreachable, !dbg !4437

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #21, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %36, metadata !4383, metadata !DIExpression()), !dbg !4385
  %37 = icmp eq i32 %36, 0, !dbg !4439
  br i1 %37, label %39, label %38, !dbg !4441

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4442
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4444
  unreachable, !dbg !4444

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4445
  %41 = load i32, i32* %40, align 4, !dbg !4445
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #21, !dbg !4446
  br label %43, !dbg !4447

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4448
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4449
  %45 = load i32, i32* %44, align 4, !dbg !4449
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #21, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %46, metadata !4384, metadata !DIExpression()), !dbg !4385
  %47 = icmp eq i32 %46, 0, !dbg !4451
  br i1 %47, label %49, label %48, !dbg !4453

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4454
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4456
  unreachable, !dbg !4456

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4457
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !4458
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4459
  store i8* null, i8** %51, align 4, !dbg !4460
  store volatile i32 0, i32* %5, align 4, !dbg !4461
  br label %52, !dbg !4462

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4385
  br label %54, !dbg !4463

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4385
  ret i32 %55, !dbg !4463
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4468, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i8 %1, metadata !4469, metadata !DIExpression()), !dbg !4471
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4472
  br i1 %3, label %4, label %11, !dbg !4474

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4475
  %6 = load volatile i32, i32* %5, align 4, !dbg !4475
  %7 = icmp eq i32 %6, 1, !dbg !4477
  br i1 %7, label %8, label %11, !dbg !4478

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4479
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4479
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4470, metadata !DIExpression()), !dbg !4471
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #21, !dbg !4480
  br label %11, !dbg !4481

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !4481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4488, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i8* %1, metadata !4489, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i32 %2, metadata !4490, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i32 0, metadata !4491, metadata !DIExpression()), !dbg !4492
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4493
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4495
  br i1 %6, label %7, label %20, !dbg !4495

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4496
  %9 = load volatile i32, i32* %8, align 4, !dbg !4496
  %10 = icmp ne i32 %9, 1, !dbg !4498
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4499
  call void @llvm.dbg.value(metadata i32 0, metadata !4491, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i8* %1, metadata !4489, metadata !DIExpression()), !dbg !4492
  br i1 %12, label %20, label %13, !dbg !4499

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4491, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i8* %15, metadata !4489, metadata !DIExpression()), !dbg !4492
  %16 = load i8, i8* %15, align 1, !dbg !4500
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #20, !dbg !4504
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !4505
  call void @llvm.dbg.value(metadata i8* %17, metadata !4489, metadata !DIExpression()), !dbg !4492
  %18 = add nuw i32 %14, 1, !dbg !4506
  call void @llvm.dbg.value(metadata i32 %18, metadata !4491, metadata !DIExpression()), !dbg !4492
  %19 = icmp eq i32 %18, %2, !dbg !4507
  br i1 %19, label %20, label %13, !dbg !4508, !llvm.loop !4509

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4492
  ret i32 %21, !dbg !4511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4512 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4514, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8* %1, metadata !4515, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %2, metadata !4516, metadata !DIExpression()), !dbg !4522
  %5 = bitcast i32* %4 to i8*, !dbg !4523
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4523
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4524
  %7 = xor i1 %6, true, !dbg !4526
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4526
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4526
  br i1 %11, label %45, label %12, !dbg !4526

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4527
  %14 = load volatile i32, i32* %13, align 4, !dbg !4527
  %15 = icmp eq i32 %14, 2, !dbg !4529
  br i1 %15, label %16, label %45, !dbg !4530

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4531
  call void @llvm.dbg.value(metadata i32 %17, metadata !4517, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32* %4, metadata !4520, metadata !DIExpression(DW_OP_deref)), !dbg !4522
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !4532
  call void @llvm.dbg.value(metadata i32 %18, metadata !4521, metadata !DIExpression()), !dbg !4522
  %19 = icmp eq i32 %18, 0, !dbg !4533
  br i1 %19, label %21, label %20, !dbg !4535

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4536
  unreachable, !dbg !4536

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %22, metadata !4520, metadata !DIExpression()), !dbg !4522
  %23 = icmp ult i32 %22, %2, !dbg !4540
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4519, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 0, metadata !4518, metadata !DIExpression()), !dbg !4522
  %25 = icmp eq i32 %24, 0, !dbg !4541
  br i1 %25, label %38, label %28, !dbg !4544

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !4518, metadata !DIExpression()), !dbg !4522
  %27 = icmp eq i32 %34, %24, !dbg !4541
  br i1 %27, label %36, label %28, !dbg !4544, !llvm.loop !4545

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4518, metadata !DIExpression()), !dbg !4522
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4547
  %31 = load i8, i8* %30, align 1, !dbg !4547
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #21, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %32, metadata !4521, metadata !DIExpression()), !dbg !4522
  %33 = icmp eq i32 %32, 0, !dbg !4550
  %34 = add nuw i32 %29, 1, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %34, metadata !4518, metadata !DIExpression()), !dbg !4522
  br i1 %33, label %26, label %35, !dbg !4553

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4554
  unreachable, !dbg !4554

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !4556
  br label %38, !dbg !4556

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %39, metadata !4520, metadata !DIExpression()), !dbg !4522
  %40 = icmp eq i32 %24, %39, !dbg !4558
  br i1 %40, label %41, label %45, !dbg !4559

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %42, metadata !4521, metadata !DIExpression()), !dbg !4522
  %43 = icmp eq i32 %42, 0, !dbg !4562
  br i1 %43, label %45, label %44, !dbg !4564

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4565
  unreachable, !dbg !4565

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !4522
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4567
  ret i32 %46, !dbg !4567
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !4568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4572, metadata !DIExpression()), !dbg !4575
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4576
  br i1 %2, label %3, label %11, !dbg !4578

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4579
  %5 = load volatile i32, i32* %4, align 4, !dbg !4579
  %6 = icmp eq i32 %5, 1, !dbg !4581
  br i1 %6, label %7, label %11, !dbg !4582

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4583
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4583
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4574, metadata !DIExpression()), !dbg !4575
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4584
  call void @llvm.dbg.value(metadata i8 %10, metadata !4573, metadata !DIExpression()), !dbg !4575
  br label %11, !dbg !4585

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4575
  ret i8 %12, !dbg !4586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !4587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4591, metadata !DIExpression()), !dbg !4594
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4595
  br i1 %2, label %3, label %11, !dbg !4597

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4598
  %5 = load volatile i32, i32* %4, align 4, !dbg !4598
  %6 = icmp eq i32 %5, 1, !dbg !4600
  br i1 %6, label %7, label %11, !dbg !4601

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4602
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4602
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4593, metadata !DIExpression()), !dbg !4594
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4603
  call void @llvm.dbg.value(metadata i32 %10, metadata !4592, metadata !DIExpression()), !dbg !4594
  br label %11, !dbg !4604

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4594
  ret i32 %12, !dbg !4605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4610, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i8* %1, metadata !4611, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i32 %2, metadata !4612, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i8* %1, metadata !4614, metadata !DIExpression()), !dbg !4615
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4616
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4618
  br i1 %6, label %7, label %19, !dbg !4618

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4619
  %9 = load volatile i32, i32* %8, align 4, !dbg !4619
  %10 = icmp ne i32 %9, 1, !dbg !4621
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4613, metadata !DIExpression()), !dbg !4615
  br i1 %12, label %19, label %13, !dbg !4622

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4613, metadata !DIExpression()), !dbg !4615
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #20, !dbg !4623
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !4627
  store i8 %15, i8* %16, align 1, !dbg !4628
  %17 = add nuw i32 %14, 1, !dbg !4629
  call void @llvm.dbg.value(metadata i32 %17, metadata !4613, metadata !DIExpression()), !dbg !4615
  %18 = icmp eq i32 %17, %2, !dbg !4630
  br i1 %18, label %19, label %13, !dbg !4631, !llvm.loop !4632

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4615
  ret i32 %20, !dbg !4634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4635 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4637, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i8* %1, metadata !4638, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i32 %2, metadata !4639, metadata !DIExpression()), !dbg !4645
  %5 = bitcast i32* %4 to i8*, !dbg !4646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4646
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4647
  %7 = xor i1 %6, true, !dbg !4649
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4649
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4649
  br i1 %11, label %44, label %12, !dbg !4649

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4650
  %14 = load volatile i32, i32* %13, align 4, !dbg !4650
  %15 = icmp eq i32 %14, 2, !dbg !4652
  br i1 %15, label %16, label %44, !dbg !4653

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4654
  call void @llvm.dbg.value(metadata i32 %17, metadata !4640, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i32* %4, metadata !4642, metadata !DIExpression(DW_OP_deref)), !dbg !4645
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %18, metadata !4644, metadata !DIExpression()), !dbg !4645
  %19 = icmp eq i32 %18, 0, !dbg !4656
  br i1 %19, label %21, label %20, !dbg !4658

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4659
  unreachable, !dbg !4659

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4661
  call void @llvm.dbg.value(metadata i32 %22, metadata !4642, metadata !DIExpression()), !dbg !4645
  %23 = icmp ult i32 %22, %2, !dbg !4663
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4641, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.value(metadata i32 0, metadata !4643, metadata !DIExpression()), !dbg !4645
  %25 = icmp eq i32 %24, 0, !dbg !4664
  br i1 %25, label %37, label %28, !dbg !4667

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !4643, metadata !DIExpression()), !dbg !4645
  %27 = icmp eq i32 %33, %24, !dbg !4664
  br i1 %27, label %35, label %28, !dbg !4667, !llvm.loop !4668

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4643, metadata !DIExpression()), !dbg !4645
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4670
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #21, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %31, metadata !4644, metadata !DIExpression()), !dbg !4645
  %32 = icmp eq i32 %31, 0, !dbg !4673
  %33 = add nuw i32 %29, 1, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %33, metadata !4643, metadata !DIExpression()), !dbg !4645
  br i1 %32, label %26, label %34, !dbg !4676

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4677
  unreachable, !dbg !4677

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !4679
  br label %37, !dbg !4679

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %38, metadata !4642, metadata !DIExpression()), !dbg !4645
  %39 = icmp eq i32 %24, %38, !dbg !4681
  br i1 %39, label %40, label %44, !dbg !4682

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %41, metadata !4644, metadata !DIExpression()), !dbg !4645
  %42 = icmp eq i32 %41, 0, !dbg !4685
  br i1 %42, label %44, label %43, !dbg !4687

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4688
  unreachable, !dbg !4688

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !4645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4690
  ret i32 %45, !dbg !4690
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !4691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4695, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4696, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata i8* %2, metadata !4697, metadata !DIExpression()), !dbg !4703
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4704
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !4706
  br i1 %6, label %7, label %39, !dbg !4706

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %8, metadata !4700, metadata !DIExpression()), !dbg !4703
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4708
  %10 = load volatile i32, i32* %9, align 4, !dbg !4708
  %11 = icmp eq i32 %10, 1, !dbg !4710
  br i1 %11, label %12, label %37, !dbg !4711

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %13, metadata !4698, metadata !DIExpression()), !dbg !4703
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %14, metadata !4699, metadata !DIExpression()), !dbg !4703
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4714
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !4715
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4716
  store i8* %2, i8** %16, align 4, !dbg !4717
  %17 = shl i32 %0, 1, !dbg !4718
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !4719
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #21, !dbg !4720
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !4721
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #21, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %20, metadata !4701, metadata !DIExpression()), !dbg !4703
  %21 = icmp eq i32 %20, 0, !dbg !4723
  br i1 %21, label %23, label %22, !dbg !4725

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4726
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4728
  unreachable, !dbg !4728

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !4729
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !4730
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #21, !dbg !4731
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !4732
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #21, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %27, metadata !4701, metadata !DIExpression()), !dbg !4703
  %28 = icmp eq i32 %27, 0, !dbg !4734
  br i1 %28, label %30, label %29, !dbg !4736

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4737
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4739
  unreachable, !dbg !4739

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4740
  %32 = load i32, i32* %31, align 4, !dbg !4740
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #21, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %33, metadata !4702, metadata !DIExpression()), !dbg !4703
  %34 = icmp eq i32 %33, 0, !dbg !4742
  br i1 %34, label %36, label %35, !dbg !4744

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4745
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4747
  unreachable, !dbg !4747

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #20, !dbg !4748
  store volatile i32 2, i32* %9, align 4, !dbg !4749
  br label %37, !dbg !4750

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4703
  br label %39, !dbg !4751

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !4703
  ret i32 %40, !dbg !4751
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !4752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4757, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %1, metadata !4758, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %1, metadata !4759, metadata !DIExpression()), !dbg !4760
  %3 = load i8, i8* %1, align 4, !dbg !4761, !range !2535
  %4 = icmp eq i8 %3, 0, !dbg !4761
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !4763
  %6 = bitcast i8* %5 to i32*, !dbg !4763
  %7 = load i32, i32* %6, align 4, !dbg !4763
  br i1 %4, label %9, label %8, !dbg !4764

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4759, metadata !DIExpression()), !dbg !4760
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #20, !dbg !4765
  br label %10, !dbg !4767

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #20, !dbg !4768
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !4770
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !4771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4773, metadata !DIExpression()), !dbg !4778
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4779
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4779
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4774, metadata !DIExpression()), !dbg !4778
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %4, metadata !4775, metadata !DIExpression()), !dbg !4778
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %5, metadata !4776, metadata !DIExpression()), !dbg !4778
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4782
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4783
  %7 = load i32, i32* %6, align 4, !dbg !4783
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #21, !dbg !4784
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #21, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %9, metadata !4777, metadata !DIExpression()), !dbg !4778
  %10 = icmp eq i32 %9, 0, !dbg !4786
  br i1 %10, label %12, label %11, !dbg !4788

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4789
  unreachable, !dbg !4789

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #21, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %13, metadata !4777, metadata !DIExpression()), !dbg !4778
  %14 = icmp eq i32 %13, 0, !dbg !4792
  br i1 %14, label %16, label %15, !dbg !4794

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4795
  unreachable, !dbg !4795

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #21, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %17, metadata !4777, metadata !DIExpression()), !dbg !4778
  %18 = icmp eq i32 %17, 0, !dbg !4798
  br i1 %18, label %20, label %19, !dbg !4800

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4801
  unreachable, !dbg !4801

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #21, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %21, metadata !4777, metadata !DIExpression()), !dbg !4778
  %22 = icmp eq i32 %21, 0, !dbg !4804
  br i1 %22, label %24, label %23, !dbg !4806

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4807
  unreachable, !dbg !4807

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4809
  ret void, !dbg !4810
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !4811 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4813, metadata !DIExpression()), !dbg !4817
  %3 = bitcast i32* %2 to i8*, !dbg !4818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4818
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4819
  br i1 %4, label %5, label %16, !dbg !4821

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4822
  %7 = load volatile i32, i32* %6, align 4, !dbg !4822
  %8 = icmp eq i32 %7, 2, !dbg !4824
  br i1 %8, label %9, label %16, !dbg !4825

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %10, metadata !4814, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.value(metadata i32* %2, metadata !4815, metadata !DIExpression(DW_OP_deref)), !dbg !4817
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %11, metadata !4816, metadata !DIExpression()), !dbg !4817
  %12 = icmp eq i32 %11, 0, !dbg !4828
  br i1 %12, label %14, label %13, !dbg !4830

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4831
  unreachable, !dbg !4831

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %15, metadata !4815, metadata !DIExpression()), !dbg !4817
  br label %16, !dbg !4834

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !4817
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4835
  ret i32 %17, !dbg !4835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !4836 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4838, metadata !DIExpression()), !dbg !4842
  %3 = bitcast i32* %2 to i8*, !dbg !4843
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4843
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4844
  br i1 %4, label %5, label %16, !dbg !4846

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4847
  %7 = load volatile i32, i32* %6, align 4, !dbg !4847
  %8 = icmp eq i32 %7, 2, !dbg !4849
  br i1 %8, label %9, label %16, !dbg !4850

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %10, metadata !4839, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32* %2, metadata !4840, metadata !DIExpression(DW_OP_deref)), !dbg !4842
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %11, metadata !4841, metadata !DIExpression()), !dbg !4842
  %12 = icmp eq i32 %11, 0, !dbg !4853
  br i1 %12, label %14, label %13, !dbg !4855

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4856
  unreachable, !dbg !4856

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %15, metadata !4840, metadata !DIExpression()), !dbg !4842
  br label %16, !dbg !4859

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !4842
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4860
  ret i32 %17, !dbg !4860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !4861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4863, metadata !DIExpression()), !dbg !4865
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4866
  br i1 %2, label %3, label %10, !dbg !4868

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4869
  %5 = load volatile i32, i32* %4, align 4, !dbg !4869
  %6 = icmp eq i32 %5, 0, !dbg !4871
  br i1 %6, label %10, label %7, !dbg !4872

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4873
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4873
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4864, metadata !DIExpression()), !dbg !4865
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4874
  br label %10, !dbg !4875

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !4865
  ret i32 %11, !dbg !4876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !4877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4881, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8 %1, metadata !4882, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8 %2, metadata !4883, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8 %3, metadata !4884, metadata !DIExpression()), !dbg !4886
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4887
  br i1 %5, label %6, label %13, !dbg !4889

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4890
  %8 = load volatile i32, i32* %7, align 4, !dbg !4890
  %9 = icmp eq i32 %8, 0, !dbg !4892
  br i1 %9, label %13, label %10, !dbg !4893

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4894
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !4894
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !4885, metadata !DIExpression()), !dbg !4886
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #21, !dbg !4895
  br label %13, !dbg !4896

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !4886
  ret i32 %14, !dbg !4897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !4898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4900, metadata !DIExpression()), !dbg !4902
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4903
  br i1 %2, label %3, label %10, !dbg !4905

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4906
  %5 = load volatile i32, i32* %4, align 4, !dbg !4906
  %6 = icmp eq i32 %5, 0, !dbg !4908
  br i1 %6, label %10, label %7, !dbg !4909

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4910
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4910
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4901, metadata !DIExpression()), !dbg !4902
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4911
  br label %10, !dbg !4912

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !4902
  ret i32 %11, !dbg !4913
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4914 {
  %3 = alloca %struct.vdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4920, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !4921, metadata !DIExpression()), !dbg !4932
  %4 = bitcast %struct.vdma_config_t* %3 to i8*, !dbg !4933
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !4933
  call void @llvm.dbg.declare(metadata %struct.vdma_config_t* %3, metadata !4923, metadata !DIExpression()), !dbg !4934
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4935
  br i1 %5, label %6, label %101, !dbg !4937

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !4938
  %8 = load i8*, i8** %7, align 4, !dbg !4938
  %9 = icmp eq i8* %8, null, !dbg !4940
  br i1 %9, label %101, label %10, !dbg !4941

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !4942
  %12 = load i8*, i8** %11, align 4, !dbg !4942
  %13 = icmp eq i8* %12, null, !dbg !4943
  br i1 %13, label %101, label %14, !dbg !4944

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !4945
  %16 = load i32, i32* %15, align 4, !dbg !4945
  %17 = icmp ugt i32 %16, 131071, !dbg !4947
  br i1 %17, label %101, label %18, !dbg !4948

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !4949
  %20 = load i32, i32* %19, align 4, !dbg !4949
  %21 = icmp ugt i32 %20, 131071, !dbg !4950
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !4951
  br i1 %23, label %101, label %24, !dbg !4951

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !4952
  %26 = load i32, i32* %25, align 4, !dbg !4952
  %27 = icmp ugt i32 %26, 131071, !dbg !4954
  br i1 %27, label %101, label %28, !dbg !4955

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !4956
  %30 = load i32, i32* %29, align 4, !dbg !4956
  %31 = icmp ugt i32 %30, 131071, !dbg !4957
  br i1 %31, label %101, label %32, !dbg !4958

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !4959
  %34 = load i32, i32* %33, align 4, !dbg !4959
  %35 = icmp ugt i32 %34, 131071, !dbg !4960
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !4961
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !4961
  br i1 %39, label %101, label %40, !dbg !4961

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4962
  %42 = load volatile i32, i32* %41, align 4, !dbg !4962
  %43 = icmp eq i32 %42, 1, !dbg !4964
  br i1 %43, label %44, label %101, !dbg !4965

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4966
  call void @llvm.dbg.value(metadata i32 %45, metadata !4929, metadata !DIExpression()), !dbg !4932
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %46, metadata !4930, metadata !DIExpression()), !dbg !4932
  %47 = tail call i32 @vdma_init(i32 noundef %45) #21, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %47, metadata !4931, metadata !DIExpression()), !dbg !4932
  %48 = icmp eq i32 %47, 0, !dbg !4969
  br i1 %48, label %50, label %49, !dbg !4971

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4972
  unreachable, !dbg !4972

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !4974
  %52 = ptrtoint i8* %51 to i32, !dbg !4975
  %53 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 0, !dbg !4976
  store i32 %52, i32* %53, align 4, !dbg !4977
  %54 = load i32, i32* %15, align 4, !dbg !4978
  %55 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 1, !dbg !4979
  store i32 %54, i32* %55, align 4, !dbg !4980
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %56, metadata !4931, metadata !DIExpression()), !dbg !4932
  %57 = icmp eq i32 %56, 0, !dbg !4982
  br i1 %57, label %59, label %58, !dbg !4984

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4985
  unreachable, !dbg !4985

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !4987
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #21, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %61, metadata !4931, metadata !DIExpression()), !dbg !4932
  %62 = icmp eq i32 %61, 0, !dbg !4989
  br i1 %62, label %64, label %63, !dbg !4991

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4992
  unreachable, !dbg !4992

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #21, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %65, metadata !4931, metadata !DIExpression()), !dbg !4932
  %66 = icmp eq i32 %65, 0, !dbg !4995
  br i1 %66, label %68, label %67, !dbg !4997

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4998
  unreachable, !dbg !4998

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5000
  %70 = ptrtoint i8* %69 to i32, !dbg !5001
  store i32 %70, i32* %53, align 4, !dbg !5002
  %71 = load i32, i32* %25, align 4, !dbg !5003
  store i32 %71, i32* %55, align 4, !dbg !5004
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %72, metadata !4931, metadata !DIExpression()), !dbg !4932
  %73 = icmp eq i32 %72, 0, !dbg !5006
  br i1 %73, label %75, label %74, !dbg !5008

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5009
  unreachable, !dbg !5009

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5011
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #21, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %77, metadata !4931, metadata !DIExpression()), !dbg !4932
  %78 = icmp eq i32 %77, 0, !dbg !5013
  br i1 %78, label %80, label %79, !dbg !5015

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5016
  unreachable, !dbg !5016

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5018
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #21, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %82, metadata !4931, metadata !DIExpression()), !dbg !4932
  %83 = icmp eq i32 %82, 0, !dbg !5020
  br i1 %83, label %85, label %84, !dbg !5022

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5023
  unreachable, !dbg !5023

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #21, !dbg !5025
  call void @llvm.dbg.value(metadata i32 %86, metadata !4922, metadata !DIExpression()), !dbg !4932
  %87 = load i8*, i8** %7, align 4, !dbg !5026
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5027
  store i8* %87, i8** %88, align 4, !dbg !5028
  %89 = load i32, i32* %15, align 4, !dbg !5029
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5030
  store i32 %89, i32* %90, align 4, !dbg !5031
  %91 = load i32, i32* %19, align 4, !dbg !5032
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5033
  store i32 %91, i32* %92, align 4, !dbg !5034
  %93 = load i32, i32* %33, align 4, !dbg !5035
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5036
  store i32 %93, i32* %94, align 4, !dbg !5037
  %95 = load i8*, i8** %11, align 4, !dbg !5038
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5039
  store i8* %95, i8** %96, align 4, !dbg !5040
  %97 = load i32, i32* %25, align 4, !dbg !5041
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5042
  store i32 %97, i32* %98, align 4, !dbg !5043
  %99 = load i32, i32* %29, align 4, !dbg !5044
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5045
  store i32 %99, i32* %100, align 4, !dbg !5046
  call void @restore_interrupt_mask(i32 noundef %86) #21, !dbg !5047
  br label %101, !dbg !5048

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !4932
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5049
  ret i32 %102, !dbg !5049
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.vdma_config_t* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5050 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5109, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %1, metadata !5110, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5119, metadata !DIExpression()), !dbg !5125
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5126
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5126
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5123, metadata !DIExpression()), !dbg !5127
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5127
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5127
  store i32 1, i32* %5, align 4, !dbg !5127
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5127
  store i32 1, i32* %6, align 4, !dbg !5127
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5127
  store i32 1, i32* %7, align 4, !dbg !5127
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5127
  store i32 1, i32* %8, align 4, !dbg !5127
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5127
  store i32 1, i32* %9, align 4, !dbg !5127
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5128
  store volatile i32 0, i32* %10, align 4, !dbg !5129
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5130
  store volatile i32 0, i32* %11, align 4, !dbg !5131
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5132
  store volatile i32 0, i32* %12, align 4, !dbg !5133
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !5134
  br i1 %13, label %14, label %17, !dbg !5136

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !5137
  %16 = mul i32 %15, 1000, !dbg !5139
  call void @llvm.dbg.value(metadata i32 %16, metadata !5111, metadata !DIExpression()), !dbg !5124
  br label %17, !dbg !5140

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5141
  call void @llvm.dbg.value(metadata i32 %18, metadata !5111, metadata !DIExpression()), !dbg !5124
  %19 = shl i32 %1, 8, !dbg !5142
  %20 = udiv i32 %18, %19, !dbg !5143
  call void @llvm.dbg.value(metadata i32 %20, metadata !5112, metadata !DIExpression()), !dbg !5124
  %21 = mul i32 %18, 10, !dbg !5144
  %22 = udiv i32 %21, %19, !dbg !5145
  %23 = urem i32 %22, 10, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %23, metadata !5113, metadata !DIExpression()), !dbg !5124
  %24 = icmp ne i32 %23, 0, !dbg !5147
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5149
  %27 = zext i1 %26 to i32, !dbg !5149
  %28 = add i32 %20, %27, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %28, metadata !5112, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %28, metadata !5115, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 undef, metadata !5116, metadata !DIExpression()), !dbg !5124
  br label %29, !dbg !5150

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5124
  %31 = mul i32 %30, %1, !dbg !5124
  %32 = udiv i32 %18, %31, !dbg !5124
  call void @llvm.dbg.value(metadata i32 %32, metadata !5116, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %30, metadata !5115, metadata !DIExpression()), !dbg !5124
  %33 = icmp ugt i32 %32, 256, !dbg !5151
  %34 = add i32 %30, 1, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %34, metadata !5115, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 undef, metadata !5116, metadata !DIExpression()), !dbg !5124
  br i1 %33, label %29, label %35, !dbg !5150, !llvm.loop !5154

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5156
  %37 = urem i32 %36, 10, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %37, metadata !5114, metadata !DIExpression()), !dbg !5124
  %38 = add nsw i32 %32, -1, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %38, metadata !5116, metadata !DIExpression()), !dbg !5124
  %39 = add nsw i32 %32, -2, !dbg !5159
  %40 = lshr i32 %39, 1, !dbg !5160
  call void @llvm.dbg.value(metadata i32 %40, metadata !5117, metadata !DIExpression()), !dbg !5124
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5161
  store volatile i32 3, i32* %41, align 4, !dbg !5162
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5163
  %43 = load volatile i32, i32* %42, align 4, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %43, metadata !5118, metadata !DIExpression()), !dbg !5124
  %44 = or i32 %43, 128, !dbg !5164
  store volatile i32 %44, i32* %42, align 4, !dbg !5165
  %45 = and i32 %30, 255, !dbg !5166
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5167
  store volatile i32 %45, i32* %46, align 4, !dbg !5168
  %47 = lshr i32 %30, 8, !dbg !5169
  %48 = and i32 %47, 255, !dbg !5170
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5171
  store volatile i32 %48, i32* %49, align 4, !dbg !5172
  store volatile i32 %43, i32* %42, align 4, !dbg !5173
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5174
  store volatile i32 %38, i32* %50, align 4, !dbg !5175
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5176
  store volatile i32 %40, i32* %51, align 4, !dbg !5177
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5178
  %53 = load i32, i32* %52, align 4, !dbg !5178
  store volatile i32 %53, i32* %11, align 4, !dbg !5179
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5180
  %55 = load i32, i32* %54, align 4, !dbg !5180
  store volatile i32 %55, i32* %12, align 4, !dbg !5181
  %56 = icmp ugt i32 %1, 2999999, !dbg !5182
  br i1 %56, label %57, label %59, !dbg !5184

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5185
  store volatile i32 18, i32* %58, align 4, !dbg !5187
  br label %59, !dbg !5188

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5189
  ret void, !dbg !5189
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #10 !dbg !5190 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5194, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %1, metadata !5195, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %2, metadata !5196, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %3, metadata !5197, metadata !DIExpression()), !dbg !5199
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5200
  %6 = load volatile i32, i32* %5, align 4, !dbg !5200
  call void @llvm.dbg.value(metadata i32 %6, metadata !5198, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5199
  store volatile i32 128, i32* %5, align 4, !dbg !5201
  %7 = trunc i32 %6 to i16, !dbg !5202
  %8 = and i16 %7, -4, !dbg !5202
  call void @llvm.dbg.value(metadata i16 %7, metadata !5198, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5199
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5203

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5204
  call void @llvm.dbg.value(metadata i16 %10, metadata !5198, metadata !DIExpression()), !dbg !5199
  br label %15, !dbg !5206

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5207
  call void @llvm.dbg.value(metadata i16 %12, metadata !5198, metadata !DIExpression()), !dbg !5199
  br label %15, !dbg !5208

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5209
  call void @llvm.dbg.value(metadata i16 %14, metadata !5198, metadata !DIExpression()), !dbg !5199
  br label %15, !dbg !5210

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5199
  call void @llvm.dbg.value(metadata i16 %16, metadata !5198, metadata !DIExpression()), !dbg !5199
  %17 = and i16 %16, -61, !dbg !5211
  call void @llvm.dbg.value(metadata i16 %16, metadata !5198, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5199
  %18 = icmp eq i32 %2, 1, !dbg !5212
  %19 = select i1 %18, i16 4, i16 0, !dbg !5212
  %20 = or i16 %17, %19, !dbg !5212
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5198, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5199
  call void @llvm.dbg.value(metadata i16 %20, metadata !5198, metadata !DIExpression()), !dbg !5199
  %21 = icmp eq i32 %3, 2, !dbg !5213
  %22 = or i16 %20, 16, !dbg !5213
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5213
  call void @llvm.dbg.value(metadata i16 %23, metadata !5198, metadata !DIExpression()), !dbg !5199
  %24 = zext i16 %23 to i32, !dbg !5214
  store volatile i32 %24, i32* %5, align 4, !dbg !5215
  ret void, !dbg !5216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #10 !dbg !5217 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5221, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i8 %1, metadata !5222, metadata !DIExpression()), !dbg !5224
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5225

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5226
  call void @llvm.dbg.value(metadata i32 %5, metadata !5223, metadata !DIExpression()), !dbg !5224
  %6 = and i32 %5, 32, !dbg !5228
  %7 = icmp eq i32 %6, 0, !dbg !5228
  br i1 %7, label %4, label %8, !dbg !5230, !llvm.loop !5231

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5233
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5235
  store volatile i32 %9, i32* %10, align 4, !dbg !5236
  ret void, !dbg !5237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5238 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5242, metadata !DIExpression()), !dbg !5245
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5246

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5247
  call void @llvm.dbg.value(metadata i32 %4, metadata !5243, metadata !DIExpression()), !dbg !5245
  %5 = and i32 %4, 1, !dbg !5249
  %6 = icmp eq i32 %5, 0, !dbg !5249
  br i1 %6, label %3, label %7, !dbg !5251, !llvm.loop !5252

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5254
  %9 = load volatile i32, i32* %8, align 4, !dbg !5254
  %10 = trunc i32 %9 to i8, !dbg !5256
  call void @llvm.dbg.value(metadata i8 %10, metadata !5244, metadata !DIExpression()), !dbg !5245
  ret i8 %10, !dbg !5257
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5258 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5262, metadata !DIExpression()), !dbg !5265
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5266
  %3 = load volatile i32, i32* %2, align 4, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %3, metadata !5263, metadata !DIExpression()), !dbg !5265
  %4 = and i32 %3, 1, !dbg !5267
  %5 = icmp eq i32 %4, 0, !dbg !5267
  br i1 %5, label %9, label %6, !dbg !5269

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5270
  %8 = load volatile i32, i32* %7, align 4, !dbg !5270
  call void @llvm.dbg.value(metadata i32 %8, metadata !5264, metadata !DIExpression()), !dbg !5265
  br label %9, !dbg !5272

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5273
  call void @llvm.dbg.value(metadata i32 %10, metadata !5264, metadata !DIExpression()), !dbg !5265
  ret i32 %10, !dbg !5274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5275 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5279, metadata !DIExpression()), !dbg !5282
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5283
  %3 = load volatile i32, i32* %2, align 4, !dbg !5283
  call void @llvm.dbg.value(metadata i32 %3, metadata !5281, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5282
  store volatile i32 191, i32* %2, align 4, !dbg !5284
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5285
  %5 = load volatile i32, i32* %4, align 4, !dbg !5285
  call void @llvm.dbg.value(metadata i32 %5, metadata !5280, metadata !DIExpression()), !dbg !5282
  %6 = and i32 %5, 65343, !dbg !5286
  %7 = or i32 %6, 192, !dbg !5286
  call void @llvm.dbg.value(metadata i32 %5, metadata !5280, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5282
  store volatile i32 %7, i32* %4, align 4, !dbg !5287
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5288
  store volatile i32 0, i32* %8, align 4, !dbg !5289
  store volatile i32 0, i32* %2, align 4, !dbg !5290
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5291
  store volatile i32 2, i32* %9, align 4, !dbg !5292
  %10 = and i32 %3, 65535, !dbg !5293
  store volatile i32 %10, i32* %2, align 4, !dbg !5294
  ret void, !dbg !5295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !5296 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5300, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8 %1, metadata !5301, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8 %2, metadata !5302, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8 %3, metadata !5303, metadata !DIExpression()), !dbg !5306
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5307
  %6 = load volatile i32, i32* %5, align 4, !dbg !5307
  call void @llvm.dbg.value(metadata i32 %6, metadata !5305, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5306
  store volatile i32 191, i32* %5, align 4, !dbg !5308
  %7 = zext i8 %1 to i32, !dbg !5309
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5310
  store volatile i32 %7, i32* %8, align 4, !dbg !5311
  %9 = zext i8 %2 to i32, !dbg !5312
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5313
  store volatile i32 %9, i32* %10, align 4, !dbg !5314
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5315
  %12 = load volatile i32, i32* %11, align 4, !dbg !5315
  call void @llvm.dbg.value(metadata i32 %12, metadata !5304, metadata !DIExpression()), !dbg !5306
  %13 = and i32 %12, 65509, !dbg !5316
  %14 = or i32 %13, 26, !dbg !5316
  call void @llvm.dbg.value(metadata i32 %12, metadata !5304, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5306
  store volatile i32 %14, i32* %11, align 4, !dbg !5317
  %15 = zext i8 %3 to i32, !dbg !5318
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5319
  store volatile i32 %15, i32* %16, align 4, !dbg !5320
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5321
  store volatile i32 1, i32* %17, align 4, !dbg !5322
  %18 = and i32 %6, 65535, !dbg !5323
  store volatile i32 %18, i32* %5, align 4, !dbg !5324
  ret void, !dbg !5325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5326 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5328, metadata !DIExpression()), !dbg !5330
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5331
  %3 = load volatile i32, i32* %2, align 4, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %3, metadata !5329, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5330
  store volatile i32 191, i32* %2, align 4, !dbg !5332
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5333
  store volatile i32 0, i32* %4, align 4, !dbg !5334
  store volatile i32 0, i32* %2, align 4, !dbg !5335
  %5 = and i32 %3, 65535, !dbg !5336
  store volatile i32 %5, i32* %2, align 4, !dbg !5337
  ret void, !dbg !5338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5339 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5341, metadata !DIExpression()), !dbg !5344
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5345
  %3 = load volatile i32, i32* %2, align 4, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %3, metadata !5343, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5344
  store volatile i32 191, i32* %2, align 4, !dbg !5346
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5347
  %5 = load volatile i32, i32* %4, align 4, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %5, metadata !5342, metadata !DIExpression()), !dbg !5344
  %6 = and i32 %5, 65519, !dbg !5348
  %7 = or i32 %6, 16, !dbg !5348
  call void @llvm.dbg.value(metadata i32 %5, metadata !5342, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5344
  store volatile i32 %7, i32* %4, align 4, !dbg !5349
  store volatile i32 0, i32* %2, align 4, !dbg !5350
  store volatile i32 135, i32* %4, align 4, !dbg !5351
  %8 = and i32 %3, 65535, !dbg !5352
  store volatile i32 %8, i32* %2, align 4, !dbg !5353
  ret void, !dbg !5354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5355 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5357, metadata !DIExpression()), !dbg !5360
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5361
  %3 = load volatile i32, i32* %2, align 4, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %3, metadata !5359, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5360
  %4 = load volatile i32, i32* %2, align 4, !dbg !5362
  %5 = and i32 %4, -129, !dbg !5362
  store volatile i32 %5, i32* %2, align 4, !dbg !5362
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5363
  %7 = load volatile i32, i32* %6, align 4, !dbg !5363
  call void @llvm.dbg.value(metadata i32 %7, metadata !5358, metadata !DIExpression()), !dbg !5360
  %8 = and i32 %7, 65530, !dbg !5364
  %9 = or i32 %8, 5, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %7, metadata !5358, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5360
  store volatile i32 %9, i32* %6, align 4, !dbg !5365
  %10 = and i32 %3, 65535, !dbg !5366
  %11 = load volatile i32, i32* %2, align 4, !dbg !5367
  %12 = and i32 %10, %11, !dbg !5367
  store volatile i32 %12, i32* %2, align 4, !dbg !5367
  ret void, !dbg !5368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5369 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5373, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i32 %1, metadata !5374, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i16 145, metadata !5375, metadata !DIExpression()), !dbg !5376
  %3 = icmp eq i32 %1, 0, !dbg !5377
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5375, metadata !DIExpression()), !dbg !5376
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5379
  store volatile i32 %4, i32* %5, align 4, !dbg !5380
  ret void, !dbg !5381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5382 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5387, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 0, metadata !5390, metadata !DIExpression()), !dbg !5391
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5392
  %3 = load volatile i32, i32* %2, align 4, !dbg !5392
  call void @llvm.dbg.value(metadata i32 %3, metadata !5388, metadata !DIExpression()), !dbg !5391
  %4 = and i32 %3, 1, !dbg !5393
  %5 = icmp eq i32 %4, 0, !dbg !5393
  br i1 %5, label %6, label %16, !dbg !5395

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5396
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5397

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5390, metadata !DIExpression()), !dbg !5391
  br label %16, !dbg !5398

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5400
  %11 = load volatile i32, i32* %10, align 4, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %11, metadata !5389, metadata !DIExpression()), !dbg !5391
  %12 = and i32 %11, 16, !dbg !5401
  %13 = icmp eq i32 %12, 0, !dbg !5401
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5390, metadata !DIExpression()), !dbg !5391
  br label %16, !dbg !5403

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5391
  ret i32 %17, !dbg !5404
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5405 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5409, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.value(metadata i32 0, metadata !5411, metadata !DIExpression()), !dbg !5412
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5413
  %3 = load volatile i32, i32* %2, align 4, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %3, metadata !5410, metadata !DIExpression()), !dbg !5412
  %4 = and i32 %3, 14, !dbg !5414
  %5 = icmp eq i32 %4, 0, !dbg !5414
  %6 = sext i1 %5 to i32, !dbg !5416
  call void @llvm.dbg.value(metadata i32 %6, metadata !5411, metadata !DIExpression()), !dbg !5412
  ret i32 %6, !dbg !5417
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5418 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5420, metadata !DIExpression()), !dbg !5422
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5423
  %3 = load volatile i32, i32* %2, align 4, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %3, metadata !5421, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5422
  call void @llvm.dbg.value(metadata i32 %3, metadata !5421, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5422
  ret void, !dbg !5424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5425 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5427, metadata !DIExpression()), !dbg !5428
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5429
  store volatile i32 191, i32* %2, align 4, !dbg !5430
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5431
  store volatile i32 16, i32* %3, align 4, !dbg !5432
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5433
  store volatile i32 0, i32* %4, align 4, !dbg !5434
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5435
  store volatile i32 0, i32* %5, align 4, !dbg !5436
  store volatile i32 128, i32* %2, align 4, !dbg !5437
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5438
  store volatile i32 0, i32* %6, align 4, !dbg !5439
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5440
  store volatile i32 0, i32* %7, align 4, !dbg !5441
  store volatile i32 0, i32* %2, align 4, !dbg !5442
  store volatile i32 0, i32* %7, align 4, !dbg !5443
  store volatile i32 0, i32* %3, align 4, !dbg !5444
  store volatile i32 191, i32* %2, align 4, !dbg !5445
  store volatile i32 0, i32* %3, align 4, !dbg !5446
  store volatile i32 0, i32* %2, align 4, !dbg !5447
  store volatile i32 0, i32* %4, align 4, !dbg !5448
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !5449
  store volatile i32 0, i32* %8, align 4, !dbg !5450
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !5451
  store volatile i32 0, i32* %9, align 4, !dbg !5452
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5453
  store volatile i32 0, i32* %10, align 4, !dbg !5454
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5455
  store volatile i32 0, i32* %11, align 4, !dbg !5456
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5457
  store volatile i32 0, i32* %12, align 4, !dbg !5458
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5459
  store volatile i32 0, i32* %13, align 4, !dbg !5460
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !5461
  store volatile i32 0, i32* %14, align 4, !dbg !5462
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5463
  store volatile i32 0, i32* %15, align 4, !dbg !5464
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5465
  store volatile i32 0, i32* %16, align 4, !dbg !5466
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5467
  store volatile i32 0, i32* %17, align 4, !dbg !5468
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !5469
  store volatile i32 0, i32* %18, align 4, !dbg !5470
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5471
  store volatile i32 0, i32* %19, align 4, !dbg !5472
  store volatile i32 0, i32* %13, align 4, !dbg !5473
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5474
  store volatile i32 0, i32* %20, align 4, !dbg !5475
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5476
  store volatile i32 0, i32* %21, align 4, !dbg !5477
  ret void, !dbg !5478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5479 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5481, metadata !DIExpression()), !dbg !5482
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5483

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5484
  %5 = and i32 %4, 64, !dbg !5485
  %6 = icmp eq i32 %5, 0, !dbg !5486
  br i1 %6, label %3, label %7, !dbg !5483, !llvm.loop !5487

7:                                                ; preds = %3
  ret void, !dbg !5489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5494, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.value(metadata i32 %1, metadata !5495, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.value(metadata i32 15, metadata !5496, metadata !DIExpression()), !dbg !5497
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !5498

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !5499
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !5502
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !5504
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !5506
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !5497
  call void @llvm.dbg.value(metadata i32 %16, metadata !5496, metadata !DIExpression()), !dbg !5497
  ret i32 %16, !dbg !5508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #4 !dbg !5509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5519, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !5520, metadata !DIExpression()), !dbg !5521
  %3 = add i32 %0, -8, !dbg !5522
  %4 = icmp ult i32 %3, 8, !dbg !5522
  br i1 %4, label %5, label %12, !dbg !5522

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !5522
  %7 = load i8, i8* %6, align 1, !dbg !5522
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !5522
  %9 = load i32, i32* %8, align 4, !dbg !5522
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !5523
  store i8 %7, i8* %10, align 4, !dbg !5523
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !5523
  store i32 %9, i32* %11, align 4, !dbg !5523
  br label %12, !dbg !5525

12:                                               ; preds = %2, %5
  ret void, !dbg !5525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5526 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5530, metadata !DIExpression()), !dbg !5531
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5532
  store volatile i32 3, i32* %2, align 4, !dbg !5533
  ret void, !dbg !5534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !5535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5537, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !5540, metadata !DIExpression()), !dbg !5541
  %2 = add i32 %0, -30, !dbg !5542
  %3 = icmp ult i32 %2, 3, !dbg !5542
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !5542
  call void @llvm.dbg.value(metadata i32 %5, metadata !5538, metadata !DIExpression()), !dbg !5541
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !5543
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !5543
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !5540, metadata !DIExpression()), !dbg !5541
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #21, !dbg !5544
  call void @llvm.dbg.value(metadata i32 %8, metadata !5539, metadata !DIExpression()), !dbg !5541
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !5545

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !5546
  br label %13, !dbg !5548

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #21, !dbg !5549
  br label %13, !dbg !5550

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #21, !dbg !5551
  br label %13, !dbg !5552

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.79, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.80, i32 0, i32 0)) #23, !dbg !5553
  unreachable, !dbg !5553

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !5554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #10 !dbg !786 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !5555
  br i1 %1, label %9, label %2, !dbg !5557

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !879, metadata !DIExpression()), !dbg !5558
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !5559
  %5 = load i32, i32* %4, align 4, !dbg !5559
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #20, !dbg !5564
  %6 = add nuw nsw i32 %3, 1, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %6, metadata !879, metadata !DIExpression()), !dbg !5558
  %7 = icmp eq i32 %6, 64, !dbg !5566
  br i1 %7, label %8, label %2, !dbg !5567, !llvm.loop !5568

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !5570
  br label %9, !dbg !5571

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !5572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5577, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata i32 %1, metadata !5578, metadata !DIExpression()), !dbg !5579
  %3 = trunc i32 %1 to i8, !dbg !5580
  %4 = shl i8 %3, 2, !dbg !5580
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5583
  store volatile i8 %4, i8* %5, align 1, !dbg !5584
  ret void, !dbg !5585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5590, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata i32 -1, metadata !5591, metadata !DIExpression()), !dbg !5592
  %2 = icmp ugt i32 %0, 63, !dbg !5593
  br i1 %2, label %4, label %3, !dbg !5593

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #20, !dbg !5595
  call void @llvm.dbg.value(metadata i32 0, metadata !5591, metadata !DIExpression()), !dbg !5592
  br label %4, !dbg !5597

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5592
  ret i32 %5, !dbg !5598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5603, metadata !DIExpression()), !dbg !5604
  %2 = and i32 %0, 31, !dbg !5605
  %3 = shl nuw i32 1, %2, !dbg !5606
  %4 = lshr i32 %0, 5, !dbg !5607
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5608
  store volatile i32 %3, i32* %5, align 4, !dbg !5609
  ret void, !dbg !5610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5613, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 -1, metadata !5614, metadata !DIExpression()), !dbg !5615
  %2 = icmp ugt i32 %0, 63, !dbg !5616
  br i1 %2, label %4, label %3, !dbg !5616

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #20, !dbg !5618
  call void @llvm.dbg.value(metadata i32 0, metadata !5614, metadata !DIExpression()), !dbg !5615
  br label %4, !dbg !5620

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5615
  ret i32 %5, !dbg !5621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5624, metadata !DIExpression()), !dbg !5625
  %2 = and i32 %0, 31, !dbg !5626
  %3 = shl nuw i32 1, %2, !dbg !5627
  %4 = lshr i32 %0, 5, !dbg !5628
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5629
  store volatile i32 %3, i32* %5, align 4, !dbg !5630
  ret void, !dbg !5631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #9 !dbg !5632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5636, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.value(metadata i32 255, metadata !5637, metadata !DIExpression()), !dbg !5638
  %2 = icmp ugt i32 %0, 63, !dbg !5639
  br i1 %2, label %5, label %3, !dbg !5639

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #20, !dbg !5641
  call void @llvm.dbg.value(metadata i32 %4, metadata !5637, metadata !DIExpression()), !dbg !5638
  br label %5, !dbg !5643

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5638
  ret i32 %6, !dbg !5644
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #9 !dbg !5645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5649, metadata !DIExpression()), !dbg !5650
  %2 = lshr i32 %0, 5, !dbg !5651
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5652
  %4 = load volatile i32, i32* %3, align 4, !dbg !5652
  %5 = and i32 %0, 31, !dbg !5653
  %6 = lshr i32 %4, %5, !dbg !5654
  %7 = and i32 %6, 1, !dbg !5654
  ret i32 %7, !dbg !5655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5658, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.value(metadata i32 -1, metadata !5659, metadata !DIExpression()), !dbg !5660
  %2 = icmp ugt i32 %0, 63, !dbg !5661
  br i1 %2, label %4, label %3, !dbg !5661

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #20, !dbg !5663
  call void @llvm.dbg.value(metadata i32 0, metadata !5659, metadata !DIExpression()), !dbg !5660
  br label %4, !dbg !5665

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5660
  ret i32 %5, !dbg !5666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5669, metadata !DIExpression()), !dbg !5670
  %2 = and i32 %0, 31, !dbg !5671
  %3 = shl nuw i32 1, %2, !dbg !5672
  %4 = lshr i32 %0, 5, !dbg !5673
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5674
  store volatile i32 %3, i32* %5, align 4, !dbg !5675
  ret void, !dbg !5676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5679, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata i32 -1, metadata !5680, metadata !DIExpression()), !dbg !5681
  %2 = icmp ugt i32 %0, 63, !dbg !5682
  br i1 %2, label %4, label %3, !dbg !5682

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5684
  call void @llvm.dbg.value(metadata i32 0, metadata !5680, metadata !DIExpression()), !dbg !5681
  br label %4, !dbg !5686

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5681
  ret i32 %5, !dbg !5687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5690, metadata !DIExpression()), !dbg !5691
  %2 = and i32 %0, 31, !dbg !5692
  %3 = shl nuw i32 1, %2, !dbg !5693
  %4 = lshr i32 %0, 5, !dbg !5694
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5695
  store volatile i32 %3, i32* %5, align 4, !dbg !5696
  ret void, !dbg !5697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5702, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i32 %1, metadata !5703, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i32 -1, metadata !5704, metadata !DIExpression()), !dbg !5705
  %3 = icmp ugt i32 %0, 63, !dbg !5706
  br i1 %3, label %5, label %4, !dbg !5706

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #20, !dbg !5708
  call void @llvm.dbg.value(metadata i32 0, metadata !5704, metadata !DIExpression()), !dbg !5705
  br label %5, !dbg !5710

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5705
  ret i32 %6, !dbg !5711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #9 !dbg !5712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5714, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.value(metadata i32 68, metadata !5715, metadata !DIExpression()), !dbg !5716
  %2 = icmp ugt i32 %0, 63, !dbg !5717
  br i1 %2, label %5, label %3, !dbg !5717

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #20, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %4, metadata !5715, metadata !DIExpression()), !dbg !5716
  br label %5, !dbg !5721

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5716
  ret i32 %6, !dbg !5722
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #9 !dbg !5723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5725, metadata !DIExpression()), !dbg !5726
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5727
  %3 = load volatile i8, i8* %2, align 1, !dbg !5727
  %4 = lshr i8 %3, 2, !dbg !5730
  %5 = zext i8 %4 to i32, !dbg !5730
  ret i32 %5, !dbg !5731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !5732 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5734, metadata !DIExpression()), !dbg !5736
  tail call void @Flash_ReturnReady() #21, !dbg !5737
  %1 = tail call fastcc i32 @get_current_irq() #20, !dbg !5738
  call void @llvm.dbg.value(metadata i32 %1, metadata !5735, metadata !DIExpression()), !dbg !5736
  %2 = icmp ugt i32 %1, 63, !dbg !5739
  br i1 %2, label %12, label %3, !dbg !5739

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5741
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5741
  %6 = icmp eq void (i32)* %5, null, !dbg !5743
  br i1 %6, label %7, label %8, !dbg !5744

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5734, metadata !DIExpression()), !dbg !5736
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i32 0, i32 0)) #21, !dbg !5745
  br label %12, !dbg !5747

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #20, !dbg !5748
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5750
  store i32 %9, i32* %10, align 4, !dbg !5751
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5752
  tail call void %11(i32 noundef %1) #21, !dbg !5753
  call void @llvm.dbg.value(metadata i32 0, metadata !5734, metadata !DIExpression()), !dbg !5736
  br label %12, !dbg !5754

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5736
  ret i32 %13, !dbg !5755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #9 !dbg !5756 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5759
  %2 = and i32 %1, 511, !dbg !5760
  call void @llvm.dbg.value(metadata i32 %2, metadata !5758, metadata !DIExpression()), !dbg !5761
  %3 = add nsw i32 %2, -16, !dbg !5762
  ret i32 %3, !dbg !5763
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #9 !dbg !5764 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5765
  %2 = lshr i32 %1, 22, !dbg !5766
  %3 = and i32 %2, 1, !dbg !5766
  ret i32 %3, !dbg !5767
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5773, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5774, metadata !DIExpression()), !dbg !5776
  %3 = icmp ugt i32 %0, 63, !dbg !5777
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5777
  br i1 %5, label %10, label %6, !dbg !5777

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5779
  call void @llvm.dbg.value(metadata i32 %7, metadata !5775, metadata !DIExpression()), !dbg !5776
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5780
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5781
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5782
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5783
  store i32 0, i32* %9, align 4, !dbg !5784
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !5785
  br label %10, !dbg !5786

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5776
  ret i32 %11, !dbg !5787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5788 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5792, metadata !DIExpression()), !dbg !5793
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5794
  store i32 %2, i32* %0, align 4, !dbg !5795
  ret i32 0, !dbg !5796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !5797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5801, metadata !DIExpression()), !dbg !5802
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !5803
  ret i32 0, !dbg !5804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !5805 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !5809, !srcloc !5815
  call void @llvm.dbg.value(metadata i32 %1, metadata !5813, metadata !DIExpression()) #22, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %1, metadata !5807, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 1, metadata !5808, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 4, metadata !5818, metadata !DIExpression()) #22, !dbg !5823
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect "dmb", ""() #22, !dbg !5827, !srcloc !5831
  tail call void asm sideeffect "isb", ""() #22, !dbg !5832, !srcloc !5835
  ret i32 %1, !dbg !5836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !5837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5839, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i32 %0, metadata !5818, metadata !DIExpression()) #22, !dbg !5841
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !5843, !srcloc !5826
  tail call void asm sideeffect "dmb", ""() #22, !dbg !5844, !srcloc !5831
  tail call void asm sideeffect "isb", ""() #22, !dbg !5846, !srcloc !5835
  ret void, !dbg !5848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !5849 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %1, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5851, metadata !DIExpression()), !dbg !5854
  br label %2, !dbg !5855

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5851, metadata !DIExpression()), !dbg !5854
  tail call fastcc void @NVIC_DisableIRQ.92(i32 noundef %3) #20, !dbg !5857
  %4 = add nuw nsw i32 %3, 1, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %4, metadata !5851, metadata !DIExpression()), !dbg !5854
  %5 = icmp eq i32 %4, 64, !dbg !5861
  br i1 %5, label %6, label %2, !dbg !5855, !llvm.loop !5862

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5864
  ret void, !dbg !5865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.92(i32 noundef %0) unnamed_addr #10 !dbg !5866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5868, metadata !DIExpression()), !dbg !5869
  %2 = and i32 %0, 31, !dbg !5870
  %3 = shl nuw i32 1, %2, !dbg !5871
  %4 = lshr i32 %0, 5, !dbg !5872
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5873
  store volatile i32 %3, i32* %5, align 4, !dbg !5874
  ret void, !dbg !5875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !5876 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %1, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i32 0, metadata !5878, metadata !DIExpression()), !dbg !5881
  br label %2, !dbg !5882

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5878, metadata !DIExpression()), !dbg !5881
  tail call fastcc void @NVIC_EnableIRQ.93(i32 noundef %3) #20, !dbg !5884
  %4 = add nuw nsw i32 %3, 1, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %4, metadata !5878, metadata !DIExpression()), !dbg !5881
  %5 = icmp eq i32 %4, 64, !dbg !5888
  br i1 %5, label %6, label %2, !dbg !5882, !llvm.loop !5889

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5891
  ret void, !dbg !5892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.93(i32 noundef %0) unnamed_addr #10 !dbg !5893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5895, metadata !DIExpression()), !dbg !5896
  %2 = and i32 %0, 31, !dbg !5897
  %3 = shl nuw i32 1, %2, !dbg !5898
  %4 = lshr i32 %0, 5, !dbg !5899
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5900
  store volatile i32 %3, i32* %5, align 4, !dbg !5901
  ret void, !dbg !5902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #10 !dbg !5903 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5905, metadata !DIExpression()), !dbg !5906
  br label %1, !dbg !5907

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5905, metadata !DIExpression()), !dbg !5906
  tail call fastcc void @NVIC_ClearPendingIRQ.94(i32 noundef %2) #20, !dbg !5909
  %3 = add nuw nsw i32 %2, 1, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %3, metadata !5905, metadata !DIExpression()), !dbg !5906
  %4 = icmp eq i32 %3, 64, !dbg !5913
  br i1 %4, label %5, label %1, !dbg !5907, !llvm.loop !5914

5:                                                ; preds = %1
  ret void, !dbg !5916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.94(i32 noundef %0) unnamed_addr #10 !dbg !5917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5920
  %2 = and i32 %0, 31, !dbg !5921
  %3 = shl nuw i32 1, %2, !dbg !5922
  %4 = lshr i32 %0, 5, !dbg !5923
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5924
  store volatile i32 %3, i32* %5, align 4, !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !5927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5929, metadata !DIExpression()), !dbg !5930
  %2 = icmp ugt i32 %0, 63, !dbg !5931
  br i1 %2, label %4, label %3, !dbg !5931

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #20, !dbg !5933
  br label %4, !dbg !5934

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5930
  ret i32 %5, !dbg !5935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !5936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5938, metadata !DIExpression()), !dbg !5939
  %2 = and i32 %0, 511, !dbg !5940
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !5941
  tail call void asm sideeffect "dsb", ""() #22, !dbg !5942, !srcloc !5945
  ret void, !dbg !5946
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #9 !dbg !5947 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5948
  %2 = and i32 %1, 511, !dbg !5949
  ret i32 %2, !dbg !5950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !5951 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5955, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 %1, metadata !5956, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %0, metadata !5957, metadata !DIExpression()), !dbg !6054
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #21, !dbg !6055
  call void @llvm.dbg.value(metadata i32 %3, metadata !6052, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6054
  call void @llvm.dbg.value(metadata i32 0, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32* undef, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 0, metadata !6051, metadata !DIExpression()), !dbg !6054
  %4 = icmp ult i32 %3, 4, !dbg !6056
  br i1 %4, label %20, label %5, !dbg !6059

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6060
  %7 = bitcast i8* %6 to i32**, !dbg !6060
  %8 = load i32*, i32** %7, align 4, !dbg !6060
  call void @llvm.dbg.value(metadata i32* %8, metadata !6053, metadata !DIExpression()), !dbg !6054
  %9 = lshr i32 %3, 2, !dbg !6061
  call void @llvm.dbg.value(metadata i32 %9, metadata !6052, metadata !DIExpression()), !dbg !6054
  br label %10, !dbg !6059

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 %12, metadata !6051, metadata !DIExpression()), !dbg !6054
  %13 = load i32, i32* %11, align 4, !dbg !6062
  %14 = icmp eq i32 %13, -1, !dbg !6065
  br i1 %14, label %16, label %15, !dbg !6066

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #21, !dbg !6067
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.95, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.96, i32 0, i32 0)) #23, !dbg !6067
  unreachable, !dbg !6067

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6072
  call void @llvm.dbg.value(metadata i32 %17, metadata !6051, metadata !DIExpression()), !dbg !6054
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6073
  call void @llvm.dbg.value(metadata i32* %18, metadata !6053, metadata !DIExpression()), !dbg !6054
  %19 = icmp eq i32 %17, %9, !dbg !6056
  br i1 %19, label %20, label %10, !dbg !6059, !llvm.loop !6074

20:                                               ; preds = %16, %2
  ret void, !dbg !6076
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 0, metadata !6080, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %0, metadata !6080, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6081
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6080, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6081
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6080, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6081
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6082
  call void @llvm.dbg.value(metadata i32 %2, metadata !6080, metadata !DIExpression()), !dbg !6081
  ret i32 %2, !dbg !6083
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6084 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6089, metadata !DIExpression()), !dbg !6091
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6092
  %3 = or i32 %2, 512, !dbg !6092
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6092
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6095
  call void @llvm.dbg.value(metadata i32 %4, metadata !6090, metadata !DIExpression()), !dbg !6091
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6096

5:                                                ; preds = %1
  br label %7, !dbg !6097

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !6101
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.95, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.96, i32 0, i32 0)) #23, !dbg !6101
  unreachable, !dbg !6101

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6106
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6091
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6091
  br label %10, !dbg !6107

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6108
  %12 = and i32 %11, 8192, !dbg !6109
  %13 = icmp eq i32 %12, 0, !dbg !6110
  br i1 %13, label %10, label %14, !dbg !6107, !llvm.loop !6111

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6113
  %16 = and i32 %15, 256, !dbg !6114
  %17 = icmp eq i32 %16, 0, !dbg !6115
  br i1 %17, label %14, label %18, !dbg !6116, !llvm.loop !6117

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6106
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6091
  %20 = and i32 %19, 16, !dbg !6106
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6091
  call void @llvm.dbg.value(metadata i32 undef, metadata !6090, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6091
  %21 = or i32 %4, %20, !dbg !6119
  %22 = or i32 %21, 8, !dbg !6119
  call void @llvm.dbg.value(metadata i32 %22, metadata !6090, metadata !DIExpression()), !dbg !6091
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6120
  ret void, !dbg !6121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6122 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6124, metadata !DIExpression()), !dbg !6126
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6127
  call void @llvm.dbg.value(metadata i32 %2, metadata !6125, metadata !DIExpression()), !dbg !6126
  %3 = and i32 %2, -268435477, !dbg !6128
  call void @llvm.dbg.value(metadata i32 %3, metadata !6125, metadata !DIExpression()), !dbg !6126
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6129
  br label %4, !dbg !6130

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6131
  %6 = and i32 %5, 2, !dbg !6132
  %7 = icmp eq i32 %6, 0, !dbg !6130
  br i1 %7, label %8, label %4, !dbg !6130, !llvm.loop !6133

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6135
  call void @llvm.dbg.value(metadata i32 %9, metadata !6125, metadata !DIExpression()), !dbg !6126
  %10 = and i32 %9, -9, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %10, metadata !6125, metadata !DIExpression()), !dbg !6126
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6137
  br label %11, !dbg !6138

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6139
  %13 = and i32 %12, 8, !dbg !6140
  %14 = icmp eq i32 %13, 0, !dbg !6138
  br i1 %14, label %15, label %11, !dbg !6138, !llvm.loop !6141

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6143, !range !2535
  %17 = icmp eq i8 %16, 0, !dbg !6145
  br i1 %17, label %18, label %21, !dbg !6146

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6147
  %20 = and i32 %19, -513, !dbg !6147
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6147
  br label %21, !dbg !6151

21:                                               ; preds = %18, %15
  ret void, !dbg !6152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6153 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6157, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 0, metadata !6158, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 0, metadata !6159, metadata !DIExpression()), !dbg !6160
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6161
  call void @llvm.dbg.value(metadata i32 %2, metadata !6158, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %2, metadata !6158, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6160
  %3 = icmp eq i16 %0, 1, !dbg !6162
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6164
  %5 = or i32 %2, %4, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %5, metadata !6158, metadata !DIExpression()), !dbg !6160
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6165
  br label %6, !dbg !6166

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6167
  %8 = and i32 %7, 2, !dbg !6168
  %9 = icmp eq i32 %8, 0, !dbg !6169
  br i1 %9, label %6, label %10, !dbg !6166, !llvm.loop !6170

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6172
  %12 = and i32 %11, 1, !dbg !6173
  %13 = icmp eq i32 %12, 0, !dbg !6174
  br i1 %13, label %14, label %10, !dbg !6174, !llvm.loop !6175

14:                                               ; preds = %10
  ret i32 0, !dbg !6177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6178 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6180, metadata !DIExpression()), !dbg !6181
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #20, !dbg !6182
  tail call void @SFI_MacLeave(i16 zeroext undef) #20, !dbg !6183
  ret void, !dbg !6184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6185 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6189, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 %1, metadata !6190, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 %1, metadata !6191, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8 0, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 0, metadata !6192, metadata !DIExpression()), !dbg !6194
  %3 = icmp eq i32 %1, 0, !dbg !6195
  br i1 %3, label %16, label %4, !dbg !6198

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 %6, metadata !6192, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 %7, metadata !6191, metadata !DIExpression()), !dbg !6194
  %8 = shl i32 %6, 8, !dbg !6199
  %9 = and i32 %7, 255, !dbg !6201
  %10 = or i32 %8, %9, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %10, metadata !6192, metadata !DIExpression()), !dbg !6194
  %11 = lshr i32 %7, 8, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %11, metadata !6191, metadata !DIExpression()), !dbg !6194
  %12 = add nuw nsw i8 %5, 1, !dbg !6204
  call void @llvm.dbg.value(metadata i8 %12, metadata !6193, metadata !DIExpression()), !dbg !6194
  %13 = icmp ult i32 %7, 256, !dbg !6195
  br i1 %13, label %14, label %4, !dbg !6198, !llvm.loop !6205

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6207
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !6209
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6210
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6211
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6212
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !6213
  br label %16, !dbg !6214

16:                                               ; preds = %2, %14
  ret void, !dbg !6215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6216 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6220, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8 %1, metadata !6221, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %2, metadata !6222, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %3, metadata !6223, metadata !DIExpression()), !dbg !6226
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #20, !dbg !6227
  call void @llvm.dbg.value(metadata i32 %5, metadata !6225, metadata !DIExpression()), !dbg !6226
  %6 = icmp eq i32 %3, 3, !dbg !6228
  br i1 %6, label %7, label %11, !dbg !6230

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6231
  %9 = zext i8 %1 to i32, !dbg !6233
  %10 = or i32 %8, %9, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %10, metadata !6224, metadata !DIExpression()), !dbg !6226
  br label %16, !dbg !6235

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6236
  %13 = zext i8 %1 to i32, !dbg !6238
  %14 = or i32 %12, %13, !dbg !6239
  call void @llvm.dbg.value(metadata i32 %14, metadata !6224, metadata !DIExpression()), !dbg !6226
  %15 = lshr i32 %5, 24, !dbg !6240
  call void @llvm.dbg.value(metadata i32 %15, metadata !6225, metadata !DIExpression()), !dbg !6226
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6241
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6226
  call void @llvm.dbg.value(metadata i32 %18, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %17, metadata !6224, metadata !DIExpression()), !dbg !6226
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6242
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6243
  %19 = add i32 %3, 1, !dbg !6244
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6245
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6246
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !6247
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !6248
  ret void, !dbg !6249
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6254, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i32 %1, metadata !6255, metadata !DIExpression()), !dbg !6256
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #20, !dbg !6257
  %4 = and i32 %3, -256, !dbg !6258
  %5 = and i32 %0, 255, !dbg !6259
  %6 = or i32 %4, %5, !dbg !6260
  ret i32 %6, !dbg !6261
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #7 section ".ram_code" !dbg !6262 {
  %5 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6267, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32 %1, metadata !6268, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i8** %2, metadata !6269, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32* %3, metadata !6270, metadata !DIExpression()), !dbg !6282
  %6 = bitcast %union.anon* %5 to i8*, !dbg !6283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6283
  call void @llvm.dbg.declare(metadata %union.anon* %5, metadata !6271, metadata !DIExpression()), !dbg !6284
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #20, !dbg !6285
  call void @llvm.dbg.value(metadata i32 %7, metadata !6280, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6279, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6282
  %8 = lshr i32 %7, 24, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %8, metadata !6280, metadata !DIExpression()), !dbg !6282
  %9 = trunc i32 %8 to i8, !dbg !6287
  %10 = bitcast %union.anon* %5 to [4 x i8]*, !dbg !6288
  store i8 %9, i8* %6, align 4, !dbg !6289
  call void @llvm.dbg.value(metadata i32 1, metadata !6281, metadata !DIExpression()), !dbg !6282
  %11 = load i8*, i8** %2, align 4, !dbg !6290
  br label %12, !dbg !6294

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6290
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6281, metadata !DIExpression()), !dbg !6282
  %15 = load i8, i8* %13, align 1, !dbg !6295
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !6296
  store i8 %15, i8* %16, align 1, !dbg !6297
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6298
  store i8* %17, i8** %2, align 4, !dbg !6298
  %18 = add nuw nsw i32 %14, 1, !dbg !6299
  call void @llvm.dbg.value(metadata i32 %18, metadata !6281, metadata !DIExpression()), !dbg !6282
  %19 = icmp eq i32 %18, 4, !dbg !6300
  br i1 %19, label %20, label %12, !dbg !6294, !llvm.loop !6301

20:                                               ; preds = %12
  %21 = getelementptr inbounds %union.anon, %union.anon* %5, i32 0, i32 0, !dbg !6303
  %22 = load i32, i32* %21, align 4, !dbg !6303
  call void @llvm.dbg.value(metadata i32 %22, metadata !6280, metadata !DIExpression()), !dbg !6282
  %23 = load i32, i32* %3, align 4, !dbg !6304
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !6305
  %25 = shl i32 %7, 8, !dbg !6306
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6279, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6282
  %26 = and i32 %0, 255, !dbg !6307
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6279, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6282
  %27 = or i32 %25, %26, !dbg !6308
  call void @llvm.dbg.value(metadata i32 %27, metadata !6279, metadata !DIExpression()), !dbg !6282
  store i32 %24, i32* %3, align 4, !dbg !6309
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6310
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6311
  ret i32 %27, !dbg !6312
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #7 section ".ram_code" !dbg !6313 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6317, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %1, metadata !6318, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  %5 = bitcast %union.anon* %4 to i8*, !dbg !6324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6324
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !6322, metadata !DIExpression()), !dbg !6325
  %6 = add i32 %0, -1610348544, !dbg !6326
  call void @llvm.dbg.value(metadata i32 %6, metadata !6317, metadata !DIExpression()), !dbg !6323
  %7 = ptrtoint i8* %1 to i32, !dbg !6327
  %8 = and i32 %7, 3, !dbg !6329
  %9 = icmp eq i32 %8, 0, !dbg !6330
  br i1 %9, label %10, label %23, !dbg !6331

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %6, metadata !6317, metadata !DIExpression()), !dbg !6323
  %11 = icmp sgt i32 %2, 0, !dbg !6332
  br i1 %11, label %12, label %72, !dbg !6336

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %14, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %15, metadata !6317, metadata !DIExpression()), !dbg !6323
  %16 = bitcast i8* %13 to i32*, !dbg !6337
  %17 = load i32, i32* %16, align 4, !dbg !6337
  %18 = inttoptr i32 %15 to i32*, !dbg !6337
  store volatile i32 %17, i32* %18, align 4, !dbg !6337
  %19 = add i32 %15, 4, !dbg !6339
  call void @llvm.dbg.value(metadata i32 %19, metadata !6317, metadata !DIExpression()), !dbg !6323
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !6340
  call void @llvm.dbg.value(metadata i8* %20, metadata !6321, metadata !DIExpression()), !dbg !6323
  %21 = add nsw i32 %14, -4, !dbg !6341
  call void @llvm.dbg.value(metadata i32 %21, metadata !6319, metadata !DIExpression()), !dbg !6323
  %22 = icmp ugt i32 %14, 4, !dbg !6332
  br i1 %22, label %12, label %72, !dbg !6336, !llvm.loop !6342

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !6344
  %25 = icmp eq i32 %24, 0, !dbg !6346
  call void @llvm.dbg.value(metadata i8* %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %6, metadata !6317, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %6, metadata !6317, metadata !DIExpression()), !dbg !6323
  %26 = icmp sgt i32 %2, 0, !dbg !6347
  br i1 %25, label %31, label %27, !dbg !6348

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !6349

28:                                               ; preds = %27
  %29 = bitcast %union.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %52, !dbg !6349

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !6352

32:                                               ; preds = %31
  %33 = bitcast %union.anon* %4 to [2 x i16]*
  %34 = bitcast %union.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %37, !dbg !6352

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %39, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %40, metadata !6317, metadata !DIExpression()), !dbg !6323
  %41 = bitcast i8* %38 to i16*, !dbg !6355
  %42 = load i16, i16* %41, align 2, !dbg !6355
  store i16 %42, i16* %34, align 4, !dbg !6358
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !6359
  %44 = bitcast i8* %43 to i16*, !dbg !6359
  %45 = load i16, i16* %44, align 2, !dbg !6360
  store i16 %45, i16* %35, align 2, !dbg !6361
  %46 = load i32, i32* %36, align 4, !dbg !6362
  %47 = inttoptr i32 %40 to i32*, !dbg !6362
  store volatile i32 %46, i32* %47, align 4, !dbg !6362
  %48 = add i32 %40, 4, !dbg !6363
  call void @llvm.dbg.value(metadata i32 %48, metadata !6317, metadata !DIExpression()), !dbg !6323
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !6364
  call void @llvm.dbg.value(metadata i8* %49, metadata !6321, metadata !DIExpression()), !dbg !6323
  %50 = add nsw i32 %39, -4, !dbg !6365
  call void @llvm.dbg.value(metadata i32 %50, metadata !6319, metadata !DIExpression()), !dbg !6323
  %51 = icmp ugt i32 %39, 4, !dbg !6366
  br i1 %51, label %37, label %72, !dbg !6352, !llvm.loop !6367

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %54, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %55, metadata !6317, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %53, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 0, metadata !6320, metadata !DIExpression()), !dbg !6323
  br label %56, !dbg !6369

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %58, metadata !6320, metadata !DIExpression()), !dbg !6323
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !6373
  call void @llvm.dbg.value(metadata i8* %59, metadata !6321, metadata !DIExpression()), !dbg !6323
  %60 = load i8, i8* %57, align 1, !dbg !6376
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !6377
  store i8 %60, i8* %61, align 1, !dbg !6378
  %62 = add nuw nsw i32 %58, 1, !dbg !6379
  call void @llvm.dbg.value(metadata i32 %62, metadata !6320, metadata !DIExpression()), !dbg !6323
  %63 = icmp ult i32 %58, 3, !dbg !6380
  %64 = icmp ult i32 %62, %54, !dbg !6381
  %65 = select i1 %63, i1 %64, i1 false, !dbg !6381
  br i1 %65, label %56, label %66, !dbg !6369, !llvm.loop !6382

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !6384
  %68 = inttoptr i32 %55 to i32*, !dbg !6384
  store volatile i32 %67, i32* %68, align 4, !dbg !6384
  %69 = add i32 %55, 4, !dbg !6385
  call void @llvm.dbg.value(metadata i32 %69, metadata !6317, metadata !DIExpression()), !dbg !6323
  %70 = add nsw i32 %54, -4, !dbg !6386
  call void @llvm.dbg.value(metadata i8* %59, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %70, metadata !6319, metadata !DIExpression()), !dbg !6323
  %71 = icmp sgt i32 %54, 4, !dbg !6387
  br i1 %71, label %52, label %72, !dbg !6349, !llvm.loop !6388

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6390
  ret void, !dbg !6390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !6391 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !6395, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i8* %1, metadata !6396, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i8* %2, metadata !6397, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i16 %3, metadata !6398, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i16 %4, metadata !6399, metadata !DIExpression()), !dbg !6405
  %7 = bitcast i32* %6 to i8*, !dbg !6406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6406
  call void @llvm.dbg.value(metadata i8* %7, metadata !6404, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 0, metadata !6401, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6403, metadata !DIExpression()), !dbg !6405
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6403, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 0, metadata !6401, metadata !DIExpression()), !dbg !6405
  %9 = icmp eq i16 %3, 0, !dbg !6407
  br i1 %9, label %33, label %10, !dbg !6410

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !6403, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 %12, metadata !6401, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 0, metadata !6402, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 0, metadata !6400, metadata !DIExpression()), !dbg !6405
  store i32 0, i32* %6, align 4, !dbg !6411
  call void @llvm.dbg.value(metadata i32 0, metadata !6402, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 %12, metadata !6401, metadata !DIExpression()), !dbg !6405
  %13 = icmp ult i32 %12, %8, !dbg !6414
  br i1 %13, label %14, label %27, !dbg !6416

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6402, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 %16, metadata !6401, metadata !DIExpression()), !dbg !6405
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !6417
  %18 = load i8, i8* %17, align 1, !dbg !6417
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !6419
  store i8 %18, i8* %19, align 1, !dbg !6420
  %20 = add nuw nsw i32 %16, 1, !dbg !6421
  call void @llvm.dbg.value(metadata i32 %20, metadata !6401, metadata !DIExpression()), !dbg !6405
  %21 = add nuw nsw i32 %15, 1, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %21, metadata !6402, metadata !DIExpression()), !dbg !6405
  %22 = icmp ult i32 %20, %8, !dbg !6414
  %23 = icmp ult i32 %15, 3, !dbg !6423
  %24 = select i1 %22, i1 %23, i1 false, !dbg !6423
  br i1 %24, label %14, label %25, !dbg !6416, !llvm.loop !6424

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !6426
  br label %27, !dbg !6426

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !6426
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !6427
  call void @llvm.dbg.value(metadata i32 %28, metadata !6400, metadata !DIExpression()), !dbg !6405
  %30 = bitcast i8* %11 to i32*, !dbg !6426
  store volatile i32 %28, i32* %30, align 4, !dbg !6426
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !6428
  call void @llvm.dbg.value(metadata i8* %31, metadata !6403, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 %29, metadata !6401, metadata !DIExpression()), !dbg !6405
  %32 = icmp ult i32 %29, %8, !dbg !6407
  br i1 %32, label %10, label %33, !dbg !6410, !llvm.loop !6429

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6431
  %34 = zext i16 %4 to i32, !dbg !6432
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6433
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !6434
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !6435
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !6403, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6405
  call void @llvm.dbg.value(metadata i8* %2, metadata !6397, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 0, metadata !6401, metadata !DIExpression()), !dbg !6405
  %35 = icmp eq i16 %4, 0, !dbg !6436
  br i1 %35, label %47, label %36, !dbg !6439

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !6440
  call void @llvm.dbg.value(metadata i8* %37, metadata !6403, metadata !DIExpression()), !dbg !6405
  br label %38, !dbg !6439

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !6397, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i8* %40, metadata !6403, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i32 %41, metadata !6401, metadata !DIExpression()), !dbg !6405
  %42 = load volatile i8, i8* %40, align 1, !dbg !6441
  store i8 %42, i8* %39, align 1, !dbg !6443
  %43 = add nuw nsw i32 %41, 1, !dbg !6444
  call void @llvm.dbg.value(metadata i32 %43, metadata !6401, metadata !DIExpression()), !dbg !6405
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !6445
  call void @llvm.dbg.value(metadata i8* %44, metadata !6397, metadata !DIExpression()), !dbg !6405
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6446
  call void @llvm.dbg.value(metadata i8* %45, metadata !6403, metadata !DIExpression()), !dbg !6405
  %46 = icmp eq i32 %43, %34, !dbg !6436
  br i1 %46, label %47, label %38, !dbg !6439, !llvm.loop !6447

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6449
  ret void, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6450 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6454, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i8* %1, metadata !6455, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i32 0, metadata !6456, metadata !DIExpression()), !dbg !6462
  %4 = icmp eq i8* %1, null, !dbg !6463
  br i1 %4, label %67, label %5, !dbg !6465

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %27, metadata !6457, metadata !DIExpression()), !dbg !6462
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !6467

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !6462
  call void @llvm.dbg.value(metadata i32 %9, metadata !6456, metadata !DIExpression()), !dbg !6462
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !6468
  %11 = load i8, i8* %10, align 1, !dbg !6468
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !6469

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !6470

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6473
  %15 = and i32 %14, -2, !dbg !6473
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6473
  br label %41, !dbg !6477

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6478
  %18 = and i32 %17, -2, !dbg !6478
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6478
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !6481

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6483
  %22 = or i32 %21, 1, !dbg !6483
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6483
  br label %41, !dbg !6487

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6488
  %25 = or i32 %24, 1, !dbg !6488
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6488
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !6466
  %28 = icmp eq i32 %27, 0, !dbg !6491
  br i1 %7, label %29, label %35, !dbg !6494

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6495
  br i1 %28, label %33, label %31, !dbg !6498

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !6495
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6495
  br label %67, !dbg !6495

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !6495
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6495
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6499
  br i1 %28, label %39, label %37, !dbg !6502

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !6499
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6499
  br label %67, !dbg !6499

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !6499
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6499
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !6503
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !6504
  %44 = load i8, i8* %43, align 1, !dbg !6504
  %45 = icmp eq i8 %44, 5, !dbg !6505
  br i1 %45, label %46, label %56, !dbg !6506

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !6507
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !6508

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !6458, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !6510
  %50 = load i8, i8* %3, align 1, !dbg !6512
  call void @llvm.dbg.value(metadata i8 %50, metadata !6458, metadata !DIExpression()), !dbg !6509
  %51 = load i8, i8* %48, align 1, !dbg !6513
  %52 = and i8 %51, %50, !dbg !6514
  %53 = icmp eq i8 %52, 0, !dbg !6515
  br i1 %53, label %54, label %49, !dbg !6515, !llvm.loop !6516

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !6518
  %55 = add i32 %9, 1, !dbg !6519
  br label %61, !dbg !6520

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !6521
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !6523
  %59 = load i8, i8* %58, align 1, !dbg !6523
  %60 = zext i8 %59 to i16, !dbg !6523
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #20, !dbg !6524
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !6519
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !6525
  %64 = load i8, i8* %63, align 1, !dbg !6525
  %65 = zext i8 %64 to i32, !dbg !6525
  %66 = add i32 %42, %65, !dbg !6526
  call void @llvm.dbg.value(metadata i32 %66, metadata !6456, metadata !DIExpression()), !dbg !6462
  br label %8, !dbg !6467, !llvm.loop !6527

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !6529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !6530 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6534, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i8* %1, metadata !6535, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i8 %2, metadata !6536, metadata !DIExpression()), !dbg !6537
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !6536, metadata !DIExpression(DW_OP_deref)), !dbg !6537
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !6538
  ret void, !dbg !6539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6540 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6544, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.value(metadata i8* %1, metadata !6545, metadata !DIExpression()), !dbg !6546
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #20, !dbg !6547
  ret void, !dbg !6548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #8 section ".ram_code" !dbg !6549 {
  ret i32 78, !dbg !6553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #9 section ".ram_code" !dbg !6554 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6558
  %2 = and i32 %1, 7340032, !dbg !6560
  %3 = icmp ult i32 %2, 2097153, !dbg !6561
  %4 = select i1 %3, i32 30, i32 18, !dbg !6562
  ret i32 %4, !dbg !6563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !6564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6568, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i32 0, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i32 0, metadata !6569, metadata !DIExpression()), !dbg !6570
  br label %2, !dbg !6571

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6569, metadata !DIExpression()), !dbg !6570
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6573
  store i8 -1, i8* %4, align 1, !dbg !6576
  %5 = add nuw nsw i32 %3, 1, !dbg !6577
  call void @llvm.dbg.value(metadata i32 %5, metadata !6569, metadata !DIExpression()), !dbg !6570
  %6 = icmp eq i32 %5, 8, !dbg !6578
  br i1 %6, label %7, label %2, !dbg !6571, !llvm.loop !6579

7:                                                ; preds = %2
  ret i1 true, !dbg !6581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !6582 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !6584, metadata !DIExpression()), !dbg !6585
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !6586
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !6587
  %3 = load i8, i8* %2, align 1, !dbg !6587
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !6588
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !6589
  %5 = ptrtoint i8* %4 to i32, !dbg !6590
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !6591
  %6 = bitcast i8* %4 to i32*, !dbg !6592
  %7 = load volatile i32, i32* %6, align 4, !dbg !6593
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !6594
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6595
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !6596
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6597
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !6598
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6599
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !6600
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !6601
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !6602
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6603
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !6604
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6605
  %14 = or i32 %13, 986880, !dbg !6606
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6607
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6608
  %16 = or i32 %15, 252645135, !dbg !6609
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6610
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !6611
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !6612
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !6613
  %20 = load i8, i8* %19, align 1, !dbg !6613
  %21 = zext i8 %20 to i32, !dbg !6614
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #20, !dbg !6615
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !6616
  ret void, !dbg !6617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !6618 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !6619
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6620
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !6621
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6622
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !6623
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6624
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !6625
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !6626
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !6627
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6628
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6629
  %7 = and i32 %6, -252645136, !dbg !6630
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6631
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !6632
  %9 = zext i8 %8 to i32, !dbg !6632
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #20, !dbg !6633
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !6634
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !6635
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !6637
  %13 = inttoptr i32 %12 to i32*, !dbg !6638
  %14 = load volatile i32, i32* %13, align 4, !dbg !6639
  %15 = icmp eq i32 %11, %14, !dbg !6640
  br i1 %15, label %17, label %16, !dbg !6641

16:                                               ; preds = %0, %16
  br label %16, !dbg !6642, !llvm.loop !6643

17:                                               ; preds = %0
  ret void, !dbg !6645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !6646 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !6647
  %2 = icmp eq i32 %1, 0, !dbg !6649
  br i1 %2, label %3, label %5, !dbg !6650

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6651
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !6653
  br label %5, !dbg !6654

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !6655
  %7 = icmp eq i32 %6, 0, !dbg !6657
  br i1 %7, label %8, label %10, !dbg !6658

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6659
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !6661
  br label %10, !dbg !6662

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6663
  %12 = and i32 %11, -256, !dbg !6664
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6665
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6666
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #21, !dbg !6667
  ret void, !dbg !6668
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !6669 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !6670
  %2 = icmp eq i32 %1, 0, !dbg !6672
  br i1 %2, label %4, label %3, !dbg !6673

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6674
  br label %4, !dbg !6676

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !6677
  %6 = icmp eq i32 %5, 0, !dbg !6679
  br i1 %6, label %8, label %7, !dbg !6680

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6681
  br label %8, !dbg !6683

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #21, !dbg !6684
  ret void, !dbg !6685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #8 section ".tcm_code" !dbg !6686 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6688, metadata !DIExpression()), !dbg !6689
  ret i32 0, !dbg !6690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #8 section ".ram_code" !dbg !6691 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6693, metadata !DIExpression()), !dbg !6694
  ret i32 0, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !6696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6698, metadata !DIExpression()), !dbg !6699
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !6700
  ret void, !dbg !6701
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !6702 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6705
  call void @llvm.dbg.value(metadata i32 %1, metadata !6704, metadata !DIExpression()), !dbg !6706
  ret i32 %1, !dbg !6707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !6708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6710, metadata !DIExpression()), !dbg !6711
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !6712
  ret void, !dbg !6713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #8 section ".ram_code" !dbg !6714 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !6716, metadata !DIExpression()), !dbg !6717
  ret i32 0, !dbg !6718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #8 section ".ram_code" !dbg !6719 {
  ret i32 0, !dbg !6722
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 section ".ram_code" !dbg !6723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6727, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i8* %1, metadata !6728, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i32 %2, metadata !6729, metadata !DIExpression()), !dbg !6742
  %4 = ptrtoint i8* %0 to i32, !dbg !6743
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !6744
  %7 = and i32 %6, 3, !dbg !6744
  %8 = icmp eq i32 %7, 0, !dbg !6744
  br i1 %8, label %9, label %26, !dbg !6744

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !6745
  call void @llvm.dbg.value(metadata i32* %10, metadata !6731, metadata !DIExpression()), !dbg !6746
  %11 = bitcast i8* %1 to i32*, !dbg !6747
  call void @llvm.dbg.value(metadata i32* %11, metadata !6734, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 0, metadata !6730, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i32 0, metadata !6730, metadata !DIExpression()), !dbg !6742
  %12 = icmp ult i32 %2, 4, !dbg !6748
  br i1 %12, label %65, label %13, !dbg !6751

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !6751

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6730, metadata !DIExpression()), !dbg !6742
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !6752
  %18 = load i32, i32* %17, align 4, !dbg !6752
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !6755
  %20 = load i32, i32* %19, align 4, !dbg !6755
  %21 = icmp eq i32 %18, %20, !dbg !6756
  %22 = add nuw nsw i32 %16, 1, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %22, metadata !6730, metadata !DIExpression()), !dbg !6742
  %23 = xor i1 %21, true, !dbg !6758
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !6758
  call void @llvm.dbg.value(metadata i32 %22, metadata !6730, metadata !DIExpression()), !dbg !6742
  br i1 %25, label %59, label %15, !dbg !6758, !llvm.loop !6759

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !6761
  %28 = icmp eq i32 %27, 0, !dbg !6761
  br i1 %28, label %31, label %29, !dbg !6761

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !6730, metadata !DIExpression()), !dbg !6742
  %30 = icmp eq i32 %2, 0, !dbg !6762
  br i1 %30, label %65, label %48, !dbg !6765

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !6766
  call void @llvm.dbg.value(metadata i16* %32, metadata !6735, metadata !DIExpression()), !dbg !6767
  %33 = bitcast i8* %1 to i16*, !dbg !6768
  call void @llvm.dbg.value(metadata i16* %33, metadata !6738, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i32 0, metadata !6730, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i32 0, metadata !6730, metadata !DIExpression()), !dbg !6742
  %34 = icmp ult i32 %2, 2, !dbg !6769
  br i1 %34, label %65, label %35, !dbg !6772

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !6772

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !6730, metadata !DIExpression()), !dbg !6742
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !6773
  %40 = load i16, i16* %39, align 2, !dbg !6773
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !6776
  %42 = load i16, i16* %41, align 2, !dbg !6776
  %43 = icmp eq i16 %40, %42, !dbg !6777
  %44 = add nuw nsw i32 %38, 1, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %44, metadata !6730, metadata !DIExpression()), !dbg !6742
  %45 = xor i1 %43, true, !dbg !6779
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %44, metadata !6730, metadata !DIExpression()), !dbg !6742
  br i1 %47, label %61, label %37, !dbg !6779, !llvm.loop !6780

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !6730, metadata !DIExpression()), !dbg !6742
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !6782
  %51 = load i8, i8* %50, align 1, !dbg !6782
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !6785
  %53 = load i8, i8* %52, align 1, !dbg !6785
  %54 = icmp eq i8 %51, %53, !dbg !6786
  %55 = add nuw i32 %49, 1, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %55, metadata !6730, metadata !DIExpression()), !dbg !6742
  %56 = xor i1 %54, true, !dbg !6788
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !6788
  call void @llvm.dbg.value(metadata i32 %55, metadata !6730, metadata !DIExpression()), !dbg !6742
  br i1 %58, label %63, label %48, !dbg !6788, !llvm.loop !6789

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !6791
  br label %65, !dbg !6791

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !6791
  br label %65, !dbg !6791

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !6791
  br label %65, !dbg !6791

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !6742
  ret i1 %66, !dbg !6791
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !6792 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6796, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i8* %1, metadata !6797, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i32 %2, metadata !6798, metadata !DIExpression()), !dbg !6807
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !6808
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !6799, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i8* %0, metadata !6800, metadata !DIExpression()), !dbg !6807
  %7 = bitcast i8** %4 to i8*, !dbg !6809
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6809
  call void @llvm.dbg.value(metadata i8* %1, metadata !6801, metadata !DIExpression()), !dbg !6807
  store i8* %1, i8** %4, align 4, !dbg !6810
  call void @llvm.dbg.value(metadata i32 0, metadata !6802, metadata !DIExpression()), !dbg !6807
  %8 = bitcast i32* %5 to i8*, !dbg !6811
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !6811
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !6812
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !6813
  store i8 1, i8* %9, align 4, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %2, metadata !6798, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i8* %0, metadata !6800, metadata !DIExpression()), !dbg !6807
  %10 = icmp eq i32 %2, 0, !dbg !6815
  br i1 %10, label %73, label %11, !dbg !6816

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %12, metadata !6800, metadata !DIExpression()), !dbg !6807
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !6816

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !6798, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i32 %20, metadata !6800, metadata !DIExpression()), !dbg !6807
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !6818
  %22 = shl i32 %21, 1, !dbg !6820
  %23 = add i32 %22, -1, !dbg !6821
  %24 = and i32 %23, %20, !dbg !6822
  %25 = sub i32 %22, %24, !dbg !6823
  %26 = icmp ugt i32 %19, %25, !dbg !6824
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !6825
  call void @llvm.dbg.value(metadata i32 %27, metadata !6804, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.value(metadata i32 %27, metadata !6803, metadata !DIExpression()), !dbg !6807
  store i32 %27, i32* %5, align 4, !dbg !6826
  %28 = load i32, i32* %13, align 4, !dbg !6827
  %29 = and i32 %28, 16, !dbg !6829
  %30 = icmp eq i32 %29, 0, !dbg !6829
  br i1 %30, label %31, label %32, !dbg !6830

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #20, !dbg !6831
  br label %32, !dbg !6833

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !6834
  %34 = icmp eq i8 %33, 4, !dbg !6836
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !6837
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !6837
  %37 = load i8, i8* %36, align 1, !dbg !6837
  %38 = zext i8 %37 to i32, !dbg !6837
  br i1 %34, label %39, label %43, !dbg !6838

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !6801, metadata !DIExpression(DW_OP_deref)), !dbg !6807
  call void @llvm.dbg.value(metadata i32* %5, metadata !6803, metadata !DIExpression(DW_OP_deref)), !dbg !6807
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #21, !dbg !6839
  call void @llvm.dbg.value(metadata i32 %40, metadata !6802, metadata !DIExpression()), !dbg !6807
  %41 = load i8*, i8** %4, align 4, !dbg !6841
  call void @llvm.dbg.value(metadata i8* %41, metadata !6801, metadata !DIExpression()), !dbg !6807
  %42 = load i32, i32* %5, align 4, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %42, metadata !6803, metadata !DIExpression()), !dbg !6807
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #21, !dbg !6843
  br label %47, !dbg !6844

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #21, !dbg !6845
  call void @llvm.dbg.value(metadata i32 %44, metadata !6802, metadata !DIExpression()), !dbg !6807
  %45 = load i8*, i8** %4, align 4, !dbg !6847
  call void @llvm.dbg.value(metadata i8* %45, metadata !6801, metadata !DIExpression()), !dbg !6807
  %46 = load i32, i32* %5, align 4, !dbg !6848
  call void @llvm.dbg.value(metadata i32 %46, metadata !6803, metadata !DIExpression()), !dbg !6807
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #21, !dbg !6849
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !6837
  call void @llvm.dbg.value(metadata i32 %48, metadata !6802, metadata !DIExpression()), !dbg !6807
  %49 = call i32 @SaveAndSetIRQMask() #20, !dbg !6850
  call void @llvm.dbg.value(metadata i32 %49, metadata !6806, metadata !DIExpression()), !dbg !6807
  %50 = load i8, i8* %14, align 1, !dbg !6851
  %51 = zext i8 %50 to i32, !dbg !6852
  %52 = add i32 %27, 1, !dbg !6853
  %53 = add i32 %52, %51, !dbg !6854
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6855
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6856
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6857
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !6858
  %54 = load i16, i16* %16, align 2, !dbg !6859
  call void @SFI_MacEnable(i16 noundef zeroext %54) #21, !dbg !6860
  %55 = load i16, i16* %16, align 2, !dbg !6861
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #21, !dbg !6862
  call void @RestoreIRQMask(i32 noundef %49) #20, !dbg !6863
  br label %56, !dbg !6864

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !6865
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !6867
  %59 = load i8, i8* %58, align 1, !dbg !6867
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #20, !dbg !6868
  call void @llvm.dbg.value(metadata i32 %60, metadata !6805, metadata !DIExpression()), !dbg !6807
  %61 = load i8*, i8** %17, align 4, !dbg !6869
  %62 = load i8, i8* %61, align 1, !dbg !6871
  %63 = zext i8 %62 to i32, !dbg !6871
  %64 = and i32 %60, %63, !dbg !6872
  %65 = icmp eq i32 %64, 0, !dbg !6873
  br i1 %65, label %66, label %56, !dbg !6874, !llvm.loop !6875

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !6877
  %67 = load i32, i32* %5, align 4, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %67, metadata !6803, metadata !DIExpression()), !dbg !6807
  %68 = load i8*, i8** %4, align 4, !dbg !6879
  call void @llvm.dbg.value(metadata i8* %68, metadata !6801, metadata !DIExpression()), !dbg !6807
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !6879
  call void @llvm.dbg.value(metadata i8* %69, metadata !6801, metadata !DIExpression()), !dbg !6807
  store i8* %69, i8** %4, align 4, !dbg !6879
  %70 = sub i32 %19, %27, !dbg !6880
  call void @llvm.dbg.value(metadata i32 %70, metadata !6798, metadata !DIExpression()), !dbg !6807
  %71 = add i32 %27, %20, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %71, metadata !6800, metadata !DIExpression()), !dbg !6807
  %72 = icmp eq i32 %70, 0, !dbg !6815
  br i1 %72, label %73, label %18, !dbg !6816, !llvm.loop !6882

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !6884
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !6885
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !6886
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6886
  ret void, !dbg !6886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !6887 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !6891, metadata !DIExpression()), !dbg !6893
  br label %2, !dbg !6894

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #20, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %3, metadata !6892, metadata !DIExpression()), !dbg !6893
  %4 = icmp eq i32 %3, 0, !dbg !6897
  br i1 %4, label %5, label %2, !dbg !6898, !llvm.loop !6899

5:                                                ; preds = %2
  ret void, !dbg !6901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !6902 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !6904, metadata !DIExpression()), !dbg !6905
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !6906
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !6906
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !6907
  %5 = load i8, i8* %4, align 1, !dbg !6907
  %6 = zext i8 %5 to i32, !dbg !6908
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #20, !dbg !6909
  ret void, !dbg !6910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !6911 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6914
  call void @llvm.dbg.value(metadata i32 %1, metadata !6913, metadata !DIExpression()), !dbg !6915
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !6916
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !6917
  ret void, !dbg !6918
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !6919 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !6923, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i8 %1, metadata !6924, metadata !DIExpression()), !dbg !6927
  %3 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %3, metadata !6925, metadata !DIExpression()), !dbg !6927
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !6929
  %5 = load i16, i16* %4, align 2, !dbg !6929
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #21, !dbg !6930
  %6 = zext i8 %1 to i32, !dbg !6931
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6932
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6933
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6934
  %7 = load i16, i16* %4, align 2, !dbg !6935
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #21, !dbg !6936
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6937
  %9 = lshr i32 %8, 8, !dbg !6938
  %10 = and i32 %9, 255, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %10, metadata !6926, metadata !DIExpression()), !dbg !6927
  tail call void @RestoreIRQMask(i32 noundef %3) #20, !dbg !6940
  ret i32 %10, !dbg !6941
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !6942 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6945
  call void @llvm.dbg.value(metadata i32 %1, metadata !6944, metadata !DIExpression()), !dbg !6946
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !6947
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6948
  %3 = and i32 %2, -513, !dbg !6948
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6948
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !6951
  ret void, !dbg !6952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !6953 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !6955, metadata !DIExpression()), !dbg !6957
  %2 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6958
  call void @llvm.dbg.value(metadata i32 %2, metadata !6956, metadata !DIExpression()), !dbg !6957
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !6959
  br i1 %3, label %4, label %5, !dbg !6961

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !6962
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !6964
  ret void, !dbg !6965

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !6966
  tail call void @Flash_ReturnReady() #20, !dbg !6968
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !6968
  unreachable, !dbg !6968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !6972 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !6974, metadata !DIExpression()), !dbg !6979
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6980
  call void @llvm.dbg.value(metadata i32 %1, metadata !6976, metadata !DIExpression()), !dbg !6979
  %2 = tail call i32 @get_NOR_init_status() #21, !dbg !6981
  %3 = icmp eq i32 %2, 0, !dbg !6983
  br i1 %3, label %4, label %125, !dbg !6984

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !6985
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !6986
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !6974, metadata !DIExpression()), !dbg !6979
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !6988
  %7 = load i32, i32* %6, align 4, !dbg !6988
  %8 = xor i32 %7, -1, !dbg !6988
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !6988
  %10 = load %struct.vdma_config_t*, %struct.vdma_config_t** %9, align 4, !dbg !6988
  %11 = ptrtoint %struct.vdma_config_t* %10 to i32, !dbg !6988
  %12 = icmp eq i32 %8, %11, !dbg !6988
  br i1 %12, label %14, label %13, !dbg !6991

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #20, !dbg !6992
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !6992
  unreachable, !dbg !6992

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !6994
  %16 = icmp ult i32 %15, 16, !dbg !6996
  br i1 %16, label %17, label %34, !dbg !6997

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !6998
  %19 = load i8, i8* %18, align 4, !dbg !6998
  %20 = icmp eq i8 %19, 1, !dbg !6999
  br i1 %20, label %21, label %34, !dbg !7000

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7001

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7003
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7005
  %27 = load i8, i8* %26, align 1, !dbg !7005
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #20, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %28, metadata !6975, metadata !DIExpression()), !dbg !6979
  %29 = load i8*, i8** %23, align 4, !dbg !7007
  %30 = load i8, i8* %29, align 1, !dbg !7009
  %31 = zext i8 %30 to i32, !dbg !7009
  %32 = and i32 %28, %31, !dbg !7010
  %33 = icmp eq i32 %32, 0, !dbg !7011
  br i1 %33, label %34, label %24, !dbg !7012, !llvm.loop !7013

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7015, !range !2535
  %36 = icmp ne i8 %35, 0, !dbg !7015
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7017
  br i1 %39, label %116, label %40, !dbg !7017

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7018
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7018
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7020
  %44 = load i8, i8* %43, align 1, !dbg !7020
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #20, !dbg !7021
  call void @llvm.dbg.value(metadata i32 %45, metadata !6975, metadata !DIExpression()), !dbg !6979
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7022
  %47 = load i8*, i8** %46, align 4, !dbg !7022
  %48 = load i8, i8* %47, align 1, !dbg !7024
  %49 = zext i8 %48 to i32, !dbg !7024
  %50 = and i32 %45, %49, !dbg !7025
  %51 = icmp eq i32 %50, 0, !dbg !7026
  br i1 %51, label %85, label %52, !dbg !7027

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #20, !dbg !7028
  br label %53, !dbg !7030

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7031
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7033
  %56 = load i8, i8* %55, align 1, !dbg !7033
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #20, !dbg !7034
  call void @llvm.dbg.value(metadata i32 %57, metadata !6975, metadata !DIExpression()), !dbg !6979
  %58 = load i8*, i8** %46, align 4, !dbg !7035
  %59 = load i8, i8* %58, align 1, !dbg !7037
  %60 = zext i8 %59 to i32, !dbg !7037
  %61 = and i32 %57, %60, !dbg !7038
  %62 = icmp eq i32 %61, 0, !dbg !7039
  br i1 %62, label %63, label %53, !dbg !7040, !llvm.loop !7041

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7043
  %65 = load i32, i32* %64, align 4, !dbg !7043
  %66 = and i32 %65, 4, !dbg !7045
  %67 = icmp eq i32 %66, 0, !dbg !7045
  br i1 %67, label %84, label %68, !dbg !7046

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7047
  %70 = load i8, i8* %69, align 4, !dbg !7047
  %71 = icmp eq i8 %70, 2, !dbg !7048
  br i1 %71, label %72, label %84, !dbg !7049

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7050
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7052
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7053
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7054
  %74 = load i16, i16* %73, align 2, !dbg !7054
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #21, !dbg !7055
  %75 = load i16, i16* %73, align 2, !dbg !7056
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #21, !dbg !7057
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7058
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7059
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7060
  %76 = load i16, i16* %73, align 2, !dbg !7061
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #21, !dbg !7062
  %77 = load i16, i16* %73, align 2, !dbg !7063
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #21, !dbg !7064
  br label %78, !dbg !7065

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7066
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7068
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7069
  %79 = load i16, i16* %73, align 2, !dbg !7070
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #21, !dbg !7071
  %80 = load i16, i16* %73, align 2, !dbg !7072
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #21, !dbg !7073
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7074
  call void @llvm.dbg.value(metadata i32 %81, metadata !6975, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !6979
  %82 = and i32 %81, 256, !dbg !7075
  %83 = icmp eq i32 %82, 0, !dbg !7075
  br i1 %83, label %84, label %78, !dbg !7075, !llvm.loop !7076

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !7078
  br label %116, !dbg !7079

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7080
  %87 = load i32, i32* %86, align 4, !dbg !7080
  %88 = and i32 %87, 2, !dbg !7083
  %89 = icmp eq i32 %88, 0, !dbg !7083
  br i1 %89, label %115, label %90, !dbg !7084

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7085
  %92 = load %struct.anon*, %struct.anon** %91, align 4, !dbg !7085
  %93 = icmp eq %struct.anon* %92, null, !dbg !7086
  br i1 %93, label %94, label %115, !dbg !7087

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7088
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7090
  %97 = load i8, i8* %96, align 1, !dbg !7090
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #20, !dbg !7091
  call void @llvm.dbg.value(metadata i32 %98, metadata !6975, metadata !DIExpression()), !dbg !6979
  %99 = load i8*, i8** %46, align 4, !dbg !7092
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7094
  %101 = load i8, i8* %100, align 1, !dbg !7094
  %102 = zext i8 %101 to i32, !dbg !7094
  %103 = and i32 %98, %102, !dbg !7095
  %104 = icmp eq i32 %103, 0, !dbg !7096
  br i1 %104, label %105, label %115, !dbg !7097

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7098
  %107 = load i8, i8* %106, align 1, !dbg !7098
  %108 = zext i8 %107 to i32, !dbg !7098
  %109 = and i32 %98, %108, !dbg !7099
  %110 = icmp eq i32 %109, 0, !dbg !7100
  br i1 %110, label %111, label %115, !dbg !7101

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7102
  %113 = load i16, i16* %112, align 2, !dbg !7102
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #21, !dbg !7104
  %114 = load i16, i16* %112, align 2, !dbg !7105
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #21, !dbg !7106
  br label %115, !dbg !7107

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !7108
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7109
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7110
  %118 = sub i32 0, %117, !dbg !7110
  call void @llvm.dbg.value(metadata i32 %118, metadata !6977, metadata !DIExpression()), !dbg !7111
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7112
  %120 = icmp ult i32 %119, %118, !dbg !7114
  br i1 %120, label %121, label %122, !dbg !7115

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7116
  br label %122, !dbg !7118

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7119
  %124 = and i32 %123, -513, !dbg !7119
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7119
  br label %125, !dbg !7122

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !6979
  ret void, !dbg !7123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7124 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7126, metadata !DIExpression()), !dbg !7130
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7131
  %3 = icmp eq i32 %2, -1, !dbg !7133
  br i1 %3, label %12, label %4, !dbg !7134

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7128, metadata !DIExpression()), !dbg !7130
  %5 = sub i32 0, %2, !dbg !7135
  call void @llvm.dbg.value(metadata i32 %5, metadata !7129, metadata !DIExpression()), !dbg !7130
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7137
  %7 = load i8, i8* %6, align 4, !dbg !7137
  %8 = zext i8 %7 to i32, !dbg !7139
  %9 = icmp ugt i32 %8, %5, !dbg !7140
  br i1 %9, label %10, label %12, !dbg !7141

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7142
  tail call void @DelayAWhile_UST(i32 noundef %11) #21, !dbg !7144
  br label %12, !dbg !7145

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7146
  call void @llvm.dbg.value(metadata i32 %13, metadata !7127, metadata !DIExpression()), !dbg !7130
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7147
  %15 = load i16, i16* %14, align 2, !dbg !7147
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7148
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7148
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7149
  %19 = load i8, i8* %18, align 1, !dbg !7149
  %20 = zext i8 %19 to i32, !dbg !7150
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #21, !dbg !7151
  tail call void @RestoreIRQMask(i32 noundef %13) #20, !dbg !7152
  ret void, !dbg !7153
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7154 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7157
  call void @llvm.dbg.value(metadata i32 %1, metadata !7156, metadata !DIExpression()), !dbg !7158
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7159
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7160
  %3 = and i32 %2, -513, !dbg !7160
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7160
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !7163
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7165 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7169, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i32 %1, metadata !7170, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i8 %2, metadata !7171, metadata !DIExpression()), !dbg !7173
  %4 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %4, metadata !7172, metadata !DIExpression()), !dbg !7173
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7175
  %6 = load i16, i16* %5, align 2, !dbg !7175
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #21, !dbg !7176
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7177
  %7 = zext i8 %2 to i32, !dbg !7178
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7179
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7180
  %8 = load i16, i16* %5, align 2, !dbg !7181
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #21, !dbg !7182
  tail call void @RestoreIRQMask(i32 noundef %4) #20, !dbg !7183
  ret void, !dbg !7184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7185 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7190
  call void @llvm.dbg.value(metadata i32 %1, metadata !7189, metadata !DIExpression()), !dbg !7191
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7192
  br i1 %2, label %4, label %3, !dbg !7194

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7195
  br label %4, !dbg !7197

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7198
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !7198
  ret i32 %5, !dbg !7199
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7200 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7207
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7204, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 0, metadata !7206, metadata !DIExpression()), !dbg !7208
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7209
  %3 = load i32, i32* %2, align 4, !dbg !7209
  %4 = xor i32 %3, -1, !dbg !7209
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7209
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** %5, align 4, !dbg !7209
  %7 = ptrtoint %struct.vdma_config_t* %6 to i32, !dbg !7209
  %8 = icmp eq i32 %4, %7, !dbg !7209
  br i1 %8, label %10, label %9, !dbg !7212

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !7213
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7213
  unreachable, !dbg !7213

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7215
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7216
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7216
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7217
  %14 = load i8, i8* %13, align 1, !dbg !7217
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #20, !dbg !7218
  call void @llvm.dbg.value(metadata i32 %15, metadata !7205, metadata !DIExpression()), !dbg !7208
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7219
  %17 = load i8*, i8** %16, align 4, !dbg !7219
  %18 = load i8, i8* %17, align 1, !dbg !7221
  %19 = zext i8 %18 to i32, !dbg !7221
  %20 = and i32 %15, %19, !dbg !7222
  %21 = icmp eq i32 %20, 0, !dbg !7223
  br i1 %21, label %22, label %23, !dbg !7224

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !7225
  call void @llvm.dbg.value(metadata i8 1, metadata !7206, metadata !DIExpression()), !dbg !7208
  br label %23, !dbg !7227

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7206, metadata !DIExpression()), !dbg !7208
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7228
  ret i1 %21, !dbg !7229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7230 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7232, metadata !DIExpression()), !dbg !7233
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7234, !range !2535
  %2 = icmp eq i8 %1, 0, !dbg !7234
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7234
  %4 = icmp eq i8 %3, 0, !dbg !7234
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7234
  br i1 %5, label %6, label %7, !dbg !7234

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !7237
  tail call void @Flash_ReturnReady() #20, !dbg !7239
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7239
  unreachable, !dbg !7239

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7243
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7232, metadata !DIExpression()), !dbg !7233
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #20, !dbg !7244
  ret void, !dbg !7245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7246 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7248, metadata !DIExpression()), !dbg !7250
  %2 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7251
  call void @llvm.dbg.value(metadata i32 %2, metadata !7249, metadata !DIExpression()), !dbg !7250
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7252
  %4 = load i16, i16* %3, align 2, !dbg !7252
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7253
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7253
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7254
  %8 = load i8, i8* %7, align 1, !dbg !7254
  %9 = zext i8 %8 to i32, !dbg !7255
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #21, !dbg !7256
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7257
  %11 = load i8, i8* %10, align 4, !dbg !7257
  %12 = icmp eq i8 %11, 0, !dbg !7259
  br i1 %12, label %14, label %13, !dbg !7260

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7261
  br label %14, !dbg !7263

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !7264
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !7265
  ret void, !dbg !7266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7267 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7269, metadata !DIExpression()), !dbg !7271
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7272
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !7273
  ret void, !dbg !7274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7275 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7279
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7277, metadata !DIExpression()), !dbg !7280
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7281, !range !2535
  %3 = icmp ne i8 %2, 0, !dbg !7281
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7281
  %5 = icmp eq i8 %4, 0, !dbg !7281
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7281
  br i1 %6, label %8, label %7, !dbg !7281

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !7284
  tail call void @Flash_ReturnReady() #20, !dbg !7286
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7286
  unreachable, !dbg !7286

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7290
  %10 = load i32, i32* %9, align 4, !dbg !7290
  %11 = xor i32 %10, -1, !dbg !7290
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7290
  %13 = load %struct.vdma_config_t*, %struct.vdma_config_t** %12, align 4, !dbg !7290
  %14 = ptrtoint %struct.vdma_config_t* %13 to i32, !dbg !7290
  %15 = icmp eq i32 %11, %14, !dbg !7290
  br i1 %15, label %17, label %16, !dbg !7293

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #20, !dbg !7294
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7294
  unreachable, !dbg !7294

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !7296
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !7297

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !7298
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !7300
  %23 = load i8, i8* %22, align 1, !dbg !7300
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #20, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %24, metadata !7278, metadata !DIExpression()), !dbg !7280
  %25 = load i8*, i8** %19, align 4, !dbg !7302
  %26 = load i8, i8* %25, align 1, !dbg !7304
  %27 = zext i8 %26 to i32, !dbg !7304
  %28 = and i32 %24, %27, !dbg !7305
  %29 = icmp eq i32 %28, 0, !dbg !7306
  br i1 %29, label %30, label %20, !dbg !7307, !llvm.loop !7308

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !7310
  ret void, !dbg !7311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #8 section ".ram_code" !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7314, metadata !DIExpression()), !dbg !7315
  ret void, !dbg !7316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !7317 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7340, metadata !DIExpression()), !dbg !7343
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7341, metadata !DIExpression()), !dbg !7343
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7344
  %4 = load i8*, i8** %3, align 4, !dbg !7344
  call void @llvm.dbg.value(metadata i8* %4, metadata !7342, metadata !DIExpression()), !dbg !7343
  store i8 1, i8* %4, align 1, !dbg !7345
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7346
  store i8 2, i8* %5, align 1, !dbg !7347
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7348
  store i8 8, i8* %6, align 1, !dbg !7349
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7350
  store i8 4, i8* %7, align 1, !dbg !7351
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7352
  store i8 60, i8* %8, align 1, !dbg !7353
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7354
  store i8 -128, i8* %9, align 1, !dbg !7355
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !7356
  store i8 96, i8* %10, align 1, !dbg !7357
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7358
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7358
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !7359
  store i8 43, i8* %13, align 1, !dbg !7360
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7361
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !7362
  store i8 43, i8* %15, align 1, !dbg !7363
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7364
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !7365
  store i8 47, i8* %17, align 1, !dbg !7366
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7367
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !7368
  store i8 5, i8* %19, align 1, !dbg !7369
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7370
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !7371
  store i8 1, i8* %21, align 1, !dbg !7372
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7373
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !7374
  store i8 43, i8* %23, align 1, !dbg !7375
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7376
  store i8 22, i8* %24, align 4, !dbg !7377
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !7378
  %26 = load i8, i8* %25, align 1, !dbg !7378
  %27 = icmp eq i8 %26, 32, !dbg !7380
  br i1 %27, label %28, label %49, !dbg !7381

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !7382
  %30 = load i8, i8* %29, align 1, !dbg !7382
  %31 = icmp eq i8 %30, 24, !dbg !7383
  br i1 %31, label %32, label %41, !dbg !7384

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7385
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !7387
  store i8 117, i8* %34, align 1, !dbg !7388
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7389
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !7390
  store i8 122, i8* %36, align 1, !dbg !7391
  %37 = load i8, i8* %25, align 1, !dbg !7392
  %38 = icmp eq i8 %37, 32, !dbg !7394
  br i1 %38, label %39, label %49, !dbg !7395

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !7397
  br label %41, !dbg !7397

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !7397
  %43 = icmp eq i8 %42, 22, !dbg !7398
  br i1 %43, label %44, label %49, !dbg !7399

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7400
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !7402
  store i8 117, i8* %46, align 1, !dbg !7403
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7404
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !7405
  store i8 122, i8* %48, align 1, !dbg !7406
  br label %49, !dbg !7407

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7408
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !7409
  ret i32 0, !dbg !7410
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !7411 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7413, metadata !DIExpression()), !dbg !7417
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7418
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7414, metadata !DIExpression()), !dbg !7417
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7419
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !7420
  %5 = load i8, i8* %4, align 1, !dbg !7422
  %6 = icmp eq i8 %5, -62, !dbg !7423
  br i1 %6, label %7, label %15, !dbg !7424

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !7425
  %9 = load i8, i8* %8, align 1, !dbg !7425
  %10 = icmp eq i8 %9, 32, !dbg !7426
  br i1 %10, label %11, label %15, !dbg !7427

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !7428
  %13 = load i8, i8* %12, align 1, !dbg !7428
  %14 = icmp eq i8 %13, 22, !dbg !7429
  br i1 %14, label %48, label %15, !dbg !7430

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !7431
  %17 = bitcast i8* %16 to i16*, !dbg !7431
  %18 = load i16, i16* %17, align 2, !dbg !7431
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7432
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !7432
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7432
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !7433
  %23 = load i8, i8* %22, align 1, !dbg !7433
  %24 = zext i8 %23 to i32, !dbg !7434
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #21, !dbg !7435
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !7436
  %25 = load i16, i16* %17, align 2, !dbg !7437
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7438
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !7439
  call void @llvm.dbg.value(metadata i8* %2, metadata !7416, metadata !DIExpression(DW_OP_deref)), !dbg !7417
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7440
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7441
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !7442
  %30 = load i8, i8* %29, align 1, !dbg !7442
  %31 = zext i8 %30 to i32, !dbg !7443
  call void @llvm.dbg.value(metadata i32 %31, metadata !7415, metadata !DIExpression()), !dbg !7417
  %32 = shl nuw nsw i32 %31, 8, !dbg !7444
  %33 = load i8, i8* %2, align 1, !dbg !7445
  call void @llvm.dbg.value(metadata i8 %33, metadata !7416, metadata !DIExpression()), !dbg !7417
  %34 = zext i8 %33 to i32, !dbg !7445
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !7446
  %36 = bitcast i8* %35 to i8**, !dbg !7446
  %37 = load i8*, i8** %36, align 4, !dbg !7446
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !7447
  %39 = load i8, i8* %38, align 1, !dbg !7447
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !7448
  %41 = load i8, i8* %40, align 1, !dbg !7448
  %42 = or i8 %41, %39, !dbg !7449
  %43 = zext i8 %42 to i32, !dbg !7449
  %44 = xor i32 %43, -1, !dbg !7450
  %45 = and i32 %44, %34, !dbg !7451
  %46 = or i32 %45, %32, !dbg !7452
  call void @llvm.dbg.value(metadata i32 %46, metadata !7415, metadata !DIExpression()), !dbg !7417
  %47 = load i16, i16* %17, align 2, !dbg !7453
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #21, !dbg !7454
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !7455
  br label %48, !dbg !7456

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7457
  ret i32 0, !dbg !7457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7458 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7460, metadata !DIExpression()), !dbg !7462
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7463
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !7464

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !7465
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !7467
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !7468
  call void @llvm.dbg.value(metadata i8* %2, metadata !7461, metadata !DIExpression(DW_OP_deref)), !dbg !7462
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7469
  %10 = load i8, i8* %2, align 1, !dbg !7470
  call void @llvm.dbg.value(metadata i8 %10, metadata !7461, metadata !DIExpression()), !dbg !7462
  %11 = load i8*, i8** %5, align 4, !dbg !7471
  %12 = load i8, i8* %11, align 1, !dbg !7472
  %13 = and i8 %12, %10, !dbg !7473
  %14 = icmp eq i8 %13, 0, !dbg !7474
  br i1 %14, label %15, label %6, !dbg !7475, !llvm.loop !7476

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7478
  ret void, !dbg !7478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !7479 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7481, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7482, metadata !DIExpression()), !dbg !7484
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7485
  %4 = load i8*, i8** %3, align 4, !dbg !7485
  call void @llvm.dbg.value(metadata i8* %4, metadata !7483, metadata !DIExpression()), !dbg !7484
  store i8 1, i8* %4, align 1, !dbg !7486
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7487
  store i8 2, i8* %5, align 1, !dbg !7488
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7489
  store i8 -128, i8* %6, align 1, !dbg !7490
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7491
  store i8 -128, i8* %7, align 1, !dbg !7492
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7493
  store i8 60, i8* %8, align 1, !dbg !7494
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7495
  store i8 -128, i8* %9, align 1, !dbg !7496
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7497
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7497
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !7498
  store i8 -97, i8* %12, align 1, !dbg !7499
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7500
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !7501
  store i8 53, i8* %14, align 1, !dbg !7502
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7503
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !7504
  store i8 53, i8* %16, align 1, !dbg !7505
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7506
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !7507
  store i8 5, i8* %18, align 1, !dbg !7508
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7509
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !7510
  store i8 1, i8* %20, align 1, !dbg !7511
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7512
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !7513
  store i8 117, i8* %22, align 1, !dbg !7514
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7515
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !7516
  store i8 122, i8* %24, align 1, !dbg !7517
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7518
  store i8 22, i8* %25, align 4, !dbg !7519
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7520
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !7521
  ret i32 0, !dbg !7522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #8 !dbg !7523 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7525, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7526, metadata !DIExpression()), !dbg !7527
  ret i32 0, !dbg !7528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !7529 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !7531, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7532, metadata !DIExpression()), !dbg !7533
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !7534
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !7535
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !7536
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !7537
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !7538
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !7539
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !7540
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !7541
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !7542
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !7543
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !7544
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !7545
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !7546
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !7547
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !7548
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !7549
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !7550
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !7551
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !7552
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !7553
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !7554
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !7555
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !7556
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !7557
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !7558
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !7559
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !7560
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !7561
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !7562
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !7563
  %18 = tail call i32 @custom_get_NORFLASH_Size() #21, !dbg !7564
  %19 = icmp ugt i32 %18, 16777216, !dbg !7566
  %20 = select i1 %19, i8 4, i8 3, !dbg !7567
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !7568
  store i8 %20, i8* %21, align 1, !dbg !7570
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7571
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7571
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !7572
  store i8 0, i8* %24, align 1, !dbg !7573
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7574
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !7575
  store i8 -81, i8* %26, align 1, !dbg !7576
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7577
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !7578
  store i8 -97, i8* %28, align 1, !dbg !7579
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7580
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !7581
  store i8 2, i8* %30, align 1, !dbg !7582
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7583
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !7584
  store i8 32, i8* %32, align 1, !dbg !7585
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7586
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !7587
  store i8 82, i8* %34, align 1, !dbg !7588
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7589
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !7590
  store i8 -40, i8* %36, align 1, !dbg !7591
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7592
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !7593
  store i8 -80, i8* %38, align 1, !dbg !7594
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7595
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !7596
  store i8 48, i8* %40, align 1, !dbg !7597
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7598
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !7599
  store i8 6, i8* %42, align 1, !dbg !7600
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7601
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !7602
  store i8 -71, i8* %44, align 1, !dbg !7603
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7604
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !7605
  store i8 -85, i8* %46, align 1, !dbg !7606
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7607
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !7608
  store i8 5, i8* %48, align 1, !dbg !7609
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !7610
  store i16 0, i16* %49, align 4, !dbg !7611
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !7612
  store %struct.anon* null, %struct.anon** %50, align 4, !dbg !7613
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !7614
  store %struct.anon* null, %struct.anon** %51, align 4, !dbg !7615
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !7616
  store i8 0, i8* %52, align 4, !dbg !7617
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7618
  store i8 5, i8* %53, align 4, !dbg !7619
  ret i32 0, !dbg !7620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !7621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7623, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i8* %1, metadata !7624, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i8* %1, metadata !7625, metadata !DIExpression()), !dbg !7641
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7642
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7638, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i32 0, metadata !7639, metadata !DIExpression()), !dbg !7641
  %4 = bitcast i8* %1 to i32*, !dbg !7643
  store i32 0, i32* %4, align 4, !dbg !7644
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.vdma_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !7639, metadata !DIExpression()), !dbg !7641
  %7 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7645
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %7, i32 0, i32 0, !dbg !7646
  %9 = load i32, i32* %8, align 4, !dbg !7646
  %10 = icmp eq i32 %9, 0, !dbg !7647
  br i1 %10, label %34, label %11, !dbg !7648

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !7648

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !7639, metadata !DIExpression()), !dbg !7641
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !7649
  store i32 %17, i32* %19, align 4, !dbg !7651
  %20 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7652
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %20, i32 %18, i32 1, !dbg !7653
  %22 = load i32, i32* %21, align 4, !dbg !7653
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !7654
  store i32 %22, i32* %23, align 4, !dbg !7655
  %24 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7656
  %25 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %24, i32 %18, i32 1, !dbg !7657
  %26 = load i32, i32* %25, align 4, !dbg !7657
  %27 = load i32, i32* %4, align 4, !dbg !7658
  %28 = add i32 %27, %26, !dbg !7658
  store i32 %28, i32* %4, align 4, !dbg !7658
  %29 = add i32 %18, 1, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %29, metadata !7639, metadata !DIExpression()), !dbg !7641
  %30 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7645
  %31 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %30, i32 %29, i32 0, !dbg !7646
  %32 = load i32, i32* %31, align 4, !dbg !7646
  %33 = icmp eq i32 %32, 0, !dbg !7647
  br i1 %33, label %34, label %16, !dbg !7648, !llvm.loop !7660

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !7641
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !7662
  %37 = bitcast i8* %36 to i32*, !dbg !7662
  store i32 %35, i32* %37, align 4, !dbg !7663
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !7664
  %39 = bitcast i8* %38 to i16*, !dbg !7664
  store i16 512, i16* %39, align 4, !dbg !7665
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !7666
  br label %40, !dbg !7667

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7668
  call void @llvm.dbg.value(metadata i32 %41, metadata !7640, metadata !DIExpression()), !dbg !7641
  %42 = icmp eq i32 %41, -121, !dbg !7670
  br i1 %42, label %40, label %43, !dbg !7671, !llvm.loop !7672

43:                                               ; preds = %40
  ret i32 0, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !7675 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7677, metadata !DIExpression()), !dbg !7681
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7682
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !7678, metadata !DIExpression()), !dbg !7681
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7683
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !7684

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7685
  call void @llvm.dbg.value(metadata i32 %8, metadata !7680, metadata !DIExpression()), !dbg !7681
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7687, !range !2535
  %10 = icmp eq i8 %9, 0, !dbg !7687
  br i1 %10, label %12, label %11, !dbg !7689

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #20, !dbg !7690
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7692
  br label %12, !dbg !7693

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !7694
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !7695
  %15 = load i8, i8* %14, align 1, !dbg !7695
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #20, !dbg !7696
  call void @llvm.dbg.value(metadata i32 %16, metadata !7679, metadata !DIExpression()), !dbg !7681
  %17 = load i8*, i8** %6, align 4, !dbg !7697
  %18 = load i8, i8* %17, align 1, !dbg !7699
  %19 = zext i8 %18 to i32, !dbg !7699
  %20 = and i32 %16, %19, !dbg !7700
  %21 = icmp eq i32 %20, 0, !dbg !7701
  br i1 %21, label %22, label %25, !dbg !7702

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !7703
  tail call void @RestoreIRQMask(i32 noundef %8) #20, !dbg !7705
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7706
  %24 = bitcast i8* %23 to i8**, !dbg !7706
  store i8* null, i8** %24, align 4, !dbg !7707
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7708
  ret i32 0, !dbg !7709

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #20, !dbg !7710
  br label %7, !dbg !7684, !llvm.loop !7712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !7714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7716, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %1, metadata !7717, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 0, metadata !7718, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 1, metadata !7722, metadata !DIExpression()), !dbg !7730
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7731
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7723, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 0, metadata !7724, metadata !DIExpression()), !dbg !7730
  %4 = bitcast i8* %0 to i32*, !dbg !7732
  %5 = load i32, i32* %4, align 4, !dbg !7732
  %6 = xor i32 %5, -1, !dbg !7732
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7732
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !7732
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !7732
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !7732
  %11 = icmp eq i32 %6, %10, !dbg !7732
  br i1 %11, label %13, label %12, !dbg !7735

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #20, !dbg !7736
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7736
  unreachable, !dbg !7736

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7738
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !7739
  store i8 2, i8* %14, align 4, !dbg !7740
  call void @llvm.dbg.value(metadata i32 %19, metadata !7724, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %1, metadata !7717, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !7730
  br label %15, !dbg !7741

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %16, metadata !7718, metadata !DIExpression()), !dbg !7730
  %17 = icmp eq i32 %16, -121, !dbg !7744
  br i1 %17, label %15, label %18, !dbg !7745, !llvm.loop !7746

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !7748
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7749
  %21 = bitcast i8* %20 to i8**, !dbg !7749
  %22 = load i8*, i8** %21, align 4, !dbg !7749
  %23 = ptrtoint i8* %22 to i32, !dbg !7750
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #21, !dbg !7751
  call void @llvm.dbg.value(metadata i32 %24, metadata !7719, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %24, metadata !7720, metadata !DIExpression()), !dbg !7730
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !7752
  %26 = bitcast i8* %25 to i16*, !dbg !7752
  %27 = load i16, i16* %26, align 2, !dbg !7752
  %28 = zext i16 %27 to i32, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %28, metadata !7725, metadata !DIExpression()), !dbg !7754
  %29 = lshr i32 %24, 10, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %29, metadata !7728, metadata !DIExpression()), !dbg !7754
  %30 = and i32 %29, %28, !dbg !7756
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !7758
  %33 = icmp eq i32 %32, 0, !dbg !7758
  call void @llvm.dbg.value(metadata i32 0, metadata !7729, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %29, metadata !7728, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %28, metadata !7725, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 1, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %24, metadata !7720, metadata !DIExpression()), !dbg !7730
  br i1 %33, label %34, label %51, !dbg !7758

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7729, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %36, metadata !7728, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %37, metadata !7725, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %38, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %39, metadata !7720, metadata !DIExpression()), !dbg !7730
  %40 = and i32 %37, 1, !dbg !7759
  %41 = icmp eq i32 %40, 0, !dbg !7759
  %42 = add i32 %35, 10, !dbg !7765
  %43 = shl nuw i32 1, %42, !dbg !7765
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !7765
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !7765
  call void @llvm.dbg.value(metadata i32 %45, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %44, metadata !7720, metadata !DIExpression()), !dbg !7730
  %46 = lshr i32 %37, 1, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %46, metadata !7725, metadata !DIExpression()), !dbg !7754
  %47 = lshr i32 %36, 1, !dbg !7767
  call void @llvm.dbg.value(metadata i32 %47, metadata !7728, metadata !DIExpression()), !dbg !7754
  %48 = add i32 %35, 1, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %48, metadata !7729, metadata !DIExpression()), !dbg !7754
  %49 = and i32 %36, 2, !dbg !7769
  %50 = icmp eq i32 %49, 0, !dbg !7769
  br i1 %50, label %34, label %51, !dbg !7770, !llvm.loop !7771

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !7773
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !7774
  call void @llvm.dbg.value(metadata i32 %53, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %52, metadata !7720, metadata !DIExpression()), !dbg !7730
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !7775

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7776
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !7776
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !7776
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !7778
  br label %70, !dbg !7779

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7780
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !7780
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !7780
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !7781
  br label %70, !dbg !7782

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7783
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !7783
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !7783
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !7784
  br label %70, !dbg !7785

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #20, !dbg !7786
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7786
  unreachable, !dbg !7786

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !7790
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !7790
  store i8 %73, i8* %74, align 1, !dbg !7790
  call void @llvm.dbg.value(metadata i32 %53, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %52, metadata !7720, metadata !DIExpression()), !dbg !7730
  %75 = trunc i32 %19 to i8, !dbg !7791
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !7791

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7792
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !7792
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !7792
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !7794
  br label %91, !dbg !7795

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7796
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !7796
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !7796
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !7797
  br label %91, !dbg !7798

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7799
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !7799
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !7799
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !7800
  br label %91, !dbg !7801

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !7802
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !7802
  store i8 %94, i8* %95, align 1, !dbg !7802
  br label %96, !dbg !7803

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !7721, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %53, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %16, metadata !7718, metadata !DIExpression()), !dbg !7730
  %97 = icmp eq i32 %53, 0, !dbg !7803
  br i1 %97, label %111, label %98, !dbg !7806

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !7807
  call void @llvm.dbg.value(metadata i8* %99, metadata !7721, metadata !DIExpression()), !dbg !7730
  %100 = ptrtoint i8* %99 to i32, !dbg !7808
  call void @llvm.dbg.value(metadata i32 %100, metadata !7721, metadata !DIExpression()), !dbg !7730
  br label %101, !dbg !7806

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !7722, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %103, metadata !7721, metadata !DIExpression()), !dbg !7730
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #20, !dbg !7809
  br label %104, !dbg !7811

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %105, metadata !7718, metadata !DIExpression()), !dbg !7730
  %106 = icmp eq i32 %105, -121, !dbg !7814
  br i1 %106, label %104, label %107, !dbg !7816, !llvm.loop !7817

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !7819
  call void @llvm.dbg.value(metadata i32 %108, metadata !7722, metadata !DIExpression()), !dbg !7730
  %109 = add i32 %103, %52, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %109, metadata !7721, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata i32 %105, metadata !7718, metadata !DIExpression()), !dbg !7730
  %110 = icmp eq i32 %108, 0, !dbg !7803
  br i1 %110, label %111, label %101, !dbg !7806, !llvm.loop !7821

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !7730
  store i8 0, i8* %14, align 4, !dbg !7823
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7824
  ret i32 %112, !dbg !7825
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !7826 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7828, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %1, metadata !7829, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %2, metadata !7830, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %3, metadata !7831, metadata !DIExpression()), !dbg !7845
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7846
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !7832, metadata !DIExpression()), !dbg !7845
  %8 = ptrtoint i8* %1 to i32, !dbg !7847
  call void @llvm.dbg.value(metadata i32 %8, metadata !7834, metadata !DIExpression()), !dbg !7845
  %9 = bitcast i8** %5 to i8*, !dbg !7848
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !7848
  call void @llvm.dbg.value(metadata i8* %2, metadata !7835, metadata !DIExpression()), !dbg !7845
  store i8* %2, i8** %5, align 4, !dbg !7849
  call void @llvm.dbg.value(metadata i32 0, metadata !7837, metadata !DIExpression()), !dbg !7845
  %10 = bitcast i32* %6 to i8*, !dbg !7850
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !7850
  %11 = bitcast i8* %0 to i32*, !dbg !7851
  %12 = load i32, i32* %11, align 4, !dbg !7851
  %13 = xor i32 %12, -1, !dbg !7851
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7851
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !7851
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !7851
  %17 = ptrtoint %struct.vdma_config_t* %16 to i32, !dbg !7851
  %18 = icmp eq i32 %13, %17, !dbg !7851
  br i1 %18, label %20, label %19, !dbg !7854

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #20, !dbg !7855
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7855
  unreachable, !dbg !7855

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7857
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !7858
  store i8 1, i8* %21, align 4, !dbg !7859
  br label %22, !dbg !7860

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %23, metadata !7837, metadata !DIExpression()), !dbg !7845
  %24 = icmp eq i32 %23, -121, !dbg !7863
  br i1 %24, label %22, label %25, !dbg !7864, !llvm.loop !7865

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !7867
  br i1 %26, label %104, label %27, !dbg !7868

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !7868

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !7869
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !7845
  call void @llvm.dbg.value(metadata i32 %38, metadata !7834, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %37, metadata !7831, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %36, metadata !7835, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %36, metadata !7836, metadata !DIExpression()), !dbg !7845
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7870
  %40 = shl i32 %39, 1, !dbg !7871
  %41 = add i32 %40, -1, !dbg !7872
  %42 = and i32 %41, %38, !dbg !7873
  %43 = sub i32 %40, %42, !dbg !7874
  %44 = icmp ugt i32 %37, %43, !dbg !7875
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !7876
  call void @llvm.dbg.value(metadata i32 %45, metadata !7838, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %45, metadata !7839, metadata !DIExpression()), !dbg !7845
  store i32 %45, i32* %6, align 4, !dbg !7877
  call void @llvm.dbg.value(metadata i8* %36, metadata !7835, metadata !DIExpression()), !dbg !7845
  %46 = ptrtoint i8* %36 to i32, !dbg !7878
  %47 = and i32 %46, 134217728, !dbg !7879
  %48 = icmp eq i32 %47, 0, !dbg !7879
  br i1 %48, label %58, label %49, !dbg !7880

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !7841, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i32 %45, metadata !7839, metadata !DIExpression()), !dbg !7845
  %50 = icmp eq i32 %45, 0, !dbg !7882
  br i1 %50, label %58, label %51, !dbg !7885

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !7841, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i8* %36, metadata !7835, metadata !DIExpression()), !dbg !7845
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !7886
  %54 = load i8, i8* %53, align 1, !dbg !7886
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !7888
  store i8 %54, i8* %55, align 1, !dbg !7889
  %56 = add nuw i32 %52, 1, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %56, metadata !7841, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i32 %45, metadata !7839, metadata !DIExpression()), !dbg !7845
  %57 = icmp eq i32 %56, %45, !dbg !7882
  br i1 %57, label %58, label %51, !dbg !7885, !llvm.loop !7891

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !7893
  call void @llvm.dbg.value(metadata i8* %59, metadata !7836, metadata !DIExpression()), !dbg !7845
  %60 = load i32, i32* %29, align 4, !dbg !7894
  %61 = and i32 %60, 16, !dbg !7896
  %62 = icmp eq i32 %61, 0, !dbg !7896
  br i1 %62, label %63, label %64, !dbg !7897

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #20, !dbg !7898
  br label %64, !dbg !7900

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !7901
  %66 = icmp eq i8 %65, 4, !dbg !7903
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !7904
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !7904
  %69 = load i8, i8* %68, align 1, !dbg !7904
  %70 = zext i8 %69 to i32, !dbg !7904
  br i1 %66, label %71, label %75, !dbg !7905

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !7835, metadata !DIExpression(DW_OP_deref)), !dbg !7845
  call void @llvm.dbg.value(metadata i32* %6, metadata !7839, metadata !DIExpression(DW_OP_deref)), !dbg !7845
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #21, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %72, metadata !7840, metadata !DIExpression()), !dbg !7845
  %73 = load i8*, i8** %5, align 4, !dbg !7908
  call void @llvm.dbg.value(metadata i8* %73, metadata !7835, metadata !DIExpression()), !dbg !7845
  %74 = load i32, i32* %6, align 4, !dbg !7909
  call void @llvm.dbg.value(metadata i32 %74, metadata !7839, metadata !DIExpression()), !dbg !7845
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #21, !dbg !7910
  br label %79, !dbg !7911

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #21, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %76, metadata !7840, metadata !DIExpression()), !dbg !7845
  %77 = load i8*, i8** %5, align 4, !dbg !7914
  call void @llvm.dbg.value(metadata i8* %77, metadata !7835, metadata !DIExpression()), !dbg !7845
  %78 = load i32, i32* %6, align 4, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %78, metadata !7839, metadata !DIExpression()), !dbg !7845
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #21, !dbg !7916
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !7904
  call void @llvm.dbg.value(metadata i32 %80, metadata !7840, metadata !DIExpression()), !dbg !7845
  %81 = call i32 @SaveAndSetIRQMask() #20, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %81, metadata !7833, metadata !DIExpression()), !dbg !7845
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7918
  %82 = load i8, i8* %30, align 1, !dbg !7919
  %83 = zext i8 %82 to i32, !dbg !7920
  %84 = add i32 %45, 1, !dbg !7921
  %85 = add i32 %84, %83, !dbg !7922
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7923
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7924
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !7925
  %86 = load i16, i16* %34, align 2, !dbg !7926
  call void @SFI_MacEnable(i16 noundef zeroext %86) #21, !dbg !7927
  %87 = load i16, i16* %34, align 2, !dbg !7928
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #21, !dbg !7929
  call void @RestoreIRQMask(i32 noundef %81) #20, !dbg !7930
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !7931

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !7932
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #20, !dbg !7934
  call void @llvm.dbg.value(metadata i32 %94, metadata !7837, metadata !DIExpression()), !dbg !7845
  %95 = icmp eq i32 %94, 0, !dbg !7935
  br i1 %95, label %92, label %96, !dbg !7936, !llvm.loop !7937

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !7939
  call void @llvm.dbg.value(metadata i32 %97, metadata !7839, metadata !DIExpression()), !dbg !7845
  %98 = load i8*, i8** %5, align 4, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %98, metadata !7835, metadata !DIExpression()), !dbg !7845
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %99, metadata !7835, metadata !DIExpression()), !dbg !7845
  store i8* %99, i8** %5, align 4, !dbg !7940
  %100 = sub i32 %37, %45, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %100, metadata !7831, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 undef, metadata !7834, metadata !DIExpression()), !dbg !7845
  %101 = icmp eq i32 %94, 1, !dbg !7942
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !7944
  br i1 %103, label %35, label %104, !dbg !7944, !llvm.loop !7945

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !7845
  call void @llvm.dbg.value(metadata i32 %105, metadata !7837, metadata !DIExpression()), !dbg !7845
  store i8 0, i8* %21, align 4, !dbg !7947
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7948
  %106 = icmp eq i32 %105, 1, !dbg !7949
  %107 = select i1 %106, i32 0, i32 %105, !dbg !7845
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !7951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !7951
  ret i32 %107, !dbg !7951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #8 section ".ram_code" !dbg !7952 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 undef, metadata !7955, metadata !DIExpression()), !dbg !7956
  ret i32 -12, !dbg !7957
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !7958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7960, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i32 undef, metadata !7961, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i32 0, metadata !7963, metadata !DIExpression()), !dbg !7970
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7971
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7964, metadata !DIExpression()), !dbg !7970
  %4 = bitcast i8* %0 to i32*, !dbg !7972
  %5 = load i32, i32* %4, align 4, !dbg !7972
  %6 = xor i32 %5, -1, !dbg !7972
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7972
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !7972
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !7972
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !7972
  %11 = icmp eq i32 %6, %10, !dbg !7972
  br i1 %11, label %13, label %12, !dbg !7975

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #20, !dbg !7976
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7976
  unreachable, !dbg !7976

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7978
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !7978
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7978
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !7979
  %18 = load i8, i8* %17, align 1, !dbg !7979
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #20, !dbg !7980
  call void @llvm.dbg.value(metadata i32 %19, metadata !7965, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7970
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7981
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !7982
  %22 = load i8, i8* %21, align 1, !dbg !7982
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #20, !dbg !7983
  call void @llvm.dbg.value(metadata i32 %23, metadata !7966, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7970
  %24 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7984
  call void @llvm.dbg.value(metadata i32 %24, metadata !7963, metadata !DIExpression()), !dbg !7970
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !7985
  %26 = bitcast i8* %25 to i8**, !dbg !7985
  %27 = load i8*, i8** %26, align 4, !dbg !7985
  %28 = load i8, i8* %27, align 1, !dbg !7986
  %29 = zext i8 %28 to i32, !dbg !7986
  %30 = and i32 %19, %29, !dbg !7987
  %31 = icmp eq i32 %30, 0, !dbg !7988
  br i1 %31, label %32, label %62, !dbg !7989

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !7966, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7970
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !7990
  %34 = load i8, i8* %33, align 1, !dbg !7990
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !7991
  %36 = load i8, i8* %35, align 1, !dbg !7991
  %37 = or i8 %36, %34, !dbg !7992
  call void @llvm.dbg.value(metadata i8 %37, metadata !7967, metadata !DIExpression()), !dbg !7993
  %38 = zext i8 %37 to i32, !dbg !7994
  %39 = and i32 %23, %38, !dbg !7996
  %40 = icmp eq i32 %39, 0, !dbg !7997
  br i1 %40, label %41, label %46, !dbg !7998

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !7999
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8000
  br i1 %45, label %51, label %46, !dbg !8000

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8001, !range !2535
  %48 = icmp eq i8 %47, 0, !dbg !8001
  br i1 %48, label %49, label %50, !dbg !8005

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #20, !dbg !8006
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8006
  unreachable, !dbg !8006

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !8008
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8009
  call void @llvm.dbg.value(metadata i32 -121, metadata !7962, metadata !DIExpression()), !dbg !7970
  br label %62, !dbg !8010

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8011
  %53 = bitcast i8* %52 to i32*, !dbg !8011
  %54 = load i32, i32* %53, align 4, !dbg !8011
  %55 = and i32 %54, 2, !dbg !8014
  %56 = icmp eq i32 %55, 0, !dbg !8014
  br i1 %56, label %63, label %57, !dbg !8015

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8016
  %59 = bitcast i8* %58 to i16*, !dbg !8016
  %60 = load i16, i16* %59, align 2, !dbg !8016
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #21, !dbg !8018
  %61 = load i16, i16* %59, align 2, !dbg !8019
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #21, !dbg !8020
  br label %63, !dbg !8021

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !7962, metadata !DIExpression()), !dbg !7970
  tail call void @RestoreIRQMask(i32 noundef %24) #20, !dbg !8022
  br label %65, !dbg !8023

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !8024
  tail call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !8025
  call void @llvm.dbg.value(metadata i32 0, metadata !7962, metadata !DIExpression()), !dbg !7970
  tail call void @RestoreIRQMask(i32 noundef %24) #20, !dbg !8022
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #20, !dbg !8026
  call void @llvm.dbg.value(metadata i32 %64, metadata !7962, metadata !DIExpression()), !dbg !7970
  br label %65, !dbg !8029

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !7970
  call void @llvm.dbg.value(metadata i32 %66, metadata !7962, metadata !DIExpression()), !dbg !7970
  ret i32 %66, !dbg !8030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8033, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i32 undef, metadata !8034, metadata !DIExpression()), !dbg !8038
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8039
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8035, metadata !DIExpression()), !dbg !8038
  %4 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %4, metadata !8037, metadata !DIExpression()), !dbg !8038
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #20, !dbg !8041
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8042

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8043
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8045
  %12 = load i8, i8* %11, align 1, !dbg !8045
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #20, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %13, metadata !8036, metadata !DIExpression()), !dbg !8038
  %14 = load i8*, i8** %8, align 4, !dbg !8047
  %15 = load i8, i8* %14, align 1, !dbg !8049
  %16 = zext i8 %15 to i32, !dbg !8049
  %17 = and i32 %13, %16, !dbg !8050
  %18 = icmp eq i32 %17, 0, !dbg !8051
  br i1 %18, label %19, label %9, !dbg !8052, !llvm.loop !8053

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !8055
  tail call void @RestoreIRQMask(i32 noundef %4) #20, !dbg !8056
  ret i32 0, !dbg !8057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32 undef, metadata !8061, metadata !DIExpression()), !dbg !8063
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8064
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8062, metadata !DIExpression()), !dbg !8063
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !8065
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #20, !dbg !8066
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !8067
  ret i32 0, !dbg !8068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #8 section ".ram_code" !dbg !8069 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8071, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.value(metadata i8* undef, metadata !8072, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.value(metadata i32 undef, metadata !8073, metadata !DIExpression()), !dbg !8074
  ret i32 0, !dbg !8075
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %1, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* undef, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8082
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8083

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8082
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8084
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8084
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8084
  %8 = tail call i32 %7(i8* noundef %0) #21, !dbg !8087
  br label %21, !dbg !8088

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8089
  %11 = load i8, i8* %10, align 1, !dbg !8093
  %12 = icmp eq i8 %11, -62, !dbg !8094
  br i1 %12, label %13, label %21, !dbg !8095

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8096
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !8096
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !8096
  %17 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %16, i32 0, i32 0, !dbg !8097
  %18 = load i32, i32* %17, align 4, !dbg !8097
  %19 = icmp eq i32 %18, 262144, !dbg !8098
  br i1 %19, label %22, label %21, !dbg !8099

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !8100
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8100
  unreachable, !dbg !8100

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8105

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8082
  ret i32 %23, !dbg !8106
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8109, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i8* %0, metadata !8110, metadata !DIExpression()), !dbg !8112
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8113
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8113
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8113
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8115
  %6 = load i8, i8* %5, align 1, !dbg !8115
  %7 = icmp eq i8 %6, 0, !dbg !8116
  br i1 %7, label %19, label %8, !dbg !8117

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8118
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8110, metadata !DIExpression()), !dbg !8112
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #20, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %10, metadata !8111, metadata !DIExpression()), !dbg !8112
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8121
  %12 = bitcast i8* %11 to i8**, !dbg !8121
  %13 = load i8*, i8** %12, align 4, !dbg !8121
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8123
  %15 = load i8, i8* %14, align 1, !dbg !8123
  %16 = zext i8 %15 to i32, !dbg !8123
  %17 = and i32 %10, %16, !dbg !8124
  %18 = icmp eq i32 %17, 0, !dbg !8124
  br i1 %18, label %19, label %20, !dbg !8125

19:                                               ; preds = %8, %1
  br label %20, !dbg !8126

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8112
  ret i32 %21, !dbg !8127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8132, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 %1, metadata !8133, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8 %2, metadata !8134, metadata !DIExpression()), !dbg !8140
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8141
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8136, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 0, metadata !8137, metadata !DIExpression()), !dbg !8140
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8142
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8142
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8142
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8143
  %9 = load i8, i8* %8, align 1, !dbg !8143
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #20, !dbg !8144
  call void @llvm.dbg.value(metadata i32 %10, metadata !8139, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8140
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8145, !range !2535
  %12 = icmp eq i8 %11, 0, !dbg !8145
  br i1 %12, label %18, label %13, !dbg !8147

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8148, !range !2535
  %15 = icmp eq i8 %14, 0, !dbg !8148
  br i1 %15, label %16, label %17, !dbg !8152

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #20, !dbg !8153
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8153
  unreachable, !dbg !8153

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #20, !dbg !8155
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8156
  br label %34, !dbg !8157

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8139, metadata !DIExpression()), !dbg !8140
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8158
  %20 = bitcast i8* %19 to i8**, !dbg !8158
  %21 = load i8*, i8** %20, align 4, !dbg !8158
  %22 = load i8, i8* %21, align 1, !dbg !8160
  %23 = zext i8 %22 to i32, !dbg !8160
  %24 = and i32 %10, %23, !dbg !8161
  %25 = icmp eq i32 %24, 0, !dbg !8162
  br i1 %25, label %26, label %34, !dbg !8163

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %27, metadata !8135, metadata !DIExpression()), !dbg !8140
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !8166
  %28 = inttoptr i32 %1 to i8*, !dbg !8167
  %29 = load volatile i8, i8* %28, align 1, !dbg !8168
  call void @llvm.dbg.value(metadata i8 %29, metadata !8138, metadata !DIExpression()), !dbg !8140
  %30 = icmp eq i8 %29, %2, !dbg !8169
  call void @llvm.dbg.value(metadata i32 undef, metadata !8137, metadata !DIExpression()), !dbg !8140
  tail call void @RestoreIRQMask(i32 noundef %27) #20, !dbg !8171
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !8137, metadata !DIExpression()), !dbg !8140
  %32 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #20, !dbg !8172
  %33 = icmp eq i32 %32, 0, !dbg !8175
  br i1 %33, label %34, label %36, !dbg !8176

34:                                               ; preds = %18, %26, %17, %31
  %35 = phi i32 [ 1, %31 ], [ 0, %18 ], [ -1, %26 ], [ 0, %17 ]
  br label %36, !dbg !8177

36:                                               ; preds = %31, %34
  %37 = phi i32 [ %35, %34 ], [ -1, %31 ], !dbg !8140
  ret i32 %37, !dbg !8178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8179 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8183, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %1, metadata !8184, metadata !DIExpression()), !dbg !8186
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8187
  %4 = load i32, i32* %3, align 4, !dbg !8187
  %5 = and i32 %4, 16, !dbg !8189
  %6 = icmp eq i32 %5, 0, !dbg !8189
  br i1 %6, label %7, label %8, !dbg !8190

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #20, !dbg !8191
  br label %8, !dbg !8193

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8194
  call void @llvm.dbg.value(metadata i32 %9, metadata !8185, metadata !DIExpression()), !dbg !8186
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !8195
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8196
  %11 = load i16, i16* %10, align 2, !dbg !8196
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8197
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8197
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8198
  %15 = load i8, i8* %14, align 1, !dbg !8198
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8199
  %17 = load i8, i8* %16, align 1, !dbg !8199
  %18 = zext i8 %17 to i32, !dbg !8200
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #21, !dbg !8201
  tail call void @RestoreIRQMask(i32 noundef %9) #20, !dbg !8202
  ret void, !dbg !8203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8204 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8206, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8207, metadata !DIExpression()), !dbg !8209
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8210
  %4 = load i8, i8* %3, align 1, !dbg !8210
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8211

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8212
  %7 = load i32, i32* %6, align 4, !dbg !8214
  %8 = or i32 %7, 4, !dbg !8214
  store i32 %8, i32* %6, align 4, !dbg !8214
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8215
  call void @llvm.dbg.value(metadata i32 0, metadata !8208, metadata !DIExpression()), !dbg !8209
  br label %18, !dbg !8216

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8217
  %12 = load i32, i32* %11, align 4, !dbg !8218
  %13 = or i32 %12, 2, !dbg !8218
  store i32 %13, i32* %11, align 4, !dbg !8218
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8219
  call void @llvm.dbg.value(metadata i32 0, metadata !8208, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.value(metadata i32 0, metadata !8208, metadata !DIExpression()), !dbg !8209
  br label %18, !dbg !8220

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8221
  call void @llvm.dbg.value(metadata i32 0, metadata !8208, metadata !DIExpression()), !dbg !8209
  br label %18, !dbg !8222

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8208, metadata !DIExpression()), !dbg !8209
  tail call void @Flash_ReturnReady() #20, !dbg !8223
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8223
  unreachable, !dbg !8223

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8208, metadata !DIExpression()), !dbg !8209
  ret i32 0, !dbg !8227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8228 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8232, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8233, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %2, metadata !8234, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %3, metadata !8235, metadata !DIExpression()), !dbg !8237
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8238
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8240
  br i1 %7, label %33, label %8, !dbg !8240

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8241
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8241
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8243
  br i1 %11, label %33, label %12, !dbg !8244

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8245
  %14 = load i8*, i8** %13, align 4, !dbg !8245
  %15 = icmp eq i8* %14, null, !dbg !8246
  br i1 %15, label %33, label %16, !dbg !8247

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8248
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8249
  store i8* %17, i8** %18, align 4, !dbg !8250
  %19 = trunc i32 %3 to i16, !dbg !8251
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8252
  store i16 %19, i16* %20, align 2, !dbg !8253
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8254
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8255
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8256
  store i8 -81, i8* %23, align 1, !dbg !8257
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8258
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #20, !dbg !8259
  %25 = load i8, i8* %24, align 1, !dbg !8260
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8262

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #21, !dbg !8263
  br i1 %27, label %31, label %28, !dbg !8264

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8265
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8267
  store i8 -97, i8* %30, align 1, !dbg !8268
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #20, !dbg !8269
  br label %31, !dbg !8270

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8271
  call void @llvm.dbg.value(metadata i32 0, metadata !8236, metadata !DIExpression()), !dbg !8237
  br label %33, !dbg !8272

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8237
  ret i32 %34, !dbg !8273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8274 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8278, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata i8* %1, metadata !8279, metadata !DIExpression()), !dbg !8281
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8282
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8283
  %5 = and i32 %4, 1, !dbg !8283
  %6 = icmp eq i32 %5, 0, !dbg !8285
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8286
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !8286
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !8287
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !8287
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !8287
  %12 = load i8, i8* %11, align 1, !dbg !8286
  store i8 %12, i8* %3, align 1, !dbg !8286
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8288
  %14 = load i16, i16* %13, align 2, !dbg !8288
  call void @llvm.dbg.value(metadata i8* %3, metadata !8280, metadata !DIExpression(DW_OP_deref)), !dbg !8281
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !8289
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8290
  ret void, !dbg !8290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8291 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8295, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i8* %1, metadata !8296, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i8* %2, metadata !8297, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i16 %3, metadata !8298, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i16 %4, metadata !8299, metadata !DIExpression()), !dbg !8301
  %6 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %6, metadata !8300, metadata !DIExpression()), !dbg !8301
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #21, !dbg !8303
  tail call void @RestoreIRQMask(i32 noundef %6) #20, !dbg !8304
  ret void, !dbg !8305
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8308, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8311, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 0, metadata !8309, metadata !DIExpression()), !dbg !8314
  br label %6, !dbg !8315

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %3, metadata !8309, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 %8, metadata !8309, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8314
  %4 = icmp ult i32 %8, 4, !dbg !8319
  %5 = icmp eq i32 %3, 5, !dbg !8319
  br i1 %5, label %26, label %6, !dbg !8315, !llvm.loop !8320

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8309, metadata !DIExpression()), !dbg !8314
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8310, metadata !DIExpression()), !dbg !8314
  %12 = icmp eq i8 %10, 0, !dbg !8322
  br i1 %12, label %23, label %13, !dbg !8326

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8310, metadata !DIExpression()), !dbg !8314
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8327
  %16 = load i8, i8* %15, align 1, !dbg !8327
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8330
  %18 = load i8, i8* %17, align 1, !dbg !8330
  %19 = icmp eq i8 %16, %18, !dbg !8331
  br i1 %19, label %20, label %23, !dbg !8332

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8333
  call void @llvm.dbg.value(metadata i32 %21, metadata !8310, metadata !DIExpression()), !dbg !8314
  %22 = icmp eq i32 %21, %11, !dbg !8322
  br i1 %22, label %26, label %13, !dbg !8326, !llvm.loop !8334

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8336
  %25 = icmp eq i32 %24, %11, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %8, metadata !8309, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8314
  br i1 %25, label %26, label %2, !dbg !8339

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8319
  ret i1 %27, !dbg !8340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !8341 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8353
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8353
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8345, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8352, metadata !DIExpression()), !dbg !8355
  %3 = load i16, i16* @cmem_index, align 2, !dbg !8356
  %4 = icmp sgt i16 %3, -1, !dbg !8358
  br i1 %4, label %34, label %5, !dbg !8359

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8360
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #21, !dbg !8361
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8355
  br label %7, !dbg !8362

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8343, metadata !DIExpression()), !dbg !8355
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8344, metadata !DIExpression()), !dbg !8355
  %12 = icmp eq i8 %10, 0, !dbg !8364
  br i1 %12, label %24, label %13, !dbg !8369

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8344, metadata !DIExpression()), !dbg !8355
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8370
  %16 = load i8, i8* %15, align 1, !dbg !8370
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8373
  %18 = load i16, i16* %17, align 2, !dbg !8373
  %19 = zext i8 %16 to i16, !dbg !8374
  %20 = icmp eq i16 %18, %19, !dbg !8374
  br i1 %20, label %21, label %24, !dbg !8375

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8376
  call void @llvm.dbg.value(metadata i32 %22, metadata !8344, metadata !DIExpression()), !dbg !8355
  %23 = icmp eq i32 %22, %11, !dbg !8364
  br i1 %23, label %27, label %13, !dbg !8369, !llvm.loop !8377

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8379
  %26 = icmp eq i32 %25, %11, !dbg !8380
  br i1 %26, label %27, label %29, !dbg !8382

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8383
  store i16 %28, i16* @cmem_index, align 2, !dbg !8385
  br label %34, !dbg !8386

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8387
  call void @llvm.dbg.value(metadata i32 %30, metadata !8343, metadata !DIExpression()), !dbg !8355
  %31 = icmp eq i32 %30, 5, !dbg !8388
  br i1 %31, label %32, label %7, !dbg !8362, !llvm.loop !8389

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !8391
  br label %34, !dbg !8391

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8392
  ret i32 %36, !dbg !8392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #8 !dbg !8393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8397, metadata !DIExpression()), !dbg !8398
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !8399
  ret %struct.CMEMEntryID* %2, !dbg !8400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8401 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8405, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i8* undef, metadata !8406, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i16* %2, metadata !8407, metadata !DIExpression()), !dbg !8412
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8413
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8413
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8413
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8410, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata i8 -81, metadata !8408, metadata !DIExpression()), !dbg !8415
  store i8 -81, i8* %4, align 1, !dbg !8416
  call void @llvm.dbg.value(metadata i8* %4, metadata !8408, metadata !DIExpression(DW_OP_deref)), !dbg !8415
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8417
  %7 = load i8, i8* %6, align 1, !dbg !8418
  %8 = add i8 %7, 1, !dbg !8420
  %9 = icmp ult i8 %8, 2, !dbg !8420
  br i1 %9, label %12, label %10, !dbg !8420

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !8421
  br i1 %11, label %13, label %12, !dbg !8422

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8408, metadata !DIExpression()), !dbg !8415
  store i8 -97, i8* %4, align 1, !dbg !8423
  call void @llvm.dbg.value(metadata i8* %4, metadata !8408, metadata !DIExpression(DW_OP_deref)), !dbg !8415
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8425
  br label %13, !dbg !8426

13:                                               ; preds = %12, %10
  br label %14, !dbg !8427

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8411, metadata !DIExpression()), !dbg !8415
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !8429
  %17 = load i8, i8* %16, align 1, !dbg !8429
  %18 = zext i8 %17 to i16, !dbg !8429
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !8432
  store i16 %18, i16* %19, align 2, !dbg !8433
  %20 = add nuw nsw i32 %15, 1, !dbg !8434
  call void @llvm.dbg.value(metadata i32 %20, metadata !8411, metadata !DIExpression()), !dbg !8415
  %21 = icmp eq i32 %20, 3, !dbg !8435
  br i1 %21, label %22, label %14, !dbg !8427, !llvm.loop !8436

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8438
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8438
  ret void, !dbg !8439
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 section ".ram_code" !dbg !8440 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8445, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 0, metadata !8443, metadata !DIExpression()), !dbg !8446
  br label %6, !dbg !8447

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %3, metadata !8443, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %8, metadata !8443, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8446
  %4 = icmp ult i32 %8, 4, !dbg !8451
  %5 = icmp eq i32 %3, 5, !dbg !8451
  br i1 %5, label %26, label %6, !dbg !8447, !llvm.loop !8452

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8443, metadata !DIExpression()), !dbg !8446
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8444, metadata !DIExpression()), !dbg !8446
  %12 = icmp eq i8 %10, 0, !dbg !8454
  br i1 %12, label %23, label %13, !dbg !8458

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8444, metadata !DIExpression()), !dbg !8446
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8459
  %16 = load i8, i8* %15, align 1, !dbg !8459
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8462
  %18 = load i8, i8* %17, align 1, !dbg !8462
  %19 = icmp eq i8 %16, %18, !dbg !8463
  br i1 %19, label %20, label %23, !dbg !8464

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %21, metadata !8444, metadata !DIExpression()), !dbg !8446
  %22 = icmp eq i32 %21, %11, !dbg !8454
  br i1 %22, label %26, label %13, !dbg !8458, !llvm.loop !8466

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8468
  %25 = icmp eq i32 %24, %11, !dbg !8469
  call void @llvm.dbg.value(metadata i32 %8, metadata !8443, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8446
  br i1 %25, label %26, label %2, !dbg !8471

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8451
  ret i1 %27, !dbg !8472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !8473 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8479
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8479
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8477, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8478, metadata !DIExpression()), !dbg !8481
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8482
  %4 = icmp sgt i16 %3, -1, !dbg !8484
  br i1 %4, label %34, label %5, !dbg !8485

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8486
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #20, !dbg !8487
  call void @llvm.dbg.value(metadata i32 0, metadata !8475, metadata !DIExpression()), !dbg !8481
  br label %7, !dbg !8488

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8475, metadata !DIExpression()), !dbg !8481
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8481
  %12 = icmp eq i8 %10, 0, !dbg !8490
  br i1 %12, label %24, label %13, !dbg !8495

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8476, metadata !DIExpression()), !dbg !8481
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8496
  %16 = load i8, i8* %15, align 1, !dbg !8496
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8499
  %18 = load i16, i16* %17, align 2, !dbg !8499
  %19 = zext i8 %16 to i16, !dbg !8500
  %20 = icmp eq i16 %18, %19, !dbg !8500
  br i1 %20, label %21, label %24, !dbg !8501

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8502
  call void @llvm.dbg.value(metadata i32 %22, metadata !8476, metadata !DIExpression()), !dbg !8481
  %23 = icmp eq i32 %22, %11, !dbg !8490
  br i1 %23, label %27, label %13, !dbg !8495, !llvm.loop !8503

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8505
  %26 = icmp eq i32 %25, %11, !dbg !8506
  br i1 %26, label %27, label %29, !dbg !8508

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8509
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !8511
  br label %34, !dbg !8512

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %30, metadata !8475, metadata !DIExpression()), !dbg !8481
  %31 = icmp eq i32 %30, 5, !dbg !8514
  br i1 %31, label %32, label %7, !dbg !8488, !llvm.loop !8515

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8517
  br label %34, !dbg !8517

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8481
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8518
  ret i32 %36, !dbg !8518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8519 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8527, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i16* %1, metadata !8528, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i16* %2, metadata !8529, metadata !DIExpression()), !dbg !8535
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8536
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8536
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8536
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8533, metadata !DIExpression()), !dbg !8537
  call void @llvm.dbg.value(metadata i8 -81, metadata !8531, metadata !DIExpression()), !dbg !8538
  store i8 -81, i8* %4, align 1, !dbg !8539
  %7 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8540
  call void @llvm.dbg.value(metadata i32 %7, metadata !8530, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i8* %4, metadata !8531, metadata !DIExpression(DW_OP_deref)), !dbg !8538
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8541
  call void @RestoreIRQMask(i32 noundef %7) #21, !dbg !8542
  %8 = load i8, i8* %6, align 1, !dbg !8543
  %9 = add i8 %8, 1, !dbg !8545
  %10 = icmp ult i8 %9, 2, !dbg !8545
  br i1 %10, label %13, label %11, !dbg !8545

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !8546
  br i1 %12, label %15, label %13, !dbg !8547

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8531, metadata !DIExpression()), !dbg !8538
  store i8 -97, i8* %4, align 1, !dbg !8548
  %14 = call i32 @SaveAndSetIRQMask() #21, !dbg !8550
  call void @llvm.dbg.value(metadata i32 %14, metadata !8530, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i8* %4, metadata !8531, metadata !DIExpression(DW_OP_deref)), !dbg !8538
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8551
  call void @RestoreIRQMask(i32 noundef %14) #21, !dbg !8552
  br label %15, !dbg !8553

15:                                               ; preds = %13, %11
  br label %16, !dbg !8554

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !8534, metadata !DIExpression()), !dbg !8538
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !8556
  %19 = load i8, i8* %18, align 1, !dbg !8556
  %20 = zext i8 %19 to i16, !dbg !8556
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !8559
  store i16 %20, i16* %21, align 2, !dbg !8560
  %22 = add nuw nsw i32 %17, 1, !dbg !8561
  call void @llvm.dbg.value(metadata i32 %22, metadata !8534, metadata !DIExpression()), !dbg !8538
  %23 = icmp eq i32 %22, 3, !dbg !8562
  br i1 %23, label %24, label %16, !dbg !8554, !llvm.loop !8563

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8565
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8565
  ret void, !dbg !8566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #8 !dbg !8567 {
  ret i32 3932160, !dbg !8568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #8 !dbg !8569 {
  ret i32 4194304, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !8571 {
  %1 = tail call i32 @ComboMem_Initialize() #21, !dbg !8572
  ret void, !dbg !8573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #8 !dbg !8574 {
  ret void, !dbg !8575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #8 !dbg !8576 {
  ret void, !dbg !8577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #8 !dbg !8578 {
  ret i32 3932160, !dbg !8579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #8 !dbg !8580 {
  ret i32 262144, !dbg !8581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !8582 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #21, !dbg !8583
  ret void, !dbg !8584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #8 !dbg !8585 {
  ret i32 134217728, !dbg !8586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #8 !dbg !8587 {
  ret i32 4194304, !dbg !8588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #4 !dbg !8589 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8590
  ret i32 134217728, !dbg !8591
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !8592 {
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !8593
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8594
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8595
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !8596
  %4 = load i16, i16* %3, align 2, !dbg !8596
  %5 = zext i16 %4 to i32, !dbg !8594
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8597
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.vdma_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #21, !dbg !8598
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #20, !dbg !8599
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !8600
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !8601
  ret i32 0, !dbg !8602
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !8603 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !8606
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !8607
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !8608
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !8609
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #20, !dbg !8610
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8611
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !8612
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !8613
  %5 = load i32, i32* %4, align 4, !dbg !8613
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #21, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %6, metadata !8605, metadata !DIExpression()), !dbg !8615
  %7 = icmp eq i32 %6, -120, !dbg !8616
  %8 = select i1 %7, i32 5, i32 0, !dbg !8615
  ret i32 %8, !dbg !8618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #8 !dbg !8619 {
  ret i8 1, !dbg !8621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !8622 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8628, metadata !DIExpression()), !dbg !8629
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8630
  call void @llvm.dbg.value(metadata i32 %2, metadata !8627, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8628, metadata !DIExpression()), !dbg !8629
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !8631
  %4 = load i32, i32* %3, align 4, !dbg !8631
  ret i32 %4, !dbg !8632
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !8633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %1, metadata !8638, metadata !DIExpression()), !dbg !8640
  %3 = and i32 %0, 134217727, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %3, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i16 0, metadata !8639, metadata !DIExpression()), !dbg !8640
  %4 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 1, i32 1, !dbg !8642
  %5 = load i32, i32* %4, align 4, !dbg !8642
  %6 = icmp eq i32 %5, 0, !dbg !8645
  br i1 %6, label %25, label %7, !dbg !8646

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !8639, metadata !DIExpression()), !dbg !8640
  %11 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %9, i32 0, !dbg !8647
  %12 = load i32, i32* %11, align 4, !dbg !8647
  %13 = icmp ult i32 %3, %12, !dbg !8650
  br i1 %13, label %18, label %14, !dbg !8651

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %8, i32 0, !dbg !8652
  %16 = load i32, i32* %15, align 4, !dbg !8652
  %17 = icmp ult i32 %3, %16, !dbg !8653
  br i1 %17, label %25, label %18, !dbg !8654

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !8655
  call void @llvm.dbg.value(metadata i16 %19, metadata !8639, metadata !DIExpression()), !dbg !8640
  %20 = zext i16 %19 to i32, !dbg !8656
  %21 = add nuw nsw i32 %20, 1, !dbg !8657
  %22 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %21, i32 1, !dbg !8642
  %23 = load i32, i32* %22, align 4, !dbg !8642
  %24 = icmp eq i32 %23, 0, !dbg !8645
  br i1 %24, label %25, label %7, !dbg !8646, !llvm.loop !8658

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !8656
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %26, i32 1, !dbg !8660
  %28 = load i32, i32* %27, align 4, !dbg !8660
  ret i32 %28, !dbg !8661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #11 !dbg !8662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8664, metadata !DIExpression()), !dbg !8665
  %2 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8666
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef %2) #20, !dbg !8667
  ret i32 %3, !dbg !8668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !8669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8671, metadata !DIExpression()), !dbg !8674
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8675
  call void @llvm.dbg.value(metadata i32 %2, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8673, metadata !DIExpression()), !dbg !8674
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !8676
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef nonnull %3) #20, !dbg !8677
  ret i32 %4, !dbg !8678
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8679 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !8685, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 0, metadata !8686, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 0, metadata !8687, metadata !DIExpression()), !dbg !8688
  %2 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 0, i32 0, !dbg !8689
  %3 = load i32, i32* %2, align 4, !dbg !8689
  %4 = icmp eq i32 %3, 0, !dbg !8692
  br i1 %4, label %17, label %5, !dbg !8693

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 %8, metadata !8686, metadata !DIExpression()), !dbg !8688
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %7, i32 1, !dbg !8694
  %10 = load i32, i32* %9, align 4, !dbg !8694
  %11 = mul i32 %10, %6, !dbg !8696
  %12 = add i32 %11, %8, !dbg !8697
  call void @llvm.dbg.value(metadata i32 %12, metadata !8686, metadata !DIExpression()), !dbg !8688
  %13 = add i32 %7, 1, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %13, metadata !8687, metadata !DIExpression()), !dbg !8688
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 0, !dbg !8689
  %15 = load i32, i32* %14, align 4, !dbg !8689
  %16 = icmp eq i32 %15, 0, !dbg !8692
  br i1 %16, label %17, label %5, !dbg !8693, !llvm.loop !8699

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !8688
  ret i32 %18, !dbg !8701
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #12 !dbg !8702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8706, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 %1, metadata !8707, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8708, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !8709, metadata !DIExpression()), !dbg !8715
  %5 = add i32 %1, %0, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %5, metadata !8714, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 %0, metadata !8710, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 0, metadata !8713, metadata !DIExpression()), !dbg !8715
  %6 = icmp ugt i32 %5, %0, !dbg !8717
  br i1 %6, label %7, label %34, !dbg !8720

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8713, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 %9, metadata !8710, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 %10, metadata !8711, metadata !DIExpression()), !dbg !8715
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.vdma_config_t* noundef %3) #20, !dbg !8721
  call void @llvm.dbg.value(metadata i32 %11, metadata !8712, metadata !DIExpression()), !dbg !8715
  %12 = icmp eq i32 %8, 0, !dbg !8723
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 0, !dbg !8725
  br i1 %12, label %14, label %16, !dbg !8726

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !8727
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !8729
  store i32 1, i32* %15, align 4, !dbg !8730
  br label %29, !dbg !8731

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !8732
  %18 = icmp eq i32 %11, %17, !dbg !8734
  br i1 %18, label %19, label %23, !dbg !8735

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !8736
  %21 = load i32, i32* %20, align 4, !dbg !8738
  %22 = add i32 %21, 1, !dbg !8738
  store i32 %22, i32* %20, align 4, !dbg !8738
  br label %29, !dbg !8739

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !8740
  call void @llvm.dbg.value(metadata i32 %24, metadata !8711, metadata !DIExpression()), !dbg !8715
  %25 = icmp eq i32 %24, 9, !dbg !8742
  br i1 %25, label %34, label %26, !dbg !8744

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 0, !dbg !8745
  store i32 %11, i32* %27, align 4, !dbg !8746
  %28 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 1, !dbg !8747
  store i32 1, i32* %28, align 4, !dbg !8748
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !8749
  call void @llvm.dbg.value(metadata i32 %30, metadata !8711, metadata !DIExpression()), !dbg !8715
  %31 = add i32 %11, %9, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %31, metadata !8710, metadata !DIExpression()), !dbg !8715
  %32 = add i32 %8, 1, !dbg !8751
  call void @llvm.dbg.value(metadata i32 %32, metadata !8713, metadata !DIExpression()), !dbg !8715
  %33 = icmp ult i32 %31, %5, !dbg !8717
  br i1 %33, label %7, label %34, !dbg !8720, !llvm.loop !8752

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !8715
  ret i32 %35, !dbg !8754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2) local_unnamed_addr #0 !dbg !8755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8759, metadata !DIExpression()), !dbg !8762
  call void @llvm.dbg.value(metadata i32 %1, metadata !8760, metadata !DIExpression()), !dbg !8762
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8761, metadata !DIExpression()), !dbg !8762
  %4 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !8763
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #21, !dbg !8764
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8765
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef %6) #20, !dbg !8766
  ret i32 %7, !dbg !8767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8770, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %1, metadata !8771, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8772, metadata !DIExpression()), !dbg !8773
  ret i32 0, !dbg !8774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !8775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8777, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i32 %1, metadata !8778, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8779, metadata !DIExpression()), !dbg !8782
  %4 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8783
  call void @llvm.dbg.value(metadata i32 %4, metadata !8780, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8781, metadata !DIExpression()), !dbg !8782
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !8784
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef nonnull %5) #20, !dbg !8785
  ret i32 %6, !dbg !8786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !8787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8789, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 %1, metadata !8790, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8791, metadata !DIExpression()), !dbg !8792
  ret i32 0, !dbg !8793
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !8794 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8796, metadata !DIExpression()), !dbg !8799
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8800
  call void @llvm.dbg.value(metadata i32 %2, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8798, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8798, metadata !DIExpression()), !dbg !8799
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !8801
  %4 = load i32, i32* %3, align 4, !dbg !8801
  ret i32 %4, !dbg !8802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.vdma_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #5 !dbg !8803 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !8807, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.value(metadata i32* %1, metadata !8808, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.value(metadata i32 %2, metadata !8809, metadata !DIExpression()), !dbg !8810
  %4 = load i32, i32* %1, align 4, !dbg !8811
  %5 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 0, !dbg !8813
  %6 = load i32, i32* %5, align 4, !dbg !8813
  %7 = icmp eq i32 %6, %2, !dbg !8814
  br i1 %7, label %8, label %12, !dbg !8815

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 1, !dbg !8816
  %10 = load i32, i32* %9, align 4, !dbg !8818
  %11 = add i32 %10, 1, !dbg !8818
  store i32 %11, i32* %9, align 4, !dbg !8818
  br label %17, !dbg !8819

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !8820
  store i32 %13, i32* %1, align 4, !dbg !8820
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 1, !dbg !8822
  store i32 1, i32* %14, align 4, !dbg !8823
  %15 = load i32, i32* %1, align 4, !dbg !8824
  %16 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %15, i32 0, !dbg !8825
  store i32 %2, i32* %16, align 4, !dbg !8826
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !8827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !8828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8832, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %1, metadata !8833, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8834, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !8835, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8836, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8837, metadata !DIExpression()), !dbg !8841
  %5 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !8842
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #21, !dbg !8843
  call void @llvm.dbg.value(metadata i32 0, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8837, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8836, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %0, metadata !8832, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %1, metadata !8833, metadata !DIExpression()), !dbg !8841
  %7 = icmp eq i32 %1, 0, !dbg !8844
  br i1 %7, label %53, label %8, !dbg !8847

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %10, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %11, metadata !8837, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %12, metadata !8836, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %13, metadata !8832, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %14, metadata !8833, metadata !DIExpression()), !dbg !8841
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %12, i32 1, !dbg !8848
  %16 = load i32, i32* %15, align 4, !dbg !8848
  %17 = icmp ult i32 %9, %16, !dbg !8851
  %18 = xor i1 %17, true, !dbg !8852
  %19 = zext i1 %18 to i32, !dbg !8852
  %20 = add i32 %12, %19, !dbg !8852
  call void @llvm.dbg.value(metadata i32 undef, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %20, metadata !8836, metadata !DIExpression()), !dbg !8841
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %20, i32 0, !dbg !8853
  %22 = load i32, i32* %21, align 4, !dbg !8853
  %23 = add i32 %22, %10, !dbg !8854
  call void @llvm.dbg.value(metadata i32 %23, metadata !8839, metadata !DIExpression()), !dbg !8841
  %24 = icmp ult i32 %23, %13, !dbg !8855
  br i1 %24, label %46, label %25, !dbg !8857

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %26, metadata !8838, metadata !DIExpression()), !dbg !8841
  %27 = icmp ult i32 %14, %26, !dbg !8860
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !8862
  call void @llvm.dbg.value(metadata i32 %28, metadata !8838, metadata !DIExpression()), !dbg !8841
  %29 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 0, !dbg !8863
  %30 = load i32, i32* %29, align 4, !dbg !8863
  %31 = icmp eq i32 %30, %28, !dbg !8865
  br i1 %31, label %32, label %36, !dbg !8866

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 1, !dbg !8867
  %34 = load i32, i32* %33, align 4, !dbg !8869
  %35 = add i32 %34, 1, !dbg !8869
  store i32 %35, i32* %33, align 4, !dbg !8869
  br label %42, !dbg !8870

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !8871
  %38 = zext i1 %37 to i32, !dbg !8874
  %39 = add nsw i32 %11, %38, !dbg !8874
  call void @llvm.dbg.value(metadata i32 %39, metadata !8837, metadata !DIExpression()), !dbg !8841
  %40 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 1, !dbg !8875
  store i32 1, i32* %40, align 4, !dbg !8876
  %41 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 0, !dbg !8877
  store i32 %28, i32* %41, align 4, !dbg !8878
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !8841
  call void @llvm.dbg.value(metadata i32 %43, metadata !8837, metadata !DIExpression()), !dbg !8841
  %44 = add i32 %28, %13, !dbg !8879
  call void @llvm.dbg.value(metadata i32 %44, metadata !8832, metadata !DIExpression()), !dbg !8841
  %45 = sub i32 %14, %28, !dbg !8880
  call void @llvm.dbg.value(metadata i32 %45, metadata !8833, metadata !DIExpression()), !dbg !8841
  br label %46, !dbg !8881

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !8882
  call void @llvm.dbg.value(metadata i32 %49, metadata !8837, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %48, metadata !8832, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %47, metadata !8833, metadata !DIExpression()), !dbg !8841
  %50 = add nuw i32 %9, 1, !dbg !8883
  %51 = select i1 %17, i32 %50, i32 1, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %51, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %23, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %20, metadata !8836, metadata !DIExpression()), !dbg !8841
  %52 = icmp eq i32 %47, 0, !dbg !8844
  br i1 %52, label %53, label %8, !dbg !8847, !llvm.loop !8884

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !8886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !8887 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8891
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8892
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !8891
  store %struct.vdma_config_t* %3, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8893
  %4 = tail call i32 @custom_get_fat_addr() #21, !dbg !8894
  %5 = tail call i32 @custom_get_fat_len() #21, !dbg !8895
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8896
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !8897
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !8896
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0), %struct.vdma_config_t* noundef nonnull %8) #20, !dbg !8898
  %10 = tail call i32 @custom_get_fat_addr() #21, !dbg !8899
  %11 = tail call i32 @custom_get_fat_len() #21, !dbg !8900
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0)) #20, !dbg !8901
  call void @llvm.dbg.value(metadata i32 %12, metadata !8889, metadata !DIExpression()), !dbg !8902
  %13 = icmp eq i32 %12, 0, !dbg !8903
  br i1 %13, label %14, label %46, !dbg !8905

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8902
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !8906
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !8908
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8902
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !8909
  %16 = icmp eq i32 %15, 0, !dbg !8911
  br i1 %16, label %34, label %17, !dbg !8912

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8890, metadata !DIExpression()), !dbg !8902
  %22 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !8913
  %23 = load i32, i32* %22, align 4, !dbg !8913
  %24 = add i32 %20, %23, !dbg !8915
  %25 = icmp ugt i32 %18, %21, !dbg !8916
  br i1 %25, label %26, label %27, !dbg !8918

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !8919
  br label %27, !dbg !8921

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !8922
  call void @llvm.dbg.value(metadata i32 %29, metadata !8890, metadata !DIExpression()), !dbg !8902
  %30 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !8909
  %31 = load i32, i32* %30, align 4, !dbg !8909
  %32 = icmp eq i32 %31, 0, !dbg !8911
  br i1 %32, label %33, label %17, !dbg !8912, !llvm.loop !8923

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !8915
  br label %34, !dbg !8912

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !8925
  %36 = mul i32 %35, -5, !dbg !8926
  %37 = add i32 %36, 262144, !dbg !8927
  %38 = lshr i32 %37, 9, !dbg !8928
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !8929
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #20, !dbg !8930
  call void @llvm.dbg.value(metadata i32 0, metadata !8889, metadata !DIExpression()), !dbg !8902
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !8931
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !8932
  %42 = load i8, i8* %41, align 1, !dbg !8932
  %43 = icmp eq i8 %42, 3, !dbg !8933
  br i1 %43, label %44, label %46, !dbg !8933

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #20, !dbg !8934
  call void @llvm.dbg.value(metadata i32 %45, metadata !8889, metadata !DIExpression()), !dbg !8902
  br label %46, !dbg !8936

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !8902
  ret i32 %47, !dbg !8937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !8938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8942, metadata !DIExpression()), !dbg !8943
  %2 = icmp eq i32 %0, 0, !dbg !8944
  br i1 %2, label %3, label %9, !dbg !8946

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #21, !dbg !8947
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !8949
  %5 = icmp slt i32 %4, 0, !dbg !8950
  br i1 %5, label %6, label %7, !dbg !8952

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8953
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.115, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8953
  unreachable, !dbg !8953

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #21, !dbg !8958
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !8959
  br label %9, !dbg !8960

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8961
  ret void, !dbg !8962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !8963 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #20, !dbg !8964
  %1 = tail call i32 @CMEM_Init_NOR() #20, !dbg !8965
  ret i32 %1, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !8967 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #20, !dbg !8970
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8971
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8972
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !8973
  %4 = load i16, i16* %3, align 2, !dbg !8973
  %5 = zext i16 %4 to i32, !dbg !8971
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8974
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !8975
  store %struct.vdma_config_t* %6, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8976
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !8977
  %8 = bitcast %struct.vdma_config_t* %7 to i8*, !dbg !8977
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.vdma_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #21, !dbg !8978
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !8979
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8980
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8981
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !8982
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8983
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8984
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !8985
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !8986
  %13 = load i32, i32* %12, align 4, !dbg !8986
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #21, !dbg !8987
  call void @llvm.dbg.value(metadata i32 %14, metadata !8969, metadata !DIExpression()), !dbg !8988
  %15 = icmp eq i32 %14, -120, !dbg !8989
  br i1 %15, label %16, label %17, !dbg !8992

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8993
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8993
  unreachable, !dbg !8993

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0)) #20, !dbg !8995
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !8996
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #20, !dbg !8997
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !8998
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !8999
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9000
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9001
  ret i32 0, !dbg !9002
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #8 !dbg !9003 {
  ret void, !dbg !9004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9005 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9008
  call void @llvm.dbg.value(metadata i32 %1, metadata !9007, metadata !DIExpression()), !dbg !9009
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9010
  br i1 %2, label %4, label %3, !dbg !9012

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9013
  br label %4, !dbg !9015

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9016
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9016
  ret i32 %5, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9018 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %1, metadata !9020, metadata !DIExpression()), !dbg !9022
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9023
  br i1 %2, label %3, label %4, !dbg !9025

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9026
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9028
  ret void, !dbg !9029

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9030
  tail call void @Flash_ReturnReady() #21, !dbg !9032
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9032
  unreachable, !dbg !9032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #8 !dbg !9036 {
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9038 {
  br label %1, !dbg !9041

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #20, !dbg !9042
  call void @llvm.dbg.value(metadata i32 %2, metadata !9040, metadata !DIExpression()), !dbg !9044
  %3 = icmp eq i32 %2, 0, !dbg !9045
  br i1 %3, label %4, label %1, !dbg !9046, !llvm.loop !9047

4:                                                ; preds = %1
  ret void, !dbg !9049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9050 {
  tail call void @FreeFDMLock() #20, !dbg !9051
  ret void, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9053 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9096, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i32 %1, metadata !9097, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i8* %2, metadata !9098, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i32 %3, metadata !9099, metadata !DIExpression()), !dbg !9102
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9103
  %6 = load i32, i32* %5, align 4, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %6, metadata !9101, metadata !DIExpression()), !dbg !9102
  %7 = icmp ule i32 %6, %1, !dbg !9104
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9106
  br i1 %10, label %26, label %11, !dbg !9106

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9107
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9107
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9107
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9108
  %16 = load i8*, i8** %15, align 4, !dbg !9108
  %17 = ptrtoint i8* %16 to i32, !dbg !9109
  %18 = add i32 %17, %1, !dbg !9110
  call void @llvm.dbg.value(metadata i32 %18, metadata !9100, metadata !DIExpression()), !dbg !9102
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9111
  %20 = load i8, i8* %19, align 4, !dbg !9111, !range !2535
  %21 = icmp eq i8 %20, 0, !dbg !9111
  br i1 %21, label %22, label %23, !dbg !9113

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !9114
  br label %23, !dbg !9116

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #20, !dbg !9117
  %24 = inttoptr i32 %18 to i8*, !dbg !9118
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #21, !dbg !9119
  tail call void @release_FDM_lock() #20, !dbg !9120
  br label %26, !dbg !9121

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9102
  ret i32 %27, !dbg !9122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9123 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9127, metadata !DIExpression()), !dbg !9129
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9130
  %3 = load i8, i8* %2, align 4, !dbg !9130, !range !2535
  %4 = icmp eq i8 %3, 0, !dbg !9130
  br i1 %4, label %5, label %18, !dbg !9132

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #20, !dbg !9133
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9134
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9134
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9135
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9135
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9136
  %11 = load i8*, i8** %10, align 4, !dbg !9136
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9137
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9138
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #21, !dbg !9139
  call void @llvm.dbg.value(metadata i32 %14, metadata !9128, metadata !DIExpression()), !dbg !9129
  tail call void @release_FDM_lock() #20, !dbg !9140
  %15 = icmp slt i32 %14, 0, !dbg !9141
  br i1 %15, label %16, label %17, !dbg !9143

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !9144
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9144
  unreachable, !dbg !9144

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9149
  br label %18, !dbg !9150

18:                                               ; preds = %1, %17
  ret void, !dbg !9150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9151 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9153, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 %1, metadata !9154, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i8* %2, metadata !9155, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 %3, metadata !9156, metadata !DIExpression()), !dbg !9174
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9175
  %7 = load i32, i32* %6, align 4, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %7, metadata !9159, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 0, metadata !9161, metadata !DIExpression()), !dbg !9174
  %8 = icmp ugt i32 %7, %1, !dbg !9176
  br i1 %8, label %9, label %101, !dbg !9178

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9179
  %11 = icmp ugt i32 %10, %7, !dbg !9181
  br i1 %11, label %101, label %12, !dbg !9182

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9183
  %14 = load i8, i8* %13, align 4, !dbg !9183, !range !2535
  %15 = icmp eq i8 %14, 0, !dbg !9183
  br i1 %15, label %16, label %17, !dbg !9185

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !9186
  br label %17, !dbg !9188

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #20, !dbg !9189
  %18 = bitcast i16* %5 to i8*, !dbg !9190
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 0, metadata !9161, metadata !DIExpression()), !dbg !9174
  %19 = icmp eq i32 %3, 0, !dbg !9191
  br i1 %19, label %99, label %20, !dbg !9192

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9192

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9161, metadata !DIExpression()), !dbg !9174
  %27 = load i8*, i8** %21, align 4, !dbg !9193
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9194
  %29 = bitcast i8* %28 to i8**, !dbg !9194
  %30 = load i8*, i8** %29, align 4, !dbg !9194
  %31 = ptrtoint i8* %30 to i32, !dbg !9195
  %32 = add i32 %31, %1, !dbg !9196
  %33 = add i32 %32, %26, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %33, metadata !9157, metadata !DIExpression()), !dbg !9174
  %34 = add i32 %26, %22, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %34, metadata !9158, metadata !DIExpression()), !dbg !9174
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9199
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9200
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9200
  %38 = add i32 %26, %1, !dbg !9201
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #21, !dbg !9202
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #21, !dbg !9203
  %41 = and i32 %33, 1, !dbg !9204
  %42 = icmp eq i32 %41, 0, !dbg !9204
  br i1 %42, label %43, label %46, !dbg !9205

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9206
  %45 = icmp eq i32 %44, 1, !dbg !9207
  br i1 %45, label %46, label %57, !dbg !9208

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9209
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9211
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9211
  %50 = load i8*, i8** %21, align 4, !dbg !9212
  %51 = inttoptr i32 %33 to i8*, !dbg !9213
  %52 = inttoptr i32 %34 to i8*, !dbg !9214
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #21, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %53, metadata !9160, metadata !DIExpression()), !dbg !9174
  %54 = icmp eq i32 %53, 0, !dbg !9216
  br i1 %54, label %55, label %99, !dbg !9218

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %56, metadata !9161, metadata !DIExpression()), !dbg !9174
  br label %96, !dbg !9220

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9221
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #21, !dbg !9222
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #21, !dbg !9223
  call void @llvm.dbg.value(metadata i32 %60, metadata !9162, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.value(metadata i32 %44, metadata !9166, metadata !DIExpression()), !dbg !9224
  %61 = add i32 %60, %33, !dbg !9225
  %62 = sub i32 0, %60, !dbg !9226
  %63 = and i32 %61, %62, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %63, metadata !9167, metadata !DIExpression()), !dbg !9224
  %64 = add i32 %32, %3, !dbg !9228
  %65 = icmp ugt i32 %64, %63, !dbg !9230
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9231
  call void @llvm.dbg.value(metadata i32 %67, metadata !9166, metadata !DIExpression()), !dbg !9224
  %68 = and i32 %67, -2, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %68, metadata !9166, metadata !DIExpression()), !dbg !9224
  %69 = icmp ne i32 %68, 2, !dbg !9233
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9234
  br i1 %72, label %85, label %73, !dbg !9234

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9190
  call void @llvm.dbg.value(metadata i8* %18, metadata !9173, metadata !DIExpression()), !dbg !9235
  %74 = inttoptr i32 %34 to i8*, !dbg !9236
  %75 = load i8, i8* %74, align 1, !dbg !9237
  call void @llvm.dbg.value(metadata i8 undef, metadata !9168, metadata !DIExpression()), !dbg !9235
  store i8 %75, i8* %18, align 2, !dbg !9238
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9239
  %77 = load i8, i8* %76, align 1, !dbg !9240
  store i8 %77, i8* %24, align 1, !dbg !9241
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9242
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9243
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9243
  %81 = load i8*, i8** %21, align 4, !dbg !9244
  %82 = inttoptr i32 %33 to i8*, !dbg !9245
  call void @llvm.dbg.value(metadata i16* %5, metadata !9168, metadata !DIExpression(DW_OP_deref)), !dbg !9235
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #21, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %83, metadata !9160, metadata !DIExpression()), !dbg !9174
  %84 = icmp eq i32 %83, 0, !dbg !9247
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9249
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9250
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9254
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9254
  %89 = load i8*, i8** %21, align 4, !dbg !9255
  %90 = inttoptr i32 %33 to i8*, !dbg !9256
  %91 = inttoptr i32 %34 to i8*, !dbg !9257
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #21, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %92, metadata !9160, metadata !DIExpression()), !dbg !9174
  %93 = icmp eq i32 %92, 0, !dbg !9259
  br i1 %93, label %94, label %99, !dbg !9261

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9174
  %95 = add i32 %68, %26, !dbg !9262
  call void @llvm.dbg.value(metadata i32 %83, metadata !9160, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 %26, metadata !9161, metadata !DIExpression()), !dbg !9174
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9263
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 %97, metadata !9161, metadata !DIExpression()), !dbg !9174
  %98 = icmp ult i32 %97, %3, !dbg !9191
  br i1 %98, label %25, label %99, !dbg !9192, !llvm.loop !9264

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #20, !dbg !9266
  br label %101, !dbg !9267

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9174
  ret i32 %102, !dbg !9267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9272, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %1, metadata !9273, metadata !DIExpression()), !dbg !9276
  %3 = and i32 %1, 16777215, !dbg !9277
  call void @llvm.dbg.value(metadata i32 %3, metadata !9275, metadata !DIExpression()), !dbg !9276
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9278
  %5 = load i8, i8* %4, align 4, !dbg !9278, !range !2535
  %6 = icmp eq i8 %5, 0, !dbg !9278
  br i1 %6, label %7, label %8, !dbg !9280

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !9281
  br label %8, !dbg !9283

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !9284
  %10 = load i32, i32* %9, align 4, !dbg !9284
  %11 = icmp ult i32 %3, %10, !dbg !9286
  br i1 %11, label %12, label %27, !dbg !9287

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #20, !dbg !9288
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9289
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9289
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !9290
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !9290
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9291
  %18 = load i8*, i8** %17, align 4, !dbg !9291
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #21, !dbg !9292
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9293
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !9294
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !9294
  %23 = load i8*, i8** %17, align 4, !dbg !9295
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #21, !dbg !9296
  call void @llvm.dbg.value(metadata i32 %24, metadata !9274, metadata !DIExpression()), !dbg !9276
  tail call void @release_FDM_lock() #20, !dbg !9297
  %25 = icmp eq i32 %24, 0, !dbg !9298
  %26 = select i1 %25, i32 0, i32 6, !dbg !9276
  br label %27, !dbg !9276

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9276
  ret i32 %28, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !9301 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9302
  br i1 %1, label %3, label %2, !dbg !9304

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #21, !dbg !9305
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #20, !dbg !9307
  store i1 true, i1* @flash_init_status, align 4, !dbg !9308
  br label %3, !dbg !9309

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !9310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #2 section ".ram_code" !dbg !9311 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9312
  %2 = select i1 %1, i32 0, i32 -5, !dbg !9312
  ret i32 %2, !dbg !9313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9318, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 %1, metadata !9319, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i8* %2, metadata !9320, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9321, metadata !DIExpression()), !dbg !9325
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9326
  call void @llvm.dbg.value(metadata i8* %4, metadata !9322, metadata !DIExpression()), !dbg !9325
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9327
  %6 = ptrtoint i8* %5 to i32, !dbg !9328
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9329
  %8 = bitcast i8* %7 to i8**, !dbg !9329
  %9 = load i8*, i8** %8, align 4, !dbg !9329
  %10 = ptrtoint i8* %9 to i32, !dbg !9330
  %11 = shl i32 %1, 9, !dbg !9331
  %12 = add i32 %11, %6, !dbg !9332
  %13 = sub i32 %12, %10, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %13, metadata !9324, metadata !DIExpression()), !dbg !9325
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #20, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %14, metadata !9323, metadata !DIExpression()), !dbg !9325
  %15 = icmp eq i32 %14, 0, !dbg !9335
  %16 = select i1 %15, i32 0, i32 -13, !dbg !9325
  ret i32 %16, !dbg !9337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9340, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %1, metadata !9341, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8* %2, metadata !9342, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9343, metadata !DIExpression()), !dbg !9347
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9348
  call void @llvm.dbg.value(metadata i8* %4, metadata !9344, metadata !DIExpression()), !dbg !9347
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9349
  %6 = ptrtoint i8* %5 to i32, !dbg !9350
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9351
  %8 = bitcast i8* %7 to i8**, !dbg !9351
  %9 = load i8*, i8** %8, align 4, !dbg !9351
  %10 = ptrtoint i8* %9 to i32, !dbg !9352
  %11 = shl i32 %1, 9, !dbg !9353
  %12 = add i32 %11, %6, !dbg !9354
  %13 = sub i32 %12, %10, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %13, metadata !9346, metadata !DIExpression()), !dbg !9347
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #20, !dbg !9356
  call void @llvm.dbg.value(metadata i32 %14, metadata !9345, metadata !DIExpression()), !dbg !9347
  %15 = icmp eq i32 %14, 0, !dbg !9357
  %16 = select i1 %15, i32 0, i32 -14, !dbg !9347
  ret i32 %16, !dbg !9359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !9360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9366
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #20, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %2, metadata !9365, metadata !DIExpression()), !dbg !9366
  %3 = icmp eq i32 %2, 0, !dbg !9368
  %4 = select i1 %3, i32 0, i32 -15, !dbg !9366
  ret i32 %4, !dbg !9370
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9373, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9374, metadata !DIExpression()), !dbg !9376
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9377
  call void @llvm.dbg.value(metadata i8* %2, metadata !9375, metadata !DIExpression()), !dbg !9376
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #21, !dbg !9378
  ret i32 %3, !dbg !9379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !9380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9382, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9383, metadata !DIExpression()), !dbg !9385
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9386
  call void @llvm.dbg.value(metadata i8* %2, metadata !9384, metadata !DIExpression()), !dbg !9385
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #21, !dbg !9387
  ret i32 %3, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9393, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32* %1, metadata !9394, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32* %2, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9396, metadata !DIExpression()), !dbg !9398
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9399
  call void @llvm.dbg.value(metadata i8* %4, metadata !9397, metadata !DIExpression()), !dbg !9398
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #21, !dbg !9400
  store i32 %5, i32* %1, align 4, !dbg !9401
  %6 = icmp eq i32 %5, -1, !dbg !9402
  br i1 %6, label %10, label %7, !dbg !9404

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #21, !dbg !9405
  %9 = urem i32 %0, %8, !dbg !9406
  store i32 %9, i32* %2, align 4, !dbg !9407
  br label %10, !dbg !9408

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !9398
  ret i32 %11, !dbg !9409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9414, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i32 %1, metadata !9415, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i32* %2, metadata !9416, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9417, metadata !DIExpression()), !dbg !9419
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9420
  call void @llvm.dbg.value(metadata i8* %4, metadata !9418, metadata !DIExpression()), !dbg !9419
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9421
  %6 = ptrtoint i8* %5 to i32, !dbg !9422
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9423
  %8 = bitcast i8* %7 to i8**, !dbg !9423
  %9 = load i8*, i8** %8, align 4, !dbg !9423
  %10 = ptrtoint i8* %9 to i32, !dbg !9424
  %11 = add i32 %6, %1, !dbg !9425
  %12 = sub i32 %11, %10, !dbg !9426
  store i32 %12, i32* %2, align 4, !dbg !9427
  ret i32 0, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !9429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9433, metadata !DIExpression()), !dbg !9434
  %2 = add i32 %0, 2, !dbg !9435
  %3 = icmp ult i32 %2, 9, !dbg !9435
  br i1 %3, label %5, label %4, !dbg !9435

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #21, !dbg !9436
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9436
  unreachable, !dbg !9436

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !9435
  %7 = lshr i16 433, %6, !dbg !9435
  %8 = and i16 %7, 1, !dbg !9435
  %9 = icmp eq i16 %8, 0, !dbg !9435
  br i1 %9, label %4, label %10, !dbg !9435

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !9435
  %12 = load i32, i32* %11, align 4, !dbg !9435
  ret i32 %12, !dbg !9446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !9447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9452, metadata !DIExpression()), !dbg !9455
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #20, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %2, metadata !9454, metadata !DIExpression()), !dbg !9455
  %3 = icmp eq i32 %2, -1, !dbg !9457
  br i1 %3, label %4, label %5, !dbg !9459

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !9460
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9460
  unreachable, !dbg !9460

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #20, !dbg !9465
  call void @llvm.dbg.value(metadata i32 %6, metadata !9453, metadata !DIExpression()), !dbg !9455
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !9466

7:                                                ; preds = %5
  br label %10, !dbg !9467

8:                                                ; preds = %5
  br label %10, !dbg !9471

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !9474
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9474
  unreachable, !dbg !9474

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !9479
  ret i32 %11, !dbg !9480
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !9481 {
  %1 = tail call i32 @NOR_init() #20, !dbg !9482
  ret i32 0, !dbg !9483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !9484 {
  ret i32 0, !dbg !9485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9490, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %1, metadata !9491, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 0, metadata !9494, metadata !DIExpression()), !dbg !9495
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !9496

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !9497
  %5 = icmp eq i32 %4, 0, !dbg !9501
  br i1 %5, label %12, label %22, !dbg !9502

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !9503
  %8 = icmp eq i32 %7, 0, !dbg !9507
  br i1 %8, label %12, label %22, !dbg !9508

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !9509
  %11 = icmp eq i32 %10, 0, !dbg !9513
  br i1 %11, label %12, label %22, !dbg !9514

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !9515
  call void @llvm.dbg.value(metadata i32 %13, metadata !9494, metadata !DIExpression()), !dbg !9495
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #20, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %14, metadata !9493, metadata !DIExpression()), !dbg !9495
  %15 = icmp eq i32 %14, -1, !dbg !9517
  br i1 %15, label %22, label %16, !dbg !9519

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !9520
  call void @llvm.dbg.value(metadata i32 %17, metadata !9493, metadata !DIExpression()), !dbg !9495
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #20, !dbg !9521
  call void @llvm.dbg.value(metadata i32 %18, metadata !9492, metadata !DIExpression()), !dbg !9495
  %19 = icmp eq i32 %18, 0, !dbg !9522
  br i1 %19, label %22, label %20, !dbg !9524

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #20, !dbg !9525
  br label %22, !dbg !9527

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !9495
  ret i32 %23, !dbg !9528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9533, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i8* %1, metadata !9534, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %2, metadata !9535, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9536, metadata !DIExpression()), !dbg !9538
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !9539
  call void @llvm.dbg.value(metadata i32 %4, metadata !9537, metadata !DIExpression()), !dbg !9538
  %5 = icmp eq i32 %4, 0, !dbg !9540
  br i1 %5, label %8, label %6, !dbg !9542

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #20, !dbg !9543
  br label %8, !dbg !9545

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9538
  ret i32 %9, !dbg !9546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9551, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i8* %1, metadata !9552, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %2, metadata !9553, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9554, metadata !DIExpression()), !dbg !9556
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %4, metadata !9555, metadata !DIExpression()), !dbg !9556
  %5 = icmp eq i32 %4, 0, !dbg !9558
  br i1 %5, label %8, label %6, !dbg !9560

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #20, !dbg !9561
  br label %8, !dbg !9563

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9556
  ret i32 %9, !dbg !9564
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9565 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9569, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 %1, metadata !9570, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i8* %0, metadata !9571, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 0, metadata !9572, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 0, metadata !9573, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 0, metadata !9574, metadata !DIExpression()), !dbg !9575
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9576
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9576
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9576
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9577
  %7 = load i32, i32* %6, align 4, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %7, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 0, metadata !9573, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 0, metadata !9572, metadata !DIExpression()), !dbg !9575
  %8 = icmp ugt i32 %7, %1, !dbg !9578
  br i1 %8, label %23, label %9, !dbg !9579

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !9580
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 %12, metadata !9573, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 %13, metadata !9572, metadata !DIExpression()), !dbg !9575
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 0, !dbg !9582
  %15 = load i32, i32* %14, align 4, !dbg !9582
  %16 = mul i32 %15, %10, !dbg !9583
  %17 = add i32 %16, %13, !dbg !9584
  call void @llvm.dbg.value(metadata i32 %17, metadata !9572, metadata !DIExpression()), !dbg !9575
  %18 = add i32 %12, 1, !dbg !9585
  call void @llvm.dbg.value(metadata i32 %18, metadata !9573, metadata !DIExpression()), !dbg !9575
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 1, !dbg !9586
  %20 = load i32, i32* %19, align 4, !dbg !9586
  %21 = add i32 %20, %11, !dbg !9587
  call void @llvm.dbg.value(metadata i32 %21, metadata !9574, metadata !DIExpression()), !dbg !9575
  %22 = icmp ugt i32 %21, %1, !dbg !9578
  br i1 %22, label %23, label %9, !dbg !9579, !llvm.loop !9588

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !9590
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !9575
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !9575
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !9575
  call void @llvm.dbg.value(metadata i8* %0, metadata !9571, metadata !DIExpression()), !dbg !9575
  %28 = sub i32 %1, %27, !dbg !9591
  %29 = add i32 %28, %24, !dbg !9592
  %30 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %26, i32 0, !dbg !9593
  %31 = load i32, i32* %30, align 4, !dbg !9593
  %32 = mul i32 %29, %31, !dbg !9594
  %33 = add i32 %32, %25, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %33, metadata !9572, metadata !DIExpression()), !dbg !9575
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9596
  %35 = bitcast i8* %34 to i8**, !dbg !9596
  %36 = load i8*, i8** %35, align 4, !dbg !9596
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !9597
  ret i8* %37, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !9599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9601, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %2, metadata !9603, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i8* %0, metadata !9604, metadata !DIExpression()), !dbg !9605
  %4 = icmp eq i32 %2, 0, !dbg !9606
  br i1 %4, label %6, label %5, !dbg !9609

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !9610
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.137, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !9610
  unreachable, !dbg !9610

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9604, metadata !DIExpression()), !dbg !9605
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #20, !dbg !9612
  %8 = inttoptr i32 %7 to i8*, !dbg !9613
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9614
  %10 = bitcast i8* %9 to i8**, !dbg !9614
  store i8* %8, i8** %10, align 4, !dbg !9615
  ret i8* %8, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #12 section ".ram_code" !dbg !1846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1850, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i32 %1, metadata !1851, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i8* %0, metadata !1852, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i32 0, metadata !1897, metadata !DIExpression()), !dbg !9617
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9618
  %4 = bitcast i8* %3 to [8 x [2 x %struct.vdma_config_t]]*, !dbg !9618
  %5 = and i32 %1, 7, !dbg !9620
  %6 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !9621
  %7 = load i32, i32* %6, align 4, !dbg !9621
  %8 = icmp eq i32 %7, -1, !dbg !9622
  br i1 %8, label %62, label %9, !dbg !9623

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !9624
  br i1 %10, label %54, label %11, !dbg !9627

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !9628
  %13 = load i32, i32* %12, align 4, !dbg !9628
  %14 = icmp eq i32 %13, -1, !dbg !9631
  br i1 %14, label %44, label %15, !dbg !9632

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !9633
  br i1 %16, label %35, label %17, !dbg !9636

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9637
  %19 = add i32 %18, 1, !dbg !9637
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !9637
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9639
  %21 = shl nuw nsw i32 1, %5, !dbg !9641
  %22 = and i32 %20, %21, !dbg !9642
  %23 = icmp eq i32 %22, 0, !dbg !9642
  br i1 %23, label %30, label %24, !dbg !9643

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !9644
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9646
  %26 = ptrtoint i8* %25 to i32, !dbg !9647
  %27 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !9648
  store i32 %26, i32* %27, align 4, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %26, metadata !1897, metadata !DIExpression()), !dbg !9617
  %28 = xor i32 %21, -1, !dbg !9650
  %29 = and i32 %20, %28, !dbg !9651
  br label %71, !dbg !9652

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !9653
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9655
  %32 = ptrtoint i8* %31 to i32, !dbg !9656
  %33 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !9657
  store i32 %32, i32* %33, align 4, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %32, metadata !1897, metadata !DIExpression()), !dbg !9617
  %34 = or i32 %20, %21, !dbg !9659
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !9660
  %37 = add i32 %36, 1, !dbg !9660
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !9660
  %38 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !9662
  %39 = load i32, i32* %38, align 4, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %39, metadata !1897, metadata !DIExpression()), !dbg !9617
  %40 = shl nuw nsw i32 1, %5, !dbg !9663
  %41 = xor i32 %40, -1, !dbg !9664
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9665
  %43 = and i32 %42, %41, !dbg !9665
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9666
  %46 = add i32 %45, 1, !dbg !9666
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !9666
  store i32 %1, i32* %12, align 4, !dbg !9668
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9669
  %48 = ptrtoint i8* %47 to i32, !dbg !9670
  %49 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !9671
  store i32 %48, i32* %49, align 4, !dbg !9672
  call void @llvm.dbg.value(metadata i32 %48, metadata !1897, metadata !DIExpression()), !dbg !9617
  %50 = shl nuw nsw i32 1, %5, !dbg !9673
  %51 = xor i32 %50, -1, !dbg !9674
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9675
  %53 = and i32 %52, %51, !dbg !9675
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !9676
  %56 = add i32 %55, 1, !dbg !9676
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !9676
  %57 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !9678
  %58 = load i32, i32* %57, align 4, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %58, metadata !1897, metadata !DIExpression()), !dbg !9617
  %59 = shl nuw nsw i32 1, %5, !dbg !9679
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9680
  %61 = or i32 %60, %59, !dbg !9680
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9681
  %64 = add i32 %63, 1, !dbg !9681
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !9681
  store i32 %1, i32* %6, align 4, !dbg !9683
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9684
  %66 = ptrtoint i8* %65 to i32, !dbg !9685
  %67 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !9686
  store i32 %66, i32* %67, align 4, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %66, metadata !1897, metadata !DIExpression()), !dbg !9617
  %68 = shl nuw nsw i32 1, %5, !dbg !9688
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9689
  %70 = or i32 %69, %68, !dbg !9689
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !9690
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !9690
  call void @llvm.dbg.value(metadata i32 %73, metadata !1897, metadata !DIExpression()), !dbg !9617
  ret i32 %73, !dbg !9691
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9692 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9694, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %1, metadata !9695, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i8* %0, metadata !9696, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 0, metadata !9697, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 0, metadata !9698, metadata !DIExpression()), !dbg !9699
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9700
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9700
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9700
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9701
  %7 = load i32, i32* %6, align 4, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %7, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 0, metadata !9697, metadata !DIExpression()), !dbg !9699
  %8 = icmp ugt i32 %7, %1, !dbg !9702
  br i1 %8, label %17, label %9, !dbg !9703

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %11, metadata !9697, metadata !DIExpression()), !dbg !9699
  %12 = add i32 %11, 1, !dbg !9704
  call void @llvm.dbg.value(metadata i32 %12, metadata !9697, metadata !DIExpression()), !dbg !9699
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 1, !dbg !9706
  %14 = load i32, i32* %13, align 4, !dbg !9706
  %15 = add i32 %14, %10, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %15, metadata !9698, metadata !DIExpression()), !dbg !9699
  %16 = icmp ugt i32 %15, %1, !dbg !9702
  br i1 %16, label %17, label %9, !dbg !9703, !llvm.loop !9708

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !9699
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 0, !dbg !9710
  %20 = load i32, i32* %19, align 4, !dbg !9710
  ret i32 %20, !dbg !9711
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9712 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9714, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %1, metadata !9715, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i8* %0, metadata !9716, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 0, metadata !9717, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 0, metadata !9718, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 0, metadata !9719, metadata !DIExpression()), !dbg !9720
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9721
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9721
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9721
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9722
  %7 = load i32, i32* %6, align 4, !dbg !9722
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 0, !dbg !9723
  %9 = load i32, i32* %8, align 4, !dbg !9723
  %10 = mul i32 %9, %7, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %10, metadata !9718, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 0, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 0, metadata !9717, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %1, metadata !9715, metadata !DIExpression()), !dbg !9720
  %11 = icmp ult i32 %10, %1, !dbg !9725
  br i1 %11, label %12, label %30, !dbg !9726

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !9727
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %16, metadata !9718, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %17, metadata !9717, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %18, metadata !9715, metadata !DIExpression()), !dbg !9720
  %19 = icmp eq i32 %14, 0, !dbg !9726
  br i1 %19, label %36, label %20, !dbg !9728

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %21, metadata !9719, metadata !DIExpression()), !dbg !9720
  %22 = sub i32 %18, %16, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %22, metadata !9715, metadata !DIExpression()), !dbg !9720
  %23 = add i32 %17, 1, !dbg !9732
  call void @llvm.dbg.value(metadata i32 %23, metadata !9717, metadata !DIExpression()), !dbg !9720
  %24 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 1, !dbg !9733
  %25 = load i32, i32* %24, align 4, !dbg !9733
  %26 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 0, !dbg !9734
  %27 = load i32, i32* %26, align 4, !dbg !9734
  %28 = mul i32 %27, %25, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %28, metadata !9718, metadata !DIExpression()), !dbg !9720
  %29 = icmp ugt i32 %22, %28, !dbg !9725
  br i1 %29, label %12, label %30, !dbg !9726, !llvm.loop !9736

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !9738
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !9720
  %34 = udiv i32 %32, %31, !dbg !9741
  %35 = add i32 %34, %33, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %35, metadata !9719, metadata !DIExpression()), !dbg !9720
  br label %36, !dbg !9743

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !9744
  call void @llvm.dbg.value(metadata i32 %37, metadata !9719, metadata !DIExpression()), !dbg !9720
  ret i32 %37, !dbg !9745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #8 !dbg !9746 {
  ret i32 134217728, !dbg !9747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #8 !dbg !9748 {
  ret i32 3932160, !dbg !9749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #8 !dbg !9750 {
  ret i32 0, !dbg !9751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #8 !dbg !9752 {
  ret i32 262144, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !9754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9758
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !9759
  call void @llvm.dbg.value(metadata i32 %2, metadata !9757, metadata !DIExpression()), !dbg !9758
  %3 = icmp eq i32 %2, 0, !dbg !9760
  br i1 %3, label %5, label %4, !dbg !9762

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !9763
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.137, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !9763
  unreachable, !dbg !9763

5:                                                ; preds = %1
  ret void, !dbg !9768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !9769 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9773, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i8* %2, metadata !9775, metadata !DIExpression()), !dbg !9786
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !9787
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9787
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !9776, metadata !DIExpression()), !dbg !9788
  %7 = bitcast i32* %5 to i8*, !dbg !9789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9789
  call void @llvm.dbg.value(metadata i32* %5, metadata !9785, metadata !DIExpression(DW_OP_deref)), !dbg !9786
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !9790
  call void @llvm.va_start(i8* nonnull %6), !dbg !9791
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !9792
  %10 = load i32, i32* %9, align 4, !dbg !9792
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !9792
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !9792
  call void @llvm.va_end(i8* nonnull %6), !dbg !9793
  %13 = load i32, i32* %5, align 4, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %13, metadata !9785, metadata !DIExpression()), !dbg !9786
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !9795
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9796
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9796
  ret void, !dbg !9796
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !9797 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9799, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i32 %1, metadata !9800, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i8* %2, metadata !9801, metadata !DIExpression()), !dbg !9804
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !9805
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9805
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !9802, metadata !DIExpression()), !dbg !9806
  %7 = bitcast i32* %5 to i8*, !dbg !9807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9807
  call void @llvm.dbg.value(metadata i32* %5, metadata !9803, metadata !DIExpression(DW_OP_deref)), !dbg !9804
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !9808
  call void @llvm.va_start(i8* nonnull %6), !dbg !9809
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !9810
  %10 = load i32, i32* %9, align 4, !dbg !9810
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !9810
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !9810
  call void @llvm.va_end(i8* nonnull %6), !dbg !9811
  %13 = load i32, i32* %5, align 4, !dbg !9812
  call void @llvm.dbg.value(metadata i32 %13, metadata !9803, metadata !DIExpression()), !dbg !9804
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !9813
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9814
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9814
  ret void, !dbg !9814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !9815 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9817, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i32 %1, metadata !9818, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i8* %2, metadata !9819, metadata !DIExpression()), !dbg !9822
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !9823
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9823
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !9820, metadata !DIExpression()), !dbg !9824
  %7 = bitcast i32* %5 to i8*, !dbg !9825
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9825
  call void @llvm.dbg.value(metadata i32* %5, metadata !9821, metadata !DIExpression(DW_OP_deref)), !dbg !9822
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !9826
  call void @llvm.va_start(i8* nonnull %6), !dbg !9827
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !9828
  %10 = load i32, i32* %9, align 4, !dbg !9828
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !9828
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !9828
  call void @llvm.va_end(i8* nonnull %6), !dbg !9829
  %13 = load i32, i32* %5, align 4, !dbg !9830
  call void @llvm.dbg.value(metadata i32 %13, metadata !9821, metadata !DIExpression()), !dbg !9822
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !9831
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9832
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9832
  ret void, !dbg !9832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #8 !dbg !9833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9839, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 %1, metadata !9840, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8* %2, metadata !9841, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8* %3, metadata !9842, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 %4, metadata !9843, metadata !DIExpression()), !dbg !9844
  ret void, !dbg !9845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !9846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9848, metadata !DIExpression()), !dbg !9850
  %2 = shl i32 %0, 20, !dbg !9851
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9852
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !9853
  store volatile i32 %2, i32* %4, align 4, !dbg !9854
  %5 = load volatile i32, i32* %4, align 4, !dbg !9855
  %6 = or i32 %5, 65536, !dbg !9856
  store volatile i32 %6, i32* %4, align 4, !dbg !9857
  br label %7, !dbg !9858

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !9859
  %9 = and i32 %8, 1, !dbg !9860
  %10 = icmp eq i32 %9, 0, !dbg !9861
  br i1 %10, label %7, label %11, !dbg !9858, !llvm.loop !9862

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !9864
  %13 = lshr i32 %12, 8, !dbg !9865
  %14 = and i32 %13, 255, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %14, metadata !9849, metadata !DIExpression()), !dbg !9850
  ret i32 %14, !dbg !9866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !9867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9871, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 %1, metadata !9872, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 %1, metadata !9872, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !9873
  %3 = shl i32 %1, 24, !dbg !9874
  %4 = shl i32 %0, 20, !dbg !9875
  %5 = or i32 %4, %3, !dbg !9876
  %6 = or i32 %5, 131072, !dbg !9876
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9877
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !9878
  store volatile i32 %6, i32* %8, align 4, !dbg !9879
  %9 = load volatile i32, i32* %8, align 4, !dbg !9880
  %10 = or i32 %9, 65536, !dbg !9881
  store volatile i32 %10, i32* %8, align 4, !dbg !9882
  br label %11, !dbg !9883

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !9884
  %13 = and i32 %12, 1, !dbg !9885
  %14 = icmp eq i32 %13, 0, !dbg !9886
  br i1 %14, label %11, label %15, !dbg !9883, !llvm.loop !9887

15:                                               ; preds = %11
  ret void, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #5 section ".tcm_code" !dbg !9890 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !9891
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !9892
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !9893
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !9894
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !9895
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !9896
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !9897
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !9898
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !9899
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !9900
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !9901
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !9902
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !9903
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !9904
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !9905
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !9906
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !9907
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !9908
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !9909
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !9910
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !9911
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !9912
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !9913
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !9914
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !9915
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !9916
  ret void, !dbg !9917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #10 section ".tcm_code" !dbg !9918 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9921
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !9922
  store volatile i32 21553, i32* %2, align 4, !dbg !9923
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !9924
  store volatile i32 20489, i32* %3, align 4, !dbg !9925
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !9926
  store volatile i32 20550, i32* %4, align 4, !dbg !9927
  ret i32 0, !dbg !9928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #10 section ".tcm_code" !dbg !9929 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !9933, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 0, metadata !9931, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 16384, metadata !9932, metadata !DIExpression()), !dbg !9938
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9939
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !9940
  store volatile i32 0, i32* %2, align 4, !dbg !9941
  call void @llvm.dbg.value(metadata i32 0, metadata !9935, metadata !DIExpression()), !dbg !9938
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !9935, metadata !DIExpression()), !dbg !9938
  br label %5, !dbg !9942

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9935, metadata !DIExpression()), !dbg !9938
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !9934, metadata !DIExpression()), !dbg !9938
  br label %8, !dbg !9944

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9934, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 0, metadata !9936, metadata !DIExpression()), !dbg !9938
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !9948

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !9936, metadata !DIExpression()), !dbg !9938
  %12 = icmp eq i32 %30, 2, !dbg !9952
  br i1 %12, label %31, label %13, !dbg !9948, !llvm.loop !9954

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9936, metadata !DIExpression()), !dbg !9938
  store volatile i32 0, i32* %2, align 4, !dbg !9956
  store volatile i32 63, i32* %3, align 4, !dbg !9958
  %15 = load i32, i32* %10, align 4, !dbg !9959
  %16 = shl i32 %15, 16, !dbg !9960
  %17 = shl nuw nsw i32 %14, 13, !dbg !9961
  %18 = or i32 %17, %7, !dbg !9962
  %19 = or i32 %18, %16, !dbg !9963
  store volatile i32 %19, i32* %2, align 4, !dbg !9964
  %20 = load volatile i32, i32* %2, align 4, !dbg !9965
  %21 = or i32 %20, 805, !dbg !9965
  store volatile i32 %21, i32* %2, align 4, !dbg !9965
  br label %22, !dbg !9966

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !9967
  %24 = and i32 %23, 2, !dbg !9968
  %25 = icmp eq i32 %24, 0, !dbg !9969
  br i1 %25, label %22, label %26, !dbg !9966, !llvm.loop !9970

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !9972
  %28 = and i32 %27, 1, !dbg !9974
  %29 = icmp eq i32 %28, 0, !dbg !9975
  %30 = add nuw nsw i32 %14, 1, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %30, metadata !9936, metadata !DIExpression()), !dbg !9938
  br i1 %29, label %11, label %37, !dbg !9977

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %32, metadata !9934, metadata !DIExpression()), !dbg !9938
  %33 = icmp eq i32 %32, 2, !dbg !9979
  br i1 %33, label %34, label %8, !dbg !9944, !llvm.loop !9980

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !9982
  call void @llvm.dbg.value(metadata i32 %35, metadata !9935, metadata !DIExpression()), !dbg !9938
  %36 = icmp eq i32 %35, 2, !dbg !9983
  br i1 %36, label %37, label %5, !dbg !9942, !llvm.loop !9984

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !9938
  store volatile i32 0, i32* %2, align 4, !dbg !9938
  ret i32 %38, !dbg !9986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #10 section ".tcm_code" !dbg !9987 {
  %1 = tail call i32 @TestCase_MBIST() #20, !dbg !9988
  %2 = icmp ne i32 %1, 0, !dbg !9990
  %3 = sext i1 %2 to i32, !dbg !9991
  ret i32 %3, !dbg !9992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #10 section ".tcm_code" !dbg !9993 {
  call void @llvm.dbg.value(metadata i32 31, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 0, metadata !9996, metadata !DIExpression()), !dbg !9997
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9998
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !9999
  store volatile i32 0, i32* %2, align 4, !dbg !10000
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10001
  store volatile i32 0, i32* %3, align 4, !dbg !10002
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10003
  store volatile i32 0, i32* %4, align 4, !dbg !10004
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10005
  store volatile i32 0, i32* %5, align 4, !dbg !10006
  call void @llvm.dbg.value(metadata i32 31, metadata !9995, metadata !DIExpression()), !dbg !9997
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10007
  store volatile i32 522133279, i32* %6, align 4, !dbg !10011
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10012
  store volatile i32 522133279, i32* %7, align 4, !dbg !10013
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !10014
  %9 = icmp eq i32 %8, 0, !dbg !10016
  call void @llvm.dbg.value(metadata i32 31, metadata !9995, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9997
  br i1 %9, label %36, label %10, !dbg !10017

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %11, metadata !9995, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %11, metadata !9995, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9997
  %12 = icmp eq i32 %11, 0, !dbg !10018
  br i1 %12, label %26, label %13, !dbg !10019, !llvm.loop !10020

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10022
  call void @llvm.dbg.value(metadata i32 %14, metadata !9995, metadata !DIExpression()), !dbg !9997
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10023
  %16 = shl i32 %14, 24, !dbg !10024
  %17 = shl i32 %14, 16, !dbg !10025
  %18 = shl i32 %14, 8, !dbg !10026
  %19 = or i32 %17, %14, !dbg !10027
  %20 = or i32 %19, %16, !dbg !10028
  %21 = or i32 %20, %18, !dbg !10029
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10007
  store volatile i32 %21, i32* %22, align 4, !dbg !10011
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10012
  store volatile i32 %21, i32* %23, align 4, !dbg !10013
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !10014
  %25 = icmp eq i32 %24, 0, !dbg !10016
  call void @llvm.dbg.value(metadata i32 %14, metadata !9995, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9997
  br i1 %25, label %36, label %10, !dbg !10017

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !9996, metadata !DIExpression()), !dbg !9997
  %28 = shl nuw nsw i32 %27, 16, !dbg !10030
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10036
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10037
  store volatile i32 %28, i32* %30, align 4, !dbg !10038
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !10039
  %32 = icmp eq i32 %31, 0, !dbg !10041
  call void @llvm.dbg.value(metadata i32 %27, metadata !9996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9997
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %33, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %27, metadata !9996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9997
  br i1 %35, label %36, label %26, !dbg !10042, !llvm.loop !10043

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #10 section ".tcm_code" !dbg !10047 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10048
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10049
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10050
  store volatile i32 1, i32* %2, align 4, !dbg !10051
  br label %3, !dbg !10052

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10053
  %5 = and i32 %4, 2, !dbg !10054
  %6 = icmp eq i32 %5, 0, !dbg !10054
  br i1 %6, label %3, label %7, !dbg !10052, !llvm.loop !10055

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10057
  br label %8, !dbg !10058

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10059
  %10 = and i32 %9, 2, !dbg !10060
  %11 = icmp eq i32 %10, 0, !dbg !10060
  br i1 %11, label %12, label %8, !dbg !10058, !llvm.loop !10061

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10063
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10064
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10065

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10066
  %17 = and i32 %16, 1, !dbg !10067
  %18 = icmp eq i32 %17, 0, !dbg !10068
  br i1 %18, label %15, label %19, !dbg !10065, !llvm.loop !10069

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #20, !dbg !10071
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #20, !dbg !10072
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10073

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10074
  %24 = and i32 %23, 1, !dbg !10075
  %25 = icmp eq i32 %24, 0, !dbg !10076
  br i1 %25, label %22, label %26, !dbg !10073, !llvm.loop !10077

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10079
  %28 = icmp eq i32 %27, 9507, !dbg !10081
  br i1 %28, label %29, label %37, !dbg !10082

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10083
  %31 = and i32 %30, 15, !dbg !10086
  %32 = icmp eq i32 %31, 2, !dbg !10087
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10088
  %34 = and i32 %33, -128, !dbg !10088
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10088
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10088
  br label %37, !dbg !10089

37:                                               ; preds = %29, %26
  ret void, !dbg !10089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !10090 {
  tail call void @EMI_PowerOn_Init() #20, !dbg !10093
  tail call void @__EMI_SetRegValfromCMCP() #20, !dbg !10094
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #20, !dbg !10095
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10096
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #20, !dbg !10097
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10098
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #20, !dbg !10099
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10100
  ret i8 0, !dbg !10101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !10102 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10103
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10104
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10105
  store volatile i32 %1, i32* %3, align 4, !dbg !10106
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10107
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10108
  store volatile i32 %4, i32* %5, align 4, !dbg !10109
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10110
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10111
  store volatile i32 %6, i32* %7, align 4, !dbg !10112
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10113
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10114
  store volatile i32 %8, i32* %9, align 4, !dbg !10115
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10116
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10117
  store volatile i32 %10, i32* %11, align 4, !dbg !10118
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10119
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10120
  store volatile i32 %12, i32* %13, align 4, !dbg !10121
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10122
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10123
  store volatile i32 %14, i32* %15, align 4, !dbg !10124
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10125
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10126
  store volatile i32 %16, i32* %17, align 4, !dbg !10127
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10128
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10129
  store volatile i32 %18, i32* %19, align 4, !dbg !10130
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10131
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10132
  store volatile i32 %20, i32* %21, align 4, !dbg !10133
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10134
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10135
  store volatile i32 %22, i32* %23, align 4, !dbg !10136
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10137
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10138
  store volatile i32 %24, i32* %25, align 4, !dbg !10139
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10140
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10141
  store volatile i32 %26, i32* %27, align 4, !dbg !10142
  tail call void @__EMI_EnableDataAutoTracking() #20, !dbg !10143
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10144
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10145
  store volatile i32 806289408, i32* %29, align 4, !dbg !10146
  br label %30, !dbg !10147

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10148
  %32 = and i32 %31, 128, !dbg !10149
  %33 = icmp eq i32 %32, 0, !dbg !10149
  br i1 %33, label %30, label %34, !dbg !10147, !llvm.loop !10150

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10152
  br label %35, !dbg !10153

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10154
  %37 = and i32 %36, 128, !dbg !10155
  %38 = icmp eq i32 %37, 0, !dbg !10155
  br i1 %38, label %39, label %35, !dbg !10153, !llvm.loop !10156

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10158
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #20, !dbg !10159
  ret i8 0, !dbg !10160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #10 section ".tcm_code" !dbg !10161 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10162
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10163
  %3 = load volatile i32, i32* %2, align 4, !dbg !10163
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10164
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10165
  %5 = load volatile i32, i32* %4, align 4, !dbg !10165
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10166
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10167
  %7 = load volatile i32, i32* %6, align 4, !dbg !10167
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10168
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10169
  %9 = load volatile i32, i32* %8, align 4, !dbg !10169
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10170
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10171
  %11 = load volatile i32, i32* %10, align 4, !dbg !10171
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10172
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10173
  %13 = load volatile i32, i32* %12, align 4, !dbg !10173
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10174
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10175
  %15 = load volatile i32, i32* %14, align 4, !dbg !10175
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10176
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10177
  %17 = load volatile i32, i32* %16, align 4, !dbg !10177
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10178
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10179
  %19 = load volatile i32, i32* %18, align 4, !dbg !10179
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10180
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10181
  %21 = load volatile i32, i32* %20, align 4, !dbg !10181
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10182
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10183
  %23 = load volatile i32, i32* %22, align 4, !dbg !10183
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10184
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10185
  %25 = load volatile i32, i32* %24, align 4, !dbg !10185
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10186
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10187
  %27 = load volatile i32, i32* %26, align 4, !dbg !10187
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10188
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10189
  %29 = load volatile i32, i32* %28, align 4, !dbg !10189
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10190
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10191
  %31 = load volatile i32, i32* %30, align 4, !dbg !10191
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10192
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10193
  %33 = load volatile i32, i32* %32, align 4, !dbg !10193
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10194
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10195
  %35 = load volatile i32, i32* %34, align 4, !dbg !10195
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10196
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10197
  %37 = load volatile i32, i32* %36, align 4, !dbg !10197
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10198
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10199
  %39 = load volatile i32, i32* %38, align 4, !dbg !10199
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10200
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10201
  %41 = load volatile i32, i32* %40, align 4, !dbg !10201
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #10 section ".tcm_code" !dbg !10204 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10205

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10206
  %5 = and i32 %4, 17, !dbg !10207
  %6 = icmp eq i32 %5, 17, !dbg !10208
  br i1 %6, label %7, label %3, !dbg !10205, !llvm.loop !10209

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10211
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10212
  store volatile i32 %8, i32* %9, align 4, !dbg !10213
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10214
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10215
  store volatile i32 %10, i32* %11, align 4, !dbg !10216
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10217
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10218
  store volatile i32 %12, i32* %13, align 4, !dbg !10219
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10220
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10221
  store volatile i32 %14, i32* %15, align 4, !dbg !10222
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10223
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10224
  store volatile i32 %16, i32* %17, align 4, !dbg !10225
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10226
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10227
  store volatile i32 %18, i32* %19, align 4, !dbg !10228
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10229
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10230
  store volatile i32 %20, i32* %21, align 4, !dbg !10231
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10232
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10233
  store volatile i32 %22, i32* %23, align 4, !dbg !10234
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10235
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10236
  store volatile i32 %24, i32* %25, align 4, !dbg !10237
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10238
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10239
  store volatile i32 %26, i32* %27, align 4, !dbg !10240
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10241
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10242
  store volatile i32 %28, i32* %29, align 4, !dbg !10243
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10244
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10245
  store volatile i32 %30, i32* %31, align 4, !dbg !10246
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10247
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10248
  store volatile i32 %32, i32* %33, align 4, !dbg !10249
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10250
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10251
  store volatile i32 %34, i32* %35, align 4, !dbg !10252
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10253
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10254
  store volatile i32 %36, i32* %37, align 4, !dbg !10255
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10256
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10257
  store volatile i32 %38, i32* %39, align 4, !dbg !10258
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10259
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10260
  store volatile i32 %40, i32* %41, align 4, !dbg !10261
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10262
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10263
  store volatile i32 %42, i32* %43, align 4, !dbg !10264
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10265
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10266
  store volatile i32 %44, i32* %45, align 4, !dbg !10267
  ret void, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #10 section ".tcm_code" !dbg !10269 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10270
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10271
  %3 = load volatile i32, i32* %2, align 4, !dbg !10271
  %4 = and i32 %3, -2097185, !dbg !10272
  store volatile i32 %4, i32* %2, align 4, !dbg !10273
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10274
  store volatile i32 1, i32* %5, align 4, !dbg !10275
  br label %6, !dbg !10276

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !10277
  %8 = and i32 %7, 2, !dbg !10278
  %9 = icmp eq i32 %8, 0, !dbg !10278
  br i1 %9, label %6, label %10, !dbg !10276, !llvm.loop !10279

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !10281
  br label %11, !dbg !10282

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !10283
  %13 = and i32 %12, 2, !dbg !10284
  %14 = icmp eq i32 %13, 0, !dbg !10284
  br i1 %14, label %15, label %11, !dbg !10282, !llvm.loop !10285

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #20, !dbg !10287
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10288
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !10289
  store volatile i32 806289408, i32* %17, align 4, !dbg !10290
  br label %18, !dbg !10291

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10292
  %20 = and i32 %19, 128, !dbg !10293
  %21 = icmp eq i32 %20, 0, !dbg !10293
  br i1 %21, label %18, label %22, !dbg !10291, !llvm.loop !10294

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !10296
  br label %23, !dbg !10297

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !10298
  %25 = and i32 %24, 128, !dbg !10299
  %26 = icmp eq i32 %25, 0, !dbg !10299
  br i1 %26, label %27, label %23, !dbg !10297, !llvm.loop !10300

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !10302
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10303
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !10304
  store volatile i32 %28, i32* %29, align 4, !dbg !10305
  ret void, !dbg !10306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #10 section ".tcm_code" !dbg !10307 {
  tail call void @EMI_Setting_Save() #20, !dbg !10308
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10309

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10310
  %5 = and i32 %4, 17, !dbg !10311
  %6 = icmp eq i32 %5, 17, !dbg !10312
  br i1 %6, label %7, label %3, !dbg !10309, !llvm.loop !10313

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !10315
  %9 = or i32 %8, 1792, !dbg !10316
  store volatile i32 %9, i32* %2, align 4, !dbg !10317
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !10318
  store volatile i32 -261685248, i32* %10, align 4, !dbg !10319
  br label %11, !dbg !10320

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !10321
  %13 = and i32 %12, 1, !dbg !10322
  %14 = icmp eq i32 %13, 0, !dbg !10323
  br i1 %14, label %11, label %15, !dbg !10320, !llvm.loop !10324

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10326
  store volatile i32 0, i32* %16, align 4, !dbg !10327
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !10328

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10329
  %20 = and i32 %19, 16, !dbg !10330
  %21 = icmp eq i32 %20, 0, !dbg !10330
  br i1 %21, label %18, label %22, !dbg !10328, !llvm.loop !10331

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10333
  %24 = load volatile i32, i32* %23, align 4, !dbg !10333
  %25 = or i32 %24, 2097184, !dbg !10334
  store volatile i32 %25, i32* %23, align 4, !dbg !10335
  ret void, !dbg !10336
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #7 section ".tcm_code" !dbg !10337 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10342, metadata !DIExpression()), !dbg !10344
  %3 = bitcast i32* %2 to i8*, !dbg !10345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10345
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10343, metadata !DIExpression()), !dbg !10346
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !10347

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10348
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !10351
  store volatile i32 0, i32* %6, align 4, !dbg !10352
  store volatile i32 806289408, i32* %6, align 4, !dbg !10353
  br label %7, !dbg !10354

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !10355
  %9 = and i32 %8, 128, !dbg !10356
  %10 = icmp eq i32 %9, 0, !dbg !10356
  br i1 %10, label %7, label %11, !dbg !10354, !llvm.loop !10357

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !10359
  br label %12, !dbg !10360

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !10361
  %14 = and i32 %13, 128, !dbg !10362
  %15 = icmp eq i32 %14, 0, !dbg !10362
  br i1 %15, label %16, label %12, !dbg !10360, !llvm.loop !10363

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !10365
  store volatile i32 0, i32* %2, align 4, !dbg !10366
  %17 = load volatile i32, i32* %2, align 4, !dbg !10368
  %18 = icmp ult i32 %17, 255, !dbg !10370
  br i1 %18, label %19, label %25, !dbg !10371

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !10372
  %21 = add i32 %20, 1, !dbg !10372
  store volatile i32 %21, i32* %2, align 4, !dbg !10372
  %22 = load volatile i32, i32* %2, align 4, !dbg !10368
  %23 = icmp ult i32 %22, 255, !dbg !10370
  br i1 %23, label %19, label %25, !dbg !10371, !llvm.loop !10373

24:                                               ; preds = %1
  br label %25, !dbg !10375

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !10344
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10378
  ret i32 %26, !dbg !10378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !10379 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10380
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10381
  %3 = load volatile i32, i32* %2, align 4, !dbg !10381
  %4 = or i32 %3, 1792, !dbg !10382
  store volatile i32 %4, i32* %2, align 4, !dbg !10383
  ret void, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !10385 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10386
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10387
  %3 = load volatile i32, i32* %2, align 4, !dbg !10387
  %4 = and i32 %3, -1793, !dbg !10388
  store volatile i32 %4, i32* %2, align 4, !dbg !10389
  ret void, !dbg !10390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #8 section ".tcm_code" !dbg !10391 {
  ret i1 false, !dbg !10392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #8 section ".tcm_code" !dbg !10393 {
  ret i1 false, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !10395 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #21, !dbg !10396
  ret void, !dbg !10399
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !10400 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #21, !dbg !10401
  ret void, !dbg !10404
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10405 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #21, !dbg !10406
  ret void, !dbg !10409
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10410 {
  tail call void @peri_26m_dcxo() #21, !dbg !10411
  ret void, !dbg !10414
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !10415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10419, metadata !DIExpression()), !dbg !10420
  %2 = trunc i32 %0 to i8, !dbg !10421
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #21, !dbg !10422
  ret i32 %0, !dbg !10423
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !10424 {
  tail call fastcc void @SystemClock_Config() #20, !dbg !10425
  tail call void @SystemCoreClockUpdate() #21, !dbg !10426
  tail call fastcc void @prvSetupHardware() #20, !dbg !10427
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !10428, !srcloc !10431
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !10432, !srcloc !10435
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0)) #21, !dbg !10436
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.150, i32 0, i32 0)) #21, !dbg !10437
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0)) #21, !dbg !10438
  tail call fastcc void @hal_gpt_sw_interrupt_oneshot_mode_example() #20, !dbg !10439
  br label %4, !dbg !10440

4:                                                ; preds = %0, %4
  br label %4, !dbg !10440, !llvm.loop !10441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !10443 {
  %1 = tail call i32 @hal_clock_init() #21, !dbg !10444
  ret void, !dbg !10445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !10446 {
  tail call fastcc void @log_uart_init() #20, !dbg !10447
  %1 = tail call i32 @hal_flash_init() #21, !dbg !10448
  %2 = tail call i32 @hal_nvic_init() #21, !dbg !10449
  ret void, !dbg !10450
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_gpt_sw_interrupt_oneshot_mode_example() unnamed_addr #0 !dbg !10451 {
  %1 = tail call i32 @hal_gpt_sw_get_timer(i32* noundef nonnull @handle) #21, !dbg !10454
  %2 = icmp eq i32 %1, 0, !dbg !10456
  br i1 %2, label %5, label %3, !dbg !10457

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !10458
  br label %16, !dbg !10460

5:                                                ; preds = %0
  %6 = tail call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull @count1) #21, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %6, metadata !10453, metadata !DIExpression()), !dbg !10462
  %7 = icmp eq i32 %6, 0, !dbg !10463
  br i1 %7, label %10, label %8, !dbg !10465

8:                                                ; preds = %5
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef %6) #21, !dbg !10466
  br label %16, !dbg !10468

10:                                               ; preds = %5
  %11 = load i32, i32* @handle, align 4, !dbg !10469
  %12 = tail call i32 @hal_gpt_sw_start_timer_ms(i32 noundef %11, i32 noundef 10, void (i8*)* noundef nonnull @gpt_callback, i8* noundef null) #21, !dbg !10471
  %13 = icmp eq i32 %12, 0, !dbg !10472
  br i1 %13, label %16, label %14, !dbg !10473

14:                                               ; preds = %10
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #21, !dbg !10474
  br label %16, !dbg !10476

16:                                               ; preds = %10, %14, %8, %3
  ret void, !dbg !10477
}

; Function Attrs: noinline nounwind optsize
define internal void @gpt_callback(i8* nocapture noundef readnone %0) #0 !dbg !10478 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10480, metadata !DIExpression()), !dbg !10484
  %4 = bitcast i32* %2 to i8*, !dbg !10485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10485
  %5 = bitcast i32* %3 to i8*, !dbg !10486
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10486
  call void @llvm.dbg.value(metadata i32* %3, metadata !10482, metadata !DIExpression(DW_OP_deref)), !dbg !10484
  %6 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %3) #21, !dbg !10487
  %7 = load i32, i32* @count1, align 4, !dbg !10488
  %8 = load i32, i32* %3, align 4, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %8, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32* %2, metadata !10481, metadata !DIExpression(DW_OP_deref)), !dbg !10484
  %9 = call i32 @hal_gpt_get_duration_count(i32 noundef %7, i32 noundef %8, i32* noundef nonnull %2) #21, !dbg !10490
  %10 = load i32, i32* %2, align 4, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %10, metadata !10481, metadata !DIExpression()), !dbg !10484
  %11 = zext i32 %10 to i64, !dbg !10492
  %12 = mul nuw nsw i64 %11, 1000, !dbg !10493
  %13 = lshr i64 %12, 15, !dbg !10494
  %14 = trunc i64 %13 to i32, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %14, metadata !10483, metadata !DIExpression()), !dbg !10484
  %15 = load i32, i32* @handle, align 4, !dbg !10496
  %16 = call i32 @hal_gpt_sw_free_timer(i32 noundef %15) #21, !dbg !10497
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([85 x i8], [85 x i8]* @.str.5, i32 0, i32 0), i32 noundef %14) #21, !dbg !10498
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10499
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !10499
  ret void, !dbg !10499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @log_uart_init() unnamed_addr #0 !dbg !10500 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !10510
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !10510
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !10502, metadata !DIExpression()), !dbg !10511
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #21, !dbg !10512
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #21, !dbg !10513
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !10514
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #21, !dbg !10515
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !10516
  store i32 9, i32* %7, align 4, !dbg !10517
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !10518
  store i32 3, i32* %8, align 4, !dbg !10519
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !10520
  store i32 0, i32* %9, align 4, !dbg !10521
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !10522
  store i32 0, i32* %10, align 4, !dbg !10523
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #21, !dbg !10524
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !10525
  ret void, !dbg !10525
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !10526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10528, metadata !DIExpression()), !dbg !10529
  ret i32 0, !dbg !10530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !10531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10581, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !10582, metadata !DIExpression()), !dbg !10583
  ret i32 0, !dbg !10584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !10585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10587, metadata !DIExpression()), !dbg !10588
  ret i32 1, !dbg !10589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10594, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %1, metadata !10595, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %2, metadata !10596, metadata !DIExpression()), !dbg !10597
  ret i32 0, !dbg !10598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10603, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 %1, metadata !10604, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 %2, metadata !10605, metadata !DIExpression()), !dbg !10606
  ret i32 -1, !dbg !10607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10612, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i8* %1, metadata !10613, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i32 %2, metadata !10614, metadata !DIExpression()), !dbg !10615
  ret i32 0, !dbg !10616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #8 !dbg !10617 {
  ret i32 1, !dbg !10618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !10619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10623, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.value(metadata i32 %1, metadata !10624, metadata !DIExpression()), !dbg !10625
  ret i32 -1, !dbg !10626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #8 !dbg !10627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10629, metadata !DIExpression()), !dbg !10630
  ret i32 -1, !dbg !10631
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2100 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2297, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata i32 %1, metadata !2298, metadata !DIExpression()), !dbg !10632
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !10633, !srcloc !10634
  call void @llvm.dbg.value(metadata i8* %3, metadata !2300, metadata !DIExpression()), !dbg !10632
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !10635
  %5 = icmp eq i8* %4, null, !dbg !10637
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !10638
  call void @llvm.dbg.value(metadata i8* %6, metadata !2299, metadata !DIExpression()), !dbg !10632
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !10639
  %8 = icmp ult i8* %3, %7, !dbg !10641
  %9 = xor i1 %8, true, !dbg !10642
  %10 = or i1 %5, %9, !dbg !10642
  br i1 %10, label %11, label %13, !dbg !10642

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !10643
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !10642
  br label %13, !dbg !10642

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !10643
  ret i8* %14, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !10644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10646, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i8* %1, metadata !10647, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 %2, metadata !10648, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 0, metadata !10649, metadata !DIExpression()), !dbg !10650
  %4 = icmp sgt i32 %2, 0, !dbg !10651
  br i1 %4, label %5, label %14, !dbg !10654

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10649, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i8* %7, metadata !10647, metadata !DIExpression()), !dbg !10650
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10655
  call void @llvm.dbg.value(metadata i8* %8, metadata !10647, metadata !DIExpression()), !dbg !10650
  %9 = load i8, i8* %7, align 1, !dbg !10657
  %10 = zext i8 %9 to i32, !dbg !10657
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #21, !dbg !10658
  %12 = add nuw nsw i32 %6, 1, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %12, metadata !10649, metadata !DIExpression()), !dbg !10650
  %13 = icmp eq i32 %12, %2, !dbg !10651
  br i1 %13, label %14, label %5, !dbg !10654, !llvm.loop !10660

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !10662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #10 !dbg !10663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10665, metadata !DIExpression()), !dbg !10667
  %2 = add i32 %0, -1, !dbg !10668
  %3 = icmp ugt i32 %2, 16777215, !dbg !10670
  br i1 %3, label %8, label %4, !dbg !10671

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %5, metadata !10666, metadata !DIExpression()), !dbg !10667
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10673
  %7 = and i32 %6, -4, !dbg !10673
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10673
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10674
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10675
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10676
  br label %8, !dbg !10677

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !10667
  ret i32 %9, !dbg !10678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #10 !dbg !10679 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !10680
  ret void, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #9 !dbg !10682 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !10683
  ret i32 %1, !dbg !10684
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #9 !dbg !10685 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !10688
  %2 = lshr i32 %1, 3, !dbg !10689
  %3 = and i32 %2, 15, !dbg !10689
  call void @llvm.dbg.value(metadata i32 %3, metadata !10687, metadata !DIExpression()), !dbg !10690
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !10691

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !10692

5:                                                ; preds = %0, %0
  br label %9, !dbg !10694

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !10695
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !10696
  br label %15, !dbg !10698

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !10695
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !10696
  %12 = and i32 %11, 1024, !dbg !10699
  %13 = icmp eq i32 %12, 0, !dbg !10699
  br i1 %13, label %15, label %14, !dbg !10698

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !10700
  br label %15, !dbg !10702

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !10703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #10 !dbg !10704 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !10705
  %2 = or i32 %1, 15728640, !dbg !10705
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !10705
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !10706
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10707
  %4 = or i32 %3, 458752, !dbg !10707
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10707
  ret void, !dbg !10708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #10 !dbg !10709 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !10710
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !10711
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !10712
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !10713
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !10714
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !10715
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !10716
  ret void, !dbg !10717
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin optsize "no-builtins" }
attributes #21 = { nobuiltin nounwind optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2432, !2, !263, !546, !2454, !701, !791, !2458, !882, !981, !1306, !2504, !1394, !1405, !1763, !1824, !2506, !1904, !2072, !2084, !2292, !2303, !2420}
!llvm.ident = !{!2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508, !2508}
!llvm.module.flags = !{!2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !2, file: !3, line: 48, type: !259, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !174, globals: !195, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!4 = !{!5, !66, !71, !77, !156, !165, !170}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1170, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65}
!9 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!10 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!11 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!12 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!13 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!14 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!15 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!16 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!17 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!18 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!19 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!20 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!21 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!22 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!23 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!24 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!25 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!26 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!27 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!28 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!29 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!30 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!31 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!32 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!33 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!34 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!35 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!36 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!37 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!38 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!39 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!40 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!41 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!42 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!43 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!44 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!45 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!46 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!47 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!48 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!49 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!50 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!51 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!52 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!53 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!54 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!55 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!56 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!57 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!58 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!59 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!60 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!61 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!62 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!63 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!64 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!65 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 82, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!68 = !{!69, !70}
!69 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!70 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 75, baseType: !7, size: 32, elements: !72)
!72 = !{!73, !74, !75, !76}
!73 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!74 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!75 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!76 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !78, line: 44, baseType: !79, size: 32, elements: !80)
!78 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!79 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!81 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!82 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!83 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!84 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!85 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!86 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!87 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!88 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!89 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!90 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!91 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!92 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!93 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!94 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!95 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!96 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!97 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!98 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!99 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!100 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!101 = !DIEnumerator(name: "KP_IRQn", value: 10)
!102 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!103 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!104 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!105 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!106 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!107 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!108 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!109 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!110 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!111 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!112 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!113 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!114 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!115 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!116 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!117 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!118 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!119 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!120 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!121 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!122 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!123 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!124 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!125 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!126 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!127 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!128 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!129 = !DIEnumerator(name: "SF_IRQn", value: 38)
!130 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!131 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!132 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!133 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!134 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!135 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!136 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!137 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!138 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!139 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!140 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!141 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!142 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!143 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!144 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!145 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!146 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!147 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!148 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!149 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!150 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!151 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!152 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!153 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!154 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!155 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 846, baseType: !7, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164}
!158 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!159 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!160 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!161 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!162 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!163 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!164 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 380, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!169 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 397, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173}
!172 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!173 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!174 = !{!175, !179, !194}
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !176, line: 48, baseType: !177)
!176 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !178, line: 79, baseType: !7)
!178 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !78, line: 1272, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1262, size: 288, elements: !182)
!182 = !{!183, !185, !186, !187, !189, !190, !191, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !181, file: !78, line: 1263, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !175)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !181, file: !78, line: 1264, baseType: !184, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !181, file: !78, line: 1265, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !181, file: !78, line: 1266, baseType: !188, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !181, file: !78, line: 1267, baseType: !184, size: 32, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !181, file: !78, line: 1268, baseType: !184, size: 32, offset: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !181, file: !78, line: 1269, baseType: !184, size: 32, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !181, file: !78, line: 1270, baseType: !184, size: 32, offset: 224)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !181, file: !78, line: 1271, baseType: !184, size: 32, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!195 = !{!0, !196, !205, !212, !234, !257}
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !2, file: !3, line: 49, type: !198, isLocal: false, isDefinition: true)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !78, line: 1260, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1256, size: 96, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !200, file: !78, line: 1257, baseType: !188, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !200, file: !78, line: 1258, baseType: !184, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !200, file: !78, line: 1259, baseType: !184, size: 32, offset: 64)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "flag", scope: !207, file: !3, line: 88, type: !211, isLocal: true, isDefinition: true)
!207 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !3, file: !3, line: 86, type: !208, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!208 = !DISubroutineType(types: !209)
!209 = !{null}
!210 = !{}
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !2, file: !3, line: 51, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 768, elements: !232)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !67, line: 116, baseType: !216)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 111, size: 128, elements: !217)
!217 = !{!218, !220, !230, !231}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !216, file: !67, line: 112, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !166, line: 400, baseType: !170)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !216, file: !67, line: 113, baseType: !221, size: 64, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !67, line: 109, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 106, size: 64, elements: !223)
!223 = !{!224, !229}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !222, file: !67, line: 107, baseType: !225, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !166, line: 371, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !194}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !222, file: !67, line: 108, baseType: !194, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !216, file: !67, line: 114, baseType: !211, size: 8, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !216, file: !67, line: 115, baseType: !211, size: 8, offset: 104)
!232 = !{!233}
!233 = !DISubrange(count: 6)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !2, file: !3, line: 52, type: !236, isLocal: false, isDefinition: true)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !67, line: 134, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 125, size: 4256, elements: !238)
!238 = !{!239, !250, !251, !252, !253, !254, !255, !256}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !237, file: !67, line: 126, baseType: !240, size: 4096)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 4096, elements: !248)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !67, line: 123, baseType: !242)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 118, size: 128, elements: !243)
!243 = !{!244, !245, !246, !247}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !242, file: !67, line: 119, baseType: !221, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !242, file: !67, line: 120, baseType: !175, size: 32, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !242, file: !67, line: 121, baseType: !211, size: 8, offset: 96)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !242, file: !67, line: 122, baseType: !211, size: 8, offset: 104)
!248 = !{!249}
!249 = !DISubrange(count: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !237, file: !67, line: 127, baseType: !175, size: 32, offset: 4096)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !237, file: !67, line: 128, baseType: !175, size: 32, offset: 4128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !237, file: !67, line: 129, baseType: !175, size: 32, offset: 4160)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !237, file: !67, line: 130, baseType: !175, size: 32, offset: 4192)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !237, file: !67, line: 131, baseType: !211, size: 8, offset: 4224)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !237, file: !67, line: 132, baseType: !211, size: 8, offset: 4232)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !237, file: !67, line: 133, baseType: !211, size: 8, offset: 4240)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !2, file: !3, line: 53, type: !175, isLocal: false, isDefinition: true)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 192, elements: !232)
!260 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !263, file: !264, line: 64, type: !364, isLocal: false, isDefinition: true)
!263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !265, retainedTypes: !359, globals: !363, splitDebugInlining: false, nameTableKind: None)
!264 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!265 = !{!266, !318, !325, !329, !335, !339, !348, !353}
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !267)
!267 = !{!268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!268 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!269 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!270 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!271 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!272 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!273 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!274 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!275 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!276 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!277 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!278 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!279 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!280 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!281 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!282 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!283 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!284 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!285 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!286 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!287 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!288 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!289 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!290 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!291 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!292 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!293 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!294 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!295 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!296 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!297 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!298 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!299 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!300 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!301 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!302 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!303 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!304 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!305 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!306 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!307 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!308 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!309 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!310 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!311 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!312 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!313 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!314 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!315 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!316 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!317 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 224, baseType: !79, size: 32, elements: !320)
!319 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!320 = !{!321, !322, !323, !324}
!321 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!322 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!323 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!324 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 210, baseType: !7, size: 32, elements: !326)
!326 = !{!327, !328}
!327 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!328 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 233, baseType: !79, size: 32, elements: !330)
!330 = !{!331, !332, !333, !334}
!331 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!332 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!333 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!334 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 217, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!338 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!339 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 415, baseType: !7, size: 32, elements: !340)
!340 = !{!341, !342, !343, !344, !345, !346, !347}
!341 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!342 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!343 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!344 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!345 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!346 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!347 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 427, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!351 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!352 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 242, baseType: !7, size: 32, elements: !354)
!354 = !{!355, !356, !357, !358}
!355 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!356 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!357 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!358 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!359 = !{!194, !360, !361, !362}
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !319, line: 213, baseType: !325)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !319, line: 220, baseType: !335)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !319, line: 247, baseType: !353)
!363 = !{!261}
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !78, line: 1554, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1522, size: 29440, elements: !367)
!367 = !{!368, !385, !389, !398, !399, !408, !409, !418, !419, !429, !430, !439, !440, !449, !450, !459, !460, !469, !473, !482, !483, !492, !493, !502, !511, !512, !523, !527, !536, !537}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !366, file: !78, line: 1523, baseType: !369, size: 256)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 256, elements: !383)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !78, line: 1400, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1395, size: 128, elements: !372)
!372 = !{!373, !374, !375, !376}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !371, file: !78, line: 1396, baseType: !184, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !371, file: !78, line: 1397, baseType: !184, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !371, file: !78, line: 1398, baseType: !184, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !371, file: !78, line: 1399, baseType: !377, size: 32, offset: 96)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 32, elements: !381)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !176, line: 24, baseType: !379)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !178, line: 43, baseType: !380)
!380 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!381 = !{!382}
!382 = !DISubrange(count: 4)
!383 = !{!384}
!384 = !DISubrange(count: 2)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !366, file: !78, line: 1524, baseType: !386, size: 1792, offset: 256)
!386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1792, elements: !387)
!387 = !{!388}
!388 = !DISubrange(count: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !366, file: !78, line: 1525, baseType: !390, size: 256, offset: 2048)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 256, elements: !383)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !78, line: 1409, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1404, size: 128, elements: !393)
!393 = !{!394, !395, !396, !397}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !392, file: !78, line: 1405, baseType: !184, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !392, file: !78, line: 1406, baseType: !184, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !392, file: !78, line: 1407, baseType: !184, size: 32, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !392, file: !78, line: 1408, baseType: !377, size: 32, offset: 96)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !366, file: !78, line: 1526, baseType: !386, size: 1792, offset: 2304)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !366, file: !78, line: 1527, baseType: !400, size: 256, offset: 4096)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !401, size: 256, elements: !383)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !78, line: 1417, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1412, size: 128, elements: !403)
!403 = !{!404, !405, !406, !407}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !402, file: !78, line: 1413, baseType: !184, size: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !402, file: !78, line: 1414, baseType: !184, size: 32, offset: 32)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !402, file: !78, line: 1415, baseType: !184, size: 32, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !402, file: !78, line: 1416, baseType: !377, size: 32, offset: 96)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !366, file: !78, line: 1528, baseType: !386, size: 1792, offset: 4352)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !366, file: !78, line: 1529, baseType: !410, size: 256, offset: 6144)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 256, elements: !383)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !78, line: 1426, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1421, size: 128, elements: !413)
!413 = !{!414, !415, !416, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !412, file: !78, line: 1422, baseType: !184, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !412, file: !78, line: 1423, baseType: !184, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !412, file: !78, line: 1424, baseType: !184, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !412, file: !78, line: 1425, baseType: !377, size: 32, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !366, file: !78, line: 1530, baseType: !386, size: 1792, offset: 6400)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !366, file: !78, line: 1531, baseType: !420, size: 256, offset: 8192)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 256, elements: !383)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !78, line: 1432, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1429, size: 128, elements: !423)
!423 = !{!424, !425}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !422, file: !78, line: 1430, baseType: !184, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !422, file: !78, line: 1431, baseType: !426, size: 96, offset: 32)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 96, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 12)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !366, file: !78, line: 1532, baseType: !386, size: 1792, offset: 8448)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !366, file: !78, line: 1533, baseType: !431, size: 256, offset: 10240)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 256, elements: !383)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !78, line: 1440, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1435, size: 128, elements: !434)
!434 = !{!435, !436, !437, !438}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !433, file: !78, line: 1436, baseType: !184, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !433, file: !78, line: 1437, baseType: !184, size: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !433, file: !78, line: 1438, baseType: !184, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !433, file: !78, line: 1439, baseType: !377, size: 32, offset: 96)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !366, file: !78, line: 1534, baseType: !386, size: 1792, offset: 10496)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !366, file: !78, line: 1535, baseType: !441, size: 256, offset: 12288)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 256, elements: !383)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !78, line: 1448, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1443, size: 128, elements: !444)
!444 = !{!445, !446, !447, !448}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !443, file: !78, line: 1444, baseType: !184, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !443, file: !78, line: 1445, baseType: !184, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !443, file: !78, line: 1446, baseType: !184, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !443, file: !78, line: 1447, baseType: !377, size: 32, offset: 96)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !366, file: !78, line: 1536, baseType: !386, size: 1792, offset: 12544)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !366, file: !78, line: 1537, baseType: !451, size: 256, offset: 14336)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !383)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !78, line: 1455, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1450, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !453, file: !78, line: 1451, baseType: !184, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !453, file: !78, line: 1452, baseType: !184, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !453, file: !78, line: 1453, baseType: !184, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !78, line: 1454, baseType: !377, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !366, file: !78, line: 1538, baseType: !386, size: 1792, offset: 14592)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !366, file: !78, line: 1539, baseType: !461, size: 512, offset: 16384)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 512, elements: !381)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !78, line: 1463, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1458, size: 128, elements: !464)
!464 = !{!465, !466, !467, !468}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !463, file: !78, line: 1459, baseType: !184, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !463, file: !78, line: 1460, baseType: !184, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !463, file: !78, line: 1461, baseType: !184, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !463, file: !78, line: 1462, baseType: !377, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !366, file: !78, line: 1540, baseType: !470, size: 1536, offset: 16896)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1536, elements: !471)
!471 = !{!472}
!472 = !DISubrange(count: 192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !366, file: !78, line: 1541, baseType: !474, size: 256, offset: 18432)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 256, elements: !383)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !78, line: 1471, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1466, size: 128, elements: !477)
!477 = !{!478, !479, !480, !481}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !476, file: !78, line: 1467, baseType: !184, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !476, file: !78, line: 1468, baseType: !184, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !476, file: !78, line: 1469, baseType: !184, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !476, file: !78, line: 1470, baseType: !377, size: 32, offset: 96)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !366, file: !78, line: 1542, baseType: !386, size: 1792, offset: 18688)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !366, file: !78, line: 1543, baseType: !484, size: 256, offset: 20480)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 256, elements: !383)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !78, line: 1480, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1475, size: 128, elements: !487)
!487 = !{!488, !489, !490, !491}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !486, file: !78, line: 1476, baseType: !184, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !486, file: !78, line: 1477, baseType: !184, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !486, file: !78, line: 1478, baseType: !184, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !486, file: !78, line: 1479, baseType: !377, size: 32, offset: 96)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !366, file: !78, line: 1544, baseType: !386, size: 1792, offset: 20736)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !366, file: !78, line: 1545, baseType: !494, size: 256, offset: 22528)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 256, elements: !383)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !78, line: 1489, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1484, size: 128, elements: !497)
!497 = !{!498, !499, !500, !501}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !496, file: !78, line: 1485, baseType: !184, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !496, file: !78, line: 1486, baseType: !184, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !496, file: !78, line: 1487, baseType: !184, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !496, file: !78, line: 1488, baseType: !377, size: 32, offset: 96)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !366, file: !78, line: 1546, baseType: !503, size: 256, offset: 22784)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 256, elements: !383)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !78, line: 1497, baseType: !505)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1492, size: 128, elements: !506)
!506 = !{!507, !508, !509, !510}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !505, file: !78, line: 1493, baseType: !184, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !505, file: !78, line: 1494, baseType: !184, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !505, file: !78, line: 1495, baseType: !184, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !505, file: !78, line: 1496, baseType: !377, size: 32, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !366, file: !78, line: 1547, baseType: !470, size: 1536, offset: 23040)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !366, file: !78, line: 1548, baseType: !513, size: 896, offset: 24576)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 896, elements: !521)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !78, line: 1505, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1500, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !515, file: !78, line: 1501, baseType: !184, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !515, file: !78, line: 1502, baseType: !184, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !515, file: !78, line: 1503, baseType: !184, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !78, line: 1504, baseType: !377, size: 32, offset: 96)
!521 = !{!522}
!522 = !DISubrange(count: 7)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !366, file: !78, line: 1549, baseType: !524, size: 1152, offset: 25472)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1152, elements: !525)
!525 = !{!526}
!526 = !DISubrange(count: 144)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !366, file: !78, line: 1550, baseType: !528, size: 512, offset: 26624)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 512, elements: !381)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !78, line: 1513, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1508, size: 128, elements: !531)
!531 = !{!532, !533, !534, !535}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !530, file: !78, line: 1509, baseType: !184, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !530, file: !78, line: 1510, baseType: !184, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !530, file: !78, line: 1511, baseType: !184, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !530, file: !78, line: 1512, baseType: !377, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !366, file: !78, line: 1551, baseType: !470, size: 1536, offset: 27136)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !366, file: !78, line: 1552, baseType: !538, size: 768, offset: 28672)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 768, elements: !232)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !78, line: 1519, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1516, size: 128, elements: !541)
!541 = !{!542, !543}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !540, file: !78, line: 1517, baseType: !184, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !540, file: !78, line: 1518, baseType: !426, size: 96, offset: 32)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !546, file: !547, line: 101, type: !695, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !548, retainedTypes: !645, globals: !654, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!548 = !{!549, !556, !571, !577, !583, !588, !595, !611, !617, !621, !626, !633, !641}
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 180, baseType: !7, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555}
!551 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!552 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!553 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!554 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!555 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 189, baseType: !7, size: 32, elements: !558)
!557 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!558 = !{!559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!559 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!560 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!561 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!562 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!563 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!564 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!565 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!566 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!567 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!568 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!569 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!570 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 355, baseType: !79, size: 32, elements: !573)
!572 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!573 = !{!574, !575, !576}
!574 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!575 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!576 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 206, baseType: !79, size: 32, elements: !578)
!578 = !{!579, !580, !581, !582}
!579 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!580 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!581 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!582 = !DIEnumerator(name: "VDMA_OK", value: 0)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !547, line: 65, baseType: !7, size: 32, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!586 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!587 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!588 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 345, baseType: !79, size: 32, elements: !589)
!589 = !{!590, !591, !592, !593, !594}
!590 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!591 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!592 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!593 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!594 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 302, baseType: !7, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610}
!597 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!598 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!599 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!600 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!601 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!602 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!603 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!604 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!605 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!606 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!607 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!608 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!609 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!610 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!611 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 321, baseType: !7, size: 32, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!614 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!615 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!616 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 330, baseType: !7, size: 32, elements: !618)
!618 = !{!619, !620}
!619 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!620 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 337, baseType: !7, size: 32, elements: !622)
!622 = !{!623, !624, !625}
!623 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!624 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!625 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!626 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !627, line: 101, baseType: !79, size: 32, elements: !628)
!627 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!628 = !{!629, !630, !631, !632}
!629 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!630 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!631 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!632 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !634, line: 152, baseType: !79, size: 32, elements: !635)
!634 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!635 = !{!636, !637, !638, !639, !640}
!636 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!637 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!638 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!639 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!640 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!641 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 222, baseType: !79, size: 32, elements: !642)
!642 = !{!643, !644}
!643 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!644 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!645 = !{!194, !175, !646}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !648, line: 96, baseType: !649)
!648 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 93, size: 64, elements: !650)
!650 = !{!651, !652}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !649, file: !648, line: 94, baseType: !211, size: 8)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !649, file: !648, line: 95, baseType: !653, size: 32, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !6, line: 186, baseType: !549)
!654 = !{!544, !655, !668, !673, !687, !693}
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !546, file: !547, line: 102, type: !657, isLocal: true, isDefinition: true)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 256, elements: !381)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !547, line: 74, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !547, line: 71, size: 64, elements: !660)
!660 = !{!661, !667}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !659, file: !547, line: 72, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !572, line: 410, baseType: !663)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DISubroutineType(types: !665)
!665 = !{null, !666, !194}
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !572, line: 359, baseType: !571)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !659, file: !547, line: 73, baseType: !194, size: 32, offset: 32)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !546, file: !547, line: 103, type: !670, isLocal: true, isDefinition: true)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 512, elements: !671)
!671 = !{!672}
!672 = !DISubrange(count: 8)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !546, file: !547, line: 104, type: !675, isLocal: true, isDefinition: true)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 896, elements: !381)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !572, line: 390, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 382, size: 224, elements: !678)
!678 = !{!679, !681, !682, !683, !684, !685, !686}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !677, file: !572, line: 383, baseType: !680, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !677, file: !572, line: 384, baseType: !175, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !677, file: !572, line: 385, baseType: !175, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !677, file: !572, line: 386, baseType: !680, size: 32, offset: 96)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !677, file: !572, line: 387, baseType: !175, size: 32, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !677, file: !572, line: 388, baseType: !175, size: 32, offset: 160)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !677, file: !572, line: 389, baseType: !175, size: 32, offset: 192)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !546, file: !547, line: 105, type: !689, isLocal: true, isDefinition: true)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 416, elements: !691)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!691 = !{!692}
!692 = !DISubrange(count: 13)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !546, file: !547, line: 90, type: !211, isLocal: true, isDefinition: true)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 128, elements: !381)
!696 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !547, line: 69, baseType: !583)
!698 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !701, file: !702, line: 53, type: !782, isLocal: false, isDefinition: true)
!701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !703, retainedTypes: !714, globals: !770, splitDebugInlining: false, nameTableKind: None)
!702 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!703 = !{!5, !77, !556, !549, !704}
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !648, line: 46, baseType: !7, size: 32, elements: !705)
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713}
!706 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!707 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!708 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!709 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!710 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!711 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!712 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!713 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !718)
!718 = !{!719, !725, !730, !736, !737, !742, !747, !748, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !717, file: !78, line: 547, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 543, size: 32, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !720, file: !78, line: 544, baseType: !188, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !720, file: !78, line: 545, baseType: !184, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !720, file: !78, line: 546, baseType: !184, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !717, file: !78, line: 551, baseType: !726, size: 32, offset: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 548, size: 32, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !726, file: !78, line: 549, baseType: !184, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !726, file: !78, line: 550, baseType: !184, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !717, file: !78, line: 556, baseType: !731, size: 32, offset: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 552, size: 32, elements: !732)
!732 = !{!733, !734, !735}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !731, file: !78, line: 553, baseType: !188, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !731, file: !78, line: 554, baseType: !184, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !731, file: !78, line: 555, baseType: !184, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !717, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !717, file: !78, line: 561, baseType: !738, size: 32, offset: 128)
!738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 558, size: 32, elements: !739)
!739 = !{!740, !741}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !738, file: !78, line: 559, baseType: !184, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !738, file: !78, line: 560, baseType: !184, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !717, file: !78, line: 565, baseType: !743, size: 32, offset: 160)
!743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 562, size: 32, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !743, file: !78, line: 563, baseType: !188, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !743, file: !78, line: 564, baseType: !184, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !717, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !717, file: !78, line: 570, baseType: !749, size: 32, offset: 224)
!749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 567, size: 32, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !749, file: !78, line: 568, baseType: !184, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !749, file: !78, line: 569, baseType: !184, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !717, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !717, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !717, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !717, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !717, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !717, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !717, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !717, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !717, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !717, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !717, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !717, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !717, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !717, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !717, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !717, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !717, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!770 = !{!699, !771, !776}
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !701, file: !702, line: 54, type: !773, isLocal: false, isDefinition: true)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 128, elements: !381)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !6, line: 1237, baseType: !5)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !701, file: !702, line: 55, type: !778, isLocal: false, isDefinition: true)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 128, elements: !381)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !78, line: 125, baseType: !781)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !78, line: 123, baseType: !77)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 128, elements: !381)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!785 = distinct !DIGlobalVariable(name: "priority_set", scope: !786, file: !787, line: 128, type: !175, isLocal: true, isDefinition: true)
!786 = distinct !DISubprogram(name: "hal_nvic_init", scope: !787, file: !787, line: 126, type: !788, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !878)
!787 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!788 = !DISubroutineType(types: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !634, line: 158, baseType: !633)
!791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !792, retainedTypes: !793, globals: !860, splitDebugInlining: false, nameTableKind: None)
!792 = !{!633, !77}
!793 = !{!780, !794, !175, !828, !858}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !797)
!796 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804, !805, !808, !809, !810, !811, !812, !813, !814, !815, !817, !818, !819, !821, !825, !827}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !797, file: !796, line: 397, baseType: !188, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !797, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !797, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !797, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !797, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !797, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !797, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 96, elements: !427)
!807 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !378)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !797, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !797, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !797, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !797, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !797, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !797, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !797, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !797, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 64, elements: !383)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !797, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !797, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !797, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 128, elements: !381)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !797, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 160, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 5)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !797, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 160, elements: !823)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !797, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !796, line: 378, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 363, size: 28704, elements: !831)
!831 = !{!832, !834, !838, !839, !840, !841, !842, !843, !844, !845, !849, !853, !857}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !830, file: !796, line: 365, baseType: !833, size: 256)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 256, elements: !671)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !830, file: !796, line: 366, baseType: !835, size: 768, offset: 256)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 768, elements: !836)
!836 = !{!837}
!837 = !DISubrange(count: 24)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !830, file: !796, line: 367, baseType: !833, size: 256, offset: 1024)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !830, file: !796, line: 368, baseType: !835, size: 768, offset: 1280)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !830, file: !796, line: 369, baseType: !833, size: 256, offset: 2048)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !830, file: !796, line: 370, baseType: !835, size: 768, offset: 2304)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !830, file: !796, line: 371, baseType: !833, size: 256, offset: 3072)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !830, file: !796, line: 372, baseType: !835, size: 768, offset: 3328)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !830, file: !796, line: 373, baseType: !833, size: 256, offset: 4096)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !830, file: !796, line: 374, baseType: !846, size: 1792, offset: 4352)
!846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 1792, elements: !847)
!847 = !{!848}
!848 = !DISubrange(count: 56)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !830, file: !796, line: 375, baseType: !850, size: 1920, offset: 6144)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 1920, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 240)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !830, file: !796, line: 376, baseType: !854, size: 20608, offset: 8064)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 20608, elements: !855)
!855 = !{!856}
!856 = !DISubrange(count: 644)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !830, file: !796, line: 377, baseType: !184, size: 32, offset: 28672)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !176, line: 44, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !178, line: 77, baseType: !79)
!860 = !{!861, !862, !875}
!861 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !791, file: !787, line: 119, type: !864, isLocal: false, isDefinition: true)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 4096, elements: !873)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !787, line: 50, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !787, line: 47, size: 64, elements: !867)
!867 = !{!868, !872}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !866, file: !787, line: 48, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !780}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !866, file: !787, line: 49, baseType: !175, size: 32, offset: 32)
!873 = !{!874}
!874 = !DISubrange(count: 64)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !791, file: !787, line: 52, type: !877, isLocal: true, isDefinition: true)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 2048, elements: !873)
!878 = !{!879}
!879 = !DILocalVariable(name: "i", scope: !786, file: !787, line: 129, type: !175)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "DelayResume", scope: !882, file: !883, line: 55, type: !211, isLocal: false, isDefinition: true)
!882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !884, retainedTypes: !919, globals: !958, splitDebugInlining: false, nameTableKind: None)
!883 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!884 = !{!885, !893, !898}
!885 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !886, line: 51, baseType: !7, size: 32, elements: !887)
!886 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!887 = !{!888, !889, !890, !891, !892}
!888 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!889 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!890 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!891 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!892 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !886, line: 62, baseType: !7, size: 32, elements: !894)
!894 = !{!895, !896, !897}
!895 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!896 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!897 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!898 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !899, line: 228, baseType: !7, size: 32, elements: !900)
!899 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!900 = !{!901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!901 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!902 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!903 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!904 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!905 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!906 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!907 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!908 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!909 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!910 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!911 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!912 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!913 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!914 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!915 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!916 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!917 = !DIEnumerator(name: "NR_MUXS", value: 16)
!918 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!919 = !{!920, !921, !943, !680, !175, !7, !949, !951, !955, !957}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !78, line: 2777, baseType: !923)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2758, size: 576, elements: !924)
!924 = !{!925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !923, file: !78, line: 2759, baseType: !184, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !923, file: !78, line: 2760, baseType: !184, size: 32, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !923, file: !78, line: 2761, baseType: !184, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !923, file: !78, line: 2762, baseType: !184, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !923, file: !78, line: 2763, baseType: !184, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !923, file: !78, line: 2764, baseType: !184, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !923, file: !78, line: 2765, baseType: !184, size: 32, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !923, file: !78, line: 2766, baseType: !184, size: 32, offset: 224)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !923, file: !78, line: 2767, baseType: !184, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !923, file: !78, line: 2768, baseType: !184, size: 32, offset: 288)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !923, file: !78, line: 2769, baseType: !184, size: 32, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !923, file: !78, line: 2770, baseType: !184, size: 32, offset: 352)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !923, file: !78, line: 2771, baseType: !184, size: 32, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !923, file: !78, line: 2772, baseType: !184, size: 32, offset: 416)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !923, file: !78, line: 2773, baseType: !184, size: 32, offset: 448)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !923, file: !78, line: 2774, baseType: !184, size: 32, offset: 480)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !923, file: !78, line: 2775, baseType: !184, size: 32, offset: 512)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !923, file: !78, line: 2776, baseType: !184, size: 32, offset: 544)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !78, line: 2801, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2798, size: 64, elements: !946)
!946 = !{!947, !948}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !945, file: !78, line: 2799, baseType: !184, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !945, file: !78, line: 2800, baseType: !184, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !176, line: 36, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !178, line: 57, baseType: !954)
!954 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !380)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!958 = !{!880, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977}
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !882, file: !883, line: 604, type: !378, isLocal: false, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !882, file: !883, line: 605, type: !175, isLocal: false, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !882, file: !883, line: 606, type: !175, isLocal: false, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !882, file: !883, line: 607, type: !175, isLocal: false, isDefinition: true)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !882, file: !883, line: 608, type: !175, isLocal: false, isDefinition: true)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !882, file: !883, line: 609, type: !175, isLocal: false, isDefinition: true)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !882, file: !883, line: 610, type: !175, isLocal: false, isDefinition: true)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !882, file: !883, line: 611, type: !175, isLocal: false, isDefinition: true)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !882, file: !883, line: 665, type: !175, isLocal: false, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !882, file: !883, line: 666, type: !175, isLocal: false, isDefinition: true)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !981, file: !982, line: 334, type: !211, isLocal: false, isDefinition: true)
!981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !983, retainedTypes: !1151, globals: !1291, splitDebugInlining: false, nameTableKind: None)
!982 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!983 = !{!984, !1075, !1081, !1088, !1100, !1111, !1120, !1129, !1133, !1137}
!984 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !985, line: 58, baseType: !79, size: 32, elements: !986)
!985 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!986 = !{!987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074}
!987 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!988 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!989 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!990 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!991 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!992 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!993 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!994 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!995 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!996 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!997 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!998 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!999 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1000 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1001 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1002 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1003 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1004 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1005 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1006 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1007 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1008 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1009 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1010 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1011 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1012 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1013 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1014 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1015 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1016 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1017 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1018 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1019 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1020 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1021 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1022 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1023 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1024 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1025 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1026 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1027 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1028 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1029 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1030 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1031 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1032 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1033 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1034 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1035 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1036 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1037 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1038 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1039 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1040 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1041 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1042 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1043 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1044 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1045 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1046 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1047 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1048 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1049 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1050 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1051 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1052 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1053 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1054 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1055 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1056 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1057 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1058 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1059 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1060 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1061 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1062 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1063 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1064 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1065 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1066 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1067 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1068 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1069 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1070 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1071 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1072 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1073 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1074 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1075 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1076, line: 81, baseType: !7, size: 32, elements: !1077)
!1076 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1077 = !{!1078, !1079, !1080}
!1078 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1079 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1080 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1081 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !982, line: 298, baseType: !7, size: 32, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1087}
!1083 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1084 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1085 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1086 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1087 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1088 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 51, baseType: !7, size: 32, elements: !1090)
!1089 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1090 = !{!1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099}
!1091 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1092 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1093 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1094 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1095 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1096 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1097 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1098 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1099 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1101, line: 110, baseType: !79, size: 32, elements: !1102)
!1101 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110}
!1103 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1104 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1105 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1106 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1107 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1108 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1109 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1110 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1111 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 73, baseType: !7, size: 32, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1117, !1118, !1119}
!1113 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1114 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1115 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1116 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1117 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1118 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1119 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 83, baseType: !7, size: 32, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125, !1126, !1127, !1128}
!1122 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1123 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1124 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1125 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1126 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1127 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1128 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 98, baseType: !7, size: 32, elements: !1130)
!1130 = !{!1131, !1132}
!1131 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1132 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1133 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1076, line: 76, baseType: !7, size: 32, elements: !1134)
!1134 = !{!1135, !1136}
!1135 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1136 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1076, line: 208, baseType: !7, size: 32, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150}
!1139 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1140 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1141 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1142 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1143 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1144 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1145 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1146 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1147 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1148 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1149 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1150 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1151 = !{!175, !920, !951, !680, !1152, !1262, !1284, !194, !1290, !380}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1076, line: 193, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 134, size: 1824, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1165, !1171, !1175, !1183, !1184, !1191, !1192, !1193, !1194, !1202, !1205, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1256, !1257, !1261}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1154, file: !1076, line: 136, baseType: !175, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1154, file: !1076, line: 137, baseType: !680, size: 32, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1154, file: !1076, line: 138, baseType: !1159, size: 32, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1161)
!1160 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1163)
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1162, file: !1160, line: 55, baseType: !378, size: 8)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1154, file: !1076, line: 139, baseType: !1166, size: 32, offset: 96)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1168, file: !1160, line: 45, baseType: !378, size: 8)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1154, file: !1076, line: 140, baseType: !1172, size: 8, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !176, line: 20, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !178, line: 41, baseType: !1174)
!1174 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1154, file: !1076, line: 143, baseType: !1176, size: 32, offset: 160)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1179)
!1178 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1179, file: !1178, line: 144, baseType: !175, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1179, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1154, file: !1076, line: 144, baseType: !680, size: 32, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1154, file: !1076, line: 145, baseType: !1185, size: 32, offset: 224)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1188)
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1187, file: !1178, line: 150, baseType: !175, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1187, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1154, file: !1076, line: 146, baseType: !680, size: 32, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1154, file: !1076, line: 147, baseType: !175, size: 32, offset: 288)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1154, file: !1076, line: 148, baseType: !680, size: 32, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1154, file: !1076, line: 151, baseType: !1195, size: 1024, offset: 352)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 1024, elements: !1201)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1198)
!1198 = !{!1199, !1200}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1197, file: !1178, line: 168, baseType: !175, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1197, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1201 = !{!672, !384}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1154, file: !1076, line: 155, baseType: !1203, size: 32, offset: 1376)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1089, line: 120, baseType: !378)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1154, file: !1076, line: 156, baseType: !1206, size: 32, offset: 1408)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1076, line: 124, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 90, size: 200, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1208, file: !1076, line: 91, baseType: !378, size: 8)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1208, file: !1076, line: 92, baseType: !378, size: 8, offset: 8)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1208, file: !1076, line: 94, baseType: !378, size: 8, offset: 16)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1208, file: !1076, line: 95, baseType: !378, size: 8, offset: 24)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1208, file: !1076, line: 96, baseType: !378, size: 8, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1208, file: !1076, line: 98, baseType: !378, size: 8, offset: 40)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1208, file: !1076, line: 99, baseType: !378, size: 8, offset: 48)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1208, file: !1076, line: 100, baseType: !378, size: 8, offset: 56)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1208, file: !1076, line: 101, baseType: !378, size: 8, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1208, file: !1076, line: 103, baseType: !378, size: 8, offset: 72)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1208, file: !1076, line: 104, baseType: !378, size: 8, offset: 80)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1208, file: !1076, line: 106, baseType: !378, size: 8, offset: 88)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1208, file: !1076, line: 107, baseType: !378, size: 8, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1208, file: !1076, line: 108, baseType: !378, size: 8, offset: 104)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1208, file: !1076, line: 109, baseType: !378, size: 8, offset: 112)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1208, file: !1076, line: 110, baseType: !378, size: 8, offset: 120)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1208, file: !1076, line: 111, baseType: !378, size: 8, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1208, file: !1076, line: 112, baseType: !378, size: 8, offset: 136)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1208, file: !1076, line: 114, baseType: !378, size: 8, offset: 144)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1208, file: !1076, line: 115, baseType: !378, size: 8, offset: 152)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1208, file: !1076, line: 118, baseType: !378, size: 8, offset: 160)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1208, file: !1076, line: 119, baseType: !378, size: 8, offset: 168)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1208, file: !1076, line: 120, baseType: !378, size: 8, offset: 176)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1208, file: !1076, line: 121, baseType: !378, size: 8, offset: 184)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1208, file: !1076, line: 122, baseType: !378, size: 8, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1154, file: !1076, line: 157, baseType: !175, size: 32, offset: 1440)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1154, file: !1076, line: 158, baseType: !952, size: 16, offset: 1472)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1154, file: !1076, line: 159, baseType: !952, size: 16, offset: 1488)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1154, file: !1076, line: 163, baseType: !952, size: 16, offset: 1504)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1154, file: !1076, line: 164, baseType: !952, size: 16, offset: 1520)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1154, file: !1076, line: 167, baseType: !378, size: 8, offset: 1536)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1154, file: !1076, line: 168, baseType: !1242, size: 24, offset: 1544)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 24, elements: !1243)
!1243 = !{!1244}
!1244 = !DISubrange(count: 3)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1154, file: !1076, line: 169, baseType: !378, size: 8, offset: 1568)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1154, file: !1076, line: 170, baseType: !378, size: 8, offset: 1576)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1154, file: !1076, line: 173, baseType: !952, size: 16, offset: 1584)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1154, file: !1076, line: 174, baseType: !175, size: 32, offset: 1600)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1154, file: !1076, line: 175, baseType: !175, size: 32, offset: 1632)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1154, file: !1076, line: 178, baseType: !211, size: 8, offset: 1664)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1154, file: !1076, line: 179, baseType: !211, size: 8, offset: 1672)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1154, file: !1076, line: 182, baseType: !1253, size: 32, offset: 1696)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!79, !194}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1154, file: !1076, line: 186, baseType: !1253, size: 32, offset: 1728)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1154, file: !1076, line: 187, baseType: !1258, size: 32, offset: 1760)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!79, !194, !175, !194, !175}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1154, file: !1076, line: 188, baseType: !1258, size: 32, offset: 1792)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !78, line: 2777, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2758, size: 576, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1264, file: !78, line: 2759, baseType: !184, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1264, file: !78, line: 2760, baseType: !184, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1264, file: !78, line: 2761, baseType: !184, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1264, file: !78, line: 2762, baseType: !184, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1264, file: !78, line: 2763, baseType: !184, size: 32, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1264, file: !78, line: 2764, baseType: !184, size: 32, offset: 160)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1264, file: !78, line: 2765, baseType: !184, size: 32, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1264, file: !78, line: 2766, baseType: !184, size: 32, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1264, file: !78, line: 2767, baseType: !184, size: 32, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1264, file: !78, line: 2768, baseType: !184, size: 32, offset: 288)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1264, file: !78, line: 2769, baseType: !184, size: 32, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1264, file: !78, line: 2770, baseType: !184, size: 32, offset: 352)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1264, file: !78, line: 2771, baseType: !184, size: 32, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1264, file: !78, line: 2772, baseType: !184, size: 32, offset: 416)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1264, file: !78, line: 2773, baseType: !184, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1264, file: !78, line: 2774, baseType: !184, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1264, file: !78, line: 2775, baseType: !184, size: 32, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1264, file: !78, line: 2776, baseType: !184, size: 32, offset: 544)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !78, line: 2801, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2798, size: 64, elements: !1287)
!1287 = !{!1288, !1289}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1286, file: !78, line: 2799, baseType: !184, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1286, file: !78, line: 2800, baseType: !184, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!1291 = !{!979, !1292, !1294, !1296, !1301}
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !981, file: !982, line: 382, type: !175, isLocal: false, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !981, file: !982, line: 383, type: !175, isLocal: false, isDefinition: true)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !981, file: !982, line: 369, type: !1298, isLocal: true, isDefinition: true)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1024, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 128)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !981, file: !982, line: 1409, type: !79, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1306, file: !1361, line: 35, type: !1362, isLocal: false, isDefinition: true)
!1306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1308, retainedTypes: !1354, globals: !1355, splitDebugInlining: false, nameTableKind: None)
!1307 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1308 = !{!1309}
!1309 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1310, line: 77, baseType: !7, size: 32, elements: !1311)
!1310 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1312 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1313 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1314 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1315 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1316 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1317 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1318 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1319 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1320 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1321 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1322 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1323 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1324 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1325 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1326 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1327 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1328 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1329 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1330 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1331 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1332 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1333 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1334 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1335 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1336 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1337 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1338 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1339 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1340 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1341 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1342 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1343 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1344 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1345 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1346 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1347 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1348 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1349 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1350 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1351 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1352 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1353 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1354 = !{!194}
!1355 = !{!1304, !1356, !1359}
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1306, file: !1307, line: 96, type: !1358, isLocal: true, isDefinition: true)
!1358 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1306, file: !1307, line: 94, type: !1358, isLocal: true, isDefinition: true)
!1361 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1307, line: 54, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1307, line: 51, size: 576, elements: !1365)
!1365 = !{!1366, !1376}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1364, file: !1307, line: 52, baseType: !1367, size: 96)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1310, line: 152, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1310, line: 144, size: 96, elements: !1369)
!1369 = !{!1370, !1372, !1374}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1368, file: !1310, line: 145, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1310, line: 61, baseType: !7)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1368, file: !1310, line: 146, baseType: !1373, size: 16, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1310, line: 62, baseType: !954)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1368, file: !1310, line: 150, baseType: !1375, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1310, line: 127, baseType: !1309)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1364, file: !1307, line: 53, baseType: !1377, size: 480, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1378, line: 107, baseType: !1379)
!1378 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 103, size: 480, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1379, file: !1378, line: 104, baseType: !7, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1379, file: !1378, line: 105, baseType: !7, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1379, file: !1378, line: 106, baseType: !1384, size: 400, offset: 64)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1385, size: 400, elements: !823)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1378, line: 100, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 92, size: 80, elements: !1387)
!1387 = !{!1388, !1389, !1390}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1386, file: !1378, line: 93, baseType: !378, size: 8)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1386, file: !1378, line: 94, baseType: !378, size: 8, offset: 8)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1386, file: !1378, line: 96, baseType: !1391, size: 64, offset: 16)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 64, elements: !671)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1394, file: !1397, line: 96, type: !1398, isLocal: false, isDefinition: true)
!1394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1396, splitDebugInlining: false, nameTableKind: None)
!1395 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1396 = !{!1392}
!1397 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 152, elements: !1401)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1401 = !{!1402}
!1402 = !DISubrange(count: 19)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1405, file: !1406, line: 168, type: !1756, isLocal: false, isDefinition: true)
!1405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1407, retainedTypes: !1418, globals: !1427, splitDebugInlining: false, nameTableKind: None)
!1406 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1407 = !{!1408, !984, !1309}
!1408 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1409, line: 49, baseType: !7, size: 32, elements: !1410)
!1409 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1417}
!1411 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1412 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1413 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1414 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1415 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1416 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1417 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1418 = !{!1419, !175, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !985, line: 47, baseType: !380)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1423, file: !1178, line: 144, baseType: !175, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1423, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1427 = !{!1403, !1428, !1430, !1440, !1577, !1579, !1581, !1583, !1585, !1590, !1593, !1602, !1604, !1606, !1614, !1616, !1618, !1701, !1704, !1706, !1708, !1719, !1721, !1734}
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1405, file: !1406, line: 94, type: !858, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1405, file: !1406, line: 95, type: !1432, isLocal: false, isDefinition: true)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1378, line: 100, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 92, size: 80, elements: !1436)
!1436 = !{!1437, !1438, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1435, file: !1378, line: 93, baseType: !378, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1435, file: !1378, line: 94, baseType: !378, size: 8, offset: 8)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1435, file: !1378, line: 96, baseType: !1391, size: 64, offset: 16)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1405, file: !1406, line: 127, type: !1442, isLocal: false, isDefinition: true)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1178, line: 317, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1178, line: 237, size: 2720, elements: !1444)
!1444 = !{!1445, !1446, !1498, !1499, !1502, !1503, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1544, !1545, !1546, !1551, !1552, !1553, !1554, !1555, !1559, !1563, !1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1443, file: !1178, line: 238, baseType: !175, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1443, file: !1178, line: 239, baseType: !1447, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1178, line: 121, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 105, size: 480, elements: !1450)
!1450 = !{!1451, !1455, !1456, !1460, !1464, !1468, !1469, !1473, !1474, !1475, !1476, !1481, !1486, !1490, !1494}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1449, file: !1178, line: 106, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!79, !194, !194}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1449, file: !1178, line: 107, baseType: !1253, size: 32, offset: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1449, file: !1178, line: 108, baseType: !1457, size: 32, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!194, !194, !175, !175}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1449, file: !1178, line: 109, baseType: !1461, size: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!79, !194, !175}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1449, file: !1178, line: 110, baseType: !1465, size: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!79, !194, !194, !194, !175}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1449, file: !1178, line: 111, baseType: !1461, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1449, file: !1178, line: 112, baseType: !1470, size: 32, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!858, !194, !175}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1449, file: !1178, line: 113, baseType: !1461, size: 32, offset: 224)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1449, file: !1178, line: 114, baseType: !1461, size: 32, offset: 256)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1449, file: !1178, line: 115, baseType: !1461, size: 32, offset: 288)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1449, file: !1178, line: 116, baseType: !1477, size: 32, offset: 320)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!79, !194, !79, !1480, !194, !1480}
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !985, line: 50, baseType: !7)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1449, file: !1178, line: 117, baseType: !1482, size: 32, offset: 352)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!79, !194, !1485}
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1449, file: !1178, line: 118, baseType: !1487, size: 32, offset: 384)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!79, !194, !194, !175}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1449, file: !1178, line: 119, baseType: !1491, size: 32, offset: 416)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!211, !194, !175}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1449, file: !1178, line: 120, baseType: !1495, size: 32, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!79, !194, !175, !194}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1443, file: !1178, line: 240, baseType: !194, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1443, file: !1178, line: 241, baseType: !1500, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !985, line: 46, baseType: !954)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1443, file: !1178, line: 242, baseType: !1500, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1443, file: !1178, line: 243, baseType: !1504, size: 928, offset: 160)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1178, line: 99, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 90, size: 928, elements: !1506)
!1506 = !{!1507, !1508, !1510, !1511, !1512, !1513, !1514, !1515}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1505, file: !1178, line: 91, baseType: !175, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1505, file: !1178, line: 92, baseType: !1509, size: 256, offset: 32)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !671)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1505, file: !1178, line: 93, baseType: !1509, size: 256, offset: 288)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1505, file: !1178, line: 94, baseType: !1509, size: 256, offset: 544)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1505, file: !1178, line: 95, baseType: !175, size: 32, offset: 800)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1505, file: !1178, line: 96, baseType: !1501, size: 16, offset: 832)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1505, file: !1178, line: 97, baseType: !175, size: 32, offset: 864)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1505, file: !1178, line: 98, baseType: !175, size: 32, offset: 896)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1443, file: !1178, line: 244, baseType: !1509, size: 256, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1443, file: !1178, line: 245, baseType: !1509, size: 256, offset: 1344)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1443, file: !1178, line: 246, baseType: !175, size: 32, offset: 1600)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1443, file: !1178, line: 247, baseType: !175, size: 32, offset: 1632)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1443, file: !1178, line: 248, baseType: !175, size: 32, offset: 1664)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1443, file: !1178, line: 249, baseType: !175, size: 32, offset: 1696)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1443, file: !1178, line: 250, baseType: !175, size: 32, offset: 1728)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1443, file: !1178, line: 252, baseType: !175, size: 32, offset: 1760)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1443, file: !1178, line: 255, baseType: !175, size: 32, offset: 1792)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1443, file: !1178, line: 256, baseType: !175, size: 32, offset: 1824)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1443, file: !1178, line: 257, baseType: !175, size: 32, offset: 1856)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1443, file: !1178, line: 261, baseType: !175, size: 32, offset: 1888)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1443, file: !1178, line: 262, baseType: !175, size: 32, offset: 1920)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1443, file: !1178, line: 263, baseType: !175, size: 32, offset: 1952)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1443, file: !1178, line: 264, baseType: !175, size: 32, offset: 1984)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1443, file: !1178, line: 265, baseType: !175, size: 32, offset: 2016)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1443, file: !1178, line: 266, baseType: !175, size: 32, offset: 2048)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1443, file: !1178, line: 267, baseType: !175, size: 32, offset: 2080)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1443, file: !1178, line: 268, baseType: !175, size: 32, offset: 2112)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1443, file: !1178, line: 270, baseType: !175, size: 32, offset: 2144)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1443, file: !1178, line: 271, baseType: !175, size: 32, offset: 2176)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1443, file: !1178, line: 272, baseType: !1538, size: 32, offset: 2208)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1178, line: 229, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 226, size: 64, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1540, file: !1178, line: 227, baseType: !175, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1540, file: !1178, line: 228, baseType: !175, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1443, file: !1178, line: 273, baseType: !1419, size: 32, offset: 2240)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1443, file: !1178, line: 274, baseType: !1419, size: 32, offset: 2272)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1443, file: !1178, line: 276, baseType: !1547, size: 32, offset: 2304)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1443, file: !1178, line: 278, baseType: !175, size: 32, offset: 2336)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1443, file: !1178, line: 280, baseType: !1547, size: 32, offset: 2368)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1443, file: !1178, line: 281, baseType: !1547, size: 32, offset: 2400)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1443, file: !1178, line: 283, baseType: !175, size: 32, offset: 2432)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1443, file: !1178, line: 284, baseType: !1556, size: 32, offset: 2464)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!175, !1550}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1443, file: !1178, line: 285, baseType: !1560, size: 32, offset: 2496)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!175, !1550, !175, !175}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1443, file: !1178, line: 293, baseType: !1564, size: 32, offset: 2528)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1178, line: 162, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 159, size: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1566, file: !1178, line: 160, baseType: !175, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1566, file: !1178, line: 161, baseType: !175, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1443, file: !1178, line: 295, baseType: !175, size: 32, offset: 2560)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1443, file: !1178, line: 296, baseType: !175, size: 32, offset: 2592)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1443, file: !1178, line: 297, baseType: !175, size: 32, offset: 2624)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1443, file: !1178, line: 298, baseType: !1501, size: 16, offset: 2656)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1443, file: !1178, line: 302, baseType: !1501, size: 16, offset: 2672)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1443, file: !1178, line: 310, baseType: !211, size: 8, offset: 2688)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1443, file: !1178, line: 313, baseType: !211, size: 8, offset: 2696)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1405, file: !1406, line: 129, type: !175, isLocal: false, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1405, file: !1406, line: 130, type: !175, isLocal: false, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1405, file: !1406, line: 131, type: !175, isLocal: false, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1405, file: !1406, line: 132, type: !952, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1405, file: !1406, line: 136, type: !1587, isLocal: false, isDefinition: true)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 4096, elements: !1588)
!1588 = !{!1589}
!1589 = !DISubrange(count: 512)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1405, file: !1406, line: 146, type: !1592, isLocal: true, isDefinition: true)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 512, elements: !671)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1405, file: !1406, line: 152, type: !1595, isLocal: true, isDefinition: true)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1378, line: 116, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 113, size: 64, elements: !1599)
!1599 = !{!1600, !1601}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1598, file: !1378, line: 114, baseType: !175, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1598, file: !1378, line: 115, baseType: !175, size: 32, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1405, file: !1406, line: 156, type: !175, isLocal: false, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1405, file: !1406, line: 157, type: !175, isLocal: false, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1405, file: !1406, line: 160, type: !1608, isLocal: true, isDefinition: true)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1609, size: 512, elements: !671)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1610, file: !1178, line: 150, baseType: !175, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1610, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1405, file: !1406, line: 173, type: !175, isLocal: false, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1405, file: !1406, line: 176, type: !1448, isLocal: false, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1405, file: !1406, line: 177, type: !1620, isLocal: false, isDefinition: true)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1076, line: 193, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 134, size: 1824, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1631, !1637, !1638, !1639, !1640, !1642, !1643, !1644, !1645, !1652, !1653, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1621, file: !1076, line: 136, baseType: !175, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1621, file: !1076, line: 137, baseType: !680, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1621, file: !1076, line: 138, baseType: !1626, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1629)
!1629 = !{!1630}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1628, file: !1160, line: 55, baseType: !378, size: 8)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1621, file: !1076, line: 139, baseType: !1632, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1635)
!1635 = !{!1636}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1634, file: !1160, line: 45, baseType: !378, size: 8)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1621, file: !1076, line: 140, baseType: !1172, size: 8, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1621, file: !1076, line: 143, baseType: !1421, size: 32, offset: 160)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1621, file: !1076, line: 144, baseType: !680, size: 32, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1621, file: !1076, line: 145, baseType: !1641, size: 32, offset: 224)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1621, file: !1076, line: 146, baseType: !680, size: 32, offset: 256)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1621, file: !1076, line: 147, baseType: !175, size: 32, offset: 288)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1621, file: !1076, line: 148, baseType: !680, size: 32, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1621, file: !1076, line: 151, baseType: !1646, size: 1024, offset: 352)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1201)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1648, file: !1178, line: 168, baseType: !175, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1648, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1621, file: !1076, line: 155, baseType: !1203, size: 32, offset: 1376)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1621, file: !1076, line: 156, baseType: !1654, size: 32, offset: 1408)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1076, line: 124, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 90, size: 200, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1656, file: !1076, line: 91, baseType: !378, size: 8)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1656, file: !1076, line: 92, baseType: !378, size: 8, offset: 8)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1656, file: !1076, line: 94, baseType: !378, size: 8, offset: 16)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1656, file: !1076, line: 95, baseType: !378, size: 8, offset: 24)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1656, file: !1076, line: 96, baseType: !378, size: 8, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1656, file: !1076, line: 98, baseType: !378, size: 8, offset: 40)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1656, file: !1076, line: 99, baseType: !378, size: 8, offset: 48)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1656, file: !1076, line: 100, baseType: !378, size: 8, offset: 56)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1656, file: !1076, line: 101, baseType: !378, size: 8, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1656, file: !1076, line: 103, baseType: !378, size: 8, offset: 72)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1656, file: !1076, line: 104, baseType: !378, size: 8, offset: 80)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1656, file: !1076, line: 106, baseType: !378, size: 8, offset: 88)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1656, file: !1076, line: 107, baseType: !378, size: 8, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1656, file: !1076, line: 108, baseType: !378, size: 8, offset: 104)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1656, file: !1076, line: 109, baseType: !378, size: 8, offset: 112)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1656, file: !1076, line: 110, baseType: !378, size: 8, offset: 120)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1656, file: !1076, line: 111, baseType: !378, size: 8, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1656, file: !1076, line: 112, baseType: !378, size: 8, offset: 136)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1656, file: !1076, line: 114, baseType: !378, size: 8, offset: 144)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1656, file: !1076, line: 115, baseType: !378, size: 8, offset: 152)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1656, file: !1076, line: 118, baseType: !378, size: 8, offset: 160)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1656, file: !1076, line: 119, baseType: !378, size: 8, offset: 168)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1656, file: !1076, line: 120, baseType: !378, size: 8, offset: 176)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1656, file: !1076, line: 121, baseType: !378, size: 8, offset: 184)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1656, file: !1076, line: 122, baseType: !378, size: 8, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1621, file: !1076, line: 157, baseType: !175, size: 32, offset: 1440)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1621, file: !1076, line: 158, baseType: !952, size: 16, offset: 1472)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1621, file: !1076, line: 159, baseType: !952, size: 16, offset: 1488)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1621, file: !1076, line: 163, baseType: !952, size: 16, offset: 1504)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1621, file: !1076, line: 164, baseType: !952, size: 16, offset: 1520)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1621, file: !1076, line: 167, baseType: !378, size: 8, offset: 1536)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1621, file: !1076, line: 168, baseType: !1242, size: 24, offset: 1544)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1621, file: !1076, line: 169, baseType: !378, size: 8, offset: 1568)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1621, file: !1076, line: 170, baseType: !378, size: 8, offset: 1576)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1621, file: !1076, line: 173, baseType: !952, size: 16, offset: 1584)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1621, file: !1076, line: 174, baseType: !175, size: 32, offset: 1600)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1621, file: !1076, line: 175, baseType: !175, size: 32, offset: 1632)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1621, file: !1076, line: 178, baseType: !211, size: 8, offset: 1664)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1621, file: !1076, line: 179, baseType: !211, size: 8, offset: 1672)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1621, file: !1076, line: 182, baseType: !1253, size: 32, offset: 1696)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1621, file: !1076, line: 186, baseType: !1253, size: 32, offset: 1728)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1621, file: !1076, line: 187, baseType: !1258, size: 32, offset: 1760)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1621, file: !1076, line: 188, baseType: !1258, size: 32, offset: 1792)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1405, file: !1406, line: 178, type: !1703, isLocal: false, isDefinition: true)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 64, elements: !671)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1405, file: !1406, line: 179, type: !1655, isLocal: false, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1405, file: !1406, line: 204, type: !1592, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1405, file: !1406, line: 205, type: !1710, isLocal: false, isDefinition: true)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1711, line: 93, baseType: !1712)
!1711 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1711, line: 83, size: 1056, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1712, file: !1711, line: 84, baseType: !175, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1712, file: !1711, line: 85, baseType: !1447, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1712, file: !1711, line: 86, baseType: !194, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1712, file: !1711, line: 87, baseType: !1504, size: 928, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1712, file: !1711, line: 92, baseType: !211, size: 8, offset: 1024)
!1719 = !DIGlobalVariableExpression(var: !1720, expr: !DIExpression())
!1720 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1405, file: !1406, line: 208, type: !1620, isLocal: false, isDefinition: true)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "nor_list", scope: !1405, file: !1406, line: 114, type: !1723, isLocal: true, isDefinition: true)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1378, line: 125, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 119, size: 1088, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1733}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1726, file: !1378, line: 120, baseType: !952, size: 16)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1726, file: !1378, line: 121, baseType: !952, size: 16, offset: 16)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1726, file: !1378, line: 122, baseType: !175, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1726, file: !1378, line: 123, baseType: !1732, size: 512, offset: 64)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1597, size: 512, elements: !671)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1726, file: !1378, line: 124, baseType: !1608, size: 512, offset: 576)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1405, file: !1736, line: 42, type: !1737, isLocal: true, isDefinition: true)
!1736 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1738)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1406, line: 66, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1406, line: 63, size: 5600, elements: !1740)
!1740 = !{!1741, !1748}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1739, file: !1406, line: 64, baseType: !1742, size: 96)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1310, line: 152, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1310, line: 144, size: 96, elements: !1744)
!1744 = !{!1745, !1746, !1747}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1743, file: !1310, line: 145, baseType: !1371, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1743, file: !1310, line: 146, baseType: !1373, size: 16, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1743, file: !1310, line: 150, baseType: !1375, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1739, file: !1406, line: 65, baseType: !1749, size: 5504, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1378, line: 132, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 128, size: 5504, elements: !1751)
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1750, file: !1378, line: 129, baseType: !7, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1750, file: !1378, line: 130, baseType: !7, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1750, file: !1378, line: 131, baseType: !1755, size: 5440, offset: 64)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 5440, elements: !823)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1160, line: 79, baseType: !1757)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 77, size: 8, elements: !1759)
!1759 = !{!1760}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1758, file: !1160, line: 78, baseType: !378, size: 8)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1762 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1763, file: !1764, line: 82, type: !79, isLocal: true, isDefinition: true)
!1763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1765, retainedTypes: !1771, globals: !1816, splitDebugInlining: false, nameTableKind: None)
!1764 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1765 = !{!1100, !984, !1766}
!1766 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1101, line: 123, baseType: !7, size: 32, elements: !1767)
!1767 = !{!1768, !1769, !1770}
!1768 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1769 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1770 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1771 = !{!175, !1772, !194, !680}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1178, line: 190, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 173, size: 1376, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1784, !1790, !1791, !1798, !1799, !1806, !1807, !1808, !1809}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1774, file: !1178, line: 174, baseType: !175, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1774, file: !1178, line: 175, baseType: !1419, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1774, file: !1178, line: 176, baseType: !1779, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1782)
!1782 = !{!1783}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1781, file: !1160, line: 55, baseType: !378, size: 8)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1774, file: !1178, line: 177, baseType: !1785, size: 32, offset: 96)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1788)
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1787, file: !1160, line: 45, baseType: !378, size: 8)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1774, file: !1178, line: 178, baseType: !1172, size: 8, offset: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1774, file: !1178, line: 180, baseType: !1792, size: 32, offset: 160)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1794, file: !1178, line: 144, baseType: !175, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1794, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1774, file: !1178, line: 181, baseType: !1419, size: 32, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1774, file: !1178, line: 182, baseType: !1800, size: 32, offset: 224)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1802, file: !1178, line: 150, baseType: !175, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1802, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1774, file: !1178, line: 183, baseType: !1419, size: 32, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1774, file: !1178, line: 184, baseType: !175, size: 32, offset: 288)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1774, file: !1178, line: 185, baseType: !1419, size: 32, offset: 320)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1774, file: !1178, line: 188, baseType: !1810, size: 1024, offset: 352)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1811, size: 1024, elements: !1201)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1813)
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1812, file: !1178, line: 168, baseType: !175, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1812, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1816 = !{!1817, !1818}
!1817 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1763, file: !1764, line: 432, type: !1820, isLocal: true, isDefinition: true)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1101, line: 119, baseType: !1100)
!1821 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1824, file: !1825, line: 60, type: !175, isLocal: false, isDefinition: true)
!1824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1826, retainedTypes: !1834, globals: !1835, splitDebugInlining: false, nameTableKind: None)
!1825 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1826 = !{!1827}
!1827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 387, baseType: !79, size: 32, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832, !1833}
!1829 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1830 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1831 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1832 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1833 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1834 = !{!194, !175}
!1835 = !{!1822, !1836, !1838, !1840, !1842, !1844, !1898, !1900}
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1824, file: !1825, line: 61, type: !175, isLocal: false, isDefinition: true)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1824, file: !1825, line: 107, type: !175, isLocal: false, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1824, file: !1825, line: 132, type: !211, isLocal: false, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1824, file: !1825, line: 133, type: !211, isLocal: false, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "replaced", scope: !1846, file: !1825, line: 139, type: !175, isLocal: true, isDefinition: true)
!1846 = distinct !DISubprogram(name: "LookupAddress", scope: !1825, file: !1825, line: 135, type: !1847, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !1849)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!175, !194, !175}
!1849 = !{!1850, !1851, !1852, !1897}
!1850 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1846, file: !1825, line: 135, type: !194)
!1851 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1846, file: !1825, line: 135, type: !175)
!1852 = !DILocalVariable(name: "D", scope: !1846, file: !1825, line: 137, type: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1178, line: 190, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 173, size: 1376, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1865, !1871, !1872, !1879, !1880, !1887, !1888, !1889, !1890}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1855, file: !1178, line: 174, baseType: !175, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1855, file: !1178, line: 175, baseType: !1419, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1855, file: !1178, line: 176, baseType: !1860, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1861)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1863)
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1862, file: !1160, line: 55, baseType: !378, size: 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1855, file: !1178, line: 177, baseType: !1866, size: 32, offset: 96)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1867)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1869)
!1869 = !{!1870}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1868, file: !1160, line: 45, baseType: !378, size: 8)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1855, file: !1178, line: 178, baseType: !1172, size: 8, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1855, file: !1178, line: 180, baseType: !1873, size: 32, offset: 160)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1876)
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1875, file: !1178, line: 144, baseType: !175, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1875, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1855, file: !1178, line: 181, baseType: !1419, size: 32, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1855, file: !1178, line: 182, baseType: !1881, size: 32, offset: 224)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1883, file: !1178, line: 150, baseType: !175, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1883, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1855, file: !1178, line: 183, baseType: !1419, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1855, file: !1178, line: 184, baseType: !175, size: 32, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1855, file: !1178, line: 185, baseType: !1419, size: 32, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1855, file: !1178, line: 188, baseType: !1891, size: 1024, offset: 352)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 1024, elements: !1201)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1893, file: !1178, line: 168, baseType: !175, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1893, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1897 = !DILocalVariable(name: "addr", scope: !1846, file: !1825, line: 138, type: !175)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1846, file: !1825, line: 140, type: !175, isLocal: true, isDefinition: true)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1846, file: !1825, line: 141, type: !175, isLocal: true, isDefinition: true)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "emi_settings", scope: !1904, file: !1905, line: 44, type: !2051, isLocal: false, isDefinition: true)
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1906, retainedTypes: !1912, globals: !1913, splitDebugInlining: false, nameTableKind: None)
!1905 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1906 = !{!1907}
!1907 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !1908, line: 40, baseType: !7, size: 32, elements: !1909)
!1908 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!1909 = !{!1910, !1911}
!1910 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!1911 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!1912 = !{!957}
!1913 = !{!1902, !1914, !1916, !1918, !1920, !2021, !2023, !2025, !2027, !2029, !2031, !2033, !2035, !2037, !2039, !2041, !2043, !2045, !2047, !2049}
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !1904, file: !1905, line: 65, type: !175, isLocal: false, isDefinition: true)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !1904, file: !1905, line: 66, type: !175, isLocal: false, isDefinition: true)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !1904, file: !1905, line: 67, type: !175, isLocal: false, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "emi_register", scope: !1904, file: !1905, line: 83, type: !1922, isLocal: false, isDefinition: true)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !78, line: 2524, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2447, size: 6752, elements: !1925)
!1925 = !{!1926, !1930, !1931, !1932, !1933, !1937, !1938, !1940, !1941, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1924, file: !78, line: 2448, baseType: !1927, size: 768)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 768, elements: !1928)
!1928 = !{!1929}
!1929 = !DISubrange(count: 96)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !1924, file: !78, line: 2449, baseType: !184, size: 32, offset: 768)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1924, file: !78, line: 2450, baseType: !806, size: 96, offset: 800)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !1924, file: !78, line: 2451, baseType: !184, size: 32, offset: 896)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1924, file: !78, line: 2452, baseType: !1934, size: 160, offset: 928)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 160, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 20)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !1924, file: !78, line: 2453, baseType: !184, size: 32, offset: 1088)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1924, file: !78, line: 2454, baseType: !1939, size: 32, offset: 1120)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 32, elements: !381)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !1924, file: !78, line: 2455, baseType: !184, size: 32, offset: 1152)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1924, file: !78, line: 2456, baseType: !1942, size: 480, offset: 1184)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 480, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: 60)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !1924, file: !78, line: 2457, baseType: !184, size: 32, offset: 1664)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1924, file: !78, line: 2458, baseType: !1939, size: 32, offset: 1696)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !1924, file: !78, line: 2459, baseType: !184, size: 32, offset: 1728)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1924, file: !78, line: 2460, baseType: !1939, size: 32, offset: 1760)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !1924, file: !78, line: 2461, baseType: !184, size: 32, offset: 1792)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1924, file: !78, line: 2462, baseType: !1934, size: 160, offset: 1824)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !1924, file: !78, line: 2463, baseType: !184, size: 32, offset: 1984)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1924, file: !78, line: 2464, baseType: !1939, size: 32, offset: 2016)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !1924, file: !78, line: 2465, baseType: !184, size: 32, offset: 2048)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1924, file: !78, line: 2466, baseType: !1939, size: 32, offset: 2080)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !1924, file: !78, line: 2467, baseType: !184, size: 32, offset: 2112)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1924, file: !78, line: 2468, baseType: !1939, size: 32, offset: 2144)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !1924, file: !78, line: 2469, baseType: !184, size: 32, offset: 2176)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1924, file: !78, line: 2470, baseType: !1959, size: 224, offset: 2208)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 224, elements: !1960)
!1960 = !{!1961}
!1961 = !DISubrange(count: 28)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !1924, file: !78, line: 2471, baseType: !184, size: 32, offset: 2432)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1924, file: !78, line: 2472, baseType: !1939, size: 32, offset: 2464)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !1924, file: !78, line: 2473, baseType: !184, size: 32, offset: 2496)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1924, file: !78, line: 2474, baseType: !806, size: 96, offset: 2528)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !1924, file: !78, line: 2475, baseType: !184, size: 32, offset: 2624)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1924, file: !78, line: 2476, baseType: !1939, size: 32, offset: 2656)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !1924, file: !78, line: 2477, baseType: !184, size: 32, offset: 2688)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1924, file: !78, line: 2478, baseType: !1939, size: 32, offset: 2720)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !1924, file: !78, line: 2479, baseType: !184, size: 32, offset: 2752)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1924, file: !78, line: 2480, baseType: !1939, size: 32, offset: 2784)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !1924, file: !78, line: 2481, baseType: !184, size: 32, offset: 2816)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1924, file: !78, line: 2482, baseType: !806, size: 96, offset: 2848)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !1924, file: !78, line: 2483, baseType: !184, size: 32, offset: 2944)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1924, file: !78, line: 2484, baseType: !1939, size: 32, offset: 2976)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !1924, file: !78, line: 2485, baseType: !184, size: 32, offset: 3008)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1924, file: !78, line: 2486, baseType: !1939, size: 32, offset: 3040)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !1924, file: !78, line: 2487, baseType: !184, size: 32, offset: 3072)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1924, file: !78, line: 2488, baseType: !1934, size: 160, offset: 3104)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !1924, file: !78, line: 2489, baseType: !184, size: 32, offset: 3264)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1924, file: !78, line: 2490, baseType: !1939, size: 32, offset: 3296)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !1924, file: !78, line: 2491, baseType: !184, size: 32, offset: 3328)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1924, file: !78, line: 2492, baseType: !1984, size: 736, offset: 3360)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 736, elements: !1985)
!1985 = !{!1986}
!1986 = !DISubrange(count: 92)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !1924, file: !78, line: 2493, baseType: !184, size: 32, offset: 4096)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1924, file: !78, line: 2494, baseType: !1939, size: 32, offset: 4128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !1924, file: !78, line: 2495, baseType: !184, size: 32, offset: 4160)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1924, file: !78, line: 2496, baseType: !1939, size: 32, offset: 4192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !1924, file: !78, line: 2497, baseType: !184, size: 32, offset: 4224)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1924, file: !78, line: 2498, baseType: !1939, size: 32, offset: 4256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !1924, file: !78, line: 2499, baseType: !184, size: 32, offset: 4288)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1924, file: !78, line: 2500, baseType: !1939, size: 32, offset: 4320)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !1924, file: !78, line: 2501, baseType: !184, size: 32, offset: 4352)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1924, file: !78, line: 2502, baseType: !1939, size: 32, offset: 4384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !1924, file: !78, line: 2503, baseType: !184, size: 32, offset: 4416)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !1924, file: !78, line: 2504, baseType: !1939, size: 32, offset: 4448)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !1924, file: !78, line: 2505, baseType: !184, size: 32, offset: 4480)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !1924, file: !78, line: 2506, baseType: !1939, size: 32, offset: 4512)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !1924, file: !78, line: 2507, baseType: !184, size: 32, offset: 4544)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !1924, file: !78, line: 2508, baseType: !1939, size: 32, offset: 4576)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !1924, file: !78, line: 2509, baseType: !184, size: 32, offset: 4608)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !1924, file: !78, line: 2510, baseType: !1942, size: 480, offset: 4640)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !1924, file: !78, line: 2511, baseType: !184, size: 32, offset: 5120)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !1924, file: !78, line: 2512, baseType: !2007, size: 992, offset: 5152)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 992, elements: !2008)
!2008 = !{!2009}
!2009 = !DISubrange(count: 124)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !1924, file: !78, line: 2513, baseType: !184, size: 32, offset: 6144)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !1924, file: !78, line: 2514, baseType: !1939, size: 32, offset: 6176)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !1924, file: !78, line: 2515, baseType: !184, size: 32, offset: 6208)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !1924, file: !78, line: 2516, baseType: !1939, size: 32, offset: 6240)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !1924, file: !78, line: 2517, baseType: !184, size: 32, offset: 6272)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !1924, file: !78, line: 2518, baseType: !1939, size: 32, offset: 6304)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !1924, file: !78, line: 2519, baseType: !184, size: 32, offset: 6336)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !1924, file: !78, line: 2520, baseType: !1934, size: 160, offset: 6368)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !1924, file: !78, line: 2521, baseType: !184, size: 32, offset: 6528)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !1924, file: !78, line: 2522, baseType: !1934, size: 160, offset: 6560)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !1924, file: !78, line: 2523, baseType: !184, size: 32, offset: 6720)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !1904, file: !1905, line: 485, type: !184, isLocal: false, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !1904, file: !1905, line: 68, type: !175, isLocal: false, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !1904, file: !1905, line: 69, type: !175, isLocal: false, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !1904, file: !1905, line: 70, type: !175, isLocal: false, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !1904, file: !1905, line: 71, type: !175, isLocal: false, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !1904, file: !1905, line: 72, type: !175, isLocal: false, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !1904, file: !1905, line: 73, type: !175, isLocal: false, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !1904, file: !1905, line: 74, type: !175, isLocal: false, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !1904, file: !1905, line: 75, type: !175, isLocal: false, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !1904, file: !1905, line: 76, type: !175, isLocal: false, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !1904, file: !1905, line: 77, type: !175, isLocal: false, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !1904, file: !1905, line: 78, type: !175, isLocal: false, isDefinition: true)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !1904, file: !1905, line: 79, type: !175, isLocal: false, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !1904, file: !1905, line: 80, type: !175, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !1904, file: !1905, line: 84, type: !1923, isLocal: false, isDefinition: true)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 416, elements: !2068)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !1908, line: 60, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1908, line: 45, size: 416, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2053, file: !1908, line: 46, baseType: !175, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2053, file: !1908, line: 47, baseType: !175, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2053, file: !1908, line: 48, baseType: !175, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2053, file: !1908, line: 49, baseType: !175, size: 32, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2053, file: !1908, line: 50, baseType: !175, size: 32, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2053, file: !1908, line: 51, baseType: !175, size: 32, offset: 160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2053, file: !1908, line: 52, baseType: !175, size: 32, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2053, file: !1908, line: 53, baseType: !175, size: 32, offset: 224)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2053, file: !1908, line: 54, baseType: !175, size: 32, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2053, file: !1908, line: 55, baseType: !175, size: 32, offset: 288)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2053, file: !1908, line: 56, baseType: !175, size: 32, offset: 320)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2053, file: !1908, line: 57, baseType: !175, size: 32, offset: 352)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2053, file: !1908, line: 58, baseType: !175, size: 32, offset: 384)
!2068 = !{!2069}
!2069 = !DISubrange(count: 1)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2072, file: !2073, line: 48, type: !2081, isLocal: false, isDefinition: true)
!2072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2074, globals: !2080, splitDebugInlining: false, nameTableKind: None)
!2073 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2074 = !{!2075}
!2075 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !899, line: 100, baseType: !7, size: 32, elements: !2076)
!2076 = !{!2077, !2078, !2079}
!2077 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2078 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2079 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2080 = !{!2070}
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !899, line: 104, baseType: !2075)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "count1", scope: !2084, file: !2085, line: 48, type: !175, isLocal: false, isDefinition: true)
!2084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2086, retainedTypes: !2091, globals: !2095, splitDebugInlining: false, nameTableKind: None)
!2085 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2086 = !{!549, !595, !611, !617, !621, !266, !1827, !2087}
!2087 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 857, baseType: !7, size: 32, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2090 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2091 = !{!194, !175, !2092, !79}
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !176, line: 60, baseType: !2093)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !178, line: 105, baseType: !2094)
!2094 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2095 = !{!2082, !2096}
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "handle", scope: !2084, file: !2085, line: 49, type: !175, isLocal: false, isDefinition: true)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "heap_end", scope: !2100, file: !2101, line: 69, type: !2106, isLocal: true, isDefinition: true)
!2100 = distinct !DISubprogram(name: "_sbrk_r", scope: !2101, file: !2101, line: 66, type: !2102, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !2296)
!2101 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!2104, !2107, !2291}
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2105, line: 123, baseType: !2106)
!2105 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2109, line: 377, size: 1920, elements: !2110)
!2109 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2110 = !{!2111, !2112, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2191, !2212, !2216, !2217, !2218, !2219, !2228, !2241, !2242, !2247, !2265, !2266, !2273, !2274, !2290}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2108, file: !2109, line: 381, baseType: !79, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2108, file: !2109, line: 386, baseType: !2113, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2109, line: 292, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2109, line: 186, size: 832, elements: !2116)
!2116 = !{!2117, !2119, !2120, !2121, !2122, !2123, !2128, !2129, !2130, !2131, !2135, !2140, !2147, !2151, !2152, !2153, !2154, !2156, !2158, !2159, !2160, !2162, !2168, !2181}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2115, file: !2109, line: 187, baseType: !2118, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2115, file: !2109, line: 188, baseType: !79, size: 32, offset: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2115, file: !2109, line: 189, baseType: !79, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2115, file: !2109, line: 190, baseType: !1358, size: 16, offset: 96)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2115, file: !2109, line: 191, baseType: !1358, size: 16, offset: 112)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2115, file: !2109, line: 192, baseType: !2124, size: 64, offset: 128)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2109, line: 122, size: 64, elements: !2125)
!2125 = !{!2126, !2127}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2124, file: !2109, line: 123, baseType: !2118, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2124, file: !2109, line: 124, baseType: !79, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2115, file: !2109, line: 193, baseType: !79, size: 32, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2115, file: !2109, line: 196, baseType: !2107, size: 32, offset: 224)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2115, file: !2109, line: 200, baseType: !194, size: 32, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2115, file: !2109, line: 202, baseType: !2132, size: 32, offset: 288)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!79, !2107, !194, !2106, !79}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2115, file: !2109, line: 204, baseType: !2136, size: 32, offset: 320)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!79, !2107, !194, !2139, !79}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2115, file: !2109, line: 207, baseType: !2141, size: 32, offset: 352)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!2144, !2107, !194, !2144, !79}
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2145, line: 116, baseType: !2146)
!2145 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2146 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2115, file: !2109, line: 208, baseType: !2148, size: 32, offset: 384)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 32)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!79, !2107, !194}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2115, file: !2109, line: 211, baseType: !2124, size: 64, offset: 416)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2115, file: !2109, line: 212, baseType: !2118, size: 32, offset: 480)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2115, file: !2109, line: 213, baseType: !79, size: 32, offset: 512)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2115, file: !2109, line: 216, baseType: !2155, size: 24, offset: 544)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 24, elements: !1243)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2115, file: !2109, line: 217, baseType: !2157, size: 8, offset: 568)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 8, elements: !2068)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2115, file: !2109, line: 220, baseType: !2124, size: 64, offset: 576)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2115, file: !2109, line: 223, baseType: !79, size: 32, offset: 640)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2115, file: !2109, line: 224, baseType: !2161, size: 32, offset: 672)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2145, line: 46, baseType: !2146)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2115, file: !2109, line: 231, baseType: !2163, size: 32, offset: 704)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2109, line: 35, baseType: !2164)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2165, line: 34, baseType: !2166)
!2165 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2165, line: 33, flags: DIFlagFwdDecl)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2115, file: !2109, line: 233, baseType: !2169, size: 64, offset: 736)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2145, line: 170, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2145, line: 162, size: 64, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2170, file: !2145, line: 164, baseType: !79, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2170, file: !2145, line: 169, baseType: !2174, size: 32, offset: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2170, file: !2145, line: 165, size: 32, elements: !2175)
!2175 = !{!2176, !2179}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2174, file: !2145, line: 167, baseType: !2177, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2178, line: 116, baseType: !79)
!2178 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2174, file: !2145, line: 168, baseType: !2180, size: 32)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 32, elements: !381)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2115, file: !2109, line: 234, baseType: !79, size: 32, offset: 800)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2108, file: !2109, line: 386, baseType: !2113, size: 32, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2108, file: !2109, line: 386, baseType: !2113, size: 32, offset: 96)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2108, file: !2109, line: 388, baseType: !79, size: 32, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2108, file: !2109, line: 390, baseType: !2106, size: 32, offset: 160)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2108, file: !2109, line: 392, baseType: !79, size: 32, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2108, file: !2109, line: 394, baseType: !79, size: 32, offset: 224)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2108, file: !2109, line: 395, baseType: !2189, size: 32, offset: 256)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2190 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2109, line: 45, flags: DIFlagFwdDecl)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2108, file: !2109, line: 397, baseType: !2192, size: 32, offset: 288)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2109, line: 349, size: 128, elements: !2194)
!2194 = !{!2195, !2208, !2209, !2210}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2193, file: !2109, line: 352, baseType: !2196, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 32)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2109, line: 52, size: 192, elements: !2198)
!2198 = !{!2199, !2200, !2201, !2202, !2203, !2204}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2197, file: !2109, line: 54, baseType: !2196, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2197, file: !2109, line: 55, baseType: !79, size: 32, offset: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2197, file: !2109, line: 55, baseType: !79, size: 32, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2197, file: !2109, line: 55, baseType: !79, size: 32, offset: 96)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2197, file: !2109, line: 55, baseType: !79, size: 32, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2197, file: !2109, line: 56, baseType: !2205, size: 32, offset: 160)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2206, size: 32, elements: !2068)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2109, line: 22, baseType: !2207)
!2207 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2193, file: !2109, line: 353, baseType: !79, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2193, file: !2109, line: 354, baseType: !2196, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2193, file: !2109, line: 355, baseType: !2211, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2108, file: !2109, line: 399, baseType: !2213, size: 32, offset: 320)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{null, !2107}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2108, file: !2109, line: 401, baseType: !79, size: 32, offset: 352)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2108, file: !2109, line: 404, baseType: !79, size: 32, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2108, file: !2109, line: 405, baseType: !2106, size: 32, offset: 416)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2108, file: !2109, line: 407, baseType: !2220, size: 32, offset: 448)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2109, line: 324, size: 192, elements: !2222)
!2222 = !{!2223, !2225, !2226, !2227}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2221, file: !2109, line: 325, baseType: !2224, size: 48)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 48, elements: !1243)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2221, file: !2109, line: 326, baseType: !2224, size: 48, offset: 48)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2221, file: !2109, line: 327, baseType: !954, size: 16, offset: 96)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2221, file: !2109, line: 330, baseType: !2094, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2108, file: !2109, line: 408, baseType: !2229, size: 32, offset: 480)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2109, line: 60, size: 288, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2230, file: !2109, line: 62, baseType: !79, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2230, file: !2109, line: 63, baseType: !79, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2230, file: !2109, line: 64, baseType: !79, size: 32, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2230, file: !2109, line: 65, baseType: !79, size: 32, offset: 96)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2230, file: !2109, line: 66, baseType: !79, size: 32, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2230, file: !2109, line: 67, baseType: !79, size: 32, offset: 160)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2230, file: !2109, line: 68, baseType: !79, size: 32, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2230, file: !2109, line: 69, baseType: !79, size: 32, offset: 224)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2230, file: !2109, line: 70, baseType: !79, size: 32, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2108, file: !2109, line: 409, baseType: !2106, size: 32, offset: 512)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2108, file: !2109, line: 412, baseType: !2243, size: 32, offset: 544)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !79}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2108, file: !2109, line: 416, baseType: !2248, size: 32, offset: 576)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2109, line: 90, size: 1120, elements: !2250)
!2250 = !{!2251, !2252, !2253, !2256}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2249, file: !2109, line: 91, baseType: !2248, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2249, file: !2109, line: 92, baseType: !79, size: 32, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2249, file: !2109, line: 93, baseType: !2254, size: 1024, offset: 64)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2255, size: 1024, elements: !248)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2249, file: !2109, line: 94, baseType: !2257, size: 32, offset: 1088)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2109, line: 79, size: 2112, elements: !2259)
!2259 = !{!2260, !2262, !2263, !2264}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2258, file: !2109, line: 80, baseType: !2261, size: 1024)
!2261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 1024, elements: !248)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2258, file: !2109, line: 81, baseType: !2261, size: 1024, offset: 1024)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2258, file: !2109, line: 83, baseType: !2206, size: 32, offset: 2048)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2258, file: !2109, line: 86, baseType: !2206, size: 32, offset: 2080)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2108, file: !2109, line: 417, baseType: !2249, size: 1120, offset: 608)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2108, file: !2109, line: 420, baseType: !2267, size: 96, offset: 1728)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2109, line: 296, size: 96, elements: !2268)
!2268 = !{!2269, !2271, !2272}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2267, file: !2109, line: 298, baseType: !2270, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2267, file: !2109, line: 299, baseType: !79, size: 32, offset: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2267, file: !2109, line: 300, baseType: !2113, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2108, file: !2109, line: 421, baseType: !2113, size: 32, offset: 1824)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2108, file: !2109, line: 422, baseType: !2275, size: 32, offset: 1856)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2109, line: 359, size: 640, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2284, !2285, !2286, !2287, !2288, !2289}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2276, file: !2109, line: 362, baseType: !2106, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2276, file: !2109, line: 363, baseType: !2169, size: 64, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2276, file: !2109, line: 364, baseType: !2169, size: 64, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2276, file: !2109, line: 365, baseType: !2169, size: 64, offset: 160)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2276, file: !2109, line: 366, baseType: !2283, size: 64, offset: 224)
!2283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 64, elements: !671)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2276, file: !2109, line: 367, baseType: !79, size: 32, offset: 288)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2276, file: !2109, line: 368, baseType: !2169, size: 64, offset: 320)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2276, file: !2109, line: 369, baseType: !2169, size: 64, offset: 384)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2276, file: !2109, line: 370, baseType: !2169, size: 64, offset: 448)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2276, file: !2109, line: 371, baseType: !2169, size: 64, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2276, file: !2109, line: 372, baseType: !2169, size: 64, offset: 576)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2108, file: !2109, line: 423, baseType: !2106, size: 32, offset: 1888)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2178, line: 46, baseType: !7)
!2292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2294, globals: !2295, splitDebugInlining: false, nameTableKind: None)
!2293 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2294 = !{!2106, !2104}
!2295 = !{!2098}
!2296 = !{!2297, !2298, !2299, !2300}
!2297 = !DILocalVariable(name: "r", arg: 1, scope: !2100, file: !2101, line: 66, type: !2107)
!2298 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2100, file: !2101, line: 66, type: !2291)
!2299 = !DILocalVariable(name: "prev_heap_end", scope: !2100, file: !2101, line: 70, type: !2106)
!2300 = !DILocalVariable(name: "stack", scope: !2100, file: !2101, line: 71, type: !2106)
!2301 = !DIGlobalVariableExpression(var: !2302, expr: !DIExpression())
!2302 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2303, file: !2304, line: 52, type: !184, isLocal: true, isDefinition: true)
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2305, globals: !2415, splitDebugInlining: false, nameTableKind: None)
!2304 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2305 = !{!2306, !2314, !175, !2359, !2364, !2389}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !796, line: 656, baseType: !2308)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 650, size: 128, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2308, file: !796, line: 652, baseType: !184, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2308, file: !796, line: 653, baseType: !184, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2308, file: !796, line: 654, baseType: !184, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2308, file: !796, line: 655, baseType: !188, size: 32, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !78, line: 1952, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1921, size: 8288, elements: !2317)
!2317 = !{!2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2328, !2329, !2333, !2334, !2336, !2337, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2356, !2357, !2358}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2316, file: !78, line: 1922, baseType: !184, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2316, file: !78, line: 1923, baseType: !184, size: 32, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2316, file: !78, line: 1924, baseType: !184, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2316, file: !78, line: 1925, baseType: !184, size: 32, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2316, file: !78, line: 1926, baseType: !184, size: 32, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2316, file: !78, line: 1927, baseType: !184, size: 32, offset: 160)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2316, file: !78, line: 1928, baseType: !184, size: 32, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2316, file: !78, line: 1929, baseType: !184, size: 32, offset: 224)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2316, file: !78, line: 1930, baseType: !2327, size: 768, offset: 256)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 768, elements: !836)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2316, file: !78, line: 1931, baseType: !184, size: 32, offset: 1024)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2316, file: !78, line: 1932, baseType: !2330, size: 992, offset: 1056)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 992, elements: !2331)
!2331 = !{!2332}
!2332 = !DISubrange(count: 31)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2316, file: !78, line: 1933, baseType: !184, size: 32, offset: 2048)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2316, file: !78, line: 1934, baseType: !2335, size: 416, offset: 2080)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 416, elements: !691)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2316, file: !78, line: 1935, baseType: !184, size: 32, offset: 2496)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2316, file: !78, line: 1936, baseType: !2338, size: 1568, offset: 2528)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 1568, elements: !2339)
!2339 = !{!2340}
!2340 = !DISubrange(count: 49)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2316, file: !78, line: 1937, baseType: !188, size: 32, offset: 4096)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2316, file: !78, line: 1938, baseType: !188, size: 32, offset: 4128)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2316, file: !78, line: 1939, baseType: !188, size: 32, offset: 4160)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2316, file: !78, line: 1940, baseType: !184, size: 32, offset: 4192)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2316, file: !78, line: 1941, baseType: !184, size: 32, offset: 4224)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2316, file: !78, line: 1942, baseType: !184, size: 32, offset: 4256)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2316, file: !78, line: 1943, baseType: !184, size: 32, offset: 4288)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2316, file: !78, line: 1944, baseType: !184, size: 32, offset: 4320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2316, file: !78, line: 1945, baseType: !184, size: 32, offset: 4352)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2316, file: !78, line: 1946, baseType: !184, size: 32, offset: 4384)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2316, file: !78, line: 1947, baseType: !184, size: 32, offset: 4416)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2316, file: !78, line: 1948, baseType: !2353, size: 3744, offset: 4448)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 3744, elements: !2354)
!2354 = !{!2355}
!2355 = !DISubrange(count: 117)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2316, file: !78, line: 1949, baseType: !184, size: 32, offset: 8192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2316, file: !78, line: 1950, baseType: !184, size: 32, offset: 8224)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2316, file: !78, line: 1951, baseType: !188, size: 32, offset: 8256)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !78, line: 2158, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2156, size: 32, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2361, file: !78, line: 2157, baseType: !184, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2366, file: !796, line: 397, baseType: !188, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2366, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2366, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2366, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2366, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2366, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2366, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2366, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2366, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2366, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2366, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2366, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2366, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2366, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2366, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2366, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2366, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2366, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2366, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2366, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2366, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !78, line: 276, baseType: !2391)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 260, size: 525312, elements: !2392)
!2392 = !{!2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2405, !2406, !2410, !2414}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2391, file: !78, line: 261, baseType: !184, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2391, file: !78, line: 262, baseType: !184, size: 32, offset: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2391, file: !78, line: 263, baseType: !184, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2391, file: !78, line: 264, baseType: !184, size: 32, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2391, file: !78, line: 265, baseType: !184, size: 32, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2391, file: !78, line: 266, baseType: !184, size: 32, offset: 160)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2391, file: !78, line: 267, baseType: !184, size: 32, offset: 192)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2391, file: !78, line: 268, baseType: !184, size: 32, offset: 224)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2391, file: !78, line: 269, baseType: !184, size: 32, offset: 256)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2391, file: !78, line: 270, baseType: !184, size: 32, offset: 288)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2391, file: !78, line: 271, baseType: !2404, size: 32, offset: 320)
!2404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 32, elements: !2068)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2391, file: !78, line: 272, baseType: !184, size: 32, offset: 352)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2391, file: !78, line: 273, baseType: !2407, size: 523904, offset: 384)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 523904, elements: !2408)
!2408 = !{!2409}
!2409 = !DISubrange(count: 16372)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2391, file: !78, line: 274, baseType: !2411, size: 512, offset: 524288)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 512, elements: !2412)
!2412 = !{!2413}
!2413 = !DISubrange(count: 16)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2391, file: !78, line: 275, baseType: !2411, size: 512, offset: 524800)
!2415 = !{!2416, !2301}
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2303, file: !2304, line: 50, type: !175, isLocal: false, isDefinition: true)
!2418 = !DIGlobalVariableExpression(var: !2419, expr: !DIExpression())
!2419 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2420, file: !2425, line: 4, type: !2431, isLocal: false, isDefinition: true)
!2420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2422, splitDebugInlining: false, nameTableKind: None)
!2421 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC/Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2422 = !{!2418, !2423, !2429}
!2423 = !DIGlobalVariableExpression(var: !2424, expr: !DIExpression())
!2424 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2420, file: !2425, line: 5, type: !2426, isLocal: false, isDefinition: true)
!2425 = !DIFile(filename: "Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 88, elements: !2427)
!2427 = !{!2428}
!2428 = !DISubrange(count: 11)
!2429 = !DIGlobalVariableExpression(var: !2430, expr: !DIExpression())
!2430 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2420, file: !2425, line: 6, type: !2426, isLocal: false, isDefinition: true)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 248, elements: !2331)
!2432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2434, retainedTypes: !2453, splitDebugInlining: false, nameTableKind: None)
!2433 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2434 = !{!1827, !156, !170, !2087, !2435, !165, !66}
!2435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 87, baseType: !7, size: 32, elements: !2436)
!2436 = !{!2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452}
!2437 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2438 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2439 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2440 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2441 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2442 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2443 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2444 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2445 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2446 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2447 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2448 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2449 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2450 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2451 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2452 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2453 = !{!175, !194, !225}
!2454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2455, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2456, retainedTypes: !2457, splitDebugInlining: false, nameTableKind: None)
!2455 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2456 = !{!611, !617, !621, !704}
!2457 = !{!378}
!2458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2460, retainedTypes: !2461, splitDebugInlining: false, nameTableKind: None)
!2459 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2460 = !{!77, !633}
!2461 = !{!780, !2462, !175, !2487, !858}
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !2464)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !2465)
!2465 = !{!2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2464, file: !796, line: 397, baseType: !188, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2464, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2464, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2464, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2464, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2464, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2464, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2464, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2464, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2464, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2464, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2464, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2464, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2464, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2464, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2464, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2464, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2464, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2464, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2464, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2464, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !796, line: 378, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 363, size: 28704, elements: !2490)
!2490 = !{!2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2489, file: !796, line: 365, baseType: !833, size: 256)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2489, file: !796, line: 366, baseType: !835, size: 768, offset: 256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2489, file: !796, line: 367, baseType: !833, size: 256, offset: 1024)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2489, file: !796, line: 368, baseType: !835, size: 768, offset: 1280)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2489, file: !796, line: 369, baseType: !833, size: 256, offset: 2048)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2489, file: !796, line: 370, baseType: !835, size: 768, offset: 2304)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2489, file: !796, line: 371, baseType: !833, size: 256, offset: 3072)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2489, file: !796, line: 372, baseType: !835, size: 768, offset: 3328)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2489, file: !796, line: 373, baseType: !833, size: 256, offset: 4096)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2489, file: !796, line: 374, baseType: !846, size: 1792, offset: 4352)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2489, file: !796, line: 375, baseType: !850, size: 1920, offset: 6144)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2489, file: !796, line: 376, baseType: !854, size: 20608, offset: 8064)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2489, file: !796, line: 377, baseType: !184, size: 32, offset: 28672)
!2504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2505 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2507, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2507 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!2508 = !{!"Ubuntu clang version 14.0.6"}
!2509 = !{i32 7, !"Dwarf Version", i32 2}
!2510 = !{i32 2, !"Debug Info Version", i32 3}
!2511 = !{i32 1, !"wchar_size", i32 4}
!2512 = !{i32 1, !"min_enum_size", i32 4}
!2513 = !{i32 1, !"branch-target-enforcement", i32 0}
!2514 = !{i32 1, !"sign-return-address", i32 0}
!2515 = !{i32 1, !"sign-return-address-all", i32 0}
!2516 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2517 = !{i32 7, !"frame-pointer", i32 2}
!2518 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2433, file: !2433, line: 95, type: !2519, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2523)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !166, line: 393, baseType: !1827)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !6, line: 854, baseType: !156)
!2523 = !{!2524}
!2524 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2518, file: !2433, line: 95, type: !2522)
!2525 = !DILocation(line: 0, scope: !2518)
!2526 = !DILocation(line: 98, column: 9, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2518, file: !2433, line: 98, column: 9)
!2528 = !DILocation(line: 98, column: 9, scope: !2518)
!2529 = !DILocation(line: 102, column: 10, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2518, file: !2433, line: 102, column: 9)
!2531 = !DILocation(line: 102, column: 34, scope: !2530)
!2532 = !DILocation(line: 102, column: 49, scope: !2530)
!2533 = !DILocation(line: 102, column: 69, scope: !2530)
!2534 = !DILocation(line: 103, column: 38, scope: !2530)
!2535 = !{i8 0, i8 2}
!2536 = !DILocation(line: 102, column: 9, scope: !2518)
!2537 = !DILocation(line: 109, column: 12, scope: !2518)
!2538 = !DILocation(line: 109, column: 5, scope: !2518)
!2539 = !DILocation(line: 112, column: 5, scope: !2518)
!2540 = !DILocation(line: 115, column: 44, scope: !2518)
!2541 = !DILocation(line: 118, column: 5, scope: !2518)
!2542 = !DILocation(line: 118, column: 23, scope: !2518)
!2543 = !DILocation(line: 118, column: 35, scope: !2518)
!2544 = !DILocation(line: 121, column: 42, scope: !2518)
!2545 = !DILocation(line: 121, column: 38, scope: !2518)
!2546 = !DILocation(line: 121, column: 5, scope: !2518)
!2547 = !DILocation(line: 121, column: 17, scope: !2518)
!2548 = !DILocation(line: 121, column: 35, scope: !2518)
!2549 = !DILocation(line: 129, column: 5, scope: !2518)
!2550 = !DILocation(line: 131, column: 1, scope: !2518)
!2551 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2433, file: !2433, line: 81, type: !2552, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2554)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!211, !2522}
!2554 = !{!2555}
!2555 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2551, file: !2433, line: 81, type: !2522)
!2556 = !DILocation(line: 0, scope: !2551)
!2557 = !DILocation(line: 84, column: 25, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2551, file: !2433, line: 84, column: 9)
!2559 = !DILocation(line: 84, column: 35, scope: !2558)
!2560 = !DILocation(line: 84, column: 45, scope: !2558)
!2561 = !DILocation(line: 93, column: 1, scope: !2551)
!2562 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2433, file: !2433, line: 133, type: !2519, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2563)
!2563 = !{!2564}
!2564 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2562, file: !2433, line: 133, type: !2522)
!2565 = !DILocation(line: 0, scope: !2562)
!2566 = !DILocation(line: 136, column: 9, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2562, file: !2433, line: 136, column: 9)
!2568 = !DILocation(line: 136, column: 9, scope: !2562)
!2569 = !DILocation(line: 140, column: 9, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2562, file: !2433, line: 140, column: 9)
!2571 = !DILocation(line: 140, column: 33, scope: !2570)
!2572 = !DILocation(line: 140, column: 48, scope: !2570)
!2573 = !DILocation(line: 140, column: 9, scope: !2562)
!2574 = !DILocation(line: 146, column: 12, scope: !2562)
!2575 = !DILocation(line: 146, column: 5, scope: !2562)
!2576 = !DILocation(line: 149, column: 29, scope: !2562)
!2577 = !DILocation(line: 149, column: 44, scope: !2562)
!2578 = !DILocation(line: 151, column: 29, scope: !2562)
!2579 = !DILocation(line: 151, column: 5, scope: !2562)
!2580 = !DILocation(line: 159, column: 5, scope: !2562)
!2581 = !DILocation(line: 160, column: 1, scope: !2562)
!2582 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2433, file: !2433, line: 163, type: !2583, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2586)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!2521, !2585, !920}
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !6, line: 860, baseType: !2087)
!2586 = !{!2587, !2588}
!2587 = !DILocalVariable(name: "clock_source", arg: 1, scope: !2582, file: !2433, line: 163, type: !2585)
!2588 = !DILocalVariable(name: "count", arg: 2, scope: !2582, file: !2433, line: 163, type: !920)
!2589 = !DILocation(line: 0, scope: !2582)
!2590 = !DILocation(line: 166, column: 9, scope: !2582)
!2591 = !DILocation(line: 167, column: 44, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2593, file: !2433, line: 167, column: 13)
!2593 = distinct !DILexicalBlock(scope: !2594, file: !2433, line: 166, column: 51)
!2594 = distinct !DILexicalBlock(scope: !2582, file: !2433, line: 166, column: 9)
!2595 = !DILocation(line: 167, column: 59, scope: !2592)
!2596 = !DILocation(line: 167, column: 13, scope: !2593)
!2597 = !DILocation(line: 170, column: 38, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2592, file: !2433, line: 167, column: 79)
!2599 = !DILocation(line: 170, column: 13, scope: !2598)
!2600 = !DILocation(line: 172, column: 59, scope: !2598)
!2601 = !DILocation(line: 173, column: 9, scope: !2598)
!2602 = !DILocation(line: 175, column: 36, scope: !2593)
!2603 = !DILocation(line: 175, column: 18, scope: !2593)
!2604 = !DILocation(line: 177, column: 5, scope: !2593)
!2605 = !DILocation(line: 179, column: 44, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2607, file: !2433, line: 179, column: 13)
!2607 = distinct !DILexicalBlock(scope: !2608, file: !2433, line: 178, column: 55)
!2608 = distinct !DILexicalBlock(scope: !2594, file: !2433, line: 178, column: 14)
!2609 = !DILocation(line: 179, column: 59, scope: !2606)
!2610 = !DILocation(line: 179, column: 13, scope: !2607)
!2611 = !DILocation(line: 182, column: 38, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2606, file: !2433, line: 179, column: 79)
!2613 = !DILocation(line: 182, column: 13, scope: !2612)
!2614 = !DILocation(line: 184, column: 59, scope: !2612)
!2615 = !DILocation(line: 186, column: 9, scope: !2612)
!2616 = !DILocation(line: 188, column: 68, scope: !2607)
!2617 = !DILocation(line: 188, column: 50, scope: !2607)
!2618 = !DILocation(line: 188, column: 18, scope: !2607)
!2619 = !DILocation(line: 0, scope: !2594)
!2620 = !DILocation(line: 193, column: 5, scope: !2582)
!2621 = !DILocation(line: 194, column: 1, scope: !2582)
!2622 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2433, file: !2433, line: 196, type: !2623, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2625)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!2521, !175, !175, !920}
!2625 = !{!2626, !2627, !2628}
!2626 = !DILocalVariable(name: "start_count", arg: 1, scope: !2622, file: !2433, line: 196, type: !175)
!2627 = !DILocalVariable(name: "end_count", arg: 2, scope: !2622, file: !2433, line: 196, type: !175)
!2628 = !DILocalVariable(name: "duration_count", arg: 3, scope: !2622, file: !2433, line: 196, type: !920)
!2629 = !DILocation(line: 0, scope: !2622)
!2630 = !DILocation(line: 198, column: 24, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2622, file: !2433, line: 198, column: 9)
!2632 = !DILocation(line: 198, column: 9, scope: !2622)
!2633 = !DILocation(line: 0, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2622, file: !2433, line: 202, column: 9)
!2635 = !DILocation(line: 208, column: 5, scope: !2622)
!2636 = !DILocation(line: 209, column: 1, scope: !2622)
!2637 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2433, file: !2433, line: 211, type: !2638, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2641)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!2521, !2522, !2640}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!2641 = !{!2642, !2643}
!2642 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2637, file: !2433, line: 211, type: !2522)
!2643 = !DILocalVariable(name: "running_status", arg: 2, scope: !2637, file: !2433, line: 211, type: !2640)
!2644 = !DILocation(line: 0, scope: !2637)
!2645 = !DILocation(line: 213, column: 18, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2637, file: !2433, line: 213, column: 9)
!2647 = !DILocation(line: 213, column: 9, scope: !2637)
!2648 = !DILocation(line: 217, column: 47, scope: !2637)
!2649 = !DILocation(line: 217, column: 21, scope: !2637)
!2650 = !DILocation(line: 219, column: 5, scope: !2637)
!2651 = !DILocation(line: 220, column: 1, scope: !2637)
!2652 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2433, file: !2433, line: 222, type: !2653, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2655)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!2521, !2522, !225, !194}
!2655 = !{!2656, !2657, !2658}
!2656 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2652, file: !2433, line: 222, type: !2522)
!2657 = !DILocalVariable(name: "callback", arg: 2, scope: !2652, file: !2433, line: 223, type: !225)
!2658 = !DILocalVariable(name: "user_data", arg: 3, scope: !2652, file: !2433, line: 224, type: !194)
!2659 = !DILocation(line: 0, scope: !2652)
!2660 = !DILocation(line: 227, column: 9, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2652, file: !2433, line: 227, column: 9)
!2662 = !DILocation(line: 227, column: 9, scope: !2652)
!2663 = !DILocation(line: 231, column: 34, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2652, file: !2433, line: 231, column: 9)
!2665 = !DILocation(line: 231, column: 49, scope: !2664)
!2666 = !DILocation(line: 231, column: 69, scope: !2664)
!2667 = !DILocation(line: 232, column: 38, scope: !2664)
!2668 = !DILocation(line: 232, column: 53, scope: !2664)
!2669 = !DILocation(line: 231, column: 9, scope: !2652)
!2670 = !DILocation(line: 237, column: 18, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2652, file: !2433, line: 237, column: 9)
!2672 = !DILocation(line: 237, column: 9, scope: !2652)
!2673 = !DILocation(line: 245, column: 46, scope: !2652)
!2674 = !DILocation(line: 245, column: 56, scope: !2652)
!2675 = !DILocation(line: 246, column: 46, scope: !2652)
!2676 = !DILocation(line: 246, column: 56, scope: !2652)
!2677 = !DILocation(line: 248, column: 5, scope: !2652)
!2678 = !DILocation(line: 250, column: 5, scope: !2652)
!2679 = !DILocation(line: 252, column: 1, scope: !2652)
!2680 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2433, file: !2433, line: 256, type: !2681, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2684)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!2521, !2522, !175, !2683}
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !166, line: 383, baseType: !165)
!2684 = !{!2685, !2686, !2687, !2688}
!2685 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2680, file: !2433, line: 256, type: !2522)
!2686 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !2680, file: !2433, line: 256, type: !175)
!2687 = !DILocalVariable(name: "timer_type", arg: 3, scope: !2680, file: !2433, line: 256, type: !2683)
!2688 = !DILocalVariable(name: "mask", scope: !2680, file: !2433, line: 259, type: !184)
!2689 = !DILocation(line: 0, scope: !2680)
!2690 = !DILocation(line: 259, column: 5, scope: !2680)
!2691 = !DILocation(line: 259, column: 23, scope: !2680)
!2692 = !DILocation(line: 261, column: 9, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2680, file: !2433, line: 261, column: 9)
!2694 = !DILocation(line: 261, column: 9, scope: !2680)
!2695 = !DILocation(line: 265, column: 34, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2680, file: !2433, line: 265, column: 9)
!2697 = !DILocation(line: 265, column: 49, scope: !2696)
!2698 = !DILocation(line: 266, column: 13, scope: !2696)
!2699 = !DILocation(line: 266, column: 41, scope: !2696)
!2700 = !DILocation(line: 266, column: 56, scope: !2696)
!2701 = !DILocation(line: 265, column: 9, scope: !2680)
!2702 = !DILocation(line: 271, column: 25, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2680, file: !2433, line: 271, column: 9)
!2704 = !DILocation(line: 271, column: 9, scope: !2680)
!2705 = !DILocation(line: 282, column: 12, scope: !2680)
!2706 = !DILocation(line: 282, column: 10, scope: !2680)
!2707 = !DILocation(line: 284, column: 5, scope: !2680)
!2708 = !DILocation(line: 286, column: 5, scope: !2680)
!2709 = !DILocation(line: 286, column: 23, scope: !2680)
!2710 = !DILocation(line: 286, column: 34, scope: !2680)
!2711 = !DILocation(line: 287, column: 5, scope: !2680)
!2712 = !DILocation(line: 287, column: 23, scope: !2680)
!2713 = !DILocation(line: 287, column: 34, scope: !2680)
!2714 = !DILocation(line: 290, column: 5, scope: !2680)
!2715 = !DILocation(line: 290, column: 23, scope: !2680)
!2716 = !DILocation(line: 290, column: 37, scope: !2680)
!2717 = !DILocation(line: 291, column: 39, scope: !2680)
!2718 = !DILocation(line: 291, column: 5, scope: !2680)
!2719 = !DILocation(line: 291, column: 23, scope: !2680)
!2720 = !DILocation(line: 291, column: 37, scope: !2680)
!2721 = !DILocation(line: 292, column: 5, scope: !2680)
!2722 = !DILocation(line: 292, column: 23, scope: !2680)
!2723 = !DILocation(line: 292, column: 37, scope: !2680)
!2724 = !DILocation(line: 297, column: 47, scope: !2680)
!2725 = !DILocation(line: 298, column: 33, scope: !2680)
!2726 = !DILocation(line: 296, column: 5, scope: !2680)
!2727 = !DILocation(line: 296, column: 23, scope: !2680)
!2728 = !DILocation(line: 296, column: 31, scope: !2680)
!2729 = !DILocation(line: 300, column: 5, scope: !2680)
!2730 = !DILocation(line: 300, column: 29, scope: !2680)
!2731 = distinct !{!2731, !2729, !2732}
!2732 = !DILocation(line: 300, column: 39, scope: !2680)
!2733 = !DILocation(line: 301, column: 23, scope: !2680)
!2734 = !DILocation(line: 301, column: 33, scope: !2680)
!2735 = !DILocation(line: 302, column: 5, scope: !2680)
!2736 = !DILocation(line: 302, column: 23, scope: !2680)
!2737 = !DILocation(line: 302, column: 34, scope: !2680)
!2738 = !DILocation(line: 303, column: 44, scope: !2680)
!2739 = !DILocation(line: 305, column: 28, scope: !2680)
!2740 = !DILocation(line: 305, column: 5, scope: !2680)
!2741 = !DILocation(line: 306, column: 5, scope: !2680)
!2742 = !DILocation(line: 307, column: 1, scope: !2680)
!2743 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2433, file: !2433, line: 310, type: !2744, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2746)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!2521, !175}
!2746 = !{!2747}
!2747 = !DILocalVariable(name: "ms", arg: 1, scope: !2743, file: !2433, line: 310, type: !175)
!2748 = !DILocation(line: 0, scope: !2743)
!2749 = !DILocation(line: 313, column: 40, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2743, file: !2433, line: 313, column: 9)
!2751 = !DILocation(line: 313, column: 55, scope: !2750)
!2752 = !DILocation(line: 313, column: 9, scope: !2743)
!2753 = !DILocation(line: 316, column: 34, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2750, file: !2433, line: 313, column: 75)
!2755 = !DILocation(line: 316, column: 9, scope: !2754)
!2756 = !DILocation(line: 317, column: 55, scope: !2754)
!2757 = !DILocation(line: 318, column: 5, scope: !2754)
!2758 = !DILocation(line: 320, column: 20, scope: !2743)
!2759 = !DILocation(line: 320, column: 45, scope: !2743)
!2760 = !DILocation(line: 320, column: 5, scope: !2743)
!2761 = !DILocation(line: 322, column: 5, scope: !2743)
!2762 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2433, file: !2433, line: 327, type: !2681, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2763)
!2763 = !{!2764, !2765, !2766, !2767}
!2764 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2762, file: !2433, line: 327, type: !2522)
!2765 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !2762, file: !2433, line: 327, type: !175)
!2766 = !DILocalVariable(name: "timer_type", arg: 3, scope: !2762, file: !2433, line: 327, type: !2683)
!2767 = !DILocalVariable(name: "mask", scope: !2762, file: !2433, line: 329, type: !184)
!2768 = !DILocation(line: 0, scope: !2762)
!2769 = !DILocation(line: 329, column: 5, scope: !2762)
!2770 = !DILocation(line: 329, column: 23, scope: !2762)
!2771 = !DILocation(line: 331, column: 9, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2762, file: !2433, line: 331, column: 9)
!2773 = !DILocation(line: 331, column: 9, scope: !2762)
!2774 = !DILocation(line: 336, column: 34, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2762, file: !2433, line: 336, column: 9)
!2776 = !DILocation(line: 336, column: 49, scope: !2775)
!2777 = !DILocation(line: 337, column: 13, scope: !2775)
!2778 = !DILocation(line: 337, column: 41, scope: !2775)
!2779 = !DILocation(line: 337, column: 56, scope: !2775)
!2780 = !DILocation(line: 336, column: 9, scope: !2762)
!2781 = !DILocation(line: 349, column: 29, scope: !2762)
!2782 = !DILocation(line: 349, column: 49, scope: !2762)
!2783 = !DILocation(line: 351, column: 12, scope: !2762)
!2784 = !DILocation(line: 351, column: 10, scope: !2762)
!2785 = !DILocation(line: 353, column: 5, scope: !2762)
!2786 = !DILocation(line: 355, column: 5, scope: !2762)
!2787 = !DILocation(line: 355, column: 23, scope: !2762)
!2788 = !DILocation(line: 355, column: 34, scope: !2762)
!2789 = !DILocation(line: 356, column: 5, scope: !2762)
!2790 = !DILocation(line: 356, column: 23, scope: !2762)
!2791 = !DILocation(line: 356, column: 34, scope: !2762)
!2792 = !DILocation(line: 359, column: 5, scope: !2762)
!2793 = !DILocation(line: 359, column: 23, scope: !2762)
!2794 = !DILocation(line: 359, column: 37, scope: !2762)
!2795 = !DILocation(line: 360, column: 39, scope: !2762)
!2796 = !DILocation(line: 360, column: 5, scope: !2762)
!2797 = !DILocation(line: 360, column: 23, scope: !2762)
!2798 = !DILocation(line: 360, column: 37, scope: !2762)
!2799 = !DILocation(line: 361, column: 5, scope: !2762)
!2800 = !DILocation(line: 361, column: 23, scope: !2762)
!2801 = !DILocation(line: 361, column: 37, scope: !2762)
!2802 = !DILocation(line: 366, column: 47, scope: !2762)
!2803 = !DILocation(line: 367, column: 33, scope: !2762)
!2804 = !DILocation(line: 365, column: 5, scope: !2762)
!2805 = !DILocation(line: 365, column: 23, scope: !2762)
!2806 = !DILocation(line: 365, column: 31, scope: !2762)
!2807 = !DILocation(line: 369, column: 5, scope: !2762)
!2808 = !DILocation(line: 369, column: 29, scope: !2762)
!2809 = distinct !{!2809, !2807, !2810}
!2810 = !DILocation(line: 369, column: 39, scope: !2762)
!2811 = !DILocation(line: 370, column: 23, scope: !2762)
!2812 = !DILocation(line: 370, column: 33, scope: !2762)
!2813 = !DILocation(line: 371, column: 5, scope: !2762)
!2814 = !DILocation(line: 371, column: 23, scope: !2762)
!2815 = !DILocation(line: 371, column: 34, scope: !2762)
!2816 = !DILocation(line: 373, column: 28, scope: !2762)
!2817 = !DILocation(line: 373, column: 5, scope: !2762)
!2818 = !DILocation(line: 375, column: 44, scope: !2762)
!2819 = !DILocation(line: 377, column: 5, scope: !2762)
!2820 = !DILocation(line: 378, column: 1, scope: !2762)
!2821 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2433, file: !2433, line: 382, type: !2744, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2822)
!2822 = !{!2823}
!2823 = !DILocalVariable(name: "us", arg: 1, scope: !2821, file: !2433, line: 382, type: !175)
!2824 = !DILocation(line: 0, scope: !2821)
!2825 = !DILocation(line: 385, column: 40, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2821, file: !2433, line: 385, column: 9)
!2827 = !DILocation(line: 385, column: 55, scope: !2826)
!2828 = !DILocation(line: 385, column: 9, scope: !2821)
!2829 = !DILocation(line: 388, column: 34, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2826, file: !2433, line: 385, column: 75)
!2831 = !DILocation(line: 388, column: 9, scope: !2830)
!2832 = !DILocation(line: 390, column: 55, scope: !2830)
!2833 = !DILocation(line: 391, column: 5, scope: !2830)
!2834 = !DILocation(line: 392, column: 20, scope: !2821)
!2835 = !DILocation(line: 392, column: 45, scope: !2821)
!2836 = !DILocation(line: 392, column: 5, scope: !2821)
!2837 = !DILocation(line: 394, column: 5, scope: !2821)
!2838 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2433, file: !2433, line: 398, type: !2519, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2839)
!2839 = !{!2840, !2841}
!2840 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2838, file: !2433, line: 398, type: !2522)
!2841 = !DILocalVariable(name: "mask", scope: !2838, file: !2433, line: 400, type: !184)
!2842 = !DILocation(line: 0, scope: !2838)
!2843 = !DILocation(line: 400, column: 5, scope: !2838)
!2844 = !DILocation(line: 400, column: 23, scope: !2838)
!2845 = !DILocation(line: 402, column: 9, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2838, file: !2433, line: 402, column: 9)
!2847 = !DILocation(line: 402, column: 9, scope: !2838)
!2848 = !DILocation(line: 413, column: 12, scope: !2838)
!2849 = !DILocation(line: 413, column: 10, scope: !2838)
!2850 = !DILocation(line: 415, column: 5, scope: !2838)
!2851 = !DILocation(line: 415, column: 23, scope: !2838)
!2852 = !DILocation(line: 415, column: 34, scope: !2838)
!2853 = !DILocation(line: 418, column: 5, scope: !2838)
!2854 = !DILocation(line: 418, column: 23, scope: !2838)
!2855 = !DILocation(line: 418, column: 34, scope: !2838)
!2856 = !DILocation(line: 420, column: 5, scope: !2838)
!2857 = !DILocation(line: 420, column: 23, scope: !2838)
!2858 = !DILocation(line: 420, column: 35, scope: !2838)
!2859 = !DILocation(line: 422, column: 29, scope: !2838)
!2860 = !DILocation(line: 422, column: 44, scope: !2838)
!2861 = !DILocation(line: 423, column: 28, scope: !2838)
!2862 = !DILocation(line: 423, column: 5, scope: !2838)
!2863 = !DILocation(line: 425, column: 33, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2838, file: !2433, line: 425, column: 9)
!2865 = !DILocation(line: 425, column: 9, scope: !2838)
!2866 = !DILocation(line: 427, column: 53, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2864, file: !2433, line: 425, column: 62)
!2868 = !DILocation(line: 428, column: 5, scope: !2867)
!2869 = !DILocation(line: 430, column: 1, scope: !2838)
!2870 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2433, file: !2433, line: 434, type: !2871, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2873)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!2521, !920}
!2873 = !{!2874, !2875, !2876}
!2874 = !DILocalVariable(name: "handle", arg: 1, scope: !2870, file: !2433, line: 434, type: !920)
!2875 = !DILocalVariable(name: "timer", scope: !2870, file: !2433, line: 436, type: !175)
!2876 = !DILocalVariable(name: "mask", scope: !2870, file: !2433, line: 437, type: !175)
!2877 = !DILocation(line: 0, scope: !2870)
!2878 = !DILocation(line: 439, column: 24, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2870, file: !2433, line: 439, column: 9)
!2880 = !DILocation(line: 439, column: 41, scope: !2879)
!2881 = !DILocation(line: 439, column: 9, scope: !2870)
!2882 = !DILocation(line: 443, column: 16, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2870, file: !2433, line: 443, column: 9)
!2884 = !DILocation(line: 443, column: 9, scope: !2870)
!2885 = !DILocation(line: 448, column: 12, scope: !2870)
!2886 = !DILocation(line: 450, column: 15, scope: !2870)
!2887 = !DILocation(line: 451, column: 21, scope: !2870)
!2888 = !DILocation(line: 451, column: 13, scope: !2870)
!2889 = !DILocation(line: 452, column: 33, scope: !2870)
!2890 = !DILocation(line: 452, column: 41, scope: !2870)
!2891 = !DILocation(line: 453, column: 36, scope: !2870)
!2892 = !DILocation(line: 455, column: 5, scope: !2870)
!2893 = !DILocation(line: 456, column: 5, scope: !2870)
!2894 = !DILocation(line: 457, column: 1, scope: !2870)
!2895 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2433, file: !2433, line: 459, type: !2744, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2896)
!2896 = !{!2897, !2898}
!2897 = !DILocalVariable(name: "handle", arg: 1, scope: !2895, file: !2433, line: 459, type: !175)
!2898 = !DILocalVariable(name: "timer", scope: !2895, file: !2433, line: 461, type: !184)
!2899 = !DILocation(line: 0, scope: !2895)
!2900 = !DILocation(line: 461, column: 5, scope: !2895)
!2901 = !DILocation(line: 461, column: 23, scope: !2895)
!2902 = !DILocation(line: 463, column: 17, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2895, file: !2433, line: 463, column: 9)
!2904 = !DILocation(line: 463, column: 37, scope: !2903)
!2905 = !DILocation(line: 463, column: 9, scope: !2895)
!2906 = !DILocation(line: 467, column: 20, scope: !2895)
!2907 = !DILocation(line: 467, column: 11, scope: !2895)
!2908 = !DILocation(line: 469, column: 24, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2895, file: !2433, line: 469, column: 9)
!2910 = !DILocation(line: 469, column: 41, scope: !2909)
!2911 = !DILocation(line: 469, column: 9, scope: !2895)
!2912 = !DILocation(line: 473, column: 30, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2895, file: !2433, line: 473, column: 9)
!2914 = !DILocation(line: 473, column: 37, scope: !2913)
!2915 = !DILocation(line: 473, column: 9, scope: !2895)
!2916 = !DILocation(line: 477, column: 30, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2895, file: !2433, line: 477, column: 9)
!2918 = !DILocation(line: 477, column: 37, scope: !2917)
!2919 = !DILocation(line: 477, column: 45, scope: !2917)
!2920 = !DILocation(line: 477, column: 9, scope: !2895)
!2921 = !DILocation(line: 481, column: 26, scope: !2895)
!2922 = !DILocation(line: 481, column: 33, scope: !2895)
!2923 = !DILocation(line: 481, column: 41, scope: !2895)
!2924 = !DILocation(line: 482, column: 36, scope: !2895)
!2925 = !DILocation(line: 484, column: 5, scope: !2895)
!2926 = !DILocation(line: 485, column: 1, scope: !2895)
!2927 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2433, file: !2433, line: 487, type: !2928, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2930)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!2521, !175, !175, !225, !194}
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937}
!2931 = !DILocalVariable(name: "handle", arg: 1, scope: !2927, file: !2433, line: 487, type: !175)
!2932 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !2927, file: !2433, line: 487, type: !175)
!2933 = !DILocalVariable(name: "callback", arg: 3, scope: !2927, file: !2433, line: 487, type: !225)
!2934 = !DILocalVariable(name: "user_data", arg: 4, scope: !2927, file: !2433, line: 487, type: !194)
!2935 = !DILocalVariable(name: "current_time", scope: !2927, file: !2433, line: 489, type: !175)
!2936 = !DILocalVariable(name: "mask", scope: !2927, file: !2433, line: 490, type: !175)
!2937 = !DILocalVariable(name: "timer", scope: !2927, file: !2433, line: 491, type: !175)
!2938 = !DILocation(line: 0, scope: !2927)
!2939 = !DILocation(line: 493, column: 17, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2927, file: !2433, line: 493, column: 9)
!2941 = !DILocation(line: 493, column: 37, scope: !2940)
!2942 = !DILocation(line: 493, column: 9, scope: !2927)
!2943 = !DILocation(line: 497, column: 20, scope: !2927)
!2944 = !DILocation(line: 503, column: 37, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2927, file: !2433, line: 503, column: 9)
!2946 = !DILocation(line: 503, column: 9, scope: !2927)
!2947 = !DILocation(line: 507, column: 37, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2927, file: !2433, line: 507, column: 9)
!2949 = !DILocation(line: 507, column: 45, scope: !2948)
!2950 = !DILocation(line: 507, column: 9, scope: !2927)
!2951 = !DILocation(line: 511, column: 25, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2927, file: !2433, line: 511, column: 9)
!2953 = !DILocation(line: 511, column: 9, scope: !2927)
!2954 = !DILocation(line: 516, column: 12, scope: !2927)
!2955 = !DILocation(line: 519, column: 30, scope: !2927)
!2956 = !DILocation(line: 521, column: 24, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2927, file: !2433, line: 521, column: 9)
!2958 = !DILocation(line: 521, column: 38, scope: !2957)
!2959 = !DILocation(line: 521, column: 9, scope: !2927)
!2960 = !DILocation(line: 522, column: 9, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2957, file: !2433, line: 521, column: 48)
!2962 = !DILocation(line: 523, column: 9, scope: !2961)
!2963 = !DILocation(line: 524, column: 38, scope: !2961)
!2964 = !DILocation(line: 525, column: 5, scope: !2961)
!2965 = !DILocation(line: 526, column: 5, scope: !2927)
!2966 = !DILocation(line: 528, column: 23, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2927, file: !2433, line: 528, column: 8)
!2968 = !DILocation(line: 528, column: 41, scope: !2967)
!2969 = !DILocation(line: 528, column: 8, scope: !2927)
!2970 = !DILocation(line: 529, column: 51, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !2433, line: 528, column: 51)
!2972 = !DILocation(line: 529, column: 24, scope: !2971)
!2973 = !DILocation(line: 530, column: 5, scope: !2971)
!2974 = !DILocation(line: 0, scope: !2967)
!2975 = !DILocation(line: 534, column: 34, scope: !2927)
!2976 = !DILocation(line: 535, column: 39, scope: !2927)
!2977 = !DILocation(line: 537, column: 49, scope: !2927)
!2978 = !DILocation(line: 538, column: 80, scope: !2927)
!2979 = !DILocation(line: 538, column: 33, scope: !2927)
!2980 = !DILocation(line: 538, column: 49, scope: !2927)
!2981 = !DILocation(line: 539, column: 50, scope: !2927)
!2982 = !DILocation(line: 539, column: 61, scope: !2927)
!2983 = !DILocation(line: 540, column: 50, scope: !2927)
!2984 = !DILocation(line: 540, column: 61, scope: !2927)
!2985 = !DILocation(line: 542, column: 5, scope: !2927)
!2986 = !DILocation(line: 546, column: 30, scope: !2927)
!2987 = !DILocation(line: 548, column: 5, scope: !2927)
!2988 = !DILocation(line: 550, column: 5, scope: !2927)
!2989 = !DILocation(line: 551, column: 1, scope: !2927)
!2990 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2433, file: !2433, line: 553, type: !2744, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !2991)
!2991 = !{!2992, !2993, !2994, !2995}
!2992 = !DILocalVariable(name: "handle", arg: 1, scope: !2990, file: !2433, line: 553, type: !175)
!2993 = !DILocalVariable(name: "current_time", scope: !2990, file: !2433, line: 555, type: !175)
!2994 = !DILocalVariable(name: "mask", scope: !2990, file: !2433, line: 556, type: !175)
!2995 = !DILocalVariable(name: "timer", scope: !2990, file: !2433, line: 557, type: !175)
!2996 = !DILocation(line: 0, scope: !2990)
!2997 = !DILocation(line: 559, column: 17, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2990, file: !2433, line: 559, column: 9)
!2999 = !DILocation(line: 559, column: 37, scope: !2998)
!3000 = !DILocation(line: 559, column: 9, scope: !2990)
!3001 = !DILocation(line: 563, column: 20, scope: !2990)
!3002 = !DILocation(line: 565, column: 37, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2990, file: !2433, line: 565, column: 9)
!3004 = !DILocation(line: 565, column: 48, scope: !3003)
!3005 = !DILocation(line: 565, column: 9, scope: !2990)
!3006 = !DILocation(line: 569, column: 37, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2990, file: !2433, line: 569, column: 9)
!3008 = !DILocation(line: 569, column: 45, scope: !3007)
!3009 = !DILocation(line: 569, column: 9, scope: !2990)
!3010 = !DILocation(line: 574, column: 12, scope: !2990)
!3011 = !DILocation(line: 577, column: 30, scope: !2990)
!3012 = !DILocation(line: 578, column: 5, scope: !2990)
!3013 = !DILocation(line: 579, column: 30, scope: !2990)
!3014 = !DILocation(line: 581, column: 23, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2990, file: !2433, line: 581, column: 8)
!3016 = !DILocation(line: 581, column: 41, scope: !3015)
!3017 = !DILocation(line: 581, column: 8, scope: !2990)
!3018 = !DILocation(line: 582, column: 51, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3015, file: !2433, line: 581, column: 51)
!3020 = !DILocation(line: 582, column: 24, scope: !3019)
!3021 = !DILocation(line: 583, column: 5, scope: !3019)
!3022 = !DILocation(line: 0, scope: !3015)
!3023 = !DILocation(line: 587, column: 34, scope: !2990)
!3024 = !DILocation(line: 588, column: 39, scope: !2990)
!3025 = !DILocation(line: 590, column: 44, scope: !2990)
!3026 = !DILocation(line: 592, column: 24, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !2990, file: !2433, line: 592, column: 9)
!3028 = !DILocation(line: 592, column: 44, scope: !3027)
!3029 = !DILocation(line: 592, column: 9, scope: !2990)
!3030 = !DILocation(line: 593, column: 9, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3027, file: !2433, line: 592, column: 50)
!3032 = !DILocation(line: 594, column: 5, scope: !3031)
!3033 = !DILocation(line: 598, column: 30, scope: !2990)
!3034 = !DILocation(line: 599, column: 5, scope: !2990)
!3035 = !DILocation(line: 601, column: 5, scope: !2990)
!3036 = !DILocation(line: 603, column: 1, scope: !2990)
!3037 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2433, file: !2433, line: 605, type: !3038, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !3040)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!2521, !175, !920}
!3040 = !{!3041, !3042, !3043, !3044, !3045}
!3041 = !DILocalVariable(name: "handle", arg: 1, scope: !3037, file: !2433, line: 605, type: !175)
!3042 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3037, file: !2433, line: 605, type: !920)
!3043 = !DILocalVariable(name: "current_time", scope: !3037, file: !2433, line: 607, type: !175)
!3044 = !DILocalVariable(name: "mask", scope: !3037, file: !2433, line: 608, type: !175)
!3045 = !DILocalVariable(name: "timer", scope: !3037, file: !2433, line: 609, type: !175)
!3046 = !DILocation(line: 0, scope: !3037)
!3047 = !DILocation(line: 611, column: 17, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3037, file: !2433, line: 611, column: 9)
!3049 = !DILocation(line: 611, column: 37, scope: !3048)
!3050 = !DILocation(line: 611, column: 9, scope: !3037)
!3051 = !DILocation(line: 615, column: 20, scope: !3037)
!3052 = !DILocation(line: 617, column: 37, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3037, file: !2433, line: 617, column: 9)
!3054 = !DILocation(line: 617, column: 45, scope: !3053)
!3055 = !DILocation(line: 617, column: 9, scope: !3037)
!3056 = !DILocation(line: 622, column: 12, scope: !3037)
!3057 = !DILocation(line: 624, column: 35, scope: !3037)
!3058 = !DILocation(line: 624, column: 51, scope: !3037)
!3059 = !DILocation(line: 624, column: 76, scope: !3037)
!3060 = !DILocation(line: 624, column: 49, scope: !3037)
!3061 = !DILocation(line: 626, column: 37, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3037, file: !2433, line: 626, column: 9)
!3063 = !DILocation(line: 626, column: 9, scope: !3037)
!3064 = !DILocation(line: 0, scope: !3062)
!3065 = !DILocation(line: 632, column: 5, scope: !3037)
!3066 = !DILocation(line: 634, column: 5, scope: !3037)
!3067 = !DILocation(line: 636, column: 1, scope: !3037)
!3068 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !3, file: !3, line: 56, type: !3069, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3071)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!175, !175, !175, !175}
!3071 = !{!3072, !3073, !3074, !3075, !3077, !3078}
!3072 = !DILocalVariable(name: "mul1", arg: 1, scope: !3068, file: !3, line: 56, type: !175)
!3073 = !DILocalVariable(name: "mul2", arg: 2, scope: !3068, file: !3, line: 56, type: !175)
!3074 = !DILocalVariable(name: "div", arg: 3, scope: !3068, file: !3, line: 56, type: !175)
!3075 = !DILocalVariable(name: "data1", scope: !3068, file: !3, line: 58, type: !3076)
!3076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 64, elements: !383)
!3077 = !DILocalVariable(name: "data2", scope: !3068, file: !3, line: 59, type: !3076)
!3078 = !DILocalVariable(name: "result", scope: !3068, file: !3, line: 60, type: !3076)
!3079 = !DILocation(line: 0, scope: !3068)
!3080 = !DILocation(line: 63, column: 22, scope: !3068)
!3081 = !DILocation(line: 63, column: 32, scope: !3068)
!3082 = !DILocation(line: 64, column: 23, scope: !3068)
!3083 = !DILocation(line: 64, column: 40, scope: !3068)
!3084 = !DILocation(line: 66, column: 27, scope: !3068)
!3085 = !DILocation(line: 67, column: 27, scope: !3068)
!3086 = !DILocation(line: 67, column: 44, scope: !3068)
!3087 = !DILocation(line: 69, column: 26, scope: !3068)
!3088 = !DILocation(line: 70, column: 36, scope: !3068)
!3089 = !DILocation(line: 70, column: 43, scope: !3068)
!3090 = !DILocation(line: 70, column: 55, scope: !3068)
!3091 = !DILocation(line: 72, column: 34, scope: !3068)
!3092 = !DILocation(line: 72, column: 41, scope: !3068)
!3093 = !DILocation(line: 72, column: 5, scope: !3068)
!3094 = distinct !DISubprogram(name: "gpt_current_count", scope: !3, file: !3, line: 75, type: !3095, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3097)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!175, !179}
!3097 = !{!3098}
!3098 = !DILocalVariable(name: "gpt", arg: 1, scope: !3094, file: !3, line: 75, type: !179)
!3099 = !DILocation(line: 0, scope: !3094)
!3100 = !DILocation(line: 77, column: 17, scope: !3094)
!3101 = !DILocation(line: 77, column: 5, scope: !3094)
!3102 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !3, file: !3, line: 81, type: !3103, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3105)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!175, !175}
!3105 = !{!3106}
!3106 = !DILocalVariable(name: "ms", arg: 1, scope: !3102, file: !3, line: 81, type: !175)
!3107 = !DILocation(line: 0, scope: !3102)
!3108 = !DILocation(line: 83, column: 27, scope: !3102)
!3109 = !DILocation(line: 83, column: 37, scope: !3102)
!3110 = !DILocation(line: 83, column: 43, scope: !3102)
!3111 = !DILocation(line: 83, column: 32, scope: !3102)
!3112 = !DILocation(line: 83, column: 53, scope: !3102)
!3113 = !DILocation(line: 83, column: 59, scope: !3102)
!3114 = !DILocation(line: 83, column: 48, scope: !3102)
!3115 = !DILocation(line: 83, column: 70, scope: !3102)
!3116 = !DILocation(line: 83, column: 76, scope: !3102)
!3117 = !DILocation(line: 83, column: 65, scope: !3102)
!3118 = !DILocation(line: 83, column: 5, scope: !3102)
!3119 = !DILocation(line: 90, column: 9, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !207, file: !3, line: 90, column: 9)
!3121 = !DILocation(line: 90, column: 9, scope: !207)
!3122 = !DILocation(line: 91, column: 13, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 91, column: 13)
!3124 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 90, column: 24)
!3125 = !DILocation(line: 91, column: 13, scope: !3124)
!3126 = !DILocation(line: 92, column: 32, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 91, column: 41)
!3128 = !DILocation(line: 92, column: 30, scope: !3127)
!3129 = !DILocation(line: 93, column: 41, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 93, column: 17)
!3131 = !DILocation(line: 0, scope: !3123)
!3132 = !DILocation(line: 105, column: 1, scope: !207)
!3133 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !3, file: !3, line: 107, type: !208, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!3134 = !DILocation(line: 109, column: 9, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 109, column: 9)
!3136 = !DILocation(line: 109, column: 9, scope: !3133)
!3137 = !DILocation(line: 110, column: 9, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 109, column: 61)
!3139 = !DILocation(line: 111, column: 5, scope: !3138)
!3140 = !DILocation(line: 112, column: 1, scope: !3133)
!3141 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !3, file: !3, line: 114, type: !3103, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!3142 = !{!3143}
!3143 = !DILocalVariable(name: "time_us", arg: 1, scope: !3141, file: !3, line: 114, type: !175)
!3144 = !DILocation(line: 0, scope: !3141)
!3145 = !DILocation(line: 116, column: 5, scope: !3141)
!3146 = !DILocation(line: 118, column: 9, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 118, column: 9)
!3148 = !DILocation(line: 118, column: 9, scope: !3141)
!3149 = !DILocation(line: 120, column: 49, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 118, column: 37)
!3151 = !DILocation(line: 120, column: 16, scope: !3150)
!3152 = !DILocation(line: 120, column: 9, scope: !3150)
!3153 = !DILocation(line: 0, scope: !3147)
!3154 = !DILocation(line: 125, column: 1, scope: !3141)
!3155 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !3, file: !3, line: 127, type: !3103, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3156)
!3156 = !{!3157}
!3157 = !DILocalVariable(name: "count", arg: 1, scope: !3155, file: !3, line: 127, type: !175)
!3158 = !DILocation(line: 0, scope: !3155)
!3159 = !DILocation(line: 129, column: 5, scope: !3155)
!3160 = !DILocation(line: 131, column: 9, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 131, column: 9)
!3162 = !DILocation(line: 131, column: 9, scope: !3155)
!3163 = !DILocation(line: 133, column: 69, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 131, column: 37)
!3165 = !DILocation(line: 133, column: 16, scope: !3164)
!3166 = !DILocation(line: 133, column: 9, scope: !3164)
!3167 = !DILocation(line: 0, scope: !3161)
!3168 = !DILocation(line: 138, column: 1, scope: !3155)
!3169 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !3, file: !3, line: 141, type: !3170, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3172)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{null, !179, !175, !175}
!3172 = !{!3173, !3174, !3175}
!3173 = !DILocalVariable(name: "gpt", arg: 1, scope: !3169, file: !3, line: 141, type: !179)
!3174 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3169, file: !3, line: 141, type: !175)
!3175 = !DILocalVariable(name: "divide", arg: 3, scope: !3169, file: !3, line: 141, type: !175)
!3176 = !DILocation(line: 0, scope: !3169)
!3177 = !DILocation(line: 143, column: 5, scope: !3169)
!3178 = !DILocation(line: 145, column: 33, scope: !3169)
!3179 = !DILocation(line: 145, column: 10, scope: !3169)
!3180 = !DILocation(line: 145, column: 18, scope: !3169)
!3181 = !DILocation(line: 148, column: 10, scope: !3169)
!3182 = !DILocation(line: 148, column: 18, scope: !3169)
!3183 = !DILocation(line: 149, column: 1, scope: !3169)
!3184 = distinct !DISubprogram(name: "gpt_delay_time", scope: !3, file: !3, line: 151, type: !3185, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !179, !690}
!3187 = !{!3188, !3189, !3190, !3191}
!3188 = !DILocalVariable(name: "gpt", arg: 1, scope: !3184, file: !3, line: 151, type: !179)
!3189 = !DILocalVariable(name: "count", arg: 2, scope: !3184, file: !3, line: 151, type: !690)
!3190 = !DILocalVariable(name: "end_count", scope: !3184, file: !3, line: 153, type: !175)
!3191 = !DILocalVariable(name: "current", scope: !3184, file: !3, line: 153, type: !175)
!3192 = !DILocation(line: 0, scope: !3184)
!3193 = !DILocation(line: 155, column: 17, scope: !3184)
!3194 = !DILocation(line: 156, column: 25, scope: !3184)
!3195 = !DILocation(line: 156, column: 33, scope: !3184)
!3196 = !DILocation(line: 159, column: 19, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 159, column: 9)
!3198 = !DILocation(line: 159, column: 9, scope: !3184)
!3199 = !DILocation(line: 160, column: 16, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 159, column: 30)
!3201 = !DILocation(line: 160, column: 39, scope: !3200)
!3202 = !DILocation(line: 160, column: 9, scope: !3200)
!3203 = distinct !{!3203, !3202, !3204}
!3204 = !DILocation(line: 160, column: 51, scope: !3200)
!3205 = !DILocation(line: 162, column: 16, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 161, column: 12)
!3207 = !DILocation(line: 162, column: 39, scope: !3206)
!3208 = !DILocation(line: 162, column: 9, scope: !3206)
!3209 = distinct !{!3209, !3208, !3210}
!3210 = !DILocation(line: 162, column: 50, scope: !3206)
!3211 = !DILocation(line: 163, column: 16, scope: !3206)
!3212 = !DILocation(line: 163, column: 39, scope: !3206)
!3213 = !DILocation(line: 163, column: 9, scope: !3206)
!3214 = distinct !{!3214, !3213, !3215}
!3215 = !DILocation(line: 163, column: 51, scope: !3206)
!3216 = !DILocation(line: 165, column: 1, scope: !3184)
!3217 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !3, file: !3, line: 166, type: !3218, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3220)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{null, !179}
!3220 = !{!3221}
!3221 = !DILocalVariable(name: "gpt", arg: 1, scope: !3217, file: !3, line: 166, type: !179)
!3222 = !DILocation(line: 0, scope: !3217)
!3223 = !DILocation(line: 168, column: 10, scope: !3217)
!3224 = !DILocation(line: 168, column: 22, scope: !3217)
!3225 = !DILocation(line: 169, column: 10, scope: !3217)
!3226 = !DILocation(line: 169, column: 22, scope: !3217)
!3227 = !DILocation(line: 170, column: 21, scope: !3217)
!3228 = !DILocation(line: 171, column: 5, scope: !3217)
!3229 = !DILocation(line: 171, column: 16, scope: !3217)
!3230 = distinct !{!3230, !3228, !3231}
!3231 = !DILocation(line: 171, column: 26, scope: !3217)
!3232 = !DILocation(line: 172, column: 10, scope: !3217)
!3233 = !DILocation(line: 172, column: 22, scope: !3217)
!3234 = !DILocation(line: 173, column: 10, scope: !3217)
!3235 = !DILocation(line: 173, column: 22, scope: !3217)
!3236 = !DILocation(line: 174, column: 10, scope: !3217)
!3237 = !DILocation(line: 174, column: 22, scope: !3217)
!3238 = !DILocation(line: 176, column: 13, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3217, file: !3, line: 176, column: 9)
!3240 = !DILocation(line: 176, column: 9, scope: !3217)
!3241 = !DILocation(line: 177, column: 27, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 176, column: 22)
!3243 = !DILocation(line: 178, column: 5, scope: !3242)
!3244 = !DILocation(line: 179, column: 1, scope: !3217)
!3245 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !3, file: !3, line: 181, type: !3095, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3246)
!3246 = !{!3247, !3248}
!3247 = !DILocalVariable(name: "gpt", arg: 1, scope: !3245, file: !3, line: 181, type: !179)
!3248 = !DILocalVariable(name: "mask", scope: !3245, file: !3, line: 183, type: !184)
!3249 = !DILocation(line: 0, scope: !3245)
!3250 = !DILocation(line: 183, column: 5, scope: !3245)
!3251 = !DILocation(line: 183, column: 23, scope: !3245)
!3252 = !DILocation(line: 185, column: 17, scope: !3245)
!3253 = !DILocation(line: 185, column: 10, scope: !3245)
!3254 = !DILocation(line: 187, column: 22, scope: !3245)
!3255 = !DILocation(line: 189, column: 12, scope: !3245)
!3256 = !DILocation(line: 190, column: 1, scope: !3245)
!3257 = !DILocation(line: 189, column: 5, scope: !3245)
!3258 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !3, file: !3, line: 192, type: !3259, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3261)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{null, !179, !175}
!3261 = !{!3262, !3263}
!3262 = !DILocalVariable(name: "gpt", arg: 1, scope: !3258, file: !3, line: 192, type: !179)
!3263 = !DILocalVariable(name: "mask", arg: 2, scope: !3258, file: !3, line: 192, type: !175)
!3264 = !DILocation(line: 0, scope: !3258)
!3265 = !DILocation(line: 194, column: 10, scope: !3258)
!3266 = !DILocation(line: 194, column: 21, scope: !3258)
!3267 = !DILocation(line: 195, column: 1, scope: !3258)
!3268 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !3, file: !3, line: 197, type: !870, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274}
!3270 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3268, file: !3, line: 197, type: !780)
!3271 = !DILocalVariable(name: "i", scope: !3268, file: !3, line: 199, type: !175)
!3272 = !DILocalVariable(name: "mask", scope: !3268, file: !3, line: 200, type: !184)
!3273 = !DILocalVariable(name: "state", scope: !3268, file: !3, line: 201, type: !184)
!3274 = !DILocalVariable(name: "enable", scope: !3268, file: !3, line: 202, type: !184)
!3275 = !DILocation(line: 0, scope: !3268)
!3276 = !DILocation(line: 200, column: 5, scope: !3268)
!3277 = !DILocation(line: 200, column: 23, scope: !3268)
!3278 = !DILocation(line: 201, column: 5, scope: !3268)
!3279 = !DILocation(line: 201, column: 23, scope: !3268)
!3280 = !DILocation(line: 202, column: 5, scope: !3268)
!3281 = !DILocation(line: 202, column: 23, scope: !3268)
!3282 = !DILocation(line: 207, column: 5, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 207, column: 5)
!3284 = !DILocation(line: 209, column: 18, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 207, column: 44)
!3286 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 207, column: 5)
!3287 = !DILocation(line: 209, column: 29, scope: !3285)
!3288 = !DILocation(line: 209, column: 16, scope: !3285)
!3289 = !DILocation(line: 210, column: 29, scope: !3285)
!3290 = !DILocation(line: 210, column: 16, scope: !3285)
!3291 = !DILocation(line: 212, column: 16, scope: !3285)
!3292 = !DILocation(line: 212, column: 14, scope: !3285)
!3293 = !DILocation(line: 214, column: 9, scope: !3285)
!3294 = !DILocation(line: 214, column: 20, scope: !3285)
!3295 = !DILocation(line: 214, column: 32, scope: !3285)
!3296 = !DILocation(line: 216, column: 14, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 216, column: 13)
!3298 = !DILocation(line: 216, column: 20, scope: !3297)
!3299 = !DILocation(line: 216, column: 40, scope: !3297)
!3300 = !DILocation(line: 216, column: 44, scope: !3297)
!3301 = !DILocation(line: 216, column: 51, scope: !3297)
!3302 = !DILocation(line: 216, column: 13, scope: !3285)
!3303 = !DILocation(line: 224, column: 51, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 224, column: 17)
!3305 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 216, column: 70)
!3306 = !DILocation(line: 224, column: 60, scope: !3304)
!3307 = !DILocation(line: 224, column: 17, scope: !3305)
!3308 = !DILocation(line: 225, column: 94, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 224, column: 69)
!3310 = !DILocation(line: 225, column: 17, scope: !3309)
!3311 = !DILocation(line: 226, column: 13, scope: !3309)
!3312 = !DILocation(line: 229, column: 31, scope: !3285)
!3313 = !DILocation(line: 229, column: 42, scope: !3285)
!3314 = !DILocation(line: 229, column: 9, scope: !3285)
!3315 = !DILocation(line: 207, column: 40, scope: !3286)
!3316 = !DILocation(line: 207, column: 19, scope: !3286)
!3317 = distinct !{!3317, !3282, !3318}
!3318 = !DILocation(line: 231, column: 5, scope: !3283)
!3319 = !DILocation(line: 233, column: 1, scope: !3268)
!3320 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !3, file: !3, line: 236, type: !208, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!3321 = !DILocation(line: 238, column: 5, scope: !3320)
!3322 = !DILocation(line: 239, column: 5, scope: !3320)
!3323 = !DILocation(line: 240, column: 5, scope: !3320)
!3324 = !DILocation(line: 241, column: 1, scope: !3320)
!3325 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !3, file: !3, line: 242, type: !3095, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3326)
!3326 = !{!3327, !3328, !3329, !3330, !3331}
!3327 = !DILocalVariable(name: "gpt", arg: 1, scope: !3325, file: !3, line: 242, type: !179)
!3328 = !DILocalVariable(name: "time", scope: !3325, file: !3, line: 244, type: !184)
!3329 = !DILocalVariable(name: "count", scope: !3325, file: !3, line: 245, type: !175)
!3330 = !DILocalVariable(name: "time_s", scope: !3325, file: !3, line: 245, type: !175)
!3331 = !DILocalVariable(name: "time_ms", scope: !3325, file: !3, line: 245, type: !175)
!3332 = !DILocation(line: 0, scope: !3325)
!3333 = !DILocation(line: 244, column: 5, scope: !3325)
!3334 = !DILocation(line: 244, column: 23, scope: !3325)
!3335 = !DILocation(line: 247, column: 13, scope: !3325)
!3336 = !DILocation(line: 248, column: 20, scope: !3325)
!3337 = !DILocation(line: 249, column: 23, scope: !3325)
!3338 = !DILocation(line: 249, column: 32, scope: !3325)
!3339 = !DILocation(line: 249, column: 39, scope: !3325)
!3340 = !DILocation(line: 249, column: 48, scope: !3325)
!3341 = !DILocation(line: 250, column: 19, scope: !3325)
!3342 = !DILocation(line: 250, column: 26, scope: !3325)
!3343 = !DILocation(line: 250, column: 10, scope: !3325)
!3344 = !DILocation(line: 253, column: 5, scope: !3325)
!3345 = !DILocation(line: 253, column: 30, scope: !3325)
!3346 = !DILocation(line: 253, column: 38, scope: !3325)
!3347 = !DILocation(line: 254, column: 5, scope: !3325)
!3348 = !DILocation(line: 254, column: 36, scope: !3325)
!3349 = distinct !{!3349, !3347, !3350}
!3350 = !DILocation(line: 254, column: 46, scope: !3325)
!3351 = !DILocation(line: 255, column: 12, scope: !3325)
!3352 = !DILocation(line: 256, column: 1, scope: !3325)
!3353 = !DILocation(line: 255, column: 5, scope: !3325)
!3354 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !3, file: !3, line: 258, type: !3355, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3357)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!175}
!3357 = !{!3358}
!3358 = !DILocalVariable(name: "i", scope: !3354, file: !3, line: 260, type: !175)
!3359 = !DILocation(line: 0, scope: !3354)
!3360 = !DILocation(line: 262, column: 5, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 262, column: 5)
!3362 = !DILocation(line: 263, column: 37, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 263, column: 13)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 262, column: 45)
!3365 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 262, column: 5)
!3366 = !DILocation(line: 263, column: 45, scope: !3363)
!3367 = !DILocation(line: 263, column: 13, scope: !3364)
!3368 = !DILocation(line: 262, column: 41, scope: !3365)
!3369 = !DILocation(line: 262, column: 19, scope: !3365)
!3370 = distinct !{!3370, !3360, !3371}
!3371 = !DILocation(line: 266, column: 5, scope: !3361)
!3372 = !DILocation(line: 269, column: 1, scope: !3354)
!3373 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !3, file: !3, line: 271, type: !208, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3374)
!3374 = !{!3375, !3376}
!3375 = !DILocalVariable(name: "minimum_time", scope: !3373, file: !3, line: 273, type: !175)
!3376 = !DILocalVariable(name: "current_timer", scope: !3373, file: !3, line: 273, type: !175)
!3377 = !DILocation(line: 273, column: 5, scope: !3373)
!3378 = !DILocation(line: 275, column: 24, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 275, column: 9)
!3380 = !DILocation(line: 275, column: 9, scope: !3373)
!3381 = !DILocation(line: 0, scope: !3373)
!3382 = !DILocation(line: 279, column: 5, scope: !3373)
!3383 = !DILocation(line: 282, column: 56, scope: !3373)
!3384 = !DILocation(line: 282, column: 39, scope: !3373)
!3385 = !DILocation(line: 284, column: 30, scope: !3373)
!3386 = !DILocation(line: 285, column: 45, scope: !3373)
!3387 = !DILocation(line: 285, column: 5, scope: !3373)
!3388 = !DILocation(line: 286, column: 30, scope: !3373)
!3389 = !DILocation(line: 287, column: 1, scope: !3373)
!3390 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !3, file: !3, line: 308, type: !3391, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3393)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{null, !920, !920}
!3393 = !{!3394, !3395, !3396, !3397, !3398}
!3394 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3390, file: !3, line: 308, type: !920)
!3395 = !DILocalVariable(name: "number", arg: 2, scope: !3390, file: !3, line: 308, type: !920)
!3396 = !DILocalVariable(name: "i", scope: !3390, file: !3, line: 310, type: !175)
!3397 = !DILocalVariable(name: "minimum", scope: !3390, file: !3, line: 311, type: !175)
!3398 = !DILocalVariable(name: "data", scope: !3390, file: !3, line: 312, type: !175)
!3399 = !DILocation(line: 0, scope: !3390)
!3400 = !DILocation(line: 314, column: 5, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 314, column: 5)
!3402 = !DILocation(line: 315, column: 37, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 315, column: 13)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 314, column: 45)
!3405 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 314, column: 5)
!3406 = !DILocation(line: 315, column: 13, scope: !3404)
!3407 = !DILocation(line: 316, column: 20, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 315, column: 57)
!3409 = !DILocation(line: 318, column: 22, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 318, column: 17)
!3411 = !DILocation(line: 318, column: 17, scope: !3408)
!3412 = !DILocation(line: 320, column: 25, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 318, column: 33)
!3414 = !DILocation(line: 321, column: 13, scope: !3413)
!3415 = !DILocation(line: 314, column: 41, scope: !3405)
!3416 = !DILocation(line: 314, column: 19, scope: !3405)
!3417 = distinct !{!3417, !3400, !3418}
!3418 = !DILocation(line: 323, column: 5, scope: !3401)
!3419 = !DILocation(line: 325, column: 19, scope: !3390)
!3420 = !DILocation(line: 326, column: 1, scope: !3390)
!3421 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !3, file: !3, line: 289, type: !3103, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3422)
!3422 = !{!3423, !3424, !3425, !3426}
!3423 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3421, file: !3, line: 289, type: !175)
!3424 = !DILocalVariable(name: "time_out_delta", scope: !3421, file: !3, line: 291, type: !175)
!3425 = !DILocalVariable(name: "current_delta", scope: !3421, file: !3, line: 292, type: !175)
!3426 = !DILocalVariable(name: "ret_value", scope: !3421, file: !3, line: 293, type: !175)
!3427 = !DILocation(line: 0, scope: !3421)
!3428 = !DILocation(line: 295, column: 22, scope: !3421)
!3429 = !DILocation(line: 296, column: 22, scope: !3421)
!3430 = !DILocation(line: 298, column: 24, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 298, column: 9)
!3432 = !DILocation(line: 298, column: 9, scope: !3421)
!3433 = !DILocation(line: 306, column: 5, scope: !3421)
!3434 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !3, file: !3, line: 329, type: !227, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3435)
!3435 = !{!3436, !3437, !3438, !3439}
!3436 = !DILocalVariable(name: "parameter", arg: 1, scope: !3434, file: !3, line: 329, type: !194)
!3437 = !DILocalVariable(name: "i", scope: !3434, file: !3, line: 331, type: !175)
!3438 = !DILocalVariable(name: "time_ms", scope: !3434, file: !3, line: 332, type: !184)
!3439 = !DILocalVariable(name: "data", scope: !3434, file: !3, line: 333, type: !184)
!3440 = !DILocation(line: 0, scope: !3434)
!3441 = !DILocation(line: 332, column: 5, scope: !3434)
!3442 = !DILocation(line: 332, column: 23, scope: !3434)
!3443 = !DILocation(line: 333, column: 5, scope: !3434)
!3444 = !DILocation(line: 333, column: 23, scope: !3434)
!3445 = !DILocation(line: 336, column: 24, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 336, column: 9)
!3447 = !DILocation(line: 336, column: 41, scope: !3446)
!3448 = !DILocation(line: 336, column: 9, scope: !3434)
!3449 = !DILocation(line: 338, column: 34, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 336, column: 47)
!3451 = !DILocation(line: 339, column: 9, scope: !3450)
!3452 = !DILocation(line: 340, column: 34, scope: !3450)
!3453 = !DILocation(line: 342, column: 46, scope: !3450)
!3454 = !DILocation(line: 342, column: 19, scope: !3450)
!3455 = !DILocation(line: 342, column: 17, scope: !3450)
!3456 = !DILocation(line: 344, column: 41, scope: !3450)
!3457 = !DILocation(line: 344, column: 38, scope: !3450)
!3458 = !DILocation(line: 345, column: 42, scope: !3450)
!3459 = !DILocation(line: 347, column: 9, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 347, column: 9)
!3461 = !DILocation(line: 348, column: 41, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 348, column: 17)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 347, column: 49)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 347, column: 9)
!3465 = !DILocation(line: 348, column: 17, scope: !3463)
!3466 = !DILocation(line: 350, column: 24, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 348, column: 61)
!3468 = !DILocation(line: 350, column: 22, scope: !3467)
!3469 = !DILocation(line: 352, column: 21, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 352, column: 21)
!3471 = !DILocation(line: 352, column: 26, scope: !3470)
!3472 = !DILocation(line: 352, column: 21, scope: !3467)
!3473 = !DILocation(line: 353, column: 56, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 352, column: 32)
!3475 = !DILocation(line: 354, column: 55, scope: !3474)
!3476 = !DILocation(line: 356, column: 62, scope: !3474)
!3477 = !DILocation(line: 356, column: 112, scope: !3474)
!3478 = !DILocation(line: 356, column: 21, scope: !3474)
!3479 = !DILocation(line: 357, column: 17, scope: !3474)
!3480 = !DILocation(line: 347, column: 45, scope: !3464)
!3481 = !DILocation(line: 347, column: 23, scope: !3464)
!3482 = distinct !{!3482, !3459, !3483}
!3483 = !DILocation(line: 360, column: 9, scope: !3460)
!3484 = !DILocation(line: 362, column: 42, scope: !3450)
!3485 = !DILocation(line: 364, column: 28, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 364, column: 13)
!3487 = !DILocation(line: 364, column: 48, scope: !3486)
!3488 = !DILocation(line: 364, column: 13, scope: !3450)
!3489 = !DILocation(line: 365, column: 13, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 364, column: 54)
!3491 = !DILocation(line: 366, column: 9, scope: !3490)
!3492 = !DILocation(line: 369, column: 1, scope: !3434)
!3493 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !264, file: !264, line: 50, type: !3494, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3497)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!175, !3496}
!3496 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !6, line: 390, baseType: !266)
!3497 = !{!3498, !3499, !3500}
!3498 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3493, file: !264, line: 50, type: !3496)
!3499 = !DILocalVariable(name: "i", scope: !3493, file: !264, line: 52, type: !175)
!3500 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !3493, file: !264, line: 53, type: !826)
!3501 = !DILocation(line: 0, scope: !3493)
!3502 = !DILocation(line: 53, column: 14, scope: !3493)
!3503 = !DILocation(line: 55, column: 5, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3493, file: !264, line: 55, column: 5)
!3505 = !DILocation(line: 55, column: 25, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3504, file: !264, line: 55, column: 5)
!3507 = !DILocation(line: 55, column: 19, scope: !3506)
!3508 = distinct !{!3508, !3503, !3509}
!3509 = !DILocation(line: 59, column: 5, scope: !3504)
!3510 = !DILocation(line: 56, column: 13, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !264, line: 56, column: 13)
!3512 = distinct !DILexicalBlock(scope: !3506, file: !264, line: 55, column: 29)
!3513 = !DILocation(line: 56, column: 40, scope: !3511)
!3514 = !DILocation(line: 56, column: 13, scope: !3512)
!3515 = !DILocation(line: 61, column: 1, scope: !3493)
!3516 = distinct !DISubprogram(name: "hal_gpio_init", scope: !264, file: !264, line: 66, type: !3517, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3520)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!3519, !3496}
!3519 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !319, line: 229, baseType: !318)
!3520 = !{!3521}
!3521 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3516, file: !264, line: 66, type: !3496)
!3522 = !DILocation(line: 0, scope: !3516)
!3523 = !DILocation(line: 68, column: 5, scope: !3516)
!3524 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !264, file: !264, line: 72, type: !3517, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3525)
!3525 = !{!3526}
!3526 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3524, file: !264, line: 72, type: !3496)
!3527 = !DILocation(line: 0, scope: !3524)
!3528 = !DILocation(line: 74, column: 5, scope: !3524)
!3529 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !264, file: !264, line: 79, type: !3530, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3532)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{!3519, !3496, !360}
!3532 = !{!3533, !3534, !3535, !3536}
!3533 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3529, file: !264, line: 79, type: !3496)
!3534 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3529, file: !264, line: 79, type: !360)
!3535 = !DILocalVariable(name: "no", scope: !3529, file: !264, line: 81, type: !175)
!3536 = !DILocalVariable(name: "remainder", scope: !3529, file: !264, line: 82, type: !175)
!3537 = !DILocation(line: 0, scope: !3529)
!3538 = !DILocation(line: 84, column: 18, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3529, file: !264, line: 84, column: 9)
!3540 = !DILocation(line: 84, column: 9, scope: !3529)
!3541 = !DILocation(line: 89, column: 19, scope: !3529)
!3542 = !DILocation(line: 92, column: 26, scope: !3529)
!3543 = !DILocation(line: 94, column: 24, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3529, file: !264, line: 94, column: 9)
!3545 = !DILocation(line: 0, scope: !3544)
!3546 = !DILocation(line: 94, column: 9, scope: !3529)
!3547 = !DILocation(line: 101, column: 1, scope: !3529)
!3548 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !264, file: !264, line: 105, type: !3549, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3552)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!3519, !3496, !3551}
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!3552 = !{!3553, !3554, !3555, !3556, !3557}
!3553 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3548, file: !264, line: 105, type: !3496)
!3554 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3548, file: !264, line: 105, type: !3551)
!3555 = !DILocalVariable(name: "no", scope: !3548, file: !264, line: 107, type: !175)
!3556 = !DILocalVariable(name: "remainder", scope: !3548, file: !264, line: 108, type: !175)
!3557 = !DILocalVariable(name: "temp", scope: !3548, file: !264, line: 109, type: !175)
!3558 = !DILocation(line: 0, scope: !3548)
!3559 = !DILocation(line: 111, column: 18, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3548, file: !264, line: 111, column: 9)
!3561 = !DILocation(line: 111, column: 9, scope: !3548)
!3562 = !DILocation(line: 115, column: 14, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3548, file: !264, line: 115, column: 9)
!3564 = !DILocation(line: 115, column: 9, scope: !3548)
!3565 = !DILocation(line: 120, column: 19, scope: !3548)
!3566 = !DILocation(line: 123, column: 26, scope: !3548)
!3567 = !DILocation(line: 125, column: 12, scope: !3548)
!3568 = !DILocation(line: 125, column: 54, scope: !3548)
!3569 = !DILocation(line: 126, column: 45, scope: !3548)
!3570 = !DILocation(line: 126, column: 17, scope: !3548)
!3571 = !DILocation(line: 127, column: 51, scope: !3548)
!3572 = !DILocation(line: 127, column: 21, scope: !3548)
!3573 = !DILocation(line: 128, column: 5, scope: !3548)
!3574 = !DILocation(line: 130, column: 1, scope: !3548)
!3575 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !264, file: !264, line: 134, type: !3576, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3579)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!3578, !3496, !378}
!3578 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !319, line: 238, baseType: !329)
!3579 = !{!3580, !3581, !3582, !3583, !3584}
!3580 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3575, file: !264, line: 134, type: !3496)
!3581 = !DILocalVariable(name: "function_index", arg: 2, scope: !3575, file: !264, line: 134, type: !378)
!3582 = !DILocalVariable(name: "no", scope: !3575, file: !264, line: 136, type: !175)
!3583 = !DILocalVariable(name: "remainder", scope: !3575, file: !264, line: 137, type: !175)
!3584 = !DILocalVariable(name: "irq_status", scope: !3575, file: !264, line: 138, type: !175)
!3585 = !DILocation(line: 0, scope: !3575)
!3586 = !DILocation(line: 140, column: 18, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3575, file: !264, line: 140, column: 9)
!3588 = !DILocation(line: 140, column: 9, scope: !3575)
!3589 = !DILocation(line: 145, column: 24, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3575, file: !264, line: 145, column: 9)
!3591 = !DILocation(line: 145, column: 9, scope: !3575)
!3592 = !DILocation(line: 145, column: 9, scope: !3590)
!3593 = !DILocation(line: 150, column: 19, scope: !3575)
!3594 = !DILocation(line: 156, column: 18, scope: !3575)
!3595 = !DILocation(line: 157, column: 105, scope: !3575)
!3596 = !DILocation(line: 157, column: 91, scope: !3575)
!3597 = !DILocation(line: 157, column: 5, scope: !3575)
!3598 = !DILocation(line: 157, column: 48, scope: !3575)
!3599 = !DILocation(line: 157, column: 62, scope: !3575)
!3600 = !DILocation(line: 158, column: 80, scope: !3575)
!3601 = !DILocation(line: 158, column: 5, scope: !3575)
!3602 = !DILocation(line: 158, column: 48, scope: !3575)
!3603 = !DILocation(line: 158, column: 62, scope: !3575)
!3604 = !DILocation(line: 159, column: 5, scope: !3575)
!3605 = !DILocation(line: 160, column: 5, scope: !3575)
!3606 = !DILocation(line: 162, column: 1, scope: !3575)
!3607 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !264, file: !264, line: 166, type: !3608, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3611)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!3519, !3496, !3610}
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!3611 = !{!3612, !3613, !3614, !3615, !3616}
!3612 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3607, file: !264, line: 166, type: !3496)
!3613 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3607, file: !264, line: 166, type: !3610)
!3614 = !DILocalVariable(name: "no", scope: !3607, file: !264, line: 168, type: !175)
!3615 = !DILocalVariable(name: "remainder", scope: !3607, file: !264, line: 169, type: !175)
!3616 = !DILocalVariable(name: "temp", scope: !3607, file: !264, line: 170, type: !175)
!3617 = !DILocation(line: 0, scope: !3607)
!3618 = !DILocation(line: 172, column: 18, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3607, file: !264, line: 172, column: 9)
!3620 = !DILocation(line: 172, column: 9, scope: !3607)
!3621 = !DILocation(line: 176, column: 14, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3607, file: !264, line: 176, column: 9)
!3623 = !DILocation(line: 176, column: 9, scope: !3607)
!3624 = !DILocation(line: 181, column: 19, scope: !3607)
!3625 = !DILocation(line: 184, column: 26, scope: !3607)
!3626 = !DILocation(line: 186, column: 12, scope: !3607)
!3627 = !DILocation(line: 186, column: 54, scope: !3607)
!3628 = !DILocation(line: 187, column: 45, scope: !3607)
!3629 = !DILocation(line: 187, column: 17, scope: !3607)
!3630 = !DILocation(line: 188, column: 41, scope: !3607)
!3631 = !DILocation(line: 188, column: 16, scope: !3607)
!3632 = !DILocation(line: 189, column: 5, scope: !3607)
!3633 = !DILocation(line: 191, column: 1, scope: !3607)
!3634 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !264, file: !264, line: 195, type: !3635, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3637)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!3519, !3496, !361}
!3637 = !{!3638, !3639, !3640, !3641}
!3638 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3634, file: !264, line: 195, type: !3496)
!3639 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3634, file: !264, line: 195, type: !361)
!3640 = !DILocalVariable(name: "no", scope: !3634, file: !264, line: 197, type: !175)
!3641 = !DILocalVariable(name: "remainder", scope: !3634, file: !264, line: 198, type: !175)
!3642 = !DILocation(line: 0, scope: !3634)
!3643 = !DILocation(line: 200, column: 18, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3634, file: !264, line: 200, column: 9)
!3645 = !DILocation(line: 200, column: 9, scope: !3634)
!3646 = !DILocation(line: 205, column: 19, scope: !3634)
!3647 = !DILocation(line: 208, column: 26, scope: !3634)
!3648 = !DILocation(line: 210, column: 9, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3634, file: !264, line: 210, column: 9)
!3650 = !DILocation(line: 0, scope: !3649)
!3651 = !DILocation(line: 210, column: 9, scope: !3634)
!3652 = !DILocation(line: 216, column: 1, scope: !3634)
!3653 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !264, file: !264, line: 220, type: !3608, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3654)
!3654 = !{!3655, !3656, !3657, !3658, !3659}
!3655 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3653, file: !264, line: 220, type: !3496)
!3656 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3653, file: !264, line: 220, type: !3610)
!3657 = !DILocalVariable(name: "no", scope: !3653, file: !264, line: 222, type: !175)
!3658 = !DILocalVariable(name: "remainder", scope: !3653, file: !264, line: 223, type: !175)
!3659 = !DILocalVariable(name: "temp", scope: !3653, file: !264, line: 224, type: !175)
!3660 = !DILocation(line: 0, scope: !3653)
!3661 = !DILocation(line: 226, column: 18, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3653, file: !264, line: 226, column: 9)
!3663 = !DILocation(line: 226, column: 9, scope: !3653)
!3664 = !DILocation(line: 230, column: 14, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3653, file: !264, line: 230, column: 9)
!3666 = !DILocation(line: 230, column: 9, scope: !3653)
!3667 = !DILocation(line: 235, column: 19, scope: !3653)
!3668 = !DILocation(line: 238, column: 26, scope: !3653)
!3669 = !DILocation(line: 240, column: 12, scope: !3653)
!3670 = !DILocation(line: 240, column: 55, scope: !3653)
!3671 = !DILocation(line: 241, column: 45, scope: !3653)
!3672 = !DILocation(line: 241, column: 17, scope: !3653)
!3673 = !DILocation(line: 242, column: 41, scope: !3653)
!3674 = !DILocation(line: 242, column: 16, scope: !3653)
!3675 = !DILocation(line: 243, column: 5, scope: !3653)
!3676 = !DILocation(line: 245, column: 1, scope: !3653)
!3677 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !264, file: !264, line: 249, type: !3517, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3678)
!3678 = !{!3679, !3680, !3681, !3682}
!3679 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3677, file: !264, line: 249, type: !3496)
!3680 = !DILocalVariable(name: "no", scope: !3677, file: !264, line: 251, type: !175)
!3681 = !DILocalVariable(name: "remainder", scope: !3677, file: !264, line: 252, type: !175)
!3682 = !DILocalVariable(name: "temp", scope: !3677, file: !264, line: 253, type: !175)
!3683 = !DILocation(line: 0, scope: !3677)
!3684 = !DILocation(line: 255, column: 18, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3677, file: !264, line: 255, column: 9)
!3686 = !DILocation(line: 255, column: 9, scope: !3677)
!3687 = !DILocation(line: 260, column: 19, scope: !3677)
!3688 = !DILocation(line: 263, column: 26, scope: !3677)
!3689 = !DILocation(line: 265, column: 12, scope: !3677)
!3690 = !DILocation(line: 265, column: 55, scope: !3677)
!3691 = !DILocation(line: 266, column: 45, scope: !3677)
!3692 = !DILocation(line: 266, column: 17, scope: !3677)
!3693 = !DILocation(line: 267, column: 15, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3677, file: !264, line: 267, column: 9)
!3695 = !DILocation(line: 267, column: 9, scope: !3677)
!3696 = !DILocation(line: 0, scope: !3694)
!3697 = !DILocation(line: 273, column: 1, scope: !3677)
!3698 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !264, file: !264, line: 278, type: !3517, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3699)
!3699 = !{!3700, !3701, !3702}
!3700 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3698, file: !264, line: 278, type: !3496)
!3701 = !DILocalVariable(name: "no", scope: !3698, file: !264, line: 280, type: !175)
!3702 = !DILocalVariable(name: "remainder", scope: !3698, file: !264, line: 281, type: !175)
!3703 = !DILocation(line: 0, scope: !3698)
!3704 = !DILocation(line: 283, column: 18, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3698, file: !264, line: 283, column: 9)
!3706 = !DILocation(line: 283, column: 9, scope: !3698)
!3707 = !DILocation(line: 288, column: 19, scope: !3698)
!3708 = !DILocation(line: 291, column: 26, scope: !3698)
!3709 = !DILocation(line: 293, column: 90, scope: !3698)
!3710 = !DILocation(line: 293, column: 5, scope: !3698)
!3711 = !DILocation(line: 293, column: 48, scope: !3698)
!3712 = !DILocation(line: 293, column: 62, scope: !3698)
!3713 = !DILocation(line: 294, column: 5, scope: !3698)
!3714 = !DILocation(line: 295, column: 1, scope: !3698)
!3715 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !264, file: !264, line: 299, type: !3517, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3716)
!3716 = !{!3717, !3718, !3719}
!3717 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3715, file: !264, line: 299, type: !3496)
!3718 = !DILocalVariable(name: "no", scope: !3715, file: !264, line: 301, type: !175)
!3719 = !DILocalVariable(name: "remainder", scope: !3715, file: !264, line: 302, type: !175)
!3720 = !DILocation(line: 0, scope: !3715)
!3721 = !DILocation(line: 304, column: 18, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3715, file: !264, line: 304, column: 9)
!3723 = !DILocation(line: 304, column: 9, scope: !3715)
!3724 = !DILocation(line: 309, column: 19, scope: !3715)
!3725 = !DILocation(line: 312, column: 26, scope: !3715)
!3726 = !DILocation(line: 314, column: 90, scope: !3715)
!3727 = !DILocation(line: 314, column: 5, scope: !3715)
!3728 = !DILocation(line: 314, column: 48, scope: !3715)
!3729 = !DILocation(line: 314, column: 62, scope: !3715)
!3730 = !DILocation(line: 315, column: 5, scope: !3715)
!3731 = !DILocation(line: 316, column: 1, scope: !3715)
!3732 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !264, file: !264, line: 321, type: !3517, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3733)
!3733 = !{!3734, !3735, !3736}
!3734 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3732, file: !264, line: 321, type: !3496)
!3735 = !DILocalVariable(name: "no", scope: !3732, file: !264, line: 323, type: !175)
!3736 = !DILocalVariable(name: "remainder", scope: !3732, file: !264, line: 324, type: !175)
!3737 = !DILocation(line: 0, scope: !3732)
!3738 = !DILocation(line: 326, column: 19, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3732, file: !264, line: 326, column: 9)
!3740 = !DILocation(line: 326, column: 36, scope: !3739)
!3741 = !DILocation(line: 326, column: 41, scope: !3739)
!3742 = !DILocation(line: 326, column: 9, scope: !3732)
!3743 = !DILocation(line: 331, column: 19, scope: !3732)
!3744 = !DILocation(line: 334, column: 26, scope: !3732)
!3745 = !DILocation(line: 336, column: 94, scope: !3732)
!3746 = !DILocation(line: 336, column: 5, scope: !3732)
!3747 = !DILocation(line: 336, column: 50, scope: !3732)
!3748 = !DILocation(line: 336, column: 66, scope: !3732)
!3749 = !DILocation(line: 337, column: 5, scope: !3732)
!3750 = !DILocation(line: 337, column: 51, scope: !3732)
!3751 = !DILocation(line: 337, column: 68, scope: !3732)
!3752 = !DILocation(line: 338, column: 5, scope: !3732)
!3753 = !DILocation(line: 339, column: 1, scope: !3732)
!3754 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !264, file: !264, line: 343, type: !3517, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3755)
!3755 = !{!3756, !3757, !3758}
!3756 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3754, file: !264, line: 343, type: !3496)
!3757 = !DILocalVariable(name: "no", scope: !3754, file: !264, line: 345, type: !175)
!3758 = !DILocalVariable(name: "remainder", scope: !3754, file: !264, line: 346, type: !175)
!3759 = !DILocation(line: 0, scope: !3754)
!3760 = !DILocation(line: 348, column: 19, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3754, file: !264, line: 348, column: 9)
!3762 = !DILocation(line: 348, column: 36, scope: !3761)
!3763 = !DILocation(line: 348, column: 41, scope: !3761)
!3764 = !DILocation(line: 348, column: 9, scope: !3754)
!3765 = !DILocation(line: 353, column: 19, scope: !3754)
!3766 = !DILocation(line: 356, column: 26, scope: !3754)
!3767 = !DILocation(line: 358, column: 94, scope: !3754)
!3768 = !DILocation(line: 358, column: 5, scope: !3754)
!3769 = !DILocation(line: 358, column: 50, scope: !3754)
!3770 = !DILocation(line: 358, column: 66, scope: !3754)
!3771 = !DILocation(line: 359, column: 5, scope: !3754)
!3772 = !DILocation(line: 359, column: 51, scope: !3754)
!3773 = !DILocation(line: 359, column: 68, scope: !3754)
!3774 = !DILocation(line: 360, column: 5, scope: !3754)
!3775 = !DILocation(line: 361, column: 1, scope: !3754)
!3776 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !264, file: !264, line: 365, type: !3517, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3777)
!3777 = !{!3778, !3779, !3780}
!3778 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3776, file: !264, line: 365, type: !3496)
!3779 = !DILocalVariable(name: "no", scope: !3776, file: !264, line: 367, type: !175)
!3780 = !DILocalVariable(name: "remainder", scope: !3776, file: !264, line: 368, type: !175)
!3781 = !DILocation(line: 0, scope: !3776)
!3782 = !DILocation(line: 370, column: 19, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3776, file: !264, line: 370, column: 9)
!3784 = !DILocation(line: 370, column: 36, scope: !3783)
!3785 = !DILocation(line: 370, column: 41, scope: !3783)
!3786 = !DILocation(line: 370, column: 9, scope: !3776)
!3787 = !DILocation(line: 375, column: 19, scope: !3776)
!3788 = !DILocation(line: 378, column: 26, scope: !3776)
!3789 = !DILocation(line: 380, column: 94, scope: !3776)
!3790 = !DILocation(line: 380, column: 5, scope: !3776)
!3791 = !DILocation(line: 380, column: 50, scope: !3776)
!3792 = !DILocation(line: 380, column: 66, scope: !3776)
!3793 = !DILocation(line: 381, column: 5, scope: !3776)
!3794 = !DILocation(line: 382, column: 1, scope: !3776)
!3795 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !264, file: !264, line: 387, type: !3796, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3800)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!3519, !3798, !3799}
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !6, line: 423, baseType: !339)
!3799 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !6, line: 431, baseType: !348)
!3800 = !{!3801, !3802}
!3801 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !3795, file: !264, line: 387, type: !3798)
!3802 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !3795, file: !264, line: 387, type: !3799)
!3803 = !DILocation(line: 0, scope: !3795)
!3804 = !DILocation(line: 390, column: 24, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3795, file: !264, line: 390, column: 9)
!3806 = !DILocation(line: 390, column: 9, scope: !3795)
!3807 = !DILocation(line: 394, column: 5, scope: !3795)
!3808 = !DILocation(line: 394, column: 62, scope: !3795)
!3809 = !DILocation(line: 394, column: 74, scope: !3795)
!3810 = !DILocation(line: 395, column: 5, scope: !3795)
!3811 = !DILocation(line: 396, column: 1, scope: !3795)
!3812 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !264, file: !264, line: 403, type: !3813, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!3519, !3496, !378, !378, !378}
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3821}
!3816 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3812, file: !264, line: 403, type: !3496)
!3817 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !3812, file: !264, line: 403, type: !378)
!3818 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !3812, file: !264, line: 403, type: !378)
!3819 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !3812, file: !264, line: 403, type: !378)
!3820 = !DILocalVariable(name: "no", scope: !3812, file: !264, line: 405, type: !175)
!3821 = !DILocalVariable(name: "remainder", scope: !3812, file: !264, line: 406, type: !175)
!3822 = !DILocation(line: 0, scope: !3812)
!3823 = !DILocation(line: 408, column: 19, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3812, file: !264, line: 408, column: 9)
!3825 = !DILocation(line: 408, column: 36, scope: !3824)
!3826 = !DILocation(line: 408, column: 40, scope: !3824)
!3827 = !DILocation(line: 408, column: 9, scope: !3812)
!3828 = !DILocation(line: 413, column: 19, scope: !3812)
!3829 = !DILocation(line: 416, column: 26, scope: !3812)
!3830 = !DILocation(line: 418, column: 9, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3812, file: !264, line: 418, column: 9)
!3832 = !DILocation(line: 0, scope: !3831)
!3833 = !DILocation(line: 418, column: 9, scope: !3812)
!3834 = !DILocation(line: 424, column: 9, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3812, file: !264, line: 424, column: 9)
!3836 = !DILocation(line: 0, scope: !3835)
!3837 = !DILocation(line: 424, column: 9, scope: !3812)
!3838 = !DILocation(line: 430, column: 9, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3812, file: !264, line: 430, column: 9)
!3840 = !DILocation(line: 0, scope: !3839)
!3841 = !DILocation(line: 430, column: 9, scope: !3812)
!3842 = !DILocation(line: 436, column: 1, scope: !3812)
!3843 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !264, file: !264, line: 441, type: !3517, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3844)
!3844 = !{!3845, !3846, !3847, !3848, !3849, !3850, !3851}
!3845 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3843, file: !264, line: 441, type: !3496)
!3846 = !DILocalVariable(name: "no1", scope: !3843, file: !264, line: 443, type: !175)
!3847 = !DILocalVariable(name: "no2", scope: !3843, file: !264, line: 443, type: !175)
!3848 = !DILocalVariable(name: "no3", scope: !3843, file: !264, line: 443, type: !175)
!3849 = !DILocalVariable(name: "remainder1", scope: !3843, file: !264, line: 444, type: !175)
!3850 = !DILocalVariable(name: "remainder2", scope: !3843, file: !264, line: 444, type: !175)
!3851 = !DILocalVariable(name: "remainder3", scope: !3843, file: !264, line: 444, type: !175)
!3852 = !DILocation(line: 0, scope: !3843)
!3853 = !DILocation(line: 446, column: 18, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3843, file: !264, line: 446, column: 9)
!3855 = !DILocation(line: 446, column: 9, scope: !3843)
!3856 = !DILocation(line: 451, column: 20, scope: !3843)
!3857 = !DILocation(line: 454, column: 27, scope: !3843)
!3858 = !DILocation(line: 457, column: 20, scope: !3843)
!3859 = !DILocation(line: 463, column: 20, scope: !3843)
!3860 = !DILocation(line: 469, column: 107, scope: !3843)
!3861 = !DILocation(line: 469, column: 92, scope: !3843)
!3862 = !DILocation(line: 469, column: 5, scope: !3843)
!3863 = !DILocation(line: 469, column: 49, scope: !3843)
!3864 = !DILocation(line: 469, column: 63, scope: !3843)
!3865 = !DILocation(line: 472, column: 89, scope: !3843)
!3866 = !DILocation(line: 472, column: 5, scope: !3843)
!3867 = !DILocation(line: 472, column: 48, scope: !3843)
!3868 = !DILocation(line: 472, column: 61, scope: !3843)
!3869 = !DILocation(line: 475, column: 5, scope: !3843)
!3870 = !DILocation(line: 475, column: 48, scope: !3843)
!3871 = !DILocation(line: 475, column: 61, scope: !3843)
!3872 = !DILocation(line: 478, column: 9, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3843, file: !264, line: 478, column: 9)
!3874 = !DILocation(line: 0, scope: !3873)
!3875 = !DILocation(line: 478, column: 9, scope: !3843)
!3876 = !DILocation(line: 479, column: 55, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3873, file: !264, line: 478, column: 40)
!3878 = !DILocation(line: 480, column: 5, scope: !3877)
!3879 = !DILocation(line: 483, column: 53, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3873, file: !264, line: 482, column: 10)
!3881 = !DILocation(line: 483, column: 67, scope: !3880)
!3882 = !DILocation(line: 484, column: 9, scope: !3880)
!3883 = !DILocation(line: 484, column: 55, scope: !3880)
!3884 = !DILocation(line: 484, column: 71, scope: !3880)
!3885 = !DILocation(line: 485, column: 9, scope: !3880)
!3886 = !DILocation(line: 485, column: 55, scope: !3880)
!3887 = !DILocation(line: 490, column: 5, scope: !3843)
!3888 = !DILocation(line: 490, column: 48, scope: !3843)
!3889 = !DILocation(line: 490, column: 61, scope: !3843)
!3890 = !DILocation(line: 493, column: 5, scope: !3843)
!3891 = !DILocation(line: 493, column: 47, scope: !3843)
!3892 = !DILocation(line: 493, column: 59, scope: !3843)
!3893 = !DILocation(line: 496, column: 108, scope: !3843)
!3894 = !DILocation(line: 496, column: 93, scope: !3843)
!3895 = !DILocation(line: 496, column: 5, scope: !3843)
!3896 = !DILocation(line: 496, column: 50, scope: !3843)
!3897 = !DILocation(line: 496, column: 65, scope: !3843)
!3898 = !DILocation(line: 498, column: 5, scope: !3843)
!3899 = !DILocation(line: 499, column: 1, scope: !3843)
!3900 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !264, file: !264, line: 502, type: !3517, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3901)
!3901 = !{!3902, !3903, !3904, !3905, !3906}
!3902 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3900, file: !264, line: 502, type: !3496)
!3903 = !DILocalVariable(name: "no1", scope: !3900, file: !264, line: 504, type: !175)
!3904 = !DILocalVariable(name: "no2", scope: !3900, file: !264, line: 504, type: !175)
!3905 = !DILocalVariable(name: "remainder1", scope: !3900, file: !264, line: 505, type: !175)
!3906 = !DILocalVariable(name: "remainder2", scope: !3900, file: !264, line: 505, type: !175)
!3907 = !DILocation(line: 0, scope: !3900)
!3908 = !DILocation(line: 507, column: 18, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3900, file: !264, line: 507, column: 9)
!3910 = !DILocation(line: 507, column: 9, scope: !3900)
!3911 = !DILocation(line: 512, column: 20, scope: !3900)
!3912 = !DILocation(line: 515, column: 27, scope: !3900)
!3913 = !DILocation(line: 518, column: 20, scope: !3900)
!3914 = !DILocation(line: 524, column: 107, scope: !3900)
!3915 = !DILocation(line: 524, column: 92, scope: !3900)
!3916 = !DILocation(line: 524, column: 5, scope: !3900)
!3917 = !DILocation(line: 524, column: 49, scope: !3900)
!3918 = !DILocation(line: 524, column: 63, scope: !3900)
!3919 = !DILocation(line: 527, column: 89, scope: !3900)
!3920 = !DILocation(line: 527, column: 5, scope: !3900)
!3921 = !DILocation(line: 527, column: 48, scope: !3900)
!3922 = !DILocation(line: 527, column: 61, scope: !3900)
!3923 = !DILocation(line: 530, column: 9, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3900, file: !264, line: 530, column: 9)
!3925 = !DILocation(line: 0, scope: !3924)
!3926 = !DILocation(line: 530, column: 9, scope: !3900)
!3927 = !DILocation(line: 531, column: 55, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3924, file: !264, line: 530, column: 40)
!3929 = !DILocation(line: 531, column: 71, scope: !3928)
!3930 = !DILocation(line: 532, column: 9, scope: !3928)
!3931 = !DILocation(line: 532, column: 56, scope: !3928)
!3932 = !DILocation(line: 533, column: 5, scope: !3928)
!3933 = !DILocation(line: 536, column: 53, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3924, file: !264, line: 535, column: 10)
!3935 = !DILocation(line: 536, column: 67, scope: !3934)
!3936 = !DILocation(line: 537, column: 9, scope: !3934)
!3937 = !DILocation(line: 537, column: 55, scope: !3934)
!3938 = !DILocation(line: 537, column: 71, scope: !3934)
!3939 = !DILocation(line: 538, column: 9, scope: !3934)
!3940 = !DILocation(line: 538, column: 55, scope: !3934)
!3941 = !DILocation(line: 543, column: 5, scope: !3900)
!3942 = !DILocation(line: 543, column: 48, scope: !3900)
!3943 = !DILocation(line: 543, column: 61, scope: !3900)
!3944 = !DILocation(line: 546, column: 5, scope: !3900)
!3945 = !DILocation(line: 546, column: 47, scope: !3900)
!3946 = !DILocation(line: 546, column: 59, scope: !3900)
!3947 = !DILocation(line: 549, column: 5, scope: !3900)
!3948 = !DILocation(line: 550, column: 1, scope: !3900)
!3949 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !264, file: !264, line: 554, type: !3950, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3952)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!3519, !3496, !362}
!3952 = !{!3953, !3954, !3955, !3956}
!3953 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3949, file: !264, line: 554, type: !3496)
!3954 = !DILocalVariable(name: "driving", arg: 2, scope: !3949, file: !264, line: 554, type: !362)
!3955 = !DILocalVariable(name: "no", scope: !3949, file: !264, line: 556, type: !175)
!3956 = !DILocalVariable(name: "remainder", scope: !3949, file: !264, line: 557, type: !175)
!3957 = !DILocation(line: 0, scope: !3949)
!3958 = !DILocation(line: 559, column: 19, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3949, file: !264, line: 559, column: 9)
!3960 = !DILocation(line: 559, column: 9, scope: !3949)
!3961 = !DILocation(line: 564, column: 19, scope: !3949)
!3962 = !DILocation(line: 569, column: 102, scope: !3949)
!3963 = !DILocation(line: 569, column: 88, scope: !3949)
!3964 = !DILocation(line: 569, column: 5, scope: !3949)
!3965 = !DILocation(line: 569, column: 47, scope: !3949)
!3966 = !DILocation(line: 569, column: 60, scope: !3949)
!3967 = !DILocation(line: 570, column: 71, scope: !3949)
!3968 = !DILocation(line: 570, column: 5, scope: !3949)
!3969 = !DILocation(line: 570, column: 47, scope: !3949)
!3970 = !DILocation(line: 570, column: 60, scope: !3949)
!3971 = !DILocation(line: 571, column: 5, scope: !3949)
!3972 = !DILocation(line: 572, column: 1, scope: !3949)
!3973 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !264, file: !264, line: 575, type: !3974, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3977)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!3519, !3496, !3976}
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!3977 = !{!3978, !3979, !3980, !3981, !3982}
!3978 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3973, file: !264, line: 575, type: !3496)
!3979 = !DILocalVariable(name: "driving", arg: 2, scope: !3973, file: !264, line: 575, type: !3976)
!3980 = !DILocalVariable(name: "no", scope: !3973, file: !264, line: 577, type: !175)
!3981 = !DILocalVariable(name: "remainder", scope: !3973, file: !264, line: 578, type: !175)
!3982 = !DILocalVariable(name: "temp", scope: !3973, file: !264, line: 579, type: !175)
!3983 = !DILocation(line: 0, scope: !3973)
!3984 = !DILocation(line: 581, column: 19, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3973, file: !264, line: 581, column: 9)
!3986 = !DILocation(line: 581, column: 9, scope: !3973)
!3987 = !DILocation(line: 585, column: 14, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3973, file: !264, line: 585, column: 9)
!3989 = !DILocation(line: 585, column: 9, scope: !3973)
!3990 = !DILocation(line: 590, column: 19, scope: !3973)
!3991 = !DILocation(line: 595, column: 12, scope: !3973)
!3992 = !DILocation(line: 595, column: 54, scope: !3973)
!3993 = !DILocation(line: 596, column: 59, scope: !3973)
!3994 = !DILocation(line: 596, column: 45, scope: !3973)
!3995 = !DILocation(line: 596, column: 17, scope: !3973)
!3996 = !DILocation(line: 597, column: 18, scope: !3973)
!3997 = !DILocation(line: 600, column: 56, scope: !3973)
!3998 = !DILocation(line: 600, column: 14, scope: !3973)
!3999 = !DILocation(line: 602, column: 5, scope: !3973)
!4000 = !DILocation(line: 603, column: 1, scope: !3973)
!4001 = distinct !DISubprogram(name: "uart_receive_handler", scope: !547, file: !547, line: 146, type: !4002, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4004)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{null, !653, !211}
!4004 = !{!4005, !4006, !4007, !4009, !4010, !4011, !4012, !4068}
!4005 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4001, file: !547, line: 146, type: !653)
!4006 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4001, file: !547, line: 146, type: !211)
!4007 = !DILocalVariable(name: "channel", scope: !4001, file: !547, line: 148, type: !4008)
!4008 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !557, line: 203, baseType: !556)
!4009 = !DILocalVariable(name: "avail_bytes", scope: !4001, file: !547, line: 149, type: !175)
!4010 = !DILocalVariable(name: "callback", scope: !4001, file: !547, line: 150, type: !662)
!4011 = !DILocalVariable(name: "arg", scope: !4001, file: !547, line: 151, type: !194)
!4012 = !DILocalVariable(name: "uartx", scope: !4001, file: !547, line: 152, type: !4013)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 32)
!4014 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !4015)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !4016)
!4016 = !{!4017, !4023, !4028, !4034, !4035, !4040, !4045, !4046, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4015, file: !78, line: 547, baseType: !4018, size: 32)
!4018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4015, file: !78, line: 543, size: 32, elements: !4019)
!4019 = !{!4020, !4021, !4022}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4018, file: !78, line: 544, baseType: !188, size: 32)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4018, file: !78, line: 545, baseType: !184, size: 32)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4018, file: !78, line: 546, baseType: !184, size: 32)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4015, file: !78, line: 551, baseType: !4024, size: 32, offset: 32)
!4024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4015, file: !78, line: 548, size: 32, elements: !4025)
!4025 = !{!4026, !4027}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4024, file: !78, line: 549, baseType: !184, size: 32)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4024, file: !78, line: 550, baseType: !184, size: 32)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4015, file: !78, line: 556, baseType: !4029, size: 32, offset: 64)
!4029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4015, file: !78, line: 552, size: 32, elements: !4030)
!4030 = !{!4031, !4032, !4033}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4029, file: !78, line: 553, baseType: !188, size: 32)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4029, file: !78, line: 554, baseType: !184, size: 32)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4029, file: !78, line: 555, baseType: !184, size: 32)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4015, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4015, file: !78, line: 561, baseType: !4036, size: 32, offset: 128)
!4036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4015, file: !78, line: 558, size: 32, elements: !4037)
!4037 = !{!4038, !4039}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4036, file: !78, line: 559, baseType: !184, size: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4036, file: !78, line: 560, baseType: !184, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4015, file: !78, line: 565, baseType: !4041, size: 32, offset: 160)
!4041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4015, file: !78, line: 562, size: 32, elements: !4042)
!4042 = !{!4043, !4044}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4041, file: !78, line: 563, baseType: !188, size: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4041, file: !78, line: 564, baseType: !184, size: 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4015, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4015, file: !78, line: 570, baseType: !4047, size: 32, offset: 224)
!4047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4015, file: !78, line: 567, size: 32, elements: !4048)
!4048 = !{!4049, !4050}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4047, file: !78, line: 568, baseType: !184, size: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4047, file: !78, line: 569, baseType: !184, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4015, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4015, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4015, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4015, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4015, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4015, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4015, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4015, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4015, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4015, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4015, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4015, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4015, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4015, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4015, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4015, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4015, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!4068 = !DILocalVariable(name: "status", scope: !4001, file: !547, line: 153, type: !4069)
!4069 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !557, line: 211, baseType: !577)
!4070 = !DILocation(line: 0, scope: !4001)
!4071 = !DILocation(line: 149, column: 5, scope: !4001)
!4072 = !DILocation(line: 155, column: 9, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 155, column: 9)
!4074 = !DILocation(line: 155, column: 36, scope: !4073)
!4075 = !DILocation(line: 155, column: 9, scope: !4001)
!4076 = !DILocation(line: 156, column: 9, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !547, line: 155, column: 70)
!4078 = !DILocation(line: 160, column: 13, scope: !4001)
!4079 = !DILocation(line: 161, column: 15, scope: !4001)
!4080 = !DILocation(line: 163, column: 9, scope: !4001)
!4081 = !DILocation(line: 164, column: 9, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !547, line: 163, column: 29)
!4083 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 163, column: 9)
!4084 = !DILocation(line: 165, column: 5, scope: !4082)
!4085 = !DILocation(line: 167, column: 14, scope: !4001)
!4086 = !DILocation(line: 168, column: 16, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 168, column: 9)
!4088 = !DILocation(line: 168, column: 9, scope: !4001)
!4089 = !DILocation(line: 169, column: 9, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4087, file: !547, line: 168, column: 28)
!4091 = !DILocation(line: 172, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 172, column: 9)
!4093 = !DILocation(line: 172, column: 21, scope: !4092)
!4094 = !DILocation(line: 172, column: 9, scope: !4001)
!4095 = !DILocation(line: 176, column: 43, scope: !4001)
!4096 = !DILocation(line: 178, column: 18, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 178, column: 9)
!4098 = !DILocation(line: 178, column: 9, scope: !4001)
!4099 = !DILocation(line: 179, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4097, file: !547, line: 178, column: 27)
!4101 = !DILocation(line: 177, column: 38, scope: !4001)
!4102 = !DILocation(line: 183, column: 5, scope: !4001)
!4103 = !DILocation(line: 184, column: 5, scope: !4001)
!4104 = !DILocation(line: 185, column: 5, scope: !4001)
!4105 = !DILocation(line: 187, column: 14, scope: !4001)
!4106 = !DILocation(line: 188, column: 16, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 188, column: 9)
!4108 = !DILocation(line: 188, column: 9, scope: !4001)
!4109 = !DILocation(line: 189, column: 9, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4107, file: !547, line: 188, column: 28)
!4111 = !DILocation(line: 192, column: 9, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4001, file: !547, line: 192, column: 9)
!4113 = !DILocation(line: 192, column: 53, scope: !4112)
!4114 = !DILocation(line: 192, column: 21, scope: !4112)
!4115 = !DILocation(line: 192, column: 9, scope: !4001)
!4116 = !DILocation(line: 193, column: 18, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4112, file: !547, line: 192, column: 83)
!4118 = !DILocation(line: 194, column: 20, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4117, file: !547, line: 194, column: 13)
!4120 = !DILocation(line: 194, column: 13, scope: !4117)
!4121 = !DILocation(line: 195, column: 13, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4119, file: !547, line: 194, column: 32)
!4123 = !DILocation(line: 199, column: 1, scope: !4001)
!4124 = distinct !DISubprogram(name: "uart_send_handler", scope: !547, file: !547, line: 210, type: !4002, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4125)
!4125 = !{!4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133}
!4126 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4124, file: !547, line: 210, type: !653)
!4127 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4124, file: !547, line: 210, type: !211)
!4128 = !DILocalVariable(name: "channel", scope: !4124, file: !547, line: 212, type: !4008)
!4129 = !DILocalVariable(name: "status", scope: !4124, file: !547, line: 213, type: !4069)
!4130 = !DILocalVariable(name: "compare_space", scope: !4124, file: !547, line: 214, type: !175)
!4131 = !DILocalVariable(name: "avail_space", scope: !4124, file: !547, line: 214, type: !175)
!4132 = !DILocalVariable(name: "callback", scope: !4124, file: !547, line: 215, type: !662)
!4133 = !DILocalVariable(name: "arg", scope: !4124, file: !547, line: 216, type: !194)
!4134 = !DILocation(line: 0, scope: !4124)
!4135 = !DILocation(line: 214, column: 5, scope: !4124)
!4136 = !DILocation(line: 221, column: 9, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4124, file: !547, line: 221, column: 9)
!4138 = !DILocation(line: 221, column: 36, scope: !4137)
!4139 = !DILocation(line: 221, column: 9, scope: !4124)
!4140 = !DILocation(line: 222, column: 9, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4137, file: !547, line: 221, column: 70)
!4142 = !DILocation(line: 226, column: 15, scope: !4124)
!4143 = !DILocation(line: 228, column: 9, scope: !4124)
!4144 = !DILocation(line: 253, column: 47, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !547, line: 252, column: 12)
!4146 = distinct !DILexicalBlock(scope: !4124, file: !547, line: 228, column: 9)
!4147 = !DILocation(line: 255, column: 22, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4145, file: !547, line: 255, column: 13)
!4149 = !DILocation(line: 255, column: 13, scope: !4145)
!4150 = !DILocation(line: 256, column: 13, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4148, file: !547, line: 255, column: 31)
!4152 = !DILocation(line: 254, column: 42, scope: !4145)
!4153 = !DILocation(line: 260, column: 9, scope: !4145)
!4154 = !DILocation(line: 261, column: 9, scope: !4145)
!4155 = !DILocation(line: 262, column: 9, scope: !4145)
!4156 = !DILocation(line: 264, column: 18, scope: !4145)
!4157 = !DILocation(line: 265, column: 20, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4145, file: !547, line: 265, column: 13)
!4159 = !DILocation(line: 265, column: 13, scope: !4145)
!4160 = !DILocation(line: 266, column: 13, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4158, file: !547, line: 265, column: 32)
!4162 = !DILocation(line: 269, column: 54, scope: !4145)
!4163 = !DILocation(line: 270, column: 56, scope: !4145)
!4164 = !DILocation(line: 270, column: 25, scope: !4145)
!4165 = !DILocation(line: 271, column: 13, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4145, file: !547, line: 271, column: 13)
!4167 = !DILocation(line: 271, column: 25, scope: !4166)
!4168 = !DILocation(line: 271, column: 13, scope: !4145)
!4169 = !DILocation(line: 272, column: 22, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 271, column: 43)
!4171 = !DILocation(line: 273, column: 24, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4170, file: !547, line: 273, column: 17)
!4173 = !DILocation(line: 273, column: 17, scope: !4170)
!4174 = !DILocation(line: 274, column: 17, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4172, file: !547, line: 273, column: 36)
!4176 = !DILocation(line: 279, column: 1, scope: !4124)
!4177 = distinct !DISubprogram(name: "uart_error_handler", scope: !547, file: !547, line: 282, type: !4178, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4180)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{null, !653}
!4180 = !{!4181, !4182, !4183, !4184}
!4181 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4177, file: !547, line: 282, type: !653)
!4182 = !DILocalVariable(name: "uartx", scope: !4177, file: !547, line: 284, type: !4013)
!4183 = !DILocalVariable(name: "callback", scope: !4177, file: !547, line: 285, type: !662)
!4184 = !DILocalVariable(name: "arg", scope: !4177, file: !547, line: 286, type: !194)
!4185 = !DILocation(line: 0, scope: !4177)
!4186 = !DILocation(line: 288, column: 13, scope: !4177)
!4187 = !DILocation(line: 290, column: 10, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4177, file: !547, line: 290, column: 9)
!4189 = !DILocation(line: 290, column: 9, scope: !4177)
!4190 = !DILocation(line: 291, column: 9, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4188, file: !547, line: 290, column: 36)
!4192 = !DILocation(line: 292, column: 9, scope: !4191)
!4193 = !DILocation(line: 293, column: 47, scope: !4191)
!4194 = !DILocation(line: 295, column: 22, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !547, line: 295, column: 13)
!4196 = !DILocation(line: 295, column: 13, scope: !4191)
!4197 = !DILocation(line: 296, column: 13, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !547, line: 295, column: 31)
!4199 = !DILocation(line: 294, column: 42, scope: !4191)
!4200 = !DILocation(line: 299, column: 9, scope: !4191)
!4201 = !DILocation(line: 300, column: 5, scope: !4191)
!4202 = !DILocation(line: 301, column: 1, scope: !4177)
!4203 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !547, file: !547, line: 416, type: !4204, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4208)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!4206, !653, !4207}
!4206 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !572, line: 351, baseType: !588)
!4207 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !572, line: 317, baseType: !595)
!4208 = !{!4209, !4210, !4211, !4212, !4213}
!4209 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4203, file: !547, line: 416, type: !653)
!4210 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4203, file: !547, line: 416, type: !4207)
!4211 = !DILocalVariable(name: "actual_baudrate", scope: !4203, file: !547, line: 418, type: !175)
!4212 = !DILocalVariable(name: "irq_status", scope: !4203, file: !547, line: 418, type: !175)
!4213 = !DILocalVariable(name: "uartx", scope: !4203, file: !547, line: 419, type: !4013)
!4214 = !DILocation(line: 0, scope: !4203)
!4215 = !DILocation(line: 421, column: 11, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4203, file: !547, line: 421, column: 9)
!4217 = !DILocation(line: 421, column: 42, scope: !4216)
!4218 = !DILocation(line: 422, column: 11, scope: !4216)
!4219 = !DILocation(line: 421, column: 9, scope: !4203)
!4220 = !DILocation(line: 426, column: 9, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4203, file: !547, line: 426, column: 9)
!4222 = !DILocation(line: 426, column: 36, scope: !4221)
!4223 = !DILocation(line: 426, column: 9, scope: !4203)
!4224 = !DILocation(line: 430, column: 18, scope: !4203)
!4225 = !DILocation(line: 434, column: 5, scope: !4203)
!4226 = !DILocation(line: 436, column: 13, scope: !4203)
!4227 = !DILocation(line: 437, column: 23, scope: !4203)
!4228 = !DILocation(line: 439, column: 5, scope: !4203)
!4229 = !DILocation(line: 441, column: 5, scope: !4203)
!4230 = !DILocation(line: 442, column: 1, scope: !4203)
!4231 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !547, file: !547, line: 120, type: !4232, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4234)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!211, !653}
!4234 = !{!4235}
!4235 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4231, file: !547, line: 120, type: !653)
!4236 = !DILocation(line: 0, scope: !4231)
!4237 = !DILocation(line: 122, column: 23, scope: !4231)
!4238 = !DILocation(line: 122, column: 5, scope: !4231)
!4239 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !547, file: !547, line: 125, type: !4240, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4242)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{!211, !4207}
!4242 = !{!4243}
!4243 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4239, file: !547, line: 125, type: !4207)
!4244 = !DILocation(line: 0, scope: !4239)
!4245 = !DILocation(line: 127, column: 22, scope: !4239)
!4246 = !DILocation(line: 127, column: 5, scope: !4239)
!4247 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !547, file: !547, line: 444, type: !4248, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4262)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!4206, !653, !4250}
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 32)
!4251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4252)
!4252 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !572, line: 378, baseType: !4253)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 373, size: 128, elements: !4254)
!4254 = !{!4255, !4256, !4258, !4260}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4253, file: !572, line: 374, baseType: !4207, size: 32)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4253, file: !572, line: 375, baseType: !4257, size: 32, offset: 32)
!4257 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !572, line: 326, baseType: !611)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4253, file: !572, line: 376, baseType: !4259, size: 32, offset: 64)
!4259 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !572, line: 333, baseType: !617)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4253, file: !572, line: 377, baseType: !4261, size: 32, offset: 96)
!4261 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !572, line: 341, baseType: !621)
!4262 = !{!4263, !4264, !4265, !4266}
!4263 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4247, file: !547, line: 444, type: !653)
!4264 = !DILocalVariable(name: "config", arg: 2, scope: !4247, file: !547, line: 445, type: !4250)
!4265 = !DILocalVariable(name: "irq_status", scope: !4247, file: !547, line: 447, type: !175)
!4266 = !DILocalVariable(name: "uartx", scope: !4247, file: !547, line: 448, type: !4013)
!4267 = !DILocation(line: 0, scope: !4247)
!4268 = !DILocation(line: 450, column: 11, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4247, file: !547, line: 450, column: 9)
!4270 = !DILocation(line: 450, column: 42, scope: !4269)
!4271 = !DILocation(line: 451, column: 11, scope: !4269)
!4272 = !DILocation(line: 450, column: 9, scope: !4247)
!4273 = !DILocation(line: 455, column: 9, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4247, file: !547, line: 455, column: 9)
!4275 = !DILocation(line: 455, column: 36, scope: !4274)
!4276 = !DILocation(line: 455, column: 9, scope: !4247)
!4277 = !DILocation(line: 459, column: 18, scope: !4247)
!4278 = !DILocation(line: 466, column: 5, scope: !4247)
!4279 = !DILocation(line: 468, column: 13, scope: !4247)
!4280 = !DILocation(line: 470, column: 46, scope: !4247)
!4281 = !DILocation(line: 470, column: 5, scope: !4247)
!4282 = !DILocation(line: 471, column: 36, scope: !4247)
!4283 = !DILocation(line: 471, column: 57, scope: !4247)
!4284 = !DILocation(line: 471, column: 75, scope: !4247)
!4285 = !DILocation(line: 471, column: 5, scope: !4247)
!4286 = !DILocation(line: 473, column: 5, scope: !4247)
!4287 = !DILocation(line: 474, column: 1, scope: !4247)
!4288 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !547, file: !547, line: 130, type: !4289, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4291)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{!211, !4250}
!4291 = !{!4292}
!4292 = !DILocalVariable(name: "config", arg: 1, scope: !4288, file: !547, line: 130, type: !4250)
!4293 = !DILocation(line: 0, scope: !4288)
!4294 = !DILocation(line: 132, column: 22, scope: !4288)
!4295 = !DILocation(line: 132, column: 31, scope: !4288)
!4296 = !DILocation(line: 132, column: 56, scope: !4288)
!4297 = !DILocation(line: 133, column: 22, scope: !4288)
!4298 = !DILocation(line: 133, column: 34, scope: !4288)
!4299 = !DILocation(line: 133, column: 61, scope: !4288)
!4300 = !DILocation(line: 134, column: 22, scope: !4288)
!4301 = !DILocation(line: 134, column: 31, scope: !4288)
!4302 = !DILocation(line: 134, column: 55, scope: !4288)
!4303 = !DILocation(line: 135, column: 22, scope: !4288)
!4304 = !DILocation(line: 135, column: 29, scope: !4288)
!4305 = !DILocation(line: 132, column: 5, scope: !4288)
!4306 = distinct !DISubprogram(name: "hal_uart_init", scope: !547, file: !547, line: 476, type: !4307, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4310)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!4206, !653, !4309}
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 32)
!4310 = !{!4311, !4312, !4313, !4314, !4315, !4316, !4317}
!4311 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4306, file: !547, line: 476, type: !653)
!4312 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4306, file: !547, line: 476, type: !4309)
!4313 = !DILocalVariable(name: "uartx", scope: !4306, file: !547, line: 478, type: !4013)
!4314 = !DILocalVariable(name: "i", scope: !4306, file: !547, line: 479, type: !175)
!4315 = !DILocalVariable(name: "actual_baudrate", scope: !4306, file: !547, line: 479, type: !175)
!4316 = !DILocalVariable(name: "irq_status", scope: !4306, file: !547, line: 479, type: !175)
!4317 = !DILocalVariable(name: "status", scope: !4306, file: !547, line: 480, type: !4318)
!4318 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !627, line: 106, baseType: !626)
!4319 = !DILocation(line: 0, scope: !4306)
!4320 = !DILocation(line: 482, column: 11, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4306, file: !547, line: 482, column: 9)
!4322 = !DILocation(line: 482, column: 42, scope: !4321)
!4323 = !DILocation(line: 483, column: 11, scope: !4321)
!4324 = !DILocation(line: 482, column: 9, scope: !4306)
!4325 = !DILocation(line: 487, column: 18, scope: !4306)
!4326 = !DILocation(line: 488, column: 9, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4306, file: !547, line: 488, column: 9)
!4328 = !DILocation(line: 488, column: 36, scope: !4327)
!4329 = !DILocation(line: 488, column: 9, scope: !4306)
!4330 = !DILocation(line: 489, column: 9, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !547, line: 488, column: 68)
!4332 = !DILocation(line: 490, column: 9, scope: !4331)
!4333 = !DILocation(line: 502, column: 9, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4306, file: !547, line: 502, column: 9)
!4335 = !DILocation(line: 502, column: 9, scope: !4306)
!4336 = !DILocation(line: 504, column: 13, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !547, line: 503, column: 44)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !547, line: 503, column: 9)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !547, line: 503, column: 9)
!4340 = distinct !DILexicalBlock(scope: !4334, file: !547, line: 502, column: 50)
!4341 = !DILocation(line: 504, column: 32, scope: !4337)
!4342 = !DILocation(line: 510, column: 32, scope: !4337)
!4343 = !DILocation(line: 510, column: 36, scope: !4337)
!4344 = !DILocation(line: 511, column: 32, scope: !4337)
!4345 = !DILocation(line: 511, column: 37, scope: !4337)
!4346 = !DILocation(line: 503, column: 40, scope: !4338)
!4347 = !DILocation(line: 503, column: 23, scope: !4338)
!4348 = !DILocation(line: 503, column: 9, scope: !4339)
!4349 = distinct !{!4349, !4348, !4350}
!4350 = !DILocation(line: 512, column: 9, scope: !4339)
!4351 = !DILocation(line: 513, column: 40, scope: !4340)
!4352 = !DILocation(line: 514, column: 5, scope: !4340)
!4353 = !DILocation(line: 521, column: 32, scope: !4306)
!4354 = !DILocation(line: 522, column: 5, scope: !4306)
!4355 = !DILocation(line: 524, column: 31, scope: !4306)
!4356 = !DILocation(line: 524, column: 14, scope: !4306)
!4357 = !DILocation(line: 525, column: 16, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4306, file: !547, line: 525, column: 9)
!4359 = !DILocation(line: 525, column: 9, scope: !4306)
!4360 = !DILocation(line: 526, column: 9, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4358, file: !547, line: 525, column: 40)
!4362 = !DILocation(line: 530, column: 13, scope: !4306)
!4363 = !DILocation(line: 532, column: 5, scope: !4306)
!4364 = !DILocation(line: 533, column: 56, scope: !4306)
!4365 = !DILocation(line: 533, column: 23, scope: !4306)
!4366 = !DILocation(line: 534, column: 5, scope: !4306)
!4367 = !DILocation(line: 535, column: 41, scope: !4306)
!4368 = !DILocation(line: 535, column: 67, scope: !4306)
!4369 = !DILocation(line: 535, column: 90, scope: !4306)
!4370 = !DILocation(line: 535, column: 5, scope: !4306)
!4371 = !DILocation(line: 536, column: 5, scope: !4306)
!4372 = !DILocation(line: 541, column: 5, scope: !4306)
!4373 = !DILocation(line: 542, column: 1, scope: !4306)
!4374 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !547, file: !547, line: 544, type: !4375, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!4206, !653}
!4377 = !{!4378, !4379, !4380, !4381, !4382, !4383, !4384}
!4378 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4374, file: !547, line: 544, type: !653)
!4379 = !DILocalVariable(name: "uartx", scope: !4374, file: !547, line: 546, type: !4013)
!4380 = !DILocalVariable(name: "tx_dma_channel", scope: !4374, file: !547, line: 547, type: !4008)
!4381 = !DILocalVariable(name: "rx_dma_channel", scope: !4374, file: !547, line: 547, type: !4008)
!4382 = !DILocalVariable(name: "irq_status", scope: !4374, file: !547, line: 548, type: !175)
!4383 = !DILocalVariable(name: "status", scope: !4374, file: !547, line: 549, type: !4069)
!4384 = !DILocalVariable(name: "clock_status", scope: !4374, file: !547, line: 550, type: !4318)
!4385 = !DILocation(line: 0, scope: !4374)
!4386 = !DILocation(line: 552, column: 10, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4374, file: !547, line: 552, column: 9)
!4388 = !DILocation(line: 552, column: 9, scope: !4374)
!4389 = !DILocation(line: 556, column: 18, scope: !4374)
!4390 = !DILocation(line: 557, column: 9, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4374, file: !547, line: 557, column: 9)
!4392 = !DILocation(line: 557, column: 36, scope: !4391)
!4393 = !DILocation(line: 557, column: 9, scope: !4374)
!4394 = !DILocation(line: 562, column: 13, scope: !4374)
!4395 = !DILocation(line: 565, column: 5, scope: !4374)
!4396 = !DILocation(line: 568, column: 9, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4374, file: !547, line: 568, column: 9)
!4398 = !DILocation(line: 568, column: 36, scope: !4397)
!4399 = !DILocation(line: 568, column: 9, scope: !4374)
!4400 = !DILocation(line: 569, column: 26, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4397, file: !547, line: 568, column: 70)
!4402 = !DILocation(line: 570, column: 26, scope: !4401)
!4403 = !DILocation(line: 572, column: 18, scope: !4401)
!4404 = !DILocation(line: 573, column: 20, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4401, file: !547, line: 573, column: 13)
!4406 = !DILocation(line: 573, column: 13, scope: !4401)
!4407 = !DILocation(line: 574, column: 13, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4405, file: !547, line: 573, column: 32)
!4409 = !DILocation(line: 575, column: 13, scope: !4408)
!4410 = !DILocation(line: 578, column: 18, scope: !4401)
!4411 = !DILocation(line: 579, column: 20, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4401, file: !547, line: 579, column: 13)
!4413 = !DILocation(line: 579, column: 13, scope: !4401)
!4414 = !DILocation(line: 580, column: 13, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !547, line: 579, column: 32)
!4416 = !DILocation(line: 581, column: 13, scope: !4415)
!4417 = !DILocation(line: 584, column: 18, scope: !4401)
!4418 = !DILocation(line: 585, column: 20, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4401, file: !547, line: 585, column: 13)
!4420 = !DILocation(line: 585, column: 13, scope: !4401)
!4421 = !DILocation(line: 586, column: 13, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4419, file: !547, line: 585, column: 32)
!4423 = !DILocation(line: 587, column: 13, scope: !4422)
!4424 = !DILocation(line: 590, column: 18, scope: !4401)
!4425 = !DILocation(line: 591, column: 20, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4401, file: !547, line: 591, column: 13)
!4427 = !DILocation(line: 591, column: 13, scope: !4401)
!4428 = !DILocation(line: 592, column: 13, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4426, file: !547, line: 591, column: 32)
!4430 = !DILocation(line: 593, column: 13, scope: !4429)
!4431 = !DILocation(line: 596, column: 18, scope: !4401)
!4432 = !DILocation(line: 597, column: 20, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4401, file: !547, line: 597, column: 13)
!4434 = !DILocation(line: 597, column: 13, scope: !4401)
!4435 = !DILocation(line: 598, column: 13, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4433, file: !547, line: 597, column: 32)
!4437 = !DILocation(line: 599, column: 13, scope: !4436)
!4438 = !DILocation(line: 602, column: 18, scope: !4401)
!4439 = !DILocation(line: 603, column: 20, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4401, file: !547, line: 603, column: 13)
!4441 = !DILocation(line: 603, column: 13, scope: !4401)
!4442 = !DILocation(line: 604, column: 13, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4440, file: !547, line: 603, column: 32)
!4444 = !DILocation(line: 605, column: 13, scope: !4443)
!4445 = !DILocation(line: 608, column: 30, scope: !4401)
!4446 = !DILocation(line: 608, column: 9, scope: !4401)
!4447 = !DILocation(line: 609, column: 5, scope: !4401)
!4448 = !DILocation(line: 610, column: 5, scope: !4374)
!4449 = !DILocation(line: 611, column: 38, scope: !4374)
!4450 = !DILocation(line: 611, column: 20, scope: !4374)
!4451 = !DILocation(line: 612, column: 22, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4374, file: !547, line: 612, column: 9)
!4453 = !DILocation(line: 612, column: 9, scope: !4374)
!4454 = !DILocation(line: 613, column: 9, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4452, file: !547, line: 612, column: 46)
!4456 = !DILocation(line: 614, column: 9, scope: !4455)
!4457 = !DILocation(line: 618, column: 32, scope: !4374)
!4458 = !DILocation(line: 618, column: 37, scope: !4374)
!4459 = !DILocation(line: 619, column: 32, scope: !4374)
!4460 = !DILocation(line: 619, column: 36, scope: !4374)
!4461 = !DILocation(line: 635, column: 32, scope: !4374)
!4462 = !DILocation(line: 639, column: 5, scope: !4374)
!4463 = !DILocation(line: 640, column: 1, scope: !4374)
!4464 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !547, file: !547, line: 642, type: !4465, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4467)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{null, !653, !1400}
!4467 = !{!4468, !4469, !4470}
!4468 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4464, file: !547, line: 642, type: !653)
!4469 = !DILocalVariable(name: "byte", arg: 2, scope: !4464, file: !547, line: 642, type: !1400)
!4470 = !DILocalVariable(name: "uartx", scope: !4464, file: !547, line: 644, type: !4013)
!4471 = !DILocation(line: 0, scope: !4464)
!4472 = !DILocation(line: 646, column: 10, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4464, file: !547, line: 646, column: 9)
!4474 = !DILocation(line: 646, column: 9, scope: !4464)
!4475 = !DILocation(line: 650, column: 9, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4464, file: !547, line: 650, column: 9)
!4477 = !DILocation(line: 650, column: 36, scope: !4476)
!4478 = !DILocation(line: 650, column: 9, scope: !4464)
!4479 = !DILocation(line: 654, column: 13, scope: !4464)
!4480 = !DILocation(line: 655, column: 5, scope: !4464)
!4481 = !DILocation(line: 656, column: 1, scope: !4464)
!4482 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !547, file: !547, line: 658, type: !4483, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4487)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!175, !653, !4485, !175}
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 32)
!4486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !378)
!4487 = !{!4488, !4489, !4490, !4491}
!4488 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4482, file: !547, line: 658, type: !653)
!4489 = !DILocalVariable(name: "data", arg: 2, scope: !4482, file: !547, line: 658, type: !4485)
!4490 = !DILocalVariable(name: "size", arg: 3, scope: !4482, file: !547, line: 658, type: !175)
!4491 = !DILocalVariable(name: "i", scope: !4482, file: !547, line: 660, type: !175)
!4492 = !DILocation(line: 0, scope: !4482)
!4493 = !DILocation(line: 662, column: 11, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4482, file: !547, line: 662, column: 9)
!4495 = !DILocation(line: 662, column: 42, scope: !4494)
!4496 = !DILocation(line: 666, column: 9, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4482, file: !547, line: 666, column: 9)
!4498 = !DILocation(line: 666, column: 36, scope: !4497)
!4499 = !DILocation(line: 666, column: 9, scope: !4482)
!4500 = !DILocation(line: 671, column: 38, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !547, line: 670, column: 32)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !547, line: 670, column: 5)
!4503 = distinct !DILexicalBlock(scope: !4482, file: !547, line: 670, column: 5)
!4504 = !DILocation(line: 671, column: 9, scope: !4501)
!4505 = !DILocation(line: 672, column: 13, scope: !4501)
!4506 = !DILocation(line: 670, column: 28, scope: !4502)
!4507 = !DILocation(line: 670, column: 19, scope: !4502)
!4508 = !DILocation(line: 670, column: 5, scope: !4503)
!4509 = distinct !{!4509, !4508, !4510}
!4510 = !DILocation(line: 673, column: 5, scope: !4503)
!4511 = !DILocation(line: 676, column: 1, scope: !4482)
!4512 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !547, file: !547, line: 678, type: !4483, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4513)
!4513 = !{!4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521}
!4514 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4512, file: !547, line: 678, type: !653)
!4515 = !DILocalVariable(name: "data", arg: 2, scope: !4512, file: !547, line: 678, type: !4485)
!4516 = !DILocalVariable(name: "size", arg: 3, scope: !4512, file: !547, line: 678, type: !175)
!4517 = !DILocalVariable(name: "channel", scope: !4512, file: !547, line: 680, type: !4008)
!4518 = !DILocalVariable(name: "i", scope: !4512, file: !547, line: 681, type: !175)
!4519 = !DILocalVariable(name: "real_count", scope: !4512, file: !547, line: 681, type: !175)
!4520 = !DILocalVariable(name: "avail_space", scope: !4512, file: !547, line: 681, type: !175)
!4521 = !DILocalVariable(name: "status", scope: !4512, file: !547, line: 682, type: !4069)
!4522 = !DILocation(line: 0, scope: !4512)
!4523 = !DILocation(line: 681, column: 5, scope: !4512)
!4524 = !DILocation(line: 687, column: 11, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 687, column: 9)
!4526 = !DILocation(line: 687, column: 42, scope: !4525)
!4527 = !DILocation(line: 691, column: 9, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 691, column: 9)
!4529 = !DILocation(line: 691, column: 36, scope: !4528)
!4530 = !DILocation(line: 691, column: 9, scope: !4512)
!4531 = !DILocation(line: 704, column: 15, scope: !4512)
!4532 = !DILocation(line: 706, column: 14, scope: !4512)
!4533 = !DILocation(line: 707, column: 16, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 707, column: 9)
!4535 = !DILocation(line: 707, column: 9, scope: !4512)
!4536 = !DILocation(line: 708, column: 9, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4534, file: !547, line: 707, column: 28)
!4538 = !DILocation(line: 712, column: 9, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 712, column: 9)
!4540 = !DILocation(line: 712, column: 21, scope: !4539)
!4541 = !DILocation(line: 717, column: 19, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !547, line: 717, column: 5)
!4543 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 717, column: 5)
!4544 = !DILocation(line: 717, column: 5, scope: !4543)
!4545 = distinct !{!4545, !4544, !4546}
!4546 = !DILocation(line: 723, column: 5, scope: !4543)
!4547 = !DILocation(line: 718, column: 42, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4542, file: !547, line: 717, column: 38)
!4549 = !DILocation(line: 718, column: 18, scope: !4548)
!4550 = !DILocation(line: 719, column: 20, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4548, file: !547, line: 719, column: 13)
!4552 = !DILocation(line: 717, column: 34, scope: !4542)
!4553 = !DILocation(line: 719, column: 13, scope: !4548)
!4554 = !DILocation(line: 720, column: 13, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !547, line: 719, column: 32)
!4556 = !DILocation(line: 728, column: 23, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 728, column: 9)
!4558 = !DILocation(line: 728, column: 20, scope: !4557)
!4559 = !DILocation(line: 728, column: 9, scope: !4512)
!4560 = !DILocation(line: 729, column: 18, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4557, file: !547, line: 728, column: 36)
!4562 = !DILocation(line: 730, column: 20, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4561, file: !547, line: 730, column: 13)
!4564 = !DILocation(line: 730, column: 13, scope: !4561)
!4565 = !DILocation(line: 731, column: 13, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !547, line: 730, column: 32)
!4567 = !DILocation(line: 737, column: 1, scope: !4512)
!4568 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !547, file: !547, line: 739, type: !4569, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4571)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!1400, !653}
!4571 = !{!4572, !4573, !4574}
!4572 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4568, file: !547, line: 739, type: !653)
!4573 = !DILocalVariable(name: "data", scope: !4568, file: !547, line: 741, type: !1400)
!4574 = !DILocalVariable(name: "uartx", scope: !4568, file: !547, line: 742, type: !4013)
!4575 = !DILocation(line: 0, scope: !4568)
!4576 = !DILocation(line: 744, column: 10, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4568, file: !547, line: 744, column: 9)
!4578 = !DILocation(line: 744, column: 9, scope: !4568)
!4579 = !DILocation(line: 748, column: 9, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4568, file: !547, line: 748, column: 9)
!4581 = !DILocation(line: 748, column: 36, scope: !4580)
!4582 = !DILocation(line: 748, column: 9, scope: !4568)
!4583 = !DILocation(line: 752, column: 13, scope: !4568)
!4584 = !DILocation(line: 754, column: 12, scope: !4568)
!4585 = !DILocation(line: 756, column: 5, scope: !4568)
!4586 = !DILocation(line: 757, column: 1, scope: !4568)
!4587 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !547, file: !547, line: 759, type: !4588, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4590)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{!175, !653}
!4590 = !{!4591, !4592, !4593}
!4591 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4587, file: !547, line: 759, type: !653)
!4592 = !DILocalVariable(name: "data", scope: !4587, file: !547, line: 761, type: !175)
!4593 = !DILocalVariable(name: "uartx", scope: !4587, file: !547, line: 762, type: !4013)
!4594 = !DILocation(line: 0, scope: !4587)
!4595 = !DILocation(line: 764, column: 10, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4587, file: !547, line: 764, column: 9)
!4597 = !DILocation(line: 764, column: 9, scope: !4587)
!4598 = !DILocation(line: 768, column: 9, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4587, file: !547, line: 768, column: 9)
!4600 = !DILocation(line: 768, column: 36, scope: !4599)
!4601 = !DILocation(line: 768, column: 9, scope: !4587)
!4602 = !DILocation(line: 772, column: 13, scope: !4587)
!4603 = !DILocation(line: 774, column: 12, scope: !4587)
!4604 = !DILocation(line: 776, column: 5, scope: !4587)
!4605 = !DILocation(line: 777, column: 1, scope: !4587)
!4606 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !547, file: !547, line: 779, type: !4607, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4609)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!175, !653, !680, !175}
!4609 = !{!4610, !4611, !4612, !4613, !4614}
!4610 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4606, file: !547, line: 779, type: !653)
!4611 = !DILocalVariable(name: "buffer", arg: 2, scope: !4606, file: !547, line: 779, type: !680)
!4612 = !DILocalVariable(name: "size", arg: 3, scope: !4606, file: !547, line: 779, type: !175)
!4613 = !DILocalVariable(name: "i", scope: !4606, file: !547, line: 781, type: !175)
!4614 = !DILocalVariable(name: "pbuf", scope: !4606, file: !547, line: 782, type: !680)
!4615 = !DILocation(line: 0, scope: !4606)
!4616 = !DILocation(line: 784, column: 11, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4606, file: !547, line: 784, column: 9)
!4618 = !DILocation(line: 784, column: 42, scope: !4617)
!4619 = !DILocation(line: 789, column: 9, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4606, file: !547, line: 789, column: 9)
!4621 = !DILocation(line: 789, column: 36, scope: !4620)
!4622 = !DILocation(line: 789, column: 9, scope: !4606)
!4623 = !DILocation(line: 794, column: 19, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !547, line: 793, column: 32)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !547, line: 793, column: 5)
!4626 = distinct !DILexicalBlock(scope: !4606, file: !547, line: 793, column: 5)
!4627 = !DILocation(line: 794, column: 9, scope: !4624)
!4628 = !DILocation(line: 794, column: 17, scope: !4624)
!4629 = !DILocation(line: 793, column: 28, scope: !4625)
!4630 = !DILocation(line: 793, column: 19, scope: !4625)
!4631 = !DILocation(line: 793, column: 5, scope: !4626)
!4632 = distinct !{!4632, !4631, !4633}
!4633 = !DILocation(line: 795, column: 5, scope: !4626)
!4634 = !DILocation(line: 798, column: 1, scope: !4606)
!4635 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !547, file: !547, line: 800, type: !4607, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4636)
!4636 = !{!4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644}
!4637 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4635, file: !547, line: 800, type: !653)
!4638 = !DILocalVariable(name: "buffer", arg: 2, scope: !4635, file: !547, line: 800, type: !680)
!4639 = !DILocalVariable(name: "size", arg: 3, scope: !4635, file: !547, line: 800, type: !175)
!4640 = !DILocalVariable(name: "channel", scope: !4635, file: !547, line: 802, type: !4008)
!4641 = !DILocalVariable(name: "receive_count", scope: !4635, file: !547, line: 803, type: !175)
!4642 = !DILocalVariable(name: "avail_count", scope: !4635, file: !547, line: 803, type: !175)
!4643 = !DILocalVariable(name: "index", scope: !4635, file: !547, line: 804, type: !175)
!4644 = !DILocalVariable(name: "status", scope: !4635, file: !547, line: 805, type: !4069)
!4645 = !DILocation(line: 0, scope: !4635)
!4646 = !DILocation(line: 803, column: 5, scope: !4635)
!4647 = !DILocation(line: 807, column: 11, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 807, column: 9)
!4649 = !DILocation(line: 807, column: 42, scope: !4648)
!4650 = !DILocation(line: 813, column: 9, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 813, column: 9)
!4652 = !DILocation(line: 813, column: 36, scope: !4651)
!4653 = !DILocation(line: 813, column: 9, scope: !4635)
!4654 = !DILocation(line: 817, column: 15, scope: !4635)
!4655 = !DILocation(line: 819, column: 14, scope: !4635)
!4656 = !DILocation(line: 820, column: 16, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 820, column: 9)
!4658 = !DILocation(line: 820, column: 9, scope: !4635)
!4659 = !DILocation(line: 821, column: 9, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4657, file: !547, line: 820, column: 28)
!4661 = !DILocation(line: 825, column: 9, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 825, column: 9)
!4663 = !DILocation(line: 825, column: 21, scope: !4662)
!4664 = !DILocation(line: 830, column: 27, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !547, line: 830, column: 5)
!4666 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 830, column: 5)
!4667 = !DILocation(line: 830, column: 5, scope: !4666)
!4668 = distinct !{!4668, !4667, !4669}
!4669 = !DILocation(line: 836, column: 5, scope: !4666)
!4670 = !DILocation(line: 831, column: 42, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4665, file: !547, line: 830, column: 53)
!4672 = !DILocation(line: 831, column: 18, scope: !4671)
!4673 = !DILocation(line: 832, column: 20, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4671, file: !547, line: 832, column: 13)
!4675 = !DILocation(line: 830, column: 49, scope: !4665)
!4676 = !DILocation(line: 832, column: 13, scope: !4671)
!4677 = !DILocation(line: 833, column: 13, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !547, line: 832, column: 32)
!4679 = !DILocation(line: 841, column: 26, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 841, column: 9)
!4681 = !DILocation(line: 841, column: 23, scope: !4680)
!4682 = !DILocation(line: 841, column: 9, scope: !4635)
!4683 = !DILocation(line: 842, column: 18, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !547, line: 841, column: 39)
!4685 = !DILocation(line: 843, column: 20, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4684, file: !547, line: 843, column: 13)
!4687 = !DILocation(line: 843, column: 13, scope: !4684)
!4688 = !DILocation(line: 844, column: 13, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !547, line: 843, column: 32)
!4690 = !DILocation(line: 850, column: 1, scope: !4635)
!4691 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !547, file: !547, line: 891, type: !4692, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4694)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!4206, !653, !662, !194}
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702}
!4695 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4691, file: !547, line: 891, type: !653)
!4696 = !DILocalVariable(name: "user_callback", arg: 2, scope: !4691, file: !547, line: 892, type: !662)
!4697 = !DILocalVariable(name: "user_data", arg: 3, scope: !4691, file: !547, line: 893, type: !194)
!4698 = !DILocalVariable(name: "tx_dma_channel", scope: !4691, file: !547, line: 895, type: !4008)
!4699 = !DILocalVariable(name: "rx_dma_channel", scope: !4691, file: !547, line: 895, type: !4008)
!4700 = !DILocalVariable(name: "irq_status", scope: !4691, file: !547, line: 896, type: !175)
!4701 = !DILocalVariable(name: "status", scope: !4691, file: !547, line: 897, type: !4069)
!4702 = !DILocalVariable(name: "nvic_status", scope: !4691, file: !547, line: 898, type: !790)
!4703 = !DILocation(line: 0, scope: !4691)
!4704 = !DILocation(line: 900, column: 11, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 900, column: 9)
!4706 = !DILocation(line: 900, column: 42, scope: !4705)
!4707 = !DILocation(line: 905, column: 18, scope: !4691)
!4708 = !DILocation(line: 906, column: 9, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 906, column: 9)
!4710 = !DILocation(line: 906, column: 36, scope: !4709)
!4711 = !DILocation(line: 906, column: 9, scope: !4691)
!4712 = !DILocation(line: 911, column: 22, scope: !4691)
!4713 = !DILocation(line: 912, column: 22, scope: !4691)
!4714 = !DILocation(line: 914, column: 32, scope: !4691)
!4715 = !DILocation(line: 914, column: 37, scope: !4691)
!4716 = !DILocation(line: 915, column: 32, scope: !4691)
!4717 = !DILocation(line: 915, column: 36, scope: !4691)
!4718 = !DILocation(line: 917, column: 91, scope: !4691)
!4719 = !DILocation(line: 917, column: 56, scope: !4691)
!4720 = !DILocation(line: 917, column: 5, scope: !4691)
!4721 = !DILocation(line: 918, column: 80, scope: !4691)
!4722 = !DILocation(line: 918, column: 14, scope: !4691)
!4723 = !DILocation(line: 919, column: 16, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 919, column: 9)
!4725 = !DILocation(line: 919, column: 9, scope: !4691)
!4726 = !DILocation(line: 920, column: 9, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4724, file: !547, line: 919, column: 28)
!4728 = !DILocation(line: 921, column: 9, scope: !4727)
!4729 = !DILocation(line: 924, column: 97, scope: !4691)
!4730 = !DILocation(line: 924, column: 56, scope: !4691)
!4731 = !DILocation(line: 924, column: 5, scope: !4691)
!4732 = !DILocation(line: 925, column: 80, scope: !4691)
!4733 = !DILocation(line: 925, column: 14, scope: !4691)
!4734 = !DILocation(line: 926, column: 16, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 926, column: 9)
!4736 = !DILocation(line: 926, column: 9, scope: !4691)
!4737 = !DILocation(line: 927, column: 9, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4735, file: !547, line: 926, column: 28)
!4739 = !DILocation(line: 928, column: 9, scope: !4738)
!4740 = !DILocation(line: 931, column: 49, scope: !4691)
!4741 = !DILocation(line: 931, column: 19, scope: !4691)
!4742 = !DILocation(line: 932, column: 21, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 932, column: 9)
!4744 = !DILocation(line: 932, column: 9, scope: !4691)
!4745 = !DILocation(line: 933, column: 9, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4743, file: !547, line: 932, column: 44)
!4747 = !DILocation(line: 934, column: 9, scope: !4746)
!4748 = !DILocation(line: 938, column: 5, scope: !4691)
!4749 = !DILocation(line: 940, column: 32, scope: !4691)
!4750 = !DILocation(line: 944, column: 5, scope: !4691)
!4751 = !DILocation(line: 945, column: 1, scope: !4691)
!4752 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !547, file: !547, line: 303, type: !4753, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4756)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{null, !4755, !194}
!4755 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !557, line: 225, baseType: !641)
!4756 = !{!4757, !4758, !4759}
!4757 = !DILocalVariable(name: "event", arg: 1, scope: !4752, file: !547, line: 303, type: !4755)
!4758 = !DILocalVariable(name: "user_data", arg: 2, scope: !4752, file: !547, line: 303, type: !194)
!4759 = !DILocalVariable(name: "callback_data", scope: !4752, file: !547, line: 305, type: !646)
!4760 = !DILocation(line: 0, scope: !4752)
!4761 = !DILocation(line: 307, column: 24, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4752, file: !547, line: 307, column: 9)
!4763 = !DILocation(line: 0, scope: !4762)
!4764 = !DILocation(line: 307, column: 9, scope: !4752)
!4765 = !DILocation(line: 308, column: 9, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4762, file: !547, line: 307, column: 39)
!4767 = !DILocation(line: 309, column: 5, scope: !4766)
!4768 = !DILocation(line: 310, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4762, file: !547, line: 309, column: 12)
!4770 = !DILocation(line: 312, column: 1, scope: !4752)
!4771 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !547, file: !547, line: 852, type: !4178, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4772)
!4772 = !{!4773, !4774, !4775, !4776, !4777}
!4773 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4771, file: !547, line: 852, type: !653)
!4774 = !DILocalVariable(name: "uartx", scope: !4771, file: !547, line: 854, type: !4013)
!4775 = !DILocalVariable(name: "tx_dma_channel", scope: !4771, file: !547, line: 855, type: !4008)
!4776 = !DILocalVariable(name: "rx_dma_channel", scope: !4771, file: !547, line: 855, type: !4008)
!4777 = !DILocalVariable(name: "status", scope: !4771, file: !547, line: 856, type: !4069)
!4778 = !DILocation(line: 0, scope: !4771)
!4779 = !DILocation(line: 858, column: 13, scope: !4771)
!4780 = !DILocation(line: 859, column: 22, scope: !4771)
!4781 = !DILocation(line: 860, column: 22, scope: !4771)
!4782 = !DILocation(line: 866, column: 5, scope: !4771)
!4783 = !DILocation(line: 867, column: 25, scope: !4771)
!4784 = !DILocation(line: 867, column: 5, scope: !4771)
!4785 = !DILocation(line: 868, column: 14, scope: !4771)
!4786 = !DILocation(line: 869, column: 16, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4771, file: !547, line: 869, column: 9)
!4788 = !DILocation(line: 869, column: 9, scope: !4771)
!4789 = !DILocation(line: 870, column: 9, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !547, line: 869, column: 28)
!4791 = !DILocation(line: 873, column: 14, scope: !4771)
!4792 = !DILocation(line: 874, column: 16, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4771, file: !547, line: 874, column: 9)
!4794 = !DILocation(line: 874, column: 9, scope: !4771)
!4795 = !DILocation(line: 875, column: 9, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4793, file: !547, line: 874, column: 28)
!4797 = !DILocation(line: 878, column: 14, scope: !4771)
!4798 = !DILocation(line: 879, column: 16, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4771, file: !547, line: 879, column: 9)
!4800 = !DILocation(line: 879, column: 9, scope: !4771)
!4801 = !DILocation(line: 880, column: 9, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !547, line: 879, column: 28)
!4803 = !DILocation(line: 883, column: 14, scope: !4771)
!4804 = !DILocation(line: 884, column: 16, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4771, file: !547, line: 884, column: 9)
!4806 = !DILocation(line: 884, column: 9, scope: !4771)
!4807 = !DILocation(line: 885, column: 9, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4805, file: !547, line: 884, column: 28)
!4809 = !DILocation(line: 888, column: 5, scope: !4771)
!4810 = !DILocation(line: 889, column: 1, scope: !4771)
!4811 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !547, file: !547, line: 947, type: !4588, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4812)
!4812 = !{!4813, !4814, !4815, !4816}
!4813 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4811, file: !547, line: 947, type: !653)
!4814 = !DILocalVariable(name: "channel", scope: !4811, file: !547, line: 949, type: !4008)
!4815 = !DILocalVariable(name: "roomleft", scope: !4811, file: !547, line: 950, type: !175)
!4816 = !DILocalVariable(name: "status", scope: !4811, file: !547, line: 951, type: !4069)
!4817 = !DILocation(line: 0, scope: !4811)
!4818 = !DILocation(line: 950, column: 5, scope: !4811)
!4819 = !DILocation(line: 953, column: 10, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4811, file: !547, line: 953, column: 9)
!4821 = !DILocation(line: 953, column: 9, scope: !4811)
!4822 = !DILocation(line: 957, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4811, file: !547, line: 957, column: 9)
!4824 = !DILocation(line: 957, column: 36, scope: !4823)
!4825 = !DILocation(line: 957, column: 9, scope: !4811)
!4826 = !DILocation(line: 961, column: 15, scope: !4811)
!4827 = !DILocation(line: 962, column: 14, scope: !4811)
!4828 = !DILocation(line: 963, column: 16, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4811, file: !547, line: 963, column: 9)
!4830 = !DILocation(line: 963, column: 9, scope: !4811)
!4831 = !DILocation(line: 964, column: 9, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4829, file: !547, line: 963, column: 28)
!4833 = !DILocation(line: 968, column: 12, scope: !4811)
!4834 = !DILocation(line: 968, column: 5, scope: !4811)
!4835 = !DILocation(line: 969, column: 1, scope: !4811)
!4836 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !547, file: !547, line: 971, type: !4588, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4837)
!4837 = !{!4838, !4839, !4840, !4841}
!4838 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4836, file: !547, line: 971, type: !653)
!4839 = !DILocalVariable(name: "channel", scope: !4836, file: !547, line: 973, type: !4008)
!4840 = !DILocalVariable(name: "avail", scope: !4836, file: !547, line: 974, type: !175)
!4841 = !DILocalVariable(name: "status", scope: !4836, file: !547, line: 975, type: !4069)
!4842 = !DILocation(line: 0, scope: !4836)
!4843 = !DILocation(line: 974, column: 5, scope: !4836)
!4844 = !DILocation(line: 977, column: 10, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4836, file: !547, line: 977, column: 9)
!4846 = !DILocation(line: 977, column: 9, scope: !4836)
!4847 = !DILocation(line: 981, column: 9, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4836, file: !547, line: 981, column: 9)
!4849 = !DILocation(line: 981, column: 36, scope: !4848)
!4850 = !DILocation(line: 981, column: 9, scope: !4836)
!4851 = !DILocation(line: 985, column: 15, scope: !4836)
!4852 = !DILocation(line: 986, column: 14, scope: !4836)
!4853 = !DILocation(line: 987, column: 16, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4836, file: !547, line: 987, column: 9)
!4855 = !DILocation(line: 987, column: 9, scope: !4836)
!4856 = !DILocation(line: 988, column: 9, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !547, line: 987, column: 28)
!4858 = !DILocation(line: 992, column: 12, scope: !4836)
!4859 = !DILocation(line: 992, column: 5, scope: !4836)
!4860 = !DILocation(line: 993, column: 1, scope: !4836)
!4861 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !547, file: !547, line: 995, type: !4375, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4862)
!4862 = !{!4863, !4864}
!4863 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4861, file: !547, line: 995, type: !653)
!4864 = !DILocalVariable(name: "uartx", scope: !4861, file: !547, line: 997, type: !4013)
!4865 = !DILocation(line: 0, scope: !4861)
!4866 = !DILocation(line: 999, column: 10, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4861, file: !547, line: 999, column: 9)
!4868 = !DILocation(line: 999, column: 9, scope: !4861)
!4869 = !DILocation(line: 1003, column: 9, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4861, file: !547, line: 1003, column: 9)
!4871 = !DILocation(line: 1003, column: 36, scope: !4870)
!4872 = !DILocation(line: 1003, column: 9, scope: !4861)
!4873 = !DILocation(line: 1007, column: 13, scope: !4861)
!4874 = !DILocation(line: 1009, column: 5, scope: !4861)
!4875 = !DILocation(line: 1015, column: 5, scope: !4861)
!4876 = !DILocation(line: 1016, column: 1, scope: !4861)
!4877 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !547, file: !547, line: 1018, type: !4878, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4880)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!4206, !653, !378, !378, !378}
!4880 = !{!4881, !4882, !4883, !4884, !4885}
!4881 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4877, file: !547, line: 1018, type: !653)
!4882 = !DILocalVariable(name: "xon", arg: 2, scope: !4877, file: !547, line: 1019, type: !378)
!4883 = !DILocalVariable(name: "xoff", arg: 3, scope: !4877, file: !547, line: 1020, type: !378)
!4884 = !DILocalVariable(name: "escape_character", arg: 4, scope: !4877, file: !547, line: 1021, type: !378)
!4885 = !DILocalVariable(name: "uartx", scope: !4877, file: !547, line: 1023, type: !4013)
!4886 = !DILocation(line: 0, scope: !4877)
!4887 = !DILocation(line: 1025, column: 10, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4877, file: !547, line: 1025, column: 9)
!4889 = !DILocation(line: 1025, column: 9, scope: !4877)
!4890 = !DILocation(line: 1029, column: 9, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4877, file: !547, line: 1029, column: 9)
!4892 = !DILocation(line: 1029, column: 36, scope: !4891)
!4893 = !DILocation(line: 1029, column: 9, scope: !4877)
!4894 = !DILocation(line: 1033, column: 13, scope: !4877)
!4895 = !DILocation(line: 1035, column: 5, scope: !4877)
!4896 = !DILocation(line: 1044, column: 5, scope: !4877)
!4897 = !DILocation(line: 1045, column: 1, scope: !4877)
!4898 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !547, file: !547, line: 1047, type: !4375, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4899)
!4899 = !{!4900, !4901}
!4900 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4898, file: !547, line: 1047, type: !653)
!4901 = !DILocalVariable(name: "uartx", scope: !4898, file: !547, line: 1049, type: !4013)
!4902 = !DILocation(line: 0, scope: !4898)
!4903 = !DILocation(line: 1051, column: 10, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4898, file: !547, line: 1051, column: 9)
!4905 = !DILocation(line: 1051, column: 9, scope: !4898)
!4906 = !DILocation(line: 1055, column: 9, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4898, file: !547, line: 1055, column: 9)
!4908 = !DILocation(line: 1055, column: 36, scope: !4907)
!4909 = !DILocation(line: 1055, column: 9, scope: !4898)
!4910 = !DILocation(line: 1059, column: 13, scope: !4898)
!4911 = !DILocation(line: 1061, column: 5, scope: !4898)
!4912 = !DILocation(line: 1067, column: 5, scope: !4898)
!4913 = !DILocation(line: 1068, column: 1, scope: !4898)
!4914 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !547, file: !547, line: 1071, type: !4915, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4919)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!4206, !653, !4917}
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 32)
!4918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!4919 = !{!4920, !4921, !4922, !4923, !4929, !4930, !4931}
!4920 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4914, file: !547, line: 1071, type: !653)
!4921 = !DILocalVariable(name: "dma_config", arg: 2, scope: !4914, file: !547, line: 1071, type: !4917)
!4922 = !DILocalVariable(name: "irq_status", scope: !4914, file: !547, line: 1073, type: !175)
!4923 = !DILocalVariable(name: "internal_dma_config", scope: !4914, file: !547, line: 1074, type: !4924)
!4924 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !557, line: 283, baseType: !4925)
!4925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 280, size: 64, elements: !4926)
!4926 = !{!4927, !4928}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !4925, file: !557, line: 281, baseType: !175, size: 32)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4925, file: !557, line: 282, baseType: !175, size: 32, offset: 32)
!4929 = !DILocalVariable(name: "tx_dma_channel", scope: !4914, file: !547, line: 1075, type: !4008)
!4930 = !DILocalVariable(name: "rx_dma_channel", scope: !4914, file: !547, line: 1075, type: !4008)
!4931 = !DILocalVariable(name: "status", scope: !4914, file: !547, line: 1076, type: !4069)
!4932 = !DILocation(line: 0, scope: !4914)
!4933 = !DILocation(line: 1074, column: 5, scope: !4914)
!4934 = !DILocation(line: 1074, column: 19, scope: !4914)
!4935 = !DILocation(line: 1078, column: 10, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1078, column: 9)
!4937 = !DILocation(line: 1078, column: 9, scope: !4914)
!4938 = !DILocation(line: 1081, column: 22, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1081, column: 9)
!4940 = !DILocation(line: 1081, column: 40, scope: !4939)
!4941 = !DILocation(line: 1081, column: 49, scope: !4939)
!4942 = !DILocation(line: 1082, column: 22, scope: !4939)
!4943 = !DILocation(line: 1082, column: 43, scope: !4939)
!4944 = !DILocation(line: 1081, column: 9, scope: !4914)
!4945 = !DILocation(line: 1085, column: 22, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1085, column: 9)
!4947 = !DILocation(line: 1085, column: 45, scope: !4946)
!4948 = !DILocation(line: 1085, column: 76, scope: !4946)
!4949 = !DILocation(line: 1086, column: 22, scope: !4946)
!4950 = !DILocation(line: 1086, column: 48, scope: !4946)
!4951 = !DILocation(line: 1086, column: 79, scope: !4946)
!4952 = !DILocation(line: 1090, column: 22, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1090, column: 9)
!4954 = !DILocation(line: 1090, column: 48, scope: !4953)
!4955 = !DILocation(line: 1090, column: 79, scope: !4953)
!4956 = !DILocation(line: 1091, column: 22, scope: !4953)
!4957 = !DILocation(line: 1091, column: 51, scope: !4953)
!4958 = !DILocation(line: 1091, column: 82, scope: !4953)
!4959 = !DILocation(line: 1092, column: 22, scope: !4953)
!4960 = !DILocation(line: 1092, column: 47, scope: !4953)
!4961 = !DILocation(line: 1092, column: 78, scope: !4953)
!4962 = !DILocation(line: 1098, column: 9, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1098, column: 9)
!4964 = !DILocation(line: 1098, column: 36, scope: !4963)
!4965 = !DILocation(line: 1098, column: 9, scope: !4914)
!4966 = !DILocation(line: 1102, column: 22, scope: !4914)
!4967 = !DILocation(line: 1103, column: 22, scope: !4914)
!4968 = !DILocation(line: 1105, column: 14, scope: !4914)
!4969 = !DILocation(line: 1106, column: 16, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1106, column: 9)
!4971 = !DILocation(line: 1106, column: 9, scope: !4914)
!4972 = !DILocation(line: 1107, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4970, file: !547, line: 1106, column: 28)
!4974 = !DILocation(line: 1110, column: 62, scope: !4914)
!4975 = !DILocation(line: 1110, column: 40, scope: !4914)
!4976 = !DILocation(line: 1110, column: 25, scope: !4914)
!4977 = !DILocation(line: 1110, column: 38, scope: !4914)
!4978 = !DILocation(line: 1111, column: 44, scope: !4914)
!4979 = !DILocation(line: 1111, column: 25, scope: !4914)
!4980 = !DILocation(line: 1111, column: 30, scope: !4914)
!4981 = !DILocation(line: 1112, column: 14, scope: !4914)
!4982 = !DILocation(line: 1113, column: 16, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1113, column: 9)
!4984 = !DILocation(line: 1113, column: 9, scope: !4914)
!4985 = !DILocation(line: 1114, column: 9, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4983, file: !547, line: 1113, column: 28)
!4987 = !DILocation(line: 1117, column: 61, scope: !4914)
!4988 = !DILocation(line: 1117, column: 14, scope: !4914)
!4989 = !DILocation(line: 1118, column: 16, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1118, column: 9)
!4991 = !DILocation(line: 1118, column: 9, scope: !4914)
!4992 = !DILocation(line: 1119, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !547, line: 1118, column: 28)
!4994 = !DILocation(line: 1123, column: 14, scope: !4914)
!4995 = !DILocation(line: 1124, column: 16, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1124, column: 9)
!4997 = !DILocation(line: 1124, column: 9, scope: !4914)
!4998 = !DILocation(line: 1125, column: 9, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !547, line: 1124, column: 28)
!5000 = !DILocation(line: 1128, column: 62, scope: !4914)
!5001 = !DILocation(line: 1128, column: 40, scope: !4914)
!5002 = !DILocation(line: 1128, column: 38, scope: !4914)
!5003 = !DILocation(line: 1129, column: 44, scope: !4914)
!5004 = !DILocation(line: 1129, column: 30, scope: !4914)
!5005 = !DILocation(line: 1130, column: 14, scope: !4914)
!5006 = !DILocation(line: 1131, column: 16, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1131, column: 9)
!5008 = !DILocation(line: 1131, column: 9, scope: !4914)
!5009 = !DILocation(line: 1132, column: 9, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5007, file: !547, line: 1131, column: 28)
!5011 = !DILocation(line: 1135, column: 61, scope: !4914)
!5012 = !DILocation(line: 1135, column: 14, scope: !4914)
!5013 = !DILocation(line: 1136, column: 16, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1136, column: 9)
!5015 = !DILocation(line: 1136, column: 9, scope: !4914)
!5016 = !DILocation(line: 1137, column: 9, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !547, line: 1136, column: 28)
!5018 = !DILocation(line: 1140, column: 64, scope: !4914)
!5019 = !DILocation(line: 1140, column: 14, scope: !4914)
!5020 = !DILocation(line: 1141, column: 16, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4914, file: !547, line: 1141, column: 9)
!5022 = !DILocation(line: 1141, column: 9, scope: !4914)
!5023 = !DILocation(line: 1142, column: 9, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !547, line: 1141, column: 28)
!5025 = !DILocation(line: 1146, column: 18, scope: !4914)
!5026 = !DILocation(line: 1147, column: 66, scope: !4914)
!5027 = !DILocation(line: 1147, column: 34, scope: !4914)
!5028 = !DILocation(line: 1147, column: 52, scope: !4914)
!5029 = !DILocation(line: 1148, column: 71, scope: !4914)
!5030 = !DILocation(line: 1148, column: 34, scope: !4914)
!5031 = !DILocation(line: 1148, column: 57, scope: !4914)
!5032 = !DILocation(line: 1149, column: 74, scope: !4914)
!5033 = !DILocation(line: 1149, column: 34, scope: !4914)
!5034 = !DILocation(line: 1149, column: 60, scope: !4914)
!5035 = !DILocation(line: 1150, column: 73, scope: !4914)
!5036 = !DILocation(line: 1150, column: 34, scope: !4914)
!5037 = !DILocation(line: 1150, column: 59, scope: !4914)
!5038 = !DILocation(line: 1151, column: 69, scope: !4914)
!5039 = !DILocation(line: 1151, column: 34, scope: !4914)
!5040 = !DILocation(line: 1151, column: 55, scope: !4914)
!5041 = !DILocation(line: 1152, column: 74, scope: !4914)
!5042 = !DILocation(line: 1152, column: 34, scope: !4914)
!5043 = !DILocation(line: 1152, column: 60, scope: !4914)
!5044 = !DILocation(line: 1153, column: 77, scope: !4914)
!5045 = !DILocation(line: 1153, column: 34, scope: !4914)
!5046 = !DILocation(line: 1153, column: 63, scope: !4914)
!5047 = !DILocation(line: 1154, column: 5, scope: !4914)
!5048 = !DILocation(line: 1156, column: 5, scope: !4914)
!5049 = !DILocation(line: 1157, column: 1, scope: !4914)
!5050 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2455, file: !2455, line: 52, type: !5051, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5108)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{null, !5053, !175}
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 32)
!5054 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !5055)
!5055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !5056)
!5056 = !{!5057, !5063, !5068, !5074, !5075, !5080, !5085, !5086, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5055, file: !78, line: 547, baseType: !5058, size: 32)
!5058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !78, line: 543, size: 32, elements: !5059)
!5059 = !{!5060, !5061, !5062}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5058, file: !78, line: 544, baseType: !188, size: 32)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5058, file: !78, line: 545, baseType: !184, size: 32)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5058, file: !78, line: 546, baseType: !184, size: 32)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5055, file: !78, line: 551, baseType: !5064, size: 32, offset: 32)
!5064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !78, line: 548, size: 32, elements: !5065)
!5065 = !{!5066, !5067}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5064, file: !78, line: 549, baseType: !184, size: 32)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5064, file: !78, line: 550, baseType: !184, size: 32)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5055, file: !78, line: 556, baseType: !5069, size: 32, offset: 64)
!5069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !78, line: 552, size: 32, elements: !5070)
!5070 = !{!5071, !5072, !5073}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5069, file: !78, line: 553, baseType: !188, size: 32)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5069, file: !78, line: 554, baseType: !184, size: 32)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5069, file: !78, line: 555, baseType: !184, size: 32)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5055, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5055, file: !78, line: 561, baseType: !5076, size: 32, offset: 128)
!5076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !78, line: 558, size: 32, elements: !5077)
!5077 = !{!5078, !5079}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5076, file: !78, line: 559, baseType: !184, size: 32)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5076, file: !78, line: 560, baseType: !184, size: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5055, file: !78, line: 565, baseType: !5081, size: 32, offset: 160)
!5081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !78, line: 562, size: 32, elements: !5082)
!5082 = !{!5083, !5084}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5081, file: !78, line: 563, baseType: !188, size: 32)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5081, file: !78, line: 564, baseType: !184, size: 32)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5055, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5055, file: !78, line: 570, baseType: !5087, size: 32, offset: 224)
!5087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !78, line: 567, size: 32, elements: !5088)
!5088 = !{!5089, !5090}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5087, file: !78, line: 568, baseType: !184, size: 32)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5087, file: !78, line: 569, baseType: !184, size: 32)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5055, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5055, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5055, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5055, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5055, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5055, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5055, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5055, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5055, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5055, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5055, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5055, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5055, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5055, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5055, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5055, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5055, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!5108 = !{!5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5123}
!5109 = !DILocalVariable(name: "uartx", arg: 1, scope: !5050, file: !2455, line: 52, type: !5053)
!5110 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5050, file: !2455, line: 52, type: !175)
!5111 = !DILocalVariable(name: "uart_clock", scope: !5050, file: !2455, line: 54, type: !175)
!5112 = !DILocalVariable(name: "integer", scope: !5050, file: !2455, line: 54, type: !175)
!5113 = !DILocalVariable(name: "remainder", scope: !5050, file: !2455, line: 54, type: !175)
!5114 = !DILocalVariable(name: "fraction", scope: !5050, file: !2455, line: 54, type: !175)
!5115 = !DILocalVariable(name: "dll_dlm", scope: !5050, file: !2455, line: 55, type: !175)
!5116 = !DILocalVariable(name: "sample_count", scope: !5050, file: !2455, line: 55, type: !175)
!5117 = !DILocalVariable(name: "sample_point", scope: !5050, file: !2455, line: 55, type: !175)
!5118 = !DILocalVariable(name: "temp_lcr", scope: !5050, file: !2455, line: 55, type: !175)
!5119 = !DILocalVariable(name: "fraction_L_mapping", scope: !5050, file: !2455, line: 56, type: !5120)
!5120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 320, elements: !5121)
!5121 = !{!5122}
!5122 = !DISubrange(count: 10)
!5123 = !DILocalVariable(name: "fraction_M_mapping", scope: !5050, file: !2455, line: 57, type: !5120)
!5124 = !DILocation(line: 0, scope: !5050)
!5125 = !DILocation(line: 56, column: 14, scope: !5050)
!5126 = !DILocation(line: 57, column: 5, scope: !5050)
!5127 = !DILocation(line: 57, column: 14, scope: !5050)
!5128 = !DILocation(line: 59, column: 12, scope: !5050)
!5129 = !DILocation(line: 59, column: 23, scope: !5050)
!5130 = !DILocation(line: 60, column: 12, scope: !5050)
!5131 = !DILocation(line: 60, column: 22, scope: !5050)
!5132 = !DILocation(line: 61, column: 12, scope: !5050)
!5133 = !DILocation(line: 61, column: 22, scope: !5050)
!5134 = !DILocation(line: 63, column: 9, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5050, file: !2455, line: 63, column: 9)
!5136 = !DILocation(line: 63, column: 9, scope: !5050)
!5137 = !DILocation(line: 64, column: 22, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5135, file: !2455, line: 63, column: 37)
!5139 = !DILocation(line: 64, column: 45, scope: !5138)
!5140 = !DILocation(line: 65, column: 5, scope: !5138)
!5141 = !DILocation(line: 0, scope: !5135)
!5142 = !DILocation(line: 69, column: 45, scope: !5050)
!5143 = !DILocation(line: 69, column: 26, scope: !5050)
!5144 = !DILocation(line: 70, column: 30, scope: !5050)
!5145 = !DILocation(line: 70, column: 36, scope: !5050)
!5146 = !DILocation(line: 70, column: 63, scope: !5050)
!5147 = !DILocation(line: 71, column: 20, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5050, file: !2455, line: 71, column: 9)
!5149 = !DILocation(line: 71, column: 26, scope: !5148)
!5150 = !DILocation(line: 77, column: 5, scope: !5050)
!5151 = !DILocation(line: 77, column: 25, scope: !5050)
!5152 = !DILocation(line: 78, column: 16, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5050, file: !2455, line: 77, column: 32)
!5154 = distinct !{!5154, !5150, !5155}
!5155 = !DILocation(line: 80, column: 5, scope: !5050)
!5156 = !DILocation(line: 82, column: 35, scope: !5050)
!5157 = !DILocation(line: 82, column: 66, scope: !5050)
!5158 = !DILocation(line: 84, column: 18, scope: !5050)
!5159 = !DILocation(line: 85, column: 34, scope: !5050)
!5160 = !DILocation(line: 85, column: 39, scope: !5050)
!5161 = !DILocation(line: 87, column: 12, scope: !5050)
!5162 = !DILocation(line: 87, column: 22, scope: !5050)
!5163 = !DILocation(line: 89, column: 23, scope: !5050)
!5164 = !DILocation(line: 90, column: 27, scope: !5050)
!5165 = !DILocation(line: 90, column: 16, scope: !5050)
!5166 = !DILocation(line: 91, column: 38, scope: !5050)
!5167 = !DILocation(line: 91, column: 24, scope: !5050)
!5168 = !DILocation(line: 91, column: 28, scope: !5050)
!5169 = !DILocation(line: 92, column: 35, scope: !5050)
!5170 = !DILocation(line: 92, column: 41, scope: !5050)
!5171 = !DILocation(line: 92, column: 20, scope: !5050)
!5172 = !DILocation(line: 92, column: 24, scope: !5050)
!5173 = !DILocation(line: 93, column: 16, scope: !5050)
!5174 = !DILocation(line: 95, column: 12, scope: !5050)
!5175 = !DILocation(line: 95, column: 25, scope: !5050)
!5176 = !DILocation(line: 96, column: 12, scope: !5050)
!5177 = !DILocation(line: 96, column: 25, scope: !5050)
!5178 = !DILocation(line: 98, column: 24, scope: !5050)
!5179 = !DILocation(line: 98, column: 22, scope: !5050)
!5180 = !DILocation(line: 99, column: 24, scope: !5050)
!5181 = !DILocation(line: 99, column: 22, scope: !5050)
!5182 = !DILocation(line: 101, column: 25, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5050, file: !2455, line: 101, column: 9)
!5184 = !DILocation(line: 101, column: 9, scope: !5050)
!5185 = !DILocation(line: 102, column: 16, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5183, file: !2455, line: 101, column: 37)
!5187 = !DILocation(line: 102, column: 22, scope: !5186)
!5188 = !DILocation(line: 103, column: 5, scope: !5186)
!5189 = !DILocation(line: 104, column: 1, scope: !5050)
!5190 = distinct !DISubprogram(name: "uart_set_format", scope: !2455, file: !2455, line: 106, type: !5191, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{null, !5053, !4257, !4259, !4261}
!5193 = !{!5194, !5195, !5196, !5197, !5198}
!5194 = !DILocalVariable(name: "uartx", arg: 1, scope: !5190, file: !2455, line: 106, type: !5053)
!5195 = !DILocalVariable(name: "word_length", arg: 2, scope: !5190, file: !2455, line: 107, type: !4257)
!5196 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5190, file: !2455, line: 108, type: !4259)
!5197 = !DILocalVariable(name: "parity", arg: 4, scope: !5190, file: !2455, line: 109, type: !4261)
!5198 = !DILocalVariable(name: "byte", scope: !5190, file: !2455, line: 111, type: !952)
!5199 = !DILocation(line: 0, scope: !5190)
!5200 = !DILocation(line: 114, column: 19, scope: !5190)
!5201 = !DILocation(line: 115, column: 16, scope: !5190)
!5202 = !DILocation(line: 118, column: 10, scope: !5190)
!5203 = !DILocation(line: 119, column: 5, scope: !5190)
!5204 = !DILocation(line: 124, column: 18, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5190, file: !2455, line: 119, column: 26)
!5206 = !DILocation(line: 125, column: 13, scope: !5205)
!5207 = !DILocation(line: 127, column: 18, scope: !5205)
!5208 = !DILocation(line: 128, column: 13, scope: !5205)
!5209 = !DILocation(line: 130, column: 18, scope: !5205)
!5210 = !DILocation(line: 131, column: 13, scope: !5205)
!5211 = !DILocation(line: 137, column: 10, scope: !5190)
!5212 = !DILocation(line: 138, column: 5, scope: !5190)
!5213 = !DILocation(line: 151, column: 5, scope: !5190)
!5214 = !DILocation(line: 166, column: 18, scope: !5190)
!5215 = !DILocation(line: 166, column: 16, scope: !5190)
!5216 = !DILocation(line: 167, column: 1, scope: !5190)
!5217 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2455, file: !2455, line: 169, type: !5218, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5220)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{null, !5053, !378}
!5220 = !{!5221, !5222, !5223}
!5221 = !DILocalVariable(name: "uartx", arg: 1, scope: !5217, file: !2455, line: 169, type: !5053)
!5222 = !DILocalVariable(name: "byte", arg: 2, scope: !5217, file: !2455, line: 169, type: !378)
!5223 = !DILocalVariable(name: "LSR", scope: !5217, file: !2455, line: 171, type: !952)
!5224 = !DILocation(line: 0, scope: !5217)
!5225 = !DILocation(line: 173, column: 5, scope: !5217)
!5226 = !DILocation(line: 174, column: 31, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5217, file: !2455, line: 173, column: 15)
!5228 = !DILocation(line: 175, column: 17, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5227, file: !2455, line: 175, column: 13)
!5230 = !DILocation(line: 175, column: 13, scope: !5227)
!5231 = distinct !{!5231, !5225, !5232}
!5232 = !DILocation(line: 179, column: 5, scope: !5217)
!5233 = !DILocation(line: 176, column: 38, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !2455, line: 175, column: 39)
!5235 = !DILocation(line: 176, column: 32, scope: !5234)
!5236 = !DILocation(line: 176, column: 36, scope: !5234)
!5237 = !DILocation(line: 180, column: 1, scope: !5217)
!5238 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2455, file: !2455, line: 182, type: !5239, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5241)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!378, !5053}
!5241 = !{!5242, !5243, !5244}
!5242 = !DILocalVariable(name: "uartx", arg: 1, scope: !5238, file: !2455, line: 182, type: !5053)
!5243 = !DILocalVariable(name: "LSR", scope: !5238, file: !2455, line: 184, type: !952)
!5244 = !DILocalVariable(name: "byte", scope: !5238, file: !2455, line: 185, type: !378)
!5245 = !DILocation(line: 0, scope: !5238)
!5246 = !DILocation(line: 187, column: 5, scope: !5238)
!5247 = !DILocation(line: 188, column: 31, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5238, file: !2455, line: 187, column: 15)
!5249 = !DILocation(line: 189, column: 17, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5248, file: !2455, line: 189, column: 13)
!5251 = !DILocation(line: 189, column: 13, scope: !5248)
!5252 = distinct !{!5252, !5246, !5253}
!5253 = !DILocation(line: 193, column: 5, scope: !5238)
!5254 = !DILocation(line: 190, column: 48, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5250, file: !2455, line: 189, column: 37)
!5256 = !DILocation(line: 190, column: 20, scope: !5255)
!5257 = !DILocation(line: 195, column: 5, scope: !5238)
!5258 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2455, file: !2455, line: 198, type: !5259, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5261)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{!175, !5053}
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "uartx", arg: 1, scope: !5258, file: !2455, line: 198, type: !5053)
!5263 = !DILocalVariable(name: "LSR", scope: !5258, file: !2455, line: 200, type: !952)
!5264 = !DILocalVariable(name: "value", scope: !5258, file: !2455, line: 201, type: !175)
!5265 = !DILocation(line: 0, scope: !5258)
!5266 = !DILocation(line: 203, column: 27, scope: !5258)
!5267 = !DILocation(line: 204, column: 13, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5258, file: !2455, line: 204, column: 9)
!5269 = !DILocation(line: 204, column: 9, scope: !5258)
!5270 = !DILocation(line: 205, column: 36, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5268, file: !2455, line: 204, column: 33)
!5272 = !DILocation(line: 206, column: 5, scope: !5271)
!5273 = !DILocation(line: 0, scope: !5268)
!5274 = !DILocation(line: 210, column: 5, scope: !5258)
!5275 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2455, file: !2455, line: 213, type: !5276, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{null, !5053}
!5278 = !{!5279, !5280, !5281}
!5279 = !DILocalVariable(name: "uartx", arg: 1, scope: !5275, file: !2455, line: 213, type: !5053)
!5280 = !DILocalVariable(name: "EFR", scope: !5275, file: !2455, line: 215, type: !952)
!5281 = !DILocalVariable(name: "LCR", scope: !5275, file: !2455, line: 215, type: !952)
!5282 = !DILocation(line: 0, scope: !5275)
!5283 = !DILocation(line: 217, column: 18, scope: !5275)
!5284 = !DILocation(line: 219, column: 16, scope: !5275)
!5285 = !DILocation(line: 220, column: 30, scope: !5275)
!5286 = !DILocation(line: 222, column: 30, scope: !5275)
!5287 = !DILocation(line: 222, column: 28, scope: !5275)
!5288 = !DILocation(line: 223, column: 12, scope: !5275)
!5289 = !DILocation(line: 223, column: 22, scope: !5275)
!5290 = !DILocation(line: 225, column: 16, scope: !5275)
!5291 = !DILocation(line: 226, column: 21, scope: !5275)
!5292 = !DILocation(line: 226, column: 25, scope: !5275)
!5293 = !DILocation(line: 228, column: 18, scope: !5275)
!5294 = !DILocation(line: 228, column: 16, scope: !5275)
!5295 = !DILocation(line: 229, column: 1, scope: !5275)
!5296 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2455, file: !2455, line: 231, type: !5297, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5299)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{null, !5053, !378, !378, !378}
!5299 = !{!5300, !5301, !5302, !5303, !5304, !5305}
!5300 = !DILocalVariable(name: "uartx", arg: 1, scope: !5296, file: !2455, line: 231, type: !5053)
!5301 = !DILocalVariable(name: "xon", arg: 2, scope: !5296, file: !2455, line: 232, type: !378)
!5302 = !DILocalVariable(name: "xoff", arg: 3, scope: !5296, file: !2455, line: 233, type: !378)
!5303 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5296, file: !2455, line: 234, type: !378)
!5304 = !DILocalVariable(name: "EFR", scope: !5296, file: !2455, line: 236, type: !952)
!5305 = !DILocalVariable(name: "LCR", scope: !5296, file: !2455, line: 236, type: !952)
!5306 = !DILocation(line: 0, scope: !5296)
!5307 = !DILocation(line: 238, column: 18, scope: !5296)
!5308 = !DILocation(line: 240, column: 16, scope: !5296)
!5309 = !DILocation(line: 241, column: 28, scope: !5296)
!5310 = !DILocation(line: 241, column: 21, scope: !5296)
!5311 = !DILocation(line: 241, column: 26, scope: !5296)
!5312 = !DILocation(line: 242, column: 20, scope: !5296)
!5313 = !DILocation(line: 242, column: 12, scope: !5296)
!5314 = !DILocation(line: 242, column: 18, scope: !5296)
!5315 = !DILocation(line: 243, column: 30, scope: !5296)
!5316 = !DILocation(line: 245, column: 30, scope: !5296)
!5317 = !DILocation(line: 245, column: 28, scope: !5296)
!5318 = !DILocation(line: 246, column: 25, scope: !5296)
!5319 = !DILocation(line: 246, column: 12, scope: !5296)
!5320 = !DILocation(line: 246, column: 23, scope: !5296)
!5321 = !DILocation(line: 247, column: 12, scope: !5296)
!5322 = !DILocation(line: 247, column: 22, scope: !5296)
!5323 = !DILocation(line: 249, column: 18, scope: !5296)
!5324 = !DILocation(line: 249, column: 16, scope: !5296)
!5325 = !DILocation(line: 250, column: 1, scope: !5296)
!5326 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2455, file: !2455, line: 252, type: !5276, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5327)
!5327 = !{!5328, !5329}
!5328 = !DILocalVariable(name: "uartx", arg: 1, scope: !5326, file: !2455, line: 252, type: !5053)
!5329 = !DILocalVariable(name: "LCR", scope: !5326, file: !2455, line: 254, type: !952)
!5330 = !DILocation(line: 0, scope: !5326)
!5331 = !DILocation(line: 256, column: 18, scope: !5326)
!5332 = !DILocation(line: 258, column: 16, scope: !5326)
!5333 = !DILocation(line: 259, column: 24, scope: !5326)
!5334 = !DILocation(line: 259, column: 28, scope: !5326)
!5335 = !DILocation(line: 261, column: 16, scope: !5326)
!5336 = !DILocation(line: 262, column: 18, scope: !5326)
!5337 = !DILocation(line: 262, column: 16, scope: !5326)
!5338 = !DILocation(line: 263, column: 1, scope: !5326)
!5339 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2455, file: !2455, line: 265, type: !5276, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5340)
!5340 = !{!5341, !5342, !5343}
!5341 = !DILocalVariable(name: "uartx", arg: 1, scope: !5339, file: !2455, line: 265, type: !5053)
!5342 = !DILocalVariable(name: "EFR", scope: !5339, file: !2455, line: 267, type: !952)
!5343 = !DILocalVariable(name: "LCR", scope: !5339, file: !2455, line: 267, type: !952)
!5344 = !DILocation(line: 0, scope: !5339)
!5345 = !DILocation(line: 269, column: 18, scope: !5339)
!5346 = !DILocation(line: 271, column: 16, scope: !5339)
!5347 = !DILocation(line: 272, column: 30, scope: !5339)
!5348 = !DILocation(line: 274, column: 30, scope: !5339)
!5349 = !DILocation(line: 274, column: 28, scope: !5339)
!5350 = !DILocation(line: 276, column: 16, scope: !5339)
!5351 = !DILocation(line: 277, column: 28, scope: !5339)
!5352 = !DILocation(line: 283, column: 18, scope: !5339)
!5353 = !DILocation(line: 283, column: 16, scope: !5339)
!5354 = !DILocation(line: 284, column: 1, scope: !5339)
!5355 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2455, file: !2455, line: 307, type: !5276, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5356)
!5356 = !{!5357, !5358, !5359}
!5357 = !DILocalVariable(name: "uartx", arg: 1, scope: !5355, file: !2455, line: 307, type: !5053)
!5358 = !DILocalVariable(name: "IER", scope: !5355, file: !2455, line: 309, type: !952)
!5359 = !DILocalVariable(name: "LCR", scope: !5355, file: !2455, line: 309, type: !952)
!5360 = !DILocation(line: 0, scope: !5355)
!5361 = !DILocation(line: 311, column: 18, scope: !5355)
!5362 = !DILocation(line: 313, column: 16, scope: !5355)
!5363 = !DILocation(line: 314, column: 26, scope: !5355)
!5364 = !DILocation(line: 316, column: 26, scope: !5355)
!5365 = !DILocation(line: 316, column: 24, scope: !5355)
!5366 = !DILocation(line: 318, column: 19, scope: !5355)
!5367 = !DILocation(line: 318, column: 16, scope: !5355)
!5368 = !DILocation(line: 319, column: 1, scope: !5355)
!5369 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2455, file: !2455, line: 321, type: !5370, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5372)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{null, !5053, !858}
!5372 = !{!5373, !5374, !5375}
!5373 = !DILocalVariable(name: "uartx", arg: 1, scope: !5369, file: !2455, line: 321, type: !5053)
!5374 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5369, file: !2455, line: 321, type: !858)
!5375 = !DILocalVariable(name: "FCR", scope: !5369, file: !2455, line: 323, type: !952)
!5376 = !DILocation(line: 0, scope: !5369)
!5377 = !DILocation(line: 327, column: 9, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5369, file: !2455, line: 327, column: 9)
!5379 = !DILocation(line: 333, column: 24, scope: !5369)
!5380 = !DILocation(line: 333, column: 28, scope: !5369)
!5381 = !DILocation(line: 334, column: 1, scope: !5369)
!5382 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2455, file: !2455, line: 336, type: !5383, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5386)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!5385, !5053}
!5385 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !648, line: 55, baseType: !704)
!5386 = !{!5387, !5388, !5389, !5390}
!5387 = !DILocalVariable(name: "uartx", arg: 1, scope: !5382, file: !2455, line: 336, type: !5053)
!5388 = !DILocalVariable(name: "IIR", scope: !5382, file: !2455, line: 338, type: !952)
!5389 = !DILocalVariable(name: "LSR", scope: !5382, file: !2455, line: 338, type: !952)
!5390 = !DILocalVariable(name: "type", scope: !5382, file: !2455, line: 339, type: !5385)
!5391 = !DILocation(line: 0, scope: !5382)
!5392 = !DILocation(line: 341, column: 30, scope: !5382)
!5393 = !DILocation(line: 342, column: 13, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5382, file: !2455, line: 342, column: 9)
!5395 = !DILocation(line: 342, column: 9, scope: !5382)
!5396 = !DILocation(line: 346, column: 17, scope: !5382)
!5397 = !DILocation(line: 346, column: 5, scope: !5382)
!5398 = !DILocation(line: 350, column: 13, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5382, file: !2455, line: 346, column: 37)
!5400 = !DILocation(line: 353, column: 35, scope: !5399)
!5401 = !DILocation(line: 354, column: 21, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5399, file: !2455, line: 354, column: 17)
!5403 = !DILocation(line: 363, column: 13, scope: !5399)
!5404 = !DILocation(line: 369, column: 1, scope: !5382)
!5405 = distinct !DISubprogram(name: "uart_verify_error", scope: !2455, file: !2455, line: 371, type: !5406, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5408)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!858, !5053}
!5408 = !{!5409, !5410, !5411}
!5409 = !DILocalVariable(name: "uartx", arg: 1, scope: !5405, file: !2455, line: 371, type: !5053)
!5410 = !DILocalVariable(name: "LSR", scope: !5405, file: !2455, line: 373, type: !952)
!5411 = !DILocalVariable(name: "ret", scope: !5405, file: !2455, line: 374, type: !858)
!5412 = !DILocation(line: 0, scope: !5405)
!5413 = !DILocation(line: 376, column: 27, scope: !5405)
!5414 = !DILocation(line: 377, column: 15, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5405, file: !2455, line: 377, column: 9)
!5416 = !DILocation(line: 377, column: 9, scope: !5405)
!5417 = !DILocation(line: 381, column: 5, scope: !5405)
!5418 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2455, file: !2455, line: 384, type: !5276, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5419)
!5419 = !{!5420, !5421}
!5420 = !DILocalVariable(name: "uartx", arg: 1, scope: !5418, file: !2455, line: 384, type: !5053)
!5421 = !DILocalVariable(name: "DMA_EN", scope: !5418, file: !2455, line: 386, type: !952)
!5422 = !DILocation(line: 0, scope: !5418)
!5423 = !DILocation(line: 388, column: 21, scope: !5418)
!5424 = !DILocation(line: 390, column: 1, scope: !5418)
!5425 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2455, file: !2455, line: 392, type: !5276, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5426)
!5426 = !{!5427}
!5427 = !DILocalVariable(name: "uartx", arg: 1, scope: !5425, file: !2455, line: 392, type: !5053)
!5428 = !DILocation(line: 0, scope: !5425)
!5429 = !DILocation(line: 394, column: 12, scope: !5425)
!5430 = !DILocation(line: 394, column: 16, scope: !5425)
!5431 = !DILocation(line: 395, column: 24, scope: !5425)
!5432 = !DILocation(line: 395, column: 28, scope: !5425)
!5433 = !DILocation(line: 396, column: 21, scope: !5425)
!5434 = !DILocation(line: 396, column: 26, scope: !5425)
!5435 = !DILocation(line: 397, column: 12, scope: !5425)
!5436 = !DILocation(line: 397, column: 18, scope: !5425)
!5437 = !DILocation(line: 399, column: 16, scope: !5425)
!5438 = !DILocation(line: 400, column: 24, scope: !5425)
!5439 = !DILocation(line: 400, column: 28, scope: !5425)
!5440 = !DILocation(line: 401, column: 20, scope: !5425)
!5441 = !DILocation(line: 401, column: 24, scope: !5425)
!5442 = !DILocation(line: 403, column: 16, scope: !5425)
!5443 = !DILocation(line: 404, column: 24, scope: !5425)
!5444 = !DILocation(line: 405, column: 28, scope: !5425)
!5445 = !DILocation(line: 407, column: 16, scope: !5425)
!5446 = !DILocation(line: 408, column: 28, scope: !5425)
!5447 = !DILocation(line: 409, column: 16, scope: !5425)
!5448 = !DILocation(line: 411, column: 25, scope: !5425)
!5449 = !DILocation(line: 412, column: 22, scope: !5425)
!5450 = !DILocation(line: 412, column: 26, scope: !5425)
!5451 = !DILocation(line: 413, column: 12, scope: !5425)
!5452 = !DILocation(line: 413, column: 24, scope: !5425)
!5453 = !DILocation(line: 414, column: 12, scope: !5425)
!5454 = !DILocation(line: 414, column: 22, scope: !5425)
!5455 = !DILocation(line: 415, column: 12, scope: !5425)
!5456 = !DILocation(line: 415, column: 25, scope: !5425)
!5457 = !DILocation(line: 416, column: 12, scope: !5425)
!5458 = !DILocation(line: 416, column: 25, scope: !5425)
!5459 = !DILocation(line: 417, column: 12, scope: !5425)
!5460 = !DILocation(line: 417, column: 23, scope: !5425)
!5461 = !DILocation(line: 418, column: 12, scope: !5425)
!5462 = !DILocation(line: 418, column: 27, scope: !5425)
!5463 = !DILocation(line: 419, column: 12, scope: !5425)
!5464 = !DILocation(line: 419, column: 18, scope: !5425)
!5465 = !DILocation(line: 420, column: 12, scope: !5425)
!5466 = !DILocation(line: 420, column: 23, scope: !5425)
!5467 = !DILocation(line: 421, column: 12, scope: !5425)
!5468 = !DILocation(line: 421, column: 22, scope: !5425)
!5469 = !DILocation(line: 422, column: 12, scope: !5425)
!5470 = !DILocation(line: 422, column: 21, scope: !5425)
!5471 = !DILocation(line: 423, column: 12, scope: !5425)
!5472 = !DILocation(line: 423, column: 19, scope: !5425)
!5473 = !DILocation(line: 424, column: 23, scope: !5425)
!5474 = !DILocation(line: 425, column: 12, scope: !5425)
!5475 = !DILocation(line: 425, column: 22, scope: !5425)
!5476 = !DILocation(line: 426, column: 12, scope: !5425)
!5477 = !DILocation(line: 426, column: 22, scope: !5425)
!5478 = !DILocation(line: 427, column: 1, scope: !5425)
!5479 = distinct !DISubprogram(name: "uart_query_empty", scope: !2455, file: !2455, line: 429, type: !5276, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5480)
!5480 = !{!5481}
!5481 = !DILocalVariable(name: "uartx", arg: 1, scope: !5479, file: !2455, line: 429, type: !5053)
!5482 = !DILocation(line: 0, scope: !5479)
!5483 = !DILocation(line: 431, column: 5, scope: !5479)
!5484 = !DILocation(line: 431, column: 31, scope: !5479)
!5485 = !DILocation(line: 431, column: 36, scope: !5479)
!5486 = !DILocation(line: 431, column: 12, scope: !5479)
!5487 = distinct !{!5487, !5483, !5488}
!5488 = !DILocation(line: 431, column: 44, scope: !5479)
!5489 = !DILocation(line: 432, column: 1, scope: !5479)
!5490 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !702, file: !702, line: 134, type: !5491, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5493)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{!4008, !653, !858}
!5493 = !{!5494, !5495, !5496}
!5494 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5490, file: !702, line: 134, type: !653)
!5495 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5490, file: !702, line: 134, type: !858)
!5496 = !DILocalVariable(name: "dma_channel", scope: !5490, file: !702, line: 136, type: !4008)
!5497 = !DILocation(line: 0, scope: !5490)
!5498 = !DILocation(line: 138, column: 5, scope: !5490)
!5499 = !DILocation(line: 140, column: 17, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !702, line: 140, column: 17)
!5501 = distinct !DILexicalBlock(scope: !5490, file: !702, line: 138, column: 24)
!5502 = !DILocation(line: 147, column: 17, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5501, file: !702, line: 147, column: 17)
!5504 = !DILocation(line: 154, column: 17, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5501, file: !702, line: 154, column: 17)
!5506 = !DILocation(line: 161, column: 17, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5501, file: !702, line: 161, column: 17)
!5508 = !DILocation(line: 171, column: 5, scope: !5490)
!5509 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !702, file: !702, line: 174, type: !5510, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5518)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{null, !4008, !5512}
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 32)
!5513 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !648, line: 96, baseType: !5514)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 93, size: 64, elements: !5515)
!5515 = !{!5516, !5517}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !5514, file: !648, line: 94, baseType: !211, size: 8)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !5514, file: !648, line: 95, baseType: !653, size: 32, offset: 32)
!5518 = !{!5519, !5520}
!5519 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !5509, file: !702, line: 174, type: !4008)
!5520 = !DILocalVariable(name: "user_data", arg: 2, scope: !5509, file: !702, line: 174, type: !5512)
!5521 = !DILocation(line: 0, scope: !5509)
!5522 = !DILocation(line: 176, column: 5, scope: !5509)
!5523 = !DILocation(line: 0, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5509, file: !702, line: 176, column: 26)
!5525 = !DILocation(line: 212, column: 1, scope: !5509)
!5526 = distinct !DISubprogram(name: "uart_enable_dma", scope: !702, file: !702, line: 214, type: !5527, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5529)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{null, !715}
!5529 = !{!5530}
!5530 = !DILocalVariable(name: "uartx", arg: 1, scope: !5526, file: !702, line: 214, type: !715)
!5531 = !DILocation(line: 0, scope: !5526)
!5532 = !DILocation(line: 216, column: 12, scope: !5526)
!5533 = !DILocation(line: 216, column: 19, scope: !5526)
!5534 = !DILocation(line: 217, column: 1, scope: !5526)
!5535 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !702, file: !702, line: 219, type: !870, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5536)
!5536 = !{!5537, !5538, !5539, !5540}
!5537 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5535, file: !702, line: 219, type: !780)
!5538 = !DILocalVariable(name: "uart_port", scope: !5535, file: !702, line: 221, type: !653)
!5539 = !DILocalVariable(name: "type", scope: !5535, file: !702, line: 222, type: !5385)
!5540 = !DILocalVariable(name: "uartx", scope: !5535, file: !702, line: 223, type: !715)
!5541 = !DILocation(line: 0, scope: !5535)
!5542 = !DILocation(line: 225, column: 5, scope: !5535)
!5543 = !DILocation(line: 242, column: 13, scope: !5535)
!5544 = !DILocation(line: 243, column: 12, scope: !5535)
!5545 = !DILocation(line: 245, column: 5, scope: !5535)
!5546 = !DILocation(line: 248, column: 13, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5535, file: !702, line: 245, column: 19)
!5548 = !DILocation(line: 249, column: 13, scope: !5547)
!5549 = !DILocation(line: 252, column: 13, scope: !5547)
!5550 = !DILocation(line: 253, column: 13, scope: !5547)
!5551 = !DILocation(line: 263, column: 13, scope: !5547)
!5552 = !DILocation(line: 264, column: 13, scope: !5547)
!5553 = !DILocation(line: 276, column: 13, scope: !5547)
!5554 = !DILocation(line: 278, column: 1, scope: !5535)
!5555 = !DILocation(line: 131, column: 9, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !786, file: !787, line: 131, column: 9)
!5557 = !DILocation(line: 131, column: 9, scope: !786)
!5558 = !DILocation(line: 0, scope: !786)
!5559 = !DILocation(line: 134, column: 49, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5561, file: !787, line: 133, column: 46)
!5561 = distinct !DILexicalBlock(scope: !5562, file: !787, line: 133, column: 9)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !787, line: 133, column: 9)
!5563 = distinct !DILexicalBlock(scope: !5556, file: !787, line: 131, column: 28)
!5564 = !DILocation(line: 134, column: 13, scope: !5560)
!5565 = !DILocation(line: 133, column: 42, scope: !5561)
!5566 = !DILocation(line: 133, column: 23, scope: !5561)
!5567 = !DILocation(line: 133, column: 9, scope: !5562)
!5568 = distinct !{!5568, !5567, !5569}
!5569 = !DILocation(line: 135, column: 9, scope: !5562)
!5570 = !DILocation(line: 136, column: 22, scope: !5563)
!5571 = !DILocation(line: 137, column: 5, scope: !5563)
!5572 = !DILocation(line: 138, column: 5, scope: !786)
!5573 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !796, file: !796, line: 1577, type: !5574, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5576)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{null, !781, !175}
!5576 = !{!5577, !5578}
!5577 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5573, file: !796, line: 1577, type: !781)
!5578 = !DILocalVariable(name: "priority", arg: 2, scope: !5573, file: !796, line: 1577, type: !175)
!5579 = !DILocation(line: 0, scope: !5573)
!5580 = !DILocation(line: 1582, column: 34, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !796, line: 1581, column: 8)
!5582 = distinct !DILexicalBlock(scope: !5573, file: !796, line: 1579, column: 6)
!5583 = !DILocation(line: 1582, column: 5, scope: !5581)
!5584 = !DILocation(line: 1582, column: 32, scope: !5581)
!5585 = !DILocation(line: 1583, column: 1, scope: !5573)
!5586 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !787, file: !787, line: 141, type: !5587, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5589)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!790, !780}
!5589 = !{!5590, !5591}
!5590 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5586, file: !787, line: 141, type: !780)
!5591 = !DILocalVariable(name: "status", scope: !5586, file: !787, line: 143, type: !790)
!5592 = !DILocation(line: 0, scope: !5586)
!5593 = !DILocation(line: 145, column: 40, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5586, file: !787, line: 145, column: 9)
!5595 = !DILocation(line: 149, column: 9, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5594, file: !787, line: 148, column: 12)
!5597 = !DILocation(line: 153, column: 5, scope: !5586)
!5598 = !DILocation(line: 154, column: 1, scope: !5586)
!5599 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !796, file: !796, line: 1494, type: !5600, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5602)
!5600 = !DISubroutineType(types: !5601)
!5601 = !{null, !781}
!5602 = !{!5603}
!5603 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5599, file: !796, line: 1494, type: !781)
!5604 = !DILocation(line: 0, scope: !5599)
!5605 = !DILocation(line: 1497, column: 91, scope: !5599)
!5606 = !DILocation(line: 1497, column: 61, scope: !5599)
!5607 = !DILocation(line: 1497, column: 40, scope: !5599)
!5608 = !DILocation(line: 1497, column: 3, scope: !5599)
!5609 = !DILocation(line: 1497, column: 46, scope: !5599)
!5610 = !DILocation(line: 1498, column: 1, scope: !5599)
!5611 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !787, file: !787, line: 156, type: !5587, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5612)
!5612 = !{!5613, !5614}
!5613 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5611, file: !787, line: 156, type: !780)
!5614 = !DILocalVariable(name: "status", scope: !5611, file: !787, line: 158, type: !790)
!5615 = !DILocation(line: 0, scope: !5611)
!5616 = !DILocation(line: 160, column: 40, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5611, file: !787, line: 160, column: 9)
!5618 = !DILocation(line: 164, column: 9, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5617, file: !787, line: 163, column: 12)
!5620 = !DILocation(line: 168, column: 5, scope: !5611)
!5621 = !DILocation(line: 169, column: 1, scope: !5611)
!5622 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !796, file: !796, line: 1507, type: !5600, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5623)
!5623 = !{!5624}
!5624 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5622, file: !796, line: 1507, type: !781)
!5625 = !DILocation(line: 0, scope: !5622)
!5626 = !DILocation(line: 1509, column: 65, scope: !5622)
!5627 = !DILocation(line: 1509, column: 44, scope: !5622)
!5628 = !DILocation(line: 1509, column: 32, scope: !5622)
!5629 = !DILocation(line: 1509, column: 3, scope: !5622)
!5630 = !DILocation(line: 1509, column: 39, scope: !5622)
!5631 = !DILocation(line: 1510, column: 1, scope: !5622)
!5632 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !787, file: !787, line: 171, type: !5633, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5635)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!175, !780}
!5635 = !{!5636, !5637}
!5636 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5632, file: !787, line: 171, type: !780)
!5637 = !DILocalVariable(name: "ret", scope: !5632, file: !787, line: 173, type: !175)
!5638 = !DILocation(line: 0, scope: !5632)
!5639 = !DILocation(line: 175, column: 40, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5632, file: !787, line: 175, column: 9)
!5641 = !DILocation(line: 178, column: 15, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5640, file: !787, line: 177, column: 12)
!5643 = !DILocation(line: 181, column: 5, scope: !5632)
!5644 = !DILocation(line: 182, column: 1, scope: !5632)
!5645 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !796, file: !796, line: 1523, type: !5646, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5648)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!175, !781}
!5648 = !{!5649}
!5649 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5645, file: !796, line: 1523, type: !781)
!5650 = !DILocation(line: 0, scope: !5645)
!5651 = !DILocation(line: 1525, column: 51, scope: !5645)
!5652 = !DILocation(line: 1525, column: 23, scope: !5645)
!5653 = !DILocation(line: 1525, column: 83, scope: !5645)
!5654 = !DILocation(line: 1525, column: 22, scope: !5645)
!5655 = !DILocation(line: 1525, column: 3, scope: !5645)
!5656 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !787, file: !787, line: 184, type: !5587, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5657)
!5657 = !{!5658, !5659}
!5658 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5656, file: !787, line: 184, type: !780)
!5659 = !DILocalVariable(name: "status", scope: !5656, file: !787, line: 186, type: !790)
!5660 = !DILocation(line: 0, scope: !5656)
!5661 = !DILocation(line: 188, column: 40, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5656, file: !787, line: 188, column: 9)
!5663 = !DILocation(line: 192, column: 9, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5662, file: !787, line: 191, column: 12)
!5665 = !DILocation(line: 196, column: 5, scope: !5656)
!5666 = !DILocation(line: 197, column: 1, scope: !5656)
!5667 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !796, file: !796, line: 1535, type: !5600, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5668)
!5668 = !{!5669}
!5669 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5667, file: !796, line: 1535, type: !781)
!5670 = !DILocation(line: 0, scope: !5667)
!5671 = !DILocation(line: 1537, column: 65, scope: !5667)
!5672 = !DILocation(line: 1537, column: 44, scope: !5667)
!5673 = !DILocation(line: 1537, column: 32, scope: !5667)
!5674 = !DILocation(line: 1537, column: 3, scope: !5667)
!5675 = !DILocation(line: 1537, column: 39, scope: !5667)
!5676 = !DILocation(line: 1538, column: 1, scope: !5667)
!5677 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !787, file: !787, line: 199, type: !5587, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5678)
!5678 = !{!5679, !5680}
!5679 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5677, file: !787, line: 199, type: !780)
!5680 = !DILocalVariable(name: "status", scope: !5677, file: !787, line: 201, type: !790)
!5681 = !DILocation(line: 0, scope: !5677)
!5682 = !DILocation(line: 203, column: 40, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5677, file: !787, line: 203, column: 9)
!5684 = !DILocation(line: 207, column: 9, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5683, file: !787, line: 206, column: 12)
!5686 = !DILocation(line: 211, column: 5, scope: !5677)
!5687 = !DILocation(line: 212, column: 1, scope: !5677)
!5688 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !796, file: !796, line: 1547, type: !5600, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5689)
!5689 = !{!5690}
!5690 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5688, file: !796, line: 1547, type: !781)
!5691 = !DILocation(line: 0, scope: !5688)
!5692 = !DILocation(line: 1549, column: 65, scope: !5688)
!5693 = !DILocation(line: 1549, column: 44, scope: !5688)
!5694 = !DILocation(line: 1549, column: 32, scope: !5688)
!5695 = !DILocation(line: 1549, column: 3, scope: !5688)
!5696 = !DILocation(line: 1549, column: 39, scope: !5688)
!5697 = !DILocation(line: 1550, column: 1, scope: !5688)
!5698 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !787, file: !787, line: 214, type: !5699, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!790, !780, !175}
!5701 = !{!5702, !5703, !5704}
!5702 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5698, file: !787, line: 214, type: !780)
!5703 = !DILocalVariable(name: "priority", arg: 2, scope: !5698, file: !787, line: 214, type: !175)
!5704 = !DILocalVariable(name: "status", scope: !5698, file: !787, line: 216, type: !790)
!5705 = !DILocation(line: 0, scope: !5698)
!5706 = !DILocation(line: 218, column: 40, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5698, file: !787, line: 218, column: 9)
!5708 = !DILocation(line: 222, column: 9, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5707, file: !787, line: 221, column: 12)
!5710 = !DILocation(line: 226, column: 5, scope: !5698)
!5711 = !DILocation(line: 227, column: 1, scope: !5698)
!5712 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !787, file: !787, line: 229, type: !5633, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5713)
!5713 = !{!5714, !5715}
!5714 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5712, file: !787, line: 229, type: !780)
!5715 = !DILocalVariable(name: "ret", scope: !5712, file: !787, line: 231, type: !175)
!5716 = !DILocation(line: 0, scope: !5712)
!5717 = !DILocation(line: 233, column: 40, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5712, file: !787, line: 233, column: 9)
!5719 = !DILocation(line: 236, column: 15, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5718, file: !787, line: 235, column: 12)
!5721 = !DILocation(line: 239, column: 5, scope: !5712)
!5722 = !DILocation(line: 240, column: 1, scope: !5712)
!5723 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !796, file: !796, line: 1597, type: !5646, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5724)
!5724 = !{!5725}
!5725 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5723, file: !796, line: 1597, type: !781)
!5726 = !DILocation(line: 0, scope: !5723)
!5727 = !DILocation(line: 1603, column: 23, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5729, file: !796, line: 1602, column: 8)
!5729 = distinct !DILexicalBlock(scope: !5723, file: !796, line: 1600, column: 6)
!5730 = !DILocation(line: 1603, column: 60, scope: !5728)
!5731 = !DILocation(line: 1604, column: 1, scope: !5723)
!5732 = distinct !DISubprogram(name: "isrC_main", scope: !787, file: !787, line: 248, type: !788, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5733)
!5733 = !{!5734, !5735}
!5734 = !DILocalVariable(name: "status", scope: !5732, file: !787, line: 250, type: !790)
!5735 = !DILocalVariable(name: "irq_number", scope: !5732, file: !787, line: 251, type: !780)
!5736 = !DILocation(line: 0, scope: !5732)
!5737 = !DILocation(line: 253, column: 5, scope: !5732)
!5738 = !DILocation(line: 255, column: 35, scope: !5732)
!5739 = !DILocation(line: 256, column: 40, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5732, file: !787, line: 256, column: 9)
!5741 = !DILocation(line: 259, column: 48, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5740, file: !787, line: 259, column: 16)
!5743 = !DILocation(line: 259, column: 62, scope: !5742)
!5744 = !DILocation(line: 259, column: 16, scope: !5740)
!5745 = !DILocation(line: 261, column: 9, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5742, file: !787, line: 259, column: 71)
!5747 = !DILocation(line: 262, column: 9, scope: !5746)
!5748 = !DILocation(line: 264, column: 55, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5742, file: !787, line: 263, column: 12)
!5750 = !DILocation(line: 264, column: 41, scope: !5749)
!5751 = !DILocation(line: 264, column: 53, scope: !5749)
!5752 = !DILocation(line: 265, column: 41, scope: !5749)
!5753 = !DILocation(line: 265, column: 9, scope: !5749)
!5754 = !DILocation(line: 269, column: 5, scope: !5732)
!5755 = !DILocation(line: 270, column: 1, scope: !5732)
!5756 = distinct !DISubprogram(name: "get_current_irq", scope: !787, file: !787, line: 242, type: !3355, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5757)
!5757 = !{!5758}
!5758 = !DILocalVariable(name: "irq_num", scope: !5756, file: !787, line: 244, type: !175)
!5759 = !DILocation(line: 244, column: 31, scope: !5756)
!5760 = !DILocation(line: 244, column: 36, scope: !5756)
!5761 = !DILocation(line: 0, scope: !5756)
!5762 = !DILocation(line: 245, column: 21, scope: !5756)
!5763 = !DILocation(line: 245, column: 5, scope: !5756)
!5764 = distinct !DISubprogram(name: "get_pending_irq", scope: !787, file: !787, line: 121, type: !3355, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !210)
!5765 = !DILocation(line: 123, column: 19, scope: !5764)
!5766 = !DILocation(line: 123, column: 51, scope: !5764)
!5767 = !DILocation(line: 123, column: 5, scope: !5764)
!5768 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !787, file: !787, line: 272, type: !5769, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5772)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!790, !780, !5771}
!5771 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !634, line: 175, baseType: !869)
!5772 = !{!5773, !5774, !5775}
!5773 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5768, file: !787, line: 272, type: !780)
!5774 = !DILocalVariable(name: "callback", arg: 2, scope: !5768, file: !787, line: 272, type: !5771)
!5775 = !DILocalVariable(name: "mask", scope: !5768, file: !787, line: 274, type: !175)
!5776 = !DILocation(line: 0, scope: !5768)
!5777 = !DILocation(line: 276, column: 40, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5768, file: !787, line: 276, column: 9)
!5779 = !DILocation(line: 280, column: 12, scope: !5768)
!5780 = !DILocation(line: 281, column: 5, scope: !5768)
!5781 = !DILocation(line: 282, column: 37, scope: !5768)
!5782 = !DILocation(line: 282, column: 51, scope: !5768)
!5783 = !DILocation(line: 283, column: 37, scope: !5768)
!5784 = !DILocation(line: 283, column: 49, scope: !5768)
!5785 = !DILocation(line: 284, column: 5, scope: !5768)
!5786 = !DILocation(line: 286, column: 5, scope: !5768)
!5787 = !DILocation(line: 287, column: 1, scope: !5768)
!5788 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !787, file: !787, line: 289, type: !5789, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5791)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!790, !920}
!5791 = !{!5792}
!5792 = !DILocalVariable(name: "mask", arg: 1, scope: !5788, file: !787, line: 289, type: !920)
!5793 = !DILocation(line: 0, scope: !5788)
!5794 = !DILocation(line: 291, column: 13, scope: !5788)
!5795 = !DILocation(line: 291, column: 11, scope: !5788)
!5796 = !DILocation(line: 292, column: 5, scope: !5788)
!5797 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !787, file: !787, line: 295, type: !5798, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5800)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!790, !175}
!5800 = !{!5801}
!5801 = !DILocalVariable(name: "mask", arg: 1, scope: !5797, file: !787, line: 295, type: !175)
!5802 = !DILocation(line: 0, scope: !5797)
!5803 = !DILocation(line: 297, column: 5, scope: !5797)
!5804 = !DILocation(line: 298, column: 5, scope: !5797)
!5805 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2459, file: !2459, line: 51, type: !3355, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5806)
!5806 = !{!5807, !5808}
!5807 = !DILocalVariable(name: "mask", scope: !5805, file: !2459, line: 53, type: !175)
!5808 = !DILocalVariable(name: "priority", scope: !5805, file: !2459, line: 55, type: !175)
!5809 = !DILocation(line: 521, column: 3, scope: !5810, inlinedAt: !5814)
!5810 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !5811, file: !5811, line: 517, type: !3355, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5812)
!5811 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!5812 = !{!5813}
!5813 = !DILocalVariable(name: "result", scope: !5810, file: !5811, line: 519, type: !175)
!5814 = distinct !DILocation(line: 53, column: 21, scope: !5805)
!5815 = !{i64 457584}
!5816 = !DILocation(line: 0, scope: !5810, inlinedAt: !5814)
!5817 = !DILocation(line: 0, scope: !5805)
!5818 = !DILocalVariable(name: "value", arg: 1, scope: !5819, file: !5811, line: 532, type: !175)
!5819 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !5811, file: !5811, line: 532, type: !5820, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5822)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{null, !175}
!5822 = !{!5818}
!5823 = !DILocation(line: 0, scope: !5819, inlinedAt: !5824)
!5824 = distinct !DILocation(line: 56, column: 5, scope: !5805)
!5825 = !DILocation(line: 534, column: 3, scope: !5819, inlinedAt: !5824)
!5826 = !{i64 457917}
!5827 = !DILocation(line: 456, column: 3, scope: !5828, inlinedAt: !5830)
!5828 = distinct !DISubprogram(name: "__DMB", scope: !5829, file: !5829, line: 454, type: !208, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !210)
!5829 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!5830 = distinct !DILocation(line: 57, column: 5, scope: !5805)
!5831 = !{i64 430673}
!5832 = !DILocation(line: 434, column: 3, scope: !5833, inlinedAt: !5834)
!5833 = distinct !DISubprogram(name: "__ISB", scope: !5829, file: !5829, line: 432, type: !208, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !210)
!5834 = distinct !DILocation(line: 58, column: 5, scope: !5805)
!5835 = !{i64 430088}
!5836 = !DILocation(line: 59, column: 5, scope: !5805)
!5837 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2459, file: !2459, line: 62, type: !5820, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5838)
!5838 = !{!5839}
!5839 = !DILocalVariable(name: "mask", arg: 1, scope: !5837, file: !2459, line: 62, type: !175)
!5840 = !DILocation(line: 0, scope: !5837)
!5841 = !DILocation(line: 0, scope: !5819, inlinedAt: !5842)
!5842 = distinct !DILocation(line: 64, column: 5, scope: !5837)
!5843 = !DILocation(line: 534, column: 3, scope: !5819, inlinedAt: !5842)
!5844 = !DILocation(line: 456, column: 3, scope: !5828, inlinedAt: !5845)
!5845 = distinct !DILocation(line: 65, column: 5, scope: !5837)
!5846 = !DILocation(line: 434, column: 3, scope: !5833, inlinedAt: !5847)
!5847 = distinct !DILocation(line: 66, column: 5, scope: !5837)
!5848 = !DILocation(line: 67, column: 1, scope: !5837)
!5849 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2459, file: !2459, line: 69, type: !208, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5850)
!5850 = !{!5851, !5852}
!5851 = !DILocalVariable(name: "irq_number", scope: !5849, file: !2459, line: 71, type: !780)
!5852 = !DILocalVariable(name: "mask", scope: !5849, file: !2459, line: 72, type: !175)
!5853 = !DILocation(line: 72, column: 21, scope: !5849)
!5854 = !DILocation(line: 0, scope: !5849)
!5855 = !DILocation(line: 73, column: 5, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5849, file: !2459, line: 73, column: 5)
!5857 = !DILocation(line: 74, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !2459, line: 73, column: 85)
!5859 = distinct !DILexicalBlock(scope: !5856, file: !2459, line: 73, column: 5)
!5860 = !DILocation(line: 73, column: 81, scope: !5859)
!5861 = !DILocation(line: 73, column: 53, scope: !5859)
!5862 = distinct !{!5862, !5855, !5863}
!5863 = !DILocation(line: 75, column: 5, scope: !5856)
!5864 = !DILocation(line: 76, column: 5, scope: !5849)
!5865 = !DILocation(line: 77, column: 1, scope: !5849)
!5866 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !796, file: !796, line: 1507, type: !5600, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5867)
!5867 = !{!5868}
!5868 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5866, file: !796, line: 1507, type: !781)
!5869 = !DILocation(line: 0, scope: !5866)
!5870 = !DILocation(line: 1509, column: 65, scope: !5866)
!5871 = !DILocation(line: 1509, column: 44, scope: !5866)
!5872 = !DILocation(line: 1509, column: 32, scope: !5866)
!5873 = !DILocation(line: 1509, column: 3, scope: !5866)
!5874 = !DILocation(line: 1509, column: 39, scope: !5866)
!5875 = !DILocation(line: 1510, column: 1, scope: !5866)
!5876 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2459, file: !2459, line: 79, type: !208, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5877)
!5877 = !{!5878, !5879}
!5878 = !DILocalVariable(name: "irq_number", scope: !5876, file: !2459, line: 81, type: !780)
!5879 = !DILocalVariable(name: "mask", scope: !5876, file: !2459, line: 82, type: !175)
!5880 = !DILocation(line: 82, column: 21, scope: !5876)
!5881 = !DILocation(line: 0, scope: !5876)
!5882 = !DILocation(line: 84, column: 5, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5876, file: !2459, line: 84, column: 5)
!5884 = !DILocation(line: 85, column: 9, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !2459, line: 84, column: 85)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !2459, line: 84, column: 5)
!5887 = !DILocation(line: 84, column: 81, scope: !5886)
!5888 = !DILocation(line: 84, column: 53, scope: !5886)
!5889 = distinct !{!5889, !5882, !5890}
!5890 = !DILocation(line: 86, column: 5, scope: !5883)
!5891 = !DILocation(line: 87, column: 5, scope: !5876)
!5892 = !DILocation(line: 88, column: 1, scope: !5876)
!5893 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !796, file: !796, line: 1494, type: !5600, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5894)
!5894 = !{!5895}
!5895 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5893, file: !796, line: 1494, type: !781)
!5896 = !DILocation(line: 0, scope: !5893)
!5897 = !DILocation(line: 1497, column: 91, scope: !5893)
!5898 = !DILocation(line: 1497, column: 61, scope: !5893)
!5899 = !DILocation(line: 1497, column: 40, scope: !5893)
!5900 = !DILocation(line: 1497, column: 3, scope: !5893)
!5901 = !DILocation(line: 1497, column: 46, scope: !5893)
!5902 = !DILocation(line: 1498, column: 1, scope: !5893)
!5903 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2459, file: !2459, line: 90, type: !208, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5904)
!5904 = !{!5905}
!5905 = !DILocalVariable(name: "irq_number", scope: !5903, file: !2459, line: 92, type: !780)
!5906 = !DILocation(line: 0, scope: !5903)
!5907 = !DILocation(line: 93, column: 5, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5903, file: !2459, line: 93, column: 5)
!5909 = !DILocation(line: 94, column: 9, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !2459, line: 93, column: 85)
!5911 = distinct !DILexicalBlock(scope: !5908, file: !2459, line: 93, column: 5)
!5912 = !DILocation(line: 93, column: 81, scope: !5911)
!5913 = !DILocation(line: 93, column: 53, scope: !5911)
!5914 = distinct !{!5914, !5907, !5915}
!5915 = !DILocation(line: 95, column: 5, scope: !5908)
!5916 = !DILocation(line: 96, column: 1, scope: !5903)
!5917 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !796, file: !796, line: 1547, type: !5600, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5918)
!5918 = !{!5919}
!5919 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5917, file: !796, line: 1547, type: !781)
!5920 = !DILocation(line: 0, scope: !5917)
!5921 = !DILocation(line: 1549, column: 65, scope: !5917)
!5922 = !DILocation(line: 1549, column: 44, scope: !5917)
!5923 = !DILocation(line: 1549, column: 32, scope: !5917)
!5924 = !DILocation(line: 1549, column: 3, scope: !5917)
!5925 = !DILocation(line: 1549, column: 39, scope: !5917)
!5926 = !DILocation(line: 1550, column: 1, scope: !5917)
!5927 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2459, file: !2459, line: 98, type: !5587, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5928)
!5928 = !{!5929}
!5929 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5927, file: !2459, line: 98, type: !780)
!5930 = !DILocation(line: 0, scope: !5927)
!5931 = !DILocation(line: 100, column: 24, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5927, file: !2459, line: 100, column: 9)
!5933 = !DILocation(line: 104, column: 5, scope: !5927)
!5934 = !DILocation(line: 105, column: 5, scope: !5927)
!5935 = !DILocation(line: 106, column: 1, scope: !5927)
!5936 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2459, file: !2459, line: 45, type: !870, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5937)
!5937 = !{!5938}
!5938 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5936, file: !2459, line: 45, type: !780)
!5939 = !DILocation(line: 0, scope: !5936)
!5940 = !DILocation(line: 47, column: 54, scope: !5936)
!5941 = !DILocation(line: 47, column: 16, scope: !5936)
!5942 = !DILocation(line: 445, column: 3, scope: !5943, inlinedAt: !5944)
!5943 = distinct !DISubprogram(name: "__DSB", scope: !5829, file: !5829, line: 443, type: !208, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !210)
!5944 = distinct !DILocation(line: 48, column: 5, scope: !5936)
!5945 = !{i64 430384}
!5946 = !DILocation(line: 49, column: 1, scope: !5936)
!5947 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2459, file: !2459, line: 114, type: !3355, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !210)
!5948 = !DILocation(line: 116, column: 19, scope: !5947)
!5949 = !DILocation(line: 116, column: 24, scope: !5947)
!5950 = !DILocation(line: 116, column: 5, scope: !5947)
!5951 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !883, file: !883, line: 71, type: !5952, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !5954)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{null, !194, !175}
!5954 = !{!5955, !5956, !5957, !6051, !6052, !6053}
!5955 = !DILocalVariable(name: "MTDData", arg: 1, scope: !5951, file: !883, line: 71, type: !194)
!5956 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !5951, file: !883, line: 71, type: !175)
!5957 = !DILocalVariable(name: "D", scope: !5951, file: !883, line: 73, type: !5958)
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5959, size: 32)
!5959 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1076, line: 193, baseType: !5960)
!5960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 134, size: 1824, elements: !5961)
!5961 = !{!5962, !5963, !5964, !5970, !5976, !5977, !5984, !5985, !5992, !5993, !5994, !5995, !6002, !6003, !6033, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050}
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !5960, file: !1076, line: 136, baseType: !175, size: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !5960, file: !1076, line: 137, baseType: !680, size: 32, offset: 32)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !5960, file: !1076, line: 138, baseType: !5965, size: 32, offset: 64)
!5965 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !5966)
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5967, size: 32)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !5968)
!5968 = !{!5969}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5967, file: !1160, line: 55, baseType: !378, size: 8)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !5960, file: !1076, line: 139, baseType: !5971, size: 32, offset: 96)
!5971 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !5972)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 32)
!5973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !5974)
!5974 = !{!5975}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5973, file: !1160, line: 45, baseType: !378, size: 8)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !5960, file: !1076, line: 140, baseType: !1172, size: 8, offset: 128)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !5960, file: !1076, line: 143, baseType: !5978, size: 32, offset: 160)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 32)
!5979 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !5980)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !5981)
!5981 = !{!5982, !5983}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !5980, file: !1178, line: 144, baseType: !175, size: 32)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !5980, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !5960, file: !1076, line: 144, baseType: !680, size: 32, offset: 192)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !5960, file: !1076, line: 145, baseType: !5986, size: 32, offset: 224)
!5986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !5988)
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !5989)
!5989 = !{!5990, !5991}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !5988, file: !1178, line: 150, baseType: !175, size: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !5988, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !5960, file: !1076, line: 146, baseType: !680, size: 32, offset: 256)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !5960, file: !1076, line: 147, baseType: !175, size: 32, offset: 288)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !5960, file: !1076, line: 148, baseType: !680, size: 32, offset: 320)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !5960, file: !1076, line: 151, baseType: !5996, size: 1024, offset: 352)
!5996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5997, size: 1024, elements: !1201)
!5997 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !5998)
!5998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !5999)
!5999 = !{!6000, !6001}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !5998, file: !1178, line: 168, baseType: !175, size: 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !5998, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !5960, file: !1076, line: 155, baseType: !1203, size: 32, offset: 1376)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !5960, file: !1076, line: 156, baseType: !6004, size: 32, offset: 1408)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 32)
!6005 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1076, line: 124, baseType: !6006)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 90, size: 200, elements: !6007)
!6007 = !{!6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6006, file: !1076, line: 91, baseType: !378, size: 8)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6006, file: !1076, line: 92, baseType: !378, size: 8, offset: 8)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6006, file: !1076, line: 94, baseType: !378, size: 8, offset: 16)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6006, file: !1076, line: 95, baseType: !378, size: 8, offset: 24)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6006, file: !1076, line: 96, baseType: !378, size: 8, offset: 32)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6006, file: !1076, line: 98, baseType: !378, size: 8, offset: 40)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6006, file: !1076, line: 99, baseType: !378, size: 8, offset: 48)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6006, file: !1076, line: 100, baseType: !378, size: 8, offset: 56)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6006, file: !1076, line: 101, baseType: !378, size: 8, offset: 64)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6006, file: !1076, line: 103, baseType: !378, size: 8, offset: 72)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6006, file: !1076, line: 104, baseType: !378, size: 8, offset: 80)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6006, file: !1076, line: 106, baseType: !378, size: 8, offset: 88)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6006, file: !1076, line: 107, baseType: !378, size: 8, offset: 96)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6006, file: !1076, line: 108, baseType: !378, size: 8, offset: 104)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6006, file: !1076, line: 109, baseType: !378, size: 8, offset: 112)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6006, file: !1076, line: 110, baseType: !378, size: 8, offset: 120)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6006, file: !1076, line: 111, baseType: !378, size: 8, offset: 128)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6006, file: !1076, line: 112, baseType: !378, size: 8, offset: 136)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6006, file: !1076, line: 114, baseType: !378, size: 8, offset: 144)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6006, file: !1076, line: 115, baseType: !378, size: 8, offset: 152)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6006, file: !1076, line: 118, baseType: !378, size: 8, offset: 160)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6006, file: !1076, line: 119, baseType: !378, size: 8, offset: 168)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6006, file: !1076, line: 120, baseType: !378, size: 8, offset: 176)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6006, file: !1076, line: 121, baseType: !378, size: 8, offset: 184)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6006, file: !1076, line: 122, baseType: !378, size: 8, offset: 192)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !5960, file: !1076, line: 157, baseType: !175, size: 32, offset: 1440)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !5960, file: !1076, line: 158, baseType: !952, size: 16, offset: 1472)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !5960, file: !1076, line: 159, baseType: !952, size: 16, offset: 1488)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !5960, file: !1076, line: 163, baseType: !952, size: 16, offset: 1504)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !5960, file: !1076, line: 164, baseType: !952, size: 16, offset: 1520)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !5960, file: !1076, line: 167, baseType: !378, size: 8, offset: 1536)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !5960, file: !1076, line: 168, baseType: !1242, size: 24, offset: 1544)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !5960, file: !1076, line: 169, baseType: !378, size: 8, offset: 1568)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !5960, file: !1076, line: 170, baseType: !378, size: 8, offset: 1576)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !5960, file: !1076, line: 173, baseType: !952, size: 16, offset: 1584)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !5960, file: !1076, line: 174, baseType: !175, size: 32, offset: 1600)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !5960, file: !1076, line: 175, baseType: !175, size: 32, offset: 1632)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !5960, file: !1076, line: 178, baseType: !211, size: 8, offset: 1664)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !5960, file: !1076, line: 179, baseType: !211, size: 8, offset: 1672)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !5960, file: !1076, line: 182, baseType: !1253, size: 32, offset: 1696)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !5960, file: !1076, line: 186, baseType: !1253, size: 32, offset: 1728)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !5960, file: !1076, line: 187, baseType: !1258, size: 32, offset: 1760)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !5960, file: !1076, line: 188, baseType: !1258, size: 32, offset: 1792)
!6051 = !DILocalVariable(name: "i", scope: !5951, file: !883, line: 74, type: !175)
!6052 = !DILocalVariable(name: "data_cnt", scope: !5951, file: !883, line: 74, type: !175)
!6053 = !DILocalVariable(name: "p_data", scope: !5951, file: !883, line: 75, type: !920)
!6054 = !DILocation(line: 0, scope: !5951)
!6055 = !DILocation(line: 77, column: 16, scope: !5951)
!6056 = !DILocation(line: 79, column: 53, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6058, file: !883, line: 79, column: 5)
!6058 = distinct !DILexicalBlock(scope: !5951, file: !883, line: 79, column: 5)
!6059 = !DILocation(line: 79, column: 5, scope: !6058)
!6060 = !DILocation(line: 79, column: 41, scope: !6058)
!6061 = !DILocation(line: 77, column: 47, scope: !5951)
!6062 = !DILocation(line: 80, column: 13, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !883, line: 80, column: 13)
!6064 = distinct !DILexicalBlock(scope: !6057, file: !883, line: 79, column: 80)
!6065 = !DILocation(line: 80, column: 21, scope: !6063)
!6066 = !DILocation(line: 80, column: 13, scope: !6064)
!6067 = !DILocation(line: 81, column: 13, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !883, line: 81, column: 13)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !883, line: 81, column: 13)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !883, line: 81, column: 13)
!6071 = distinct !DILexicalBlock(scope: !6063, file: !883, line: 80, column: 36)
!6072 = !DILocation(line: 79, column: 65, scope: !6057)
!6073 = !DILocation(line: 79, column: 70, scope: !6057)
!6074 = distinct !{!6074, !6059, !6075}
!6075 = !DILocation(line: 84, column: 5, scope: !6058)
!6076 = !DILocation(line: 85, column: 1, scope: !5951)
!6077 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !883, file: !883, line: 93, type: !3103, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6078)
!6078 = !{!6079, !6080}
!6079 = !DILocalVariable(name: "num", arg: 1, scope: !6077, file: !883, line: 93, type: !175)
!6080 = !DILocalVariable(name: "ret", scope: !6077, file: !883, line: 95, type: !7)
!6081 = !DILocation(line: 0, scope: !6077)
!6082 = !DILocation(line: 100, column: 9, scope: !6077)
!6083 = !DILocation(line: 102, column: 5, scope: !6077)
!6084 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !883, file: !883, line: 110, type: !6085, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6088)
!6085 = !DISubroutineType(types: !6086)
!6086 = !{null, !6087}
!6087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!6088 = !{!6089, !6090}
!6089 = !DILocalVariable(name: "CS", arg: 1, scope: !6084, file: !883, line: 110, type: !6087)
!6090 = !DILocalVariable(name: "val", scope: !6084, file: !883, line: 112, type: !175)
!6091 = !DILocation(line: 0, scope: !6084)
!6092 = !DILocation(line: 114, column: 5, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !883, line: 114, column: 5)
!6094 = distinct !DILexicalBlock(scope: !6084, file: !883, line: 114, column: 5)
!6095 = !DILocation(line: 116, column: 16, scope: !6084)
!6096 = !DILocation(line: 117, column: 9, scope: !6084)
!6097 = !DILocation(line: 122, column: 13, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !883, line: 121, column: 27)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !883, line: 121, column: 16)
!6100 = distinct !DILexicalBlock(scope: !6084, file: !883, line: 117, column: 9)
!6101 = !DILocation(line: 127, column: 9, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !883, line: 127, column: 9)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !883, line: 127, column: 9)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !883, line: 127, column: 9)
!6105 = distinct !DILexicalBlock(scope: !6099, file: !883, line: 125, column: 12)
!6106 = !DILocation(line: 0, scope: !6100)
!6107 = !DILocation(line: 134, column: 5, scope: !6084)
!6108 = !DILocation(line: 134, column: 19, scope: !6084)
!6109 = !DILocation(line: 134, column: 35, scope: !6084)
!6110 = !DILocation(line: 134, column: 12, scope: !6084)
!6111 = distinct !{!6111, !6107, !6112}
!6112 = !DILocation(line: 134, column: 57, scope: !6084)
!6113 = !DILocation(line: 135, column: 19, scope: !6084)
!6114 = !DILocation(line: 135, column: 34, scope: !6084)
!6115 = !DILocation(line: 135, column: 12, scope: !6084)
!6116 = !DILocation(line: 135, column: 5, scope: !6084)
!6117 = distinct !{!6117, !6116, !6118}
!6118 = !DILocation(line: 135, column: 50, scope: !6084)
!6119 = !DILocation(line: 130, column: 9, scope: !6084)
!6120 = !DILocation(line: 138, column: 24, scope: !6084)
!6121 = !DILocation(line: 139, column: 1, scope: !6084)
!6122 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !883, file: !883, line: 148, type: !6085, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6123)
!6123 = !{!6124, !6125}
!6124 = !DILocalVariable(name: "CS", arg: 1, scope: !6122, file: !883, line: 148, type: !6087)
!6125 = !DILocalVariable(name: "val", scope: !6122, file: !883, line: 150, type: !175)
!6126 = !DILocation(line: 0, scope: !6122)
!6127 = !DILocation(line: 153, column: 16, scope: !6122)
!6128 = !DILocation(line: 154, column: 9, scope: !6122)
!6129 = !DILocation(line: 155, column: 24, scope: !6122)
!6130 = !DILocation(line: 158, column: 5, scope: !6122)
!6131 = !DILocation(line: 158, column: 18, scope: !6122)
!6132 = !DILocation(line: 158, column: 32, scope: !6122)
!6133 = distinct !{!6133, !6130, !6134}
!6134 = !DILocation(line: 158, column: 49, scope: !6122)
!6135 = !DILocation(line: 163, column: 16, scope: !6122)
!6136 = !DILocation(line: 164, column: 9, scope: !6122)
!6137 = !DILocation(line: 165, column: 24, scope: !6122)
!6138 = !DILocation(line: 168, column: 5, scope: !6122)
!6139 = !DILocation(line: 168, column: 18, scope: !6122)
!6140 = !DILocation(line: 168, column: 32, scope: !6122)
!6141 = distinct !{!6141, !6138, !6142}
!6142 = !DILocation(line: 168, column: 46, scope: !6122)
!6143 = !DILocation(line: 174, column: 10, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6122, file: !883, line: 174, column: 9)
!6145 = !DILocation(line: 174, column: 25, scope: !6144)
!6146 = !DILocation(line: 174, column: 9, scope: !6122)
!6147 = !DILocation(line: 175, column: 9, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !883, line: 175, column: 9)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !883, line: 175, column: 9)
!6150 = distinct !DILexicalBlock(scope: !6144, file: !883, line: 174, column: 36)
!6151 = !DILocation(line: 176, column: 5, scope: !6150)
!6152 = !DILocation(line: 179, column: 1, scope: !6122)
!6153 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !883, file: !883, line: 186, type: !6154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6156)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{!175, !6087}
!6156 = !{!6157, !6158, !6159}
!6157 = !DILocalVariable(name: "CS", arg: 1, scope: !6153, file: !883, line: 186, type: !6087)
!6158 = !DILocalVariable(name: "val", scope: !6153, file: !883, line: 188, type: !175)
!6159 = !DILocalVariable(name: "misc_ctl", scope: !6153, file: !883, line: 189, type: !175)
!6160 = !DILocation(line: 0, scope: !6153)
!6161 = !DILocation(line: 204, column: 16, scope: !6153)
!6162 = !DILocation(line: 208, column: 12, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6153, file: !883, line: 208, column: 9)
!6164 = !DILocation(line: 208, column: 9, scope: !6153)
!6165 = !DILocation(line: 212, column: 20, scope: !6153)
!6166 = !DILocation(line: 215, column: 1, scope: !6153)
!6167 = !DILocation(line: 215, column: 15, scope: !6153)
!6168 = !DILocation(line: 215, column: 29, scope: !6153)
!6169 = !DILocation(line: 215, column: 8, scope: !6153)
!6170 = distinct !{!6170, !6166, !6171}
!6171 = !DILocation(line: 215, column: 46, scope: !6153)
!6172 = !DILocation(line: 216, column: 22, scope: !6153)
!6173 = !DILocation(line: 216, column: 36, scope: !6153)
!6174 = !DILocation(line: 216, column: 9, scope: !6153)
!6175 = distinct !{!6175, !6174, !6176}
!6176 = !DILocation(line: 216, column: 47, scope: !6153)
!6177 = !DILocation(line: 218, column: 13, scope: !6153)
!6178 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !883, file: !883, line: 227, type: !6085, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6179)
!6179 = !{!6180}
!6180 = !DILocalVariable(name: "CS", arg: 1, scope: !6178, file: !883, line: 227, type: !6087)
!6181 = !DILocation(line: 0, scope: !6178)
!6182 = !DILocation(line: 235, column: 5, scope: !6178)
!6183 = !DILocation(line: 236, column: 5, scope: !6178)
!6184 = !DILocation(line: 238, column: 1, scope: !6178)
!6185 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !883, file: !883, line: 249, type: !6186, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6188)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{null, !6087, !690}
!6188 = !{!6189, !6190, !6191, !6192, !6193}
!6189 = !DILocalVariable(name: "CS", arg: 1, scope: !6185, file: !883, line: 249, type: !6087)
!6190 = !DILocalVariable(name: "cmd", arg: 2, scope: !6185, file: !883, line: 249, type: !690)
!6191 = !DILocalVariable(name: "cmdi", scope: !6185, file: !883, line: 251, type: !175)
!6192 = !DILocalVariable(name: "cmdo", scope: !6185, file: !883, line: 251, type: !175)
!6193 = !DILocalVariable(name: "len", scope: !6185, file: !883, line: 252, type: !378)
!6194 = !DILocation(line: 0, scope: !6185)
!6195 = !DILocation(line: 254, column: 46, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !883, line: 254, column: 5)
!6197 = distinct !DILexicalBlock(scope: !6185, file: !883, line: 254, column: 5)
!6198 = !DILocation(line: 254, column: 5, scope: !6197)
!6199 = !DILocation(line: 255, column: 22, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6196, file: !883, line: 254, column: 103)
!6201 = !DILocation(line: 255, column: 59, scope: !6200)
!6202 = !DILocation(line: 255, column: 51, scope: !6200)
!6203 = !DILocation(line: 254, column: 65, scope: !6196)
!6204 = !DILocation(line: 254, column: 97, scope: !6196)
!6205 = distinct !{!6205, !6198, !6206}
!6206 = !DILocation(line: 256, column: 5, scope: !6197)
!6207 = !DILocation(line: 258, column: 9, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6185, file: !883, line: 258, column: 9)
!6209 = !DILocation(line: 262, column: 5, scope: !6185)
!6210 = !DILocation(line: 263, column: 33, scope: !6185)
!6211 = !DILocation(line: 264, column: 25, scope: !6185)
!6212 = !DILocation(line: 265, column: 24, scope: !6185)
!6213 = !DILocation(line: 266, column: 5, scope: !6185)
!6214 = !DILocation(line: 268, column: 5, scope: !6185)
!6215 = !DILocation(line: 269, column: 1, scope: !6185)
!6216 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !883, file: !883, line: 281, type: !6217, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !6087, !4486, !690, !690}
!6219 = !{!6220, !6221, !6222, !6223, !6224, !6225}
!6220 = !DILocalVariable(name: "CS", arg: 1, scope: !6216, file: !883, line: 281, type: !6087)
!6221 = !DILocalVariable(name: "cmd", arg: 2, scope: !6216, file: !883, line: 281, type: !4486)
!6222 = !DILocalVariable(name: "address", arg: 3, scope: !6216, file: !883, line: 281, type: !690)
!6223 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6216, file: !883, line: 281, type: !690)
!6224 = !DILocalVariable(name: "cmd1", scope: !6216, file: !883, line: 283, type: !175)
!6225 = !DILocalVariable(name: "cmd2", scope: !6216, file: !883, line: 283, type: !175)
!6226 = !DILocation(line: 0, scope: !6216)
!6227 = !DILocation(line: 285, column: 12, scope: !6216)
!6228 = !DILocation(line: 287, column: 23, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6216, file: !883, line: 287, column: 9)
!6230 = !DILocation(line: 287, column: 9, scope: !6216)
!6231 = !DILocation(line: 288, column: 22, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !883, line: 287, column: 31)
!6233 = !DILocation(line: 288, column: 55, scope: !6232)
!6234 = !DILocation(line: 288, column: 53, scope: !6232)
!6235 = !DILocation(line: 289, column: 5, scope: !6232)
!6236 = !DILocation(line: 290, column: 22, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6229, file: !883, line: 289, column: 12)
!6238 = !DILocation(line: 290, column: 53, scope: !6237)
!6239 = !DILocation(line: 290, column: 51, scope: !6237)
!6240 = !DILocation(line: 291, column: 21, scope: !6237)
!6241 = !DILocation(line: 0, scope: !6229)
!6242 = !DILocation(line: 294, column: 33, scope: !6216)
!6243 = !DILocation(line: 295, column: 38, scope: !6216)
!6244 = !DILocation(line: 296, column: 41, scope: !6216)
!6245 = !DILocation(line: 296, column: 25, scope: !6216)
!6246 = !DILocation(line: 297, column: 24, scope: !6216)
!6247 = !DILocation(line: 299, column: 5, scope: !6216)
!6248 = !DILocation(line: 300, column: 5, scope: !6216)
!6249 = !DILocation(line: 302, column: 1, scope: !6216)
!6250 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !883, file: !883, line: 312, type: !6251, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6253)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{!175, !690, !690}
!6253 = !{!6254, !6255}
!6254 = !DILocalVariable(name: "cmd", arg: 1, scope: !6250, file: !883, line: 312, type: !690)
!6255 = !DILocalVariable(name: "address", arg: 2, scope: !6250, file: !883, line: 312, type: !690)
!6256 = !DILocation(line: 0, scope: !6250)
!6257 = !DILocation(line: 314, column: 14, scope: !6250)
!6258 = !DILocation(line: 314, column: 44, scope: !6250)
!6259 = !DILocation(line: 314, column: 82, scope: !6250)
!6260 = !DILocation(line: 314, column: 75, scope: !6250)
!6261 = !DILocation(line: 314, column: 5, scope: !6250)
!6262 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !883, file: !883, line: 332, type: !6263, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6266)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!175, !690, !690, !6265, !920}
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!6266 = !{!6267, !6268, !6269, !6270, !6271, !6279, !6280, !6281}
!6267 = !DILocalVariable(name: "cmd", arg: 1, scope: !6262, file: !883, line: 332, type: !690)
!6268 = !DILocalVariable(name: "address", arg: 2, scope: !6262, file: !883, line: 332, type: !690)
!6269 = !DILocalVariable(name: "p_data", arg: 3, scope: !6262, file: !883, line: 332, type: !6265)
!6270 = !DILocalVariable(name: "length", arg: 4, scope: !6262, file: !883, line: 332, type: !920)
!6271 = !DILocalVariable(name: "tmp", scope: !6262, file: !883, line: 334, type: !6272)
!6272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1076, line: 202, baseType: !6273)
!6273 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1076, line: 198, size: 32, elements: !6274)
!6274 = !{!6275, !6276, !6278}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6273, file: !1076, line: 199, baseType: !175, size: 32)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6273, file: !1076, line: 200, baseType: !6277, size: 32)
!6277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 32, elements: !383)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6273, file: !1076, line: 201, baseType: !377, size: 32)
!6279 = !DILocalVariable(name: "cmd1", scope: !6262, file: !883, line: 335, type: !175)
!6280 = !DILocalVariable(name: "cmd2", scope: !6262, file: !883, line: 335, type: !175)
!6281 = !DILocalVariable(name: "i", scope: !6262, file: !883, line: 336, type: !175)
!6282 = !DILocation(line: 0, scope: !6262)
!6283 = !DILocation(line: 334, column: 5, scope: !6262)
!6284 = !DILocation(line: 334, column: 16, scope: !6262)
!6285 = !DILocation(line: 338, column: 12, scope: !6262)
!6286 = !DILocation(line: 340, column: 17, scope: !6262)
!6287 = !DILocation(line: 342, column: 17, scope: !6262)
!6288 = !DILocation(line: 342, column: 9, scope: !6262)
!6289 = !DILocation(line: 342, column: 15, scope: !6262)
!6290 = !DILocation(line: 344, column: 22, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !883, line: 343, column: 29)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !883, line: 343, column: 5)
!6293 = distinct !DILexicalBlock(scope: !6262, file: !883, line: 343, column: 5)
!6294 = !DILocation(line: 343, column: 5, scope: !6293)
!6295 = !DILocation(line: 344, column: 21, scope: !6291)
!6296 = !DILocation(line: 344, column: 9, scope: !6291)
!6297 = !DILocation(line: 344, column: 19, scope: !6291)
!6298 = !DILocation(line: 345, column: 18, scope: !6291)
!6299 = !DILocation(line: 343, column: 25, scope: !6292)
!6300 = !DILocation(line: 343, column: 19, scope: !6292)
!6301 = distinct !{!6301, !6294, !6302}
!6302 = !DILocation(line: 346, column: 5, scope: !6293)
!6303 = !DILocation(line: 347, column: 16, scope: !6262)
!6304 = !DILocation(line: 348, column: 16, scope: !6262)
!6305 = !DILocation(line: 348, column: 15, scope: !6262)
!6306 = !DILocation(line: 339, column: 17, scope: !6262)
!6307 = !DILocation(line: 339, column: 52, scope: !6262)
!6308 = !DILocation(line: 339, column: 45, scope: !6262)
!6309 = !DILocation(line: 348, column: 13, scope: !6262)
!6310 = !DILocation(line: 349, column: 38, scope: !6262)
!6311 = !DILocation(line: 351, column: 1, scope: !6262)
!6312 = !DILocation(line: 350, column: 5, scope: !6262)
!6313 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !883, file: !883, line: 367, type: !6314, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6316)
!6314 = !DISubroutineType(types: !6315)
!6315 = !{null, !175, !194, !858}
!6316 = !{!6317, !6318, !6319, !6320, !6321, !6322}
!6317 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !6313, file: !883, line: 367, type: !175)
!6318 = !DILocalVariable(name: "buff", arg: 2, scope: !6313, file: !883, line: 367, type: !194)
!6319 = !DILocalVariable(name: "length", arg: 3, scope: !6313, file: !883, line: 367, type: !858)
!6320 = !DILocalVariable(name: "i", scope: !6313, file: !883, line: 369, type: !175)
!6321 = !DILocalVariable(name: "p_data", scope: !6313, file: !883, line: 370, type: !680)
!6322 = !DILocalVariable(name: "tmp", scope: !6313, file: !883, line: 371, type: !6272)
!6323 = !DILocation(line: 0, scope: !6313)
!6324 = !DILocation(line: 371, column: 5, scope: !6313)
!6325 = !DILocation(line: 371, column: 13, scope: !6313)
!6326 = !DILocation(line: 373, column: 18, scope: !6313)
!6327 = !DILocation(line: 376, column: 15, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6313, file: !883, line: 376, column: 9)
!6329 = !DILocation(line: 376, column: 30, scope: !6328)
!6330 = !DILocation(line: 376, column: 11, scope: !6328)
!6331 = !DILocation(line: 376, column: 9, scope: !6313)
!6332 = !DILocation(line: 377, column: 23, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6334, file: !883, line: 377, column: 9)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !883, line: 377, column: 9)
!6335 = distinct !DILexicalBlock(scope: !6328, file: !883, line: 376, column: 41)
!6336 = !DILocation(line: 377, column: 9, scope: !6334)
!6337 = !DILocation(line: 378, column: 13, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6333, file: !883, line: 377, column: 80)
!6339 = !DILocation(line: 377, column: 41, scope: !6333)
!6340 = !DILocation(line: 377, column: 54, scope: !6333)
!6341 = !DILocation(line: 377, column: 67, scope: !6333)
!6342 = distinct !{!6342, !6336, !6343}
!6343 = !DILocation(line: 379, column: 9, scope: !6334)
!6344 = !DILocation(line: 382, column: 37, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6328, file: !883, line: 382, column: 14)
!6346 = !DILocation(line: 382, column: 16, scope: !6345)
!6347 = !DILocation(line: 0, scope: !6345)
!6348 = !DILocation(line: 382, column: 14, scope: !6328)
!6349 = !DILocation(line: 391, column: 9, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !883, line: 391, column: 9)
!6351 = distinct !DILexicalBlock(scope: !6345, file: !883, line: 390, column: 13)
!6352 = !DILocation(line: 383, column: 9, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !883, line: 383, column: 9)
!6354 = distinct !DILexicalBlock(scope: !6345, file: !883, line: 382, column: 49)
!6355 = !DILocation(line: 384, column: 26, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !883, line: 383, column: 80)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !883, line: 383, column: 9)
!6358 = !DILocation(line: 384, column: 24, scope: !6356)
!6359 = !DILocation(line: 385, column: 47, scope: !6356)
!6360 = !DILocation(line: 385, column: 26, scope: !6356)
!6361 = !DILocation(line: 385, column: 24, scope: !6356)
!6362 = !DILocation(line: 386, column: 13, scope: !6356)
!6363 = !DILocation(line: 383, column: 41, scope: !6357)
!6364 = !DILocation(line: 383, column: 54, scope: !6357)
!6365 = !DILocation(line: 383, column: 67, scope: !6357)
!6366 = !DILocation(line: 383, column: 23, scope: !6357)
!6367 = distinct !{!6367, !6352, !6368}
!6368 = !DILocation(line: 387, column: 9, scope: !6353)
!6369 = !DILocation(line: 392, column: 13, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !883, line: 392, column: 13)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !883, line: 391, column: 61)
!6372 = distinct !DILexicalBlock(scope: !6350, file: !883, line: 391, column: 9)
!6373 = !DILocation(line: 393, column: 36, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !883, line: 392, column: 51)
!6375 = distinct !DILexicalBlock(scope: !6370, file: !883, line: 392, column: 13)
!6376 = !DILocation(line: 393, column: 29, scope: !6374)
!6377 = !DILocation(line: 393, column: 17, scope: !6374)
!6378 = !DILocation(line: 393, column: 27, scope: !6374)
!6379 = !DILocation(line: 392, column: 47, scope: !6375)
!6380 = !DILocation(line: 392, column: 27, scope: !6375)
!6381 = !DILocation(line: 392, column: 31, scope: !6375)
!6382 = distinct !{!6382, !6369, !6383}
!6383 = !DILocation(line: 394, column: 13, scope: !6370)
!6384 = !DILocation(line: 395, column: 13, scope: !6371)
!6385 = !DILocation(line: 391, column: 41, scope: !6372)
!6386 = !DILocation(line: 391, column: 54, scope: !6372)
!6387 = !DILocation(line: 391, column: 23, scope: !6372)
!6388 = distinct !{!6388, !6349, !6389}
!6389 = !DILocation(line: 396, column: 9, scope: !6350)
!6390 = !DILocation(line: 398, column: 1, scope: !6313)
!6391 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !883, file: !883, line: 414, type: !6392, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6394)
!6392 = !DISubroutineType(types: !6393)
!6393 = !{null, !6087, !4485, !680, !6087, !6087}
!6394 = !{!6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404}
!6395 = !DILocalVariable(name: "CS", arg: 1, scope: !6391, file: !883, line: 414, type: !6087)
!6396 = !DILocalVariable(name: "cmd", arg: 2, scope: !6391, file: !883, line: 414, type: !4485)
!6397 = !DILocalVariable(name: "data", arg: 3, scope: !6391, file: !883, line: 414, type: !680)
!6398 = !DILocalVariable(name: "outl", arg: 4, scope: !6391, file: !883, line: 414, type: !6087)
!6399 = !DILocalVariable(name: "inl", arg: 5, scope: !6391, file: !883, line: 414, type: !6087)
!6400 = !DILocalVariable(name: "tmp", scope: !6391, file: !883, line: 416, type: !175)
!6401 = !DILocalVariable(name: "i", scope: !6391, file: !883, line: 417, type: !175)
!6402 = !DILocalVariable(name: "j", scope: !6391, file: !883, line: 417, type: !175)
!6403 = !DILocalVariable(name: "p_data", scope: !6391, file: !883, line: 418, type: !680)
!6404 = !DILocalVariable(name: "p_tmp", scope: !6391, file: !883, line: 418, type: !680)
!6405 = !DILocation(line: 0, scope: !6391)
!6406 = !DILocation(line: 416, column: 5, scope: !6391)
!6407 = !DILocation(line: 422, column: 60, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !883, line: 422, column: 5)
!6409 = distinct !DILexicalBlock(scope: !6391, file: !883, line: 422, column: 5)
!6410 = !DILocation(line: 422, column: 5, scope: !6409)
!6411 = !DILocation(line: 423, column: 25, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !883, line: 423, column: 9)
!6413 = distinct !DILexicalBlock(scope: !6408, file: !883, line: 422, column: 83)
!6414 = !DILocation(line: 423, column: 32, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6412, file: !883, line: 423, column: 9)
!6416 = !DILocation(line: 423, column: 9, scope: !6412)
!6417 = !DILocation(line: 424, column: 24, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6415, file: !883, line: 423, column: 59)
!6419 = !DILocation(line: 424, column: 13, scope: !6418)
!6420 = !DILocation(line: 424, column: 22, scope: !6418)
!6421 = !DILocation(line: 423, column: 50, scope: !6415)
!6422 = !DILocation(line: 423, column: 55, scope: !6415)
!6423 = !DILocation(line: 423, column: 39, scope: !6415)
!6424 = distinct !{!6424, !6416, !6425}
!6425 = !DILocation(line: 425, column: 9, scope: !6412)
!6426 = !DILocation(line: 426, column: 9, scope: !6413)
!6427 = !DILocation(line: 0, scope: !6409)
!6428 = !DILocation(line: 422, column: 75, scope: !6408)
!6429 = distinct !{!6429, !6410, !6430}
!6430 = !DILocation(line: 427, column: 5, scope: !6409)
!6431 = !DILocation(line: 428, column: 25, scope: !6391)
!6432 = !DILocation(line: 429, column: 26, scope: !6391)
!6433 = !DILocation(line: 429, column: 24, scope: !6391)
!6434 = !DILocation(line: 430, column: 5, scope: !6391)
!6435 = !DILocation(line: 431, column: 5, scope: !6391)
!6436 = !DILocation(line: 433, column: 67, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !883, line: 433, column: 5)
!6438 = distinct !DILexicalBlock(scope: !6391, file: !883, line: 433, column: 5)
!6439 = !DILocation(line: 433, column: 5, scope: !6438)
!6440 = !DILocation(line: 433, column: 56, scope: !6438)
!6441 = !DILocation(line: 434, column: 17, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6437, file: !883, line: 433, column: 100)
!6443 = !DILocation(line: 434, column: 15, scope: !6442)
!6444 = !DILocation(line: 433, column: 74, scope: !6437)
!6445 = !DILocation(line: 433, column: 79, scope: !6437)
!6446 = !DILocation(line: 433, column: 87, scope: !6437)
!6447 = distinct !{!6447, !6439, !6448}
!6448 = !DILocation(line: 435, column: 5, scope: !6438)
!6449 = !DILocation(line: 437, column: 1, scope: !6391)
!6450 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !883, file: !883, line: 462, type: !6451, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{null, !6087, !4485}
!6453 = !{!6454, !6455, !6456, !6457, !6458}
!6454 = !DILocalVariable(name: "CS", arg: 1, scope: !6450, file: !883, line: 462, type: !6087)
!6455 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !6450, file: !883, line: 462, type: !4485)
!6456 = !DILocalVariable(name: "i", scope: !6450, file: !883, line: 464, type: !175)
!6457 = !DILocalVariable(name: "val", scope: !6450, file: !883, line: 465, type: !175)
!6458 = !DILocalVariable(name: "status", scope: !6459, file: !883, line: 492, type: !378)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !883, line: 491, column: 47)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !883, line: 491, column: 13)
!6461 = distinct !DILexicalBlock(scope: !6450, file: !883, line: 477, column: 17)
!6462 = !DILocation(line: 0, scope: !6450)
!6463 = !DILocation(line: 467, column: 17, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6450, file: !883, line: 467, column: 9)
!6465 = !DILocation(line: 467, column: 9, scope: !6450)
!6466 = !DILocation(line: 474, column: 11, scope: !6450)
!6467 = !DILocation(line: 477, column: 5, scope: !6450)
!6468 = !DILocation(line: 478, column: 17, scope: !6461)
!6469 = !DILocation(line: 478, column: 9, scope: !6461)
!6470 = !DILocation(line: 481, column: 17, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !883, line: 481, column: 17)
!6472 = distinct !DILexicalBlock(scope: !6461, file: !883, line: 478, column: 29)
!6473 = !DILocation(line: 481, column: 17, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !883, line: 481, column: 17)
!6475 = distinct !DILexicalBlock(scope: !6476, file: !883, line: 481, column: 17)
!6476 = distinct !DILexicalBlock(scope: !6471, file: !883, line: 481, column: 17)
!6477 = !DILocation(line: 481, column: 17, scope: !6475)
!6478 = !DILocation(line: 481, column: 17, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !883, line: 481, column: 17)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !883, line: 481, column: 17)
!6481 = !DILocation(line: 484, column: 17, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6472, file: !883, line: 484, column: 17)
!6483 = !DILocation(line: 484, column: 17, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !883, line: 484, column: 17)
!6485 = distinct !DILexicalBlock(scope: !6486, file: !883, line: 484, column: 17)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !883, line: 484, column: 17)
!6487 = !DILocation(line: 484, column: 17, scope: !6485)
!6488 = !DILocation(line: 484, column: 17, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !883, line: 484, column: 17)
!6490 = distinct !DILexicalBlock(scope: !6486, file: !883, line: 484, column: 17)
!6491 = !DILocation(line: 0, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !883, line: 487, column: 17)
!6493 = distinct !DILexicalBlock(scope: !6472, file: !883, line: 487, column: 17)
!6494 = !DILocation(line: 487, column: 17, scope: !6493)
!6495 = !DILocation(line: 487, column: 17, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6497, file: !883, line: 487, column: 17)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !883, line: 487, column: 17)
!6498 = !DILocation(line: 487, column: 17, scope: !6497)
!6499 = !DILocation(line: 487, column: 17, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !883, line: 487, column: 17)
!6501 = distinct !DILexicalBlock(scope: !6492, file: !883, line: 487, column: 17)
!6502 = !DILocation(line: 487, column: 17, scope: !6501)
!6503 = !DILocation(line: 491, column: 23, scope: !6460)
!6504 = !DILocation(line: 491, column: 13, scope: !6460)
!6505 = !DILocation(line: 491, column: 28, scope: !6460)
!6506 = !DILocation(line: 491, column: 13, scope: !6461)
!6507 = !DILocation(line: 492, column: 13, scope: !6459)
!6508 = !DILocation(line: 494, column: 13, scope: !6459)
!6509 = !DILocation(line: 0, scope: !6459)
!6510 = !DILocation(line: 495, column: 17, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6459, file: !883, line: 494, column: 16)
!6512 = !DILocation(line: 496, column: 22, scope: !6459)
!6513 = !DILocation(line: 496, column: 31, scope: !6459)
!6514 = !DILocation(line: 496, column: 29, scope: !6459)
!6515 = !DILocation(line: 496, column: 13, scope: !6511)
!6516 = distinct !{!6516, !6508, !6517}
!6517 = !DILocation(line: 496, column: 45, scope: !6459)
!6518 = !DILocation(line: 497, column: 9, scope: !6460)
!6519 = !DILocation(line: 503, column: 25, scope: !6461)
!6520 = !DILocation(line: 497, column: 9, scope: !6459)
!6521 = !DILocation(line: 500, column: 70, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6460, file: !883, line: 499, column: 14)
!6523 = !DILocation(line: 500, column: 60, scope: !6522)
!6524 = !DILocation(line: 500, column: 13, scope: !6522)
!6525 = !DILocation(line: 503, column: 15, scope: !6461)
!6526 = !DILocation(line: 503, column: 11, scope: !6461)
!6527 = distinct !{!6527, !6467, !6528}
!6528 = !DILocation(line: 504, column: 5, scope: !6450)
!6529 = !DILocation(line: 505, column: 1, scope: !6450)
!6530 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !883, file: !883, line: 514, type: !6531, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6533)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{null, !6087, !680, !378}
!6533 = !{!6534, !6535, !6536}
!6534 = !DILocalVariable(name: "CS", arg: 1, scope: !6530, file: !883, line: 514, type: !6087)
!6535 = !DILocalVariable(name: "id", arg: 2, scope: !6530, file: !883, line: 514, type: !680)
!6536 = !DILocalVariable(name: "cmd", arg: 3, scope: !6530, file: !883, line: 514, type: !378)
!6537 = !DILocation(line: 0, scope: !6530)
!6538 = !DILocation(line: 517, column: 5, scope: !6530)
!6539 = !DILocation(line: 518, column: 1, scope: !6530)
!6540 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !883, file: !883, line: 521, type: !6541, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{null, !6087, !680}
!6543 = !{!6544, !6545}
!6544 = !DILocalVariable(name: "CS", arg: 1, scope: !6540, file: !883, line: 521, type: !6087)
!6545 = !DILocalVariable(name: "id", arg: 2, scope: !6540, file: !883, line: 521, type: !680)
!6546 = !DILocation(line: 0, scope: !6540)
!6547 = !DILocation(line: 523, column: 5, scope: !6540)
!6548 = !DILocation(line: 524, column: 1, scope: !6540)
!6549 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !883, file: !883, line: 536, type: !6550, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{!6552}
!6552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !886, line: 57, baseType: !885)
!6553 = !DILocation(line: 540, column: 5, scope: !6549)
!6554 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !883, file: !883, line: 561, type: !6555, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!6557}
!6557 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !886, line: 66, baseType: !893)
!6558 = !DILocation(line: 564, column: 15, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6554, file: !883, line: 564, column: 9)
!6560 = !DILocation(line: 564, column: 31, scope: !6559)
!6561 = !DILocation(line: 564, column: 45, scope: !6559)
!6562 = !DILocation(line: 0, scope: !6559)
!6563 = !DILocation(line: 569, column: 1, scope: !6554)
!6564 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !883, file: !883, line: 580, type: !6565, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6567)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{!211, !680}
!6567 = !{!6568, !6569}
!6568 = !DILocalVariable(name: "buffer", arg: 1, scope: !6564, file: !883, line: 580, type: !680)
!6569 = !DILocalVariable(name: "i", scope: !6564, file: !883, line: 582, type: !79)
!6570 = !DILocation(line: 0, scope: !6564)
!6571 = !DILocation(line: 583, column: 5, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6564, file: !883, line: 583, column: 5)
!6573 = !DILocation(line: 584, column: 9, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !883, line: 583, column: 29)
!6575 = distinct !DILexicalBlock(scope: !6572, file: !883, line: 583, column: 5)
!6576 = !DILocation(line: 584, column: 19, scope: !6574)
!6577 = !DILocation(line: 583, column: 25, scope: !6575)
!6578 = !DILocation(line: 583, column: 19, scope: !6575)
!6579 = distinct !{!6579, !6571, !6580}
!6580 = !DILocation(line: 585, column: 5, scope: !6572)
!6581 = !DILocation(line: 586, column: 5, scope: !6564)
!6582 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !883, file: !883, line: 613, type: !208, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6583)
!6583 = !{!6584}
!6584 = !DILocalVariable(name: "D", scope: !6582, file: !883, line: 615, type: !5958)
!6585 = !DILocation(line: 0, scope: !6582)
!6586 = !DILocation(line: 616, column: 32, scope: !6582)
!6587 = !DILocation(line: 616, column: 37, scope: !6582)
!6588 = !DILocation(line: 616, column: 27, scope: !6582)
!6589 = !DILocation(line: 617, column: 44, scope: !6582)
!6590 = !DILocation(line: 617, column: 31, scope: !6582)
!6591 = !DILocation(line: 617, column: 28, scope: !6582)
!6592 = !DILocation(line: 618, column: 32, scope: !6582)
!6593 = !DILocation(line: 618, column: 31, scope: !6582)
!6594 = !DILocation(line: 618, column: 29, scope: !6582)
!6595 = !DILocation(line: 621, column: 31, scope: !6582)
!6596 = !DILocation(line: 621, column: 24, scope: !6582)
!6597 = !DILocation(line: 622, column: 34, scope: !6582)
!6598 = !DILocation(line: 622, column: 27, scope: !6582)
!6599 = !DILocation(line: 623, column: 32, scope: !6582)
!6600 = !DILocation(line: 623, column: 25, scope: !6582)
!6601 = !DILocation(line: 624, column: 33, scope: !6582)
!6602 = !DILocation(line: 624, column: 26, scope: !6582)
!6603 = !DILocation(line: 625, column: 33, scope: !6582)
!6604 = !DILocation(line: 625, column: 26, scope: !6582)
!6605 = !DILocation(line: 629, column: 32, scope: !6582)
!6606 = !DILocation(line: 629, column: 47, scope: !6582)
!6607 = !DILocation(line: 629, column: 25, scope: !6582)
!6608 = !DILocation(line: 630, column: 32, scope: !6582)
!6609 = !DILocation(line: 630, column: 47, scope: !6582)
!6610 = !DILocation(line: 630, column: 25, scope: !6582)
!6611 = !DILocation(line: 633, column: 24, scope: !6582)
!6612 = !DILocation(line: 633, column: 31, scope: !6582)
!6613 = !DILocation(line: 633, column: 36, scope: !6582)
!6614 = !DILocation(line: 633, column: 28, scope: !6582)
!6615 = !DILocation(line: 633, column: 5, scope: !6582)
!6616 = !DILocation(line: 635, column: 5, scope: !6582)
!6617 = !DILocation(line: 636, column: 1, scope: !6582)
!6618 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !883, file: !883, line: 641, type: !208, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6619 = !DILocation(line: 644, column: 26, scope: !6618)
!6620 = !DILocation(line: 644, column: 24, scope: !6618)
!6621 = !DILocation(line: 645, column: 29, scope: !6618)
!6622 = !DILocation(line: 645, column: 27, scope: !6618)
!6623 = !DILocation(line: 646, column: 27, scope: !6618)
!6624 = !DILocation(line: 646, column: 25, scope: !6618)
!6625 = !DILocation(line: 647, column: 28, scope: !6618)
!6626 = !DILocation(line: 647, column: 26, scope: !6618)
!6627 = !DILocation(line: 648, column: 27, scope: !6618)
!6628 = !DILocation(line: 648, column: 25, scope: !6618)
!6629 = !DILocation(line: 652, column: 32, scope: !6618)
!6630 = !DILocation(line: 652, column: 47, scope: !6618)
!6631 = !DILocation(line: 652, column: 25, scope: !6618)
!6632 = !DILocation(line: 655, column: 24, scope: !6618)
!6633 = !DILocation(line: 655, column: 5, scope: !6618)
!6634 = !DILocation(line: 657, column: 5, scope: !6618)
!6635 = !DILocation(line: 660, column: 9, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6618, file: !883, line: 660, column: 9)
!6637 = !DILocation(line: 660, column: 59, scope: !6636)
!6638 = !DILocation(line: 660, column: 38, scope: !6636)
!6639 = !DILocation(line: 660, column: 37, scope: !6636)
!6640 = !DILocation(line: 660, column: 33, scope: !6636)
!6641 = !DILocation(line: 660, column: 9, scope: !6618)
!6642 = !DILocation(line: 661, column: 9, scope: !6636)
!6643 = distinct !{!6643, !6642, !6644}
!6644 = !DILocation(line: 661, column: 18, scope: !6636)
!6645 = !DILocation(line: 662, column: 1, scope: !6618)
!6646 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !883, file: !883, line: 668, type: !208, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6647 = !DILocation(line: 671, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6646, file: !883, line: 671, column: 9)
!6649 = !DILocation(line: 671, column: 40, scope: !6648)
!6650 = !DILocation(line: 671, column: 9, scope: !6646)
!6651 = !DILocation(line: 672, column: 47, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6648, file: !883, line: 671, column: 46)
!6653 = !DILocation(line: 672, column: 40, scope: !6652)
!6654 = !DILocation(line: 673, column: 5, scope: !6652)
!6655 = !DILocation(line: 674, column: 9, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6646, file: !883, line: 674, column: 9)
!6657 = !DILocation(line: 674, column: 41, scope: !6656)
!6658 = !DILocation(line: 674, column: 9, scope: !6646)
!6659 = !DILocation(line: 675, column: 48, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6656, file: !883, line: 674, column: 47)
!6661 = !DILocation(line: 675, column: 41, scope: !6660)
!6662 = !DILocation(line: 676, column: 5, scope: !6660)
!6663 = !DILocation(line: 679, column: 33, scope: !6646)
!6664 = !DILocation(line: 679, column: 48, scope: !6646)
!6665 = !DILocation(line: 679, column: 25, scope: !6646)
!6666 = !DILocation(line: 680, column: 25, scope: !6646)
!6667 = !DILocation(line: 686, column: 5, scope: !6646)
!6668 = !DILocation(line: 688, column: 1, scope: !6646)
!6669 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !883, file: !883, line: 689, type: !208, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6670 = !DILocation(line: 692, column: 9, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6669, file: !883, line: 692, column: 9)
!6672 = !DILocation(line: 692, column: 40, scope: !6671)
!6673 = !DILocation(line: 692, column: 9, scope: !6669)
!6674 = !DILocation(line: 693, column: 29, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6671, file: !883, line: 692, column: 46)
!6676 = !DILocation(line: 694, column: 5, scope: !6675)
!6677 = !DILocation(line: 695, column: 9, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6669, file: !883, line: 695, column: 9)
!6679 = !DILocation(line: 695, column: 41, scope: !6678)
!6680 = !DILocation(line: 695, column: 9, scope: !6669)
!6681 = !DILocation(line: 696, column: 29, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !883, line: 695, column: 47)
!6683 = !DILocation(line: 697, column: 5, scope: !6682)
!6684 = !DILocation(line: 698, column: 5, scope: !6669)
!6685 = !DILocation(line: 699, column: 1, scope: !6669)
!6686 = distinct !DISubprogram(name: "ust_get_current_time", scope: !982, file: !982, line: 91, type: !3355, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6687)
!6687 = !{!6688}
!6688 = !DILocalVariable(name: "counter", scope: !6686, file: !982, line: 102, type: !175)
!6689 = !DILocation(line: 0, scope: !6686)
!6690 = !DILocation(line: 110, column: 5, scope: !6686)
!6691 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !982, file: !982, line: 114, type: !3355, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6692)
!6692 = !{!6693}
!6693 = !DILocalVariable(name: "counter", scope: !6691, file: !982, line: 125, type: !175)
!6694 = !DILocation(line: 0, scope: !6691)
!6695 = !DILocation(line: 133, column: 5, scope: !6691)
!6696 = distinct !DISubprogram(name: "ust_busy_wait", scope: !982, file: !982, line: 137, type: !5820, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6697)
!6697 = !{!6698}
!6698 = !DILocalVariable(name: "delay_us", arg: 1, scope: !6696, file: !982, line: 137, type: !175)
!6699 = !DILocation(line: 0, scope: !6696)
!6700 = !DILocation(line: 142, column: 5, scope: !6696)
!6701 = !DILocation(line: 144, column: 1, scope: !6696)
!6702 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !982, file: !982, line: 163, type: !3355, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6703)
!6703 = !{!6704}
!6704 = !DILocalVariable(name: "mask", scope: !6702, file: !982, line: 165, type: !175)
!6705 = !DILocation(line: 166, column: 12, scope: !6702)
!6706 = !DILocation(line: 0, scope: !6702)
!6707 = !DILocation(line: 167, column: 5, scope: !6702)
!6708 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !982, file: !982, line: 171, type: !5820, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6709)
!6709 = !{!6710}
!6710 = !DILocalVariable(name: "mask", arg: 1, scope: !6708, file: !982, line: 171, type: !175)
!6711 = !DILocation(line: 0, scope: !6708)
!6712 = !DILocation(line: 173, column: 5, scope: !6708)
!6713 = !DILocation(line: 174, column: 1, scope: !6708)
!6714 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !982, file: !982, line: 199, type: !1254, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6715)
!6715 = !{!6716}
!6716 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6714, file: !982, line: 199, type: !194)
!6717 = !DILocation(line: 0, scope: !6714)
!6718 = !DILocation(line: 201, column: 5, scope: !6714)
!6719 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !982, file: !982, line: 388, type: !6720, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !210)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{!858}
!6722 = !DILocation(line: 390, column: 5, scope: !6719)
!6723 = distinct !DISubprogram(name: "CompareData", scope: !982, file: !982, line: 872, type: !6724, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6726)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{!211, !194, !194, !175}
!6726 = !{!6727, !6728, !6729, !6730, !6731, !6734, !6735, !6738, !6739, !6741}
!6727 = !DILocalVariable(name: "Address", arg: 1, scope: !6723, file: !982, line: 872, type: !194)
!6728 = !DILocalVariable(name: "Data", arg: 2, scope: !6723, file: !982, line: 872, type: !194)
!6729 = !DILocalVariable(name: "Length", arg: 3, scope: !6723, file: !982, line: 872, type: !175)
!6730 = !DILocalVariable(name: "i", scope: !6723, file: !982, line: 874, type: !175)
!6731 = !DILocalVariable(name: "Source", scope: !6732, file: !982, line: 877, type: !920)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !982, line: 876, column: 74)
!6733 = distinct !DILexicalBlock(scope: !6723, file: !982, line: 876, column: 9)
!6734 = !DILocalVariable(name: "Dest", scope: !6732, file: !982, line: 878, type: !920)
!6735 = !DILocalVariable(name: "Source", scope: !6736, file: !982, line: 885, type: !951)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !982, line: 884, column: 79)
!6737 = distinct !DILexicalBlock(scope: !6733, file: !982, line: 884, column: 16)
!6738 = !DILocalVariable(name: "Dest", scope: !6736, file: !982, line: 886, type: !951)
!6739 = !DILocalVariable(name: "Source", scope: !6740, file: !982, line: 893, type: !680)
!6740 = distinct !DILexicalBlock(scope: !6737, file: !982, line: 892, column: 12)
!6741 = !DILocalVariable(name: "Dest", scope: !6740, file: !982, line: 894, type: !680)
!6742 = !DILocation(line: 0, scope: !6723)
!6743 = !DILocation(line: 876, column: 11, scope: !6733)
!6744 = !DILocation(line: 876, column: 42, scope: !6733)
!6745 = !DILocation(line: 877, column: 28, scope: !6732)
!6746 = !DILocation(line: 0, scope: !6732)
!6747 = !DILocation(line: 878, column: 26, scope: !6732)
!6748 = !DILocation(line: 879, column: 23, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !982, line: 879, column: 9)
!6750 = distinct !DILexicalBlock(scope: !6732, file: !982, line: 879, column: 9)
!6751 = !DILocation(line: 879, column: 9, scope: !6750)
!6752 = !DILocation(line: 880, column: 17, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !982, line: 880, column: 17)
!6754 = distinct !DILexicalBlock(scope: !6749, file: !982, line: 879, column: 68)
!6755 = !DILocation(line: 880, column: 30, scope: !6753)
!6756 = !DILocation(line: 880, column: 27, scope: !6753)
!6757 = !DILocation(line: 879, column: 64, scope: !6749)
!6758 = !DILocation(line: 880, column: 17, scope: !6754)
!6759 = distinct !{!6759, !6751, !6760}
!6760 = !DILocation(line: 883, column: 9, scope: !6750)
!6761 = !DILocation(line: 884, column: 47, scope: !6737)
!6762 = !DILocation(line: 895, column: 23, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !982, line: 895, column: 9)
!6764 = distinct !DILexicalBlock(scope: !6740, file: !982, line: 895, column: 9)
!6765 = !DILocation(line: 895, column: 9, scope: !6764)
!6766 = !DILocation(line: 885, column: 28, scope: !6736)
!6767 = !DILocation(line: 0, scope: !6736)
!6768 = !DILocation(line: 886, column: 26, scope: !6736)
!6769 = !DILocation(line: 887, column: 23, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !982, line: 887, column: 9)
!6771 = distinct !DILexicalBlock(scope: !6736, file: !982, line: 887, column: 9)
!6772 = !DILocation(line: 887, column: 9, scope: !6771)
!6773 = !DILocation(line: 888, column: 17, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !982, line: 888, column: 17)
!6775 = distinct !DILexicalBlock(scope: !6770, file: !982, line: 887, column: 68)
!6776 = !DILocation(line: 888, column: 30, scope: !6774)
!6777 = !DILocation(line: 888, column: 27, scope: !6774)
!6778 = !DILocation(line: 887, column: 64, scope: !6770)
!6779 = !DILocation(line: 888, column: 17, scope: !6775)
!6780 = distinct !{!6780, !6772, !6781}
!6781 = !DILocation(line: 891, column: 9, scope: !6771)
!6782 = !DILocation(line: 896, column: 17, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !982, line: 896, column: 17)
!6784 = distinct !DILexicalBlock(scope: !6763, file: !982, line: 895, column: 38)
!6785 = !DILocation(line: 896, column: 30, scope: !6783)
!6786 = !DILocation(line: 896, column: 27, scope: !6783)
!6787 = !DILocation(line: 895, column: 34, scope: !6763)
!6788 = !DILocation(line: 896, column: 17, scope: !6784)
!6789 = distinct !{!6789, !6765, !6790}
!6790 = !DILocation(line: 899, column: 9, scope: !6764)
!6791 = !DILocation(line: 902, column: 1, scope: !6723)
!6792 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !982, file: !982, line: 919, type: !6793, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6795)
!6793 = !DISubroutineType(types: !6794)
!6794 = !{null, !194, !194, !175}
!6795 = !{!6796, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6804, !6805, !6806}
!6796 = !DILocalVariable(name: "Target", arg: 1, scope: !6792, file: !982, line: 919, type: !194)
!6797 = !DILocalVariable(name: "Data", arg: 2, scope: !6792, file: !982, line: 919, type: !194)
!6798 = !DILocalVariable(name: "Size", arg: 3, scope: !6792, file: !982, line: 919, type: !175)
!6799 = !DILocalVariable(name: "D", scope: !6792, file: !982, line: 921, type: !1152)
!6800 = !DILocalVariable(name: "address", scope: !6792, file: !982, line: 922, type: !175)
!6801 = !DILocalVariable(name: "p_data", scope: !6792, file: !982, line: 923, type: !680)
!6802 = !DILocalVariable(name: "cmd1", scope: !6792, file: !982, line: 924, type: !175)
!6803 = !DILocalVariable(name: "length", scope: !6792, file: !982, line: 924, type: !175)
!6804 = !DILocalVariable(name: "written", scope: !6792, file: !982, line: 924, type: !175)
!6805 = !DILocalVariable(name: "status", scope: !6792, file: !982, line: 925, type: !1204)
!6806 = !DILocalVariable(name: "savedMask", scope: !6792, file: !982, line: 926, type: !175)
!6807 = !DILocation(line: 0, scope: !6792)
!6808 = !DILocation(line: 921, column: 60, scope: !6792)
!6809 = !DILocation(line: 923, column: 5, scope: !6792)
!6810 = !DILocation(line: 923, column: 19, scope: !6792)
!6811 = !DILocation(line: 924, column: 5, scope: !6792)
!6812 = !DILocation(line: 932, column: 9, scope: !6792)
!6813 = !DILocation(line: 933, column: 8, scope: !6792)
!6814 = !DILocation(line: 933, column: 21, scope: !6792)
!6815 = !DILocation(line: 935, column: 14, scope: !6792)
!6816 = !DILocation(line: 935, column: 5, scope: !6792)
!6817 = !DILocation(line: 922, column: 29, scope: !6792)
!6818 = !DILocation(line: 937, column: 18, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6792, file: !982, line: 935, column: 23)
!6820 = !DILocation(line: 937, column: 35, scope: !6819)
!6821 = !DILocation(line: 937, column: 74, scope: !6819)
!6822 = !DILocation(line: 937, column: 50, scope: !6819)
!6823 = !DILocation(line: 937, column: 39, scope: !6819)
!6824 = !DILocation(line: 940, column: 35, scope: !6819)
!6825 = !DILocation(line: 940, column: 29, scope: !6819)
!6826 = !DILocation(line: 940, column: 16, scope: !6819)
!6827 = !DILocation(line: 942, column: 18, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6819, file: !982, line: 942, column: 13)
!6829 = !DILocation(line: 942, column: 29, scope: !6828)
!6830 = !DILocation(line: 942, column: 13, scope: !6819)
!6831 = !DILocation(line: 943, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !982, line: 942, column: 55)
!6833 = !DILocation(line: 944, column: 9, scope: !6832)
!6834 = !DILocation(line: 947, column: 16, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6819, file: !982, line: 947, column: 13)
!6836 = !DILocation(line: 947, column: 29, scope: !6835)
!6837 = !DILocation(line: 0, scope: !6835)
!6838 = !DILocation(line: 947, column: 13, scope: !6819)
!6839 = !DILocation(line: 948, column: 20, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6835, file: !982, line: 947, column: 35)
!6841 = !DILocation(line: 949, column: 32, scope: !6840)
!6842 = !DILocation(line: 949, column: 40, scope: !6840)
!6843 = !DILocation(line: 949, column: 13, scope: !6840)
!6844 = !DILocation(line: 950, column: 9, scope: !6840)
!6845 = !DILocation(line: 953, column: 20, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6835, file: !982, line: 952, column: 9)
!6847 = !DILocation(line: 954, column: 32, scope: !6846)
!6848 = !DILocation(line: 954, column: 40, scope: !6846)
!6849 = !DILocation(line: 954, column: 13, scope: !6846)
!6850 = !DILocation(line: 957, column: 21, scope: !6819)
!6851 = !DILocation(line: 963, column: 45, scope: !6819)
!6852 = !DILocation(line: 963, column: 42, scope: !6819)
!6853 = !DILocation(line: 963, column: 40, scope: !6819)
!6854 = !DILocation(line: 963, column: 58, scope: !6819)
!6855 = !DILocation(line: 963, column: 29, scope: !6819)
!6856 = !DILocation(line: 964, column: 28, scope: !6819)
!6857 = !DILocation(line: 965, column: 37, scope: !6819)
!6858 = !DILocation(line: 966, column: 9, scope: !6819)
!6859 = !DILocation(line: 967, column: 26, scope: !6819)
!6860 = !DILocation(line: 967, column: 9, scope: !6819)
!6861 = !DILocation(line: 968, column: 29, scope: !6819)
!6862 = !DILocation(line: 968, column: 9, scope: !6819)
!6863 = !DILocation(line: 972, column: 9, scope: !6819)
!6864 = !DILocation(line: 978, column: 9, scope: !6819)
!6865 = !DILocation(line: 979, column: 50, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6819, file: !982, line: 978, column: 22)
!6867 = !DILocation(line: 979, column: 55, scope: !6866)
!6868 = !DILocation(line: 979, column: 22, scope: !6866)
!6869 = !DILocation(line: 980, column: 35, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6866, file: !982, line: 980, column: 17)
!6871 = !DILocation(line: 980, column: 32, scope: !6870)
!6872 = !DILocation(line: 980, column: 30, scope: !6870)
!6873 = !DILocation(line: 980, column: 19, scope: !6870)
!6874 = !DILocation(line: 980, column: 17, scope: !6866)
!6875 = distinct !{!6875, !6864, !6876}
!6876 = !DILocation(line: 983, column: 9, scope: !6819)
!6877 = !DILocation(line: 991, column: 9, scope: !6819)
!6878 = !DILocation(line: 993, column: 19, scope: !6819)
!6879 = !DILocation(line: 993, column: 16, scope: !6819)
!6880 = !DILocation(line: 994, column: 14, scope: !6819)
!6881 = !DILocation(line: 995, column: 17, scope: !6819)
!6882 = distinct !{!6882, !6816, !6883}
!6883 = !DILocation(line: 996, column: 5, scope: !6792)
!6884 = !DILocation(line: 998, column: 21, scope: !6792)
!6885 = !DILocation(line: 1005, column: 9, scope: !6792)
!6886 = !DILocation(line: 1008, column: 1, scope: !6792)
!6887 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !982, file: !982, line: 1427, type: !6888, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6890)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{null, !1152}
!6890 = !{!6891, !6892}
!6891 = !DILocalVariable(name: "D", arg: 1, scope: !6887, file: !982, line: 1427, type: !1152)
!6892 = !DILocalVariable(name: "Result", scope: !6887, file: !982, line: 1429, type: !1820)
!6893 = !DILocation(line: 0, scope: !6887)
!6894 = !DILocation(line: 1430, column: 5, scope: !6887)
!6895 = !DILocation(line: 1431, column: 18, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6887, file: !982, line: 1430, column: 8)
!6897 = !DILocation(line: 1432, column: 21, scope: !6887)
!6898 = !DILocation(line: 1432, column: 5, scope: !6896)
!6899 = distinct !{!6899, !6894, !6900}
!6900 = !DILocation(line: 1432, column: 43, scope: !6887)
!6901 = !DILocation(line: 1433, column: 1, scope: !6887)
!6902 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !982, file: !982, line: 3478, type: !6888, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6903)
!6903 = !{!6904}
!6904 = !DILocalVariable(name: "D", arg: 1, scope: !6902, file: !982, line: 3478, type: !1152)
!6905 = !DILocation(line: 0, scope: !6902)
!6906 = !DILocation(line: 3480, column: 30, scope: !6902)
!6907 = !DILocation(line: 3480, column: 35, scope: !6902)
!6908 = !DILocation(line: 3480, column: 27, scope: !6902)
!6909 = !DILocation(line: 3480, column: 5, scope: !6902)
!6910 = !DILocation(line: 3481, column: 1, scope: !6902)
!6911 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !982, file: !982, line: 2382, type: !208, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6912)
!6912 = !{!6913}
!6913 = !DILocalVariable(name: "savedMask", scope: !6911, file: !982, line: 2384, type: !175)
!6914 = !DILocation(line: 2385, column: 17, scope: !6911)
!6915 = !DILocation(line: 0, scope: !6911)
!6916 = !DILocation(line: 2390, column: 20, scope: !6911)
!6917 = !DILocation(line: 2391, column: 5, scope: !6911)
!6918 = !DILocation(line: 2392, column: 1, scope: !6911)
!6919 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !982, file: !982, line: 3536, type: !6920, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6922)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{!175, !1152, !378}
!6922 = !{!6923, !6924, !6925, !6926}
!6923 = !DILocalVariable(name: "D", arg: 1, scope: !6919, file: !982, line: 3536, type: !1152)
!6924 = !DILocalVariable(name: "cmd", arg: 2, scope: !6919, file: !982, line: 3536, type: !378)
!6925 = !DILocalVariable(name: "savedMask", scope: !6919, file: !982, line: 3538, type: !175)
!6926 = !DILocalVariable(name: "result", scope: !6919, file: !982, line: 3539, type: !175)
!6927 = !DILocation(line: 0, scope: !6919)
!6928 = !DILocation(line: 3541, column: 17, scope: !6919)
!6929 = !DILocation(line: 3542, column: 22, scope: !6919)
!6930 = !DILocation(line: 3542, column: 5, scope: !6919)
!6931 = !DILocation(line: 3543, column: 35, scope: !6919)
!6932 = !DILocation(line: 3543, column: 33, scope: !6919)
!6933 = !DILocation(line: 3544, column: 25, scope: !6919)
!6934 = !DILocation(line: 3545, column: 24, scope: !6919)
!6935 = !DILocation(line: 3546, column: 25, scope: !6919)
!6936 = !DILocation(line: 3546, column: 5, scope: !6919)
!6937 = !DILocation(line: 3547, column: 42, scope: !6919)
!6938 = !DILocation(line: 3547, column: 60, scope: !6919)
!6939 = !DILocation(line: 3547, column: 14, scope: !6919)
!6940 = !DILocation(line: 3548, column: 5, scope: !6919)
!6941 = !DILocation(line: 3550, column: 5, scope: !6919)
!6942 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !982, file: !982, line: 2393, type: !208, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6943)
!6943 = !{!6944}
!6944 = !DILocalVariable(name: "savedMask", scope: !6942, file: !982, line: 2395, type: !175)
!6945 = !DILocation(line: 2396, column: 17, scope: !6942)
!6946 = !DILocation(line: 0, scope: !6942)
!6947 = !DILocation(line: 2401, column: 20, scope: !6942)
!6948 = !DILocation(line: 2402, column: 5, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !982, line: 2402, column: 5)
!6950 = distinct !DILexicalBlock(scope: !6942, file: !982, line: 2402, column: 5)
!6951 = !DILocation(line: 2403, column: 5, scope: !6942)
!6952 = !DILocation(line: 2404, column: 1, scope: !6942)
!6953 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !982, file: !982, line: 1440, type: !6888, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6954)
!6954 = !{!6955, !6956}
!6955 = !DILocalVariable(name: "D", arg: 1, scope: !6953, file: !982, line: 1440, type: !1152)
!6956 = !DILocalVariable(name: "savedMask", scope: !6953, file: !982, line: 1442, type: !858)
!6957 = !DILocation(line: 0, scope: !6953)
!6958 = !DILocation(line: 1443, column: 17, scope: !6953)
!6959 = !DILocation(line: 1444, column: 9, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6953, file: !982, line: 1444, column: 9)
!6961 = !DILocation(line: 1444, column: 9, scope: !6953)
!6962 = !DILocation(line: 1445, column: 17, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !982, line: 1444, column: 24)
!6964 = !DILocation(line: 1446, column: 9, scope: !6963)
!6965 = !DILocation(line: 1451, column: 1, scope: !6953)
!6966 = !DILocation(line: 1448, column: 9, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6960, file: !982, line: 1447, column: 12)
!6968 = !DILocation(line: 1449, column: 9, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !982, line: 1449, column: 9)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !982, line: 1449, column: 9)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !982, line: 1449, column: 9)
!6972 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !982, file: !982, line: 1027, type: !208, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6973)
!6973 = !{!6974, !6975, !6976, !6977}
!6974 = !DILocalVariable(name: "D", scope: !6972, file: !982, line: 1029, type: !1152)
!6975 = !DILocalVariable(name: "status", scope: !6972, file: !982, line: 1030, type: !1204)
!6976 = !DILocalVariable(name: "savedMask", scope: !6972, file: !982, line: 1031, type: !175)
!6977 = !DILocalVariable(name: "duration", scope: !6978, file: !982, line: 1231, type: !175)
!6978 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1230, column: 5)
!6979 = !DILocation(line: 0, scope: !6972)
!6980 = !DILocation(line: 1033, column: 17, scope: !6972)
!6981 = !DILocation(line: 1034, column: 8, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1034, column: 8)
!6983 = !DILocation(line: 1034, column: 30, scope: !6982)
!6984 = !DILocation(line: 1034, column: 8, scope: !6972)
!6985 = !DILocation(line: 1039, column: 27, scope: !6972)
!6986 = !DILocation(line: 1058, column: 48, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1055, column: 5)
!6988 = !DILocation(line: 1069, column: 5, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !982, line: 1069, column: 5)
!6990 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1069, column: 5)
!6991 = !DILocation(line: 1069, column: 5, scope: !6990)
!6992 = !DILocation(line: 1069, column: 5, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6989, file: !982, line: 1069, column: 5)
!6994 = !DILocation(line: 1075, column: 10, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1075, column: 9)
!6996 = !DILocation(line: 1075, column: 27, scope: !6995)
!6997 = !DILocation(line: 1075, column: 33, scope: !6995)
!6998 = !DILocation(line: 1075, column: 40, scope: !6995)
!6999 = !DILocation(line: 1075, column: 53, scope: !6995)
!7000 = !DILocation(line: 1075, column: 9, scope: !6972)
!7001 = !DILocation(line: 1084, column: 9, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6995, file: !982, line: 1083, column: 11)
!7003 = !DILocation(line: 1085, column: 50, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7002, file: !982, line: 1084, column: 21)
!7005 = !DILocation(line: 1085, column: 55, scope: !7004)
!7006 = !DILocation(line: 1085, column: 22, scope: !7004)
!7007 = !DILocation(line: 1086, column: 35, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7004, file: !982, line: 1086, column: 17)
!7009 = !DILocation(line: 1086, column: 32, scope: !7008)
!7010 = !DILocation(line: 1086, column: 30, scope: !7008)
!7011 = !DILocation(line: 1086, column: 19, scope: !7008)
!7012 = !DILocation(line: 1086, column: 17, scope: !7004)
!7013 = distinct !{!7013, !7001, !7014}
!7014 = !DILocation(line: 1089, column: 9, scope: !7002)
!7015 = !DILocation(line: 1107, column: 11, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1107, column: 9)
!7017 = !DILocation(line: 1107, column: 30, scope: !7016)
!7018 = !DILocation(line: 1117, column: 46, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !982, line: 1107, column: 53)
!7020 = !DILocation(line: 1117, column: 51, scope: !7019)
!7021 = !DILocation(line: 1117, column: 18, scope: !7019)
!7022 = !DILocation(line: 1120, column: 31, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7019, file: !982, line: 1120, column: 13)
!7024 = !DILocation(line: 1120, column: 28, scope: !7023)
!7025 = !DILocation(line: 1120, column: 26, scope: !7023)
!7026 = !DILocation(line: 1120, column: 15, scope: !7023)
!7027 = !DILocation(line: 1120, column: 13, scope: !7019)
!7028 = !DILocation(line: 1128, column: 13, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7023, file: !982, line: 1120, column: 55)
!7030 = !DILocation(line: 1131, column: 13, scope: !7029)
!7031 = !DILocation(line: 1132, column: 54, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !982, line: 1131, column: 23)
!7033 = !DILocation(line: 1132, column: 59, scope: !7032)
!7034 = !DILocation(line: 1132, column: 26, scope: !7032)
!7035 = !DILocation(line: 1133, column: 39, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7032, file: !982, line: 1133, column: 21)
!7037 = !DILocation(line: 1133, column: 36, scope: !7036)
!7038 = !DILocation(line: 1133, column: 34, scope: !7036)
!7039 = !DILocation(line: 1133, column: 23, scope: !7036)
!7040 = !DILocation(line: 1133, column: 21, scope: !7032)
!7041 = distinct !{!7041, !7030, !7042}
!7042 = !DILocation(line: 1158, column: 13, scope: !7029)
!7043 = !DILocation(line: 1162, column: 21, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7029, file: !982, line: 1162, column: 17)
!7045 = !DILocation(line: 1162, column: 32, scope: !7044)
!7046 = !DILocation(line: 1162, column: 51, scope: !7044)
!7047 = !DILocation(line: 1162, column: 58, scope: !7044)
!7048 = !DILocation(line: 1162, column: 71, scope: !7044)
!7049 = !DILocation(line: 1162, column: 17, scope: !7029)
!7050 = !DILocation(line: 1164, column: 45, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7044, file: !982, line: 1162, column: 91)
!7052 = !DILocation(line: 1165, column: 36, scope: !7051)
!7053 = !DILocation(line: 1166, column: 37, scope: !7051)
!7054 = !DILocation(line: 1167, column: 34, scope: !7051)
!7055 = !DILocation(line: 1167, column: 17, scope: !7051)
!7056 = !DILocation(line: 1168, column: 37, scope: !7051)
!7057 = !DILocation(line: 1168, column: 17, scope: !7051)
!7058 = !DILocation(line: 1171, column: 50, scope: !7051)
!7059 = !DILocation(line: 1172, column: 37, scope: !7051)
!7060 = !DILocation(line: 1173, column: 45, scope: !7051)
!7061 = !DILocation(line: 1174, column: 34, scope: !7051)
!7062 = !DILocation(line: 1174, column: 17, scope: !7051)
!7063 = !DILocation(line: 1175, column: 37, scope: !7051)
!7064 = !DILocation(line: 1175, column: 17, scope: !7051)
!7065 = !DILocation(line: 1178, column: 17, scope: !7051)
!7066 = !DILocation(line: 1179, column: 49, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7051, file: !982, line: 1178, column: 20)
!7068 = !DILocation(line: 1180, column: 40, scope: !7067)
!7069 = !DILocation(line: 1181, column: 41, scope: !7067)
!7070 = !DILocation(line: 1182, column: 38, scope: !7067)
!7071 = !DILocation(line: 1182, column: 21, scope: !7067)
!7072 = !DILocation(line: 1183, column: 41, scope: !7067)
!7073 = !DILocation(line: 1183, column: 21, scope: !7067)
!7074 = !DILocation(line: 1184, column: 43, scope: !7067)
!7075 = !DILocation(line: 1185, column: 17, scope: !7067)
!7076 = distinct !{!7076, !7065, !7077}
!7077 = !DILocation(line: 1185, column: 32, scope: !7051)
!7078 = !DILocation(line: 1194, column: 13, scope: !7029)
!7079 = !DILocation(line: 1195, column: 9, scope: !7029)
!7080 = !DILocation(line: 1197, column: 21, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !982, line: 1197, column: 17)
!7082 = distinct !DILexicalBlock(scope: !7023, file: !982, line: 1195, column: 16)
!7083 = !DILocation(line: 1197, column: 32, scope: !7081)
!7084 = !DILocation(line: 1197, column: 53, scope: !7081)
!7085 = !DILocation(line: 1197, column: 60, scope: !7081)
!7086 = !DILocation(line: 1197, column: 76, scope: !7081)
!7087 = !DILocation(line: 1197, column: 17, scope: !7082)
!7088 = !DILocation(line: 1198, column: 54, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7081, file: !982, line: 1197, column: 98)
!7090 = !DILocation(line: 1198, column: 59, scope: !7089)
!7091 = !DILocation(line: 1198, column: 26, scope: !7089)
!7092 = !DILocation(line: 1199, column: 40, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7089, file: !982, line: 1199, column: 21)
!7094 = !DILocation(line: 1199, column: 37, scope: !7093)
!7095 = !DILocation(line: 1199, column: 35, scope: !7093)
!7096 = !DILocation(line: 1199, column: 24, scope: !7093)
!7097 = !DILocation(line: 1199, column: 63, scope: !7093)
!7098 = !DILocation(line: 1200, column: 41, scope: !7093)
!7099 = !DILocation(line: 1200, column: 39, scope: !7093)
!7100 = !DILocation(line: 1200, column: 28, scope: !7093)
!7101 = !DILocation(line: 1199, column: 21, scope: !7089)
!7102 = !DILocation(line: 1201, column: 40, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7093, file: !982, line: 1200, column: 68)
!7104 = !DILocation(line: 1201, column: 21, scope: !7103)
!7105 = !DILocation(line: 1202, column: 40, scope: !7103)
!7106 = !DILocation(line: 1202, column: 21, scope: !7103)
!7107 = !DILocation(line: 1203, column: 17, scope: !7103)
!7108 = !DILocation(line: 1206, column: 13, scope: !7082)
!7109 = !DILocation(line: 1228, column: 25, scope: !6972)
!7110 = !DILocation(line: 1231, column: 29, scope: !6978)
!7111 = !DILocation(line: 0, scope: !6978)
!7112 = !DILocation(line: 1232, column: 13, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !6978, file: !982, line: 1232, column: 13)
!7114 = !DILocation(line: 1232, column: 43, scope: !7113)
!7115 = !DILocation(line: 1232, column: 13, scope: !6978)
!7116 = !DILocation(line: 1233, column: 43, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7113, file: !982, line: 1232, column: 55)
!7118 = !DILocation(line: 1234, column: 9, scope: !7117)
!7119 = !DILocation(line: 1237, column: 5, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !982, line: 1237, column: 5)
!7121 = distinct !DILexicalBlock(scope: !6972, file: !982, line: 1237, column: 5)
!7122 = !DILocation(line: 1240, column: 5, scope: !6972)
!7123 = !DILocation(line: 1241, column: 1, scope: !6972)
!7124 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !982, file: !982, line: 3421, type: !6888, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7125)
!7125 = !{!7126, !7127, !7128, !7129}
!7126 = !DILocalVariable(name: "D", arg: 1, scope: !7124, file: !982, line: 3421, type: !1152)
!7127 = !DILocalVariable(name: "savedMask", scope: !7124, file: !982, line: 3423, type: !175)
!7128 = !DILocalVariable(name: "currtime", scope: !7124, file: !982, line: 3424, type: !175)
!7129 = !DILocalVariable(name: "difftime", scope: !7124, file: !982, line: 3424, type: !175)
!7130 = !DILocation(line: 0, scope: !7124)
!7131 = !DILocation(line: 3427, column: 9, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7124, file: !982, line: 3427, column: 9)
!7133 = !DILocation(line: 3427, column: 28, scope: !7132)
!7134 = !DILocation(line: 3427, column: 9, scope: !7124)
!7135 = !DILocation(line: 3429, column: 20, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7132, file: !982, line: 3427, column: 59)
!7137 = !DILocation(line: 3430, column: 27, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7136, file: !982, line: 3430, column: 13)
!7139 = !DILocation(line: 3430, column: 24, scope: !7138)
!7140 = !DILocation(line: 3430, column: 22, scope: !7138)
!7141 = !DILocation(line: 3430, column: 13, scope: !7136)
!7142 = !DILocation(line: 3431, column: 47, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7138, file: !982, line: 3430, column: 46)
!7144 = !DILocation(line: 3431, column: 13, scope: !7143)
!7145 = !DILocation(line: 3432, column: 9, scope: !7143)
!7146 = !DILocation(line: 3435, column: 17, scope: !7124)
!7147 = !DILocation(line: 3436, column: 24, scope: !7124)
!7148 = !DILocation(line: 3436, column: 31, scope: !7124)
!7149 = !DILocation(line: 3436, column: 36, scope: !7124)
!7150 = !DILocation(line: 3436, column: 28, scope: !7124)
!7151 = !DILocation(line: 3436, column: 5, scope: !7124)
!7152 = !DILocation(line: 3442, column: 5, scope: !7124)
!7153 = !DILocation(line: 3443, column: 1, scope: !7124)
!7154 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !982, file: !982, line: 2405, type: !208, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7155)
!7155 = !{!7156}
!7156 = !DILocalVariable(name: "savedMask", scope: !7154, file: !982, line: 2407, type: !175)
!7157 = !DILocation(line: 2408, column: 17, scope: !7154)
!7158 = !DILocation(line: 0, scope: !7154)
!7159 = !DILocation(line: 2413, column: 25, scope: !7154)
!7160 = !DILocation(line: 2414, column: 5, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !982, line: 2414, column: 5)
!7162 = distinct !DILexicalBlock(scope: !7154, file: !982, line: 2414, column: 5)
!7163 = !DILocation(line: 2415, column: 5, scope: !7154)
!7164 = !DILocation(line: 2416, column: 1, scope: !7154)
!7165 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !982, file: !982, line: 3561, type: !7166, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7168)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !1152, !690, !378}
!7168 = !{!7169, !7170, !7171, !7172}
!7169 = !DILocalVariable(name: "D", arg: 1, scope: !7165, file: !982, line: 3561, type: !1152)
!7170 = !DILocalVariable(name: "cmd", arg: 2, scope: !7165, file: !982, line: 3561, type: !690)
!7171 = !DILocalVariable(name: "outlen", arg: 3, scope: !7165, file: !982, line: 3561, type: !378)
!7172 = !DILocalVariable(name: "savedMask", scope: !7165, file: !982, line: 3563, type: !175)
!7173 = !DILocation(line: 0, scope: !7165)
!7174 = !DILocation(line: 3565, column: 17, scope: !7165)
!7175 = !DILocation(line: 3566, column: 22, scope: !7165)
!7176 = !DILocation(line: 3566, column: 5, scope: !7165)
!7177 = !DILocation(line: 3567, column: 33, scope: !7165)
!7178 = !DILocation(line: 3568, column: 27, scope: !7165)
!7179 = !DILocation(line: 3568, column: 25, scope: !7165)
!7180 = !DILocation(line: 3569, column: 24, scope: !7165)
!7181 = !DILocation(line: 3570, column: 25, scope: !7165)
!7182 = !DILocation(line: 3570, column: 5, scope: !7165)
!7183 = !DILocation(line: 3571, column: 5, scope: !7165)
!7184 = !DILocation(line: 3573, column: 1, scope: !7165)
!7185 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !982, file: !982, line: 1410, type: !7186, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7188)
!7186 = !DISubroutineType(types: !7187)
!7187 = !{!1820}
!7188 = !{!7189}
!7189 = !DILocalVariable(name: "savedMask", scope: !7185, file: !982, line: 1412, type: !858)
!7190 = !DILocation(line: 1413, column: 17, scope: !7185)
!7191 = !DILocation(line: 0, scope: !7185)
!7192 = !DILocation(line: 1414, column: 9, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7185, file: !982, line: 1414, column: 9)
!7194 = !DILocation(line: 1414, column: 9, scope: !7185)
!7195 = !DILocation(line: 1415, column: 17, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !982, line: 1414, column: 24)
!7197 = !DILocation(line: 1417, column: 9, scope: !7196)
!7198 = !DILocation(line: 0, scope: !7193)
!7199 = !DILocation(line: 1425, column: 1, scope: !7185)
!7200 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !982, file: !982, line: 1257, type: !7201, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7203)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{!211}
!7203 = !{!7204, !7205, !7206}
!7204 = !DILocalVariable(name: "D", scope: !7200, file: !982, line: 1259, type: !1152)
!7205 = !DILocalVariable(name: "status", scope: !7200, file: !982, line: 1260, type: !1204)
!7206 = !DILocalVariable(name: "result", scope: !7200, file: !982, line: 1261, type: !211)
!7207 = !DILocation(line: 1259, column: 57, scope: !7200)
!7208 = !DILocation(line: 0, scope: !7200)
!7209 = !DILocation(line: 1263, column: 5, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !982, line: 1263, column: 5)
!7211 = distinct !DILexicalBlock(scope: !7200, file: !982, line: 1263, column: 5)
!7212 = !DILocation(line: 1263, column: 5, scope: !7211)
!7213 = !DILocation(line: 1263, column: 5, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7210, file: !982, line: 1263, column: 5)
!7215 = !DILocation(line: 1265, column: 5, scope: !7200)
!7216 = !DILocation(line: 1267, column: 42, scope: !7200)
!7217 = !DILocation(line: 1267, column: 47, scope: !7200)
!7218 = !DILocation(line: 1267, column: 14, scope: !7200)
!7219 = !DILocation(line: 1269, column: 27, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7200, file: !982, line: 1269, column: 9)
!7221 = !DILocation(line: 1269, column: 24, scope: !7220)
!7222 = !DILocation(line: 1269, column: 22, scope: !7220)
!7223 = !DILocation(line: 1269, column: 11, scope: !7220)
!7224 = !DILocation(line: 1269, column: 9, scope: !7200)
!7225 = !DILocation(line: 1270, column: 9, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7220, file: !982, line: 1269, column: 51)
!7227 = !DILocation(line: 1272, column: 5, scope: !7226)
!7228 = !DILocation(line: 1274, column: 5, scope: !7200)
!7229 = !DILocation(line: 1276, column: 5, scope: !7200)
!7230 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !982, file: !982, line: 1289, type: !208, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7231)
!7231 = !{!7232}
!7232 = !DILocalVariable(name: "D", scope: !7230, file: !982, line: 1291, type: !1152)
!7233 = !DILocation(line: 0, scope: !7230)
!7234 = !DILocation(line: 1293, column: 5, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !982, line: 1293, column: 5)
!7236 = distinct !DILexicalBlock(scope: !7230, file: !982, line: 1293, column: 5)
!7237 = !DILocation(line: 1293, column: 5, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7235, file: !982, line: 1293, column: 5)
!7239 = !DILocation(line: 1293, column: 5, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !982, line: 1293, column: 5)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !982, line: 1293, column: 5)
!7242 = distinct !DILexicalBlock(scope: !7238, file: !982, line: 1293, column: 5)
!7243 = !DILocation(line: 1291, column: 60, scope: !7230)
!7244 = !DILocation(line: 1295, column: 5, scope: !7230)
!7245 = !DILocation(line: 1296, column: 1, scope: !7230)
!7246 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !982, file: !982, line: 3452, type: !6888, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7247)
!7247 = !{!7248, !7249}
!7248 = !DILocalVariable(name: "D", arg: 1, scope: !7246, file: !982, line: 3452, type: !1152)
!7249 = !DILocalVariable(name: "savedMask", scope: !7246, file: !982, line: 3454, type: !175)
!7250 = !DILocation(line: 0, scope: !7246)
!7251 = !DILocation(line: 3456, column: 17, scope: !7246)
!7252 = !DILocation(line: 3462, column: 24, scope: !7246)
!7253 = !DILocation(line: 3462, column: 31, scope: !7246)
!7254 = !DILocation(line: 3462, column: 36, scope: !7246)
!7255 = !DILocation(line: 3462, column: 28, scope: !7246)
!7256 = !DILocation(line: 3462, column: 5, scope: !7246)
!7257 = !DILocation(line: 3463, column: 12, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7246, file: !982, line: 3463, column: 9)
!7259 = !DILocation(line: 3463, column: 27, scope: !7258)
!7260 = !DILocation(line: 3463, column: 9, scope: !7246)
!7261 = !DILocation(line: 3464, column: 28, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7258, file: !982, line: 3463, column: 33)
!7263 = !DILocation(line: 3465, column: 5, scope: !7262)
!7264 = !DILocation(line: 3467, column: 5, scope: !7246)
!7265 = !DILocation(line: 3468, column: 5, scope: !7246)
!7266 = !DILocation(line: 3469, column: 1, scope: !7246)
!7267 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !982, file: !982, line: 2417, type: !208, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7268)
!7268 = !{!7269}
!7269 = !DILocalVariable(name: "savedMask", scope: !7267, file: !982, line: 2419, type: !175)
!7270 = !DILocation(line: 2420, column: 17, scope: !7267)
!7271 = !DILocation(line: 0, scope: !7267)
!7272 = !DILocation(line: 2425, column: 25, scope: !7267)
!7273 = !DILocation(line: 2426, column: 5, scope: !7267)
!7274 = !DILocation(line: 2427, column: 1, scope: !7267)
!7275 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !982, file: !982, line: 1308, type: !208, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7276)
!7276 = !{!7277, !7278}
!7277 = !DILocalVariable(name: "D", scope: !7275, file: !982, line: 1310, type: !1152)
!7278 = !DILocalVariable(name: "status", scope: !7275, file: !982, line: 1311, type: !1204)
!7279 = !DILocation(line: 1310, column: 60, scope: !7275)
!7280 = !DILocation(line: 0, scope: !7275)
!7281 = !DILocation(line: 1313, column: 5, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !982, line: 1313, column: 5)
!7283 = distinct !DILexicalBlock(scope: !7275, file: !982, line: 1313, column: 5)
!7284 = !DILocation(line: 1313, column: 5, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7282, file: !982, line: 1313, column: 5)
!7286 = !DILocation(line: 1313, column: 5, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !982, line: 1313, column: 5)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !982, line: 1313, column: 5)
!7289 = distinct !DILexicalBlock(scope: !7285, file: !982, line: 1313, column: 5)
!7290 = !DILocation(line: 1315, column: 5, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !982, line: 1315, column: 5)
!7292 = distinct !DILexicalBlock(scope: !7275, file: !982, line: 1315, column: 5)
!7293 = !DILocation(line: 1315, column: 5, scope: !7292)
!7294 = !DILocation(line: 1315, column: 5, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !982, line: 1315, column: 5)
!7296 = !DILocation(line: 1317, column: 5, scope: !7275)
!7297 = !DILocation(line: 1319, column: 5, scope: !7275)
!7298 = !DILocation(line: 1320, column: 46, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7275, file: !982, line: 1319, column: 15)
!7300 = !DILocation(line: 1320, column: 51, scope: !7299)
!7301 = !DILocation(line: 1320, column: 18, scope: !7299)
!7302 = !DILocation(line: 1322, column: 31, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !982, line: 1322, column: 13)
!7304 = !DILocation(line: 1322, column: 28, scope: !7303)
!7305 = !DILocation(line: 1322, column: 26, scope: !7303)
!7306 = !DILocation(line: 1322, column: 15, scope: !7303)
!7307 = !DILocation(line: 1322, column: 13, scope: !7299)
!7308 = distinct !{!7308, !7297, !7309}
!7309 = !DILocation(line: 1325, column: 5, scope: !7275)
!7310 = !DILocation(line: 1327, column: 5, scope: !7275)
!7311 = !DILocation(line: 1328, column: 1, scope: !7275)
!7312 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !982, file: !982, line: 1394, type: !6888, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7313)
!7313 = !{!7314}
!7314 = !DILocalVariable(name: "D", arg: 1, scope: !7312, file: !982, line: 1394, type: !1152)
!7315 = !DILocation(line: 0, scope: !7312)
!7316 = !DILocation(line: 1401, column: 1, scope: !7312)
!7317 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !982, file: !982, line: 1556, type: !7318, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7339)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{!858, !7320, !1152}
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 32)
!7321 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1178, line: 121, baseType: !7322)
!7322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 105, size: 480, elements: !7323)
!7323 = !{!7324, !7325, !7326, !7327, !7328, !7329, !7330, !7331, !7332, !7333, !7334, !7335, !7336, !7337, !7338}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !7322, file: !1178, line: 106, baseType: !1452, size: 32)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !7322, file: !1178, line: 107, baseType: !1253, size: 32, offset: 32)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !7322, file: !1178, line: 108, baseType: !1457, size: 32, offset: 64)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !7322, file: !1178, line: 109, baseType: !1461, size: 32, offset: 96)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !7322, file: !1178, line: 110, baseType: !1465, size: 32, offset: 128)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !7322, file: !1178, line: 111, baseType: !1461, size: 32, offset: 160)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !7322, file: !1178, line: 112, baseType: !1470, size: 32, offset: 192)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !7322, file: !1178, line: 113, baseType: !1461, size: 32, offset: 224)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !7322, file: !1178, line: 114, baseType: !1461, size: 32, offset: 256)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !7322, file: !1178, line: 115, baseType: !1461, size: 32, offset: 288)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !7322, file: !1178, line: 116, baseType: !1477, size: 32, offset: 320)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !7322, file: !1178, line: 117, baseType: !1482, size: 32, offset: 352)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !7322, file: !1178, line: 118, baseType: !1487, size: 32, offset: 384)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !7322, file: !1178, line: 119, baseType: !1491, size: 32, offset: 416)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !7322, file: !1178, line: 120, baseType: !1495, size: 32, offset: 448)
!7339 = !{!7340, !7341, !7342}
!7340 = !DILocalVariable(name: "driver", arg: 1, scope: !7317, file: !982, line: 1556, type: !7320)
!7341 = !DILocalVariable(name: "D", arg: 2, scope: !7317, file: !982, line: 1556, type: !1152)
!7342 = !DILocalVariable(name: "smap", scope: !7317, file: !982, line: 1558, type: !1203)
!7343 = !DILocation(line: 0, scope: !7317)
!7344 = !DILocation(line: 1561, column: 15, scope: !7317)
!7345 = !DILocation(line: 1562, column: 22, scope: !7317)
!7346 = !DILocation(line: 1563, column: 5, scope: !7317)
!7347 = !DILocation(line: 1563, column: 22, scope: !7317)
!7348 = !DILocation(line: 1565, column: 5, scope: !7317)
!7349 = !DILocation(line: 1565, column: 22, scope: !7317)
!7350 = !DILocation(line: 1566, column: 5, scope: !7317)
!7351 = !DILocation(line: 1566, column: 22, scope: !7317)
!7352 = !DILocation(line: 1568, column: 5, scope: !7317)
!7353 = !DILocation(line: 1568, column: 22, scope: !7317)
!7354 = !DILocation(line: 1569, column: 5, scope: !7317)
!7355 = !DILocation(line: 1569, column: 22, scope: !7317)
!7356 = !DILocation(line: 1570, column: 5, scope: !7317)
!7357 = !DILocation(line: 1570, column: 22, scope: !7317)
!7358 = !DILocation(line: 1573, column: 8, scope: !7317)
!7359 = !DILocation(line: 1573, column: 13, scope: !7317)
!7360 = !DILocation(line: 1573, column: 28, scope: !7317)
!7361 = !DILocation(line: 1574, column: 8, scope: !7317)
!7362 = !DILocation(line: 1574, column: 13, scope: !7317)
!7363 = !DILocation(line: 1574, column: 29, scope: !7317)
!7364 = !DILocation(line: 1575, column: 8, scope: !7317)
!7365 = !DILocation(line: 1575, column: 13, scope: !7317)
!7366 = !DILocation(line: 1575, column: 30, scope: !7317)
!7367 = !DILocation(line: 1576, column: 8, scope: !7317)
!7368 = !DILocation(line: 1576, column: 13, scope: !7317)
!7369 = !DILocation(line: 1576, column: 23, scope: !7317)
!7370 = !DILocation(line: 1577, column: 8, scope: !7317)
!7371 = !DILocation(line: 1577, column: 13, scope: !7317)
!7372 = !DILocation(line: 1577, column: 24, scope: !7317)
!7373 = !DILocation(line: 1578, column: 8, scope: !7317)
!7374 = !DILocation(line: 1578, column: 13, scope: !7317)
!7375 = !DILocation(line: 1578, column: 25, scope: !7317)
!7376 = !DILocation(line: 1579, column: 8, scope: !7317)
!7377 = !DILocation(line: 1579, column: 23, scope: !7317)
!7378 = !DILocation(line: 1583, column: 10, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7317, file: !982, line: 1583, column: 9)
!7380 = !DILocation(line: 1583, column: 24, scope: !7379)
!7381 = !DILocation(line: 1583, column: 32, scope: !7379)
!7382 = !DILocation(line: 1583, column: 35, scope: !7379)
!7383 = !DILocation(line: 1583, column: 49, scope: !7379)
!7384 = !DILocation(line: 1583, column: 9, scope: !7317)
!7385 = !DILocation(line: 1586, column: 12, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7379, file: !982, line: 1583, column: 59)
!7387 = !DILocation(line: 1586, column: 17, scope: !7386)
!7388 = !DILocation(line: 1586, column: 25, scope: !7386)
!7389 = !DILocation(line: 1587, column: 12, scope: !7386)
!7390 = !DILocation(line: 1587, column: 17, scope: !7386)
!7391 = !DILocation(line: 1587, column: 24, scope: !7386)
!7392 = !DILocation(line: 1591, column: 10, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7317, file: !982, line: 1591, column: 9)
!7394 = !DILocation(line: 1589, column: 5, scope: !7386)
!7395 = !DILocation(line: 1600, column: 32, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7317, file: !982, line: 1600, column: 9)
!7397 = !DILocation(line: 1600, column: 35, scope: !7396)
!7398 = !DILocation(line: 1600, column: 49, scope: !7396)
!7399 = !DILocation(line: 1600, column: 9, scope: !7317)
!7400 = !DILocation(line: 1601, column: 12, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7396, file: !982, line: 1600, column: 59)
!7402 = !DILocation(line: 1601, column: 17, scope: !7401)
!7403 = !DILocation(line: 1601, column: 25, scope: !7401)
!7404 = !DILocation(line: 1602, column: 12, scope: !7401)
!7405 = !DILocation(line: 1602, column: 17, scope: !7401)
!7406 = !DILocation(line: 1602, column: 24, scope: !7401)
!7407 = !DILocation(line: 1603, column: 5, scope: !7401)
!7408 = !DILocation(line: 1607, column: 8, scope: !7317)
!7409 = !DILocation(line: 1607, column: 20, scope: !7317)
!7410 = !DILocation(line: 1622, column: 5, scope: !7317)
!7411 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !982, file: !982, line: 4553, type: !1254, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7412)
!7412 = !{!7413, !7414, !7415, !7416}
!7413 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7411, file: !982, line: 4553, type: !194)
!7414 = !DILocalVariable(name: "D", scope: !7411, file: !982, line: 4555, type: !1152)
!7415 = !DILocalVariable(name: "unlock", scope: !7411, file: !982, line: 4556, type: !175)
!7416 = !DILocalVariable(name: "cmd", scope: !7411, file: !982, line: 4557, type: !378)
!7417 = !DILocation(line: 0, scope: !7411)
!7418 = !DILocation(line: 4555, column: 24, scope: !7411)
!7419 = !DILocation(line: 4557, column: 5, scope: !7411)
!7420 = !DILocation(line: 4558, column: 12, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7411, file: !982, line: 4558, column: 9)
!7422 = !DILocation(line: 4558, column: 9, scope: !7421)
!7423 = !DILocation(line: 4558, column: 23, scope: !7421)
!7424 = !DILocation(line: 4558, column: 31, scope: !7421)
!7425 = !DILocation(line: 4558, column: 34, scope: !7421)
!7426 = !DILocation(line: 4558, column: 48, scope: !7421)
!7427 = !DILocation(line: 4558, column: 56, scope: !7421)
!7428 = !DILocation(line: 4558, column: 59, scope: !7421)
!7429 = !DILocation(line: 4558, column: 73, scope: !7421)
!7430 = !DILocation(line: 4558, column: 9, scope: !7411)
!7431 = !DILocation(line: 4563, column: 24, scope: !7411)
!7432 = !DILocation(line: 4563, column: 31, scope: !7411)
!7433 = !DILocation(line: 4563, column: 36, scope: !7411)
!7434 = !DILocation(line: 4563, column: 28, scope: !7411)
!7435 = !DILocation(line: 4563, column: 5, scope: !7411)
!7436 = !DILocation(line: 4564, column: 5, scope: !7411)
!7437 = !DILocation(line: 4567, column: 28, scope: !7411)
!7438 = !DILocation(line: 4567, column: 36, scope: !7411)
!7439 = !DILocation(line: 4567, column: 41, scope: !7411)
!7440 = !DILocation(line: 4567, column: 5, scope: !7411)
!7441 = !DILocation(line: 4568, column: 17, scope: !7411)
!7442 = !DILocation(line: 4568, column: 22, scope: !7411)
!7443 = !DILocation(line: 4568, column: 14, scope: !7411)
!7444 = !DILocation(line: 4569, column: 22, scope: !7411)
!7445 = !DILocation(line: 4569, column: 54, scope: !7411)
!7446 = !DILocation(line: 4569, column: 65, scope: !7411)
!7447 = !DILocation(line: 4569, column: 62, scope: !7411)
!7448 = !DILocation(line: 4569, column: 87, scope: !7411)
!7449 = !DILocation(line: 4569, column: 85, scope: !7411)
!7450 = !DILocation(line: 4569, column: 60, scope: !7411)
!7451 = !DILocation(line: 4569, column: 58, scope: !7411)
!7452 = !DILocation(line: 4569, column: 51, scope: !7411)
!7453 = !DILocation(line: 4572, column: 24, scope: !7411)
!7454 = !DILocation(line: 4572, column: 5, scope: !7411)
!7455 = !DILocation(line: 4573, column: 5, scope: !7411)
!7456 = !DILocation(line: 4575, column: 5, scope: !7411)
!7457 = !DILocation(line: 4576, column: 1, scope: !7411)
!7458 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !982, file: !982, line: 4488, type: !6888, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7459)
!7459 = !{!7460, !7461}
!7460 = !DILocalVariable(name: "D", arg: 1, scope: !7458, file: !982, line: 4488, type: !1152)
!7461 = !DILocalVariable(name: "status", scope: !7458, file: !982, line: 4490, type: !1204)
!7462 = !DILocation(line: 0, scope: !7458)
!7463 = !DILocation(line: 4490, column: 5, scope: !7458)
!7464 = !DILocation(line: 4491, column: 5, scope: !7458)
!7465 = !DILocation(line: 4492, column: 32, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7458, file: !982, line: 4491, column: 10)
!7467 = !DILocation(line: 4492, column: 40, scope: !7466)
!7468 = !DILocation(line: 4492, column: 45, scope: !7466)
!7469 = !DILocation(line: 4492, column: 9, scope: !7466)
!7470 = !DILocation(line: 4493, column: 20, scope: !7458)
!7471 = !DILocation(line: 4493, column: 32, scope: !7458)
!7472 = !DILocation(line: 4493, column: 29, scope: !7458)
!7473 = !DILocation(line: 4493, column: 27, scope: !7458)
!7474 = !DILocation(line: 4493, column: 16, scope: !7458)
!7475 = !DILocation(line: 4493, column: 5, scope: !7466)
!7476 = distinct !{!7476, !7464, !7477}
!7477 = !DILocation(line: 4493, column: 54, scope: !7458)
!7478 = !DILocation(line: 4494, column: 1, scope: !7458)
!7479 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !982, file: !982, line: 1742, type: !7318, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7480)
!7480 = !{!7481, !7482, !7483}
!7481 = !DILocalVariable(name: "driver", arg: 1, scope: !7479, file: !982, line: 1742, type: !7320)
!7482 = !DILocalVariable(name: "D", arg: 2, scope: !7479, file: !982, line: 1742, type: !1152)
!7483 = !DILocalVariable(name: "smap", scope: !7479, file: !982, line: 1744, type: !1203)
!7484 = !DILocation(line: 0, scope: !7479)
!7485 = !DILocation(line: 1747, column: 15, scope: !7479)
!7486 = !DILocation(line: 1748, column: 22, scope: !7479)
!7487 = !DILocation(line: 1749, column: 5, scope: !7479)
!7488 = !DILocation(line: 1749, column: 22, scope: !7479)
!7489 = !DILocation(line: 1750, column: 5, scope: !7479)
!7490 = !DILocation(line: 1750, column: 22, scope: !7479)
!7491 = !DILocation(line: 1751, column: 5, scope: !7479)
!7492 = !DILocation(line: 1751, column: 22, scope: !7479)
!7493 = !DILocation(line: 1752, column: 5, scope: !7479)
!7494 = !DILocation(line: 1752, column: 22, scope: !7479)
!7495 = !DILocation(line: 1753, column: 5, scope: !7479)
!7496 = !DILocation(line: 1753, column: 22, scope: !7479)
!7497 = !DILocation(line: 1756, column: 8, scope: !7479)
!7498 = !DILocation(line: 1756, column: 13, scope: !7479)
!7499 = !DILocation(line: 1756, column: 24, scope: !7479)
!7500 = !DILocation(line: 1758, column: 8, scope: !7479)
!7501 = !DILocation(line: 1758, column: 13, scope: !7479)
!7502 = !DILocation(line: 1758, column: 28, scope: !7479)
!7503 = !DILocation(line: 1759, column: 8, scope: !7479)
!7504 = !DILocation(line: 1759, column: 13, scope: !7479)
!7505 = !DILocation(line: 1759, column: 29, scope: !7479)
!7506 = !DILocation(line: 1760, column: 8, scope: !7479)
!7507 = !DILocation(line: 1760, column: 13, scope: !7479)
!7508 = !DILocation(line: 1760, column: 23, scope: !7479)
!7509 = !DILocation(line: 1761, column: 8, scope: !7479)
!7510 = !DILocation(line: 1761, column: 13, scope: !7479)
!7511 = !DILocation(line: 1761, column: 24, scope: !7479)
!7512 = !DILocation(line: 1762, column: 8, scope: !7479)
!7513 = !DILocation(line: 1762, column: 13, scope: !7479)
!7514 = !DILocation(line: 1762, column: 21, scope: !7479)
!7515 = !DILocation(line: 1763, column: 8, scope: !7479)
!7516 = !DILocation(line: 1763, column: 13, scope: !7479)
!7517 = !DILocation(line: 1763, column: 20, scope: !7479)
!7518 = !DILocation(line: 1764, column: 8, scope: !7479)
!7519 = !DILocation(line: 1764, column: 23, scope: !7479)
!7520 = !DILocation(line: 1768, column: 8, scope: !7479)
!7521 = !DILocation(line: 1768, column: 20, scope: !7479)
!7522 = !DILocation(line: 1770, column: 5, scope: !7479)
!7523 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !982, file: !982, line: 1775, type: !7318, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7524)
!7524 = !{!7525, !7526}
!7525 = !DILocalVariable(name: "driver", arg: 1, scope: !7523, file: !982, line: 1775, type: !7320)
!7526 = !DILocalVariable(name: "D", arg: 2, scope: !7523, file: !982, line: 1775, type: !1152)
!7527 = !DILocation(line: 0, scope: !7523)
!7528 = !DILocation(line: 1793, column: 5, scope: !7523)
!7529 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !982, file: !982, line: 1932, type: !7318, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7530)
!7530 = !{!7531, !7532}
!7531 = !DILocalVariable(name: "driver", arg: 1, scope: !7529, file: !982, line: 1932, type: !7320)
!7532 = !DILocalVariable(name: "D", arg: 2, scope: !7529, file: !982, line: 1932, type: !1152)
!7533 = !DILocation(line: 0, scope: !7529)
!7534 = !DILocation(line: 1935, column: 13, scope: !7529)
!7535 = !DILocation(line: 1935, column: 25, scope: !7529)
!7536 = !DILocation(line: 1936, column: 13, scope: !7529)
!7537 = !DILocation(line: 1936, column: 22, scope: !7529)
!7538 = !DILocation(line: 1937, column: 13, scope: !7529)
!7539 = !DILocation(line: 1937, column: 23, scope: !7529)
!7540 = !DILocation(line: 1939, column: 13, scope: !7529)
!7541 = !DILocation(line: 1939, column: 24, scope: !7529)
!7542 = !DILocation(line: 1940, column: 13, scope: !7529)
!7543 = !DILocation(line: 1940, column: 25, scope: !7529)
!7544 = !DILocation(line: 1945, column: 13, scope: !7529)
!7545 = !DILocation(line: 1945, column: 32, scope: !7529)
!7546 = !DILocation(line: 1946, column: 13, scope: !7529)
!7547 = !DILocation(line: 1946, column: 30, scope: !7529)
!7548 = !DILocation(line: 1947, column: 13, scope: !7529)
!7549 = !DILocation(line: 1947, column: 26, scope: !7529)
!7550 = !DILocation(line: 1948, column: 13, scope: !7529)
!7551 = !DILocation(line: 1948, column: 25, scope: !7529)
!7552 = !DILocation(line: 1949, column: 13, scope: !7529)
!7553 = !DILocation(line: 1949, column: 24, scope: !7529)
!7554 = !DILocation(line: 1956, column: 13, scope: !7529)
!7555 = !DILocation(line: 1956, column: 23, scope: !7529)
!7556 = !DILocation(line: 1957, column: 13, scope: !7529)
!7557 = !DILocation(line: 1957, column: 28, scope: !7529)
!7558 = !DILocation(line: 1960, column: 13, scope: !7529)
!7559 = !DILocation(line: 1960, column: 30, scope: !7529)
!7560 = !DILocation(line: 1961, column: 13, scope: !7529)
!7561 = !DILocation(line: 1961, column: 30, scope: !7529)
!7562 = !DILocation(line: 1962, column: 13, scope: !7529)
!7563 = !DILocation(line: 1962, column: 20, scope: !7529)
!7564 = !DILocation(line: 1968, column: 9, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7529, file: !982, line: 1968, column: 9)
!7566 = !DILocation(line: 1968, column: 36, scope: !7565)
!7567 = !DILocation(line: 1968, column: 9, scope: !7529)
!7568 = !DILocation(line: 1971, column: 12, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !982, line: 1970, column: 5)
!7570 = !DILocation(line: 1971, column: 25, scope: !7569)
!7571 = !DILocation(line: 1979, column: 8, scope: !7529)
!7572 = !DILocation(line: 1979, column: 13, scope: !7529)
!7573 = !DILocation(line: 1979, column: 25, scope: !7529)
!7574 = !DILocation(line: 1980, column: 8, scope: !7529)
!7575 = !DILocation(line: 1980, column: 13, scope: !7529)
!7576 = !DILocation(line: 1980, column: 24, scope: !7529)
!7577 = !DILocation(line: 1981, column: 8, scope: !7529)
!7578 = !DILocation(line: 1981, column: 13, scope: !7529)
!7579 = !DILocation(line: 1981, column: 24, scope: !7529)
!7580 = !DILocation(line: 1982, column: 8, scope: !7529)
!7581 = !DILocation(line: 1982, column: 13, scope: !7529)
!7582 = !DILocation(line: 1982, column: 22, scope: !7529)
!7583 = !DILocation(line: 1983, column: 8, scope: !7529)
!7584 = !DILocation(line: 1983, column: 13, scope: !7529)
!7585 = !DILocation(line: 1983, column: 21, scope: !7529)
!7586 = !DILocation(line: 1984, column: 8, scope: !7529)
!7587 = !DILocation(line: 1984, column: 13, scope: !7529)
!7588 = !DILocation(line: 1984, column: 22, scope: !7529)
!7589 = !DILocation(line: 1985, column: 8, scope: !7529)
!7590 = !DILocation(line: 1985, column: 13, scope: !7529)
!7591 = !DILocation(line: 1985, column: 22, scope: !7529)
!7592 = !DILocation(line: 1986, column: 8, scope: !7529)
!7593 = !DILocation(line: 1986, column: 13, scope: !7529)
!7594 = !DILocation(line: 1986, column: 21, scope: !7529)
!7595 = !DILocation(line: 1987, column: 8, scope: !7529)
!7596 = !DILocation(line: 1987, column: 13, scope: !7529)
!7597 = !DILocation(line: 1987, column: 20, scope: !7529)
!7598 = !DILocation(line: 1988, column: 8, scope: !7529)
!7599 = !DILocation(line: 1988, column: 13, scope: !7529)
!7600 = !DILocation(line: 1988, column: 25, scope: !7529)
!7601 = !DILocation(line: 1989, column: 8, scope: !7529)
!7602 = !DILocation(line: 1989, column: 13, scope: !7529)
!7603 = !DILocation(line: 1989, column: 22, scope: !7529)
!7604 = !DILocation(line: 1990, column: 8, scope: !7529)
!7605 = !DILocation(line: 1990, column: 13, scope: !7529)
!7606 = !DILocation(line: 1990, column: 22, scope: !7529)
!7607 = !DILocation(line: 1993, column: 8, scope: !7529)
!7608 = !DILocation(line: 1993, column: 13, scope: !7529)
!7609 = !DILocation(line: 1993, column: 26, scope: !7529)
!7610 = !DILocation(line: 1996, column: 8, scope: !7529)
!7611 = !DILocation(line: 1996, column: 20, scope: !7529)
!7612 = !DILocation(line: 1999, column: 8, scope: !7529)
!7613 = !DILocation(line: 1999, column: 24, scope: !7529)
!7614 = !DILocation(line: 2000, column: 8, scope: !7529)
!7615 = !DILocation(line: 2000, column: 19, scope: !7529)
!7616 = !DILocation(line: 2001, column: 8, scope: !7529)
!7617 = !DILocation(line: 2001, column: 24, scope: !7529)
!7618 = !DILocation(line: 2002, column: 8, scope: !7529)
!7619 = !DILocation(line: 2002, column: 23, scope: !7529)
!7620 = !DILocation(line: 2004, column: 5, scope: !7529)
!7621 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !982, file: !982, line: 2160, type: !1453, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7622)
!7622 = !{!7623, !7624, !7625, !7638, !7639, !7640}
!7623 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7621, file: !982, line: 2160, type: !194)
!7624 = !DILocalVariable(name: "Info", arg: 2, scope: !7621, file: !982, line: 2160, type: !194)
!7625 = !DILocalVariable(name: "FlashInfo", scope: !7621, file: !982, line: 2162, type: !7626)
!7626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 32)
!7627 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1178, line: 99, baseType: !7628)
!7628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 90, size: 928, elements: !7629)
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !7628, file: !1178, line: 91, baseType: !175, size: 32)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7628, file: !1178, line: 92, baseType: !1509, size: 256, offset: 32)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !7628, file: !1178, line: 93, baseType: !1509, size: 256, offset: 288)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7628, file: !1178, line: 94, baseType: !1509, size: 256, offset: 544)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !7628, file: !1178, line: 95, baseType: !175, size: 32, offset: 800)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !7628, file: !1178, line: 96, baseType: !1501, size: 16, offset: 832)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !7628, file: !1178, line: 97, baseType: !175, size: 32, offset: 864)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !7628, file: !1178, line: 98, baseType: !175, size: 32, offset: 896)
!7638 = !DILocalVariable(name: "D", scope: !7621, file: !982, line: 2163, type: !1152)
!7639 = !DILocalVariable(name: "i", scope: !7621, file: !982, line: 2164, type: !175)
!7640 = !DILocalVariable(name: "result", scope: !7621, file: !982, line: 2166, type: !858)
!7641 = !DILocation(line: 0, scope: !7621)
!7642 = !DILocation(line: 2163, column: 37, scope: !7621)
!7643 = !DILocation(line: 2202, column: 16, scope: !7621)
!7644 = !DILocation(line: 2202, column: 28, scope: !7621)
!7645 = !DILocation(line: 2204, column: 15, scope: !7621)
!7646 = !DILocation(line: 2204, column: 29, scope: !7621)
!7647 = !DILocation(line: 2204, column: 39, scope: !7621)
!7648 = !DILocation(line: 2204, column: 5, scope: !7621)
!7649 = !DILocation(line: 2205, column: 9, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7621, file: !982, line: 2204, column: 45)
!7651 = !DILocation(line: 2205, column: 33, scope: !7650)
!7652 = !DILocation(line: 2206, column: 41, scope: !7650)
!7653 = !DILocation(line: 2206, column: 55, scope: !7650)
!7654 = !DILocation(line: 2206, column: 9, scope: !7650)
!7655 = !DILocation(line: 2206, column: 36, scope: !7650)
!7656 = !DILocation(line: 2207, column: 38, scope: !7650)
!7657 = !DILocation(line: 2207, column: 52, scope: !7650)
!7658 = !DILocation(line: 2207, column: 32, scope: !7650)
!7659 = !DILocation(line: 2209, column: 10, scope: !7650)
!7660 = distinct !{!7660, !7648, !7661}
!7661 = !DILocation(line: 2210, column: 5, scope: !7621)
!7662 = !DILocation(line: 2212, column: 16, scope: !7621)
!7663 = !DILocation(line: 2212, column: 32, scope: !7621)
!7664 = !DILocation(line: 2213, column: 16, scope: !7621)
!7665 = !DILocation(line: 2213, column: 25, scope: !7621)
!7666 = !DILocation(line: 2236, column: 5, scope: !7621)
!7667 = !DILocation(line: 2238, column: 5, scope: !7621)
!7668 = !DILocation(line: 2239, column: 18, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7621, file: !982, line: 2238, column: 10)
!7670 = !DILocation(line: 2240, column: 34, scope: !7621)
!7671 = !DILocation(line: 2240, column: 5, scope: !7669)
!7672 = distinct !{!7672, !7667, !7673}
!7673 = !DILocation(line: 2240, column: 43, scope: !7621)
!7674 = !DILocation(line: 2259, column: 5, scope: !7621)
!7675 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !982, file: !982, line: 2275, type: !1254, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7676)
!7676 = !{!7677, !7678, !7679, !7680}
!7677 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7675, file: !982, line: 2275, type: !194)
!7678 = !DILocalVariable(name: "D", scope: !7675, file: !982, line: 2278, type: !1152)
!7679 = !DILocalVariable(name: "status", scope: !7675, file: !982, line: 2279, type: !1204)
!7680 = !DILocalVariable(name: "saved_mask", scope: !7675, file: !982, line: 2280, type: !175)
!7681 = !DILocation(line: 0, scope: !7675)
!7682 = !DILocation(line: 2278, column: 33, scope: !7675)
!7683 = !DILocation(line: 2286, column: 5, scope: !7675)
!7684 = !DILocation(line: 2293, column: 9, scope: !7675)
!7685 = !DILocation(line: 2294, column: 26, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7675, file: !982, line: 2293, column: 19)
!7687 = !DILocation(line: 2297, column: 17, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7686, file: !982, line: 2297, column: 17)
!7689 = !DILocation(line: 2297, column: 17, scope: !7686)
!7690 = !DILocation(line: 2298, column: 17, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7688, file: !982, line: 2297, column: 36)
!7692 = !DILocation(line: 2299, column: 37, scope: !7691)
!7693 = !DILocation(line: 2300, column: 13, scope: !7691)
!7694 = !DILocation(line: 2303, column: 50, scope: !7686)
!7695 = !DILocation(line: 2303, column: 55, scope: !7686)
!7696 = !DILocation(line: 2303, column: 22, scope: !7686)
!7697 = !DILocation(line: 2306, column: 35, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7686, file: !982, line: 2306, column: 17)
!7699 = !DILocation(line: 2306, column: 32, scope: !7698)
!7700 = !DILocation(line: 2306, column: 30, scope: !7698)
!7701 = !DILocation(line: 2306, column: 19, scope: !7698)
!7702 = !DILocation(line: 2306, column: 17, scope: !7686)
!7703 = !DILocation(line: 2307, column: 17, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7698, file: !982, line: 2306, column: 59)
!7705 = !DILocation(line: 2308, column: 17, scope: !7704)
!7706 = !DILocation(line: 2315, column: 12, scope: !7675)
!7707 = !DILocation(line: 2315, column: 21, scope: !7675)
!7708 = !DILocation(line: 2325, column: 9, scope: !7675)
!7709 = !DILocation(line: 2326, column: 5, scope: !7675)
!7710 = !DILocation(line: 2311, column: 17, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7698, file: !982, line: 2310, column: 20)
!7712 = distinct !{!7712, !7684, !7713}
!7713 = !DILocation(line: 2313, column: 9, scope: !7675)
!7714 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !982, file: !982, line: 2819, type: !1462, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7715)
!7715 = !{!7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7728, !7729}
!7716 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7714, file: !982, line: 2819, type: !194)
!7717 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7714, file: !982, line: 2819, type: !175)
!7718 = !DILocalVariable(name: "result", scope: !7714, file: !982, line: 2821, type: !858)
!7719 = !DILocalVariable(name: "blocksize", scope: !7714, file: !982, line: 2822, type: !175)
!7720 = !DILocalVariable(name: "eraseunit", scope: !7714, file: !982, line: 2823, type: !175)
!7721 = !DILocalVariable(name: "eraseaddr", scope: !7714, file: !982, line: 2824, type: !175)
!7722 = !DILocalVariable(name: "iteration", scope: !7714, file: !982, line: 2825, type: !175)
!7723 = !DILocalVariable(name: "D", scope: !7714, file: !982, line: 2826, type: !1152)
!7724 = !DILocalVariable(name: "erase_block", scope: !7714, file: !982, line: 2827, type: !175)
!7725 = !DILocalVariable(name: "a", scope: !7726, file: !982, line: 2853, type: !175)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !982, line: 2852, column: 56)
!7727 = distinct !DILexicalBlock(scope: !7714, file: !982, line: 2852, column: 9)
!7728 = !DILocalVariable(name: "b", scope: !7726, file: !982, line: 2853, type: !175)
!7729 = !DILocalVariable(name: "c", scope: !7726, file: !982, line: 2853, type: !175)
!7730 = !DILocation(line: 0, scope: !7714)
!7731 = !DILocation(line: 2826, column: 30, scope: !7714)
!7732 = !DILocation(line: 2829, column: 5, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !982, line: 2829, column: 5)
!7734 = distinct !DILexicalBlock(scope: !7714, file: !982, line: 2829, column: 5)
!7735 = !DILocation(line: 2829, column: 5, scope: !7734)
!7736 = !DILocation(line: 2829, column: 5, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7733, file: !982, line: 2829, column: 5)
!7738 = !DILocation(line: 2836, column: 9, scope: !7714)
!7739 = !DILocation(line: 2838, column: 8, scope: !7714)
!7740 = !DILocation(line: 2838, column: 21, scope: !7714)
!7741 = !DILocation(line: 2847, column: 5, scope: !7714)
!7742 = !DILocation(line: 2848, column: 18, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7714, file: !982, line: 2847, column: 10)
!7744 = !DILocation(line: 2850, column: 34, scope: !7714)
!7745 = !DILocation(line: 2850, column: 5, scope: !7743)
!7746 = distinct !{!7746, !7741, !7747}
!7747 = !DILocation(line: 2850, column: 43, scope: !7714)
!7748 = !DILocation(line: 2839, column: 32, scope: !7714)
!7749 = !DILocation(line: 2861, column: 53, scope: !7726)
!7750 = !DILocation(line: 2861, column: 40, scope: !7726)
!7751 = !DILocation(line: 2861, column: 25, scope: !7726)
!7752 = !DILocation(line: 2874, column: 16, scope: !7726)
!7753 = !DILocation(line: 2874, column: 13, scope: !7726)
!7754 = !DILocation(line: 0, scope: !7726)
!7755 = !DILocation(line: 2875, column: 24, scope: !7726)
!7756 = !DILocation(line: 2877, column: 21, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7726, file: !982, line: 2877, column: 13)
!7758 = !DILocation(line: 2877, column: 13, scope: !7726)
!7759 = !DILocation(line: 2879, column: 23, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !982, line: 2879, column: 21)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !982, line: 2878, column: 120)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !982, line: 2878, column: 13)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !982, line: 2878, column: 13)
!7764 = distinct !DILexicalBlock(scope: !7757, file: !982, line: 2877, column: 27)
!7765 = !DILocation(line: 2879, column: 21, scope: !7761)
!7766 = !DILocation(line: 2878, column: 48, scope: !7762)
!7767 = !DILocation(line: 2878, column: 83, scope: !7762)
!7768 = !DILocation(line: 2878, column: 113, scope: !7762)
!7769 = !DILocation(line: 2878, column: 35, scope: !7762)
!7770 = !DILocation(line: 2878, column: 13, scope: !7763)
!7771 = distinct !{!7771, !7770, !7772}
!7772 = !DILocation(line: 2883, column: 13, scope: !7763)
!7773 = !DILocation(line: 2863, column: 19, scope: !7726)
!7774 = !DILocation(line: 2825, column: 24, scope: !7714)
!7775 = !DILocation(line: 2886, column: 9, scope: !7726)
!7776 = !DILocation(line: 2888, column: 36, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7726, file: !982, line: 2886, column: 31)
!7778 = !DILocation(line: 2888, column: 41, scope: !7777)
!7779 = !DILocation(line: 2889, column: 17, scope: !7777)
!7780 = !DILocation(line: 2891, column: 36, scope: !7777)
!7781 = !DILocation(line: 2891, column: 41, scope: !7777)
!7782 = !DILocation(line: 2892, column: 17, scope: !7777)
!7783 = !DILocation(line: 2894, column: 36, scope: !7777)
!7784 = !DILocation(line: 2894, column: 41, scope: !7777)
!7785 = !DILocation(line: 2895, column: 17, scope: !7777)
!7786 = !DILocation(line: 2897, column: 17, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !982, line: 2897, column: 17)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !982, line: 2897, column: 17)
!7789 = distinct !DILexicalBlock(scope: !7777, file: !982, line: 2897, column: 17)
!7790 = !DILocation(line: 0, scope: !7777)
!7791 = !DILocation(line: 2906, column: 5, scope: !7714)
!7792 = !DILocation(line: 2908, column: 32, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7714, file: !982, line: 2906, column: 27)
!7794 = !DILocation(line: 2908, column: 37, scope: !7793)
!7795 = !DILocation(line: 2909, column: 13, scope: !7793)
!7796 = !DILocation(line: 2911, column: 32, scope: !7793)
!7797 = !DILocation(line: 2911, column: 37, scope: !7793)
!7798 = !DILocation(line: 2912, column: 13, scope: !7793)
!7799 = !DILocation(line: 2914, column: 32, scope: !7793)
!7800 = !DILocation(line: 2914, column: 37, scope: !7793)
!7801 = !DILocation(line: 2915, column: 13, scope: !7793)
!7802 = !DILocation(line: 0, scope: !7793)
!7803 = !DILocation(line: 2921, column: 56, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !982, line: 2921, column: 5)
!7805 = distinct !DILexicalBlock(scope: !7714, file: !982, line: 2921, column: 5)
!7806 = !DILocation(line: 2921, column: 5, scope: !7805)
!7807 = !DILocation(line: 2921, column: 35, scope: !7805)
!7808 = !DILocation(line: 2921, column: 22, scope: !7805)
!7809 = !DILocation(line: 2922, column: 9, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7804, file: !982, line: 2921, column: 99)
!7811 = !DILocation(line: 2929, column: 9, scope: !7810)
!7812 = !DILocation(line: 2938, column: 26, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7810, file: !982, line: 2929, column: 26)
!7814 = !DILocation(line: 2939, column: 37, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7813, file: !982, line: 2939, column: 17)
!7816 = !DILocation(line: 2939, column: 17, scope: !7813)
!7817 = distinct !{!7817, !7811, !7818}
!7818 = !DILocation(line: 2943, column: 9, scope: !7810)
!7819 = !DILocation(line: 2921, column: 71, scope: !7804)
!7820 = !DILocation(line: 2921, column: 85, scope: !7804)
!7821 = distinct !{!7821, !7806, !7822}
!7822 = !DILocation(line: 2983, column: 5, scope: !7805)
!7823 = !DILocation(line: 2985, column: 21, scope: !7714)
!7824 = !DILocation(line: 2992, column: 9, scope: !7714)
!7825 = !DILocation(line: 3000, column: 5, scope: !7714)
!7826 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !982, file: !982, line: 2533, type: !1466, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7827)
!7827 = !{!7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841}
!7828 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7826, file: !982, line: 2533, type: !194)
!7829 = !DILocalVariable(name: "Address", arg: 2, scope: !7826, file: !982, line: 2533, type: !194)
!7830 = !DILocalVariable(name: "Data", arg: 3, scope: !7826, file: !982, line: 2533, type: !194)
!7831 = !DILocalVariable(name: "Length", arg: 4, scope: !7826, file: !982, line: 2533, type: !175)
!7832 = !DILocalVariable(name: "D", scope: !7826, file: !982, line: 2535, type: !1152)
!7833 = !DILocalVariable(name: "savedMask", scope: !7826, file: !982, line: 2536, type: !175)
!7834 = !DILocalVariable(name: "address", scope: !7826, file: !982, line: 2537, type: !175)
!7835 = !DILocalVariable(name: "p_data", scope: !7826, file: !982, line: 2538, type: !680)
!7836 = !DILocalVariable(name: "p_data_first", scope: !7826, file: !982, line: 2539, type: !680)
!7837 = !DILocalVariable(name: "result", scope: !7826, file: !982, line: 2540, type: !858)
!7838 = !DILocalVariable(name: "written", scope: !7826, file: !982, line: 2541, type: !175)
!7839 = !DILocalVariable(name: "length", scope: !7826, file: !982, line: 2542, type: !175)
!7840 = !DILocalVariable(name: "cmd1", scope: !7826, file: !982, line: 2543, type: !175)
!7841 = !DILocalVariable(name: "j", scope: !7842, file: !982, line: 2599, type: !175)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !982, line: 2597, column: 61)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !982, line: 2597, column: 13)
!7844 = distinct !DILexicalBlock(scope: !7826, file: !982, line: 2583, column: 25)
!7845 = !DILocation(line: 0, scope: !7826)
!7846 = !DILocation(line: 2535, column: 26, scope: !7826)
!7847 = !DILocation(line: 2537, column: 37, scope: !7826)
!7848 = !DILocation(line: 2538, column: 5, scope: !7826)
!7849 = !DILocation(line: 2538, column: 19, scope: !7826)
!7850 = !DILocation(line: 2542, column: 5, scope: !7826)
!7851 = !DILocation(line: 2545, column: 5, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !982, line: 2545, column: 5)
!7853 = distinct !DILexicalBlock(scope: !7826, file: !982, line: 2545, column: 5)
!7854 = !DILocation(line: 2545, column: 5, scope: !7853)
!7855 = !DILocation(line: 2545, column: 5, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !982, line: 2545, column: 5)
!7857 = !DILocation(line: 2567, column: 9, scope: !7826)
!7858 = !DILocation(line: 2569, column: 8, scope: !7826)
!7859 = !DILocation(line: 2569, column: 21, scope: !7826)
!7860 = !DILocation(line: 2576, column: 5, scope: !7826)
!7861 = !DILocation(line: 2577, column: 18, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7826, file: !982, line: 2576, column: 10)
!7863 = !DILocation(line: 2579, column: 34, scope: !7826)
!7864 = !DILocation(line: 2579, column: 5, scope: !7862)
!7865 = distinct !{!7865, !7860, !7866}
!7866 = !DILocation(line: 2579, column: 43, scope: !7826)
!7867 = !DILocation(line: 2583, column: 14, scope: !7826)
!7868 = !DILocation(line: 2583, column: 5, scope: !7826)
!7869 = !DILocation(line: 2584, column: 27, scope: !7844)
!7870 = !DILocation(line: 2592, column: 18, scope: !7844)
!7871 = !DILocation(line: 2592, column: 35, scope: !7844)
!7872 = !DILocation(line: 2592, column: 74, scope: !7844)
!7873 = !DILocation(line: 2592, column: 50, scope: !7844)
!7874 = !DILocation(line: 2592, column: 39, scope: !7844)
!7875 = !DILocation(line: 2595, column: 37, scope: !7844)
!7876 = !DILocation(line: 2595, column: 29, scope: !7844)
!7877 = !DILocation(line: 2595, column: 16, scope: !7844)
!7878 = !DILocation(line: 2597, column: 13, scope: !7843)
!7879 = !DILocation(line: 2597, column: 30, scope: !7843)
!7880 = !DILocation(line: 2597, column: 13, scope: !7844)
!7881 = !DILocation(line: 0, scope: !7842)
!7882 = !DILocation(line: 2600, column: 27, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !982, line: 2600, column: 13)
!7884 = distinct !DILexicalBlock(scope: !7842, file: !982, line: 2600, column: 13)
!7885 = !DILocation(line: 2600, column: 13, scope: !7884)
!7886 = !DILocation(line: 2601, column: 38, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7883, file: !982, line: 2600, column: 42)
!7888 = !DILocation(line: 2601, column: 17, scope: !7887)
!7889 = !DILocation(line: 2601, column: 36, scope: !7887)
!7890 = !DILocation(line: 2600, column: 38, scope: !7883)
!7891 = distinct !{!7891, !7885, !7892}
!7892 = !DILocation(line: 2602, column: 13, scope: !7884)
!7893 = !DILocation(line: 0, scope: !7844)
!7894 = !DILocation(line: 2606, column: 18, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7844, file: !982, line: 2606, column: 13)
!7896 = !DILocation(line: 2606, column: 29, scope: !7895)
!7897 = !DILocation(line: 2606, column: 13, scope: !7844)
!7898 = !DILocation(line: 2607, column: 13, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7895, file: !982, line: 2606, column: 55)
!7900 = !DILocation(line: 2608, column: 9, scope: !7899)
!7901 = !DILocation(line: 2613, column: 16, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7844, file: !982, line: 2613, column: 13)
!7903 = !DILocation(line: 2613, column: 29, scope: !7902)
!7904 = !DILocation(line: 0, scope: !7902)
!7905 = !DILocation(line: 2613, column: 13, scope: !7844)
!7906 = !DILocation(line: 2614, column: 20, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7902, file: !982, line: 2613, column: 35)
!7908 = !DILocation(line: 2615, column: 32, scope: !7907)
!7909 = !DILocation(line: 2615, column: 40, scope: !7907)
!7910 = !DILocation(line: 2615, column: 13, scope: !7907)
!7911 = !DILocation(line: 2616, column: 9, scope: !7907)
!7912 = !DILocation(line: 2619, column: 20, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7902, file: !982, line: 2618, column: 9)
!7914 = !DILocation(line: 2620, column: 32, scope: !7913)
!7915 = !DILocation(line: 2620, column: 40, scope: !7913)
!7916 = !DILocation(line: 2620, column: 13, scope: !7913)
!7917 = !DILocation(line: 2626, column: 21, scope: !7844)
!7918 = !DILocation(line: 2633, column: 37, scope: !7844)
!7919 = !DILocation(line: 2634, column: 45, scope: !7844)
!7920 = !DILocation(line: 2634, column: 42, scope: !7844)
!7921 = !DILocation(line: 2634, column: 40, scope: !7844)
!7922 = !DILocation(line: 2634, column: 58, scope: !7844)
!7923 = !DILocation(line: 2634, column: 29, scope: !7844)
!7924 = !DILocation(line: 2635, column: 28, scope: !7844)
!7925 = !DILocation(line: 2636, column: 9, scope: !7844)
!7926 = !DILocation(line: 2638, column: 26, scope: !7844)
!7927 = !DILocation(line: 2638, column: 9, scope: !7844)
!7928 = !DILocation(line: 2639, column: 29, scope: !7844)
!7929 = !DILocation(line: 2639, column: 9, scope: !7844)
!7930 = !DILocation(line: 2662, column: 9, scope: !7844)
!7931 = !DILocation(line: 2670, column: 9, scope: !7844)
!7932 = !DILocation(line: 2676, column: 89, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7844, file: !982, line: 2670, column: 13)
!7934 = !DILocation(line: 2676, column: 26, scope: !7933)
!7935 = !DILocation(line: 2678, column: 36, scope: !7844)
!7936 = !DILocation(line: 2678, column: 9, scope: !7933)
!7937 = distinct !{!7937, !7931, !7938}
!7938 = !DILocation(line: 2678, column: 45, scope: !7844)
!7939 = !DILocation(line: 2718, column: 19, scope: !7844)
!7940 = !DILocation(line: 2718, column: 16, scope: !7844)
!7941 = !DILocation(line: 2719, column: 16, scope: !7844)
!7942 = !DILocation(line: 2722, column: 31, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7844, file: !982, line: 2722, column: 13)
!7944 = !DILocation(line: 2722, column: 13, scope: !7844)
!7945 = distinct !{!7945, !7868, !7946}
!7946 = !DILocation(line: 2725, column: 5, scope: !7826)
!7947 = !DILocation(line: 2748, column: 21, scope: !7826)
!7948 = !DILocation(line: 2755, column: 9, scope: !7826)
!7949 = !DILocation(line: 2757, column: 16, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7826, file: !982, line: 2757, column: 9)
!7951 = !DILocation(line: 2761, column: 1, scope: !7826)
!7952 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !982, file: !982, line: 3019, type: !1462, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7953)
!7953 = !{!7954, !7955}
!7954 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7952, file: !982, line: 3019, type: !194)
!7955 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7952, file: !982, line: 3019, type: !175)
!7956 = !DILocation(line: 0, scope: !7952)
!7957 = !DILocation(line: 3021, column: 5, scope: !7952)
!7958 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !982, file: !982, line: 3124, type: !1471, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7959)
!7959 = !{!7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967}
!7960 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7958, file: !982, line: 3124, type: !194)
!7961 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7958, file: !982, line: 3124, type: !175)
!7962 = !DILocalVariable(name: "result", scope: !7958, file: !982, line: 3126, type: !858)
!7963 = !DILocalVariable(name: "savedMask", scope: !7958, file: !982, line: 3127, type: !175)
!7964 = !DILocalVariable(name: "D", scope: !7958, file: !982, line: 3128, type: !1152)
!7965 = !DILocalVariable(name: "status_busy", scope: !7958, file: !982, line: 3129, type: !1204)
!7966 = !DILocalVariable(name: "status_suspend", scope: !7958, file: !982, line: 3129, type: !1204)
!7967 = !DILocalVariable(name: "check_status", scope: !7968, file: !982, line: 3141, type: !1204)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !982, line: 3140, column: 56)
!7969 = distinct !DILexicalBlock(scope: !7958, file: !982, line: 3140, column: 9)
!7970 = !DILocation(line: 0, scope: !7958)
!7971 = !DILocation(line: 3128, column: 47, scope: !7958)
!7972 = !DILocation(line: 3131, column: 5, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !982, line: 3131, column: 5)
!7974 = distinct !DILexicalBlock(scope: !7958, file: !982, line: 3131, column: 5)
!7975 = !DILocation(line: 3131, column: 5, scope: !7974)
!7976 = !DILocation(line: 3131, column: 5, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !982, line: 3131, column: 5)
!7978 = !DILocation(line: 3134, column: 50, scope: !7958)
!7979 = !DILocation(line: 3134, column: 55, scope: !7958)
!7980 = !DILocation(line: 3134, column: 22, scope: !7958)
!7981 = !DILocation(line: 3135, column: 50, scope: !7958)
!7982 = !DILocation(line: 3135, column: 55, scope: !7958)
!7983 = !DILocation(line: 3135, column: 22, scope: !7958)
!7984 = !DILocation(line: 3138, column: 17, scope: !7958)
!7985 = !DILocation(line: 3140, column: 32, scope: !7969)
!7986 = !DILocation(line: 3140, column: 29, scope: !7969)
!7987 = !DILocation(line: 3140, column: 27, scope: !7969)
!7988 = !DILocation(line: 3140, column: 11, scope: !7969)
!7989 = !DILocation(line: 3140, column: 9, scope: !7958)
!7990 = !DILocation(line: 3141, column: 34, scope: !7968)
!7991 = !DILocation(line: 3141, column: 60, scope: !7968)
!7992 = !DILocation(line: 3141, column: 58, scope: !7968)
!7993 = !DILocation(line: 0, scope: !7968)
!7994 = !DILocation(line: 3144, column: 37, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7968, file: !982, line: 3144, column: 13)
!7996 = !DILocation(line: 3144, column: 35, scope: !7995)
!7997 = !DILocation(line: 3144, column: 16, scope: !7995)
!7998 = !DILocation(line: 3144, column: 52, scope: !7995)
!7999 = !DILocation(line: 3145, column: 21, scope: !7995)
!8000 = !DILocation(line: 3145, column: 38, scope: !7995)
!8001 = !DILocation(line: 3147, column: 13, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !982, line: 3147, column: 13)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !982, line: 3147, column: 13)
!8004 = distinct !DILexicalBlock(scope: !7995, file: !982, line: 3145, column: 61)
!8005 = !DILocation(line: 3147, column: 13, scope: !8003)
!8006 = !DILocation(line: 3147, column: 13, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8002, file: !982, line: 3147, column: 13)
!8008 = !DILocation(line: 3150, column: 13, scope: !8004)
!8009 = !DILocation(line: 3151, column: 33, scope: !8004)
!8010 = !DILocation(line: 3153, column: 9, scope: !8004)
!8011 = !DILocation(line: 3155, column: 20, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !982, line: 3155, column: 17)
!8013 = distinct !DILexicalBlock(scope: !7995, file: !982, line: 3153, column: 16)
!8014 = !DILocation(line: 3155, column: 31, scope: !8012)
!8015 = !DILocation(line: 3155, column: 17, scope: !8013)
!8016 = !DILocation(line: 3156, column: 36, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8012, file: !982, line: 3155, column: 54)
!8018 = !DILocation(line: 3156, column: 17, scope: !8017)
!8019 = !DILocation(line: 3157, column: 36, scope: !8017)
!8020 = !DILocation(line: 3157, column: 17, scope: !8017)
!8021 = !DILocation(line: 3158, column: 13, scope: !8017)
!8022 = !DILocation(line: 3191, column: 5, scope: !7958)
!8023 = !DILocation(line: 3193, column: 9, scope: !7958)
!8024 = !DILocation(line: 3160, column: 13, scope: !8013)
!8025 = !DILocation(line: 3173, column: 13, scope: !8013)
!8026 = !DILocation(line: 3194, column: 18, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !982, line: 3193, column: 32)
!8028 = distinct !DILexicalBlock(scope: !7958, file: !982, line: 3193, column: 9)
!8029 = !DILocation(line: 3195, column: 5, scope: !8027)
!8030 = !DILocation(line: 3197, column: 5, scope: !7958)
!8031 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !982, file: !982, line: 3225, type: !1462, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8032)
!8032 = !{!8033, !8034, !8035, !8036, !8037}
!8033 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8031, file: !982, line: 3225, type: !194)
!8034 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8031, file: !982, line: 3225, type: !175)
!8035 = !DILocalVariable(name: "D", scope: !8031, file: !982, line: 3227, type: !1152)
!8036 = !DILocalVariable(name: "status", scope: !8031, file: !982, line: 3228, type: !1204)
!8037 = !DILocalVariable(name: "savedMask", scope: !8031, file: !982, line: 3229, type: !175)
!8038 = !DILocation(line: 0, scope: !8031)
!8039 = !DILocation(line: 3227, column: 30, scope: !8031)
!8040 = !DILocation(line: 3231, column: 17, scope: !8031)
!8041 = !DILocation(line: 3234, column: 5, scope: !8031)
!8042 = !DILocation(line: 3238, column: 5, scope: !8031)
!8043 = !DILocation(line: 3239, column: 46, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8031, file: !982, line: 3238, column: 15)
!8045 = !DILocation(line: 3239, column: 51, scope: !8044)
!8046 = !DILocation(line: 3239, column: 18, scope: !8044)
!8047 = !DILocation(line: 3241, column: 31, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8044, file: !982, line: 3241, column: 13)
!8049 = !DILocation(line: 3241, column: 28, scope: !8048)
!8050 = !DILocation(line: 3241, column: 26, scope: !8048)
!8051 = !DILocation(line: 3241, column: 15, scope: !8048)
!8052 = !DILocation(line: 3241, column: 13, scope: !8044)
!8053 = distinct !{!8053, !8042, !8054}
!8054 = !DILocation(line: 3244, column: 5, scope: !8031)
!8055 = !DILocation(line: 3246, column: 5, scope: !8031)
!8056 = !DILocation(line: 3248, column: 5, scope: !8031)
!8057 = !DILocation(line: 3250, column: 5, scope: !8031)
!8058 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !982, file: !982, line: 3277, type: !1462, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8059)
!8059 = !{!8060, !8061, !8062}
!8060 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8058, file: !982, line: 3277, type: !194)
!8061 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8058, file: !982, line: 3277, type: !175)
!8062 = !DILocalVariable(name: "D", scope: !8058, file: !982, line: 3279, type: !1152)
!8063 = !DILocation(line: 0, scope: !8058)
!8064 = !DILocation(line: 3279, column: 29, scope: !8058)
!8065 = !DILocation(line: 3281, column: 5, scope: !8058)
!8066 = !DILocation(line: 3282, column: 5, scope: !8058)
!8067 = !DILocation(line: 3283, column: 5, scope: !8058)
!8068 = !DILocation(line: 3285, column: 5, scope: !8058)
!8069 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !982, file: !982, line: 3332, type: !1488, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8070)
!8070 = !{!8071, !8072, !8073}
!8071 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8069, file: !982, line: 3332, type: !194)
!8072 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8069, file: !982, line: 3332, type: !194)
!8073 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8069, file: !982, line: 3332, type: !175)
!8074 = !DILocation(line: 0, scope: !8069)
!8075 = !DILocation(line: 3334, column: 5, scope: !8069)
!8076 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !982, file: !982, line: 2350, type: !1496, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8077)
!8077 = !{!8078, !8079, !8080, !8081}
!8078 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8076, file: !982, line: 2350, type: !194)
!8079 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8076, file: !982, line: 2350, type: !175)
!8080 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8076, file: !982, line: 2350, type: !194)
!8081 = !DILocalVariable(name: "D", scope: !8076, file: !982, line: 2352, type: !1152)
!8082 = !DILocation(line: 0, scope: !8076)
!8083 = !DILocation(line: 2353, column: 9, scope: !8076)
!8084 = !DILocation(line: 2354, column: 12, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !982, line: 2353, column: 51)
!8086 = distinct !DILexicalBlock(scope: !8076, file: !982, line: 2353, column: 9)
!8087 = !DILocation(line: 2354, column: 9, scope: !8085)
!8088 = !DILocation(line: 2355, column: 5, scope: !8085)
!8089 = !DILocation(line: 2356, column: 17, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !982, line: 2356, column: 13)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !982, line: 2355, column: 71)
!8092 = distinct !DILexicalBlock(scope: !8086, file: !982, line: 2355, column: 16)
!8093 = !DILocation(line: 2356, column: 14, scope: !8090)
!8094 = !DILocation(line: 2356, column: 28, scope: !8090)
!8095 = !DILocation(line: 2356, column: 49, scope: !8090)
!8096 = !DILocation(line: 2356, column: 56, scope: !8090)
!8097 = !DILocation(line: 2356, column: 70, scope: !8090)
!8098 = !DILocation(line: 2356, column: 80, scope: !8090)
!8099 = !DILocation(line: 2356, column: 13, scope: !8091)
!8100 = !DILocation(line: 2361, column: 9, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !982, line: 2361, column: 9)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !982, line: 2361, column: 9)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !982, line: 2361, column: 9)
!8104 = distinct !DILexicalBlock(scope: !8092, file: !982, line: 2359, column: 12)
!8105 = !DILocation(line: 2363, column: 5, scope: !8076)
!8106 = !DILocation(line: 2364, column: 1, scope: !8076)
!8107 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !982, file: !982, line: 3355, type: !1254, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8108)
!8108 = !{!8109, !8110, !8111}
!8109 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8107, file: !982, line: 3355, type: !194)
!8110 = !DILocalVariable(name: "D", scope: !8107, file: !982, line: 3357, type: !1152)
!8111 = !DILocalVariable(name: "status", scope: !8107, file: !982, line: 3358, type: !952)
!8112 = !DILocation(line: 0, scope: !8107)
!8113 = !DILocation(line: 3366, column: 12, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8107, file: !982, line: 3366, column: 9)
!8115 = !DILocation(line: 3366, column: 17, scope: !8114)
!8116 = !DILocation(line: 3366, column: 9, scope: !8114)
!8117 = !DILocation(line: 3366, column: 9, scope: !8107)
!8118 = !DILocation(line: 3357, column: 25, scope: !8107)
!8119 = !DILocation(line: 3367, column: 18, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8114, file: !982, line: 3366, column: 33)
!8121 = !DILocation(line: 3368, column: 25, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8120, file: !982, line: 3368, column: 13)
!8123 = !DILocation(line: 3368, column: 22, scope: !8122)
!8124 = !DILocation(line: 3368, column: 20, scope: !8122)
!8125 = !DILocation(line: 3368, column: 13, scope: !8120)
!8126 = !DILocation(line: 3373, column: 5, scope: !8107)
!8127 = !DILocation(line: 3374, column: 1, scope: !8107)
!8128 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !982, file: !982, line: 3044, type: !8129, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8131)
!8129 = !DISubroutineType(types: !8130)
!8130 = !{!858, !194, !175, !378}
!8131 = !{!8132, !8133, !8134, !8135, !8136, !8137, !8138, !8139}
!8132 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8128, file: !982, line: 3044, type: !194)
!8133 = !DILocalVariable(name: "addr", arg: 2, scope: !8128, file: !982, line: 3044, type: !175)
!8134 = !DILocalVariable(name: "data", arg: 3, scope: !8128, file: !982, line: 3044, type: !378)
!8135 = !DILocalVariable(name: "savedMask", scope: !8128, file: !982, line: 3046, type: !175)
!8136 = !DILocalVariable(name: "D", scope: !8128, file: !982, line: 3047, type: !1152)
!8137 = !DILocalVariable(name: "result", scope: !8128, file: !982, line: 3048, type: !858)
!8138 = !DILocalVariable(name: "check_data", scope: !8128, file: !982, line: 3049, type: !378)
!8139 = !DILocalVariable(name: "status_busy", scope: !8128, file: !982, line: 3050, type: !952)
!8140 = !DILocation(line: 0, scope: !8128)
!8141 = !DILocation(line: 3047, column: 43, scope: !8128)
!8142 = !DILocation(line: 3053, column: 47, scope: !8128)
!8143 = !DILocation(line: 3053, column: 52, scope: !8128)
!8144 = !DILocation(line: 3053, column: 19, scope: !8128)
!8145 = !DILocation(line: 3056, column: 9, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8128, file: !982, line: 3056, column: 9)
!8147 = !DILocation(line: 3056, column: 9, scope: !8128)
!8148 = !DILocation(line: 3058, column: 9, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !982, line: 3058, column: 9)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !982, line: 3058, column: 9)
!8151 = distinct !DILexicalBlock(scope: !8146, file: !982, line: 3056, column: 28)
!8152 = !DILocation(line: 3058, column: 9, scope: !8150)
!8153 = !DILocation(line: 3058, column: 9, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8149, file: !982, line: 3058, column: 9)
!8155 = !DILocation(line: 3060, column: 9, scope: !8151)
!8156 = !DILocation(line: 3062, column: 29, scope: !8151)
!8157 = !DILocation(line: 3063, column: 5, scope: !8151)
!8158 = !DILocation(line: 3065, column: 38, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8146, file: !982, line: 3065, column: 15)
!8160 = !DILocation(line: 3065, column: 35, scope: !8159)
!8161 = !DILocation(line: 3065, column: 33, scope: !8159)
!8162 = !DILocation(line: 3065, column: 17, scope: !8159)
!8163 = !DILocation(line: 3065, column: 15, scope: !8146)
!8164 = !DILocation(line: 3066, column: 21, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8159, file: !982, line: 3065, column: 62)
!8166 = !DILocation(line: 3068, column: 9, scope: !8165)
!8167 = !DILocation(line: 3071, column: 23, scope: !8165)
!8168 = !DILocation(line: 3071, column: 22, scope: !8165)
!8169 = !DILocation(line: 3073, column: 24, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8165, file: !982, line: 3073, column: 13)
!8171 = !DILocation(line: 3088, column: 9, scope: !8165)
!8172 = !DILocation(line: 3092, column: 13, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !982, line: 3092, column: 13)
!8174 = distinct !DILexicalBlock(scope: !8128, file: !982, line: 3091, column: 9)
!8175 = !DILocation(line: 3092, column: 33, scope: !8173)
!8176 = !DILocation(line: 3092, column: 13, scope: !8174)
!8177 = !DILocation(line: 3106, column: 5, scope: !8128)
!8178 = !DILocation(line: 3107, column: 1, scope: !8128)
!8179 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !982, file: !982, line: 3497, type: !8180, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8182)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{null, !1152, !175}
!8182 = !{!8183, !8184, !8185}
!8183 = !DILocalVariable(name: "D", arg: 1, scope: !8179, file: !982, line: 3497, type: !1152)
!8184 = !DILocalVariable(name: "addr", arg: 2, scope: !8179, file: !982, line: 3497, type: !175)
!8185 = !DILocalVariable(name: "savedMask", scope: !8179, file: !982, line: 3499, type: !175)
!8186 = !DILocation(line: 0, scope: !8179)
!8187 = !DILocation(line: 3501, column: 14, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8179, file: !982, line: 3501, column: 9)
!8189 = !DILocation(line: 3501, column: 25, scope: !8188)
!8190 = !DILocation(line: 3501, column: 9, scope: !8179)
!8191 = !DILocation(line: 3502, column: 9, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !982, line: 3501, column: 51)
!8193 = !DILocation(line: 3503, column: 5, scope: !8192)
!8194 = !DILocation(line: 3507, column: 17, scope: !8179)
!8195 = !DILocation(line: 3516, column: 5, scope: !8179)
!8196 = !DILocation(line: 3517, column: 31, scope: !8179)
!8197 = !DILocation(line: 3517, column: 38, scope: !8179)
!8198 = !DILocation(line: 3517, column: 43, scope: !8179)
!8199 = !DILocation(line: 3517, column: 59, scope: !8179)
!8200 = !DILocation(line: 3517, column: 56, scope: !8179)
!8201 = !DILocation(line: 3517, column: 5, scope: !8179)
!8202 = !DILocation(line: 3523, column: 5, scope: !8179)
!8203 = !DILocation(line: 3524, column: 1, scope: !8179)
!8204 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !982, file: !982, line: 2018, type: !7318, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8205)
!8205 = !{!8206, !8207, !8208}
!8206 = !DILocalVariable(name: "driver", arg: 1, scope: !8204, file: !982, line: 2018, type: !7320)
!8207 = !DILocalVariable(name: "D", arg: 2, scope: !8204, file: !982, line: 2018, type: !1152)
!8208 = !DILocalVariable(name: "result", scope: !8204, file: !982, line: 2020, type: !858)
!8209 = !DILocation(line: 0, scope: !8204)
!8210 = !DILocation(line: 2022, column: 13, scope: !8204)
!8211 = !DILocation(line: 2022, column: 5, scope: !8204)
!8212 = !DILocation(line: 2031, column: 16, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8204, file: !982, line: 2022, column: 31)
!8214 = !DILocation(line: 2031, column: 27, scope: !8213)
!8215 = !DILocation(line: 2033, column: 22, scope: !8213)
!8216 = !DILocation(line: 2034, column: 13, scope: !8213)
!8217 = !DILocation(line: 2049, column: 16, scope: !8213)
!8218 = !DILocation(line: 2049, column: 27, scope: !8213)
!8219 = !DILocation(line: 2051, column: 23, scope: !8213)
!8220 = !DILocation(line: 2053, column: 13, scope: !8213)
!8221 = !DILocation(line: 2058, column: 22, scope: !8213)
!8222 = !DILocation(line: 2059, column: 13, scope: !8213)
!8223 = !DILocation(line: 2079, column: 13, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !982, line: 2079, column: 13)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !982, line: 2079, column: 13)
!8226 = distinct !DILexicalBlock(scope: !8213, file: !982, line: 2079, column: 13)
!8227 = !DILocation(line: 2083, column: 5, scope: !8204)
!8228 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !982, file: !982, line: 2100, type: !8229, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8231)
!8229 = !DISubroutineType(types: !8230)
!8230 = !{!858, !7320, !1152, !175, !175}
!8231 = !{!8232, !8233, !8234, !8235, !8236}
!8232 = !DILocalVariable(name: "driver", arg: 1, scope: !8228, file: !982, line: 2100, type: !7320)
!8233 = !DILocalVariable(name: "D", arg: 2, scope: !8228, file: !982, line: 2100, type: !1152)
!8234 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8228, file: !982, line: 2100, type: !175)
!8235 = !DILocalVariable(name: "parameter", arg: 4, scope: !8228, file: !982, line: 2100, type: !175)
!8236 = !DILocalVariable(name: "result", scope: !8228, file: !982, line: 2102, type: !858)
!8237 = !DILocation(line: 0, scope: !8228)
!8238 = !DILocation(line: 2105, column: 16, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8228, file: !982, line: 2105, column: 9)
!8240 = !DILocation(line: 2105, column: 24, scope: !8239)
!8241 = !DILocation(line: 2109, column: 12, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8228, file: !982, line: 2109, column: 9)
!8243 = !DILocation(line: 2109, column: 16, scope: !8242)
!8244 = !DILocation(line: 2109, column: 24, scope: !8242)
!8245 = !DILocation(line: 2109, column: 30, scope: !8242)
!8246 = !DILocation(line: 2109, column: 40, scope: !8242)
!8247 = !DILocation(line: 2109, column: 9, scope: !8228)
!8248 = !DILocation(line: 2118, column: 19, scope: !8228)
!8249 = !DILocation(line: 2118, column: 8, scope: !8228)
!8250 = !DILocation(line: 2118, column: 17, scope: !8228)
!8251 = !DILocation(line: 2119, column: 23, scope: !8228)
!8252 = !DILocation(line: 2119, column: 8, scope: !8228)
!8253 = !DILocation(line: 2119, column: 21, scope: !8228)
!8254 = !DILocation(line: 2122, column: 5, scope: !8228)
!8255 = !DILocation(line: 2125, column: 8, scope: !8228)
!8256 = !DILocation(line: 2125, column: 13, scope: !8228)
!8257 = !DILocation(line: 2125, column: 24, scope: !8228)
!8258 = !DILocation(line: 2126, column: 26, scope: !8228)
!8259 = !DILocation(line: 2126, column: 5, scope: !8228)
!8260 = !DILocation(line: 2128, column: 9, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8228, file: !982, line: 2128, column: 9)
!8262 = !DILocation(line: 2128, column: 31, scope: !8261)
!8263 = !DILocation(line: 2128, column: 60, scope: !8261)
!8264 = !DILocation(line: 2128, column: 9, scope: !8228)
!8265 = !DILocation(line: 2129, column: 12, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8261, file: !982, line: 2128, column: 110)
!8267 = !DILocation(line: 2129, column: 17, scope: !8266)
!8268 = !DILocation(line: 2129, column: 28, scope: !8266)
!8269 = !DILocation(line: 2130, column: 9, scope: !8266)
!8270 = !DILocation(line: 2131, column: 5, scope: !8266)
!8271 = !DILocation(line: 2134, column: 14, scope: !8228)
!8272 = !DILocation(line: 2136, column: 5, scope: !8228)
!8273 = !DILocation(line: 2137, column: 1, scope: !8228)
!8274 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !982, file: !982, line: 3387, type: !8275, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8277)
!8275 = !DISubroutineType(types: !8276)
!8276 = !{null, !1152, !680}
!8277 = !{!8278, !8279, !8280}
!8278 = !DILocalVariable(name: "D", arg: 1, scope: !8274, file: !982, line: 3387, type: !1152)
!8279 = !DILocalVariable(name: "id", arg: 2, scope: !8274, file: !982, line: 3387, type: !680)
!8280 = !DILocalVariable(name: "cmd", scope: !8274, file: !982, line: 3389, type: !378)
!8281 = !DILocation(line: 0, scope: !8274)
!8282 = !DILocation(line: 3389, column: 5, scope: !8274)
!8283 = !DILocation(line: 3405, column: 9, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8274, file: !982, line: 3405, column: 9)
!8285 = !DILocation(line: 3405, column: 21, scope: !8284)
!8286 = !DILocation(line: 0, scope: !8284)
!8287 = !DILocation(line: 3405, column: 9, scope: !8274)
!8288 = !DILocation(line: 3411, column: 31, scope: !8274)
!8289 = !DILocation(line: 3411, column: 5, scope: !8274)
!8290 = !DILocation(line: 3412, column: 1, scope: !8274)
!8291 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !982, file: !982, line: 3585, type: !8292, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8294)
!8292 = !DISubroutineType(types: !8293)
!8293 = !{null, !6087, !680, !680, !6087, !6087}
!8294 = !{!8295, !8296, !8297, !8298, !8299, !8300}
!8295 = !DILocalVariable(name: "CS", arg: 1, scope: !8291, file: !982, line: 3585, type: !6087)
!8296 = !DILocalVariable(name: "cmd", arg: 2, scope: !8291, file: !982, line: 3585, type: !680)
!8297 = !DILocalVariable(name: "data", arg: 3, scope: !8291, file: !982, line: 3585, type: !680)
!8298 = !DILocalVariable(name: "outl", arg: 4, scope: !8291, file: !982, line: 3585, type: !6087)
!8299 = !DILocalVariable(name: "inl", arg: 5, scope: !8291, file: !982, line: 3585, type: !6087)
!8300 = !DILocalVariable(name: "savedMask", scope: !8291, file: !982, line: 3587, type: !175)
!8301 = !DILocation(line: 0, scope: !8291)
!8302 = !DILocation(line: 3589, column: 17, scope: !8291)
!8303 = !DILocation(line: 3590, column: 5, scope: !8291)
!8304 = !DILocation(line: 3591, column: 5, scope: !8291)
!8305 = !DILocation(line: 3593, column: 1, scope: !8291)
!8306 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1307, file: !1307, line: 110, type: !6565, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8307)
!8307 = !{!8308, !8309, !8310, !8311}
!8308 = !DILocalVariable(name: "id", arg: 1, scope: !8306, file: !1307, line: 110, type: !680)
!8309 = !DILocalVariable(name: "i", scope: !8306, file: !1307, line: 114, type: !858)
!8310 = !DILocalVariable(name: "j", scope: !8306, file: !1307, line: 114, type: !858)
!8311 = !DILocalVariable(name: "id_list", scope: !8306, file: !1307, line: 115, type: !8312)
!8312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8313, size: 32)
!8313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!8314 = !DILocation(line: 0, scope: !8306)
!8315 = !DILocation(line: 119, column: 5, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8306, file: !1307, line: 119, column: 5)
!8317 = !DILocation(line: 119, column: 46, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8316, file: !1307, line: 119, column: 5)
!8319 = !DILocation(line: 119, column: 19, scope: !8318)
!8320 = distinct !{!8320, !8315, !8321}
!8321 = !DILocation(line: 131, column: 5, scope: !8316)
!8322 = !DILocation(line: 121, column: 23, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !1307, line: 121, column: 9)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !1307, line: 121, column: 9)
!8325 = distinct !DILexicalBlock(scope: !8318, file: !1307, line: 119, column: 50)
!8326 = !DILocation(line: 121, column: 9, scope: !8324)
!8327 = !DILocation(line: 122, column: 17, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !1307, line: 122, column: 17)
!8329 = distinct !DILexicalBlock(scope: !8323, file: !1307, line: 121, column: 51)
!8330 = !DILocation(line: 122, column: 37, scope: !8328)
!8331 = !DILocation(line: 122, column: 34, scope: !8328)
!8332 = !DILocation(line: 122, column: 17, scope: !8329)
!8333 = !DILocation(line: 121, column: 47, scope: !8323)
!8334 = distinct !{!8334, !8326, !8335}
!8335 = !DILocation(line: 125, column: 9, scope: !8324)
!8336 = !DILocation(line: 0, scope: !8324)
!8337 = !DILocation(line: 127, column: 15, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8325, file: !1307, line: 127, column: 13)
!8339 = !DILocation(line: 127, column: 13, scope: !8325)
!8340 = !DILocation(line: 134, column: 1, scope: !8306)
!8341 = distinct !DISubprogram(name: "CMEM_Index", scope: !1307, file: !1307, line: 153, type: !6720, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8342)
!8342 = !{!8343, !8344, !8345, !8352}
!8343 = !DILocalVariable(name: "i", scope: !8341, file: !1307, line: 156, type: !858)
!8344 = !DILocalVariable(name: "j", scope: !8341, file: !1307, line: 156, type: !858)
!8345 = !DILocalVariable(name: "id", scope: !8341, file: !1307, line: 157, type: !8346)
!8346 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1378, line: 89, baseType: !8347)
!8347 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1378, line: 86, size: 64, elements: !8348)
!8348 = !{!8349, !8350}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !8347, file: !1378, line: 87, baseType: !1391, size: 64)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !8347, file: !1378, line: 88, baseType: !8351, size: 64)
!8351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 64, elements: !381)
!8352 = !DILocalVariable(name: "id_list", scope: !8341, file: !1307, line: 158, type: !8312)
!8353 = !DILocation(line: 157, column: 5, scope: !8341)
!8354 = !DILocation(line: 157, column: 17, scope: !8341)
!8355 = !DILocation(line: 0, scope: !8341)
!8356 = !DILocation(line: 161, column: 9, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8341, file: !1307, line: 161, column: 9)
!8358 = !DILocation(line: 161, column: 20, scope: !8357)
!8359 = !DILocation(line: 161, column: 9, scope: !8341)
!8360 = !DILocation(line: 172, column: 58, scope: !8341)
!8361 = !DILocation(line: 172, column: 5, scope: !8341)
!8362 = !DILocation(line: 178, column: 5, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8341, file: !1307, line: 178, column: 5)
!8364 = !DILocation(line: 180, column: 23, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !1307, line: 180, column: 9)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !1307, line: 180, column: 9)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !1307, line: 178, column: 53)
!8368 = distinct !DILexicalBlock(scope: !8363, file: !1307, line: 178, column: 5)
!8369 = !DILocation(line: 180, column: 9, scope: !8366)
!8370 = !DILocation(line: 181, column: 17, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !1307, line: 181, column: 17)
!8372 = distinct !DILexicalBlock(scope: !8365, file: !1307, line: 180, column: 51)
!8373 = !DILocation(line: 181, column: 37, scope: !8371)
!8374 = !DILocation(line: 181, column: 34, scope: !8371)
!8375 = !DILocation(line: 181, column: 17, scope: !8372)
!8376 = !DILocation(line: 180, column: 47, scope: !8365)
!8377 = distinct !{!8377, !8369, !8378}
!8378 = !DILocation(line: 184, column: 9, scope: !8366)
!8379 = !DILocation(line: 0, scope: !8366)
!8380 = !DILocation(line: 186, column: 15, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8367, file: !1307, line: 186, column: 13)
!8382 = !DILocation(line: 186, column: 13, scope: !8367)
!8383 = !DILocation(line: 188, column: 26, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !1307, line: 186, column: 41)
!8385 = !DILocation(line: 188, column: 24, scope: !8384)
!8386 = !DILocation(line: 189, column: 13, scope: !8384)
!8387 = !DILocation(line: 178, column: 46, scope: !8368)
!8388 = !DILocation(line: 178, column: 19, scope: !8368)
!8389 = distinct !{!8389, !8362, !8390}
!8390 = !DILocation(line: 191, column: 5, scope: !8363)
!8391 = !DILocation(line: 222, column: 12, scope: !8341)
!8392 = !DILocation(line: 223, column: 1, scope: !8341)
!8393 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1307, file: !1307, line: 240, type: !8394, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8396)
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!8312, !175}
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "index", arg: 1, scope: !8393, file: !1307, line: 240, type: !175)
!8398 = !DILocation(line: 0, scope: !8393)
!8399 = !DILocation(line: 242, column: 13, scope: !8393)
!8400 = !DILocation(line: 242, column: 5, scope: !8393)
!8401 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1307, file: !1307, line: 254, type: !8402, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8404)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{null, !6087, !194, !951}
!8404 = !{!8405, !8406, !8407, !8408, !8410, !8411}
!8405 = !DILocalVariable(name: "CS", arg: 1, scope: !8401, file: !1307, line: 254, type: !6087)
!8406 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8401, file: !1307, line: 254, type: !194)
!8407 = !DILocalVariable(name: "flashid", arg: 3, scope: !8401, file: !1307, line: 254, type: !951)
!8408 = !DILocalVariable(name: "cmd", scope: !8409, file: !1307, line: 258, type: !378)
!8409 = distinct !DILexicalBlock(scope: !8401, file: !1307, line: 257, column: 5)
!8410 = !DILocalVariable(name: "id", scope: !8409, file: !1307, line: 258, type: !1242)
!8411 = !DILocalVariable(name: "i", scope: !8409, file: !1307, line: 258, type: !378)
!8412 = !DILocation(line: 0, scope: !8401)
!8413 = !DILocation(line: 258, column: 9, scope: !8409)
!8414 = !DILocation(line: 258, column: 22, scope: !8409)
!8415 = !DILocation(line: 0, scope: !8409)
!8416 = !DILocation(line: 260, column: 13, scope: !8409)
!8417 = !DILocation(line: 261, column: 9, scope: !8409)
!8418 = !DILocation(line: 263, column: 13, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8409, file: !1307, line: 263, column: 13)
!8420 = !DILocation(line: 263, column: 27, scope: !8419)
!8421 = !DILocation(line: 263, column: 48, scope: !8419)
!8422 = !DILocation(line: 263, column: 13, scope: !8409)
!8423 = !DILocation(line: 264, column: 17, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8419, file: !1307, line: 263, column: 95)
!8425 = !DILocation(line: 265, column: 13, scope: !8424)
!8426 = !DILocation(line: 266, column: 9, scope: !8424)
!8427 = !DILocation(line: 268, column: 9, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8409, file: !1307, line: 268, column: 9)
!8429 = !DILocation(line: 269, column: 26, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !1307, line: 268, column: 50)
!8431 = distinct !DILexicalBlock(scope: !8428, file: !1307, line: 268, column: 9)
!8432 = !DILocation(line: 269, column: 13, scope: !8430)
!8433 = !DILocation(line: 269, column: 24, scope: !8430)
!8434 = !DILocation(line: 268, column: 46, scope: !8431)
!8435 = !DILocation(line: 268, column: 23, scope: !8431)
!8436 = distinct !{!8436, !8427, !8437}
!8437 = !DILocation(line: 270, column: 9, scope: !8428)
!8438 = !DILocation(line: 271, column: 5, scope: !8401)
!8439 = !DILocation(line: 272, column: 5, scope: !8401)
!8440 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1307, file: !1307, line: 285, type: !6565, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8441)
!8441 = !{!8442, !8443, !8444, !8445}
!8442 = !DILocalVariable(name: "id", arg: 1, scope: !8440, file: !1307, line: 285, type: !680)
!8443 = !DILocalVariable(name: "i", scope: !8440, file: !1307, line: 289, type: !858)
!8444 = !DILocalVariable(name: "j", scope: !8440, file: !1307, line: 289, type: !858)
!8445 = !DILocalVariable(name: "id_list", scope: !8440, file: !1307, line: 290, type: !8312)
!8446 = !DILocation(line: 0, scope: !8440)
!8447 = !DILocation(line: 294, column: 5, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8440, file: !1307, line: 294, column: 5)
!8449 = !DILocation(line: 294, column: 46, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8448, file: !1307, line: 294, column: 5)
!8451 = !DILocation(line: 294, column: 19, scope: !8450)
!8452 = distinct !{!8452, !8447, !8453}
!8453 = !DILocation(line: 306, column: 5, scope: !8448)
!8454 = !DILocation(line: 296, column: 23, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !1307, line: 296, column: 9)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !1307, line: 296, column: 9)
!8457 = distinct !DILexicalBlock(scope: !8450, file: !1307, line: 294, column: 53)
!8458 = !DILocation(line: 296, column: 9, scope: !8456)
!8459 = !DILocation(line: 297, column: 17, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !1307, line: 297, column: 17)
!8461 = distinct !DILexicalBlock(scope: !8455, file: !1307, line: 296, column: 51)
!8462 = !DILocation(line: 297, column: 37, scope: !8460)
!8463 = !DILocation(line: 297, column: 34, scope: !8460)
!8464 = !DILocation(line: 297, column: 17, scope: !8461)
!8465 = !DILocation(line: 296, column: 47, scope: !8455)
!8466 = distinct !{!8466, !8458, !8467}
!8467 = !DILocation(line: 300, column: 9, scope: !8456)
!8468 = !DILocation(line: 0, scope: !8456)
!8469 = !DILocation(line: 302, column: 15, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8457, file: !1307, line: 302, column: 13)
!8471 = !DILocation(line: 302, column: 13, scope: !8457)
!8472 = !DILocation(line: 310, column: 1, scope: !8440)
!8473 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1307, file: !1307, line: 328, type: !6720, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8474)
!8474 = !{!8475, !8476, !8477, !8478}
!8475 = !DILocalVariable(name: "i", scope: !8473, file: !1307, line: 331, type: !858)
!8476 = !DILocalVariable(name: "j", scope: !8473, file: !1307, line: 331, type: !858)
!8477 = !DILocalVariable(name: "id", scope: !8473, file: !1307, line: 332, type: !8346)
!8478 = !DILocalVariable(name: "id_list", scope: !8473, file: !1307, line: 333, type: !8312)
!8479 = !DILocation(line: 332, column: 5, scope: !8473)
!8480 = !DILocation(line: 332, column: 17, scope: !8473)
!8481 = !DILocation(line: 0, scope: !8473)
!8482 = !DILocation(line: 336, column: 9, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8473, file: !1307, line: 336, column: 9)
!8484 = !DILocation(line: 336, column: 28, scope: !8483)
!8485 = !DILocation(line: 336, column: 9, scope: !8473)
!8486 = !DILocation(line: 344, column: 60, scope: !8473)
!8487 = !DILocation(line: 344, column: 5, scope: !8473)
!8488 = !DILocation(line: 350, column: 5, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8473, file: !1307, line: 350, column: 5)
!8490 = !DILocation(line: 352, column: 23, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !1307, line: 352, column: 9)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !1307, line: 352, column: 9)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !1307, line: 350, column: 53)
!8494 = distinct !DILexicalBlock(scope: !8489, file: !1307, line: 350, column: 5)
!8495 = !DILocation(line: 352, column: 9, scope: !8492)
!8496 = !DILocation(line: 353, column: 17, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !1307, line: 353, column: 17)
!8498 = distinct !DILexicalBlock(scope: !8491, file: !1307, line: 352, column: 51)
!8499 = !DILocation(line: 353, column: 37, scope: !8497)
!8500 = !DILocation(line: 353, column: 34, scope: !8497)
!8501 = !DILocation(line: 353, column: 17, scope: !8498)
!8502 = !DILocation(line: 352, column: 47, scope: !8491)
!8503 = distinct !{!8503, !8495, !8504}
!8504 = !DILocation(line: 356, column: 9, scope: !8492)
!8505 = !DILocation(line: 0, scope: !8492)
!8506 = !DILocation(line: 358, column: 15, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8493, file: !1307, line: 358, column: 13)
!8508 = !DILocation(line: 358, column: 13, scope: !8493)
!8509 = !DILocation(line: 360, column: 34, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8507, file: !1307, line: 358, column: 41)
!8511 = !DILocation(line: 360, column: 32, scope: !8510)
!8512 = !DILocation(line: 361, column: 13, scope: !8510)
!8513 = !DILocation(line: 350, column: 46, scope: !8494)
!8514 = !DILocation(line: 350, column: 19, scope: !8494)
!8515 = distinct !{!8515, !8488, !8516}
!8516 = !DILocation(line: 363, column: 5, scope: !8489)
!8517 = !DILocation(line: 364, column: 12, scope: !8473)
!8518 = !DILocation(line: 365, column: 1, scope: !8473)
!8519 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2505, file: !2505, line: 64, type: !8520, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !8526)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{null, !6087, !8522, !951}
!8522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8523, size: 32)
!8523 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8524)
!8524 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !8525, line: 158, baseType: !952)
!8525 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!8526 = !{!8527, !8528, !8529, !8530, !8531, !8533, !8534}
!8527 = !DILocalVariable(name: "CS", arg: 1, scope: !8519, file: !2505, line: 64, type: !6087)
!8528 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8519, file: !2505, line: 64, type: !8522)
!8529 = !DILocalVariable(name: "flashid", arg: 3, scope: !8519, file: !2505, line: 64, type: !951)
!8530 = !DILocalVariable(name: "savedMask", scope: !8519, file: !2505, line: 66, type: !175)
!8531 = !DILocalVariable(name: "cmd", scope: !8532, file: !2505, line: 70, type: !378)
!8532 = distinct !DILexicalBlock(scope: !8519, file: !2505, line: 69, column: 5)
!8533 = !DILocalVariable(name: "id", scope: !8532, file: !2505, line: 70, type: !1242)
!8534 = !DILocalVariable(name: "i", scope: !8532, file: !2505, line: 70, type: !378)
!8535 = !DILocation(line: 0, scope: !8519)
!8536 = !DILocation(line: 70, column: 9, scope: !8532)
!8537 = !DILocation(line: 70, column: 22, scope: !8532)
!8538 = !DILocation(line: 0, scope: !8532)
!8539 = !DILocation(line: 72, column: 13, scope: !8532)
!8540 = !DILocation(line: 73, column: 21, scope: !8532)
!8541 = !DILocation(line: 74, column: 9, scope: !8532)
!8542 = !DILocation(line: 75, column: 9, scope: !8532)
!8543 = !DILocation(line: 77, column: 13, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8532, file: !2505, line: 77, column: 13)
!8545 = !DILocation(line: 77, column: 27, scope: !8544)
!8546 = !DILocation(line: 77, column: 48, scope: !8544)
!8547 = !DILocation(line: 77, column: 13, scope: !8532)
!8548 = !DILocation(line: 78, column: 17, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8544, file: !2505, line: 77, column: 87)
!8550 = !DILocation(line: 79, column: 25, scope: !8549)
!8551 = !DILocation(line: 80, column: 13, scope: !8549)
!8552 = !DILocation(line: 81, column: 13, scope: !8549)
!8553 = !DILocation(line: 82, column: 9, scope: !8549)
!8554 = !DILocation(line: 84, column: 9, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8532, file: !2505, line: 84, column: 9)
!8556 = !DILocation(line: 85, column: 26, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !2505, line: 84, column: 50)
!8558 = distinct !DILexicalBlock(scope: !8555, file: !2505, line: 84, column: 9)
!8559 = !DILocation(line: 85, column: 13, scope: !8557)
!8560 = !DILocation(line: 85, column: 24, scope: !8557)
!8561 = !DILocation(line: 84, column: 46, scope: !8558)
!8562 = !DILocation(line: 84, column: 23, scope: !8558)
!8563 = distinct !{!8563, !8554, !8564}
!8564 = !DILocation(line: 86, column: 9, scope: !8555)
!8565 = !DILocation(line: 87, column: 5, scope: !8519)
!8566 = !DILocation(line: 89, column: 1, scope: !8519)
!8567 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1395, file: !1395, line: 248, type: !3355, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8568 = !DILocation(line: 250, column: 5, scope: !8567)
!8569 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1395, file: !1395, line: 270, type: !3355, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8570 = !DILocation(line: 272, column: 5, scope: !8569)
!8571 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1395, file: !1395, line: 294, type: !208, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8572 = !DILocation(line: 296, column: 5, scope: !8571)
!8573 = !DILocation(line: 297, column: 5, scope: !8571)
!8574 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1395, file: !1395, line: 304, type: !208, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8575 = !DILocation(line: 309, column: 5, scope: !8574)
!8576 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1395, file: !1395, line: 312, type: !208, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8577 = !DILocation(line: 317, column: 5, scope: !8576)
!8578 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1395, file: !1395, line: 334, type: !3355, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8579 = !DILocation(line: 336, column: 5, scope: !8578)
!8580 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1395, file: !1395, line: 353, type: !3355, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8581 = !DILocation(line: 355, column: 5, scope: !8580)
!8582 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1395, file: !1395, line: 374, type: !208, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8583 = !DILocation(line: 376, column: 5, scope: !8582)
!8584 = !DILocation(line: 377, column: 1, scope: !8582)
!8585 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1395, file: !1395, line: 395, type: !3355, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8586 = !DILocation(line: 397, column: 5, scope: !8585)
!8587 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1395, file: !1395, line: 416, type: !3355, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8588 = !DILocation(line: 418, column: 5, scope: !8587)
!8589 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1406, file: !1406, line: 254, type: !3355, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8590 = !DILocation(line: 256, column: 32, scope: !8589)
!8591 = !DILocation(line: 257, column: 5, scope: !8589)
!8592 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1406, file: !1406, line: 269, type: !6720, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8593 = !DILocation(line: 275, column: 24, scope: !8592)
!8594 = !DILocation(line: 278, column: 24, scope: !8592)
!8595 = !DILocation(line: 278, column: 33, scope: !8592)
!8596 = !DILocation(line: 278, column: 49, scope: !8592)
!8597 = !DILocation(line: 278, column: 22, scope: !8592)
!8598 = !DILocation(line: 281, column: 5, scope: !8592)
!8599 = !DILocation(line: 283, column: 34, scope: !8592)
!8600 = !DILocation(line: 283, column: 23, scope: !8592)
!8601 = !DILocation(line: 286, column: 25, scope: !8592)
!8602 = !DILocation(line: 321, column: 5, scope: !8592)
!8603 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1406, file: !1406, line: 332, type: !6720, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8604)
!8604 = !{!8605}
!8605 = !DILocalVariable(name: "result", scope: !8603, file: !1406, line: 334, type: !858)
!8606 = !DILocation(line: 340, column: 30, scope: !8603)
!8607 = !DILocation(line: 343, column: 24, scope: !8603)
!8608 = !DILocation(line: 344, column: 18, scope: !8603)
!8609 = !DILocation(line: 348, column: 17, scope: !8603)
!8610 = !DILocation(line: 353, column: 19, scope: !8603)
!8611 = !DILocation(line: 354, column: 18, scope: !8603)
!8612 = !DILocation(line: 354, column: 27, scope: !8603)
!8613 = !DILocation(line: 354, column: 43, scope: !8603)
!8614 = !DILocation(line: 350, column: 14, scope: !8603)
!8615 = !DILocation(line: 0, scope: !8603)
!8616 = !DILocation(line: 356, column: 16, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8603, file: !1406, line: 356, column: 9)
!8618 = !DILocation(line: 395, column: 1, scope: !8603)
!8619 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1406, file: !1406, line: 406, type: !8620, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8620 = !DISubroutineType(types: !2457)
!8621 = !DILocation(line: 408, column: 5, scope: !8619)
!8622 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1406, file: !1406, line: 420, type: !8623, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8625)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{!175, !378}
!8625 = !{!8626, !8627, !8628}
!8626 = !DILocalVariable(name: "CS", arg: 1, scope: !8622, file: !1406, line: 420, type: !378)
!8627 = !DILocalVariable(name: "index", scope: !8622, file: !1406, line: 422, type: !175)
!8628 = !DILocalVariable(name: "list", scope: !8622, file: !1406, line: 423, type: !1723)
!8629 = !DILocation(line: 0, scope: !8622)
!8630 = !DILocation(line: 427, column: 13, scope: !8622)
!8631 = !DILocation(line: 430, column: 34, scope: !8622)
!8632 = !DILocation(line: 430, column: 5, scope: !8622)
!8633 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1406, file: !1406, line: 442, type: !8634, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8636)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{!175, !175, !1595}
!8636 = !{!8637, !8638, !8639}
!8637 = !DILocalVariable(name: "address", arg: 1, scope: !8633, file: !1406, line: 442, type: !175)
!8638 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !8633, file: !1406, line: 442, type: !1595)
!8639 = !DILocalVariable(name: "i", scope: !8633, file: !1406, line: 444, type: !952)
!8640 = !DILocation(line: 0, scope: !8633)
!8641 = !DILocation(line: 446, column: 23, scope: !8633)
!8642 = !DILocation(line: 448, column: 36, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !1406, line: 448, column: 5)
!8644 = distinct !DILexicalBlock(scope: !8633, file: !1406, line: 448, column: 5)
!8645 = !DILocation(line: 448, column: 41, scope: !8643)
!8646 = !DILocation(line: 448, column: 5, scope: !8644)
!8647 = !DILocation(line: 449, column: 39, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !1406, line: 449, column: 13)
!8649 = distinct !DILexicalBlock(scope: !8643, file: !1406, line: 448, column: 54)
!8650 = !DILocation(line: 449, column: 21, scope: !8648)
!8651 = !DILocation(line: 449, column: 46, scope: !8648)
!8652 = !DILocation(line: 450, column: 46, scope: !8648)
!8653 = !DILocation(line: 450, column: 25, scope: !8648)
!8654 = !DILocation(line: 449, column: 13, scope: !8649)
!8655 = !DILocation(line: 448, column: 48, scope: !8643)
!8656 = !DILocation(line: 448, column: 29, scope: !8643)
!8657 = !DILocation(line: 448, column: 31, scope: !8643)
!8658 = distinct !{!8658, !8646, !8659}
!8659 = !DILocation(line: 453, column: 5, scope: !8644)
!8660 = !DILocation(line: 454, column: 27, scope: !8633)
!8661 = !DILocation(line: 454, column: 5, scope: !8633)
!8662 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1406, file: !1406, line: 462, type: !3103, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8663)
!8663 = !{!8664}
!8664 = !DILocalVariable(name: "address", arg: 1, scope: !8662, file: !1406, line: 462, type: !175)
!8665 = !DILocation(line: 0, scope: !8662)
!8666 = !DILocation(line: 464, column: 45, scope: !8662)
!8667 = !DILocation(line: 464, column: 12, scope: !8662)
!8668 = !DILocation(line: 464, column: 5, scope: !8662)
!8669 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1406, file: !1406, line: 487, type: !3103, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8670)
!8670 = !{!8671, !8672, !8673}
!8671 = !DILocalVariable(name: "address", arg: 1, scope: !8669, file: !1406, line: 487, type: !175)
!8672 = !DILocalVariable(name: "index", scope: !8669, file: !1406, line: 490, type: !175)
!8673 = !DILocalVariable(name: "list", scope: !8669, file: !1406, line: 491, type: !1723)
!8674 = !DILocation(line: 0, scope: !8669)
!8675 = !DILocation(line: 490, column: 22, scope: !8669)
!8676 = !DILocation(line: 495, column: 45, scope: !8669)
!8677 = !DILocation(line: 495, column: 12, scope: !8669)
!8678 = !DILocation(line: 495, column: 5, scope: !8669)
!8679 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1406, file: !1406, line: 517, type: !8680, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8684)
!8680 = !DISubroutineType(types: !8681)
!8681 = !{!858, !8682}
!8682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8683, size: 32)
!8683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1609)
!8684 = !{!8685, !8686, !8687}
!8685 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !8679, file: !1406, line: 517, type: !8682)
!8686 = !DILocalVariable(name: "result", scope: !8679, file: !1406, line: 519, type: !175)
!8687 = !DILocalVariable(name: "i", scope: !8679, file: !1406, line: 519, type: !175)
!8688 = !DILocation(line: 0, scope: !8679)
!8689 = !DILocation(line: 522, column: 29, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !1406, line: 522, column: 5)
!8691 = distinct !DILexicalBlock(scope: !8679, file: !1406, line: 522, column: 5)
!8692 = !DILocation(line: 522, column: 38, scope: !8690)
!8693 = !DILocation(line: 522, column: 5, scope: !8691)
!8694 = !DILocation(line: 523, column: 31, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8690, file: !1406, line: 522, column: 51)
!8696 = !DILocation(line: 523, column: 37, scope: !8695)
!8697 = !DILocation(line: 523, column: 16, scope: !8695)
!8698 = !DILocation(line: 522, column: 45, scope: !8690)
!8699 = distinct !{!8699, !8693, !8700}
!8700 = !DILocation(line: 524, column: 5, scope: !8691)
!8701 = !DILocation(line: 525, column: 5, scope: !8679)
!8702 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1406, file: !1406, line: 535, type: !8703, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8705)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{!175, !175, !175, !1421, !1595}
!8705 = !{!8706, !8707, !8708, !8709, !8710, !8711, !8712, !8713, !8714}
!8706 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8702, file: !1406, line: 536, type: !175)
!8707 = !DILocalVariable(name: "length", arg: 2, scope: !8702, file: !1406, line: 537, type: !175)
!8708 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8702, file: !1406, line: 538, type: !1421)
!8709 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !8702, file: !1406, line: 539, type: !1595)
!8710 = !DILocalVariable(name: "addr", scope: !8702, file: !1406, line: 541, type: !175)
!8711 = !DILocalVariable(name: "ptr", scope: !8702, file: !1406, line: 541, type: !175)
!8712 = !DILocalVariable(name: "blksize", scope: !8702, file: !1406, line: 541, type: !175)
!8713 = !DILocalVariable(name: "total_blocks", scope: !8702, file: !1406, line: 541, type: !175)
!8714 = !DILocalVariable(name: "endaddr", scope: !8702, file: !1406, line: 542, type: !175)
!8715 = !DILocation(line: 0, scope: !8702)
!8716 = !DILocation(line: 542, column: 33, scope: !8702)
!8717 = !DILocation(line: 557, column: 59, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !1406, line: 557, column: 5)
!8719 = distinct !DILexicalBlock(scope: !8702, file: !1406, line: 557, column: 5)
!8720 = !DILocation(line: 557, column: 5, scope: !8719)
!8721 = !DILocation(line: 560, column: 19, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !1406, line: 559, column: 5)
!8723 = !DILocation(line: 562, column: 26, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8722, file: !1406, line: 562, column: 13)
!8725 = !DILocation(line: 0, scope: !8724)
!8726 = !DILocation(line: 562, column: 13, scope: !8722)
!8727 = !DILocation(line: 563, column: 39, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8724, file: !1406, line: 562, column: 34)
!8729 = !DILocation(line: 564, column: 29, scope: !8728)
!8730 = !DILocation(line: 564, column: 42, scope: !8728)
!8731 = !DILocation(line: 565, column: 9, scope: !8728)
!8732 = !DILocation(line: 567, column: 45, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8724, file: !1406, line: 567, column: 18)
!8734 = !DILocation(line: 567, column: 26, scope: !8733)
!8735 = !DILocation(line: 567, column: 18, scope: !8724)
!8736 = !DILocation(line: 568, column: 29, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8733, file: !1406, line: 567, column: 59)
!8738 = !DILocation(line: 568, column: 41, scope: !8737)
!8739 = !DILocation(line: 569, column: 9, scope: !8737)
!8740 = !DILocation(line: 572, column: 16, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8733, file: !1406, line: 571, column: 14)
!8742 = !DILocation(line: 573, column: 21, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8741, file: !1406, line: 573, column: 17)
!8744 = !DILocation(line: 573, column: 17, scope: !8741)
!8745 = !DILocation(line: 576, column: 29, scope: !8741)
!8746 = !DILocation(line: 576, column: 39, scope: !8741)
!8747 = !DILocation(line: 577, column: 29, scope: !8741)
!8748 = !DILocation(line: 577, column: 42, scope: !8741)
!8749 = !DILocation(line: 0, scope: !8719)
!8750 = !DILocation(line: 579, column: 14, scope: !8722)
!8751 = !DILocation(line: 580, column: 21, scope: !8722)
!8752 = distinct !{!8752, !8720, !8753}
!8753 = !DILocation(line: 581, column: 5, scope: !8719)
!8754 = !DILocation(line: 586, column: 1, scope: !8702)
!8755 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1406, file: !1406, line: 593, type: !8756, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8758)
!8756 = !DISubroutineType(types: !8757)
!8757 = !{!858, !175, !175, !1421}
!8758 = !{!8759, !8760, !8761}
!8759 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8755, file: !1406, line: 593, type: !175)
!8760 = !DILocalVariable(name: "length", arg: 2, scope: !8755, file: !1406, line: 593, type: !175)
!8761 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8755, file: !1406, line: 593, type: !1421)
!8762 = !DILocation(line: 0, scope: !8755)
!8763 = !DILocation(line: 595, column: 12, scope: !8755)
!8764 = !DILocation(line: 595, column: 5, scope: !8755)
!8765 = !DILocation(line: 597, column: 81, scope: !8755)
!8766 = !DILocation(line: 597, column: 12, scope: !8755)
!8767 = !DILocation(line: 597, column: 5, scope: !8755)
!8768 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1406, file: !1406, line: 606, type: !8756, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8769)
!8769 = !{!8770, !8771, !8772}
!8770 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8768, file: !1406, line: 606, type: !175)
!8771 = !DILocalVariable(name: "length", arg: 2, scope: !8768, file: !1406, line: 606, type: !175)
!8772 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8768, file: !1406, line: 606, type: !1421)
!8773 = !DILocation(line: 0, scope: !8768)
!8774 = !DILocation(line: 624, column: 5, scope: !8768)
!8775 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1406, file: !1406, line: 637, type: !8756, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8776)
!8776 = !{!8777, !8778, !8779, !8780, !8781}
!8777 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8775, file: !1406, line: 637, type: !175)
!8778 = !DILocalVariable(name: "length", arg: 2, scope: !8775, file: !1406, line: 637, type: !175)
!8779 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8775, file: !1406, line: 637, type: !1421)
!8780 = !DILocalVariable(name: "index", scope: !8775, file: !1406, line: 642, type: !175)
!8781 = !DILocalVariable(name: "list", scope: !8775, file: !1406, line: 644, type: !1723)
!8782 = !DILocation(line: 0, scope: !8775)
!8783 = !DILocation(line: 642, column: 22, scope: !8775)
!8784 = !DILocation(line: 648, column: 81, scope: !8775)
!8785 = !DILocation(line: 648, column: 12, scope: !8775)
!8786 = !DILocation(line: 648, column: 5, scope: !8775)
!8787 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1406, file: !1406, line: 658, type: !8756, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8788)
!8788 = !{!8789, !8790, !8791}
!8789 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8787, file: !1406, line: 658, type: !175)
!8790 = !DILocalVariable(name: "length", arg: 2, scope: !8787, file: !1406, line: 658, type: !175)
!8791 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8787, file: !1406, line: 658, type: !1421)
!8792 = !DILocation(line: 0, scope: !8787)
!8793 = !DILocation(line: 688, column: 5, scope: !8787)
!8794 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1406, file: !1406, line: 700, type: !6154, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8795)
!8795 = !{!8796, !8797, !8798}
!8796 = !DILocalVariable(name: "CS", arg: 1, scope: !8794, file: !1406, line: 700, type: !6087)
!8797 = !DILocalVariable(name: "index", scope: !8794, file: !1406, line: 705, type: !175)
!8798 = !DILocalVariable(name: "list", scope: !8794, file: !1406, line: 707, type: !1723)
!8799 = !DILocation(line: 0, scope: !8794)
!8800 = !DILocation(line: 705, column: 22, scope: !8794)
!8801 = !DILocation(line: 711, column: 24, scope: !8794)
!8802 = !DILocation(line: 711, column: 5, scope: !8794)
!8803 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1406, file: !1406, line: 721, type: !8804, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8806)
!8804 = !DISubroutineType(types: !8805)
!8805 = !{null, !1641, !920, !175}
!8806 = !{!8807, !8808, !8809}
!8807 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !8803, file: !1406, line: 721, type: !1641)
!8808 = !DILocalVariable(name: "index", arg: 2, scope: !8803, file: !1406, line: 721, type: !920)
!8809 = !DILocalVariable(name: "bankSize", arg: 3, scope: !8803, file: !1406, line: 721, type: !175)
!8810 = !DILocation(line: 0, scope: !8803)
!8811 = !DILocation(line: 723, column: 18, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8803, file: !1406, line: 723, column: 9)
!8813 = !DILocation(line: 723, column: 26, scope: !8812)
!8814 = !DILocation(line: 723, column: 35, scope: !8812)
!8815 = !DILocation(line: 723, column: 9, scope: !8803)
!8816 = !DILocation(line: 724, column: 26, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8812, file: !1406, line: 723, column: 48)
!8818 = !DILocation(line: 724, column: 32, scope: !8817)
!8819 = !DILocation(line: 725, column: 5, scope: !8817)
!8820 = !DILocation(line: 726, column: 18, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8812, file: !1406, line: 725, column: 12)
!8822 = !DILocation(line: 727, column: 26, scope: !8821)
!8823 = !DILocation(line: 727, column: 32, scope: !8821)
!8824 = !DILocation(line: 728, column: 18, scope: !8821)
!8825 = !DILocation(line: 728, column: 26, scope: !8821)
!8826 = !DILocation(line: 728, column: 35, scope: !8821)
!8827 = !DILocation(line: 731, column: 1, scope: !8803)
!8828 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1406, file: !1406, line: 739, type: !8829, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!175, !175, !175, !1641, !8682}
!8831 = !{!8832, !8833, !8834, !8835, !8836, !8837, !8838, !8839, !8840}
!8832 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8828, file: !1406, line: 740, type: !175)
!8833 = !DILocalVariable(name: "length", arg: 2, scope: !8828, file: !1406, line: 741, type: !175)
!8834 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !8828, file: !1406, line: 742, type: !1641)
!8835 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !8828, file: !1406, line: 743, type: !8682)
!8836 = !DILocalVariable(name: "Partition", scope: !8828, file: !1406, line: 745, type: !175)
!8837 = !DILocalVariable(name: "Index", scope: !8828, file: !1406, line: 746, type: !858)
!8838 = !DILocalVariable(name: "bankSize", scope: !8828, file: !1406, line: 747, type: !175)
!8839 = !DILocalVariable(name: "NextBankAddr", scope: !8828, file: !1406, line: 748, type: !175)
!8840 = !DILocalVariable(name: "srcBankIdx", scope: !8828, file: !1406, line: 748, type: !175)
!8841 = !DILocation(line: 0, scope: !8828)
!8842 = !DILocation(line: 750, column: 12, scope: !8828)
!8843 = !DILocation(line: 750, column: 5, scope: !8828)
!8844 = !DILocation(line: 752, column: 51, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !1406, line: 752, column: 5)
!8846 = distinct !DILexicalBlock(scope: !8828, file: !1406, line: 752, column: 5)
!8847 = !DILocation(line: 752, column: 5, scope: !8846)
!8848 = !DILocation(line: 753, column: 51, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !1406, line: 753, column: 13)
!8850 = distinct !DILexicalBlock(scope: !8845, file: !1406, line: 752, column: 70)
!8851 = !DILocation(line: 753, column: 24, scope: !8849)
!8852 = !DILocation(line: 753, column: 13, scope: !8850)
!8853 = !DILocation(line: 758, column: 49, scope: !8850)
!8854 = !DILocation(line: 758, column: 22, scope: !8850)
!8855 = !DILocation(line: 760, column: 22, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8850, file: !1406, line: 760, column: 13)
!8857 = !DILocation(line: 760, column: 13, scope: !8850)
!8858 = !DILocation(line: 761, column: 37, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8856, file: !1406, line: 760, column: 39)
!8860 = !DILocation(line: 762, column: 24, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8859, file: !1406, line: 762, column: 17)
!8862 = !DILocation(line: 762, column: 17, scope: !8859)
!8863 = !DILocation(line: 767, column: 33, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8859, file: !1406, line: 767, column: 17)
!8865 = !DILocation(line: 767, column: 42, scope: !8864)
!8866 = !DILocation(line: 767, column: 17, scope: !8859)
!8867 = !DILocation(line: 768, column: 33, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !1406, line: 767, column: 55)
!8869 = !DILocation(line: 768, column: 39, scope: !8868)
!8870 = !DILocation(line: 769, column: 13, scope: !8868)
!8871 = !DILocation(line: 770, column: 46, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !1406, line: 770, column: 21)
!8873 = distinct !DILexicalBlock(scope: !8864, file: !1406, line: 769, column: 20)
!8874 = !DILocation(line: 770, column: 21, scope: !8873)
!8875 = !DILocation(line: 773, column: 33, scope: !8873)
!8876 = !DILocation(line: 773, column: 39, scope: !8873)
!8877 = !DILocation(line: 774, column: 33, scope: !8873)
!8878 = !DILocation(line: 774, column: 42, scope: !8873)
!8879 = !DILocation(line: 777, column: 22, scope: !8859)
!8880 = !DILocation(line: 778, column: 20, scope: !8859)
!8881 = !DILocation(line: 779, column: 9, scope: !8859)
!8882 = !DILocation(line: 746, column: 13, scope: !8828)
!8883 = !DILocation(line: 752, column: 66, scope: !8845)
!8884 = distinct !{!8884, !8847, !8885}
!8885 = !DILocation(line: 781, column: 5, scope: !8846)
!8886 = !DILocation(line: 784, column: 5, scope: !8828)
!8887 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1406, file: !1406, line: 796, type: !6720, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8888)
!8888 = !{!8889, !8890}
!8889 = !DILocalVariable(name: "result", scope: !8887, file: !1406, line: 798, type: !858)
!8890 = !DILocalVariable(name: "i", scope: !8887, file: !1406, line: 799, type: !858)
!8891 = !DILocation(line: 803, column: 19, scope: !8887)
!8892 = !DILocation(line: 803, column: 28, scope: !8887)
!8893 = !DILocation(line: 803, column: 17, scope: !8887)
!8894 = !DILocation(line: 822, column: 33, scope: !8887)
!8895 = !DILocation(line: 822, column: 56, scope: !8887)
!8896 = !DILocation(line: 822, column: 88, scope: !8887)
!8897 = !DILocation(line: 822, column: 97, scope: !8887)
!8898 = !DILocation(line: 822, column: 5, scope: !8887)
!8899 = !DILocation(line: 829, column: 39, scope: !8887)
!8900 = !DILocation(line: 829, column: 62, scope: !8887)
!8901 = !DILocation(line: 829, column: 14, scope: !8887)
!8902 = !DILocation(line: 0, scope: !8887)
!8903 = !DILocation(line: 834, column: 16, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8887, file: !1406, line: 834, column: 9)
!8905 = !DILocation(line: 834, column: 9, scope: !8887)
!8906 = !DILocation(line: 838, column: 30, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8887, file: !1406, line: 838, column: 5)
!8908 = !DILocation(line: 838, column: 58, scope: !8907)
!8909 = !DILocation(line: 838, column: 78, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8907, file: !1406, line: 838, column: 5)
!8911 = !DILocation(line: 838, column: 88, scope: !8910)
!8912 = !DILocation(line: 838, column: 5, scope: !8907)
!8913 = !DILocation(line: 839, column: 39, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !1406, line: 838, column: 102)
!8915 = !DILocation(line: 839, column: 22, scope: !8914)
!8916 = !DILocation(line: 840, column: 37, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !1406, line: 840, column: 13)
!8918 = !DILocation(line: 840, column: 13, scope: !8914)
!8919 = !DILocation(line: 841, column: 36, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8917, file: !1406, line: 840, column: 63)
!8921 = !DILocation(line: 842, column: 9, scope: !8920)
!8922 = !DILocation(line: 838, column: 95, scope: !8910)
!8923 = distinct !{!8923, !8912, !8924}
!8924 = !DILocation(line: 843, column: 5, scope: !8907)
!8925 = !DILocation(line: 871, column: 49, scope: !8887)
!8926 = !DILocation(line: 871, column: 72, scope: !8887)
!8927 = !DILocation(line: 871, column: 47, scope: !8887)
!8928 = !DILocation(line: 871, column: 97, scope: !8887)
!8929 = !DILocation(line: 871, column: 19, scope: !8887)
!8930 = !DILocation(line: 882, column: 14, scope: !8887)
!8931 = !DILocation(line: 887, column: 13, scope: !8887)
!8932 = !DILocation(line: 887, column: 22, scope: !8887)
!8933 = !DILocation(line: 887, column: 5, scope: !8887)
!8934 = !DILocation(line: 889, column: 22, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8887, file: !1406, line: 887, column: 34)
!8936 = !DILocation(line: 890, column: 13, scope: !8935)
!8937 = !DILocation(line: 902, column: 1, scope: !8887)
!8938 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1406, file: !1406, line: 912, type: !8939, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8941)
!8939 = !DISubroutineType(types: !8940)
!8940 = !{null, !690}
!8941 = !{!8942}
!8942 = !DILocalVariable(name: "CS", arg: 1, scope: !8938, file: !1406, line: 912, type: !690)
!8943 = !DILocation(line: 0, scope: !8938)
!8944 = !DILocation(line: 914, column: 12, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8938, file: !1406, line: 914, column: 9)
!8946 = !DILocation(line: 914, column: 9, scope: !8938)
!8947 = !DILocation(line: 918, column: 26, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8945, file: !1406, line: 914, column: 18)
!8949 = !DILocation(line: 918, column: 24, scope: !8948)
!8950 = !DILocation(line: 920, column: 28, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8948, file: !1406, line: 920, column: 13)
!8952 = !DILocation(line: 920, column: 13, scope: !8948)
!8953 = !DILocation(line: 921, column: 13, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !1406, line: 921, column: 13)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !1406, line: 921, column: 13)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !1406, line: 921, column: 13)
!8957 = distinct !DILexicalBlock(scope: !8951, file: !1406, line: 920, column: 33)
!8958 = !DILocation(line: 923, column: 19, scope: !8948)
!8959 = !DILocation(line: 923, column: 17, scope: !8948)
!8960 = !DILocation(line: 924, column: 5, scope: !8948)
!8961 = !DILocation(line: 935, column: 14, scope: !8938)
!8962 = !DILocation(line: 936, column: 1, scope: !8938)
!8963 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1406, file: !1406, line: 952, type: !6720, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8964 = !DILocation(line: 955, column: 5, scope: !8963)
!8965 = !DILocation(line: 956, column: 12, scope: !8963)
!8966 = !DILocation(line: 956, column: 5, scope: !8963)
!8967 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1406, file: !1406, line: 974, type: !6720, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8968)
!8968 = !{!8969}
!8969 = !DILocalVariable(name: "result", scope: !8967, file: !1406, line: 976, type: !858)
!8970 = !DILocation(line: 981, column: 5, scope: !8967)
!8971 = !DILocation(line: 986, column: 24, scope: !8967)
!8972 = !DILocation(line: 986, column: 33, scope: !8967)
!8973 = !DILocation(line: 986, column: 49, scope: !8967)
!8974 = !DILocation(line: 986, column: 22, scope: !8967)
!8975 = !DILocation(line: 1002, column: 19, scope: !8967)
!8976 = !DILocation(line: 1002, column: 17, scope: !8967)
!8977 = !DILocation(line: 1014, column: 22, scope: !8967)
!8978 = !DILocation(line: 1014, column: 5, scope: !8967)
!8979 = !DILocation(line: 1024, column: 33, scope: !8967)
!8980 = !DILocation(line: 1026, column: 27, scope: !8967)
!8981 = !DILocation(line: 1027, column: 26, scope: !8967)
!8982 = !DILocation(line: 1042, column: 33, scope: !8967)
!8983 = !DILocation(line: 1044, column: 32, scope: !8967)
!8984 = !DILocation(line: 1052, column: 18, scope: !8967)
!8985 = !DILocation(line: 1052, column: 27, scope: !8967)
!8986 = !DILocation(line: 1052, column: 43, scope: !8967)
!8987 = !DILocation(line: 1048, column: 14, scope: !8967)
!8988 = !DILocation(line: 0, scope: !8967)
!8989 = !DILocation(line: 1063, column: 5, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !1406, line: 1063, column: 5)
!8991 = distinct !DILexicalBlock(scope: !8967, file: !1406, line: 1063, column: 5)
!8992 = !DILocation(line: 1063, column: 5, scope: !8991)
!8993 = !DILocation(line: 1063, column: 5, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8990, file: !1406, line: 1063, column: 5)
!8995 = !DILocation(line: 1096, column: 36, scope: !8967)
!8996 = !DILocation(line: 1096, column: 34, scope: !8967)
!8997 = !DILocation(line: 1101, column: 5, scope: !8967)
!8998 = !DILocation(line: 1103, column: 34, scope: !8967)
!8999 = !DILocation(line: 1109, column: 35, scope: !8967)
!9000 = !DILocation(line: 1110, column: 33, scope: !8967)
!9001 = !DILocation(line: 1111, column: 34, scope: !8967)
!9002 = !DILocation(line: 1113, column: 5, scope: !8967)
!9003 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1764, file: !1764, line: 84, type: !208, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9004 = !DILocation(line: 86, column: 1, scope: !9003)
!9005 = distinct !DISubprogram(name: "GetFDMLock", scope: !1764, file: !1764, line: 87, type: !7186, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9006)
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "savedMask", scope: !9005, file: !1764, line: 89, type: !858)
!9008 = !DILocation(line: 90, column: 17, scope: !9005)
!9009 = !DILocation(line: 0, scope: !9005)
!9010 = !DILocation(line: 91, column: 9, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9005, file: !1764, line: 91, column: 9)
!9012 = !DILocation(line: 91, column: 9, scope: !9005)
!9013 = !DILocation(line: 92, column: 17, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9011, file: !1764, line: 91, column: 24)
!9015 = !DILocation(line: 94, column: 9, scope: !9014)
!9016 = !DILocation(line: 0, scope: !9011)
!9017 = !DILocation(line: 102, column: 1, scope: !9005)
!9018 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1764, file: !1764, line: 103, type: !208, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9019)
!9019 = !{!9020}
!9020 = !DILocalVariable(name: "savedMask", scope: !9018, file: !1764, line: 105, type: !858)
!9021 = !DILocation(line: 106, column: 17, scope: !9018)
!9022 = !DILocation(line: 0, scope: !9018)
!9023 = !DILocation(line: 107, column: 9, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9018, file: !1764, line: 107, column: 9)
!9025 = !DILocation(line: 107, column: 9, scope: !9018)
!9026 = !DILocation(line: 108, column: 17, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9024, file: !1764, line: 107, column: 24)
!9028 = !DILocation(line: 109, column: 9, scope: !9027)
!9029 = !DILocation(line: 114, column: 1, scope: !9018)
!9030 = !DILocation(line: 111, column: 9, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9024, file: !1764, line: 110, column: 12)
!9032 = !DILocation(line: 112, column: 9, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !1764, line: 112, column: 9)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !1764, line: 112, column: 9)
!9035 = distinct !DILexicalBlock(scope: !9031, file: !1764, line: 112, column: 9)
!9036 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1764, file: !1764, line: 119, type: !208, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9037 = !DILocation(line: 123, column: 1, scope: !9036)
!9038 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1764, file: !1764, line: 130, type: !208, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9039)
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "Result", scope: !9038, file: !1764, line: 132, type: !1820)
!9041 = !DILocation(line: 133, column: 5, scope: !9038)
!9042 = !DILocation(line: 134, column: 18, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9038, file: !1764, line: 133, column: 8)
!9044 = !DILocation(line: 0, scope: !9038)
!9045 = !DILocation(line: 135, column: 21, scope: !9038)
!9046 = !DILocation(line: 135, column: 5, scope: !9043)
!9047 = distinct !{!9047, !9041, !9048}
!9048 = !DILocation(line: 135, column: 43, scope: !9038)
!9049 = !DILocation(line: 136, column: 1, scope: !9038)
!9050 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1764, file: !1764, line: 143, type: !208, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9051 = !DILocation(line: 147, column: 5, scope: !9050)
!9052 = !DILocation(line: 148, column: 1, scope: !9050)
!9053 = distinct !DISubprogram(name: "readRawDiskData", scope: !1764, file: !1764, line: 216, type: !9054, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9095)
!9054 = !DISubroutineType(types: !9055)
!9055 = !{!858, !9056, !175, !680, !175}
!9056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9057 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1711, line: 93, baseType: !9058)
!9058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1711, line: 83, size: 1056, elements: !9059)
!9059 = !{!9060, !9061, !9081, !9082, !9094}
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9058, file: !1711, line: 84, baseType: !175, size: 32)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9058, file: !1711, line: 85, baseType: !9062, size: 32, offset: 32)
!9062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9063, size: 32)
!9063 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1178, line: 121, baseType: !9064)
!9064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 105, size: 480, elements: !9065)
!9065 = !{!9066, !9067, !9068, !9069, !9070, !9071, !9072, !9073, !9074, !9075, !9076, !9077, !9078, !9079, !9080}
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9064, file: !1178, line: 106, baseType: !1452, size: 32)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9064, file: !1178, line: 107, baseType: !1253, size: 32, offset: 32)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9064, file: !1178, line: 108, baseType: !1457, size: 32, offset: 64)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9064, file: !1178, line: 109, baseType: !1461, size: 32, offset: 96)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9064, file: !1178, line: 110, baseType: !1465, size: 32, offset: 128)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9064, file: !1178, line: 111, baseType: !1461, size: 32, offset: 160)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9064, file: !1178, line: 112, baseType: !1470, size: 32, offset: 192)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9064, file: !1178, line: 113, baseType: !1461, size: 32, offset: 224)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9064, file: !1178, line: 114, baseType: !1461, size: 32, offset: 256)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9064, file: !1178, line: 115, baseType: !1461, size: 32, offset: 288)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9064, file: !1178, line: 116, baseType: !1477, size: 32, offset: 320)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9064, file: !1178, line: 117, baseType: !1482, size: 32, offset: 352)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9064, file: !1178, line: 118, baseType: !1487, size: 32, offset: 384)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9064, file: !1178, line: 119, baseType: !1491, size: 32, offset: 416)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9064, file: !1178, line: 120, baseType: !1495, size: 32, offset: 448)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9058, file: !1711, line: 86, baseType: !194, size: 32, offset: 64)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9058, file: !1711, line: 87, baseType: !9083, size: 928, offset: 96)
!9083 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1178, line: 99, baseType: !9084)
!9084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 90, size: 928, elements: !9085)
!9085 = !{!9086, !9087, !9088, !9089, !9090, !9091, !9092, !9093}
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9084, file: !1178, line: 91, baseType: !175, size: 32)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9084, file: !1178, line: 92, baseType: !1509, size: 256, offset: 32)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9084, file: !1178, line: 93, baseType: !1509, size: 256, offset: 288)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9084, file: !1178, line: 94, baseType: !1509, size: 256, offset: 544)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9084, file: !1178, line: 95, baseType: !175, size: 32, offset: 800)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9084, file: !1178, line: 96, baseType: !1501, size: 16, offset: 832)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9084, file: !1178, line: 97, baseType: !175, size: 32, offset: 864)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9084, file: !1178, line: 98, baseType: !175, size: 32, offset: 896)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9058, file: !1711, line: 92, baseType: !211, size: 8, offset: 1024)
!9095 = !{!9096, !9097, !9098, !9099, !9100, !9101}
!9096 = !DILocalVariable(name: "D", arg: 1, scope: !9053, file: !1764, line: 216, type: !9056)
!9097 = !DILocalVariable(name: "addr", arg: 2, scope: !9053, file: !1764, line: 216, type: !175)
!9098 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9053, file: !1764, line: 216, type: !680)
!9099 = !DILocalVariable(name: "len", arg: 4, scope: !9053, file: !1764, line: 216, type: !175)
!9100 = !DILocalVariable(name: "phyAddr", scope: !9053, file: !1764, line: 219, type: !175)
!9101 = !DILocalVariable(name: "diskSize", scope: !9053, file: !1764, line: 220, type: !175)
!9102 = !DILocation(line: 0, scope: !9053)
!9103 = !DILocation(line: 220, column: 28, scope: !9053)
!9104 = !DILocation(line: 222, column: 14, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9053, file: !1764, line: 222, column: 9)
!9106 = !DILocation(line: 222, column: 26, scope: !9105)
!9107 = !DILocation(line: 225, column: 51, scope: !9053)
!9108 = !DILocation(line: 225, column: 61, scope: !9053)
!9109 = !DILocation(line: 225, column: 15, scope: !9053)
!9110 = !DILocation(line: 225, column: 70, scope: !9053)
!9111 = !DILocation(line: 227, column: 13, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9053, file: !1764, line: 227, column: 9)
!9113 = !DILocation(line: 227, column: 9, scope: !9053)
!9114 = !DILocation(line: 228, column: 9, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9112, file: !1764, line: 227, column: 23)
!9116 = !DILocation(line: 229, column: 5, scope: !9115)
!9117 = !DILocation(line: 231, column: 5, scope: !9053)
!9118 = !DILocation(line: 233, column: 22, scope: !9053)
!9119 = !DILocation(line: 233, column: 5, scope: !9053)
!9120 = !DILocation(line: 235, column: 5, scope: !9053)
!9121 = !DILocation(line: 237, column: 5, scope: !9053)
!9122 = !DILocation(line: 238, column: 1, scope: !9053)
!9123 = distinct !DISubprogram(name: "MountDevice", scope: !1764, file: !1764, line: 165, type: !9124, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9126)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{null, !9056}
!9126 = !{!9127, !9128}
!9127 = !DILocalVariable(name: "D", arg: 1, scope: !9123, file: !1764, line: 165, type: !9056)
!9128 = !DILocalVariable(name: "Result", scope: !9123, file: !1764, line: 167, type: !858)
!9129 = !DILocation(line: 0, scope: !9123)
!9130 = !DILocation(line: 171, column: 12, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9123, file: !1764, line: 171, column: 9)
!9132 = !DILocation(line: 171, column: 9, scope: !9123)
!9133 = !DILocation(line: 176, column: 5, scope: !9123)
!9134 = !DILocation(line: 186, column: 17, scope: !9123)
!9135 = !DILocation(line: 186, column: 28, scope: !9123)
!9136 = !DILocation(line: 186, column: 43, scope: !9123)
!9137 = !DILocation(line: 186, column: 64, scope: !9123)
!9138 = !DILocation(line: 186, column: 52, scope: !9123)
!9139 = !DILocation(line: 186, column: 14, scope: !9123)
!9140 = !DILocation(line: 188, column: 5, scope: !9123)
!9141 = !DILocation(line: 190, column: 16, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9123, file: !1764, line: 190, column: 9)
!9143 = !DILocation(line: 190, column: 9, scope: !9123)
!9144 = !DILocation(line: 191, column: 9, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !1764, line: 191, column: 9)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1764, line: 191, column: 9)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !1764, line: 191, column: 9)
!9148 = distinct !DILexicalBlock(scope: !9142, file: !1764, line: 190, column: 31)
!9149 = !DILocation(line: 194, column: 17, scope: !9123)
!9150 = !DILocation(line: 195, column: 1, scope: !9123)
!9151 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1764, file: !1764, line: 277, type: !9054, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9152)
!9152 = !{!9153, !9154, !9155, !9156, !9157, !9158, !9159, !9160, !9161, !9162, !9166, !9167, !9168, !9173}
!9153 = !DILocalVariable(name: "D", arg: 1, scope: !9151, file: !1764, line: 277, type: !9056)
!9154 = !DILocalVariable(name: "addr", arg: 2, scope: !9151, file: !1764, line: 277, type: !175)
!9155 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9151, file: !1764, line: 277, type: !680)
!9156 = !DILocalVariable(name: "len", arg: 4, scope: !9151, file: !1764, line: 277, type: !175)
!9157 = !DILocalVariable(name: "dest", scope: !9151, file: !1764, line: 279, type: !175)
!9158 = !DILocalVariable(name: "src", scope: !9151, file: !1764, line: 279, type: !175)
!9159 = !DILocalVariable(name: "diskSize", scope: !9151, file: !1764, line: 280, type: !175)
!9160 = !DILocalVariable(name: "result", scope: !9151, file: !1764, line: 281, type: !858)
!9161 = !DILocalVariable(name: "DoneLength", scope: !9151, file: !1764, line: 282, type: !175)
!9162 = !DILocalVariable(name: "blockSize", scope: !9163, file: !1764, line: 313, type: !175)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !1764, line: 312, column: 14)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !1764, line: 305, column: 13)
!9165 = distinct !DILexicalBlock(scope: !9151, file: !1764, line: 298, column: 30)
!9166 = !DILocalVariable(name: "programBytes", scope: !9163, file: !1764, line: 314, type: !175)
!9167 = !DILocalVariable(name: "nextBlkAddr", scope: !9163, file: !1764, line: 316, type: !175)
!9168 = !DILocalVariable(name: "Cell", scope: !9169, file: !1764, line: 346, type: !9171)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !1764, line: 345, column: 83)
!9170 = distinct !DILexicalBlock(scope: !9163, file: !1764, line: 345, column: 17)
!9171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9172, line: 76, baseType: !952)
!9172 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sw_gpt_interrupt_oneshot_mode/GCC")
!9173 = !DILocalVariable(name: "b", scope: !9169, file: !1764, line: 347, type: !680)
!9174 = !DILocation(line: 0, scope: !9151)
!9175 = !DILocation(line: 280, column: 28, scope: !9151)
!9176 = !DILocation(line: 284, column: 14, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9151, file: !1764, line: 284, column: 9)
!9178 = !DILocation(line: 284, column: 9, scope: !9151)
!9179 = !DILocation(line: 288, column: 14, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9151, file: !1764, line: 288, column: 9)
!9181 = !DILocation(line: 288, column: 20, scope: !9180)
!9182 = !DILocation(line: 288, column: 9, scope: !9151)
!9183 = !DILocation(line: 292, column: 13, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9151, file: !1764, line: 292, column: 9)
!9185 = !DILocation(line: 292, column: 9, scope: !9151)
!9186 = !DILocation(line: 293, column: 9, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9184, file: !1764, line: 292, column: 23)
!9188 = !DILocation(line: 294, column: 5, scope: !9187)
!9189 = !DILocation(line: 296, column: 5, scope: !9151)
!9190 = !DILocation(line: 346, column: 17, scope: !9169)
!9191 = !DILocation(line: 298, column: 23, scope: !9151)
!9192 = !DILocation(line: 298, column: 5, scope: !9151)
!9193 = !DILocation(line: 299, column: 52, scope: !9165)
!9194 = !DILocation(line: 299, column: 62, scope: !9165)
!9195 = !DILocation(line: 299, column: 16, scope: !9165)
!9196 = !DILocation(line: 299, column: 71, scope: !9165)
!9197 = !DILocation(line: 299, column: 78, scope: !9165)
!9198 = !DILocation(line: 300, column: 34, scope: !9165)
!9199 = !DILocation(line: 302, column: 12, scope: !9165)
!9200 = !DILocation(line: 302, column: 23, scope: !9165)
!9201 = !DILocation(line: 302, column: 81, scope: !9165)
!9202 = !DILocation(line: 302, column: 45, scope: !9165)
!9203 = !DILocation(line: 302, column: 9, scope: !9165)
!9204 = !DILocation(line: 305, column: 29, scope: !9164)
!9205 = !DILocation(line: 305, column: 57, scope: !9164)
!9206 = !DILocation(line: 305, column: 66, scope: !9164)
!9207 = !DILocation(line: 305, column: 80, scope: !9164)
!9208 = !DILocation(line: 305, column: 13, scope: !9165)
!9209 = !DILocation(line: 306, column: 25, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9164, file: !1764, line: 305, column: 87)
!9211 = !DILocation(line: 306, column: 36, scope: !9210)
!9212 = !DILocation(line: 306, column: 51, scope: !9210)
!9213 = !DILocation(line: 306, column: 60, scope: !9210)
!9214 = !DILocation(line: 306, column: 74, scope: !9210)
!9215 = !DILocation(line: 306, column: 22, scope: !9210)
!9216 = !DILocation(line: 307, column: 24, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9210, file: !1764, line: 307, column: 17)
!9218 = !DILocation(line: 307, column: 17, scope: !9210)
!9219 = !DILocation(line: 310, column: 23, scope: !9210)
!9220 = !DILocation(line: 311, column: 9, scope: !9210)
!9221 = !DILocation(line: 313, column: 47, scope: !9163)
!9222 = !DILocation(line: 313, column: 56, scope: !9163)
!9223 = !DILocation(line: 313, column: 34, scope: !9163)
!9224 = !DILocation(line: 0, scope: !9163)
!9225 = !DILocation(line: 316, column: 42, scope: !9163)
!9226 = !DILocation(line: 316, column: 58, scope: !9163)
!9227 = !DILocation(line: 316, column: 55, scope: !9163)
!9228 = !DILocation(line: 326, column: 22, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9163, file: !1764, line: 326, column: 17)
!9230 = !DILocation(line: 326, column: 37, scope: !9229)
!9231 = !DILocation(line: 326, column: 17, scope: !9163)
!9232 = !DILocation(line: 332, column: 43, scope: !9163)
!9233 = !DILocation(line: 345, column: 30, scope: !9170)
!9234 = !DILocation(line: 345, column: 52, scope: !9170)
!9235 = !DILocation(line: 0, scope: !9169)
!9236 = !DILocation(line: 348, column: 26, scope: !9169)
!9237 = !DILocation(line: 348, column: 24, scope: !9169)
!9238 = !DILocation(line: 348, column: 22, scope: !9169)
!9239 = !DILocation(line: 349, column: 41, scope: !9169)
!9240 = !DILocation(line: 349, column: 24, scope: !9169)
!9241 = !DILocation(line: 349, column: 22, scope: !9169)
!9242 = !DILocation(line: 350, column: 29, scope: !9169)
!9243 = !DILocation(line: 350, column: 40, scope: !9169)
!9244 = !DILocation(line: 350, column: 55, scope: !9169)
!9245 = !DILocation(line: 350, column: 64, scope: !9169)
!9246 = !DILocation(line: 350, column: 26, scope: !9169)
!9247 = !DILocation(line: 351, column: 28, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9169, file: !1764, line: 351, column: 21)
!9249 = !DILocation(line: 354, column: 13, scope: !9170)
!9250 = !DILocation(line: 362, column: 33, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !1764, line: 361, column: 24)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !1764, line: 355, column: 21)
!9253 = distinct !DILexicalBlock(scope: !9170, file: !1764, line: 354, column: 20)
!9254 = !DILocation(line: 362, column: 44, scope: !9251)
!9255 = !DILocation(line: 362, column: 59, scope: !9251)
!9256 = !DILocation(line: 362, column: 68, scope: !9251)
!9257 = !DILocation(line: 362, column: 82, scope: !9251)
!9258 = !DILocation(line: 362, column: 30, scope: !9251)
!9259 = !DILocation(line: 364, column: 28, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9253, file: !1764, line: 364, column: 21)
!9261 = !DILocation(line: 364, column: 21, scope: !9253)
!9262 = !DILocation(line: 368, column: 24, scope: !9163)
!9263 = !DILocation(line: 0, scope: !9164)
!9264 = distinct !{!9264, !9192, !9265}
!9265 = !DILocation(line: 370, column: 5, scope: !9151)
!9266 = !DILocation(line: 372, column: 5, scope: !9151)
!9267 = !DILocation(line: 379, column: 1, scope: !9151)
!9268 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1764, file: !1764, line: 398, type: !9269, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{!858, !9056, !175}
!9271 = !{!9272, !9273, !9274, !9275}
!9272 = !DILocalVariable(name: "D", arg: 1, scope: !9268, file: !1764, line: 398, type: !9056)
!9273 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9268, file: !1764, line: 398, type: !175)
!9274 = !DILocalVariable(name: "result", scope: !9268, file: !1764, line: 401, type: !858)
!9275 = !DILocalVariable(name: "block_index", scope: !9268, file: !1764, line: 402, type: !175)
!9276 = !DILocation(line: 0, scope: !9268)
!9277 = !DILocation(line: 402, column: 36, scope: !9268)
!9278 = !DILocation(line: 403, column: 13, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9268, file: !1764, line: 403, column: 9)
!9280 = !DILocation(line: 403, column: 9, scope: !9268)
!9281 = !DILocation(line: 404, column: 9, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9279, file: !1764, line: 403, column: 23)
!9283 = !DILocation(line: 405, column: 5, scope: !9282)
!9284 = !DILocation(line: 407, column: 37, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9268, file: !1764, line: 407, column: 9)
!9286 = !DILocation(line: 407, column: 21, scope: !9285)
!9287 = !DILocation(line: 407, column: 9, scope: !9268)
!9288 = !DILocation(line: 412, column: 5, scope: !9268)
!9289 = !DILocation(line: 414, column: 8, scope: !9268)
!9290 = !DILocation(line: 414, column: 19, scope: !9268)
!9291 = !DILocation(line: 414, column: 32, scope: !9268)
!9292 = !DILocation(line: 414, column: 5, scope: !9268)
!9293 = !DILocation(line: 416, column: 17, scope: !9268)
!9294 = !DILocation(line: 416, column: 28, scope: !9268)
!9295 = !DILocation(line: 416, column: 42, scope: !9268)
!9296 = !DILocation(line: 416, column: 14, scope: !9268)
!9297 = !DILocation(line: 418, column: 5, scope: !9268)
!9298 = !DILocation(line: 420, column: 16, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9268, file: !1764, line: 420, column: 9)
!9300 = !DILocation(line: 424, column: 1, scope: !9268)
!9301 = distinct !DISubprogram(name: "NOR_init", scope: !1764, file: !1764, line: 433, type: !6720, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9302 = !DILocation(line: 436, column: 9, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9301, file: !1764, line: 436, column: 9)
!9304 = !DILocation(line: 436, column: 9, scope: !9301)
!9305 = !DILocation(line: 437, column: 9, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9303, file: !1764, line: 436, column: 62)
!9307 = !DILocation(line: 438, column: 9, scope: !9306)
!9308 = !DILocation(line: 439, column: 27, scope: !9306)
!9309 = !DILocation(line: 440, column: 5, scope: !9306)
!9310 = !DILocation(line: 441, column: 5, scope: !9301)
!9311 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1764, file: !1764, line: 444, type: !7186, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9312 = !DILocation(line: 446, column: 12, scope: !9311)
!9313 = !DILocation(line: 446, column: 5, scope: !9311)
!9314 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1764, file: !1764, line: 449, type: !9315, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9317)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{!858, !175, !175, !680}
!9317 = !{!9318, !9319, !9320, !9321, !9322, !9323, !9324}
!9318 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9314, file: !1764, line: 449, type: !175)
!9319 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9314, file: !1764, line: 449, type: !175)
!9320 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9314, file: !1764, line: 449, type: !680)
!9321 = !DILocalVariable(name: "D", scope: !9314, file: !1764, line: 451, type: !9056)
!9322 = !DILocalVariable(name: "mtdData", scope: !9314, file: !1764, line: 452, type: !1772)
!9323 = !DILocalVariable(name: "result", scope: !9314, file: !1764, line: 453, type: !858)
!9324 = !DILocalVariable(name: "addr", scope: !9314, file: !1764, line: 455, type: !175)
!9325 = !DILocation(line: 0, scope: !9314)
!9326 = !DILocation(line: 452, column: 60, scope: !9314)
!9327 = !DILocation(line: 455, column: 32, scope: !9314)
!9328 = !DILocation(line: 455, column: 22, scope: !9314)
!9329 = !DILocation(line: 455, column: 95, scope: !9314)
!9330 = !DILocation(line: 455, column: 76, scope: !9314)
!9331 = !DILocation(line: 455, column: 118, scope: !9314)
!9332 = !DILocation(line: 455, column: 74, scope: !9314)
!9333 = !DILocation(line: 455, column: 106, scope: !9314)
!9334 = !DILocation(line: 457, column: 14, scope: !9314)
!9335 = !DILocation(line: 459, column: 16, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9314, file: !1764, line: 459, column: 9)
!9337 = !DILocation(line: 463, column: 1, scope: !9314)
!9338 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1764, file: !1764, line: 466, type: !9315, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9339)
!9339 = !{!9340, !9341, !9342, !9343, !9344, !9345, !9346}
!9340 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9338, file: !1764, line: 466, type: !175)
!9341 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9338, file: !1764, line: 466, type: !175)
!9342 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9338, file: !1764, line: 466, type: !680)
!9343 = !DILocalVariable(name: "D", scope: !9338, file: !1764, line: 468, type: !9056)
!9344 = !DILocalVariable(name: "mtdData", scope: !9338, file: !1764, line: 469, type: !1772)
!9345 = !DILocalVariable(name: "result", scope: !9338, file: !1764, line: 470, type: !858)
!9346 = !DILocalVariable(name: "addr", scope: !9338, file: !1764, line: 472, type: !175)
!9347 = !DILocation(line: 0, scope: !9338)
!9348 = !DILocation(line: 469, column: 60, scope: !9338)
!9349 = !DILocation(line: 472, column: 32, scope: !9338)
!9350 = !DILocation(line: 472, column: 22, scope: !9338)
!9351 = !DILocation(line: 472, column: 95, scope: !9338)
!9352 = !DILocation(line: 472, column: 76, scope: !9338)
!9353 = !DILocation(line: 472, column: 118, scope: !9338)
!9354 = !DILocation(line: 472, column: 74, scope: !9338)
!9355 = !DILocation(line: 472, column: 106, scope: !9338)
!9356 = !DILocation(line: 474, column: 14, scope: !9338)
!9357 = !DILocation(line: 475, column: 16, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9338, file: !1764, line: 475, column: 9)
!9359 = !DILocation(line: 479, column: 1, scope: !9338)
!9360 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1764, file: !1764, line: 481, type: !9361, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9363)
!9361 = !DISubroutineType(types: !9362)
!9362 = !{!858, !175}
!9363 = !{!9364, !9365}
!9364 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9360, file: !1764, line: 481, type: !175)
!9365 = !DILocalVariable(name: "result", scope: !9360, file: !1764, line: 483, type: !858)
!9366 = !DILocation(line: 0, scope: !9360)
!9367 = !DILocation(line: 484, column: 14, scope: !9360)
!9368 = !DILocation(line: 485, column: 16, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9360, file: !1764, line: 485, column: 9)
!9370 = !DILocation(line: 489, column: 1, scope: !9360)
!9371 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1764, file: !1764, line: 492, type: !3103, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9372)
!9372 = !{!9373, !9374, !9375}
!9373 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9371, file: !1764, line: 492, type: !175)
!9374 = !DILocalVariable(name: "D", scope: !9371, file: !1764, line: 494, type: !9056)
!9375 = !DILocalVariable(name: "mtdData", scope: !9371, file: !1764, line: 495, type: !1772)
!9376 = !DILocation(line: 0, scope: !9371)
!9377 = !DILocation(line: 495, column: 60, scope: !9371)
!9378 = !DILocation(line: 496, column: 12, scope: !9371)
!9379 = !DILocation(line: 496, column: 5, scope: !9371)
!9380 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1764, file: !1764, line: 499, type: !3103, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9381)
!9381 = !{!9382, !9383, !9384}
!9382 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9380, file: !1764, line: 499, type: !175)
!9383 = !DILocalVariable(name: "D", scope: !9380, file: !1764, line: 501, type: !9056)
!9384 = !DILocalVariable(name: "mtdData", scope: !9380, file: !1764, line: 502, type: !1772)
!9385 = !DILocation(line: 0, scope: !9380)
!9386 = !DILocation(line: 502, column: 60, scope: !9380)
!9387 = !DILocation(line: 504, column: 12, scope: !9380)
!9388 = !DILocation(line: 504, column: 5, scope: !9380)
!9389 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1764, file: !1764, line: 510, type: !9390, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9392)
!9390 = !DISubroutineType(types: !9391)
!9391 = !{!858, !175, !920, !920}
!9392 = !{!9393, !9394, !9395, !9396, !9397}
!9393 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9389, file: !1764, line: 510, type: !175)
!9394 = !DILocalVariable(name: "block_index", arg: 2, scope: !9389, file: !1764, line: 510, type: !920)
!9395 = !DILocalVariable(name: "offset", arg: 3, scope: !9389, file: !1764, line: 510, type: !920)
!9396 = !DILocalVariable(name: "D", scope: !9389, file: !1764, line: 512, type: !9056)
!9397 = !DILocalVariable(name: "mtdData", scope: !9389, file: !1764, line: 513, type: !1772)
!9398 = !DILocation(line: 0, scope: !9389)
!9399 = !DILocation(line: 513, column: 60, scope: !9389)
!9400 = !DILocation(line: 519, column: 20, scope: !9389)
!9401 = !DILocation(line: 519, column: 18, scope: !9389)
!9402 = !DILocation(line: 520, column: 22, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9389, file: !1764, line: 520, column: 9)
!9404 = !DILocation(line: 520, column: 9, scope: !9389)
!9405 = !DILocation(line: 524, column: 28, scope: !9389)
!9406 = !DILocation(line: 524, column: 26, scope: !9389)
!9407 = !DILocation(line: 524, column: 13, scope: !9389)
!9408 = !DILocation(line: 526, column: 5, scope: !9389)
!9409 = !DILocation(line: 527, column: 1, scope: !9389)
!9410 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1764, file: !1764, line: 532, type: !9411, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9413)
!9411 = !DISubroutineType(types: !9412)
!9412 = !{!858, !175, !175, !920}
!9413 = !{!9414, !9415, !9416, !9417, !9418}
!9414 = !DILocalVariable(name: "block_index", arg: 1, scope: !9410, file: !1764, line: 532, type: !175)
!9415 = !DILocalVariable(name: "offset", arg: 2, scope: !9410, file: !1764, line: 532, type: !175)
!9416 = !DILocalVariable(name: "addr", arg: 3, scope: !9410, file: !1764, line: 532, type: !920)
!9417 = !DILocalVariable(name: "D", scope: !9410, file: !1764, line: 534, type: !9056)
!9418 = !DILocalVariable(name: "mtdData", scope: !9410, file: !1764, line: 535, type: !1772)
!9419 = !DILocation(line: 0, scope: !9410)
!9420 = !DILocation(line: 535, column: 60, scope: !9410)
!9421 = !DILocation(line: 537, column: 23, scope: !9410)
!9422 = !DILocation(line: 537, column: 13, scope: !9410)
!9423 = !DILocation(line: 537, column: 79, scope: !9410)
!9424 = !DILocation(line: 537, column: 60, scope: !9410)
!9425 = !DILocation(line: 537, column: 58, scope: !9410)
!9426 = !DILocation(line: 537, column: 88, scope: !9410)
!9427 = !DILocation(line: 537, column: 11, scope: !9410)
!9428 = !DILocation(line: 539, column: 5, scope: !9410)
!9429 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1764, file: !1764, line: 545, type: !9430, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9432)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{!1820, !858}
!9432 = !{!9433}
!9433 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !9429, file: !1764, line: 545, type: !858)
!9434 = !DILocation(line: 0, scope: !9429)
!9435 = !DILocation(line: 547, column: 9, scope: !9429)
!9436 = !DILocation(line: 558, column: 9, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !1764, line: 558, column: 9)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !1764, line: 558, column: 9)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !1764, line: 558, column: 9)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !1764, line: 557, column: 12)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !1764, line: 555, column: 16)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !1764, line: 553, column: 16)
!9443 = distinct !DILexicalBlock(scope: !9444, file: !1764, line: 551, column: 16)
!9444 = distinct !DILexicalBlock(scope: !9445, file: !1764, line: 549, column: 16)
!9445 = distinct !DILexicalBlock(scope: !9429, file: !1764, line: 547, column: 9)
!9446 = !DILocation(line: 560, column: 1, scope: !9429)
!9447 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1764, file: !1764, line: 561, type: !9448, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9451)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!9450, !175}
!9450 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1101, line: 127, baseType: !1766)
!9451 = !{!9452, !9453, !9454}
!9452 = !DILocalVariable(name: "address", arg: 1, scope: !9447, file: !1764, line: 561, type: !175)
!9453 = !DILocalVariable(name: "block_size", scope: !9447, file: !1764, line: 563, type: !175)
!9454 = !DILocalVariable(name: "block_index", scope: !9447, file: !1764, line: 564, type: !175)
!9455 = !DILocation(line: 0, scope: !9447)
!9456 = !DILocation(line: 566, column: 19, scope: !9447)
!9457 = !DILocation(line: 567, column: 21, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9447, file: !1764, line: 567, column: 9)
!9459 = !DILocation(line: 567, column: 9, scope: !9447)
!9460 = !DILocation(line: 568, column: 9, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !1764, line: 568, column: 9)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !1764, line: 568, column: 9)
!9463 = distinct !DILexicalBlock(scope: !9464, file: !1764, line: 568, column: 9)
!9464 = distinct !DILexicalBlock(scope: !9458, file: !1764, line: 567, column: 45)
!9465 = !DILocation(line: 570, column: 18, scope: !9447)
!9466 = !DILocation(line: 571, column: 9, scope: !9447)
!9467 = !DILocation(line: 574, column: 9, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !1764, line: 573, column: 38)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !1764, line: 573, column: 16)
!9470 = distinct !DILexicalBlock(scope: !9447, file: !1764, line: 571, column: 9)
!9471 = !DILocation(line: 576, column: 9, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9473, file: !1764, line: 575, column: 39)
!9473 = distinct !DILexicalBlock(scope: !9469, file: !1764, line: 575, column: 16)
!9474 = !DILocation(line: 578, column: 9, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !1764, line: 578, column: 9)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !1764, line: 578, column: 9)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !1764, line: 578, column: 9)
!9478 = distinct !DILexicalBlock(scope: !9473, file: !1764, line: 577, column: 12)
!9479 = !DILocation(line: 0, scope: !9470)
!9480 = !DILocation(line: 580, column: 1, scope: !9447)
!9481 = distinct !DISubprogram(name: "hal_flash_init", scope: !1764, file: !1764, line: 583, type: !7186, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9482 = !DILocation(line: 585, column: 5, scope: !9481)
!9483 = !DILocation(line: 586, column: 5, scope: !9481)
!9484 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1764, file: !1764, line: 589, type: !7186, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9485 = !DILocation(line: 591, column: 5, scope: !9484)
!9486 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1764, file: !1764, line: 595, type: !9487, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9489)
!9487 = !DISubroutineType(types: !9488)
!9488 = !{!1820, !175, !9450}
!9489 = !{!9490, !9491, !9492, !9493, !9494}
!9490 = !DILocalVariable(name: "start_address", arg: 1, scope: !9486, file: !1764, line: 595, type: !175)
!9491 = !DILocalVariable(name: "block", arg: 2, scope: !9486, file: !1764, line: 595, type: !9450)
!9492 = !DILocalVariable(name: "result", scope: !9486, file: !1764, line: 597, type: !858)
!9493 = !DILocalVariable(name: "block_index", scope: !9486, file: !1764, line: 598, type: !175)
!9494 = !DILocalVariable(name: "erase_type", scope: !9486, file: !1764, line: 599, type: !175)
!9495 = !DILocation(line: 0, scope: !9486)
!9496 = !DILocation(line: 601, column: 9, scope: !9486)
!9497 = !DILocation(line: 602, column: 28, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9499, file: !1764, line: 602, column: 13)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !1764, line: 601, column: 38)
!9500 = distinct !DILexicalBlock(scope: !9486, file: !1764, line: 601, column: 9)
!9501 = !DILocation(line: 602, column: 37, scope: !9498)
!9502 = !DILocation(line: 602, column: 13, scope: !9499)
!9503 = !DILocation(line: 607, column: 28, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !1764, line: 607, column: 13)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !1764, line: 606, column: 46)
!9506 = distinct !DILexicalBlock(scope: !9500, file: !1764, line: 606, column: 16)
!9507 = !DILocation(line: 607, column: 38, scope: !9504)
!9508 = !DILocation(line: 607, column: 13, scope: !9505)
!9509 = !DILocation(line: 612, column: 28, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !1764, line: 612, column: 13)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !1764, line: 611, column: 46)
!9512 = distinct !DILexicalBlock(scope: !9506, file: !1764, line: 611, column: 16)
!9513 = !DILocation(line: 612, column: 38, scope: !9510)
!9514 = !DILocation(line: 612, column: 13, scope: !9511)
!9515 = !DILocation(line: 0, scope: !9500)
!9516 = !DILocation(line: 621, column: 19, scope: !9486)
!9517 = !DILocation(line: 622, column: 21, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9486, file: !1764, line: 622, column: 9)
!9519 = !DILocation(line: 622, column: 9, scope: !9486)
!9520 = !DILocation(line: 626, column: 17, scope: !9486)
!9521 = !DILocation(line: 627, column: 14, scope: !9486)
!9522 = !DILocation(line: 628, column: 16, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9486, file: !1764, line: 628, column: 9)
!9524 = !DILocation(line: 628, column: 9, scope: !9486)
!9525 = !DILocation(line: 629, column: 16, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9523, file: !1764, line: 628, column: 38)
!9527 = !DILocation(line: 629, column: 9, scope: !9526)
!9528 = !DILocation(line: 632, column: 1, scope: !9486)
!9529 = distinct !DISubprogram(name: "hal_flash_read", scope: !1764, file: !1764, line: 634, type: !9530, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9532)
!9530 = !DISubroutineType(types: !9531)
!9531 = !{!1820, !175, !680, !175}
!9532 = !{!9533, !9534, !9535, !9536, !9537}
!9533 = !DILocalVariable(name: "start_address", arg: 1, scope: !9529, file: !1764, line: 634, type: !175)
!9534 = !DILocalVariable(name: "buffer", arg: 2, scope: !9529, file: !1764, line: 634, type: !680)
!9535 = !DILocalVariable(name: "length", arg: 3, scope: !9529, file: !1764, line: 634, type: !175)
!9536 = !DILocalVariable(name: "D", scope: !9529, file: !1764, line: 636, type: !9056)
!9537 = !DILocalVariable(name: "result", scope: !9529, file: !1764, line: 637, type: !858)
!9538 = !DILocation(line: 0, scope: !9529)
!9539 = !DILocation(line: 639, column: 14, scope: !9529)
!9540 = !DILocation(line: 641, column: 16, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9529, file: !1764, line: 641, column: 9)
!9542 = !DILocation(line: 641, column: 9, scope: !9529)
!9543 = !DILocation(line: 642, column: 16, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9541, file: !1764, line: 641, column: 38)
!9545 = !DILocation(line: 642, column: 9, scope: !9544)
!9546 = !DILocation(line: 645, column: 1, scope: !9529)
!9547 = distinct !DISubprogram(name: "hal_flash_write", scope: !1764, file: !1764, line: 647, type: !9548, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9550)
!9548 = !DISubroutineType(types: !9549)
!9549 = !{!1820, !175, !4485, !175}
!9550 = !{!9551, !9552, !9553, !9554, !9555}
!9551 = !DILocalVariable(name: "address", arg: 1, scope: !9547, file: !1764, line: 647, type: !175)
!9552 = !DILocalVariable(name: "data", arg: 2, scope: !9547, file: !1764, line: 647, type: !4485)
!9553 = !DILocalVariable(name: "length", arg: 3, scope: !9547, file: !1764, line: 647, type: !175)
!9554 = !DILocalVariable(name: "D", scope: !9547, file: !1764, line: 649, type: !9056)
!9555 = !DILocalVariable(name: "result", scope: !9547, file: !1764, line: 650, type: !858)
!9556 = !DILocation(line: 0, scope: !9547)
!9557 = !DILocation(line: 652, column: 14, scope: !9547)
!9558 = !DILocation(line: 653, column: 16, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9547, file: !1764, line: 653, column: 9)
!9560 = !DILocation(line: 653, column: 9, scope: !9547)
!9561 = !DILocation(line: 654, column: 16, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9559, file: !1764, line: 653, column: 38)
!9563 = !DILocation(line: 654, column: 9, scope: !9562)
!9564 = !DILocation(line: 668, column: 1, scope: !9547)
!9565 = distinct !DISubprogram(name: "BlockAddress", scope: !1825, file: !1825, line: 111, type: !9566, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9568)
!9566 = !DISubroutineType(types: !9567)
!9567 = !{!194, !194, !175}
!9568 = !{!9569, !9570, !9571, !9572, !9573, !9574}
!9569 = !DILocalVariable(name: "DriverData", arg: 1, scope: !9565, file: !1825, line: 111, type: !194)
!9570 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9565, file: !1825, line: 111, type: !175)
!9571 = !DILocalVariable(name: "D", scope: !9565, file: !1825, line: 113, type: !1853)
!9572 = !DILocalVariable(name: "addr", scope: !9565, file: !1825, line: 114, type: !175)
!9573 = !DILocalVariable(name: "region", scope: !9565, file: !1825, line: 115, type: !175)
!9574 = !DILocalVariable(name: "BlockUpperBound", scope: !9565, file: !1825, line: 115, type: !175)
!9575 = !DILocation(line: 0, scope: !9565)
!9576 = !DILocation(line: 117, column: 26, scope: !9565)
!9577 = !DILocation(line: 117, column: 40, scope: !9565)
!9578 = !DILocation(line: 118, column: 28, scope: !9565)
!9579 = !DILocation(line: 118, column: 5, scope: !9565)
!9580 = !DILocation(line: 119, column: 39, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9565, file: !1825, line: 118, column: 43)
!9582 = !DILocation(line: 119, column: 76, scope: !9581)
!9583 = !DILocation(line: 119, column: 52, scope: !9581)
!9584 = !DILocation(line: 119, column: 14, scope: !9581)
!9585 = !DILocation(line: 120, column: 15, scope: !9581)
!9586 = !DILocation(line: 121, column: 50, scope: !9581)
!9587 = !DILocation(line: 121, column: 25, scope: !9581)
!9588 = distinct !{!9588, !9579, !9589}
!9589 = !DILocation(line: 122, column: 5, scope: !9565)
!9590 = !DILocation(line: 123, column: 68, scope: !9565)
!9591 = !DILocation(line: 123, column: 44, scope: !9565)
!9592 = !DILocation(line: 123, column: 25, scope: !9565)
!9593 = !DILocation(line: 123, column: 107, scope: !9565)
!9594 = !DILocation(line: 123, column: 83, scope: !9565)
!9595 = !DILocation(line: 123, column: 10, scope: !9565)
!9596 = !DILocation(line: 125, column: 16, scope: !9565)
!9597 = !DILocation(line: 125, column: 25, scope: !9565)
!9598 = !DILocation(line: 125, column: 5, scope: !9565)
!9599 = distinct !DISubprogram(name: "MapWindow", scope: !1825, file: !1825, line: 180, type: !1458, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9600)
!9600 = !{!9601, !9602, !9603, !9604}
!9601 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9599, file: !1825, line: 180, type: !194)
!9602 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9599, file: !1825, line: 180, type: !175)
!9603 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !9599, file: !1825, line: 180, type: !175)
!9604 = !DILocalVariable(name: "D", scope: !9599, file: !1825, line: 182, type: !1853)
!9605 = !DILocation(line: 0, scope: !9599)
!9606 = !DILocation(line: 185, column: 5, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !1825, line: 185, column: 5)
!9608 = distinct !DILexicalBlock(scope: !9599, file: !1825, line: 185, column: 5)
!9609 = !DILocation(line: 185, column: 5, scope: !9608)
!9610 = !DILocation(line: 185, column: 5, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !1825, line: 185, column: 5)
!9612 = !DILocation(line: 186, column: 27, scope: !9599)
!9613 = !DILocation(line: 186, column: 19, scope: !9599)
!9614 = !DILocation(line: 186, column: 8, scope: !9599)
!9615 = !DILocation(line: 186, column: 17, scope: !9599)
!9616 = !DILocation(line: 188, column: 5, scope: !9599)
!9617 = !DILocation(line: 0, scope: !1846)
!9618 = !DILocation(line: 142, column: 12, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !1846, file: !1825, line: 142, column: 9)
!9620 = !DILocation(line: 142, column: 34, scope: !9619)
!9621 = !DILocation(line: 142, column: 64, scope: !9619)
!9622 = !DILocation(line: 142, column: 75, scope: !9619)
!9623 = !DILocation(line: 142, column: 9, scope: !1846)
!9624 = !DILocation(line: 143, column: 79, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !1825, line: 143, column: 13)
!9626 = distinct !DILexicalBlock(scope: !9619, file: !1825, line: 142, column: 99)
!9627 = !DILocation(line: 143, column: 13, scope: !9626)
!9628 = !DILocation(line: 144, column: 72, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !1825, line: 144, column: 17)
!9630 = distinct !DILexicalBlock(scope: !9625, file: !1825, line: 143, column: 94)
!9631 = !DILocation(line: 144, column: 83, scope: !9629)
!9632 = !DILocation(line: 144, column: 17, scope: !9630)
!9633 = !DILocation(line: 145, column: 87, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !1825, line: 145, column: 21)
!9635 = distinct !DILexicalBlock(scope: !9629, file: !1825, line: 144, column: 107)
!9636 = !DILocation(line: 145, column: 21, scope: !9635)
!9637 = !DILocation(line: 146, column: 33, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9634, file: !1825, line: 145, column: 102)
!9639 = !DILocation(line: 147, column: 25, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9638, file: !1825, line: 147, column: 25)
!9641 = !DILocation(line: 147, column: 62, scope: !9640)
!9642 = !DILocation(line: 147, column: 34, scope: !9640)
!9643 = !DILocation(line: 147, column: 25, scope: !9638)
!9644 = !DILocation(line: 148, column: 91, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9640, file: !1825, line: 147, column: 106)
!9646 = !DILocation(line: 149, column: 111, scope: !9645)
!9647 = !DILocation(line: 149, column: 101, scope: !9645)
!9648 = !DILocation(line: 149, column: 87, scope: !9645)
!9649 = !DILocation(line: 149, column: 99, scope: !9645)
!9650 = !DILocation(line: 150, column: 37, scope: !9645)
!9651 = !DILocation(line: 150, column: 34, scope: !9645)
!9652 = !DILocation(line: 151, column: 21, scope: !9645)
!9653 = !DILocation(line: 152, column: 91, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9640, file: !1825, line: 151, column: 28)
!9655 = !DILocation(line: 153, column: 111, scope: !9654)
!9656 = !DILocation(line: 153, column: 101, scope: !9654)
!9657 = !DILocation(line: 153, column: 87, scope: !9654)
!9658 = !DILocation(line: 153, column: 99, scope: !9654)
!9659 = !DILocation(line: 154, column: 34, scope: !9654)
!9660 = !DILocation(line: 157, column: 32, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9634, file: !1825, line: 156, column: 24)
!9662 = !DILocation(line: 158, column: 83, scope: !9661)
!9663 = !DILocation(line: 159, column: 60, scope: !9661)
!9664 = !DILocation(line: 159, column: 33, scope: !9661)
!9665 = !DILocation(line: 159, column: 30, scope: !9661)
!9666 = !DILocation(line: 162, column: 29, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9629, file: !1825, line: 161, column: 20)
!9668 = !DILocation(line: 163, column: 83, scope: !9667)
!9669 = !DILocation(line: 164, column: 103, scope: !9667)
!9670 = !DILocation(line: 164, column: 93, scope: !9667)
!9671 = !DILocation(line: 164, column: 79, scope: !9667)
!9672 = !DILocation(line: 164, column: 91, scope: !9667)
!9673 = !DILocation(line: 165, column: 56, scope: !9667)
!9674 = !DILocation(line: 165, column: 29, scope: !9667)
!9675 = !DILocation(line: 165, column: 26, scope: !9667)
!9676 = !DILocation(line: 168, column: 24, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9625, file: !1825, line: 167, column: 16)
!9678 = !DILocation(line: 169, column: 75, scope: !9677)
!9679 = !DILocation(line: 170, column: 50, scope: !9677)
!9680 = !DILocation(line: 170, column: 22, scope: !9677)
!9681 = !DILocation(line: 173, column: 21, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9619, file: !1825, line: 172, column: 12)
!9683 = !DILocation(line: 174, column: 75, scope: !9682)
!9684 = !DILocation(line: 175, column: 95, scope: !9682)
!9685 = !DILocation(line: 175, column: 85, scope: !9682)
!9686 = !DILocation(line: 175, column: 71, scope: !9682)
!9687 = !DILocation(line: 175, column: 83, scope: !9682)
!9688 = !DILocation(line: 176, column: 46, scope: !9682)
!9689 = !DILocation(line: 176, column: 18, scope: !9682)
!9690 = !DILocation(line: 0, scope: !9619)
!9691 = !DILocation(line: 178, column: 5, scope: !1846)
!9692 = distinct !DISubprogram(name: "BlockSize", scope: !1825, file: !1825, line: 191, type: !1847, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9693)
!9693 = !{!9694, !9695, !9696, !9697, !9698}
!9694 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9692, file: !1825, line: 191, type: !194)
!9695 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9692, file: !1825, line: 191, type: !175)
!9696 = !DILocalVariable(name: "D", scope: !9692, file: !1825, line: 193, type: !1853)
!9697 = !DILocalVariable(name: "region", scope: !9692, file: !1825, line: 194, type: !175)
!9698 = !DILocalVariable(name: "BlockUpperBound", scope: !9692, file: !1825, line: 194, type: !175)
!9699 = !DILocation(line: 0, scope: !9692)
!9700 = !DILocation(line: 196, column: 26, scope: !9692)
!9701 = !DILocation(line: 196, column: 45, scope: !9692)
!9702 = !DILocation(line: 197, column: 28, scope: !9692)
!9703 = !DILocation(line: 197, column: 5, scope: !9692)
!9704 = !DILocation(line: 198, column: 15, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9692, file: !1825, line: 197, column: 43)
!9706 = !DILocation(line: 199, column: 50, scope: !9705)
!9707 = !DILocation(line: 199, column: 25, scope: !9705)
!9708 = distinct !{!9708, !9703, !9709}
!9709 = !DILocation(line: 200, column: 5, scope: !9692)
!9710 = !DILocation(line: 202, column: 35, scope: !9692)
!9711 = !DILocation(line: 202, column: 5, scope: !9692)
!9712 = distinct !DISubprogram(name: "BlockIndex", scope: !1825, file: !1825, line: 205, type: !1847, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9713)
!9713 = !{!9714, !9715, !9716, !9717, !9718, !9719}
!9714 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9712, file: !1825, line: 205, type: !194)
!9715 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !9712, file: !1825, line: 205, type: !175)
!9716 = !DILocalVariable(name: "D", scope: !9712, file: !1825, line: 207, type: !1853)
!9717 = !DILocalVariable(name: "region", scope: !9712, file: !1825, line: 208, type: !175)
!9718 = !DILocalVariable(name: "BlockUpperAddr", scope: !9712, file: !1825, line: 208, type: !175)
!9719 = !DILocalVariable(name: "blk_idx", scope: !9712, file: !1825, line: 209, type: !175)
!9720 = !DILocation(line: 0, scope: !9712)
!9721 = !DILocation(line: 211, column: 25, scope: !9712)
!9722 = !DILocation(line: 211, column: 44, scope: !9712)
!9723 = !DILocation(line: 211, column: 81, scope: !9712)
!9724 = !DILocation(line: 211, column: 57, scope: !9712)
!9725 = !DILocation(line: 213, column: 28, scope: !9712)
!9726 = !DILocation(line: 213, column: 40, scope: !9712)
!9727 = !DILocation(line: 213, column: 66, scope: !9712)
!9728 = !DILocation(line: 213, column: 5, scope: !9712)
!9729 = !DILocation(line: 214, column: 17, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9712, file: !1825, line: 213, column: 78)
!9731 = !DILocation(line: 215, column: 18, scope: !9730)
!9732 = !DILocation(line: 216, column: 15, scope: !9730)
!9733 = !DILocation(line: 217, column: 48, scope: !9730)
!9734 = !DILocation(line: 217, column: 85, scope: !9730)
!9735 = !DILocation(line: 217, column: 61, scope: !9730)
!9736 = distinct !{!9736, !9728, !9737}
!9737 = !DILocation(line: 218, column: 5, scope: !9712)
!9738 = !DILocation(line: 221, column: 53, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !1825, line: 220, column: 37)
!9740 = distinct !DILexicalBlock(scope: !9712, file: !1825, line: 220, column: 9)
!9741 = !DILocation(line: 221, column: 29, scope: !9739)
!9742 = !DILocation(line: 221, column: 17, scope: !9739)
!9743 = !DILocation(line: 222, column: 5, scope: !9739)
!9744 = !DILocation(line: 0, scope: !9740)
!9745 = !DILocation(line: 225, column: 5, scope: !9712)
!9746 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1825, file: !1825, line: 232, type: !3355, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9747 = !DILocation(line: 238, column: 5, scope: !9746)
!9748 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1825, file: !1825, line: 243, type: !3355, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9749 = !DILocation(line: 245, column: 5, scope: !9748)
!9750 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1825, file: !1825, line: 249, type: !3355, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9751 = !DILocation(line: 254, column: 5, scope: !9750)
!9752 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1825, file: !1825, line: 259, type: !3355, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9753 = !DILocation(line: 261, column: 5, scope: !9752)
!9754 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1825, file: !1825, line: 271, type: !5820, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9755)
!9755 = !{!9756, !9757}
!9756 = !DILocalVariable(name: "delay", arg: 1, scope: !9754, file: !1825, line: 271, type: !175)
!9757 = !DILocalVariable(name: "ret", scope: !9754, file: !1825, line: 276, type: !2521)
!9758 = !DILocation(line: 0, scope: !9754)
!9759 = !DILocation(line: 277, column: 11, scope: !9754)
!9760 = !DILocation(line: 278, column: 13, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9754, file: !1825, line: 278, column: 9)
!9762 = !DILocation(line: 278, column: 9, scope: !9754)
!9763 = !DILocation(line: 279, column: 9, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1825, line: 279, column: 9)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !1825, line: 279, column: 9)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !1825, line: 279, column: 9)
!9767 = distinct !DILexicalBlock(scope: !9761, file: !1825, line: 278, column: 35)
!9768 = !DILocation(line: 282, column: 1, scope: !9754)
!9769 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2507, file: !2507, line: 58, type: !9770, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9772)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{null, !2139, !79, !2139, null}
!9772 = !{!9773, !9774, !9775, !9776, !9785}
!9773 = !DILocalVariable(name: "func", arg: 1, scope: !9769, file: !2507, line: 58, type: !2139)
!9774 = !DILocalVariable(name: "line", arg: 2, scope: !9769, file: !2507, line: 58, type: !79)
!9775 = !DILocalVariable(name: "message", arg: 3, scope: !9769, file: !2507, line: 58, type: !2139)
!9776 = !DILocalVariable(name: "ap", scope: !9769, file: !2507, line: 60, type: !9777)
!9777 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !9778, line: 46, baseType: !9779)
!9778 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!9779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !9780, line: 32, baseType: !9781)
!9780 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!9781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2507, baseType: !9782)
!9782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !9783)
!9783 = !{!9784}
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !9782, file: !2507, line: 60, baseType: !194, size: 32)
!9785 = !DILocalVariable(name: "mask", scope: !9769, file: !2507, line: 62, type: !175)
!9786 = !DILocation(line: 0, scope: !9769)
!9787 = !DILocation(line: 60, column: 5, scope: !9769)
!9788 = !DILocation(line: 60, column: 13, scope: !9769)
!9789 = !DILocation(line: 62, column: 5, scope: !9769)
!9790 = !DILocation(line: 63, column: 5, scope: !9769)
!9791 = !DILocation(line: 65, column: 5, scope: !9769)
!9792 = !DILocation(line: 66, column: 5, scope: !9769)
!9793 = !DILocation(line: 67, column: 5, scope: !9769)
!9794 = !DILocation(line: 69, column: 37, scope: !9769)
!9795 = !DILocation(line: 69, column: 5, scope: !9769)
!9796 = !DILocation(line: 71, column: 1, scope: !9769)
!9797 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2507, file: !2507, line: 72, type: !9770, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9798)
!9798 = !{!9799, !9800, !9801, !9802, !9803}
!9799 = !DILocalVariable(name: "func", arg: 1, scope: !9797, file: !2507, line: 72, type: !2139)
!9800 = !DILocalVariable(name: "line", arg: 2, scope: !9797, file: !2507, line: 72, type: !79)
!9801 = !DILocalVariable(name: "message", arg: 3, scope: !9797, file: !2507, line: 72, type: !2139)
!9802 = !DILocalVariable(name: "ap", scope: !9797, file: !2507, line: 74, type: !9777)
!9803 = !DILocalVariable(name: "mask", scope: !9797, file: !2507, line: 76, type: !175)
!9804 = !DILocation(line: 0, scope: !9797)
!9805 = !DILocation(line: 74, column: 5, scope: !9797)
!9806 = !DILocation(line: 74, column: 13, scope: !9797)
!9807 = !DILocation(line: 76, column: 5, scope: !9797)
!9808 = !DILocation(line: 77, column: 5, scope: !9797)
!9809 = !DILocation(line: 79, column: 5, scope: !9797)
!9810 = !DILocation(line: 80, column: 5, scope: !9797)
!9811 = !DILocation(line: 81, column: 5, scope: !9797)
!9812 = !DILocation(line: 83, column: 37, scope: !9797)
!9813 = !DILocation(line: 83, column: 5, scope: !9797)
!9814 = !DILocation(line: 85, column: 1, scope: !9797)
!9815 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2507, file: !2507, line: 86, type: !9770, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9816)
!9816 = !{!9817, !9818, !9819, !9820, !9821}
!9817 = !DILocalVariable(name: "func", arg: 1, scope: !9815, file: !2507, line: 86, type: !2139)
!9818 = !DILocalVariable(name: "line", arg: 2, scope: !9815, file: !2507, line: 86, type: !79)
!9819 = !DILocalVariable(name: "message", arg: 3, scope: !9815, file: !2507, line: 86, type: !2139)
!9820 = !DILocalVariable(name: "ap", scope: !9815, file: !2507, line: 88, type: !9777)
!9821 = !DILocalVariable(name: "mask", scope: !9815, file: !2507, line: 90, type: !175)
!9822 = !DILocation(line: 0, scope: !9815)
!9823 = !DILocation(line: 88, column: 5, scope: !9815)
!9824 = !DILocation(line: 88, column: 13, scope: !9815)
!9825 = !DILocation(line: 90, column: 5, scope: !9815)
!9826 = !DILocation(line: 91, column: 5, scope: !9815)
!9827 = !DILocation(line: 93, column: 5, scope: !9815)
!9828 = !DILocation(line: 94, column: 5, scope: !9815)
!9829 = !DILocation(line: 95, column: 5, scope: !9815)
!9830 = !DILocation(line: 97, column: 37, scope: !9815)
!9831 = !DILocation(line: 97, column: 5, scope: !9815)
!9832 = !DILocation(line: 99, column: 1, scope: !9815)
!9833 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2507, file: !2507, line: 101, type: !9834, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !9838)
!9834 = !DISubroutineType(types: !9835)
!9835 = !{null, !2139, !79, !2139, !9836, !79, null}
!9836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9837, size: 32)
!9837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!9838 = !{!9839, !9840, !9841, !9842, !9843}
!9839 = !DILocalVariable(name: "func", arg: 1, scope: !9833, file: !2507, line: 101, type: !2139)
!9840 = !DILocalVariable(name: "line", arg: 2, scope: !9833, file: !2507, line: 101, type: !79)
!9841 = !DILocalVariable(name: "message", arg: 3, scope: !9833, file: !2507, line: 101, type: !2139)
!9842 = !DILocalVariable(name: "data", arg: 4, scope: !9833, file: !2507, line: 101, type: !9836)
!9843 = !DILocalVariable(name: "length", arg: 5, scope: !9833, file: !2507, line: 101, type: !79)
!9844 = !DILocation(line: 0, scope: !9833)
!9845 = !DILocation(line: 103, column: 1, scope: !9833)
!9846 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !1905, file: !1905, line: 87, type: !3103, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9847)
!9847 = !{!9848, !9849}
!9848 = !DILocalVariable(name: "bank_no", arg: 1, scope: !9846, file: !1905, line: 87, type: !175)
!9849 = !DILocalVariable(name: "value", scope: !9846, file: !1905, line: 89, type: !175)
!9850 = !DILocation(line: 0, scope: !9846)
!9851 = !DILocation(line: 91, column: 41, scope: !9846)
!9852 = !DILocation(line: 91, column: 5, scope: !9846)
!9853 = !DILocation(line: 91, column: 19, scope: !9846)
!9854 = !DILocation(line: 91, column: 31, scope: !9846)
!9855 = !DILocation(line: 92, column: 77, scope: !9846)
!9856 = !DILocation(line: 92, column: 60, scope: !9846)
!9857 = !DILocation(line: 92, column: 31, scope: !9846)
!9858 = !DILocation(line: 94, column: 5, scope: !9846)
!9859 = !DILocation(line: 94, column: 27, scope: !9846)
!9860 = !DILocation(line: 94, column: 39, scope: !9846)
!9861 = !DILocation(line: 94, column: 65, scope: !9846)
!9862 = distinct !{!9862, !9858, !9863}
!9863 = !DILocation(line: 94, column: 70, scope: !9846)
!9864 = !DILocation(line: 96, column: 29, scope: !9846)
!9865 = !DILocation(line: 96, column: 64, scope: !9846)
!9866 = !DILocation(line: 98, column: 5, scope: !9846)
!9867 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !1905, file: !1905, line: 102, type: !9868, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9870)
!9868 = !DISubroutineType(types: !9869)
!9869 = !{null, !175, !175}
!9870 = !{!9871, !9872}
!9871 = !DILocalVariable(name: "bank_no", arg: 1, scope: !9867, file: !1905, line: 102, type: !175)
!9872 = !DILocalVariable(name: "value", arg: 2, scope: !9867, file: !1905, line: 102, type: !175)
!9873 = !DILocation(line: 0, scope: !9867)
!9874 = !DILocation(line: 106, column: 40, scope: !9867)
!9875 = !DILocation(line: 106, column: 77, scope: !9867)
!9876 = !DILocation(line: 106, column: 102, scope: !9867)
!9877 = !DILocation(line: 106, column: 5, scope: !9867)
!9878 = !DILocation(line: 106, column: 19, scope: !9867)
!9879 = !DILocation(line: 106, column: 31, scope: !9867)
!9880 = !DILocation(line: 107, column: 77, scope: !9867)
!9881 = !DILocation(line: 107, column: 60, scope: !9867)
!9882 = !DILocation(line: 107, column: 31, scope: !9867)
!9883 = !DILocation(line: 109, column: 5, scope: !9867)
!9884 = !DILocation(line: 109, column: 27, scope: !9867)
!9885 = !DILocation(line: 109, column: 39, scope: !9867)
!9886 = !DILocation(line: 109, column: 65, scope: !9867)
!9887 = distinct !{!9887, !9883, !9888}
!9888 = !DILocation(line: 109, column: 70, scope: !9867)
!9889 = !DILocation(line: 111, column: 5, scope: !9867)
!9890 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !1905, file: !1905, line: 114, type: !208, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!9891 = !DILocation(line: 117, column: 36, scope: !9890)
!9892 = !DILocation(line: 117, column: 18, scope: !9890)
!9893 = !DILocation(line: 118, column: 37, scope: !9890)
!9894 = !DILocation(line: 118, column: 18, scope: !9890)
!9895 = !DILocation(line: 119, column: 37, scope: !9890)
!9896 = !DILocation(line: 119, column: 19, scope: !9890)
!9897 = !DILocation(line: 120, column: 37, scope: !9890)
!9898 = !DILocation(line: 120, column: 19, scope: !9890)
!9899 = !DILocation(line: 121, column: 37, scope: !9890)
!9900 = !DILocation(line: 121, column: 19, scope: !9890)
!9901 = !DILocation(line: 122, column: 37, scope: !9890)
!9902 = !DILocation(line: 122, column: 19, scope: !9890)
!9903 = !DILocation(line: 123, column: 37, scope: !9890)
!9904 = !DILocation(line: 123, column: 19, scope: !9890)
!9905 = !DILocation(line: 125, column: 37, scope: !9890)
!9906 = !DILocation(line: 125, column: 19, scope: !9890)
!9907 = !DILocation(line: 126, column: 37, scope: !9890)
!9908 = !DILocation(line: 126, column: 19, scope: !9890)
!9909 = !DILocation(line: 127, column: 37, scope: !9890)
!9910 = !DILocation(line: 127, column: 19, scope: !9890)
!9911 = !DILocation(line: 128, column: 37, scope: !9890)
!9912 = !DILocation(line: 128, column: 19, scope: !9890)
!9913 = !DILocation(line: 130, column: 36, scope: !9890)
!9914 = !DILocation(line: 130, column: 18, scope: !9890)
!9915 = !DILocation(line: 131, column: 36, scope: !9890)
!9916 = !DILocation(line: 131, column: 18, scope: !9890)
!9917 = !DILocation(line: 133, column: 5, scope: !9890)
!9918 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !1905, file: !1905, line: 140, type: !9919, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!9919 = !DISubroutineType(types: !9920)
!9920 = !{!79}
!9921 = !DILocation(line: 144, column: 5, scope: !9918)
!9922 = !DILocation(line: 144, column: 19, scope: !9918)
!9923 = !DILocation(line: 144, column: 28, scope: !9918)
!9924 = !DILocation(line: 147, column: 19, scope: !9918)
!9925 = !DILocation(line: 147, column: 28, scope: !9918)
!9926 = !DILocation(line: 150, column: 19, scope: !9918)
!9927 = !DILocation(line: 150, column: 28, scope: !9918)
!9928 = !DILocation(line: 152, column: 5, scope: !9918)
!9929 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !1905, file: !1905, line: 157, type: !6720, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9930)
!9930 = !{!9931, !9932, !9933, !9934, !9935, !9936}
!9931 = !DILocalVariable(name: "mbist_src", scope: !9929, file: !1905, line: 159, type: !175)
!9932 = !DILocalVariable(name: "mbist_len", scope: !9929, file: !1905, line: 159, type: !175)
!9933 = !DILocalVariable(name: "mbist_data", scope: !9929, file: !1905, line: 159, type: !3076)
!9934 = !DILocalVariable(name: "i", scope: !9929, file: !1905, line: 160, type: !175)
!9935 = !DILocalVariable(name: "bist_data_inv", scope: !9929, file: !1905, line: 160, type: !175)
!9936 = !DILocalVariable(name: "bist_data_random", scope: !9929, file: !1905, line: 160, type: !175)
!9937 = !DILocation(line: 159, column: 36, scope: !9929)
!9938 = !DILocation(line: 0, scope: !9929)
!9939 = !DILocation(line: 165, column: 5, scope: !9929)
!9940 = !DILocation(line: 165, column: 19, scope: !9929)
!9941 = !DILocation(line: 165, column: 30, scope: !9929)
!9942 = !DILocation(line: 166, column: 5, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9929, file: !1905, line: 166, column: 5)
!9944 = !DILocation(line: 167, column: 9, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !1905, line: 167, column: 9)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !1905, line: 166, column: 66)
!9947 = distinct !DILexicalBlock(scope: !9943, file: !1905, line: 166, column: 5)
!9948 = !DILocation(line: 168, column: 13, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !1905, line: 168, column: 13)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !1905, line: 167, column: 34)
!9951 = distinct !DILexicalBlock(scope: !9945, file: !1905, line: 167, column: 9)
!9952 = !DILocation(line: 168, column: 57, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9949, file: !1905, line: 168, column: 13)
!9954 = distinct !{!9954, !9948, !9955}
!9955 = !DILocation(line: 183, column: 13, scope: !9949)
!9956 = !DILocation(line: 170, column: 42, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9953, file: !1905, line: 168, column: 83)
!9958 = !DILocation(line: 172, column: 42, scope: !9957)
!9959 = !DILocation(line: 174, column: 45, scope: !9957)
!9960 = !DILocation(line: 174, column: 59, scope: !9957)
!9961 = !DILocation(line: 174, column: 154, scope: !9957)
!9962 = !DILocation(line: 174, column: 87, scope: !9957)
!9963 = !DILocation(line: 174, column: 134, scope: !9957)
!9964 = !DILocation(line: 174, column: 42, scope: !9957)
!9965 = !DILocation(line: 175, column: 42, scope: !9957)
!9966 = !DILocation(line: 177, column: 17, scope: !9957)
!9967 = !DILocation(line: 177, column: 39, scope: !9957)
!9968 = !DILocation(line: 177, column: 50, scope: !9957)
!9969 = !DILocation(line: 177, column: 71, scope: !9957)
!9970 = distinct !{!9970, !9966, !9971}
!9971 = !DILocation(line: 177, column: 78, scope: !9957)
!9972 = !DILocation(line: 179, column: 36, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9957, file: !1905, line: 179, column: 21)
!9974 = !DILocation(line: 179, column: 47, scope: !9973)
!9975 = !DILocation(line: 179, column: 69, scope: !9973)
!9976 = !DILocation(line: 168, column: 79, scope: !9953)
!9977 = !DILocation(line: 179, column: 21, scope: !9957)
!9978 = !DILocation(line: 167, column: 30, scope: !9951)
!9979 = !DILocation(line: 167, column: 23, scope: !9951)
!9980 = distinct !{!9980, !9944, !9981}
!9981 = !DILocation(line: 184, column: 9, scope: !9945)
!9982 = !DILocation(line: 166, column: 62, scope: !9947)
!9983 = !DILocation(line: 166, column: 43, scope: !9947)
!9984 = distinct !{!9984, !9942, !9985}
!9985 = !DILocation(line: 185, column: 5, scope: !9943)
!9986 = !DILocation(line: 189, column: 1, scope: !9929)
!9987 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !1905, file: !1905, line: 190, type: !6720, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!9988 = !DILocation(line: 192, column: 9, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9987, file: !1905, line: 192, column: 9)
!9990 = !DILocation(line: 192, column: 26, scope: !9989)
!9991 = !DILocation(line: 0, scope: !9987)
!9992 = !DILocation(line: 197, column: 1, scope: !9987)
!9993 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !1905, file: !1905, line: 201, type: !208, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9994)
!9994 = !{!9995, !9996}
!9995 = !DILocalVariable(name: "dqy_in_del", scope: !9993, file: !1905, line: 203, type: !858)
!9996 = !DILocalVariable(name: "dqs_in_del", scope: !9993, file: !1905, line: 204, type: !858)
!9997 = !DILocation(line: 0, scope: !9993)
!9998 = !DILocation(line: 206, column: 5, scope: !9993)
!9999 = !DILocation(line: 206, column: 19, scope: !9993)
!10000 = !DILocation(line: 206, column: 28, scope: !9993)
!10001 = !DILocation(line: 207, column: 19, scope: !9993)
!10002 = !DILocation(line: 207, column: 28, scope: !9993)
!10003 = !DILocation(line: 208, column: 19, scope: !9993)
!10004 = !DILocation(line: 208, column: 28, scope: !9993)
!10005 = !DILocation(line: 209, column: 19, scope: !9993)
!10006 = !DILocation(line: 209, column: 28, scope: !9993)
!10007 = !DILocation(line: 212, column: 23, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !1905, line: 211, column: 78)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !1905, line: 211, column: 5)
!10010 = distinct !DILexicalBlock(scope: !9993, file: !1905, line: 211, column: 5)
!10011 = !DILocation(line: 212, column: 32, scope: !10008)
!10012 = !DILocation(line: 213, column: 23, scope: !10008)
!10013 = !DILocation(line: 213, column: 32, scope: !10008)
!10014 = !DILocation(line: 215, column: 19, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10008, file: !1905, line: 215, column: 13)
!10016 = !DILocation(line: 215, column: 15, scope: !10015)
!10017 = !DILocation(line: 215, column: 13, scope: !10008)
!10018 = !DILocation(line: 211, column: 40, scope: !10009)
!10019 = !DILocation(line: 211, column: 5, scope: !10010)
!10020 = distinct !{!10020, !10019, !10021}
!10021 = !DILocation(line: 218, column: 5, scope: !10010)
!10022 = !DILocation(line: 211, column: 57, scope: !10009)
!10023 = !DILocation(line: 212, column: 9, scope: !10008)
!10024 = !DILocation(line: 212, column: 45, scope: !10008)
!10025 = !DILocation(line: 212, column: 83, scope: !10008)
!10026 = !DILocation(line: 212, column: 121, scope: !10008)
!10027 = !DILocation(line: 212, column: 70, scope: !10008)
!10028 = !DILocation(line: 212, column: 108, scope: !10008)
!10029 = !DILocation(line: 212, column: 146, scope: !10008)
!10030 = !DILocation(line: 222, column: 49, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !1905, line: 221, column: 84)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !1905, line: 221, column: 9)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !1905, line: 221, column: 9)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !1905, line: 220, column: 25)
!10035 = distinct !DILexicalBlock(scope: !9993, file: !1905, line: 220, column: 9)
!10036 = !DILocation(line: 222, column: 13, scope: !10031)
!10037 = !DILocation(line: 222, column: 27, scope: !10031)
!10038 = !DILocation(line: 222, column: 36, scope: !10031)
!10039 = !DILocation(line: 224, column: 23, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10031, file: !1905, line: 224, column: 17)
!10041 = !DILocation(line: 224, column: 19, scope: !10040)
!10042 = !DILocation(line: 224, column: 17, scope: !10031)
!10043 = distinct !{!10043, !10044, !10045}
!10044 = !DILocation(line: 221, column: 9, scope: !10033)
!10045 = !DILocation(line: 227, column: 9, scope: !10033)
!10046 = !DILocation(line: 230, column: 1, scope: !9993)
!10047 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !1905, file: !1905, line: 253, type: !208, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10048 = !DILocation(line: 257, column: 26, scope: !10047)
!10049 = !DILocation(line: 259, column: 5, scope: !10047)
!10050 = !DILocation(line: 259, column: 19, scope: !10047)
!10051 = !DILocation(line: 259, column: 29, scope: !10047)
!10052 = !DILocation(line: 260, column: 5, scope: !10047)
!10053 = !DILocation(line: 260, column: 27, scope: !10047)
!10054 = !DILocation(line: 260, column: 93, scope: !10047)
!10055 = distinct !{!10055, !10052, !10056}
!10056 = !DILocation(line: 260, column: 98, scope: !10047)
!10057 = !DILocation(line: 261, column: 29, scope: !10047)
!10058 = !DILocation(line: 262, column: 5, scope: !10047)
!10059 = !DILocation(line: 262, column: 27, scope: !10047)
!10060 = !DILocation(line: 262, column: 93, scope: !10047)
!10061 = distinct !{!10061, !10058, !10062}
!10062 = !DILocation(line: 262, column: 98, scope: !10047)
!10063 = !DILocation(line: 264, column: 42, scope: !10047)
!10064 = !DILocation(line: 265, column: 48, scope: !10047)
!10065 = !DILocation(line: 267, column: 5, scope: !10047)
!10066 = !DILocation(line: 267, column: 27, scope: !10047)
!10067 = !DILocation(line: 267, column: 39, scope: !10047)
!10068 = !DILocation(line: 267, column: 65, scope: !10047)
!10069 = distinct !{!10069, !10065, !10070}
!10070 = !DILocation(line: 267, column: 70, scope: !10047)
!10071 = !DILocation(line: 269, column: 5, scope: !10047)
!10072 = !DILocation(line: 273, column: 8, scope: !10047)
!10073 = !DILocation(line: 275, column: 5, scope: !10047)
!10074 = !DILocation(line: 275, column: 27, scope: !10047)
!10075 = !DILocation(line: 275, column: 39, scope: !10047)
!10076 = !DILocation(line: 275, column: 65, scope: !10047)
!10077 = distinct !{!10077, !10073, !10078}
!10078 = !DILocation(line: 275, column: 70, scope: !10047)
!10079 = !DILocation(line: 278, column: 9, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10047, file: !1905, line: 278, column: 9)
!10081 = !DILocation(line: 278, column: 44, scope: !10080)
!10082 = !DILocation(line: 278, column: 9, scope: !10047)
!10083 = !DILocation(line: 279, column: 13, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !1905, line: 279, column: 12)
!10085 = distinct !DILexicalBlock(scope: !10080, file: !1905, line: 278, column: 55)
!10086 = !DILocation(line: 279, column: 48, scope: !10084)
!10087 = !DILocation(line: 279, column: 56, scope: !10084)
!10088 = !DILocation(line: 0, scope: !10084)
!10089 = !DILocation(line: 288, column: 1, scope: !10047)
!10090 = distinct !DISubprogram(name: "custom_setEMI", scope: !1905, file: !1905, line: 294, type: !10091, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10091 = !DISubroutineType(types: !10092)
!10092 = !{!1172}
!10093 = !DILocation(line: 298, column: 5, scope: !10090)
!10094 = !DILocation(line: 300, column: 5, scope: !10090)
!10095 = !DILocation(line: 302, column: 20, scope: !10090)
!10096 = !DILocation(line: 302, column: 18, scope: !10090)
!10097 = !DILocation(line: 303, column: 20, scope: !10090)
!10098 = !DILocation(line: 303, column: 18, scope: !10090)
!10099 = !DILocation(line: 304, column: 20, scope: !10090)
!10100 = !DILocation(line: 304, column: 18, scope: !10090)
!10101 = !DILocation(line: 307, column: 5, scope: !10090)
!10102 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !1905, file: !1905, line: 312, type: !10091, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10103 = !DILocation(line: 319, column: 29, scope: !10102)
!10104 = !DILocation(line: 319, column: 5, scope: !10102)
!10105 = !DILocation(line: 319, column: 19, scope: !10102)
!10106 = !DILocation(line: 319, column: 27, scope: !10102)
!10107 = !DILocation(line: 320, column: 29, scope: !10102)
!10108 = !DILocation(line: 320, column: 19, scope: !10102)
!10109 = !DILocation(line: 320, column: 27, scope: !10102)
!10110 = !DILocation(line: 322, column: 30, scope: !10102)
!10111 = !DILocation(line: 322, column: 19, scope: !10102)
!10112 = !DILocation(line: 322, column: 28, scope: !10102)
!10113 = !DILocation(line: 324, column: 30, scope: !10102)
!10114 = !DILocation(line: 324, column: 19, scope: !10102)
!10115 = !DILocation(line: 324, column: 28, scope: !10102)
!10116 = !DILocation(line: 326, column: 31, scope: !10102)
!10117 = !DILocation(line: 326, column: 19, scope: !10102)
!10118 = !DILocation(line: 326, column: 29, scope: !10102)
!10119 = !DILocation(line: 327, column: 31, scope: !10102)
!10120 = !DILocation(line: 327, column: 19, scope: !10102)
!10121 = !DILocation(line: 327, column: 29, scope: !10102)
!10122 = !DILocation(line: 332, column: 30, scope: !10102)
!10123 = !DILocation(line: 332, column: 19, scope: !10102)
!10124 = !DILocation(line: 332, column: 28, scope: !10102)
!10125 = !DILocation(line: 333, column: 30, scope: !10102)
!10126 = !DILocation(line: 333, column: 19, scope: !10102)
!10127 = !DILocation(line: 333, column: 28, scope: !10102)
!10128 = !DILocation(line: 334, column: 30, scope: !10102)
!10129 = !DILocation(line: 334, column: 19, scope: !10102)
!10130 = !DILocation(line: 334, column: 28, scope: !10102)
!10131 = !DILocation(line: 336, column: 30, scope: !10102)
!10132 = !DILocation(line: 336, column: 19, scope: !10102)
!10133 = !DILocation(line: 336, column: 28, scope: !10102)
!10134 = !DILocation(line: 337, column: 30, scope: !10102)
!10135 = !DILocation(line: 337, column: 19, scope: !10102)
!10136 = !DILocation(line: 337, column: 28, scope: !10102)
!10137 = !DILocation(line: 338, column: 30, scope: !10102)
!10138 = !DILocation(line: 338, column: 19, scope: !10102)
!10139 = !DILocation(line: 338, column: 28, scope: !10102)
!10140 = !DILocation(line: 339, column: 30, scope: !10102)
!10141 = !DILocation(line: 339, column: 19, scope: !10102)
!10142 = !DILocation(line: 339, column: 28, scope: !10102)
!10143 = !DILocation(line: 341, column: 5, scope: !10102)
!10144 = !DILocation(line: 345, column: 5, scope: !10102)
!10145 = !DILocation(line: 345, column: 19, scope: !10102)
!10146 = !DILocation(line: 345, column: 28, scope: !10102)
!10147 = !DILocation(line: 346, column: 5, scope: !10102)
!10148 = !DILocation(line: 346, column: 28, scope: !10102)
!10149 = !DILocation(line: 346, column: 82, scope: !10102)
!10150 = distinct !{!10150, !10147, !10151}
!10151 = !DILocation(line: 346, column: 87, scope: !10102)
!10152 = !DILocation(line: 347, column: 28, scope: !10102)
!10153 = !DILocation(line: 348, column: 5, scope: !10102)
!10154 = !DILocation(line: 348, column: 28, scope: !10102)
!10155 = !DILocation(line: 348, column: 82, scope: !10102)
!10156 = distinct !{!10156, !10153, !10157}
!10157 = !DILocation(line: 348, column: 87, scope: !10102)
!10158 = !DILocation(line: 349, column: 28, scope: !10102)
!10159 = !DILocation(line: 351, column: 5, scope: !10102)
!10160 = !DILocation(line: 353, column: 5, scope: !10102)
!10161 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !1905, file: !1905, line: 358, type: !208, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10162 = !DILocation(line: 361, column: 36, scope: !10161)
!10163 = !DILocation(line: 361, column: 50, scope: !10161)
!10164 = !DILocation(line: 361, column: 34, scope: !10161)
!10165 = !DILocation(line: 362, column: 50, scope: !10161)
!10166 = !DILocation(line: 362, column: 34, scope: !10161)
!10167 = !DILocation(line: 363, column: 50, scope: !10161)
!10168 = !DILocation(line: 363, column: 34, scope: !10161)
!10169 = !DILocation(line: 364, column: 50, scope: !10161)
!10170 = !DILocation(line: 364, column: 34, scope: !10161)
!10171 = !DILocation(line: 365, column: 50, scope: !10161)
!10172 = !DILocation(line: 365, column: 34, scope: !10161)
!10173 = !DILocation(line: 366, column: 50, scope: !10161)
!10174 = !DILocation(line: 366, column: 34, scope: !10161)
!10175 = !DILocation(line: 367, column: 50, scope: !10161)
!10176 = !DILocation(line: 367, column: 34, scope: !10161)
!10177 = !DILocation(line: 368, column: 50, scope: !10161)
!10178 = !DILocation(line: 368, column: 34, scope: !10161)
!10179 = !DILocation(line: 369, column: 50, scope: !10161)
!10180 = !DILocation(line: 369, column: 34, scope: !10161)
!10181 = !DILocation(line: 370, column: 50, scope: !10161)
!10182 = !DILocation(line: 370, column: 34, scope: !10161)
!10183 = !DILocation(line: 371, column: 50, scope: !10161)
!10184 = !DILocation(line: 371, column: 34, scope: !10161)
!10185 = !DILocation(line: 372, column: 50, scope: !10161)
!10186 = !DILocation(line: 372, column: 34, scope: !10161)
!10187 = !DILocation(line: 373, column: 51, scope: !10161)
!10188 = !DILocation(line: 373, column: 35, scope: !10161)
!10189 = !DILocation(line: 374, column: 51, scope: !10161)
!10190 = !DILocation(line: 374, column: 35, scope: !10161)
!10191 = !DILocation(line: 375, column: 50, scope: !10161)
!10192 = !DILocation(line: 375, column: 34, scope: !10161)
!10193 = !DILocation(line: 376, column: 50, scope: !10161)
!10194 = !DILocation(line: 376, column: 34, scope: !10161)
!10195 = !DILocation(line: 377, column: 50, scope: !10161)
!10196 = !DILocation(line: 377, column: 34, scope: !10161)
!10197 = !DILocation(line: 378, column: 50, scope: !10161)
!10198 = !DILocation(line: 378, column: 34, scope: !10161)
!10199 = !DILocation(line: 379, column: 50, scope: !10161)
!10200 = !DILocation(line: 379, column: 34, scope: !10161)
!10201 = !DILocation(line: 380, column: 50, scope: !10161)
!10202 = !DILocation(line: 380, column: 34, scope: !10161)
!10203 = !DILocation(line: 382, column: 1, scope: !10161)
!10204 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !1905, file: !1905, line: 384, type: !208, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10205 = !DILocation(line: 387, column: 5, scope: !10204)
!10206 = !DILocation(line: 387, column: 27, scope: !10204)
!10207 = !DILocation(line: 387, column: 36, scope: !10204)
!10208 = !DILocation(line: 387, column: 76, scope: !10204)
!10209 = distinct !{!10209, !10205, !10210}
!10210 = !DILocation(line: 387, column: 84, scope: !10204)
!10211 = !DILocation(line: 388, column: 50, scope: !10204)
!10212 = !DILocation(line: 388, column: 19, scope: !10204)
!10213 = !DILocation(line: 388, column: 28, scope: !10204)
!10214 = !DILocation(line: 389, column: 50, scope: !10204)
!10215 = !DILocation(line: 389, column: 19, scope: !10204)
!10216 = !DILocation(line: 389, column: 28, scope: !10204)
!10217 = !DILocation(line: 390, column: 50, scope: !10204)
!10218 = !DILocation(line: 390, column: 19, scope: !10204)
!10219 = !DILocation(line: 390, column: 28, scope: !10204)
!10220 = !DILocation(line: 391, column: 50, scope: !10204)
!10221 = !DILocation(line: 391, column: 19, scope: !10204)
!10222 = !DILocation(line: 391, column: 28, scope: !10204)
!10223 = !DILocation(line: 392, column: 50, scope: !10204)
!10224 = !DILocation(line: 392, column: 19, scope: !10204)
!10225 = !DILocation(line: 392, column: 28, scope: !10204)
!10226 = !DILocation(line: 393, column: 50, scope: !10204)
!10227 = !DILocation(line: 393, column: 19, scope: !10204)
!10228 = !DILocation(line: 393, column: 28, scope: !10204)
!10229 = !DILocation(line: 394, column: 51, scope: !10204)
!10230 = !DILocation(line: 394, column: 19, scope: !10204)
!10231 = !DILocation(line: 394, column: 29, scope: !10204)
!10232 = !DILocation(line: 395, column: 51, scope: !10204)
!10233 = !DILocation(line: 395, column: 19, scope: !10204)
!10234 = !DILocation(line: 395, column: 29, scope: !10204)
!10235 = !DILocation(line: 396, column: 50, scope: !10204)
!10236 = !DILocation(line: 396, column: 19, scope: !10204)
!10237 = !DILocation(line: 396, column: 28, scope: !10204)
!10238 = !DILocation(line: 397, column: 50, scope: !10204)
!10239 = !DILocation(line: 397, column: 19, scope: !10204)
!10240 = !DILocation(line: 397, column: 28, scope: !10204)
!10241 = !DILocation(line: 398, column: 50, scope: !10204)
!10242 = !DILocation(line: 398, column: 19, scope: !10204)
!10243 = !DILocation(line: 398, column: 28, scope: !10204)
!10244 = !DILocation(line: 399, column: 50, scope: !10204)
!10245 = !DILocation(line: 399, column: 19, scope: !10204)
!10246 = !DILocation(line: 399, column: 28, scope: !10204)
!10247 = !DILocation(line: 400, column: 50, scope: !10204)
!10248 = !DILocation(line: 400, column: 19, scope: !10204)
!10249 = !DILocation(line: 400, column: 28, scope: !10204)
!10250 = !DILocation(line: 401, column: 50, scope: !10204)
!10251 = !DILocation(line: 401, column: 19, scope: !10204)
!10252 = !DILocation(line: 401, column: 28, scope: !10204)
!10253 = !DILocation(line: 402, column: 50, scope: !10204)
!10254 = !DILocation(line: 402, column: 19, scope: !10204)
!10255 = !DILocation(line: 402, column: 28, scope: !10204)
!10256 = !DILocation(line: 403, column: 50, scope: !10204)
!10257 = !DILocation(line: 403, column: 19, scope: !10204)
!10258 = !DILocation(line: 403, column: 28, scope: !10204)
!10259 = !DILocation(line: 404, column: 50, scope: !10204)
!10260 = !DILocation(line: 404, column: 19, scope: !10204)
!10261 = !DILocation(line: 404, column: 28, scope: !10204)
!10262 = !DILocation(line: 405, column: 50, scope: !10204)
!10263 = !DILocation(line: 405, column: 19, scope: !10204)
!10264 = !DILocation(line: 405, column: 28, scope: !10204)
!10265 = !DILocation(line: 406, column: 50, scope: !10204)
!10266 = !DILocation(line: 406, column: 19, scope: !10204)
!10267 = !DILocation(line: 406, column: 28, scope: !10204)
!10268 = !DILocation(line: 408, column: 1, scope: !10204)
!10269 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !1905, file: !1905, line: 410, type: !208, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10270 = !DILocation(line: 413, column: 29, scope: !10269)
!10271 = !DILocation(line: 413, column: 43, scope: !10269)
!10272 = !DILocation(line: 413, column: 51, scope: !10269)
!10273 = !DILocation(line: 413, column: 27, scope: !10269)
!10274 = !DILocation(line: 416, column: 19, scope: !10269)
!10275 = !DILocation(line: 416, column: 29, scope: !10269)
!10276 = !DILocation(line: 417, column: 5, scope: !10269)
!10277 = !DILocation(line: 417, column: 27, scope: !10269)
!10278 = !DILocation(line: 417, column: 93, scope: !10269)
!10279 = distinct !{!10279, !10276, !10280}
!10280 = !DILocation(line: 417, column: 98, scope: !10269)
!10281 = !DILocation(line: 418, column: 29, scope: !10269)
!10282 = !DILocation(line: 419, column: 5, scope: !10269)
!10283 = !DILocation(line: 419, column: 27, scope: !10269)
!10284 = !DILocation(line: 419, column: 93, scope: !10269)
!10285 = distinct !{!10285, !10282, !10286}
!10286 = !DILocation(line: 419, column: 98, scope: !10269)
!10287 = !DILocation(line: 421, column: 5, scope: !10269)
!10288 = !DILocation(line: 422, column: 5, scope: !10269)
!10289 = !DILocation(line: 422, column: 19, scope: !10269)
!10290 = !DILocation(line: 422, column: 28, scope: !10269)
!10291 = !DILocation(line: 423, column: 5, scope: !10269)
!10292 = !DILocation(line: 423, column: 28, scope: !10269)
!10293 = !DILocation(line: 423, column: 82, scope: !10269)
!10294 = distinct !{!10294, !10291, !10295}
!10295 = !DILocation(line: 423, column: 87, scope: !10269)
!10296 = !DILocation(line: 424, column: 28, scope: !10269)
!10297 = !DILocation(line: 425, column: 5, scope: !10269)
!10298 = !DILocation(line: 425, column: 28, scope: !10269)
!10299 = !DILocation(line: 425, column: 82, scope: !10269)
!10300 = distinct !{!10300, !10297, !10301}
!10301 = !DILocation(line: 425, column: 87, scope: !10269)
!10302 = !DILocation(line: 426, column: 28, scope: !10269)
!10303 = !DILocation(line: 428, column: 50, scope: !10269)
!10304 = !DILocation(line: 428, column: 19, scope: !10269)
!10305 = !DILocation(line: 428, column: 28, scope: !10269)
!10306 = !DILocation(line: 432, column: 1, scope: !10269)
!10307 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !1905, file: !1905, line: 434, type: !208, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10308 = !DILocation(line: 437, column: 5, scope: !10307)
!10309 = !DILocation(line: 440, column: 5, scope: !10307)
!10310 = !DILocation(line: 440, column: 27, scope: !10307)
!10311 = !DILocation(line: 440, column: 36, scope: !10307)
!10312 = !DILocation(line: 440, column: 76, scope: !10307)
!10313 = distinct !{!10313, !10309, !10314}
!10314 = !DILocation(line: 440, column: 84, scope: !10307)
!10315 = !DILocation(line: 441, column: 45, scope: !10307)
!10316 = !DILocation(line: 441, column: 54, scope: !10307)
!10317 = !DILocation(line: 441, column: 28, scope: !10307)
!10318 = !DILocation(line: 442, column: 19, scope: !10307)
!10319 = !DILocation(line: 442, column: 31, scope: !10307)
!10320 = !DILocation(line: 443, column: 5, scope: !10307)
!10321 = !DILocation(line: 443, column: 27, scope: !10307)
!10322 = !DILocation(line: 443, column: 39, scope: !10307)
!10323 = !DILocation(line: 443, column: 65, scope: !10307)
!10324 = distinct !{!10324, !10320, !10325}
!10325 = !DILocation(line: 443, column: 70, scope: !10307)
!10326 = !DILocation(line: 444, column: 19, scope: !10307)
!10327 = !DILocation(line: 444, column: 28, scope: !10307)
!10328 = !DILocation(line: 445, column: 5, scope: !10307)
!10329 = !DILocation(line: 445, column: 27, scope: !10307)
!10330 = !DILocation(line: 445, column: 91, scope: !10307)
!10331 = distinct !{!10331, !10328, !10332}
!10332 = !DILocation(line: 445, column: 96, scope: !10307)
!10333 = !DILocation(line: 447, column: 43, scope: !10307)
!10334 = !DILocation(line: 447, column: 51, scope: !10307)
!10335 = !DILocation(line: 447, column: 27, scope: !10307)
!10336 = !DILocation(line: 450, column: 1, scope: !10307)
!10337 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !1905, file: !1905, line: 452, type: !10338, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !10341)
!10338 = !DISubroutineType(types: !10339)
!10339 = !{!858, !10340}
!10340 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !1908, line: 43, baseType: !1907)
!10341 = !{!10342, !10343}
!10342 = !DILocalVariable(name: "clock", arg: 1, scope: !10337, file: !1905, line: 452, type: !10340)
!10343 = !DILocalVariable(name: "delay", scope: !10337, file: !1905, line: 457, type: !184)
!10344 = !DILocation(line: 0, scope: !10337)
!10345 = !DILocation(line: 457, column: 5, scope: !10337)
!10346 = !DILocation(line: 457, column: 23, scope: !10337)
!10347 = !DILocation(line: 458, column: 9, scope: !10337)
!10348 = !DILocation(line: 465, column: 9, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !1905, line: 458, column: 39)
!10350 = distinct !DILexicalBlock(scope: !10337, file: !1905, line: 458, column: 9)
!10351 = !DILocation(line: 465, column: 23, scope: !10349)
!10352 = !DILocation(line: 465, column: 32, scope: !10349)
!10353 = !DILocation(line: 466, column: 32, scope: !10349)
!10354 = !DILocation(line: 467, column: 9, scope: !10349)
!10355 = !DILocation(line: 467, column: 32, scope: !10349)
!10356 = !DILocation(line: 467, column: 86, scope: !10349)
!10357 = distinct !{!10357, !10354, !10358}
!10358 = !DILocation(line: 467, column: 91, scope: !10349)
!10359 = !DILocation(line: 468, column: 32, scope: !10349)
!10360 = !DILocation(line: 469, column: 9, scope: !10349)
!10361 = !DILocation(line: 469, column: 32, scope: !10349)
!10362 = !DILocation(line: 469, column: 86, scope: !10349)
!10363 = distinct !{!10363, !10360, !10364}
!10364 = !DILocation(line: 469, column: 91, scope: !10349)
!10365 = !DILocation(line: 470, column: 32, scope: !10349)
!10366 = !DILocation(line: 472, column: 20, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10349, file: !1905, line: 472, column: 9)
!10368 = !DILocation(line: 472, column: 25, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10367, file: !1905, line: 472, column: 9)
!10370 = !DILocation(line: 472, column: 31, scope: !10369)
!10371 = !DILocation(line: 472, column: 9, scope: !10367)
!10372 = !DILocation(line: 472, column: 44, scope: !10369)
!10373 = distinct !{!10373, !10371, !10374}
!10374 = !DILocation(line: 472, column: 47, scope: !10367)
!10375 = !DILocation(line: 478, column: 9, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10377, file: !1905, line: 477, column: 12)
!10377 = distinct !DILexicalBlock(scope: !10350, file: !1905, line: 475, column: 16)
!10378 = !DILocation(line: 483, column: 1, scope: !10337)
!10379 = distinct !DISubprogram(name: "emi_mask_master", scope: !1905, file: !1905, line: 487, type: !208, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10380 = !DILocation(line: 490, column: 30, scope: !10379)
!10381 = !DILocation(line: 490, column: 44, scope: !10379)
!10382 = !DILocation(line: 490, column: 53, scope: !10379)
!10383 = !DILocation(line: 490, column: 28, scope: !10379)
!10384 = !DILocation(line: 492, column: 1, scope: !10379)
!10385 = distinct !DISubprogram(name: "emi_unmask_master", scope: !1905, file: !1905, line: 494, type: !208, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10386 = !DILocation(line: 497, column: 30, scope: !10385)
!10387 = !DILocation(line: 497, column: 44, scope: !10385)
!10388 = !DILocation(line: 497, column: 53, scope: !10385)
!10389 = !DILocation(line: 497, column: 28, scope: !10385)
!10390 = !DILocation(line: 500, column: 1, scope: !10385)
!10391 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2073, file: !2073, line: 56, type: !7201, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10392 = !DILocation(line: 61, column: 5, scope: !10391)
!10393 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2073, file: !2073, line: 65, type: !7201, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10394 = !DILocation(line: 70, column: 5, scope: !10393)
!10395 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2073, file: !2073, line: 74, type: !208, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10396 = !DILocation(line: 79, column: 9, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10398, file: !2073, line: 78, column: 12)
!10398 = distinct !DILexicalBlock(scope: !10395, file: !2073, line: 76, column: 9)
!10399 = !DILocation(line: 81, column: 1, scope: !10395)
!10400 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2073, file: !2073, line: 83, type: !208, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10401 = !DILocation(line: 88, column: 9, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !2073, line: 87, column: 12)
!10403 = distinct !DILexicalBlock(scope: !10400, file: !2073, line: 85, column: 9)
!10404 = !DILocation(line: 90, column: 1, scope: !10400)
!10405 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2073, file: !2073, line: 92, type: !208, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10406 = !DILocation(line: 97, column: 9, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !2073, line: 96, column: 12)
!10408 = distinct !DILexicalBlock(scope: !10405, file: !2073, line: 94, column: 9)
!10409 = !DILocation(line: 99, column: 1, scope: !10405)
!10410 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2073, file: !2073, line: 101, type: !208, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10411 = !DILocation(line: 106, column: 9, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !2073, line: 105, column: 12)
!10413 = distinct !DILexicalBlock(scope: !10410, file: !2073, line: 103, column: 9)
!10414 = !DILocation(line: 108, column: 1, scope: !10410)
!10415 = distinct !DISubprogram(name: "__io_putchar", scope: !2085, file: !2085, line: 53, type: !10416, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10418)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!79, !79}
!10418 = !{!10419}
!10419 = !DILocalVariable(name: "ch", arg: 1, scope: !10415, file: !2085, line: 53, type: !79)
!10420 = !DILocation(line: 0, scope: !10415)
!10421 = !DILocation(line: 60, column: 35, scope: !10415)
!10422 = !DILocation(line: 60, column: 5, scope: !10415)
!10423 = !DILocation(line: 61, column: 5, scope: !10415)
!10424 = distinct !DISubprogram(name: "main", scope: !2085, file: !2085, line: 148, type: !9919, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10425 = !DILocation(line: 151, column: 5, scope: !10424)
!10426 = !DILocation(line: 153, column: 5, scope: !10424)
!10427 = !DILocation(line: 156, column: 5, scope: !10424)
!10428 = !DILocation(line: 319, column: 3, scope: !10429, inlinedAt: !10430)
!10429 = distinct !DISubprogram(name: "__enable_irq", scope: !5811, file: !5811, line: 317, type: !208, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10430 = distinct !DILocation(line: 159, column: 5, scope: !10424)
!10431 = !{i64 646609}
!10432 = !DILocation(line: 496, column: 3, scope: !10433, inlinedAt: !10434)
!10433 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !5811, file: !5811, line: 494, type: !208, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10434 = distinct !DILocation(line: 160, column: 5, scope: !10424)
!10435 = !{i64 650884}
!10436 = !DILocation(line: 162, column: 5, scope: !10424)
!10437 = !DILocation(line: 163, column: 5, scope: !10424)
!10438 = !DILocation(line: 164, column: 5, scope: !10424)
!10439 = !DILocation(line: 166, column: 5, scope: !10424)
!10440 = !DILocation(line: 168, column: 5, scope: !10424)
!10441 = distinct !{!10441, !10440, !10442}
!10442 = !DILocation(line: 168, column: 14, scope: !10424)
!10443 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2085, file: !2085, line: 91, type: !208, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10444 = !DILocation(line: 93, column: 5, scope: !10443)
!10445 = !DILocation(line: 94, column: 1, scope: !10443)
!10446 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2085, file: !2085, line: 101, type: !208, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10447 = !DILocation(line: 104, column: 5, scope: !10446)
!10448 = !DILocation(line: 105, column: 5, scope: !10446)
!10449 = !DILocation(line: 106, column: 5, scope: !10446)
!10450 = !DILocation(line: 107, column: 1, scope: !10446)
!10451 = distinct !DISubprogram(name: "hal_gpt_sw_interrupt_oneshot_mode_example", scope: !2085, file: !2085, line: 130, type: !208, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10452)
!10452 = !{!10453}
!10453 = !DILocalVariable(name: "ret", scope: !10451, file: !2085, line: 132, type: !2521)
!10454 = !DILocation(line: 133, column: 30, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10451, file: !2085, line: 133, column: 9)
!10456 = !DILocation(line: 133, column: 27, scope: !10455)
!10457 = !DILocation(line: 133, column: 9, scope: !10451)
!10458 = !DILocation(line: 134, column: 9, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10455, file: !2085, line: 133, column: 61)
!10460 = !DILocation(line: 135, column: 9, scope: !10459)
!10461 = !DILocation(line: 137, column: 11, scope: !10451)
!10462 = !DILocation(line: 0, scope: !10451)
!10463 = !DILocation(line: 138, column: 13, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10451, file: !2085, line: 138, column: 9)
!10465 = !DILocation(line: 138, column: 9, scope: !10451)
!10466 = !DILocation(line: 139, column: 9, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10464, file: !2085, line: 138, column: 35)
!10468 = !DILocation(line: 140, column: 9, scope: !10467)
!10469 = !DILocation(line: 142, column: 56, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10451, file: !2085, line: 142, column: 9)
!10471 = !DILocation(line: 142, column: 30, scope: !10470)
!10472 = !DILocation(line: 142, column: 27, scope: !10470)
!10473 = !DILocation(line: 142, column: 9, scope: !10451)
!10474 = !DILocation(line: 143, column: 9, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10470, file: !2085, line: 142, column: 89)
!10476 = !DILocation(line: 144, column: 9, scope: !10475)
!10477 = !DILocation(line: 146, column: 1, scope: !10451)
!10478 = distinct !DISubprogram(name: "gpt_callback", scope: !2085, file: !2085, line: 113, type: !227, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10479)
!10479 = !{!10480, !10481, !10482, !10483}
!10480 = !DILocalVariable(name: "parameter", arg: 1, scope: !10478, file: !2085, line: 113, type: !194)
!10481 = !DILocalVariable(name: "count", scope: !10478, file: !2085, line: 115, type: !175)
!10482 = !DILocalVariable(name: "count2", scope: !10478, file: !2085, line: 116, type: !175)
!10483 = !DILocalVariable(name: "duration_time", scope: !10478, file: !2085, line: 117, type: !175)
!10484 = !DILocation(line: 0, scope: !10478)
!10485 = !DILocation(line: 115, column: 5, scope: !10478)
!10486 = !DILocation(line: 116, column: 5, scope: !10478)
!10487 = !DILocation(line: 118, column: 5, scope: !10478)
!10488 = !DILocation(line: 119, column: 32, scope: !10478)
!10489 = !DILocation(line: 119, column: 40, scope: !10478)
!10490 = !DILocation(line: 119, column: 5, scope: !10478)
!10491 = !DILocation(line: 120, column: 54, scope: !10478)
!10492 = !DILocation(line: 120, column: 44, scope: !10478)
!10493 = !DILocation(line: 120, column: 60, scope: !10478)
!10494 = !DILocation(line: 120, column: 69, scope: !10478)
!10495 = !DILocation(line: 120, column: 21, scope: !10478)
!10496 = !DILocation(line: 121, column: 27, scope: !10478)
!10497 = !DILocation(line: 121, column: 5, scope: !10478)
!10498 = !DILocation(line: 122, column: 5, scope: !10478)
!10499 = !DILocation(line: 123, column: 1, scope: !10478)
!10500 = distinct !DISubprogram(name: "log_uart_init", scope: !2085, file: !2085, line: 69, type: !208, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10501)
!10501 = !{!10502}
!10502 = !DILocalVariable(name: "uart_config", scope: !10500, file: !2085, line: 71, type: !10503)
!10503 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !572, line: 378, baseType: !10504)
!10504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 373, size: 128, elements: !10505)
!10505 = !{!10506, !10507, !10508, !10509}
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !10504, file: !572, line: 374, baseType: !4207, size: 32)
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !10504, file: !572, line: 375, baseType: !4257, size: 32, offset: 32)
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !10504, file: !572, line: 376, baseType: !4259, size: 32, offset: 64)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10504, file: !572, line: 377, baseType: !4261, size: 32, offset: 96)
!10510 = !DILocation(line: 71, column: 5, scope: !10500)
!10511 = !DILocation(line: 71, column: 23, scope: !10500)
!10512 = !DILocation(line: 73, column: 5, scope: !10500)
!10513 = !DILocation(line: 74, column: 5, scope: !10500)
!10514 = !DILocation(line: 75, column: 5, scope: !10500)
!10515 = !DILocation(line: 76, column: 5, scope: !10500)
!10516 = !DILocation(line: 79, column: 17, scope: !10500)
!10517 = !DILocation(line: 79, column: 26, scope: !10500)
!10518 = !DILocation(line: 80, column: 17, scope: !10500)
!10519 = !DILocation(line: 80, column: 29, scope: !10500)
!10520 = !DILocation(line: 81, column: 17, scope: !10500)
!10521 = !DILocation(line: 81, column: 26, scope: !10500)
!10522 = !DILocation(line: 82, column: 17, scope: !10500)
!10523 = !DILocation(line: 82, column: 24, scope: !10500)
!10524 = !DILocation(line: 83, column: 5, scope: !10500)
!10525 = !DILocation(line: 84, column: 1, scope: !10500)
!10526 = distinct !DISubprogram(name: "_close", scope: !2101, file: !2101, line: 5, type: !10416, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10527)
!10527 = !{!10528}
!10528 = !DILocalVariable(name: "file", arg: 1, scope: !10526, file: !2101, line: 5, type: !79)
!10529 = !DILocation(line: 0, scope: !10526)
!10530 = !DILocation(line: 7, column: 5, scope: !10526)
!10531 = distinct !DISubprogram(name: "_fstat", scope: !2101, file: !2101, line: 10, type: !10532, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10580)
!10532 = !DISubroutineType(types: !10533)
!10533 = !{!79, !79, !10534}
!10534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10535, size: 32)
!10535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !10536, line: 27, size: 704, elements: !10537)
!10536 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!10537 = !{!10538, !10541, !10544, !10547, !10550, !10553, !10556, !10557, !10560, !10570, !10571, !10572, !10575, !10578}
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10535, file: !10536, line: 29, baseType: !10539, size: 16)
!10539 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2105, line: 161, baseType: !10540)
!10540 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2145, line: 56, baseType: !1358)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10535, file: !10536, line: 30, baseType: !10542, size: 16, offset: 16)
!10542 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2105, line: 139, baseType: !10543)
!10543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2145, line: 75, baseType: !954)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10535, file: !10536, line: 31, baseType: !10545, size: 32, offset: 32)
!10545 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2105, line: 189, baseType: !10546)
!10546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2145, line: 90, baseType: !177)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10535, file: !10536, line: 32, baseType: !10548, size: 16, offset: 64)
!10548 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2105, line: 194, baseType: !10549)
!10549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2145, line: 209, baseType: !954)
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10535, file: !10536, line: 33, baseType: !10551, size: 16, offset: 80)
!10551 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2105, line: 165, baseType: !10552)
!10552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2145, line: 60, baseType: !954)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10535, file: !10536, line: 34, baseType: !10554, size: 16, offset: 96)
!10554 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2105, line: 169, baseType: !10555)
!10555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2145, line: 63, baseType: !954)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10535, file: !10536, line: 35, baseType: !10539, size: 16, offset: 112)
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10535, file: !10536, line: 36, baseType: !10558, size: 32, offset: 128)
!10558 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2105, line: 157, baseType: !10559)
!10559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2145, line: 102, baseType: !2161)
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10535, file: !10536, line: 42, baseType: !10561, size: 128, offset: 192)
!10561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !10562, line: 47, size: 128, elements: !10563)
!10562 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!10563 = !{!10564, !10569}
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10561, file: !10562, line: 48, baseType: !10565, size: 64)
!10565 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10566, line: 42, baseType: !10567)
!10566 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!10567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !178, line: 200, baseType: !10568)
!10568 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10561, file: !10562, line: 49, baseType: !2146, size: 32, offset: 64)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10535, file: !10536, line: 43, baseType: !10561, size: 128, offset: 320)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10535, file: !10536, line: 44, baseType: !10561, size: 128, offset: 448)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10535, file: !10536, line: 45, baseType: !10573, size: 32, offset: 576)
!10573 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2105, line: 102, baseType: !10574)
!10574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2145, line: 34, baseType: !2146)
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10535, file: !10536, line: 46, baseType: !10576, size: 32, offset: 608)
!10576 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2105, line: 97, baseType: !10577)
!10577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2145, line: 30, baseType: !2146)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !10535, file: !10536, line: 48, baseType: !10579, size: 64, offset: 640)
!10579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 64, elements: !383)
!10580 = !{!10581, !10582}
!10581 = !DILocalVariable(name: "file", arg: 1, scope: !10531, file: !2101, line: 10, type: !79)
!10582 = !DILocalVariable(name: "st", arg: 2, scope: !10531, file: !2101, line: 10, type: !10534)
!10583 = !DILocation(line: 0, scope: !10531)
!10584 = !DILocation(line: 12, column: 5, scope: !10531)
!10585 = distinct !DISubprogram(name: "_isatty", scope: !2101, file: !2101, line: 15, type: !10416, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10586)
!10586 = !{!10587}
!10587 = !DILocalVariable(name: "file", arg: 1, scope: !10585, file: !2101, line: 15, type: !79)
!10588 = !DILocation(line: 0, scope: !10585)
!10589 = !DILocation(line: 17, column: 5, scope: !10585)
!10590 = distinct !DISubprogram(name: "_lseek", scope: !2101, file: !2101, line: 20, type: !10591, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10593)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!79, !79, !79, !79}
!10593 = !{!10594, !10595, !10596}
!10594 = !DILocalVariable(name: "file", arg: 1, scope: !10590, file: !2101, line: 20, type: !79)
!10595 = !DILocalVariable(name: "ptr", arg: 2, scope: !10590, file: !2101, line: 20, type: !79)
!10596 = !DILocalVariable(name: "dir", arg: 3, scope: !10590, file: !2101, line: 20, type: !79)
!10597 = !DILocation(line: 0, scope: !10590)
!10598 = !DILocation(line: 22, column: 5, scope: !10590)
!10599 = distinct !DISubprogram(name: "_open", scope: !2101, file: !2101, line: 25, type: !10600, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10602)
!10600 = !DISubroutineType(types: !10601)
!10601 = !{!79, !2139, !79, !79}
!10602 = !{!10603, !10604, !10605}
!10603 = !DILocalVariable(name: "name", arg: 1, scope: !10599, file: !2101, line: 25, type: !2139)
!10604 = !DILocalVariable(name: "flags", arg: 2, scope: !10599, file: !2101, line: 25, type: !79)
!10605 = !DILocalVariable(name: "mode", arg: 3, scope: !10599, file: !2101, line: 25, type: !79)
!10606 = !DILocation(line: 0, scope: !10599)
!10607 = !DILocation(line: 27, column: 5, scope: !10599)
!10608 = distinct !DISubprogram(name: "_read", scope: !2101, file: !2101, line: 30, type: !10609, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10611)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!79, !79, !2106, !79}
!10611 = !{!10612, !10613, !10614}
!10612 = !DILocalVariable(name: "file", arg: 1, scope: !10608, file: !2101, line: 30, type: !79)
!10613 = !DILocalVariable(name: "ptr", arg: 2, scope: !10608, file: !2101, line: 30, type: !2106)
!10614 = !DILocalVariable(name: "len", arg: 3, scope: !10608, file: !2101, line: 30, type: !79)
!10615 = !DILocation(line: 0, scope: !10608)
!10616 = !DILocation(line: 32, column: 5, scope: !10608)
!10617 = distinct !DISubprogram(name: "_getpid", scope: !2101, file: !2101, line: 48, type: !9919, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !210)
!10618 = !DILocation(line: 50, column: 5, scope: !10617)
!10619 = distinct !DISubprogram(name: "_kill", scope: !2101, file: !2101, line: 56, type: !10620, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10622)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!79, !79, !79}
!10622 = !{!10623, !10624}
!10623 = !DILocalVariable(name: "pid", arg: 1, scope: !10619, file: !2101, line: 56, type: !79)
!10624 = !DILocalVariable(name: "sig", arg: 2, scope: !10619, file: !2101, line: 56, type: !79)
!10625 = !DILocation(line: 0, scope: !10619)
!10626 = !DILocation(line: 58, column: 5, scope: !10619)
!10627 = distinct !DISubprogram(name: "_exit", scope: !2101, file: !2101, line: 61, type: !10416, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10628)
!10628 = !{!10629}
!10629 = !DILocalVariable(name: "val", arg: 1, scope: !10627, file: !2101, line: 61, type: !79)
!10630 = !DILocation(line: 0, scope: !10627)
!10631 = !DILocation(line: 63, column: 5, scope: !10627)
!10632 = !DILocation(line: 0, scope: !2100)
!10633 = !DILocation(line: 73, column: 5, scope: !2100)
!10634 = !{i64 1127}
!10635 = !DILocation(line: 75, column: 14, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !2100, file: !2101, line: 75, column: 9)
!10637 = !DILocation(line: 75, column: 11, scope: !10636)
!10638 = !DILocation(line: 75, column: 9, scope: !2100)
!10639 = !DILocation(line: 81, column: 32, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !2100, file: !2101, line: 81, column: 9)
!10641 = !DILocation(line: 81, column: 15, scope: !10640)
!10642 = !DILocation(line: 92, column: 1, scope: !2100)
!10643 = !DILocation(line: 81, column: 9, scope: !2100)
!10644 = distinct !DISubprogram(name: "_write", scope: !2101, file: !2101, line: 94, type: !10609, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2292, retainedNodes: !10645)
!10645 = !{!10646, !10647, !10648, !10649}
!10646 = !DILocalVariable(name: "file", arg: 1, scope: !10644, file: !2101, line: 94, type: !79)
!10647 = !DILocalVariable(name: "ptr", arg: 2, scope: !10644, file: !2101, line: 94, type: !2106)
!10648 = !DILocalVariable(name: "len", arg: 3, scope: !10644, file: !2101, line: 94, type: !79)
!10649 = !DILocalVariable(name: "DataIdx", scope: !10644, file: !2101, line: 96, type: !79)
!10650 = !DILocation(line: 0, scope: !10644)
!10651 = !DILocation(line: 98, column: 31, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !2101, line: 98, column: 5)
!10653 = distinct !DILexicalBlock(scope: !10644, file: !2101, line: 98, column: 5)
!10654 = !DILocation(line: 98, column: 5, scope: !10653)
!10655 = !DILocation(line: 99, column: 26, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10652, file: !2101, line: 98, column: 49)
!10657 = !DILocation(line: 99, column: 22, scope: !10656)
!10658 = !DILocation(line: 99, column: 9, scope: !10656)
!10659 = !DILocation(line: 98, column: 45, scope: !10652)
!10660 = distinct !{!10660, !10654, !10661}
!10661 = !DILocation(line: 100, column: 5, scope: !10653)
!10662 = !DILocation(line: 101, column: 5, scope: !10644)
!10663 = distinct !DISubprogram(name: "SysTick_Set", scope: !2304, file: !2304, line: 62, type: !3103, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !10664)
!10664 = !{!10665, !10666}
!10665 = !DILocalVariable(name: "ticks", arg: 1, scope: !10663, file: !2304, line: 62, type: !175)
!10666 = !DILocalVariable(name: "val", scope: !10663, file: !2304, line: 64, type: !175)
!10667 = !DILocation(line: 0, scope: !10663)
!10668 = !DILocation(line: 67, column: 16, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10663, file: !2304, line: 67, column: 9)
!10670 = !DILocation(line: 67, column: 21, scope: !10669)
!10671 = !DILocation(line: 67, column: 9, scope: !10663)
!10672 = !DILocation(line: 72, column: 20, scope: !10663)
!10673 = !DILocation(line: 75, column: 19, scope: !10663)
!10674 = !DILocation(line: 79, column: 20, scope: !10663)
!10675 = !DILocation(line: 80, column: 20, scope: !10663)
!10676 = !DILocation(line: 83, column: 19, scope: !10663)
!10677 = !DILocation(line: 85, column: 5, scope: !10663)
!10678 = !DILocation(line: 86, column: 1, scope: !10663)
!10679 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2304, file: !2304, line: 95, type: !208, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !210)
!10680 = !DILocation(line: 97, column: 28, scope: !10679)
!10681 = !DILocation(line: 98, column: 1, scope: !10679)
!10682 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2304, file: !2304, line: 107, type: !3355, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !210)
!10683 = !DILocation(line: 109, column: 12, scope: !10682)
!10684 = !DILocation(line: 109, column: 5, scope: !10682)
!10685 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2304, file: !2304, line: 119, type: !208, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !10686)
!10686 = !{!10687}
!10687 = !DILocalVariable(name: "cm_mux_sel", scope: !10685, file: !2304, line: 121, type: !378)
!10688 = !DILocation(line: 121, column: 38, scope: !10685)
!10689 = !DILocation(line: 121, column: 26, scope: !10685)
!10690 = !DILocation(line: 0, scope: !10685)
!10691 = !DILocation(line: 123, column: 5, scope: !10685)
!10692 = !DILocation(line: 132, column: 13, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10685, file: !2304, line: 123, column: 25)
!10694 = !DILocation(line: 140, column: 13, scope: !10693)
!10695 = !DILocation(line: 0, scope: !10693)
!10696 = !DILocation(line: 146, column: 26, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10685, file: !2304, line: 146, column: 9)
!10698 = !DILocation(line: 146, column: 50, scope: !10697)
!10699 = !DILocation(line: 146, column: 41, scope: !10697)
!10700 = !DILocation(line: 148, column: 25, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !2304, line: 147, column: 52)
!10702 = !DILocation(line: 149, column: 5, scope: !10701)
!10703 = !DILocation(line: 150, column: 1, scope: !10685)
!10704 = distinct !DISubprogram(name: "SystemInit", scope: !2304, file: !2304, line: 158, type: !208, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !210)
!10705 = !DILocation(line: 162, column: 16, scope: !10704)
!10706 = !DILocation(line: 166, column: 16, scope: !10704)
!10707 = !DILocation(line: 169, column: 16, scope: !10704)
!10708 = !DILocation(line: 172, column: 1, scope: !10704)
!10709 = distinct !DISubprogram(name: "CachePreInit", scope: !2304, file: !2304, line: 180, type: !208, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !210)
!10710 = !DILocation(line: 183, column: 22, scope: !10709)
!10711 = !DILocation(line: 186, column: 21, scope: !10709)
!10712 = !DILocation(line: 189, column: 21, scope: !10709)
!10713 = !DILocation(line: 192, column: 29, scope: !10709)
!10714 = !DILocation(line: 193, column: 33, scope: !10709)
!10715 = !DILocation(line: 195, column: 28, scope: !10709)
!10716 = !DILocation(line: 200, column: 30, scope: !10709)
!10717 = !DILocation(line: 214, column: 1, scope: !10709)
