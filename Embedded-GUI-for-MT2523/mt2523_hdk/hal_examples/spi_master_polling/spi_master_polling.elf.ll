; ModuleID = './build/spi_master_polling.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SPI_MASTER_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.10 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.10*, %struct.anon.10*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_spi_master_config_t = type { i32, i32, i32, i32, i32 }
%struct.hal_spi_master_send_and_receive_config_t = type { i8*, i32, i8*, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.10*, %struct.anon.10*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !343
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !626
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !737
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !755
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !769
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !780
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !750
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !781
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !853
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !858
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_spi_master_status = internal global [4 x i8] zeroinitializer, align 1, !dbg !866
@__FUNCTION__.hal_spi_master_init = private unnamed_addr constant [20 x i8] c"hal_spi_master_init\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"[SPIM%d][init]:busy.\0D\0A\00", align 1
@g_spix_cg_code = internal unnamed_addr constant [4 x i32] [i32 52, i32 53, i32 54, i32 55], align 4, !dbg !954
@.str.1.84 = private unnamed_addr constant [32 x i8] c"[SPIM%d] Clock enable failed!\0D\0A\00", align 1
@g_spix_irq_code = internal unnamed_addr constant [4 x i32] [i32 43, i32 44, i32 45, i32 46], align 4, !dbg !956
@g_spix_callback = internal unnamed_addr global [4 x void (i32, i8*)*] zeroinitializer, align 4, !dbg !960
@g_spix_user_data = internal unnamed_addr global [4 x i8*] zeroinitializer, align 4, !dbg !968
@g_spix_pri_code = internal unnamed_addr constant [4 x i16] [i16 48, i16 49, i16 50, i16 51], align 2, !dbg !971
@__FUNCTION__.hal_spi_master_send_polling = private unnamed_addr constant [28 x i8] c"hal_spi_master_send_polling\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"[SPIM%d][send_polling]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_dma = private unnamed_addr constant [24 x i8] c"hal_spi_master_send_dma\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"[SPIM%d][send_dma]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_dma_blocking = private unnamed_addr constant [33 x i8] c"hal_spi_master_send_dma_blocking\00", align 1
@__FUNCTION__.hal_spi_master_send_and_receive_polling = private unnamed_addr constant [40 x i8] c"hal_spi_master_send_and_receive_polling\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"[SPIM%d][send_and_receive_polling]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_and_receive_dma = private unnamed_addr constant [36 x i8] c"hal_spi_master_send_and_receive_dma\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"[SPIM%d][send_and_receive_dma]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_and_receive_dma_blocking = private unnamed_addr constant [45 x i8] c"hal_spi_master_send_and_receive_dma_blocking\00", align 1
@__FUNCTION__.hal_spi_master_set_chip_select_timing = private unnamed_addr constant [38 x i8] c"hal_spi_master_set_chip_select_timing\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"[SPIM%d][cs_timing]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_set_deassert = private unnamed_addr constant [28 x i8] c"hal_spi_master_set_deassert\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"[SPIM%d][deassert]:busy.\0D\0A\00", align 1
@spi_master_register = dso_local local_unnamed_addr constant [4 x %struct.SPI_MASTER_REGISTER_T*] [%struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609498624 to %struct.SPI_MASTER_REGISTER_T*), %struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609433088 to %struct.SPI_MASTER_REGISTER_T*), %struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609367552 to %struct.SPI_MASTER_REGISTER_T*), %struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609302016 to %struct.SPI_MASTER_REGISTER_T*)], align 4, !dbg !980
@g_spi_direction = dso_local local_unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !988
@__FUNCTION__.spi_push_data = private unnamed_addr constant [14 x i8] c"spi_push_data\00", align 1
@.str.101 = private unnamed_addr constant [40 x i8] c"[SPIM%d][push_data]:big_endian error.\0D\0A\00", align 1
@g_packet_count = internal unnamed_addr global [4 x i16] zeroinitializer, align 2, !dbg !992
@g_packet_length = internal unnamed_addr global [4 x i16] zeroinitializer, align 2, !dbg !995
@__FUNCTION__.spi_pop_data = private unnamed_addr constant [13 x i8] c"spi_pop_data\00", align 1
@.str.1.104 = private unnamed_addr constant [39 x i8] c"[SPIM%d][pop_data]:big_endian error.\0D\0A\00", align 1
@g_pause_count = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !997
@g_small_size_pause_count = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !1000
@__FUNCTION__.spi_analyse_transfer_size = private unnamed_addr constant [26 x i8] c"spi_analyse_transfer_size\00", align 1
@.str.2.115 = private unnamed_addr constant [38 x i8] c"[SPIM%d]:pause deassert mode error.\0D\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1019
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1109
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1096
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.126 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1114
@.str.136 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.137 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1189
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1191
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1193
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1195
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1197
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1199
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1201
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1203
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1205
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1207
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1209
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1522
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1524
@.str.140 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.141 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1533
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1526
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1534
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1586
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1589
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1622
@nor_egid = dso_local local_unnamed_addr global %struct.anon.10* null, align 4, !dbg !1633
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1949
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1820
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1848
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1951
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1658
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1844
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1846
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1670
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1931
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1934
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1964
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1823
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1836
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1807
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1811
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1809
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1660
@.str.156 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.157 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1936
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1815
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1832
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1834
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1991
@.str.162 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.163 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2051
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1938
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2052
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2066
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2068
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2070
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2072
@.str.178 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.179 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2074
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2128
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2130
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2132
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2144
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2146
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2148
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2150
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2252
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2254
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2256
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2258
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2260
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2262
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2264
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2266
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2268
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2270
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2272
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2274
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2276
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2278
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2250
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2297
@.str.190 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.191 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.192 = private unnamed_addr constant [48 x i8] c"---spim_send_data_polling_example begins---\0D\0A\0D\0A\00", align 1
@.str.3.193 = private unnamed_addr constant [26 x i8] c"SPI Master GPIOs config\0D\0A\00", align 1
@.str.4.194 = private unnamed_addr constant [23 x i8] c"SPI Master port init\0D\0A\00", align 1
@.str.5.196 = private unnamed_addr constant [25 x i8] c"  SPI master init fail\0D\0A\00", align 1
@.str.6.197 = private unnamed_addr constant [27 x i8] c"SPI master send data fail\0A\00", align 1
@.str.7.195 = private unnamed_addr constant [22 x i8] c"SPI master deinit\0D\0A\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"  SPI master deinit fail\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"---spim_send_data_polling_example ends---\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2309
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2513
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2621
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:06 GMT +00:00\00", align 1, !dbg !2623
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2628
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2634

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2730 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2738
  call void @llvm.dbg.value(metadata i32 %1, metadata !2737, metadata !DIExpression()), !dbg !2739
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2740, !range !2742
  %3 = icmp eq i8 %2, 0, !dbg !2740
  br i1 %3, label %5, label %4, !dbg !2743

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2744
  br label %15, !dbg !2746

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2747
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2749
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2750
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2751
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2752
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2753
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2754
  call void @llvm.dbg.value(metadata i32 0, metadata !2735, metadata !DIExpression()), !dbg !2739
  br label %7, !dbg !2755

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2735, metadata !DIExpression()), !dbg !2739
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2757
  store volatile i32 0, i32* %9, align 4, !dbg !2760
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2761
  store volatile i32 0, i32* %10, align 4, !dbg !2762
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2763
  store i32 0, i32* %11, align 4, !dbg !2764
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2765
  store i32 0, i32* %12, align 4, !dbg !2766
  %13 = add nuw nsw i32 %8, 1, !dbg !2767
  call void @llvm.dbg.value(metadata i32 %13, metadata !2735, metadata !DIExpression()), !dbg !2739
  %14 = icmp eq i32 %13, 16, !dbg !2768
  br i1 %14, label %15, label %7, !dbg !2755, !llvm.loop !2769

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2739
  ret i32 %16, !dbg !2771
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2772 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2775
  call void @llvm.dbg.value(metadata i32 %1, metadata !2774, metadata !DIExpression()), !dbg !2776
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2777
  %3 = and i32 %2, -31, !dbg !2777
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2777
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2778
  %5 = or i32 %4, 19, !dbg !2778
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2778
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2779
  %7 = and i32 %6, -31, !dbg !2779
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2779
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2780
  %9 = or i32 %8, 3, !dbg !2780
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2780
  tail call void asm sideeffect "isb", ""() #22, !dbg !2781, !srcloc !2785
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2786
  ret i32 0, !dbg !2787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2788 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2791
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2792
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2793
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2794
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2795
  call void @llvm.dbg.value(metadata i32 0, metadata !2790, metadata !DIExpression()), !dbg !2796
  br label %2, !dbg !2797

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2790, metadata !DIExpression()), !dbg !2796
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2799
  store volatile i32 0, i32* %4, align 4, !dbg !2802
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2803
  store volatile i32 0, i32* %5, align 4, !dbg !2804
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2805
  store i32 0, i32* %6, align 4, !dbg !2806
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2807
  store i32 0, i32* %7, align 4, !dbg !2808
  %8 = add nuw nsw i32 %3, 1, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %8, metadata !2790, metadata !DIExpression()), !dbg !2796
  %9 = icmp eq i32 %8, 16, !dbg !2810
  br i1 %9, label %10, label %2, !dbg !2797, !llvm.loop !2811

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2813
  ret i32 0, !dbg !2814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2815 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2816
  %2 = and i32 %1, 768, !dbg !2818
  %3 = icmp eq i32 %2, 0, !dbg !2818
  br i1 %3, label %8, label %4, !dbg !2819

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2820
  %6 = or i32 %5, 13, !dbg !2820
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2820
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2821
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2822
  br label %8, !dbg !2823

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2824
  ret i32 %9, !dbg !2825
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2826 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2829
  call void @llvm.dbg.value(metadata i32 %1, metadata !2828, metadata !DIExpression()), !dbg !2830
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2831
  %3 = and i32 %2, 1, !dbg !2833
  %4 = icmp eq i32 %3, 0, !dbg !2833
  br i1 %4, label %7, label %5, !dbg !2834

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2835
  br label %7, !dbg !2837

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2838
  %9 = and i32 %8, -2, !dbg !2838
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2838
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2839
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2840
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2841
  ret i32 0, !dbg !2842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2847, metadata !DIExpression()), !dbg !2848
  %2 = icmp ugt i32 %0, 15, !dbg !2849
  br i1 %2, label %13, label %3, !dbg !2851

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2852
  %5 = load volatile i32, i32* %4, align 4, !dbg !2852
  %6 = and i32 %5, 256, !dbg !2854
  %7 = icmp eq i32 %6, 0, !dbg !2854
  br i1 %7, label %13, label %8, !dbg !2855

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2856
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2858
  %11 = or i32 %10, %9, !dbg !2858
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2858
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2859
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2860
  br label %13, !dbg !2861

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2848
  ret i32 %14, !dbg !2862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2865, metadata !DIExpression()), !dbg !2866
  %2 = icmp ugt i32 %0, 15, !dbg !2867
  br i1 %2, label %11, label %3, !dbg !2869

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2870
  %5 = xor i32 %4, -1, !dbg !2871
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2872
  %7 = and i32 %6, %5, !dbg !2872
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2872
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2873
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2874
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2875
  store i32 0, i32* %9, align 4, !dbg !2876
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2877
  store i32 0, i32* %10, align 4, !dbg !2878
  br label %11, !dbg !2879

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2866
  ret i32 %12, !dbg !2880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2886, metadata !DIExpression()), !dbg !2887
  %2 = icmp ugt i32 %0, 3, !dbg !2888
  br i1 %2, label %13, label %3, !dbg !2890

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2891
  %5 = and i32 %4, -769, !dbg !2891
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2891
  %6 = shl nuw nsw i32 %0, 8, !dbg !2892
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2893
  %8 = or i32 %7, %6, !dbg !2893
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2893
  %9 = icmp eq i32 %0, 0, !dbg !2894
  br i1 %9, label %10, label %11, !dbg !2896

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2897
  br label %11, !dbg !2899

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2900
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2901
  br label %13, !dbg !2902

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2887
  ret i32 %14, !dbg !2903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2915, metadata !DIExpression()), !dbg !2917
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2916, metadata !DIExpression()), !dbg !2917
  %3 = icmp ugt i32 %0, 15, !dbg !2918
  br i1 %3, label %30, label %4, !dbg !2920

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2921
  br i1 %5, label %30, label %6, !dbg !2923

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2924
  %8 = load i32, i32* %7, align 4, !dbg !2924
  %9 = and i32 %8, 4095, !dbg !2926
  %10 = icmp eq i32 %9, 0, !dbg !2926
  br i1 %10, label %12, label %11, !dbg !2927

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2928
  unreachable, !dbg !2928

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2930
  %14 = load i32, i32* %13, align 4, !dbg !2930
  %15 = and i32 %14, 4095, !dbg !2932
  %16 = icmp eq i32 %15, 0, !dbg !2932
  br i1 %16, label %18, label %17, !dbg !2933

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2934
  unreachable, !dbg !2934

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2936
  store volatile i32 %8, i32* %19, align 4, !dbg !2937
  %20 = load i32, i32* %7, align 4, !dbg !2938
  %21 = load i32, i32* %13, align 4, !dbg !2939
  %22 = add i32 %21, %20, !dbg !2940
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2941
  store volatile i32 %22, i32* %23, align 4, !dbg !2942
  %24 = load volatile i32, i32* %19, align 4, !dbg !2943
  %25 = or i32 %24, 256, !dbg !2943
  store volatile i32 %25, i32* %19, align 4, !dbg !2943
  %26 = load volatile i32, i32* %19, align 4, !dbg !2944
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2945
  store i32 %26, i32* %27, align 4, !dbg !2946
  %28 = load volatile i32, i32* %23, align 4, !dbg !2947
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2948
  store i32 %28, i32* %29, align 4, !dbg !2949
  br label %30, !dbg !2950

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2917
  ret i32 %31, !dbg !2951
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2956, metadata !DIExpression()), !dbg !2958
  %2 = and i32 %0, 31, !dbg !2959
  %3 = icmp eq i32 %2, 0, !dbg !2959
  br i1 %3, label %4, label %9, !dbg !2961

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2962
  call void @llvm.dbg.value(metadata i32 %5, metadata !2957, metadata !DIExpression()), !dbg !2958
  %6 = and i32 %0, -32, !dbg !2963
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2964
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2965
  %8 = or i32 %7, 5, !dbg !2965
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2965
  tail call void asm sideeffect "isb", ""() #22, !dbg !2966, !srcloc !2785
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2968
  br label %9, !dbg !2969

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2958
  ret i32 %10, !dbg !2970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2975, metadata !DIExpression()), !dbg !2979
  call void @llvm.dbg.value(metadata i32 %1, metadata !2976, metadata !DIExpression()), !dbg !2979
  %3 = add i32 %1, %0, !dbg !2980
  call void @llvm.dbg.value(metadata i32 %3, metadata !2978, metadata !DIExpression()), !dbg !2979
  %4 = or i32 %1, %0, !dbg !2981
  %5 = and i32 %4, 31, !dbg !2981
  %6 = icmp eq i32 %5, 0, !dbg !2981
  br i1 %6, label %7, label %16, !dbg !2981

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2983
  call void @llvm.dbg.value(metadata i32 %8, metadata !2977, metadata !DIExpression()), !dbg !2979
  call void @llvm.dbg.value(metadata i32 %0, metadata !2975, metadata !DIExpression()), !dbg !2979
  %9 = icmp ugt i32 %3, %0, !dbg !2984
  br i1 %9, label %10, label %15, !dbg !2985

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2975, metadata !DIExpression()), !dbg !2979
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !2986
  %13 = add i32 %11, 32, !dbg !2988
  call void @llvm.dbg.value(metadata i32 %13, metadata !2975, metadata !DIExpression()), !dbg !2979
  %14 = icmp ult i32 %13, %3, !dbg !2984
  br i1 %14, label %10, label %15, !dbg !2985, !llvm.loop !2989

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2991, !srcloc !2785
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2993
  br label %16, !dbg !2994

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2979
  ret i32 %17, !dbg !2995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2998, metadata !DIExpression()), !dbg !3000
  %2 = and i32 %0, 31, !dbg !3001
  %3 = icmp eq i32 %2, 0, !dbg !3001
  br i1 %3, label %4, label %9, !dbg !3003

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3004
  call void @llvm.dbg.value(metadata i32 %5, metadata !2999, metadata !DIExpression()), !dbg !3000
  %6 = and i32 %0, -32, !dbg !3005
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3006
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3007
  %8 = or i32 %7, 21, !dbg !3007
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3007
  tail call void asm sideeffect "isb", ""() #22, !dbg !3008, !srcloc !2785
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3010
  br label %9, !dbg !3011

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3000
  ret i32 %10, !dbg !3012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3015, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %1, metadata !3016, metadata !DIExpression()), !dbg !3019
  %3 = add i32 %1, %0, !dbg !3020
  call void @llvm.dbg.value(metadata i32 %3, metadata !3018, metadata !DIExpression()), !dbg !3019
  %4 = or i32 %1, %0, !dbg !3021
  %5 = and i32 %4, 31, !dbg !3021
  %6 = icmp eq i32 %5, 0, !dbg !3021
  br i1 %6, label %7, label %16, !dbg !3021

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3023
  call void @llvm.dbg.value(metadata i32 %8, metadata !3017, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %0, metadata !3015, metadata !DIExpression()), !dbg !3019
  %9 = icmp ugt i32 %3, %0, !dbg !3024
  br i1 %9, label %10, label %15, !dbg !3025

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3015, metadata !DIExpression()), !dbg !3019
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3026
  %13 = add i32 %11, 32, !dbg !3028
  call void @llvm.dbg.value(metadata i32 %13, metadata !3015, metadata !DIExpression()), !dbg !3019
  %14 = icmp ult i32 %13, %3, !dbg !3024
  br i1 %14, label %10, label %15, !dbg !3025, !llvm.loop !3029

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3031, !srcloc !2785
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3033
  br label %16, !dbg !3034

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3019
  ret i32 %17, !dbg !3035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3036 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %1, metadata !3038, metadata !DIExpression()), !dbg !3040
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3041
  %3 = and i32 %2, -31, !dbg !3041
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3041
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3042
  %5 = or i32 %4, 19, !dbg !3042
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3042
  tail call void asm sideeffect "isb", ""() #22, !dbg !3043, !srcloc !2785
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3045
  ret i32 0, !dbg !3046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3051, metadata !DIExpression()), !dbg !3053
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3054
  %3 = and i32 %2, 8, !dbg !3056
  %4 = icmp eq i32 %3, 0, !dbg !3056
  br i1 %4, label %23, label %5, !dbg !3057

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3052, metadata !DIExpression()), !dbg !3053
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3058
  %8 = shl nuw nsw i32 1, %6, !dbg !3063
  %9 = and i32 %7, %8, !dbg !3064
  %10 = icmp eq i32 %9, 0, !dbg !3064
  br i1 %10, label %20, label %11, !dbg !3065

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3066
  %13 = load volatile i32, i32* %12, align 4, !dbg !3066
  %14 = and i32 %13, -257, !dbg !3069
  %15 = icmp ugt i32 %14, %0, !dbg !3070
  br i1 %15, label %20, label %16, !dbg !3071

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3072
  %18 = load volatile i32, i32* %17, align 4, !dbg !3072
  %19 = icmp ugt i32 %18, %0, !dbg !3073
  br i1 %19, label %23, label %20, !dbg !3074

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3075
  call void @llvm.dbg.value(metadata i32 %21, metadata !3052, metadata !DIExpression()), !dbg !3053
  %22 = icmp eq i32 %21, 16, !dbg !3076
  br i1 %22, label %23, label %5, !dbg !3077, !llvm.loop !3078

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3053
  ret i1 %24, !dbg !3080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3087, metadata !DIExpression()), !dbg !3088
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3089
  br i1 %2, label %3, label %26, !dbg !3091

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3092
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3094
  %6 = load i32, i32* %5, align 4, !dbg !3094
  %7 = icmp eq i32 %6, 1, !dbg !3095
  br i1 %7, label %26, label %8, !dbg !3096

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3097
  %10 = load i8, i8* %9, align 4, !dbg !3097, !range !2742
  %11 = icmp eq i8 %10, 0, !dbg !3097
  br i1 %11, label %12, label %26, !dbg !3098

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3099
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3100
  tail call void @gpt_open_clock_source() #20, !dbg !3101
  store i8 1, i8* %9, align 4, !dbg !3102
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3103
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3103
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3104
  %18 = load volatile i32, i32* %17, align 4, !dbg !3105
  %19 = and i32 %18, -2, !dbg !3105
  store volatile i32 %19, i32* %17, align 4, !dbg !3105
  %20 = shl nuw i32 1, %0, !dbg !3106
  %21 = xor i32 %20, -1, !dbg !3107
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3108
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3109
  %24 = load volatile i32, i32* %23, align 4, !dbg !3110
  %25 = and i32 %24, %21, !dbg !3110
  store volatile i32 %25, i32* %23, align 4, !dbg !3110
  br label %26, !dbg !3111

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3088
  ret i32 %27, !dbg !3112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3117, metadata !DIExpression()), !dbg !3118
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3119, !range !2742
  %3 = icmp ne i8 %2, 0, !dbg !3121
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3122
  %7 = and i1 %5, %6, !dbg !3122
  ret i1 %7, !dbg !3123
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3126, metadata !DIExpression()), !dbg !3127
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3128
  br i1 %2, label %3, label %14, !dbg !3130

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3131
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3133
  %6 = load i32, i32* %5, align 4, !dbg !3133
  %7 = icmp eq i32 %6, 1, !dbg !3134
  br i1 %7, label %14, label %8, !dbg !3135

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3136
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3137
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3138
  store i8 0, i8* %11, align 4, !dbg !3139
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3140
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3140
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3141
  br label %14, !dbg !3142

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3127
  ret i32 %15, !dbg !3143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3149, metadata !DIExpression()), !dbg !3151
  call void @llvm.dbg.value(metadata i32* %1, metadata !3150, metadata !DIExpression()), !dbg !3151
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3152

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3153
  %5 = icmp eq i32 %4, 1, !dbg !3157
  br i1 %5, label %8, label %6, !dbg !3158

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3159
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3161
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3162
  br label %8, !dbg !3163

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3164
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3165
  br label %20, !dbg !3166

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3167
  %13 = icmp eq i32 %12, 1, !dbg !3171
  br i1 %13, label %16, label %14, !dbg !3172

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3173
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3175
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3176
  br label %16, !dbg !3177

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3178
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3179
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3180
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3181
  store i32 %21, i32* %1, align 4, !dbg !3181
  br label %22, !dbg !3182

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3151
  ret i32 %23, !dbg !3183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3188, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata i32 %1, metadata !3189, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata i32* %2, metadata !3190, metadata !DIExpression()), !dbg !3191
  %4 = icmp eq i32* %2, null, !dbg !3192
  br i1 %4, label %7, label %5, !dbg !3194

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3195
  store i32 %6, i32* %2, align 4, !dbg !3195
  br label %7, !dbg !3197

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3191
  ret i32 %8, !dbg !3198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3204, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32* %1, metadata !3205, metadata !DIExpression()), !dbg !3206
  %3 = icmp ugt i32 %0, 5, !dbg !3207
  br i1 %3, label %7, label %4, !dbg !3209

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3210
  %6 = load i32, i32* %5, align 4, !dbg !3210
  store i32 %6, i32* %1, align 4, !dbg !3211
  br label %7, !dbg !3212

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3206
  ret i32 %8, !dbg !3213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3218, metadata !DIExpression()), !dbg !3221
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3219, metadata !DIExpression()), !dbg !3221
  call void @llvm.dbg.value(metadata i8* %2, metadata !3220, metadata !DIExpression()), !dbg !3221
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3222
  br i1 %4, label %5, label %18, !dbg !3224

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3225
  %7 = load i32, i32* %6, align 4, !dbg !3225
  %8 = icmp eq i32 %7, 1, !dbg !3227
  br i1 %8, label %18, label %9, !dbg !3228

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3229
  %11 = load i8, i8* %10, align 4, !dbg !3229, !range !2742
  %12 = icmp eq i8 %11, 1, !dbg !3230
  br i1 %12, label %13, label %18, !dbg !3231

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3232
  br i1 %14, label %18, label %15, !dbg !3234

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3235
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3236
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3237
  store i8* %2, i8** %17, align 4, !dbg !3238
  tail call void @gpt_nvic_register() #20, !dbg !3239
  br label %18, !dbg !3240

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3221
  ret i32 %19, !dbg !3241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3242 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3247, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.value(metadata i32 %1, metadata !3248, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.value(metadata i32 %2, metadata !3249, metadata !DIExpression()), !dbg !3251
  %5 = bitcast i32* %4 to i8*, !dbg !3252
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3252
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3250, metadata !DIExpression()), !dbg !3253
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3254
  br i1 %6, label %7, label %51, !dbg !3256

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3257
  %9 = load i32, i32* %8, align 4, !dbg !3257
  %10 = icmp eq i32 %9, 1, !dbg !3259
  br i1 %10, label %51, label %11, !dbg !3260

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3261
  %13 = load i8, i8* %12, align 4, !dbg !3261, !range !2742
  %14 = icmp eq i8 %13, 1, !dbg !3262
  br i1 %14, label %15, label %51, !dbg !3263

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3264
  br i1 %16, label %51, label %17, !dbg !3266

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3267
  store volatile i32 %18, i32* %4, align 4, !dbg !3268
  tail call void @gpt_open_clock_source() #20, !dbg !3269
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3270
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3270
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3271
  %22 = load volatile i32, i32* %21, align 4, !dbg !3272
  %23 = and i32 %22, -2, !dbg !3272
  store volatile i32 %23, i32* %21, align 4, !dbg !3272
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3273
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3274
  %26 = load volatile i32, i32* %25, align 4, !dbg !3275
  %27 = and i32 %26, -2, !dbg !3275
  store volatile i32 %27, i32* %25, align 4, !dbg !3275
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3276
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3277
  store volatile i32 16, i32* %29, align 4, !dbg !3278
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3279
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3280
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3281
  store volatile i32 %30, i32* %32, align 4, !dbg !3282
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3283
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3284
  store volatile i32 1, i32* %34, align 4, !dbg !3285
  %35 = shl i32 %2, 4, !dbg !3286
  %36 = or i32 %35, 2, !dbg !3287
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3288
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3289
  store volatile i32 %36, i32* %38, align 4, !dbg !3290
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3291

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3292
  %43 = icmp eq i32 %42, 0, !dbg !3291
  br i1 %43, label %44, label %41, !dbg !3291, !llvm.loop !3293

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3295
  %46 = load volatile i32, i32* %45, align 4, !dbg !3296
  %47 = or i32 %46, 1, !dbg !3296
  store volatile i32 %47, i32* %45, align 4, !dbg !3296
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3297
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3298
  store volatile i32 1, i32* %49, align 4, !dbg !3299
  store i32 1, i32* %8, align 4, !dbg !3300
  %50 = load volatile i32, i32* %4, align 4, !dbg !3301
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3302
  br label %51, !dbg !3303

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3251
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3304
  ret i32 %52, !dbg !3304
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3309, metadata !DIExpression()), !dbg !3310
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3311
  %3 = icmp eq i32 %2, 1, !dbg !3313
  br i1 %3, label %6, label %4, !dbg !3314

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3315
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3317
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3318
  br label %6, !dbg !3319

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3320
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3321
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3322
  ret i32 0, !dbg !3323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3324 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3326, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i32 %1, metadata !3327, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i32 %2, metadata !3328, metadata !DIExpression()), !dbg !3330
  %5 = bitcast i32* %4 to i8*, !dbg !3331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3331
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3329, metadata !DIExpression()), !dbg !3332
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3333
  br i1 %6, label %7, label %50, !dbg !3335

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3336
  %9 = load i32, i32* %8, align 4, !dbg !3336
  %10 = icmp eq i32 %9, 1, !dbg !3338
  br i1 %10, label %50, label %11, !dbg !3339

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3340
  %13 = load i8, i8* %12, align 4, !dbg !3340, !range !2742
  %14 = icmp eq i8 %13, 1, !dbg !3341
  br i1 %14, label %15, label %50, !dbg !3342

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3343
  store i8 1, i8* %16, align 1, !dbg !3344
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3345
  store volatile i32 %17, i32* %4, align 4, !dbg !3346
  tail call void @gpt_open_clock_source() #20, !dbg !3347
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3348
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3348
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3349
  %21 = load volatile i32, i32* %20, align 4, !dbg !3350
  %22 = and i32 %21, -2, !dbg !3350
  store volatile i32 %22, i32* %20, align 4, !dbg !3350
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3351
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3352
  %25 = load volatile i32, i32* %24, align 4, !dbg !3353
  %26 = and i32 %25, -2, !dbg !3353
  store volatile i32 %26, i32* %24, align 4, !dbg !3353
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3354
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3355
  store volatile i32 12, i32* %28, align 4, !dbg !3356
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3357
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3358
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3359
  store volatile i32 %29, i32* %31, align 4, !dbg !3360
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3361
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3362
  store volatile i32 1, i32* %33, align 4, !dbg !3363
  %34 = shl i32 %2, 4, !dbg !3364
  %35 = or i32 %34, 2, !dbg !3365
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3366
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3367
  store volatile i32 %35, i32* %37, align 4, !dbg !3368
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3369

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3370
  %42 = icmp eq i32 %41, 0, !dbg !3369
  br i1 %42, label %43, label %40, !dbg !3369, !llvm.loop !3371

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3373
  %45 = load volatile i32, i32* %44, align 4, !dbg !3374
  %46 = or i32 %45, 1, !dbg !3374
  store volatile i32 %46, i32* %44, align 4, !dbg !3374
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3375
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3376
  store volatile i32 1, i32* %48, align 4, !dbg !3377
  %49 = load volatile i32, i32* %4, align 4, !dbg !3378
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3379
  store i32 1, i32* %8, align 4, !dbg !3380
  br label %50, !dbg !3381

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3382
  ret i32 %51, !dbg !3382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3385, metadata !DIExpression()), !dbg !3386
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3387
  %3 = icmp eq i32 %2, 1, !dbg !3389
  br i1 %3, label %6, label %4, !dbg !3390

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3391
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3393
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3394
  br label %6, !dbg !3395

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3396
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3397
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3398
  ret i32 0, !dbg !3399
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3400 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3402, metadata !DIExpression()), !dbg !3404
  %3 = bitcast i32* %2 to i8*, !dbg !3405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3405
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3403, metadata !DIExpression()), !dbg !3406
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3407
  br i1 %4, label %5, label %24, !dbg !3409

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3410
  store volatile i32 %6, i32* %2, align 4, !dbg !3411
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3412
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3412
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3413
  %10 = load volatile i32, i32* %9, align 4, !dbg !3414
  %11 = and i32 %10, -2, !dbg !3414
  store volatile i32 %11, i32* %9, align 4, !dbg !3414
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3415
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3416
  %14 = load volatile i32, i32* %13, align 4, !dbg !3417
  %15 = and i32 %14, -2, !dbg !3417
  store volatile i32 %15, i32* %13, align 4, !dbg !3417
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3418
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3419
  store volatile i32 1, i32* %17, align 4, !dbg !3420
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3421
  store i32 0, i32* %18, align 4, !dbg !3422
  %19 = load volatile i32, i32* %2, align 4, !dbg !3423
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3424
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3425
  %21 = load i8, i8* %20, align 1, !dbg !3425, !range !2742
  %22 = icmp eq i8 %21, 0, !dbg !3425
  br i1 %22, label %24, label %23, !dbg !3427

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3428
  br label %24, !dbg !3430

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3431
  ret i32 %25, !dbg !3431
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3432 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3436, metadata !DIExpression()), !dbg !3439
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3440
  %3 = icmp ugt i32 %2, 31, !dbg !3442
  br i1 %3, label %13, label %4, !dbg !3443

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3444
  br i1 %5, label %13, label %6, !dbg !3446

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3447
  call void @llvm.dbg.value(metadata i32 %7, metadata !3438, metadata !DIExpression()), !dbg !3439
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %8, metadata !3437, metadata !DIExpression()), !dbg !3439
  %9 = or i32 %8, -559087616, !dbg !3449
  store i32 %9, i32* %0, align 4, !dbg !3450
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3451
  store i8 1, i8* %10, align 4, !dbg !3452
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3453
  %12 = add i32 %11, 1, !dbg !3453
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3453
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3454
  br label %13, !dbg !3455

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3439
  ret i32 %14, !dbg !3456
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3457 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3459, metadata !DIExpression()), !dbg !3461
  %3 = bitcast i32* %2 to i8*, !dbg !3462
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3462
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3460, metadata !DIExpression()), !dbg !3463
  %4 = and i32 %0, -559087616, !dbg !3464
  %5 = icmp eq i32 %4, -559087616, !dbg !3466
  br i1 %5, label %6, label %24, !dbg !3467

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3468
  store volatile i32 %7, i32* %2, align 4, !dbg !3469
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3470
  %9 = icmp eq i32 %8, 0, !dbg !3472
  br i1 %9, label %24, label %10, !dbg !3473

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3474
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3476
  %13 = load i8, i8* %12, align 1, !dbg !3476, !range !2742
  %14 = icmp eq i8 %13, 0, !dbg !3476
  br i1 %14, label %15, label %24, !dbg !3477

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3478
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3480
  %18 = load i8, i8* %17, align 4, !dbg !3480, !range !2742
  %19 = icmp eq i8 %18, 1, !dbg !3481
  br i1 %19, label %20, label %24, !dbg !3482

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3483
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3484
  store i8 0, i8* %22, align 4, !dbg !3485
  %23 = add i32 %8, -1, !dbg !3486
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3486
  br label %24, !dbg !3487

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3461
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3488
  ret i32 %25, !dbg !3488
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3493, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i32 %1, metadata !3494, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3495, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i8* %3, metadata !3496, metadata !DIExpression()), !dbg !3500
  %5 = and i32 %0, -559087616, !dbg !3501
  %6 = icmp ne i32 %5, -559087616, !dbg !3503
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3504
  call void @llvm.dbg.value(metadata i32 %0, metadata !3499, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3500
  br i1 %8, label %44, label %9, !dbg !3504

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3505
  call void @llvm.dbg.value(metadata i32 %10, metadata !3499, metadata !DIExpression()), !dbg !3500
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3506
  %12 = load i8, i8* %11, align 1, !dbg !3506, !range !2742
  %13 = icmp eq i8 %12, 0, !dbg !3506
  br i1 %13, label %14, label %44, !dbg !3508

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3509
  %16 = load i8, i8* %15, align 4, !dbg !3509, !range !2742
  %17 = icmp eq i8 %16, 1, !dbg !3511
  br i1 %17, label %18, label %44, !dbg !3512

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3513
  br i1 %19, label %44, label %20, !dbg !3515

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3516
  call void @llvm.dbg.value(metadata i32 %21, metadata !3498, metadata !DIExpression()), !dbg !3500
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3517
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3518, !range !2742
  %23 = icmp eq i8 %22, 0, !dbg !3520
  br i1 %23, label %24, label %27, !dbg !3521

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3522
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3524
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3525
  br label %27, !dbg !3526

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3527
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3528, !range !2742
  %30 = icmp eq i8 %29, 0, !dbg !3530
  br i1 %30, label %31, label %34, !dbg !3531

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3532
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %33, metadata !3497, metadata !DIExpression()), !dbg !3500
  br label %34, !dbg !3535

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3536
  call void @llvm.dbg.value(metadata i32 %35, metadata !3497, metadata !DIExpression()), !dbg !3500
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3537
  %37 = add i32 %36, %35, !dbg !3537
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3537
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3538
  %39 = add i32 %38, 1, !dbg !3538
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3538
  store i8 1, i8* %11, align 1, !dbg !3539
  %40 = add i32 %37, %1, !dbg !3540
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3541
  store i32 %40, i32* %41, align 4, !dbg !3542
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3543
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3544
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3545
  store i8* %3, i8** %43, align 4, !dbg !3546
  tail call void @gpt_sw_start_timer() #20, !dbg !3547
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3548
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3549
  br label %44, !dbg !3550

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3500
  ret i32 %45, !dbg !3551
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3554, metadata !DIExpression()), !dbg !3558
  %2 = and i32 %0, -559087616, !dbg !3559
  %3 = icmp eq i32 %2, -559087616, !dbg !3561
  br i1 %3, label %4, label %31, !dbg !3562

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %5, metadata !3557, metadata !DIExpression()), !dbg !3558
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3564
  %7 = load i8, i8* %6, align 1, !dbg !3564, !range !2742
  %8 = icmp eq i8 %7, 1, !dbg !3566
  br i1 %8, label %9, label %31, !dbg !3567

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3568
  %11 = load i8, i8* %10, align 4, !dbg !3568, !range !2742
  %12 = icmp eq i8 %11, 1, !dbg !3570
  br i1 %12, label %13, label %31, !dbg !3571

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %14, metadata !3556, metadata !DIExpression()), !dbg !3558
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3573
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3574
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3575
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3576, !range !2742
  %17 = icmp eq i8 %16, 0, !dbg !3578
  br i1 %17, label %18, label %21, !dbg !3579

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3580
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3582
  call void @llvm.dbg.value(metadata i32 %20, metadata !3555, metadata !DIExpression()), !dbg !3558
  br label %21, !dbg !3583

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3584
  call void @llvm.dbg.value(metadata i32 %22, metadata !3555, metadata !DIExpression()), !dbg !3558
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3585
  %24 = add i32 %23, %22, !dbg !3585
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3585
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3586
  %26 = add i32 %25, -1, !dbg !3586
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3586
  store i8 0, i8* %6, align 1, !dbg !3587
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3588
  %28 = icmp eq i32 %27, 0, !dbg !3590
  br i1 %28, label %30, label %29, !dbg !3591

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3592
  br label %30, !dbg !3594

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3595
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3596
  br label %31, !dbg !3597

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3558
  ret i32 %32, !dbg !3598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3603, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32* %1, metadata !3604, metadata !DIExpression()), !dbg !3608
  %3 = and i32 %0, -559087616, !dbg !3609
  %4 = icmp eq i32 %3, -559087616, !dbg !3611
  br i1 %4, label %5, label %20, !dbg !3612

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %6, metadata !3607, metadata !DIExpression()), !dbg !3608
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3614
  %8 = load i8, i8* %7, align 4, !dbg !3614, !range !2742
  %9 = icmp eq i8 %8, 1, !dbg !3616
  br i1 %9, label %10, label %20, !dbg !3617

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %11, metadata !3606, metadata !DIExpression()), !dbg !3608
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3619
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3620
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3621
  %15 = load volatile i32, i32* %14, align 4, !dbg !3621
  %16 = add i32 %15, %12, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %16, metadata !3605, metadata !DIExpression()), !dbg !3608
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3623
  %18 = load i32, i32* %17, align 4, !dbg !3623
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3625
  store i32 %19, i32* %1, align 4, !dbg !3626
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3627
  br label %20, !dbg !3628

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3608
  ret i32 %21, !dbg !3629
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3634, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.value(metadata i32 %1, metadata !3635, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.value(metadata i32 %2, metadata !3636, metadata !DIExpression()), !dbg !3641
  %4 = and i32 %0, 65535, !dbg !3642
  %5 = mul i32 %4, %1, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %5, metadata !3637, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3641
  %6 = lshr i32 %0, 16, !dbg !3644
  %7 = mul i32 %6, %1, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %7, metadata !3637, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3641
  %8 = and i32 %5, 65535, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %8, metadata !3639, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3641
  %9 = lshr i32 %5, 16, !dbg !3647
  %10 = add i32 %9, %7, !dbg !3648
  call void @llvm.dbg.value(metadata i32 %10, metadata !3639, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3641
  %11 = udiv i32 %10, %2, !dbg !3649
  call void @llvm.dbg.value(metadata i32 %11, metadata !3640, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3641
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3650
  %15 = or i32 %14, %8, !dbg !3651
  %16 = udiv i32 %15, %2, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %16, metadata !3640, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3641
  %17 = shl i32 %11, 16, !dbg !3653
  %18 = add i32 %16, %17, !dbg !3654
  ret i32 %18, !dbg !3655
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3656 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3660, metadata !DIExpression()), !dbg !3661
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3662
  %3 = load volatile i32, i32* %2, align 4, !dbg !3662
  ret i32 %3, !dbg !3663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3668, metadata !DIExpression()), !dbg !3669
  %2 = shl i32 %0, 5, !dbg !3670
  %3 = mul i32 %0, 7, !dbg !3671
  %4 = udiv i32 %3, 10, !dbg !3672
  %5 = add i32 %4, %2, !dbg !3673
  %6 = mul i32 %0, 6, !dbg !3674
  %7 = udiv i32 %6, 100, !dbg !3675
  %8 = add i32 %5, %7, !dbg !3676
  %9 = shl i32 %0, 3, !dbg !3677
  %10 = udiv i32 %9, 1000, !dbg !3678
  %11 = add i32 %8, %10, !dbg !3679
  ret i32 %11, !dbg !3680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3681
  br i1 %1, label %10, label %2, !dbg !3683

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3684
  br i1 %3, label %4, label %6, !dbg !3687

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3688
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3690
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3691

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3693
  br label %8, !dbg !3693

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3693
  br label %10, !dbg !3694

10:                                               ; preds = %8, %0
  ret void, !dbg !3694
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3695 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3696
  br i1 %1, label %4, label %2, !dbg !3698

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3699
  br label %4, !dbg !3701

4:                                                ; preds = %2, %0
  ret void, !dbg !3702
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3705, metadata !DIExpression()), !dbg !3706
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3707
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3708
  br i1 %2, label %3, label %6, !dbg !3710

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3711
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3713
  br label %6, !dbg !3714

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3715
  ret i32 %7, !dbg !3716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3719, metadata !DIExpression()), !dbg !3720
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3721
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3722
  br i1 %2, label %3, label %6, !dbg !3724

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3725
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3727
  br label %6, !dbg !3728

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3729
  ret i32 %7, !dbg !3730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3731 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3735, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i32 %1, metadata !3736, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i32 %2, metadata !3737, metadata !DIExpression()), !dbg !3738
  tail call void @gpt_open_clock_source() #21, !dbg !3739
  %4 = or i32 %2, %1, !dbg !3740
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3741
  store volatile i32 %4, i32* %5, align 4, !dbg !3742
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3743
  store volatile i32 49, i32* %6, align 4, !dbg !3744
  ret void, !dbg !3745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3746 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3750, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 %1, metadata !3751, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 0, metadata !3752, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 0, metadata !3753, metadata !DIExpression()), !dbg !3754
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3755
  call void @llvm.dbg.value(metadata i32 %3, metadata !3753, metadata !DIExpression()), !dbg !3754
  %4 = add i32 %1, 1, !dbg !3756
  %5 = add i32 %4, %3, !dbg !3757
  call void @llvm.dbg.value(metadata i32 %5, metadata !3752, metadata !DIExpression()), !dbg !3754
  %6 = icmp ugt i32 %5, %3, !dbg !3758
  br i1 %6, label %7, label %10, !dbg !3760

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3761
  %9 = icmp ult i32 %8, %5, !dbg !3763
  br i1 %9, label %7, label %16, !dbg !3764, !llvm.loop !3765

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3767
  %12 = icmp ult i32 %11, %3, !dbg !3769
  br i1 %12, label %13, label %10, !dbg !3770, !llvm.loop !3771

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3773
  %15 = icmp ult i32 %14, %5, !dbg !3774
  br i1 %15, label %13, label %16, !dbg !3775, !llvm.loop !3776

16:                                               ; preds = %13, %7
  ret void, !dbg !3778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3779 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3783, metadata !DIExpression()), !dbg !3784
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3785
  store volatile i32 0, i32* %2, align 4, !dbg !3786
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3787
  store volatile i32 0, i32* %3, align 4, !dbg !3788
  %4 = load volatile i32, i32* %3, align 4, !dbg !3789
  %5 = or i32 %4, 2, !dbg !3789
  store volatile i32 %5, i32* %3, align 4, !dbg !3789
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3790

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3791
  %9 = icmp eq i32 %8, 0, !dbg !3790
  br i1 %9, label %10, label %7, !dbg !3790, !llvm.loop !3792

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3794
  store volatile i32 16, i32* %11, align 4, !dbg !3795
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3796
  store volatile i32 1, i32* %12, align 4, !dbg !3797
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3798
  store volatile i32 -1, i32* %13, align 4, !dbg !3799
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3800
  br i1 %14, label %15, label %16, !dbg !3802

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3803
  br label %16, !dbg !3805

16:                                               ; preds = %15, %10
  ret void, !dbg !3806
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3807 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3809, metadata !DIExpression()), !dbg !3811
  %3 = bitcast i32* %2 to i8*, !dbg !3812
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3812
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3810, metadata !DIExpression()), !dbg !3813
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3814
  %5 = load volatile i32, i32* %4, align 4, !dbg !3814
  store volatile i32 %5, i32* %2, align 4, !dbg !3815
  %6 = load volatile i32, i32* %4, align 4, !dbg !3816
  %7 = and i32 %6, -2, !dbg !3816
  store volatile i32 %7, i32* %4, align 4, !dbg !3816
  %8 = load volatile i32, i32* %2, align 4, !dbg !3817
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3818
  ret i32 %8, !dbg !3819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3820 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3824, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 %1, metadata !3825, metadata !DIExpression()), !dbg !3826
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3827
  store volatile i32 %1, i32* %3, align 4, !dbg !3828
  ret void, !dbg !3829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3830 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3832, metadata !DIExpression()), !dbg !3837
  %5 = bitcast i32* %2 to i8*, !dbg !3838
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3838
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3834, metadata !DIExpression()), !dbg !3839
  %6 = bitcast i32* %3 to i8*, !dbg !3840
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3840
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3835, metadata !DIExpression()), !dbg !3841
  %7 = bitcast i32* %4 to i8*, !dbg !3842
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3842
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3836, metadata !DIExpression()), !dbg !3843
  call void @llvm.dbg.value(metadata i32 undef, metadata !3832, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 0, metadata !3833, metadata !DIExpression()), !dbg !3837
  br label %8, !dbg !3844

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3833, metadata !DIExpression()), !dbg !3837
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3846
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3846
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3849
  %13 = load volatile i32, i32* %12, align 4, !dbg !3849
  store volatile i32 %13, i32* %3, align 4, !dbg !3850
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3851
  %15 = load volatile i32, i32* %14, align 4, !dbg !3851
  store volatile i32 %15, i32* %4, align 4, !dbg !3852
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3853
  store volatile i32 %16, i32* %2, align 4, !dbg !3854
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3855
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3856
  store volatile i32 1, i32* %18, align 4, !dbg !3857
  %19 = load volatile i32, i32* %3, align 4, !dbg !3858
  %20 = and i32 %19, 1, !dbg !3860
  %21 = icmp eq i32 %20, 0, !dbg !3860
  br i1 %21, label %33, label %22, !dbg !3861

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3862
  %24 = and i32 %23, 1, !dbg !3863
  %25 = icmp eq i32 %24, 0, !dbg !3863
  br i1 %25, label %33, label %26, !dbg !3864

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3865
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3865
  %29 = icmp eq void (i8*)* %28, null, !dbg !3868
  br i1 %29, label %33, label %30, !dbg !3869

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3870
  %32 = load i8*, i8** %31, align 4, !dbg !3870
  tail call void %28(i8* noundef %32) #20, !dbg !3872
  br label %33, !dbg !3873

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3874
  %35 = load volatile i32, i32* %2, align 4, !dbg !3875
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3876
  %36 = add nuw nsw i32 %9, 1, !dbg !3877
  call void @llvm.dbg.value(metadata i32 %36, metadata !3833, metadata !DIExpression()), !dbg !3837
  %37 = icmp eq i32 %36, 6, !dbg !3878
  br i1 %37, label %38, label %8, !dbg !3844, !llvm.loop !3879

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3881
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3881
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3881
  ret void, !dbg !3881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3882 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3883
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3884
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3885
  ret void, !dbg !3886
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3887 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3889, metadata !DIExpression()), !dbg !3894
  %3 = bitcast i32* %2 to i8*, !dbg !3895
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3895
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3890, metadata !DIExpression()), !dbg !3896
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %4, metadata !3891, metadata !DIExpression()), !dbg !3894
  %5 = lshr i32 %4, 15, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %5, metadata !3892, metadata !DIExpression()), !dbg !3894
  %6 = and i32 %4, 32767, !dbg !3899
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3900
  %8 = add nuw nsw i32 %7, 16384, !dbg !3901
  %9 = lshr i32 %8, 15, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %9, metadata !3893, metadata !DIExpression()), !dbg !3894
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3903
  %11 = add nuw nsw i32 %9, %10, !dbg !3904
  store volatile i32 %11, i32* %2, align 4, !dbg !3905
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3906
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3907
  %14 = load volatile i32, i32* %13, align 4, !dbg !3908
  %15 = or i32 %14, 2, !dbg !3908
  store volatile i32 %15, i32* %13, align 4, !dbg !3908
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3909

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3910
  %20 = icmp eq i32 %19, 0, !dbg !3909
  br i1 %20, label %21, label %18, !dbg !3909, !llvm.loop !3911

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3913
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3914
  ret i32 %22, !dbg !3915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3916 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3920, metadata !DIExpression()), !dbg !3921
  br label %1, !dbg !3922

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3920, metadata !DIExpression()), !dbg !3921
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3924
  %4 = load i8, i8* %3, align 4, !dbg !3924, !range !2742
  %5 = icmp eq i8 %4, 1, !dbg !3928
  br i1 %5, label %6, label %9, !dbg !3929

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %7, metadata !3920, metadata !DIExpression()), !dbg !3921
  %8 = icmp eq i32 %7, 32, !dbg !3931
  br i1 %8, label %9, label %1, !dbg !3922, !llvm.loop !3932

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3921
  ret i32 %10, !dbg !3934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3935 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3939
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3939
  %4 = bitcast i32* %2 to i8*, !dbg !3939
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3939
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3940, !range !2742
  %6 = icmp eq i8 %5, 0, !dbg !3940
  br i1 %6, label %7, label %11, !dbg !3942

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3937, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  call void @llvm.dbg.value(metadata i32* %2, metadata !3938, metadata !DIExpression(DW_OP_deref)), !dbg !3943
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3944
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3945
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3946
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3947
  %9 = load i32, i32* %1, align 4, !dbg !3948
  call void @llvm.dbg.value(metadata i32 %9, metadata !3937, metadata !DIExpression()), !dbg !3943
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3949
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3950
  br label %11, !dbg !3951

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3951
  ret void, !dbg !3951
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3952 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3956, metadata !DIExpression()), !dbg !3961
  call void @llvm.dbg.value(metadata i32* %1, metadata !3957, metadata !DIExpression()), !dbg !3961
  call void @llvm.dbg.value(metadata i32 -1, metadata !3959, metadata !DIExpression()), !dbg !3961
  call void @llvm.dbg.value(metadata i32 0, metadata !3958, metadata !DIExpression()), !dbg !3961
  br label %3, !dbg !3962

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3958, metadata !DIExpression()), !dbg !3961
  call void @llvm.dbg.value(metadata i32 %5, metadata !3959, metadata !DIExpression()), !dbg !3961
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3964
  %7 = load i8, i8* %6, align 1, !dbg !3964, !range !2742
  %8 = icmp eq i8 %7, 0, !dbg !3964
  br i1 %8, label %13, label %9, !dbg !3968

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3969
  call void @llvm.dbg.value(metadata i32 %10, metadata !3960, metadata !DIExpression()), !dbg !3961
  %11 = icmp ult i32 %10, %5, !dbg !3971
  br i1 %11, label %12, label %13, !dbg !3973

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3959, metadata !DIExpression()), !dbg !3961
  store i32 %4, i32* %1, align 4, !dbg !3974
  br label %13, !dbg !3976

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3961
  call void @llvm.dbg.value(metadata i32 %14, metadata !3959, metadata !DIExpression()), !dbg !3961
  %15 = add nuw nsw i32 %4, 1, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %15, metadata !3958, metadata !DIExpression()), !dbg !3961
  %16 = icmp eq i32 %15, 32, !dbg !3978
  br i1 %16, label %17, label %3, !dbg !3962, !llvm.loop !3979

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3981
  ret void, !dbg !3982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3985, metadata !DIExpression()), !dbg !3989
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3990
  %3 = load i32, i32* %2, align 4, !dbg !3990
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3990
  %5 = sub i32 %3, %4, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %5, metadata !3986, metadata !DIExpression()), !dbg !3989
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3991
  %7 = sub i32 %6, %4, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %7, metadata !3987, metadata !DIExpression()), !dbg !3989
  %8 = icmp ugt i32 %5, %7, !dbg !3992
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %10, metadata !3988, metadata !DIExpression()), !dbg !3989
  ret i32 %10, !dbg !3995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3996 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3998, metadata !DIExpression()), !dbg !4002
  %4 = bitcast i32* %2 to i8*, !dbg !4003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4003
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4000, metadata !DIExpression()), !dbg !4004
  %5 = bitcast i32* %3 to i8*, !dbg !4005
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4005
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4001, metadata !DIExpression()), !dbg !4006
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4007
  %7 = icmp eq i32 %6, 0, !dbg !4009
  br i1 %7, label %38, label %8, !dbg !4010

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4011
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4013
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4014
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4015
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4016
  store volatile i32 %11, i32* %2, align 4, !dbg !4017
  %12 = load volatile i32, i32* %2, align 4, !dbg !4018
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4019
  %14 = add i32 %13, %12, !dbg !4019
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4019
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4020
  call void @llvm.dbg.value(metadata i32 0, metadata !3999, metadata !DIExpression()), !dbg !4002
  br label %15, !dbg !4021

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3999, metadata !DIExpression()), !dbg !4002
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4023
  %18 = load i8, i8* %17, align 1, !dbg !4023, !range !2742
  %19 = icmp eq i8 %18, 0, !dbg !4023
  br i1 %19, label %31, label %20, !dbg !4027

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4028
  store volatile i32 %21, i32* %3, align 4, !dbg !4030
  %22 = load volatile i32, i32* %3, align 4, !dbg !4031
  %23 = icmp eq i32 %22, 0, !dbg !4033
  br i1 %23, label %24, label %31, !dbg !4034

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4035
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4037
  %26 = add i32 %25, -1, !dbg !4037
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4037
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4038
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4038
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4039
  %30 = load i8*, i8** %29, align 4, !dbg !4039
  tail call void %28(i8* noundef %30) #20, !dbg !4040
  br label %31, !dbg !4041

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %32, metadata !3999, metadata !DIExpression()), !dbg !4002
  %33 = icmp eq i32 %32, 32, !dbg !4043
  br i1 %33, label %34, label %15, !dbg !4021, !llvm.loop !4044

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4046
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4047
  %36 = icmp eq i32 %35, 0, !dbg !4049
  br i1 %36, label %38, label %37, !dbg !4050

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4051
  br label %38, !dbg !4053

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4054
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4054
  ret void, !dbg !4054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4060, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4062, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 0, metadata !4061, metadata !DIExpression()), !dbg !4063
  br label %5, !dbg !4065

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %3, metadata !4061, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i32 %6, metadata !4061, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4063
  %4 = icmp eq i32 %3, 5, !dbg !4069
  br i1 %4, label %10, label %5, !dbg !4065, !llvm.loop !4070

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4061, metadata !DIExpression()), !dbg !4063
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4072
  %8 = load i32, i32* %7, align 4, !dbg !4072
  %9 = icmp eq i32 %8, %0, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %6, metadata !4061, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4063
  br i1 %9, label %10, label %2, !dbg !4076

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4063
  ret i32 %11, !dbg !4077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4083, metadata !DIExpression()), !dbg !4084
  ret i32 0, !dbg !4085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4088, metadata !DIExpression()), !dbg !4089
  ret i32 0, !dbg !4090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4095, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %1, metadata !4096, metadata !DIExpression()), !dbg !4099
  %3 = icmp ugt i32 %0, 48, !dbg !4100
  br i1 %3, label %13, label %4, !dbg !4102

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %5, metadata !4097, metadata !DIExpression()), !dbg !4099
  %6 = and i32 %0, 31, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %6, metadata !4098, metadata !DIExpression()), !dbg !4099
  %7 = icmp eq i32 %1, 0, !dbg !4105
  %8 = shl nuw i32 1, %6, !dbg !4107
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4107
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4108
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4108
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4108
  store volatile i32 %8, i32* %12, align 4, !dbg !4107
  br label %13, !dbg !4109

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4099
  ret i32 %14, !dbg !4109
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4115, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32* %1, metadata !4116, metadata !DIExpression()), !dbg !4120
  %3 = icmp ugt i32 %0, 48, !dbg !4121
  br i1 %3, label %15, label %4, !dbg !4123

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4124
  br i1 %5, label %15, label %6, !dbg !4126

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %7, metadata !4117, metadata !DIExpression()), !dbg !4120
  %8 = and i32 %0, 31, !dbg !4128
  call void @llvm.dbg.value(metadata i32 %8, metadata !4118, metadata !DIExpression()), !dbg !4120
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4129
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4130
  %11 = load volatile i32, i32* %10, align 4, !dbg !4130
  call void @llvm.dbg.value(metadata i32 %11, metadata !4119, metadata !DIExpression()), !dbg !4120
  %12 = shl nuw i32 1, %8, !dbg !4131
  %13 = and i32 %11, %12, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %13, metadata !4119, metadata !DIExpression()), !dbg !4120
  %14 = lshr i32 %13, %8, !dbg !4133
  store i32 %14, i32* %1, align 4, !dbg !4134
  br label %15, !dbg !4135

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4120
  ret i32 %16, !dbg !4136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4142, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i8 %1, metadata !4143, metadata !DIExpression()), !dbg !4147
  %3 = icmp ugt i32 %0, 48, !dbg !4148
  br i1 %3, label %18, label %4, !dbg !4150

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4151
  br i1 %5, label %18, label %6, !dbg !4153

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4154
  %8 = lshr i32 %0, 3, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %8, metadata !4144, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32 %0, metadata !4145, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4147
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %9, metadata !4146, metadata !DIExpression()), !dbg !4147
  %10 = shl nuw nsw i32 %0, 2, !dbg !4157
  %11 = and i32 %10, 28, !dbg !4157
  %12 = shl nuw i32 15, %11, !dbg !4158
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4159
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4160
  store volatile i32 %12, i32* %14, align 4, !dbg !4161
  %15 = shl nuw i32 %7, %11, !dbg !4162
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4163
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4164
  store volatile i32 %15, i32* %17, align 4, !dbg !4165
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4166
  br label %18, !dbg !4167

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4147
  ret i32 %19, !dbg !4168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4174, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32* %1, metadata !4175, metadata !DIExpression()), !dbg !4179
  %3 = icmp ugt i32 %0, 48, !dbg !4180
  br i1 %3, label %15, label %4, !dbg !4182

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4183
  br i1 %5, label %15, label %6, !dbg !4185

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4186
  call void @llvm.dbg.value(metadata i32 %7, metadata !4176, metadata !DIExpression()), !dbg !4179
  %8 = and i32 %0, 31, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %8, metadata !4177, metadata !DIExpression()), !dbg !4179
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4188
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4189
  %11 = load volatile i32, i32* %10, align 4, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %11, metadata !4178, metadata !DIExpression()), !dbg !4179
  %12 = shl nuw i32 1, %8, !dbg !4190
  %13 = and i32 %11, %12, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %13, metadata !4178, metadata !DIExpression()), !dbg !4179
  %14 = lshr i32 %13, %8, !dbg !4192
  store i32 %14, i32* %1, align 4, !dbg !4193
  br label %15, !dbg !4194

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4179
  ret i32 %16, !dbg !4195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4200, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata i32 %1, metadata !4201, metadata !DIExpression()), !dbg !4204
  %3 = icmp ugt i32 %0, 48, !dbg !4205
  br i1 %3, label %13, label %4, !dbg !4207

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %5, metadata !4202, metadata !DIExpression()), !dbg !4204
  %6 = and i32 %0, 31, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %6, metadata !4203, metadata !DIExpression()), !dbg !4204
  %7 = icmp eq i32 %1, 0, !dbg !4210
  %8 = shl nuw i32 1, %6, !dbg !4212
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4212
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4213
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4213
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4213
  store volatile i32 %8, i32* %12, align 4, !dbg !4212
  br label %13, !dbg !4214

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4204
  ret i32 %14, !dbg !4214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4217, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32* %1, metadata !4218, metadata !DIExpression()), !dbg !4222
  %3 = icmp ugt i32 %0, 48, !dbg !4223
  br i1 %3, label %15, label %4, !dbg !4225

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4226
  br i1 %5, label %15, label %6, !dbg !4228

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %7, metadata !4219, metadata !DIExpression()), !dbg !4222
  %8 = and i32 %0, 31, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %8, metadata !4220, metadata !DIExpression()), !dbg !4222
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4231
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4232
  %11 = load volatile i32, i32* %10, align 4, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %11, metadata !4221, metadata !DIExpression()), !dbg !4222
  %12 = shl nuw i32 1, %8, !dbg !4233
  %13 = and i32 %11, %12, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %13, metadata !4221, metadata !DIExpression()), !dbg !4222
  %14 = lshr i32 %13, %8, !dbg !4235
  store i32 %14, i32* %1, align 4, !dbg !4236
  br label %15, !dbg !4237

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4222
  ret i32 %16, !dbg !4238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4241, metadata !DIExpression()), !dbg !4245
  %2 = icmp ugt i32 %0, 48, !dbg !4246
  br i1 %2, label %16, label %3, !dbg !4248

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %4, metadata !4242, metadata !DIExpression()), !dbg !4245
  %5 = and i32 %0, 31, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %5, metadata !4243, metadata !DIExpression()), !dbg !4245
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4251
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4252
  %8 = load volatile i32, i32* %7, align 4, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %8, metadata !4244, metadata !DIExpression()), !dbg !4245
  %9 = shl nuw i32 1, %5, !dbg !4253
  %10 = and i32 %8, %9, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %10, metadata !4244, metadata !DIExpression()), !dbg !4245
  %11 = lshr i32 %10, %5, !dbg !4255
  %12 = icmp eq i32 %11, 0, !dbg !4255
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4257
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4257
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4257
  store volatile i32 %9, i32* %15, align 4, !dbg !4258
  br label %16, !dbg !4259

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4245
  ret i32 %17, !dbg !4259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4262, metadata !DIExpression()), !dbg !4265
  %2 = icmp ugt i32 %0, 48, !dbg !4266
  br i1 %2, label %9, label %3, !dbg !4268

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %4, metadata !4263, metadata !DIExpression()), !dbg !4265
  %5 = and i32 %0, 31, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %5, metadata !4264, metadata !DIExpression()), !dbg !4265
  %6 = shl nuw i32 1, %5, !dbg !4271
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4272
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4273
  store volatile i32 %6, i32* %8, align 4, !dbg !4274
  br label %9, !dbg !4275

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4265
  ret i32 %10, !dbg !4276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4279, metadata !DIExpression()), !dbg !4282
  %2 = icmp ugt i32 %0, 48, !dbg !4283
  br i1 %2, label %9, label %3, !dbg !4285

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %4, metadata !4280, metadata !DIExpression()), !dbg !4282
  %5 = and i32 %0, 31, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %5, metadata !4281, metadata !DIExpression()), !dbg !4282
  %6 = shl nuw i32 1, %5, !dbg !4288
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4289
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4290
  store volatile i32 %6, i32* %8, align 4, !dbg !4291
  br label %9, !dbg !4292

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4282
  ret i32 %10, !dbg !4293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4296, metadata !DIExpression()), !dbg !4299
  %2 = icmp ugt i32 %0, 48, !dbg !4300
  br i1 %2, label %14, label %3, !dbg !4302

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4303
  %5 = icmp eq i32 %4, 0, !dbg !4303
  br i1 %5, label %14, label %6, !dbg !4304

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %7, metadata !4297, metadata !DIExpression()), !dbg !4299
  %8 = and i32 %0, 31, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %8, metadata !4298, metadata !DIExpression()), !dbg !4299
  %9 = shl nuw i32 1, %8, !dbg !4307
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4308
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4309
  store volatile i32 %9, i32* %11, align 4, !dbg !4310
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4311
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4312
  store volatile i32 %9, i32* %13, align 4, !dbg !4313
  br label %14, !dbg !4314

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4299
  ret i32 %15, !dbg !4315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4318, metadata !DIExpression()), !dbg !4321
  %2 = icmp ugt i32 %0, 48, !dbg !4322
  br i1 %2, label %14, label %3, !dbg !4324

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4325
  %5 = icmp eq i32 %4, 0, !dbg !4325
  br i1 %5, label %14, label %6, !dbg !4326

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %7, metadata !4319, metadata !DIExpression()), !dbg !4321
  %8 = and i32 %0, 31, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %8, metadata !4320, metadata !DIExpression()), !dbg !4321
  %9 = shl nuw i32 1, %8, !dbg !4329
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4330
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4331
  store volatile i32 %9, i32* %11, align 4, !dbg !4332
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4333
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4334
  store volatile i32 %9, i32* %13, align 4, !dbg !4335
  br label %14, !dbg !4336

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4321
  ret i32 %15, !dbg !4337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4340, metadata !DIExpression()), !dbg !4343
  %2 = icmp ugt i32 %0, 48, !dbg !4344
  br i1 %2, label %12, label %3, !dbg !4346

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4347
  %5 = icmp eq i32 %4, 0, !dbg !4347
  br i1 %5, label %12, label %6, !dbg !4348

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %7, metadata !4341, metadata !DIExpression()), !dbg !4343
  %8 = and i32 %0, 31, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %8, metadata !4342, metadata !DIExpression()), !dbg !4343
  %9 = shl nuw i32 1, %8, !dbg !4351
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4352
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4353
  store volatile i32 %9, i32* %11, align 4, !dbg !4354
  br label %12, !dbg !4355

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4343
  ret i32 %13, !dbg !4356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4363, metadata !DIExpression()), !dbg !4365
  call void @llvm.dbg.value(metadata i32 %1, metadata !4364, metadata !DIExpression()), !dbg !4365
  %3 = icmp ugt i32 %0, 5, !dbg !4366
  br i1 %3, label %7, label %4, !dbg !4368

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4369
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4370
  store volatile i32 %1, i32* %6, align 4, !dbg !4371
  br label %7, !dbg !4372

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4365
  ret i32 %8, !dbg !4373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4378, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8 %1, metadata !4379, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8 %2, metadata !4380, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8 %3, metadata !4381, metadata !DIExpression()), !dbg !4384
  %5 = icmp ugt i32 %0, 48, !dbg !4385
  br i1 %5, label %30, label %6, !dbg !4387

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4388
  %8 = icmp eq i32 %7, 0, !dbg !4388
  br i1 %8, label %9, label %30, !dbg !4389

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %10, metadata !4382, metadata !DIExpression()), !dbg !4384
  %11 = and i32 %0, 31, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %11, metadata !4383, metadata !DIExpression()), !dbg !4384
  %12 = icmp eq i8 %1, 0, !dbg !4392
  %13 = shl nuw i32 1, %11, !dbg !4394
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4394
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4395
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4395
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4395
  store volatile i32 %13, i32* %17, align 4, !dbg !4394
  %18 = icmp eq i8 %2, 0, !dbg !4396
  %19 = shl nuw i32 1, %11, !dbg !4398
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4398
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4399
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4399
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4399
  store volatile i32 %19, i32* %23, align 4, !dbg !4398
  %24 = icmp eq i8 %3, 0, !dbg !4400
  %25 = shl nuw i32 1, %11, !dbg !4402
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4402
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4403
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4403
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4403
  store volatile i32 %25, i32* %29, align 4, !dbg !4402
  br label %30, !dbg !4404

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4384
  ret i32 %31, !dbg !4404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4407, metadata !DIExpression()), !dbg !4414
  %2 = icmp ugt i32 %0, 48, !dbg !4415
  br i1 %2, label %40, label %3, !dbg !4417

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %4, metadata !4408, metadata !DIExpression()), !dbg !4414
  %5 = and i32 %0, 31, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %5, metadata !4411, metadata !DIExpression()), !dbg !4414
  %6 = lshr i32 %0, 4, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %6, metadata !4409, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.value(metadata i32 %0, metadata !4412, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4414
  %7 = lshr i32 %0, 3, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %7, metadata !4410, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.value(metadata i32 %0, metadata !4413, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4414
  %8 = shl nuw nsw i32 %0, 2, !dbg !4422
  %9 = and i32 %8, 28, !dbg !4422
  %10 = shl nuw i32 15, %9, !dbg !4423
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4424
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4425
  store volatile i32 %10, i32* %12, align 4, !dbg !4426
  %13 = shl nuw i32 1, %5, !dbg !4427
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4428
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4429
  store volatile i32 %13, i32* %15, align 4, !dbg !4430
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4431
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4432
  store volatile i32 %13, i32* %17, align 4, !dbg !4433
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4434
  %19 = icmp eq i32 %18, 0, !dbg !4434
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4436
  br i1 %19, label %23, label %21, !dbg !4437

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4438
  br label %29, !dbg !4440

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4441
  store volatile i32 %13, i32* %24, align 4, !dbg !4443
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4444
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4445
  store volatile i32 %13, i32* %26, align 4, !dbg !4446
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4447
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4448
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4436
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4449
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4450
  store volatile i32 %13, i32* %32, align 4, !dbg !4451
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4452
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4453
  store volatile i32 %13, i32* %34, align 4, !dbg !4454
  %35 = shl nuw nsw i32 %0, 1, !dbg !4455
  %36 = and i32 %35, 30, !dbg !4455
  %37 = shl nuw i32 3, %36, !dbg !4456
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4457
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4458
  store volatile i32 %37, i32* %39, align 4, !dbg !4459
  br label %40, !dbg !4460

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4414
  ret i32 %41, !dbg !4461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4464, metadata !DIExpression()), !dbg !4469
  %2 = icmp ugt i32 %0, 48, !dbg !4470
  br i1 %2, label %34, label %3, !dbg !4472

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %4, metadata !4465, metadata !DIExpression()), !dbg !4469
  %5 = and i32 %0, 31, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %5, metadata !4467, metadata !DIExpression()), !dbg !4469
  %6 = lshr i32 %0, 3, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %6, metadata !4466, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.value(metadata i32 %0, metadata !4468, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4469
  %7 = shl nuw nsw i32 %0, 2, !dbg !4476
  %8 = and i32 %7, 28, !dbg !4476
  %9 = shl nuw i32 15, %8, !dbg !4477
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4478
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4479
  store volatile i32 %9, i32* %11, align 4, !dbg !4480
  %12 = shl nuw i32 1, %5, !dbg !4481
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4482
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4483
  store volatile i32 %12, i32* %14, align 4, !dbg !4484
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4485
  %16 = icmp eq i32 %15, 0, !dbg !4485
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4487
  br i1 %16, label %22, label %18, !dbg !4488

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4489
  store volatile i32 %12, i32* %19, align 4, !dbg !4491
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4492
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4493
  br label %28, !dbg !4494

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4495
  store volatile i32 %12, i32* %23, align 4, !dbg !4497
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4498
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4499
  store volatile i32 %12, i32* %25, align 4, !dbg !4500
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4501
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4502
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4487
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4503
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4504
  store volatile i32 %12, i32* %31, align 4, !dbg !4505
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4506
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4507
  store volatile i32 %12, i32* %33, align 4, !dbg !4508
  br label %34, !dbg !4509

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4469
  ret i32 %35, !dbg !4510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4515, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %1, metadata !4516, metadata !DIExpression()), !dbg !4519
  %3 = icmp ugt i32 %0, 48, !dbg !4520
  br i1 %3, label %14, label %4, !dbg !4522

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %5, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %0, metadata !4518, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4519
  %6 = shl nuw nsw i32 %0, 1, !dbg !4524
  %7 = and i32 %6, 30, !dbg !4524
  %8 = shl nuw i32 3, %7, !dbg !4525
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4526
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4527
  store volatile i32 %8, i32* %10, align 4, !dbg !4528
  %11 = shl i32 %1, %7, !dbg !4529
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4530
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4531
  store volatile i32 %11, i32* %13, align 4, !dbg !4532
  br label %14, !dbg !4533

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4519
  ret i32 %15, !dbg !4534
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4540, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.value(metadata i32* %1, metadata !4541, metadata !DIExpression()), !dbg !4545
  %3 = icmp ugt i32 %0, 48, !dbg !4546
  br i1 %3, label %18, label %4, !dbg !4548

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4549
  br i1 %5, label %18, label %6, !dbg !4551

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %7, metadata !4542, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.value(metadata i32 %0, metadata !4543, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4545
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4553
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4554
  %10 = load volatile i32, i32* %9, align 4, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %10, metadata !4544, metadata !DIExpression()), !dbg !4545
  %11 = shl nuw nsw i32 %0, 1, !dbg !4555
  %12 = and i32 %11, 30, !dbg !4555
  %13 = shl nuw i32 3, %12, !dbg !4556
  %14 = and i32 %10, %13, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %14, metadata !4544, metadata !DIExpression()), !dbg !4545
  %15 = lshr i32 %14, %12, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %15, metadata !4544, metadata !DIExpression()), !dbg !4545
  %16 = shl i32 %15, 2, !dbg !4559
  %17 = add i32 %16, 4, !dbg !4559
  store i32 %17, i32* %1, align 4, !dbg !4560
  br label %18, !dbg !4561

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4545
  ret i32 %19, !dbg !4562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4563 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4567, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i1 %1, metadata !4568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4632
  %4 = bitcast i32* %3 to i8*, !dbg !4633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4633
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4634
  %6 = load volatile i32, i32* %5, align 4, !dbg !4634
  %7 = icmp eq i32 %6, 2, !dbg !4636
  br i1 %7, label %9, label %8, !dbg !4637

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4638
  unreachable, !dbg !4638

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4640
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4640
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4574, metadata !DIExpression()), !dbg !4632
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %12, metadata !4569, metadata !DIExpression()), !dbg !4632
  br i1 %1, label %13, label %14, !dbg !4642

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4643
  br label %14, !dbg !4646

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4632
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4647
  call void @llvm.dbg.value(metadata i32 %15, metadata !4630, metadata !DIExpression()), !dbg !4632
  %16 = icmp eq i32 %15, 0, !dbg !4648
  br i1 %16, label %18, label %17, !dbg !4650

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4651
  unreachable, !dbg !4651

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4653
  call void @llvm.dbg.value(metadata i32 %19, metadata !4571, metadata !DIExpression()), !dbg !4632
  %20 = icmp eq i32 %19, 0, !dbg !4655
  br i1 %20, label %43, label %21, !dbg !4656

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4657
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4657
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4572, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* undef, metadata !4573, metadata !DIExpression()), !dbg !4632
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4658
  br i1 %24, label %25, label %26, !dbg !4660

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4661
  unreachable, !dbg !4661

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4663
  %28 = load i8*, i8** %27, align 4, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %28, metadata !4573, metadata !DIExpression()), !dbg !4632
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4664
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4665
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4666
  call void @llvm.dbg.value(metadata i32* %3, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4632
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %31, metadata !4630, metadata !DIExpression()), !dbg !4632
  %32 = icmp eq i32 %31, 0, !dbg !4668
  br i1 %32, label %34, label %33, !dbg !4670

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4671
  unreachable, !dbg !4671

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4673
  call void @llvm.dbg.value(metadata i32 %35, metadata !4571, metadata !DIExpression()), !dbg !4632
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4675
  %37 = load i32, i32* %36, align 4, !dbg !4675
  %38 = icmp ult i32 %35, %37, !dbg !4676
  br i1 %38, label %43, label %39, !dbg !4677

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4678
  call void @llvm.dbg.value(metadata i32 %40, metadata !4630, metadata !DIExpression()), !dbg !4632
  %41 = icmp eq i32 %40, 0, !dbg !4680
  br i1 %41, label %43, label %42, !dbg !4682

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4683
  unreachable, !dbg !4683

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4685
  ret void, !dbg !4685
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4686 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4688, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i1 %1, metadata !4689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4696
  %4 = bitcast i32* %3 to i8*, !dbg !4697
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4697
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4698
  %6 = load volatile i32, i32* %5, align 4, !dbg !4698
  %7 = icmp eq i32 %6, 2, !dbg !4700
  br i1 %7, label %9, label %8, !dbg !4701

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4702
  unreachable, !dbg !4702

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %10, metadata !4690, metadata !DIExpression()), !dbg !4696
  br i1 %1, label %36, label %11, !dbg !4705

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4706
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4706
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4694, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8* undef, metadata !4695, metadata !DIExpression()), !dbg !4696
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4709
  br i1 %14, label %15, label %16, !dbg !4711

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4712
  unreachable, !dbg !4712

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4714
  %18 = load i8*, i8** %17, align 4, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %18, metadata !4695, metadata !DIExpression()), !dbg !4696
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4715
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4716
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4717
  call void @llvm.dbg.value(metadata i32* %3, metadata !4693, metadata !DIExpression(DW_OP_deref)), !dbg !4696
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %21, metadata !4691, metadata !DIExpression()), !dbg !4696
  %22 = icmp eq i32 %21, 0, !dbg !4719
  br i1 %22, label %24, label %23, !dbg !4721

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4722
  unreachable, !dbg !4722

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4724
  %26 = load i32, i32* %25, align 4, !dbg !4724
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4725
  %28 = load i32, i32* %27, align 4, !dbg !4725
  %29 = sub i32 %26, %28, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %29, metadata !4692, metadata !DIExpression()), !dbg !4696
  %30 = load i32, i32* %3, align 4, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %30, metadata !4693, metadata !DIExpression()), !dbg !4696
  %31 = icmp ult i32 %30, %29, !dbg !4729
  br i1 %31, label %36, label %32, !dbg !4730

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %33, metadata !4691, metadata !DIExpression()), !dbg !4696
  %34 = icmp eq i32 %33, 0, !dbg !4733
  br i1 %34, label %36, label %35, !dbg !4735

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4736
  unreachable, !dbg !4736

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4738
  ret void, !dbg !4738
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4743, metadata !DIExpression()), !dbg !4747
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4748
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4748
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4744, metadata !DIExpression()), !dbg !4747
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4749
  %5 = icmp eq i32 %4, 0, !dbg !4749
  br i1 %5, label %6, label %14, !dbg !4751

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4752
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4754
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4755
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4755
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4745, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* undef, metadata !4746, metadata !DIExpression()), !dbg !4747
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4756
  br i1 %9, label %10, label %11, !dbg !4758

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4759
  unreachable, !dbg !4759

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4761
  %13 = load i8*, i8** %12, align 4, !dbg !4761
  call void @llvm.dbg.value(metadata i8* %13, metadata !4746, metadata !DIExpression()), !dbg !4747
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4762
  br label %14, !dbg !4763

14:                                               ; preds = %11, %1
  ret void, !dbg !4764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4771, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.value(metadata i32 %1, metadata !4772, metadata !DIExpression()), !dbg !4776
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4777
  br i1 %3, label %4, label %16, !dbg !4779

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4780
  br i1 %5, label %6, label %16, !dbg !4781

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4782
  %8 = load volatile i32, i32* %7, align 4, !dbg !4782
  %9 = icmp eq i32 %8, 0, !dbg !4784
  br i1 %9, label %16, label %10, !dbg !4785

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %11, metadata !4774, metadata !DIExpression()), !dbg !4776
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4787
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4788
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4788
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4775, metadata !DIExpression()), !dbg !4776
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4789
  %15 = load i32, i32* %14, align 4, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %15, metadata !4773, metadata !DIExpression()), !dbg !4776
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4790
  br label %16, !dbg !4791

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4776
  ret i32 %17, !dbg !4792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4797, metadata !DIExpression()), !dbg !4798
  %2 = icmp ult i32 %0, 4, !dbg !4799
  ret i1 %2, !dbg !4800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4805, metadata !DIExpression()), !dbg !4806
  %2 = icmp ult i32 %0, 13, !dbg !4807
  ret i1 %2, !dbg !4808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4825, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4826, metadata !DIExpression()), !dbg !4829
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4830
  br i1 %3, label %4, label %23, !dbg !4832

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4833
  br i1 %5, label %6, label %23, !dbg !4834

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4835
  %8 = load volatile i32, i32* %7, align 4, !dbg !4835
  %9 = icmp eq i32 %8, 0, !dbg !4837
  br i1 %9, label %23, label %10, !dbg !4838

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %11, metadata !4827, metadata !DIExpression()), !dbg !4829
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4840
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4841
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4841
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4828, metadata !DIExpression()), !dbg !4829
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4842
  %15 = load i32, i32* %14, align 4, !dbg !4842
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4843
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4844
  %18 = load i32, i32* %17, align 4, !dbg !4844
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4845
  %20 = load i32, i32* %19, align 4, !dbg !4845
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4846
  %22 = load i32, i32* %21, align 4, !dbg !4846
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !4847
  br label %23, !dbg !4848

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4829
  ret i32 %24, !dbg !4849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4850 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4854, metadata !DIExpression()), !dbg !4855
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4856
  %3 = load i32, i32* %2, align 4, !dbg !4856
  %4 = icmp ult i32 %3, 13, !dbg !4857
  br i1 %4, label %5, label %17, !dbg !4858

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4859
  %7 = load i32, i32* %6, align 4, !dbg !4859
  %8 = icmp ult i32 %7, 4, !dbg !4860
  br i1 %8, label %9, label %17, !dbg !4861

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4862
  %11 = load i32, i32* %10, align 4, !dbg !4862
  %12 = icmp ult i32 %11, 2, !dbg !4863
  br i1 %12, label %13, label %17, !dbg !4864

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4865
  %15 = load i32, i32* %14, align 4, !dbg !4865
  %16 = icmp ult i32 %15, 3, !dbg !4866
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4855
  ret i1 %18, !dbg !4867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4873, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4874, metadata !DIExpression()), !dbg !4881
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4882
  br i1 %3, label %4, label %41, !dbg !4884

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4885
  br i1 %5, label %6, label %41, !dbg !4886

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %7, metadata !4878, metadata !DIExpression()), !dbg !4881
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4888
  %9 = load volatile i32, i32* %8, align 4, !dbg !4888
  %10 = icmp eq i32 %9, 0, !dbg !4890
  br i1 %10, label %12, label %11, !dbg !4891

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4892
  br label %41, !dbg !4894

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4895
  br i1 %13, label %22, label %14, !dbg !4897

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4876, metadata !DIExpression()), !dbg !4881
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4898
  store volatile i32 0, i32* %16, align 4, !dbg !4903
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4904
  store i8* null, i8** %17, align 4, !dbg !4905
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4906
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4907
  %19 = add nuw nsw i32 %15, 1, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %19, metadata !4876, metadata !DIExpression()), !dbg !4881
  %20 = icmp eq i32 %19, 4, !dbg !4909
  br i1 %20, label %21, label %14, !dbg !4910, !llvm.loop !4911

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4913
  br label %22, !dbg !4914

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4915
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4916
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4917
  %24 = load i32, i32* %23, align 4, !dbg !4917
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %25, metadata !4879, metadata !DIExpression()), !dbg !4881
  %26 = icmp eq i32 %25, 0, !dbg !4919
  br i1 %26, label %28, label %27, !dbg !4921

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4922
  unreachable, !dbg !4922

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4924
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4924
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4875, metadata !DIExpression()), !dbg !4881
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4925
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4926
  %32 = load i32, i32* %31, align 4, !dbg !4926
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4927
  %34 = load i32, i32* %33, align 4, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %34, metadata !4877, metadata !DIExpression()), !dbg !4881
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !4928
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4929
  %36 = load i32, i32* %35, align 4, !dbg !4929
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4930
  %38 = load i32, i32* %37, align 4, !dbg !4930
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4931
  %40 = load i32, i32* %39, align 4, !dbg !4931
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !4932
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4933
  br label %41, !dbg !4934

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4881
  ret i32 %42, !dbg !4935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4940, metadata !DIExpression()), !dbg !4947
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4948
  br i1 %2, label %3, label %54, !dbg !4950

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %4, metadata !4944, metadata !DIExpression()), !dbg !4947
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4952
  %6 = load volatile i32, i32* %5, align 4, !dbg !4952
  %7 = icmp eq i32 %6, 0, !dbg !4954
  br i1 %7, label %52, label %8, !dbg !4955

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4956
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4956
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4941, metadata !DIExpression()), !dbg !4947
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4957
  %11 = load volatile i32, i32* %5, align 4, !dbg !4958
  %12 = icmp eq i32 %11, 2, !dbg !4960
  br i1 %12, label %13, label %43, !dbg !4961

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %14, metadata !4942, metadata !DIExpression()), !dbg !4947
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %15, metadata !4943, metadata !DIExpression()), !dbg !4947
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %16, metadata !4945, metadata !DIExpression()), !dbg !4947
  %17 = icmp eq i32 %16, 0, !dbg !4966
  br i1 %17, label %19, label %18, !dbg !4968

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4969
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4971
  unreachable, !dbg !4971

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %20, metadata !4945, metadata !DIExpression()), !dbg !4947
  %21 = icmp eq i32 %20, 0, !dbg !4973
  br i1 %21, label %23, label %22, !dbg !4975

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4976
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4978
  unreachable, !dbg !4978

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %24, metadata !4945, metadata !DIExpression()), !dbg !4947
  %25 = icmp eq i32 %24, 0, !dbg !4980
  br i1 %25, label %27, label %26, !dbg !4982

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4983
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4985
  unreachable, !dbg !4985

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %28, metadata !4945, metadata !DIExpression()), !dbg !4947
  %29 = icmp eq i32 %28, 0, !dbg !4987
  br i1 %29, label %31, label %30, !dbg !4989

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4990
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4992
  unreachable, !dbg !4992

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %32, metadata !4945, metadata !DIExpression()), !dbg !4947
  %33 = icmp eq i32 %32, 0, !dbg !4994
  br i1 %33, label %35, label %34, !dbg !4996

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4997
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4999
  unreachable, !dbg !4999

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %36, metadata !4945, metadata !DIExpression()), !dbg !4947
  %37 = icmp eq i32 %36, 0, !dbg !5001
  br i1 %37, label %39, label %38, !dbg !5003

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5004
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5006
  unreachable, !dbg !5006

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5007
  %41 = load i32, i32* %40, align 4, !dbg !5007
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5008
  br label %43, !dbg !5009

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5010
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5011
  %45 = load i32, i32* %44, align 4, !dbg !5011
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %46, metadata !4946, metadata !DIExpression()), !dbg !4947
  %47 = icmp eq i32 %46, 0, !dbg !5013
  br i1 %47, label %49, label %48, !dbg !5015

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5016
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5018
  unreachable, !dbg !5018

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5019
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5020
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5021
  store i8* null, i8** %51, align 4, !dbg !5022
  store volatile i32 0, i32* %5, align 4, !dbg !5023
  br label %52, !dbg !5024

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4947
  br label %54, !dbg !5025

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4947
  ret i32 %55, !dbg !5025
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5030, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.value(metadata i8 %1, metadata !5031, metadata !DIExpression()), !dbg !5033
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5034
  br i1 %3, label %4, label %11, !dbg !5036

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5037
  %6 = load volatile i32, i32* %5, align 4, !dbg !5037
  %7 = icmp eq i32 %6, 1, !dbg !5039
  br i1 %7, label %8, label %11, !dbg !5040

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5041
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5041
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5032, metadata !DIExpression()), !dbg !5033
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5042
  br label %11, !dbg !5043

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5043
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5050, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %1, metadata !5051, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i32 %2, metadata !5052, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i32 0, metadata !5053, metadata !DIExpression()), !dbg !5054
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5055
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5057
  br i1 %6, label %7, label %20, !dbg !5057

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5058
  %9 = load volatile i32, i32* %8, align 4, !dbg !5058
  %10 = icmp ne i32 %9, 1, !dbg !5060
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5061
  call void @llvm.dbg.value(metadata i32 0, metadata !5053, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %1, metadata !5051, metadata !DIExpression()), !dbg !5054
  br i1 %12, label %20, label %13, !dbg !5061

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5053, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %15, metadata !5051, metadata !DIExpression()), !dbg !5054
  %16 = load i8, i8* %15, align 1, !dbg !5062
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5066
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5067
  call void @llvm.dbg.value(metadata i8* %17, metadata !5051, metadata !DIExpression()), !dbg !5054
  %18 = add nuw i32 %14, 1, !dbg !5068
  call void @llvm.dbg.value(metadata i32 %18, metadata !5053, metadata !DIExpression()), !dbg !5054
  %19 = icmp eq i32 %18, %2, !dbg !5069
  br i1 %19, label %20, label %13, !dbg !5070, !llvm.loop !5071

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5054
  ret i32 %21, !dbg !5073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5074 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5076, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %1, metadata !5077, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i32 %2, metadata !5078, metadata !DIExpression()), !dbg !5084
  %5 = bitcast i32* %4 to i8*, !dbg !5085
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5085
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5086
  %7 = xor i1 %6, true, !dbg !5088
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5088
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5088
  br i1 %11, label %45, label %12, !dbg !5088

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5089
  %14 = load volatile i32, i32* %13, align 4, !dbg !5089
  %15 = icmp eq i32 %14, 2, !dbg !5091
  br i1 %15, label %16, label %45, !dbg !5092

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5093
  call void @llvm.dbg.value(metadata i32 %17, metadata !5079, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i32* %4, metadata !5082, metadata !DIExpression(DW_OP_deref)), !dbg !5084
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5094
  call void @llvm.dbg.value(metadata i32 %18, metadata !5083, metadata !DIExpression()), !dbg !5084
  %19 = icmp eq i32 %18, 0, !dbg !5095
  br i1 %19, label %21, label %20, !dbg !5097

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5098
  unreachable, !dbg !5098

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5100
  call void @llvm.dbg.value(metadata i32 %22, metadata !5082, metadata !DIExpression()), !dbg !5084
  %23 = icmp ult i32 %22, %2, !dbg !5102
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5081, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i32 0, metadata !5080, metadata !DIExpression()), !dbg !5084
  %25 = icmp eq i32 %24, 0, !dbg !5103
  br i1 %25, label %38, label %28, !dbg !5106

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !5080, metadata !DIExpression()), !dbg !5084
  %27 = icmp eq i32 %34, %24, !dbg !5103
  br i1 %27, label %36, label %28, !dbg !5106, !llvm.loop !5107

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5080, metadata !DIExpression()), !dbg !5084
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5109
  %31 = load i8, i8* %30, align 1, !dbg !5109
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5111
  call void @llvm.dbg.value(metadata i32 %32, metadata !5083, metadata !DIExpression()), !dbg !5084
  %33 = icmp eq i32 %32, 0, !dbg !5112
  %34 = add nuw i32 %29, 1, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %34, metadata !5080, metadata !DIExpression()), !dbg !5084
  br i1 %33, label %26, label %35, !dbg !5115

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5116
  unreachable, !dbg !5116

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5118
  br label %38, !dbg !5118

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5118
  call void @llvm.dbg.value(metadata i32 %39, metadata !5082, metadata !DIExpression()), !dbg !5084
  %40 = icmp eq i32 %24, %39, !dbg !5120
  br i1 %40, label %41, label %45, !dbg !5121

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %42, metadata !5083, metadata !DIExpression()), !dbg !5084
  %43 = icmp eq i32 %42, 0, !dbg !5124
  br i1 %43, label %45, label %44, !dbg !5126

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5127
  unreachable, !dbg !5127

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !5084
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5129
  ret i32 %46, !dbg !5129
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5134, metadata !DIExpression()), !dbg !5137
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5138
  br i1 %2, label %3, label %11, !dbg !5140

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5141
  %5 = load volatile i32, i32* %4, align 4, !dbg !5141
  %6 = icmp eq i32 %5, 1, !dbg !5143
  br i1 %6, label %7, label %11, !dbg !5144

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5145
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5145
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5136, metadata !DIExpression()), !dbg !5137
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5146
  call void @llvm.dbg.value(metadata i8 %10, metadata !5135, metadata !DIExpression()), !dbg !5137
  br label %11, !dbg !5147

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5137
  ret i8 %12, !dbg !5148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5153, metadata !DIExpression()), !dbg !5156
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5157
  br i1 %2, label %3, label %11, !dbg !5159

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5160
  %5 = load volatile i32, i32* %4, align 4, !dbg !5160
  %6 = icmp eq i32 %5, 1, !dbg !5162
  br i1 %6, label %7, label %11, !dbg !5163

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5164
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5164
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5155, metadata !DIExpression()), !dbg !5156
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %10, metadata !5154, metadata !DIExpression()), !dbg !5156
  br label %11, !dbg !5166

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5156
  ret i32 %12, !dbg !5167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5172, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i8* %1, metadata !5173, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i32 %2, metadata !5174, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i8* %1, metadata !5176, metadata !DIExpression()), !dbg !5177
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5178
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5180
  br i1 %6, label %7, label %19, !dbg !5180

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5181
  %9 = load volatile i32, i32* %8, align 4, !dbg !5181
  %10 = icmp ne i32 %9, 1, !dbg !5183
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5184
  call void @llvm.dbg.value(metadata i32 0, metadata !5175, metadata !DIExpression()), !dbg !5177
  br i1 %12, label %19, label %13, !dbg !5184

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5175, metadata !DIExpression()), !dbg !5177
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5185
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5189
  store i8 %15, i8* %16, align 1, !dbg !5190
  %17 = add nuw i32 %14, 1, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %17, metadata !5175, metadata !DIExpression()), !dbg !5177
  %18 = icmp eq i32 %17, %2, !dbg !5192
  br i1 %18, label %19, label %13, !dbg !5193, !llvm.loop !5194

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5177
  ret i32 %20, !dbg !5196
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5197 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5199, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i32 %2, metadata !5201, metadata !DIExpression()), !dbg !5207
  %5 = bitcast i32* %4 to i8*, !dbg !5208
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5208
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5209
  %7 = xor i1 %6, true, !dbg !5211
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5211
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5211
  br i1 %11, label %44, label %12, !dbg !5211

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5212
  %14 = load volatile i32, i32* %13, align 4, !dbg !5212
  %15 = icmp eq i32 %14, 2, !dbg !5214
  br i1 %15, label %16, label %44, !dbg !5215

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5216
  call void @llvm.dbg.value(metadata i32 %17, metadata !5202, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i32* %4, metadata !5204, metadata !DIExpression(DW_OP_deref)), !dbg !5207
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %18, metadata !5206, metadata !DIExpression()), !dbg !5207
  %19 = icmp eq i32 %18, 0, !dbg !5218
  br i1 %19, label %21, label %20, !dbg !5220

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5221
  unreachable, !dbg !5221

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5223
  call void @llvm.dbg.value(metadata i32 %22, metadata !5204, metadata !DIExpression()), !dbg !5207
  %23 = icmp ult i32 %22, %2, !dbg !5225
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5203, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i32 0, metadata !5205, metadata !DIExpression()), !dbg !5207
  %25 = icmp eq i32 %24, 0, !dbg !5226
  br i1 %25, label %37, label %28, !dbg !5229

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5205, metadata !DIExpression()), !dbg !5207
  %27 = icmp eq i32 %33, %24, !dbg !5226
  br i1 %27, label %35, label %28, !dbg !5229, !llvm.loop !5230

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5205, metadata !DIExpression()), !dbg !5207
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5232
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5234
  call void @llvm.dbg.value(metadata i32 %31, metadata !5206, metadata !DIExpression()), !dbg !5207
  %32 = icmp eq i32 %31, 0, !dbg !5235
  %33 = add nuw i32 %29, 1, !dbg !5237
  call void @llvm.dbg.value(metadata i32 %33, metadata !5205, metadata !DIExpression()), !dbg !5207
  br i1 %32, label %26, label %34, !dbg !5238

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5239
  unreachable, !dbg !5239

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5241
  br label %37, !dbg !5241

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5241
  call void @llvm.dbg.value(metadata i32 %38, metadata !5204, metadata !DIExpression()), !dbg !5207
  %39 = icmp eq i32 %24, %38, !dbg !5243
  br i1 %39, label %40, label %44, !dbg !5244

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %41, metadata !5206, metadata !DIExpression()), !dbg !5207
  %42 = icmp eq i32 %41, 0, !dbg !5247
  br i1 %42, label %44, label %43, !dbg !5249

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5250
  unreachable, !dbg !5250

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5252
  ret i32 %45, !dbg !5252
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5257, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5258, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8* %2, metadata !5259, metadata !DIExpression()), !dbg !5265
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5266
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5268
  br i1 %6, label %7, label %39, !dbg !5268

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %8, metadata !5262, metadata !DIExpression()), !dbg !5265
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5270
  %10 = load volatile i32, i32* %9, align 4, !dbg !5270
  %11 = icmp eq i32 %10, 1, !dbg !5272
  br i1 %11, label %12, label %37, !dbg !5273

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5274
  call void @llvm.dbg.value(metadata i32 %13, metadata !5260, metadata !DIExpression()), !dbg !5265
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5275
  call void @llvm.dbg.value(metadata i32 %14, metadata !5261, metadata !DIExpression()), !dbg !5265
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5276
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5277
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5278
  store i8* %2, i8** %16, align 4, !dbg !5279
  %17 = shl i32 %0, 1, !dbg !5280
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5281
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5282
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5283
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5284
  call void @llvm.dbg.value(metadata i32 %20, metadata !5263, metadata !DIExpression()), !dbg !5265
  %21 = icmp eq i32 %20, 0, !dbg !5285
  br i1 %21, label %23, label %22, !dbg !5287

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5288
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5290
  unreachable, !dbg !5290

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5291
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5292
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5293
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5294
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5295
  call void @llvm.dbg.value(metadata i32 %27, metadata !5263, metadata !DIExpression()), !dbg !5265
  %28 = icmp eq i32 %27, 0, !dbg !5296
  br i1 %28, label %30, label %29, !dbg !5298

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5299
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5301
  unreachable, !dbg !5301

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5302
  %32 = load i32, i32* %31, align 4, !dbg !5302
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5303
  call void @llvm.dbg.value(metadata i32 %33, metadata !5264, metadata !DIExpression()), !dbg !5265
  %34 = icmp eq i32 %33, 0, !dbg !5304
  br i1 %34, label %36, label %35, !dbg !5306

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5307
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5309
  unreachable, !dbg !5309

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5310
  store volatile i32 2, i32* %9, align 4, !dbg !5311
  br label %37, !dbg !5312

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5265
  br label %39, !dbg !5313

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5265
  ret i32 %40, !dbg !5313
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5319, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i8* %1, metadata !5320, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i8* %1, metadata !5321, metadata !DIExpression()), !dbg !5322
  %3 = load i8, i8* %1, align 4, !dbg !5323, !range !2742
  %4 = icmp eq i8 %3, 0, !dbg !5323
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5325
  %6 = bitcast i8* %5 to i32*, !dbg !5325
  %7 = load i32, i32* %6, align 4, !dbg !5325
  br i1 %4, label %9, label %8, !dbg !5326

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5321, metadata !DIExpression()), !dbg !5322
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5327
  br label %10, !dbg !5329

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5330
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5332
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5335, metadata !DIExpression()), !dbg !5340
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5341
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5341
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5336, metadata !DIExpression()), !dbg !5340
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5342
  call void @llvm.dbg.value(metadata i32 %4, metadata !5337, metadata !DIExpression()), !dbg !5340
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %5, metadata !5338, metadata !DIExpression()), !dbg !5340
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5344
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5345
  %7 = load i32, i32* %6, align 4, !dbg !5345
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5346
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %9, metadata !5339, metadata !DIExpression()), !dbg !5340
  %10 = icmp eq i32 %9, 0, !dbg !5348
  br i1 %10, label %12, label %11, !dbg !5350

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5351
  unreachable, !dbg !5351

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5353
  call void @llvm.dbg.value(metadata i32 %13, metadata !5339, metadata !DIExpression()), !dbg !5340
  %14 = icmp eq i32 %13, 0, !dbg !5354
  br i1 %14, label %16, label %15, !dbg !5356

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5357
  unreachable, !dbg !5357

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %17, metadata !5339, metadata !DIExpression()), !dbg !5340
  %18 = icmp eq i32 %17, 0, !dbg !5360
  br i1 %18, label %20, label %19, !dbg !5362

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5363
  unreachable, !dbg !5363

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5365
  call void @llvm.dbg.value(metadata i32 %21, metadata !5339, metadata !DIExpression()), !dbg !5340
  %22 = icmp eq i32 %21, 0, !dbg !5366
  br i1 %22, label %24, label %23, !dbg !5368

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5369
  unreachable, !dbg !5369

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5371
  ret void, !dbg !5372
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5373 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5375, metadata !DIExpression()), !dbg !5379
  %3 = bitcast i32* %2 to i8*, !dbg !5380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5380
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5381
  br i1 %4, label %5, label %16, !dbg !5383

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5384
  %7 = load volatile i32, i32* %6, align 4, !dbg !5384
  %8 = icmp eq i32 %7, 2, !dbg !5386
  br i1 %8, label %9, label %16, !dbg !5387

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5388
  call void @llvm.dbg.value(metadata i32 %10, metadata !5376, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i32* %2, metadata !5377, metadata !DIExpression(DW_OP_deref)), !dbg !5379
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5389
  call void @llvm.dbg.value(metadata i32 %11, metadata !5378, metadata !DIExpression()), !dbg !5379
  %12 = icmp eq i32 %11, 0, !dbg !5390
  br i1 %12, label %14, label %13, !dbg !5392

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5393
  unreachable, !dbg !5393

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5395
  call void @llvm.dbg.value(metadata i32 %15, metadata !5377, metadata !DIExpression()), !dbg !5379
  br label %16, !dbg !5396

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5379
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5397
  ret i32 %17, !dbg !5397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5398 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5400, metadata !DIExpression()), !dbg !5404
  %3 = bitcast i32* %2 to i8*, !dbg !5405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5405
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5406
  br i1 %4, label %5, label %16, !dbg !5408

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5409
  %7 = load volatile i32, i32* %6, align 4, !dbg !5409
  %8 = icmp eq i32 %7, 2, !dbg !5411
  br i1 %8, label %9, label %16, !dbg !5412

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %10, metadata !5401, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.value(metadata i32* %2, metadata !5402, metadata !DIExpression(DW_OP_deref)), !dbg !5404
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %11, metadata !5403, metadata !DIExpression()), !dbg !5404
  %12 = icmp eq i32 %11, 0, !dbg !5415
  br i1 %12, label %14, label %13, !dbg !5417

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5418
  unreachable, !dbg !5418

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5420
  call void @llvm.dbg.value(metadata i32 %15, metadata !5402, metadata !DIExpression()), !dbg !5404
  br label %16, !dbg !5421

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5422
  ret i32 %17, !dbg !5422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5425, metadata !DIExpression()), !dbg !5427
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5428
  br i1 %2, label %3, label %10, !dbg !5430

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5431
  %5 = load volatile i32, i32* %4, align 4, !dbg !5431
  %6 = icmp eq i32 %5, 0, !dbg !5433
  br i1 %6, label %10, label %7, !dbg !5434

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5435
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5435
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5426, metadata !DIExpression()), !dbg !5427
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5436
  br label %10, !dbg !5437

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5427
  ret i32 %11, !dbg !5438
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5443, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i8 %1, metadata !5444, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i8 %2, metadata !5445, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i8 %3, metadata !5446, metadata !DIExpression()), !dbg !5448
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5449
  br i1 %5, label %6, label %13, !dbg !5451

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5452
  %8 = load volatile i32, i32* %7, align 4, !dbg !5452
  %9 = icmp eq i32 %8, 0, !dbg !5454
  br i1 %9, label %13, label %10, !dbg !5455

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5456
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5456
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5447, metadata !DIExpression()), !dbg !5448
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5457
  br label %13, !dbg !5458

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5448
  ret i32 %14, !dbg !5459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5462, metadata !DIExpression()), !dbg !5464
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5465
  br i1 %2, label %3, label %10, !dbg !5467

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5468
  %5 = load volatile i32, i32* %4, align 4, !dbg !5468
  %6 = icmp eq i32 %5, 0, !dbg !5470
  br i1 %6, label %10, label %7, !dbg !5471

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5472
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5472
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5463, metadata !DIExpression()), !dbg !5464
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5473
  br label %10, !dbg !5474

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5464
  ret i32 %11, !dbg !5475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5476 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5482, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5483, metadata !DIExpression()), !dbg !5494
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5495
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5495
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5485, metadata !DIExpression()), !dbg !5496
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5497
  br i1 %5, label %6, label %101, !dbg !5499

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5500
  %8 = load i8*, i8** %7, align 4, !dbg !5500
  %9 = icmp eq i8* %8, null, !dbg !5502
  br i1 %9, label %101, label %10, !dbg !5503

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5504
  %12 = load i8*, i8** %11, align 4, !dbg !5504
  %13 = icmp eq i8* %12, null, !dbg !5505
  br i1 %13, label %101, label %14, !dbg !5506

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5507
  %16 = load i32, i32* %15, align 4, !dbg !5507
  %17 = icmp ugt i32 %16, 131071, !dbg !5509
  br i1 %17, label %101, label %18, !dbg !5510

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5511
  %20 = load i32, i32* %19, align 4, !dbg !5511
  %21 = icmp ugt i32 %20, 131071, !dbg !5512
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5513
  br i1 %23, label %101, label %24, !dbg !5513

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5514
  %26 = load i32, i32* %25, align 4, !dbg !5514
  %27 = icmp ugt i32 %26, 131071, !dbg !5516
  br i1 %27, label %101, label %28, !dbg !5517

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5518
  %30 = load i32, i32* %29, align 4, !dbg !5518
  %31 = icmp ugt i32 %30, 131071, !dbg !5519
  br i1 %31, label %101, label %32, !dbg !5520

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5521
  %34 = load i32, i32* %33, align 4, !dbg !5521
  %35 = icmp ugt i32 %34, 131071, !dbg !5522
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5523
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5523
  br i1 %39, label %101, label %40, !dbg !5523

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5524
  %42 = load volatile i32, i32* %41, align 4, !dbg !5524
  %43 = icmp eq i32 %42, 1, !dbg !5526
  br i1 %43, label %44, label %101, !dbg !5527

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %45, metadata !5491, metadata !DIExpression()), !dbg !5494
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5529
  call void @llvm.dbg.value(metadata i32 %46, metadata !5492, metadata !DIExpression()), !dbg !5494
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5530
  call void @llvm.dbg.value(metadata i32 %47, metadata !5493, metadata !DIExpression()), !dbg !5494
  %48 = icmp eq i32 %47, 0, !dbg !5531
  br i1 %48, label %50, label %49, !dbg !5533

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5534
  unreachable, !dbg !5534

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5536
  %52 = ptrtoint i8* %51 to i32, !dbg !5537
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5538
  store i32 %52, i32* %53, align 4, !dbg !5539
  %54 = load i32, i32* %15, align 4, !dbg !5540
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5541
  store i32 %54, i32* %55, align 4, !dbg !5542
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5543
  call void @llvm.dbg.value(metadata i32 %56, metadata !5493, metadata !DIExpression()), !dbg !5494
  %57 = icmp eq i32 %56, 0, !dbg !5544
  br i1 %57, label %59, label %58, !dbg !5546

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5547
  unreachable, !dbg !5547

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5549
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5550
  call void @llvm.dbg.value(metadata i32 %61, metadata !5493, metadata !DIExpression()), !dbg !5494
  %62 = icmp eq i32 %61, 0, !dbg !5551
  br i1 %62, label %64, label %63, !dbg !5553

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5554
  unreachable, !dbg !5554

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %65, metadata !5493, metadata !DIExpression()), !dbg !5494
  %66 = icmp eq i32 %65, 0, !dbg !5557
  br i1 %66, label %68, label %67, !dbg !5559

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5560
  unreachable, !dbg !5560

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5562
  %70 = ptrtoint i8* %69 to i32, !dbg !5563
  store i32 %70, i32* %53, align 4, !dbg !5564
  %71 = load i32, i32* %25, align 4, !dbg !5565
  store i32 %71, i32* %55, align 4, !dbg !5566
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5567
  call void @llvm.dbg.value(metadata i32 %72, metadata !5493, metadata !DIExpression()), !dbg !5494
  %73 = icmp eq i32 %72, 0, !dbg !5568
  br i1 %73, label %75, label %74, !dbg !5570

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5571
  unreachable, !dbg !5571

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5573
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %77, metadata !5493, metadata !DIExpression()), !dbg !5494
  %78 = icmp eq i32 %77, 0, !dbg !5575
  br i1 %78, label %80, label %79, !dbg !5577

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5578
  unreachable, !dbg !5578

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5580
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5581
  call void @llvm.dbg.value(metadata i32 %82, metadata !5493, metadata !DIExpression()), !dbg !5494
  %83 = icmp eq i32 %82, 0, !dbg !5582
  br i1 %83, label %85, label %84, !dbg !5584

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5585
  unreachable, !dbg !5585

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %86, metadata !5484, metadata !DIExpression()), !dbg !5494
  %87 = load i8*, i8** %7, align 4, !dbg !5588
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5589
  store i8* %87, i8** %88, align 4, !dbg !5590
  %89 = load i32, i32* %15, align 4, !dbg !5591
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5592
  store i32 %89, i32* %90, align 4, !dbg !5593
  %91 = load i32, i32* %19, align 4, !dbg !5594
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5595
  store i32 %91, i32* %92, align 4, !dbg !5596
  %93 = load i32, i32* %33, align 4, !dbg !5597
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5598
  store i32 %93, i32* %94, align 4, !dbg !5599
  %95 = load i8*, i8** %11, align 4, !dbg !5600
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5601
  store i8* %95, i8** %96, align 4, !dbg !5602
  %97 = load i32, i32* %25, align 4, !dbg !5603
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5604
  store i32 %97, i32* %98, align 4, !dbg !5605
  %99 = load i32, i32* %29, align 4, !dbg !5606
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5607
  store i32 %99, i32* %100, align 4, !dbg !5608
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5609
  br label %101, !dbg !5610

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5611
  ret i32 %102, !dbg !5611
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5612 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5671, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 %1, metadata !5672, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5681, metadata !DIExpression()), !dbg !5687
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5688
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5688
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5685, metadata !DIExpression()), !dbg !5689
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5689
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5689
  store i32 1, i32* %5, align 4, !dbg !5689
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5689
  store i32 1, i32* %6, align 4, !dbg !5689
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5689
  store i32 1, i32* %7, align 4, !dbg !5689
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5689
  store i32 1, i32* %8, align 4, !dbg !5689
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5689
  store i32 1, i32* %9, align 4, !dbg !5689
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5690
  store volatile i32 0, i32* %10, align 4, !dbg !5691
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5692
  store volatile i32 0, i32* %11, align 4, !dbg !5693
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5694
  store volatile i32 0, i32* %12, align 4, !dbg !5695
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5696
  br i1 %13, label %14, label %17, !dbg !5698

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5699
  %16 = mul i32 %15, 1000, !dbg !5701
  call void @llvm.dbg.value(metadata i32 %16, metadata !5673, metadata !DIExpression()), !dbg !5686
  br label %17, !dbg !5702

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5703
  call void @llvm.dbg.value(metadata i32 %18, metadata !5673, metadata !DIExpression()), !dbg !5686
  %19 = shl i32 %1, 8, !dbg !5704
  %20 = udiv i32 %18, %19, !dbg !5705
  call void @llvm.dbg.value(metadata i32 %20, metadata !5674, metadata !DIExpression()), !dbg !5686
  %21 = mul i32 %18, 10, !dbg !5706
  %22 = udiv i32 %21, %19, !dbg !5707
  %23 = urem i32 %22, 10, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %23, metadata !5675, metadata !DIExpression()), !dbg !5686
  %24 = icmp ne i32 %23, 0, !dbg !5709
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5711
  %27 = zext i1 %26 to i32, !dbg !5711
  %28 = add i32 %20, %27, !dbg !5711
  call void @llvm.dbg.value(metadata i32 %28, metadata !5674, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 %28, metadata !5677, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 undef, metadata !5678, metadata !DIExpression()), !dbg !5686
  br label %29, !dbg !5712

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5686
  %31 = mul i32 %30, %1, !dbg !5686
  %32 = udiv i32 %18, %31, !dbg !5686
  call void @llvm.dbg.value(metadata i32 %32, metadata !5678, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 %30, metadata !5677, metadata !DIExpression()), !dbg !5686
  %33 = icmp ugt i32 %32, 256, !dbg !5713
  %34 = add i32 %30, 1, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %34, metadata !5677, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 undef, metadata !5678, metadata !DIExpression()), !dbg !5686
  br i1 %33, label %29, label %35, !dbg !5712, !llvm.loop !5716

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5718
  %37 = urem i32 %36, 10, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %37, metadata !5676, metadata !DIExpression()), !dbg !5686
  %38 = add nsw i32 %32, -1, !dbg !5720
  call void @llvm.dbg.value(metadata i32 %38, metadata !5678, metadata !DIExpression()), !dbg !5686
  %39 = add nsw i32 %32, -2, !dbg !5721
  %40 = lshr i32 %39, 1, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %40, metadata !5679, metadata !DIExpression()), !dbg !5686
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5723
  store volatile i32 3, i32* %41, align 4, !dbg !5724
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5725
  %43 = load volatile i32, i32* %42, align 4, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %43, metadata !5680, metadata !DIExpression()), !dbg !5686
  %44 = or i32 %43, 128, !dbg !5726
  store volatile i32 %44, i32* %42, align 4, !dbg !5727
  %45 = and i32 %30, 255, !dbg !5728
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5729
  store volatile i32 %45, i32* %46, align 4, !dbg !5730
  %47 = lshr i32 %30, 8, !dbg !5731
  %48 = and i32 %47, 255, !dbg !5732
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5733
  store volatile i32 %48, i32* %49, align 4, !dbg !5734
  store volatile i32 %43, i32* %42, align 4, !dbg !5735
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5736
  store volatile i32 %38, i32* %50, align 4, !dbg !5737
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5738
  store volatile i32 %40, i32* %51, align 4, !dbg !5739
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5740
  %53 = load i32, i32* %52, align 4, !dbg !5740
  store volatile i32 %53, i32* %11, align 4, !dbg !5741
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5742
  %55 = load i32, i32* %54, align 4, !dbg !5742
  store volatile i32 %55, i32* %12, align 4, !dbg !5743
  %56 = icmp ugt i32 %1, 2999999, !dbg !5744
  br i1 %56, label %57, label %59, !dbg !5746

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5747
  store volatile i32 18, i32* %58, align 4, !dbg !5749
  br label %59, !dbg !5750

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5751
  ret void, !dbg !5751
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5752 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5756, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %1, metadata !5757, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %2, metadata !5758, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %3, metadata !5759, metadata !DIExpression()), !dbg !5761
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5762
  %6 = load volatile i32, i32* %5, align 4, !dbg !5762
  call void @llvm.dbg.value(metadata i32 %6, metadata !5760, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5761
  store volatile i32 128, i32* %5, align 4, !dbg !5763
  %7 = trunc i32 %6 to i16, !dbg !5764
  %8 = and i16 %7, -4, !dbg !5764
  call void @llvm.dbg.value(metadata i16 %7, metadata !5760, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5761
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5765

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5766
  call void @llvm.dbg.value(metadata i16 %10, metadata !5760, metadata !DIExpression()), !dbg !5761
  br label %15, !dbg !5768

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5769
  call void @llvm.dbg.value(metadata i16 %12, metadata !5760, metadata !DIExpression()), !dbg !5761
  br label %15, !dbg !5770

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5771
  call void @llvm.dbg.value(metadata i16 %14, metadata !5760, metadata !DIExpression()), !dbg !5761
  br label %15, !dbg !5772

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5761
  call void @llvm.dbg.value(metadata i16 %16, metadata !5760, metadata !DIExpression()), !dbg !5761
  %17 = and i16 %16, -61, !dbg !5773
  call void @llvm.dbg.value(metadata i16 %16, metadata !5760, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5761
  %18 = icmp eq i32 %2, 1, !dbg !5774
  %19 = select i1 %18, i16 4, i16 0, !dbg !5774
  %20 = or i16 %17, %19, !dbg !5774
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5760, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5761
  call void @llvm.dbg.value(metadata i16 %20, metadata !5760, metadata !DIExpression()), !dbg !5761
  %21 = icmp eq i32 %3, 2, !dbg !5775
  %22 = or i16 %20, 16, !dbg !5775
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5775
  call void @llvm.dbg.value(metadata i16 %23, metadata !5760, metadata !DIExpression()), !dbg !5761
  %24 = zext i16 %23 to i32, !dbg !5776
  store volatile i32 %24, i32* %5, align 4, !dbg !5777
  ret void, !dbg !5778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5779 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5783, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata i8 %1, metadata !5784, metadata !DIExpression()), !dbg !5786
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5787

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %5, metadata !5785, metadata !DIExpression()), !dbg !5786
  %6 = and i32 %5, 32, !dbg !5790
  %7 = icmp eq i32 %6, 0, !dbg !5790
  br i1 %7, label %4, label %8, !dbg !5792, !llvm.loop !5793

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5795
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5797
  store volatile i32 %9, i32* %10, align 4, !dbg !5798
  ret void, !dbg !5799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5800 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5804, metadata !DIExpression()), !dbg !5807
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5808

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5809
  call void @llvm.dbg.value(metadata i32 %4, metadata !5805, metadata !DIExpression()), !dbg !5807
  %5 = and i32 %4, 1, !dbg !5811
  %6 = icmp eq i32 %5, 0, !dbg !5811
  br i1 %6, label %3, label %7, !dbg !5813, !llvm.loop !5814

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5816
  %9 = load volatile i32, i32* %8, align 4, !dbg !5816
  %10 = trunc i32 %9 to i8, !dbg !5818
  call void @llvm.dbg.value(metadata i8 %10, metadata !5806, metadata !DIExpression()), !dbg !5807
  ret i8 %10, !dbg !5819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5820 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5824, metadata !DIExpression()), !dbg !5827
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5828
  %3 = load volatile i32, i32* %2, align 4, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %3, metadata !5825, metadata !DIExpression()), !dbg !5827
  %4 = and i32 %3, 1, !dbg !5829
  %5 = icmp eq i32 %4, 0, !dbg !5829
  br i1 %5, label %9, label %6, !dbg !5831

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5832
  %8 = load volatile i32, i32* %7, align 4, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %8, metadata !5826, metadata !DIExpression()), !dbg !5827
  br label %9, !dbg !5834

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5835
  call void @llvm.dbg.value(metadata i32 %10, metadata !5826, metadata !DIExpression()), !dbg !5827
  ret i32 %10, !dbg !5836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5837 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5841, metadata !DIExpression()), !dbg !5844
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5845
  %3 = load volatile i32, i32* %2, align 4, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %3, metadata !5843, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5844
  store volatile i32 191, i32* %2, align 4, !dbg !5846
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5847
  %5 = load volatile i32, i32* %4, align 4, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %5, metadata !5842, metadata !DIExpression()), !dbg !5844
  %6 = and i32 %5, 65343, !dbg !5848
  %7 = or i32 %6, 192, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %5, metadata !5842, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5844
  store volatile i32 %7, i32* %4, align 4, !dbg !5849
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5850
  store volatile i32 0, i32* %8, align 4, !dbg !5851
  store volatile i32 0, i32* %2, align 4, !dbg !5852
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5853
  store volatile i32 2, i32* %9, align 4, !dbg !5854
  %10 = and i32 %3, 65535, !dbg !5855
  store volatile i32 %10, i32* %2, align 4, !dbg !5856
  ret void, !dbg !5857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5858 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5862, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8 %1, metadata !5863, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8 %2, metadata !5864, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8 %3, metadata !5865, metadata !DIExpression()), !dbg !5868
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5869
  %6 = load volatile i32, i32* %5, align 4, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %6, metadata !5867, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5868
  store volatile i32 191, i32* %5, align 4, !dbg !5870
  %7 = zext i8 %1 to i32, !dbg !5871
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5872
  store volatile i32 %7, i32* %8, align 4, !dbg !5873
  %9 = zext i8 %2 to i32, !dbg !5874
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5875
  store volatile i32 %9, i32* %10, align 4, !dbg !5876
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5877
  %12 = load volatile i32, i32* %11, align 4, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %12, metadata !5866, metadata !DIExpression()), !dbg !5868
  %13 = and i32 %12, 65509, !dbg !5878
  %14 = or i32 %13, 26, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %12, metadata !5866, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5868
  store volatile i32 %14, i32* %11, align 4, !dbg !5879
  %15 = zext i8 %3 to i32, !dbg !5880
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5881
  store volatile i32 %15, i32* %16, align 4, !dbg !5882
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5883
  store volatile i32 1, i32* %17, align 4, !dbg !5884
  %18 = and i32 %6, 65535, !dbg !5885
  store volatile i32 %18, i32* %5, align 4, !dbg !5886
  ret void, !dbg !5887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5888 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5890, metadata !DIExpression()), !dbg !5892
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5893
  %3 = load volatile i32, i32* %2, align 4, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %3, metadata !5891, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5892
  store volatile i32 191, i32* %2, align 4, !dbg !5894
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5895
  store volatile i32 0, i32* %4, align 4, !dbg !5896
  store volatile i32 0, i32* %2, align 4, !dbg !5897
  %5 = and i32 %3, 65535, !dbg !5898
  store volatile i32 %5, i32* %2, align 4, !dbg !5899
  ret void, !dbg !5900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5901 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5903, metadata !DIExpression()), !dbg !5906
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5907
  %3 = load volatile i32, i32* %2, align 4, !dbg !5907
  call void @llvm.dbg.value(metadata i32 %3, metadata !5905, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5906
  store volatile i32 191, i32* %2, align 4, !dbg !5908
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5909
  %5 = load volatile i32, i32* %4, align 4, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %5, metadata !5904, metadata !DIExpression()), !dbg !5906
  %6 = and i32 %5, 65519, !dbg !5910
  %7 = or i32 %6, 16, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %5, metadata !5904, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5906
  store volatile i32 %7, i32* %4, align 4, !dbg !5911
  store volatile i32 0, i32* %2, align 4, !dbg !5912
  store volatile i32 135, i32* %4, align 4, !dbg !5913
  %8 = and i32 %3, 65535, !dbg !5914
  store volatile i32 %8, i32* %2, align 4, !dbg !5915
  ret void, !dbg !5916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5917 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5919, metadata !DIExpression()), !dbg !5922
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5923
  %3 = load volatile i32, i32* %2, align 4, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %3, metadata !5921, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5922
  %4 = load volatile i32, i32* %2, align 4, !dbg !5924
  %5 = and i32 %4, -129, !dbg !5924
  store volatile i32 %5, i32* %2, align 4, !dbg !5924
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5925
  %7 = load volatile i32, i32* %6, align 4, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %7, metadata !5920, metadata !DIExpression()), !dbg !5922
  %8 = and i32 %7, 65530, !dbg !5926
  %9 = or i32 %8, 5, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %7, metadata !5920, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5922
  store volatile i32 %9, i32* %6, align 4, !dbg !5927
  %10 = and i32 %3, 65535, !dbg !5928
  %11 = load volatile i32, i32* %2, align 4, !dbg !5929
  %12 = and i32 %10, %11, !dbg !5929
  store volatile i32 %12, i32* %2, align 4, !dbg !5929
  ret void, !dbg !5930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5931 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5935, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %1, metadata !5936, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i16 145, metadata !5937, metadata !DIExpression()), !dbg !5938
  %3 = icmp eq i32 %1, 0, !dbg !5939
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5937, metadata !DIExpression()), !dbg !5938
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5941
  store volatile i32 %4, i32* %5, align 4, !dbg !5942
  ret void, !dbg !5943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5944 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5949, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 0, metadata !5952, metadata !DIExpression()), !dbg !5953
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5954
  %3 = load volatile i32, i32* %2, align 4, !dbg !5954
  call void @llvm.dbg.value(metadata i32 %3, metadata !5950, metadata !DIExpression()), !dbg !5953
  %4 = and i32 %3, 1, !dbg !5955
  %5 = icmp eq i32 %4, 0, !dbg !5955
  br i1 %5, label %6, label %16, !dbg !5957

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5958
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5959

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5952, metadata !DIExpression()), !dbg !5953
  br label %16, !dbg !5960

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5962
  %11 = load volatile i32, i32* %10, align 4, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %11, metadata !5951, metadata !DIExpression()), !dbg !5953
  %12 = and i32 %11, 16, !dbg !5963
  %13 = icmp eq i32 %12, 0, !dbg !5963
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5952, metadata !DIExpression()), !dbg !5953
  br label %16, !dbg !5965

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5953
  ret i32 %17, !dbg !5966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5967 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5971, metadata !DIExpression()), !dbg !5974
  call void @llvm.dbg.value(metadata i32 0, metadata !5973, metadata !DIExpression()), !dbg !5974
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5975
  %3 = load volatile i32, i32* %2, align 4, !dbg !5975
  call void @llvm.dbg.value(metadata i32 %3, metadata !5972, metadata !DIExpression()), !dbg !5974
  %4 = and i32 %3, 14, !dbg !5976
  %5 = icmp eq i32 %4, 0, !dbg !5976
  %6 = sext i1 %5 to i32, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %6, metadata !5973, metadata !DIExpression()), !dbg !5974
  ret i32 %6, !dbg !5979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5980 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5982, metadata !DIExpression()), !dbg !5984
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5985
  %3 = load volatile i32, i32* %2, align 4, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %3, metadata !5983, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5984
  call void @llvm.dbg.value(metadata i32 %3, metadata !5983, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5984
  ret void, !dbg !5986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5987 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5989, metadata !DIExpression()), !dbg !5990
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5991
  store volatile i32 191, i32* %2, align 4, !dbg !5992
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5993
  store volatile i32 16, i32* %3, align 4, !dbg !5994
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5995
  store volatile i32 0, i32* %4, align 4, !dbg !5996
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5997
  store volatile i32 0, i32* %5, align 4, !dbg !5998
  store volatile i32 128, i32* %2, align 4, !dbg !5999
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6000
  store volatile i32 0, i32* %6, align 4, !dbg !6001
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6002
  store volatile i32 0, i32* %7, align 4, !dbg !6003
  store volatile i32 0, i32* %2, align 4, !dbg !6004
  store volatile i32 0, i32* %7, align 4, !dbg !6005
  store volatile i32 0, i32* %3, align 4, !dbg !6006
  store volatile i32 191, i32* %2, align 4, !dbg !6007
  store volatile i32 0, i32* %3, align 4, !dbg !6008
  store volatile i32 0, i32* %2, align 4, !dbg !6009
  store volatile i32 0, i32* %4, align 4, !dbg !6010
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6011
  store volatile i32 0, i32* %8, align 4, !dbg !6012
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6013
  store volatile i32 0, i32* %9, align 4, !dbg !6014
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6015
  store volatile i32 0, i32* %10, align 4, !dbg !6016
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6017
  store volatile i32 0, i32* %11, align 4, !dbg !6018
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6019
  store volatile i32 0, i32* %12, align 4, !dbg !6020
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6021
  store volatile i32 0, i32* %13, align 4, !dbg !6022
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6023
  store volatile i32 0, i32* %14, align 4, !dbg !6024
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6025
  store volatile i32 0, i32* %15, align 4, !dbg !6026
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6027
  store volatile i32 0, i32* %16, align 4, !dbg !6028
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6029
  store volatile i32 0, i32* %17, align 4, !dbg !6030
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6031
  store volatile i32 0, i32* %18, align 4, !dbg !6032
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6033
  store volatile i32 0, i32* %19, align 4, !dbg !6034
  store volatile i32 0, i32* %13, align 4, !dbg !6035
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6036
  store volatile i32 0, i32* %20, align 4, !dbg !6037
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6038
  store volatile i32 0, i32* %21, align 4, !dbg !6039
  ret void, !dbg !6040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6041 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6043, metadata !DIExpression()), !dbg !6044
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6045

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6046
  %5 = and i32 %4, 64, !dbg !6047
  %6 = icmp eq i32 %5, 0, !dbg !6048
  br i1 %6, label %3, label %7, !dbg !6045, !llvm.loop !6049

7:                                                ; preds = %3
  ret void, !dbg !6051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6056, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata i32 %1, metadata !6057, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata i32 15, metadata !6058, metadata !DIExpression()), !dbg !6059
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6060

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6061
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6064
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6066
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6068
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6059
  call void @llvm.dbg.value(metadata i32 %16, metadata !6058, metadata !DIExpression()), !dbg !6059
  ret i32 %16, !dbg !6070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6081, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6082, metadata !DIExpression()), !dbg !6083
  %3 = add i32 %0, -8, !dbg !6084
  %4 = icmp ult i32 %3, 8, !dbg !6084
  br i1 %4, label %5, label %12, !dbg !6084

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6084
  %7 = load i8, i8* %6, align 1, !dbg !6084
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !6084
  %9 = load i32, i32* %8, align 4, !dbg !6084
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6085
  store i8 %7, i8* %10, align 4, !dbg !6085
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6085
  store i32 %9, i32* %11, align 4, !dbg !6085
  br label %12, !dbg !6087

12:                                               ; preds = %2, %5
  ret void, !dbg !6087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6088 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6092, metadata !DIExpression()), !dbg !6093
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6094
  store volatile i32 3, i32* %2, align 4, !dbg !6095
  ret void, !dbg !6096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6099, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6102, metadata !DIExpression()), !dbg !6103
  %2 = add i32 %0, -30, !dbg !6104
  %3 = icmp ult i32 %2, 3, !dbg !6104
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6104
  call void @llvm.dbg.value(metadata i32 %5, metadata !6100, metadata !DIExpression()), !dbg !6103
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6105
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6105
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6102, metadata !DIExpression()), !dbg !6103
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %8, metadata !6101, metadata !DIExpression()), !dbg !6103
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6107

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6108
  br label %13, !dbg !6110

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6111
  br label %13, !dbg !6112

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6113
  br label %13, !dbg !6114

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #23, !dbg !6115
  unreachable, !dbg !6115

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* noundef %1) local_unnamed_addr #0 !dbg !6117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6135, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %1, metadata !6136, metadata !DIExpression()), !dbg !6140
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6141
  br i1 %3, label %4, label %21, !dbg !6143

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_master_config(%struct.hal_spi_master_config_t* noundef %1) #21, !dbg !6144
  br i1 %5, label %6, label %21, !dbg !6146

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6147
  call void @llvm.dbg.value(metadata i32 %7, metadata !6138, metadata !DIExpression()), !dbg !6148
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @g_spi_master_status, i32 0, i32 %0, !dbg !6149
  %9 = load volatile i8, i8* %8, align 1, !dbg !6149
  %10 = icmp eq i8 %9, 1, !dbg !6149
  br i1 %10, label %15, label %11, !dbg !6147

11:                                               ; preds = %6
  store volatile i8 1, i8* %8, align 1, !dbg !6151
  call void @llvm.dbg.value(metadata i32 0, metadata !6137, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.value(metadata i32 undef, metadata !6137, metadata !DIExpression()), !dbg !6140
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6147
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_cg_code, i32 0, i32 %0, !dbg !6153
  %13 = load i32, i32* %12, align 4, !dbg !6153
  %14 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef %13) #20, !dbg !6155
  br i1 %14, label %20, label %16, !dbg !6156

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !6137, metadata !DIExpression()), !dbg !6140
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6147
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_spi_master_init, i32 0, i32 0), i32 noundef 199, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i32 0, i32 0), i32 noundef %0) #20, !dbg !6157
  br label %21, !dbg !6160

16:                                               ; preds = %11
  %17 = tail call i32 @hal_clock_enable(i32 noundef %13) #20, !dbg !6161
  %18 = icmp eq i32 %17, 0, !dbg !6164
  br i1 %18, label %20, label %19, !dbg !6165

19:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_spi_master_init, i32 0, i32 0), i32 noundef 205, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.84, i32 0, i32 0), i32 noundef %0) #20, !dbg !6166
  br label %21, !dbg !6168

20:                                               ; preds = %16, %11
  tail call void @spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* noundef %1) #20, !dbg !6169
  br label %21, !dbg !6170

21:                                               ; preds = %4, %2, %20, %19, %15
  %22 = phi i32 [ -3, %15 ], [ -4, %19 ], [ 0, %20 ], [ -2, %2 ], [ -1, %4 ], !dbg !6140
  ret i32 %22, !dbg !6171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_master_port(i32 noundef %0) unnamed_addr #10 !dbg !6172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6176, metadata !DIExpression()), !dbg !6177
  %2 = icmp ult i32 %0, 4, !dbg !6178
  ret i1 %2, !dbg !6179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_master_config(%struct.hal_spi_master_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6180 {
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %0, metadata !6186, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.value(metadata i8 1, metadata !6187, metadata !DIExpression()), !dbg !6188
  %2 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 0, !dbg !6189
  %3 = load i32, i32* %2, align 4, !dbg !6189
  %4 = add i32 %3, -30000, !dbg !6190
  %5 = icmp ult i32 %4, 12970001, !dbg !6190
  call void @llvm.dbg.value(metadata i1 undef, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  %6 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 2, !dbg !6191
  %7 = load i32, i32* %6, align 4, !dbg !6191
  call void @llvm.dbg.value(metadata i1 undef, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  %8 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 3, !dbg !6192
  %9 = load i32, i32* %8, align 4, !dbg !6192
  call void @llvm.dbg.value(metadata i1 undef, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  %10 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 4, !dbg !6193
  %11 = load i32, i32* %10, align 4, !dbg !6193
  call void @llvm.dbg.value(metadata i1 undef, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  %12 = or i32 %9, %7, !dbg !6194
  %13 = or i32 %12, %11, !dbg !6195
  call void @llvm.dbg.value(metadata i1 undef, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  call void @llvm.dbg.value(metadata i1 undef, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  %14 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 1, !dbg !6196
  %15 = load i32, i32* %14, align 4, !dbg !6196
  %16 = or i32 %13, %15, !dbg !6197
  %17 = icmp ult i32 %16, 2, !dbg !6197
  %18 = and i1 %5, %17, !dbg !6197
  call void @llvm.dbg.value(metadata i1 %18, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6188
  ret i1 %18, !dbg !6198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_set_advanced_config(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6215, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6216, metadata !DIExpression()), !dbg !6217
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6218
  br i1 %3, label %4, label %10, !dbg !6220

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_master_advanced_config(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6221
  br i1 %5, label %6, label %10, !dbg !6223

6:                                                ; preds = %4
  %7 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6224
  %8 = icmp eq i32 %7, 0, !dbg !6226
  br i1 %8, label %10, label %9, !dbg !6227

9:                                                ; preds = %6
  tail call void @spi_master_set_advanced_config(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6228
  br label %10, !dbg !6229

10:                                               ; preds = %6, %4, %2, %9
  %11 = phi i32 [ 0, %9 ], [ -2, %2 ], [ -1, %4 ], [ -3, %6 ], !dbg !6217
  ret i32 %11, !dbg !6230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_master_advanced_config(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6231 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6237, metadata !DIExpression()), !dbg !6239
  call void @llvm.dbg.value(metadata i8 1, metadata !6238, metadata !DIExpression()), !dbg !6239
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !6240
  %3 = load i32, i32* %2, align 4, !dbg !6240
  call void @llvm.dbg.value(metadata i1 undef, metadata !6238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6239
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6241
  %5 = load i32, i32* %4, align 4, !dbg !6241
  call void @llvm.dbg.value(metadata i1 undef, metadata !6238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6239
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6242
  %7 = load i32, i32* %6, align 4, !dbg !6242
  call void @llvm.dbg.value(metadata i1 undef, metadata !6238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6239
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6243
  %9 = load i32, i32* %8, align 4, !dbg !6243
  %10 = or i32 %5, %3, !dbg !6244
  %11 = icmp ult i32 %7, 8, !dbg !6245
  call void @llvm.dbg.value(metadata i1 undef, metadata !6238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6239
  %12 = or i32 %10, %9, !dbg !6246
  %13 = icmp ult i32 %12, 2, !dbg !6246
  %14 = and i1 %11, %13, !dbg !6246
  call void @llvm.dbg.value(metadata i1 %14, metadata !6238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6239
  ret i1 %14, !dbg !6247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6252, metadata !DIExpression()), !dbg !6253
  %2 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6254
  br i1 %2, label %3, label %12, !dbg !6256

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_irq_code, i32 0, i32 %0, !dbg !6257
  %5 = load i32, i32* %4, align 4, !dbg !6257
  %6 = tail call i32 @hal_nvic_disable_irq(i32 noundef %5) #20, !dbg !6258
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* @g_spi_master_status, i32 0, i32 %0, !dbg !6259
  store volatile i8 0, i8* %7, align 1, !dbg !6259
  %8 = getelementptr inbounds [4 x void (i32, i8*)*], [4 x void (i32, i8*)*]* @g_spix_callback, i32 0, i32 %0, !dbg !6261
  store void (i32, i8*)* null, void (i32, i8*)** %8, align 4, !dbg !6262
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_cg_code, i32 0, i32 %0, !dbg !6263
  %10 = load i32, i32* %9, align 4, !dbg !6263
  %11 = tail call i32 @hal_clock_disable(i32 noundef %10) #20, !dbg !6264
  br label %12, !dbg !6265

12:                                               ; preds = %1, %3
  %13 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6253
  ret i32 %13, !dbg !6266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6271, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6272, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %2, metadata !6273, metadata !DIExpression()), !dbg !6274
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6275
  br i1 %4, label %5, label %18, !dbg !6277

5:                                                ; preds = %3
  %6 = icmp eq void (i32, i8*)* %1, null, !dbg !6278
  br i1 %6, label %18, label %7, !dbg !6280

7:                                                ; preds = %5
  %8 = getelementptr inbounds [4 x void (i32, i8*)*], [4 x void (i32, i8*)*]* @g_spix_callback, i32 0, i32 %0, !dbg !6281
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !6282
  %9 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_spix_user_data, i32 0, i32 %0, !dbg !6283
  store i8* %2, i8** %9, align 4, !dbg !6284
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_irq_code, i32 0, i32 %0, !dbg !6285
  %11 = load i32, i32* %10, align 4, !dbg !6285
  %12 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %11, void (i32)* noundef nonnull @hal_spi_master_isr) #20, !dbg !6286
  %13 = getelementptr inbounds [4 x i16], [4 x i16]* @g_spix_pri_code, i32 0, i32 %0, !dbg !6287
  %14 = load i16, i16* %13, align 2, !dbg !6287
  %15 = zext i16 %14 to i32, !dbg !6287
  %16 = tail call i32 @hal_nvic_set_priority(i32 noundef %11, i32 noundef %15) #20, !dbg !6288
  %17 = tail call i32 @hal_nvic_enable_irq(i32 noundef %11) #20, !dbg !6289
  br label %18, !dbg !6290

18:                                               ; preds = %5, %3, %7
  %19 = phi i32 [ 0, %7 ], [ -2, %3 ], [ -1, %5 ], !dbg !6274
  ret i32 %19, !dbg !6291
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_spi_master_isr(i32 noundef %0) #0 !dbg !6292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6294, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 0, metadata !6295, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 0, metadata !6296, metadata !DIExpression()), !dbg !6297
  br label %2, !dbg !6298

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6296, metadata !DIExpression()), !dbg !6297
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_irq_code, i32 0, i32 %3, !dbg !6300
  %5 = load i32, i32* %4, align 4, !dbg !6300
  %6 = icmp eq i32 %5, %0, !dbg !6304
  br i1 %6, label %10, label %7, !dbg !6305

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !6306
  call void @llvm.dbg.value(metadata i32 %8, metadata !6296, metadata !DIExpression()), !dbg !6297
  %9 = icmp eq i32 %8, 4, !dbg !6307
  br i1 %9, label %10, label %2, !dbg !6298, !llvm.loop !6308

10:                                               ; preds = %2, %7
  %11 = phi i32 [ 0, %7 ], [ %3, %2 ], !dbg !6297
  call void @llvm.dbg.value(metadata i32 %11, metadata !6295, metadata !DIExpression()), !dbg !6297
  %12 = getelementptr inbounds [4 x void (i32, i8*)*], [4 x void (i32, i8*)*]* @g_spix_callback, i32 0, i32 %11, !dbg !6310
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !6310
  %14 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_spix_user_data, i32 0, i32 %11, !dbg !6311
  %15 = load i8*, i8** %14, align 4, !dbg !6311
  tail call void @spi_isr_handler(i32 noundef %11, void (i32, i8*)* noundef %13, i8* noundef %15) #20, !dbg !6312
  ret void, !dbg !6313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_polling(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6318, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i8* %1, metadata !6319, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i32 %2, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6323
  br i1 %4, label %5, label %21, !dbg !6325

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6326
  %7 = add i32 %2, -33
  %8 = icmp ult i32 %7, -32
  %9 = or i1 %6, %8, !dbg !6328
  br i1 %9, label %21, label %10, !dbg !6328

10:                                               ; preds = %5
  %11 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6329
  %12 = icmp eq i32 %11, 0, !dbg !6331
  br i1 %12, label %13, label %14, !dbg !6332

13:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_spi_master_send_polling, i32 0, i32 0), i32 noundef 308, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i32 0, i32 0), i32 noundef %0) #20, !dbg !6333
  br label %21, !dbg !6335

14:                                               ; preds = %10
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 0) #20, !dbg !6336
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6337
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6338
  tail call void @spi_clear_fifo(i32 noundef %0) #20, !dbg !6339
  %15 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %2) #20, !dbg !6340
  call void @llvm.dbg.value(metadata i32 %15, metadata !6321, metadata !DIExpression()), !dbg !6322
  %16 = icmp eq i32 %15, 0, !dbg !6341
  br i1 %16, label %17, label %21, !dbg !6343

17:                                               ; preds = %14
  %18 = tail call i32 @spi_push_data(i32 noundef %0, i8* noundef nonnull %1, i32 noundef %2) #20, !dbg !6344
  call void @llvm.dbg.value(metadata i32 %18, metadata !6321, metadata !DIExpression()), !dbg !6322
  %19 = icmp eq i32 %18, 0, !dbg !6345
  br i1 %19, label %20, label %21, !dbg !6347

20:                                               ; preds = %17
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 0) #20, !dbg !6348
  br label %21, !dbg !6349

21:                                               ; preds = %17, %14, %5, %3, %20, %13
  %22 = phi i32 [ -3, %13 ], [ 0, %20 ], [ -2, %3 ], [ -1, %5 ], [ %15, %14 ], [ %18, %17 ], !dbg !6322
  ret i32 %22, !dbg !6350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6353, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i8* %1, metadata !6354, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i32 %2, metadata !6355, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i32 0, metadata !6356, metadata !DIExpression()), !dbg !6357
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6358
  br i1 %4, label %5, label %24, !dbg !6360

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6361
  br i1 %6, label %24, label %7, !dbg !6363

7:                                                ; preds = %5
  %8 = ptrtoint i8* %1 to i32, !dbg !6364
  %9 = and i32 %8, 3, !dbg !6366
  %10 = icmp ne i32 %9, 0, !dbg !6367
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %11, %10, !dbg !6368
  br i1 %12, label %24, label %13, !dbg !6368

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %8) #20, !dbg !6369
  br i1 %14, label %24, label %15, !dbg !6371

15:                                               ; preds = %13
  %16 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6372
  %17 = icmp eq i32 %16, 0, !dbg !6374
  br i1 %17, label %18, label %19, !dbg !6375

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_spi_master_send_dma, i32 0, i32 0), i32 noundef 373, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !6376
  br label %24, !dbg !6378

19:                                               ; preds = %15
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef nonnull %1) #20, !dbg !6379
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6380
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6381
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext true) #20, !dbg !6382
  %20 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %2) #20, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %20, metadata !6356, metadata !DIExpression()), !dbg !6357
  %21 = icmp eq i32 %20, 0, !dbg !6384
  br i1 %21, label %22, label %24, !dbg !6386

22:                                               ; preds = %19
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 1) #20, !dbg !6387
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spi_direction, i32 0, i32 %0, !dbg !6389
  store i32 0, i32* %23, align 4, !dbg !6390
  br label %24, !dbg !6391

24:                                               ; preds = %19, %13, %7, %5, %3, %22, %18
  %25 = phi i32 [ -3, %18 ], [ 0, %22 ], [ -2, %3 ], [ -1, %5 ], [ -1, %7 ], [ -1, %13 ], [ %20, %19 ], !dbg !6357
  ret i32 %25, !dbg !6392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_dma_blocking(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6395, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i8* %1, metadata !6396, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i32 %2, metadata !6397, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i32 0, metadata !6398, metadata !DIExpression()), !dbg !6399
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6400
  br i1 %4, label %5, label %23, !dbg !6402

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6403
  br i1 %6, label %23, label %7, !dbg !6405

7:                                                ; preds = %5
  %8 = ptrtoint i8* %1 to i32, !dbg !6406
  %9 = and i32 %8, 3, !dbg !6408
  %10 = icmp ne i32 %9, 0, !dbg !6409
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %11, %10, !dbg !6410
  br i1 %12, label %23, label %13, !dbg !6410

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %8) #20, !dbg !6411
  br i1 %14, label %23, label %15, !dbg !6413

15:                                               ; preds = %13
  %16 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6414
  %17 = icmp eq i32 %16, 0, !dbg !6416
  br i1 %17, label %18, label %19, !dbg !6417

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.hal_spi_master_send_dma_blocking, i32 0, i32 0), i32 noundef 426, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !6418
  br label %23, !dbg !6420

19:                                               ; preds = %15
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef nonnull %1) #20, !dbg !6421
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6422
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6423
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6424
  %20 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %2) #20, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %20, metadata !6398, metadata !DIExpression()), !dbg !6399
  %21 = icmp eq i32 %20, 0, !dbg !6426
  br i1 %21, label %22, label %23, !dbg !6428

22:                                               ; preds = %19
  tail call void @spi_start_transfer_dma_blocking(i32 noundef %0) #20, !dbg !6429
  br label %23, !dbg !6431

23:                                               ; preds = %19, %13, %7, %5, %3, %22, %18
  %24 = phi i32 [ -3, %18 ], [ 0, %22 ], [ -2, %3 ], [ -1, %5 ], [ -1, %7 ], [ -1, %13 ], [ %20, %19 ], !dbg !6399
  ret i32 %24, !dbg !6432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_polling(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6445, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 0, metadata !6447, metadata !DIExpression()), !dbg !6448
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6449
  br i1 %3, label %4, label %39, !dbg !6451

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !6452
  %6 = load i8*, i8** %5, align 4, !dbg !6452
  %7 = icmp eq i8* %6, null, !dbg !6454
  br i1 %7, label %39, label %8, !dbg !6455

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !6456
  %10 = load i8*, i8** %9, align 4, !dbg !6456
  %11 = icmp eq i8* %10, null, !dbg !6458
  br i1 %11, label %39, label %12, !dbg !6459

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !6460
  %14 = load i32, i32* %13, align 4, !dbg !6460
  %15 = add i32 %14, -33, !dbg !6462
  %16 = icmp ult i32 %15, -32, !dbg !6462
  br i1 %16, label %39, label %17, !dbg !6462

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !6463
  %19 = load i32, i32* %18, align 4, !dbg !6463
  %20 = add i32 %19, -33, !dbg !6465
  %21 = icmp ult i32 %20, -32, !dbg !6465
  br i1 %21, label %39, label %22, !dbg !6465

22:                                               ; preds = %17
  %23 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6466
  %24 = icmp eq i32 %23, 0, !dbg !6468
  br i1 %24, label %25, label %26, !dbg !6469

25:                                               ; preds = %22
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @__FUNCTION__.hal_spi_master_send_and_receive_polling, i32 0, i32 0), i32 noundef 470, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !6470
  br label %39, !dbg !6472

26:                                               ; preds = %22
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 0) #20, !dbg !6473
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6474
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6475
  tail call void @spi_clear_fifo(i32 noundef %0) #20, !dbg !6476
  %27 = load i32, i32* %13, align 4, !dbg !6477
  %28 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %27) #20, !dbg !6478
  call void @llvm.dbg.value(metadata i32 %28, metadata !6447, metadata !DIExpression()), !dbg !6448
  %29 = icmp eq i32 %28, 0, !dbg !6479
  br i1 %29, label %30, label %39, !dbg !6481

30:                                               ; preds = %26
  %31 = load i8*, i8** %9, align 4, !dbg !6482
  %32 = load i32, i32* %18, align 4, !dbg !6483
  %33 = tail call i32 @spi_push_data(i32 noundef %0, i8* noundef %31, i32 noundef %32) #20, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %33, metadata !6447, metadata !DIExpression()), !dbg !6448
  %34 = icmp eq i32 %33, 0, !dbg !6485
  br i1 %34, label %35, label %39, !dbg !6487

35:                                               ; preds = %30
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 0) #20, !dbg !6488
  %36 = load i8*, i8** %5, align 4, !dbg !6489
  %37 = load i32, i32* %13, align 4, !dbg !6490
  %38 = tail call i32 @spi_pop_data(i32 noundef %0, i8* noundef %36, i32 noundef %37) #20, !dbg !6491
  call void @llvm.dbg.value(metadata i32 %38, metadata !6447, metadata !DIExpression()), !dbg !6448
  br label %39, !dbg !6492

39:                                               ; preds = %30, %26, %17, %12, %8, %4, %2, %35, %25
  %40 = phi i32 [ -3, %25 ], [ %38, %35 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %17 ], [ %28, %26 ], [ %33, %30 ], !dbg !6448
  ret i32 %40, !dbg !6493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_dma(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6496, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !6497, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 0, metadata !6498, metadata !DIExpression()), !dbg !6499
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6500
  br i1 %3, label %4, label %46, !dbg !6502

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !6503
  %6 = load i8*, i8** %5, align 4, !dbg !6503
  %7 = icmp eq i8* %6, null, !dbg !6505
  br i1 %7, label %46, label %8, !dbg !6506

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !6507
  %10 = load i8*, i8** %9, align 4, !dbg !6507
  %11 = icmp eq i8* %10, null, !dbg !6509
  br i1 %11, label %46, label %12, !dbg !6510

12:                                               ; preds = %8
  %13 = ptrtoint i8* %6 to i32, !dbg !6511
  %14 = and i32 %13, 3, !dbg !6513
  %15 = icmp eq i32 %14, 0, !dbg !6514
  %16 = ptrtoint i8* %10 to i32
  %17 = and i32 %16, 3
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %15, i1 %18, i1 false, !dbg !6515
  br i1 %19, label %20, label %46, !dbg !6515

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !6516
  %22 = load i32, i32* %21, align 4, !dbg !6516
  %23 = icmp eq i32 %22, 0, !dbg !6518
  br i1 %23, label %46, label %24, !dbg !6519

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !6520
  %26 = load i32, i32* %25, align 4, !dbg !6520
  %27 = icmp eq i32 %26, 0, !dbg !6522
  br i1 %27, label %46, label %28, !dbg !6523

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %13) #20, !dbg !6524
  br i1 %29, label %46, label %30, !dbg !6526

30:                                               ; preds = %28
  %31 = load i8*, i8** %9, align 4, !dbg !6527
  %32 = ptrtoint i8* %31 to i32, !dbg !6528
  %33 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %32) #20, !dbg !6529
  br i1 %33, label %46, label %34, !dbg !6530

34:                                               ; preds = %30
  %35 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6531
  %36 = icmp eq i32 %35, 0, !dbg !6533
  br i1 %36, label %37, label %38, !dbg !6534

37:                                               ; preds = %34
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @__FUNCTION__.hal_spi_master_send_and_receive_dma, i32 0, i32 0), i32 noundef 545, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !6535
  br label %46, !dbg !6537

38:                                               ; preds = %34
  %39 = load i8*, i8** %9, align 4, !dbg !6538
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef %39) #20, !dbg !6539
  %40 = load i8*, i8** %5, align 4, !dbg !6540
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 1, i8* noundef %40) #20, !dbg !6541
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 1) #20, !dbg !6542
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6543
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext true) #20, !dbg !6544
  %41 = load i32, i32* %21, align 4, !dbg !6545
  %42 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %41) #20, !dbg !6546
  call void @llvm.dbg.value(metadata i32 %42, metadata !6498, metadata !DIExpression()), !dbg !6499
  %43 = icmp eq i32 %42, 0, !dbg !6547
  br i1 %43, label %44, label %46, !dbg !6549

44:                                               ; preds = %38
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 1) #20, !dbg !6550
  %45 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spi_direction, i32 0, i32 %0, !dbg !6552
  store i32 1, i32* %45, align 4, !dbg !6553
  br label %46, !dbg !6554

46:                                               ; preds = %38, %28, %30, %24, %20, %12, %8, %4, %2, %44, %37
  %47 = phi i32 [ -3, %37 ], [ 0, %44 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %20 ], [ -1, %24 ], [ -1, %30 ], [ -1, %28 ], [ %42, %38 ], !dbg !6499
  ret i32 %47, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_dma_blocking(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 0, metadata !6560, metadata !DIExpression()), !dbg !6561
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6562
  br i1 %3, label %4, label %45, !dbg !6564

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !6565
  %6 = load i8*, i8** %5, align 4, !dbg !6565
  %7 = icmp eq i8* %6, null, !dbg !6567
  br i1 %7, label %45, label %8, !dbg !6568

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !6569
  %10 = load i8*, i8** %9, align 4, !dbg !6569
  %11 = icmp eq i8* %10, null, !dbg !6571
  br i1 %11, label %45, label %12, !dbg !6572

12:                                               ; preds = %8
  %13 = ptrtoint i8* %6 to i32, !dbg !6573
  %14 = and i32 %13, 3, !dbg !6575
  %15 = icmp eq i32 %14, 0, !dbg !6576
  %16 = ptrtoint i8* %10 to i32
  %17 = and i32 %16, 3
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %15, i1 %18, i1 false, !dbg !6577
  br i1 %19, label %20, label %45, !dbg !6577

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !6578
  %22 = load i32, i32* %21, align 4, !dbg !6578
  %23 = icmp eq i32 %22, 0, !dbg !6580
  br i1 %23, label %45, label %24, !dbg !6581

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !6582
  %26 = load i32, i32* %25, align 4, !dbg !6582
  %27 = icmp eq i32 %26, 0, !dbg !6584
  br i1 %27, label %45, label %28, !dbg !6585

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %13) #20, !dbg !6586
  br i1 %29, label %45, label %30, !dbg !6588

30:                                               ; preds = %28
  %31 = load i8*, i8** %9, align 4, !dbg !6589
  %32 = ptrtoint i8* %31 to i32, !dbg !6590
  %33 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %32) #20, !dbg !6591
  br i1 %33, label %45, label %34, !dbg !6592

34:                                               ; preds = %30
  %35 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6593
  %36 = icmp eq i32 %35, 0, !dbg !6595
  br i1 %36, label %37, label %38, !dbg !6596

37:                                               ; preds = %34
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @__FUNCTION__.hal_spi_master_send_and_receive_dma_blocking, i32 0, i32 0), i32 noundef 607, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !6597
  br label %45, !dbg !6599

38:                                               ; preds = %34
  %39 = load i8*, i8** %9, align 4, !dbg !6600
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef %39) #20, !dbg !6601
  %40 = load i8*, i8** %5, align 4, !dbg !6602
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 1, i8* noundef %40) #20, !dbg !6603
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 1) #20, !dbg !6604
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6605
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6606
  %41 = load i32, i32* %21, align 4, !dbg !6607
  %42 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %41) #20, !dbg !6608
  call void @llvm.dbg.value(metadata i32 %42, metadata !6560, metadata !DIExpression()), !dbg !6561
  %43 = icmp eq i32 %42, 0, !dbg !6609
  br i1 %43, label %44, label %45, !dbg !6611

44:                                               ; preds = %38
  tail call void @spi_start_transfer_dma_blocking(i32 noundef %0) #20, !dbg !6612
  br label %45, !dbg !6614

45:                                               ; preds = %38, %28, %30, %24, %20, %12, %8, %4, %2, %44, %37
  %46 = phi i32 [ -3, %37 ], [ 0, %44 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %20 ], [ -1, %24 ], [ -1, %30 ], [ -1, %28 ], [ %42, %38 ], !dbg !6561
  ret i32 %46, !dbg !6615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_get_running_status(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !6616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6622, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32* %1, metadata !6623, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 0, metadata !6624, metadata !DIExpression()), !dbg !6625
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6626
  br i1 %3, label %4, label %14, !dbg !6628

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !6629
  br i1 %5, label %14, label %6, !dbg !6631

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_cg_code, i32 0, i32 %0, !dbg !6632
  %8 = load i32, i32* %7, align 4, !dbg !6632
  %9 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef %8) #20, !dbg !6634
  br i1 %9, label %10, label %14, !dbg !6635

10:                                               ; preds = %6
  %11 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6636
  call void @llvm.dbg.value(metadata i32 %11, metadata !6624, metadata !DIExpression()), !dbg !6625
  %12 = icmp ne i32 %11, 0, !dbg !6637
  %13 = zext i1 %12 to i32
  store i32 %13, i32* %1, align 4, !dbg !6639
  br label %14, !dbg !6640

14:                                               ; preds = %6, %4, %2, %10
  %15 = phi i32 [ 0, %10 ], [ -2, %2 ], [ -1, %4 ], [ -4, %6 ], !dbg !6625
  ret i32 %15, !dbg !6641
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_set_chip_select_timing(i32 noundef %0, [3 x i32] %1) local_unnamed_addr #0 !dbg !6642 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6653, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6654
  call void @llvm.dbg.value(metadata i32 undef, metadata !6653, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6654
  call void @llvm.dbg.value(metadata i32 undef, metadata !6653, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6654
  call void @llvm.dbg.value(metadata i32 %0, metadata !6652, metadata !DIExpression()), !dbg !6654
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6655
  br i1 %3, label %4, label %11, !dbg !6657

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_master_chip_select_timing([3 x i32] %1) #21, !dbg !6658
  br i1 %5, label %6, label %11, !dbg !6660

6:                                                ; preds = %4
  %7 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6661
  %8 = icmp eq i32 %7, 0, !dbg !6663
  br i1 %8, label %9, label %10, !dbg !6664

9:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__FUNCTION__.hal_spi_master_set_chip_select_timing, i32 0, i32 0), i32 noundef 664, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef %0) #20, !dbg !6665
  br label %11, !dbg !6667

10:                                               ; preds = %6
  tail call void @spi_master_set_chip_select_timing(i32 noundef %0, [3 x i32] %1) #20, !dbg !6668
  br label %11, !dbg !6669

11:                                               ; preds = %4, %2, %10, %9
  %12 = phi i32 [ -3, %9 ], [ 0, %10 ], [ -2, %2 ], [ -1, %4 ], !dbg !6654
  ret i32 %12, !dbg !6670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_master_chip_select_timing([3 x i32] %0) unnamed_addr #10 !dbg !6671 {
  %2 = extractvalue [3 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %2, metadata !6675, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6677
  %3 = extractvalue [3 x i32] %0, 1
  call void @llvm.dbg.value(metadata i32 %3, metadata !6675, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6677
  %4 = extractvalue [3 x i32] %0, 2
  call void @llvm.dbg.value(metadata i32 %4, metadata !6675, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6677
  call void @llvm.dbg.value(metadata i8 1, metadata !6676, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i1 undef, metadata !6676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6677
  %5 = or i32 %3, %2, !dbg !6678
  %6 = icmp ult i32 %5, 65536, !dbg !6678
  call void @llvm.dbg.value(metadata i1 %6, metadata !6676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6677
  %7 = icmp ult i32 %4, 256, !dbg !6679
  %8 = and i1 %7, %6, !dbg !6680
  call void @llvm.dbg.value(metadata i1 %8, metadata !6676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6677
  ret i1 %8, !dbg !6681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_set_deassert(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6687, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.value(metadata i32 %1, metadata !6688, metadata !DIExpression()), !dbg !6689
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6690
  br i1 %3, label %4, label %11, !dbg !6692

4:                                                ; preds = %2
  %5 = icmp ult i32 %1, 2, !dbg !6693
  br i1 %5, label %6, label %11, !dbg !6693

6:                                                ; preds = %4
  %7 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6695
  %8 = icmp eq i32 %7, 0, !dbg !6697
  br i1 %8, label %9, label %10, !dbg !6698

9:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_spi_master_set_deassert, i32 0, i32 0), i32 noundef 687, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i32 0, i32 0), i32 noundef %0) #20, !dbg !6699
  br label %11, !dbg !6701

10:                                               ; preds = %6
  tail call void @spi_master_set_deassert(i32 noundef %0, i32 noundef %1) #20, !dbg !6702
  br label %11, !dbg !6703

11:                                               ; preds = %4, %2, %10, %9
  %12 = phi i32 [ -3, %9 ], [ 0, %10 ], [ -2, %2 ], [ -1, %4 ], !dbg !6689
  ret i32 %12, !dbg !6704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_spi_master_set_macro_selection(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6710, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i32 %1, metadata !6711, metadata !DIExpression()), !dbg !6712
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6713
  %4 = icmp ugt i32 %1, 2, !dbg !6715
  %5 = sext i1 %4 to i32, !dbg !6715
  %6 = select i1 %3, i32 %5, i32 -2, !dbg !6715
  ret i32 %6, !dbg !6716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @spi_isr_handler(i32 noundef %0, void (i32, i8*)* noundef readonly %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6721, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6722, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i8* %2, metadata !6723, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i32 0, metadata !6725, metadata !DIExpression()), !dbg !6726
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6727
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !6727
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 7, !dbg !6728
  %7 = load volatile i32, i32* %6, align 4, !dbg !6728
  call void @llvm.dbg.value(metadata i32 %7, metadata !6725, metadata !DIExpression()), !dbg !6726
  %8 = and i32 %7, 1, !dbg !6729
  %9 = icmp eq i32 %8, 0, !dbg !6729
  br i1 %9, label %17, label %10, !dbg !6731

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !6724, metadata !DIExpression()), !dbg !6726
  %11 = icmp eq void (i32, i8*)* %1, null, !dbg !6732
  br i1 %11, label %21, label %12, !dbg !6735

12:                                               ; preds = %10
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spi_direction, i32 0, i32 %0, !dbg !6736
  %14 = load i32, i32* %13, align 4, !dbg !6736
  %15 = icmp ne i32 %14, 0, !dbg !6737
  %16 = zext i1 %15 to i32, !dbg !6737
  call void @llvm.dbg.value(metadata i32 %16, metadata !6724, metadata !DIExpression()), !dbg !6726
  tail call void %1(i32 noundef %16, i8* noundef %2) #20, !dbg !6738
  br label %21, !dbg !6740

17:                                               ; preds = %3
  %18 = and i32 %7, 2, !dbg !6741
  %19 = icmp eq i32 %18, 0, !dbg !6741
  br i1 %19, label %21, label %20, !dbg !6743

20:                                               ; preds = %17
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 1) #21, !dbg !6744
  br label %21, !dbg !6746

21:                                               ; preds = %17, %20, %10, %12
  ret void, !dbg !6747
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @spi_start_transfer(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !6748 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6753, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 %1, metadata !6754, metadata !DIExpression()), !dbg !6757
  %4 = bitcast i32* %3 to i8*, !dbg !6758
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !6758
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6755, metadata !DIExpression()), !dbg !6759
  %5 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6760
  %6 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %5, align 4, !dbg !6760
  %7 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 6, !dbg !6762
  %8 = load volatile i32, i32* %7, align 4, !dbg !6762
  %9 = and i32 %8, 16, !dbg !6763
  %10 = icmp eq i32 %9, 0, !dbg !6763
  call void @llvm.dbg.value(metadata i8 poison, metadata !6756, metadata !DIExpression()), !dbg !6757
  switch i32 %1, label %135 [
    i32 1, label %11
    i32 0, label %123
  ], !dbg !6764

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 1, !dbg !6765
  %13 = load volatile i32, i32* %12, align 4, !dbg !6767
  %14 = and i32 %13, -67108609, !dbg !6767
  store volatile i32 %14, i32* %12, align 4, !dbg !6767
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_pause_count, i32 0, i32 %0, !dbg !6768
  %16 = load i32, i32* %15, align 4, !dbg !6768
  %17 = icmp eq i32 %16, 0, !dbg !6770
  %18 = select i1 %17, i1 true, i1 %10, !dbg !6771
  br i1 %18, label %38, label %19, !dbg !6771

19:                                               ; preds = %11
  %20 = add i32 %16, -1, !dbg !6772
  store i32 %20, i32* %15, align 4, !dbg !6772
  %21 = load volatile i32, i32* %12, align 4, !dbg !6774
  %22 = or i32 %21, 67108608, !dbg !6774
  store volatile i32 %22, i32* %12, align 4, !dbg !6774
  %23 = icmp eq i32 %20, 0, !dbg !6775
  br i1 %23, label %24, label %35, !dbg !6777

24:                                               ; preds = %19
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0, !dbg !6778
  %26 = load i32, i32* %25, align 4, !dbg !6778
  %27 = icmp eq i32 %26, 0, !dbg !6779
  br i1 %27, label %28, label %35, !dbg !6780

28:                                               ; preds = %24
  %29 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !6781
  %30 = load i16, i16* %29, align 2, !dbg !6781
  %31 = icmp eq i16 %30, 0, !dbg !6782
  br i1 %31, label %32, label %35, !dbg !6783

32:                                               ; preds = %28
  %33 = load volatile i32, i32* %7, align 4, !dbg !6784
  %34 = and i32 %33, -17, !dbg !6784
  store volatile i32 %34, i32* %7, align 4, !dbg !6784
  br label %35, !dbg !6786

35:                                               ; preds = %32, %28, %24, %19
  %36 = load volatile i32, i32* %7, align 4, !dbg !6787
  %37 = or i32 %36, 2, !dbg !6787
  store volatile i32 %37, i32* %7, align 4, !dbg !6787
  br label %135, !dbg !6788

38:                                               ; preds = %11
  %39 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0, !dbg !6789
  %40 = load i32, i32* %39, align 4, !dbg !6789
  %41 = icmp eq i32 %40, 0, !dbg !6791
  %42 = select i1 %41, i1 true, i1 %10, !dbg !6792
  br i1 %42, label %58, label %43, !dbg !6792

43:                                               ; preds = %38
  %44 = shl i32 %40, 8, !dbg !6793
  %45 = add i32 %44, -256, !dbg !6793
  %46 = load volatile i32, i32* %12, align 4, !dbg !6795
  %47 = or i32 %45, %46, !dbg !6795
  %48 = or i32 %47, 67043328, !dbg !6795
  store volatile i32 %48, i32* %12, align 4, !dbg !6795
  store i32 0, i32* %39, align 4, !dbg !6796
  %49 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !6797
  %50 = load i16, i16* %49, align 2, !dbg !6797
  %51 = icmp eq i16 %50, 0, !dbg !6799
  br i1 %51, label %52, label %55, !dbg !6800

52:                                               ; preds = %43
  %53 = load volatile i32, i32* %7, align 4, !dbg !6801
  %54 = and i32 %53, -17, !dbg !6801
  store volatile i32 %54, i32* %7, align 4, !dbg !6801
  br label %55, !dbg !6803

55:                                               ; preds = %52, %43
  %56 = load volatile i32, i32* %7, align 4, !dbg !6804
  %57 = or i32 %56, 2, !dbg !6804
  store volatile i32 %57, i32* %7, align 4, !dbg !6804
  br label %135, !dbg !6805

58:                                               ; preds = %38
  %59 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !6806
  %60 = load i16, i16* %59, align 2, !dbg !6806
  %61 = and i16 %60, 3, !dbg !6808
  %62 = icmp eq i16 %61, 0, !dbg !6809
  br i1 %62, label %86, label %63, !dbg !6810

63:                                               ; preds = %58
  br i1 %17, label %77, label %64, !dbg !6811

64:                                               ; preds = %63
  %65 = add i32 %16, -1, !dbg !6812
  store i32 %65, i32* %15, align 4, !dbg !6812
  %66 = load volatile i32, i32* %12, align 4, !dbg !6814
  %67 = or i32 %66, 67108608, !dbg !6814
  store volatile i32 %67, i32* %12, align 4, !dbg !6814
  %68 = icmp ne i32 %65, 0, !dbg !6815
  %69 = xor i1 %41, true, !dbg !6817
  %70 = select i1 %68, i1 true, i1 %69, !dbg !6817
  br i1 %70, label %74, label %71, !dbg !6817

71:                                               ; preds = %64
  %72 = load volatile i32, i32* %7, align 4, !dbg !6818
  %73 = and i32 %72, -17, !dbg !6818
  store volatile i32 %73, i32* %7, align 4, !dbg !6818
  br label %74, !dbg !6820

74:                                               ; preds = %64, %71
  %75 = load volatile i32, i32* %7, align 4, !dbg !6821
  %76 = or i32 %75, 17, !dbg !6821
  store volatile i32 %76, i32* %7, align 4, !dbg !6821
  br label %135, !dbg !6822

77:                                               ; preds = %63
  br i1 %41, label %104, label %78, !dbg !6823

78:                                               ; preds = %77
  %79 = shl i32 %40, 8, !dbg !6824
  %80 = add i32 %79, -256, !dbg !6824
  %81 = load volatile i32, i32* %12, align 4, !dbg !6827
  %82 = or i32 %80, %81, !dbg !6827
  %83 = or i32 %82, 67043328, !dbg !6827
  store volatile i32 %83, i32* %12, align 4, !dbg !6827
  store i32 0, i32* %39, align 4, !dbg !6828
  %84 = load volatile i32, i32* %7, align 4, !dbg !6829
  %85 = or i32 %84, 17, !dbg !6829
  store volatile i32 %85, i32* %7, align 4, !dbg !6829
  br label %135, !dbg !6830

86:                                               ; preds = %58
  %87 = select i1 %17, i1 %41, i1 false, !dbg !6831
  br i1 %87, label %104, label %88, !dbg !6831

88:                                               ; preds = %86
  %89 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !6833
  %90 = load i16, i16* %89, align 2, !dbg !6833
  %91 = zext i16 %90 to i32, !dbg !6833
  %92 = shl nuw nsw i32 %91, 8, !dbg !6835
  %93 = load volatile i32, i32* %12, align 4, !dbg !6836
  %94 = or i32 %92, %93, !dbg !6836
  store volatile i32 %94, i32* %12, align 4, !dbg !6836
  %95 = zext i16 %60 to i32, !dbg !6837
  %96 = shl nuw i32 %95, 16, !dbg !6838
  %97 = add i32 %96, -65536, !dbg !6838
  %98 = load volatile i32, i32* %12, align 4, !dbg !6839
  %99 = or i32 %98, %97, !dbg !6839
  store volatile i32 %99, i32* %12, align 4, !dbg !6839
  store i16 0, i16* %59, align 2, !dbg !6840
  %100 = load volatile i32, i32* %7, align 4, !dbg !6841
  %101 = or i32 %100, 16, !dbg !6841
  store volatile i32 %101, i32* %7, align 4, !dbg !6841
  %102 = load volatile i32, i32* %7, align 4, !dbg !6842
  %103 = or i32 %102, 1, !dbg !6842
  store volatile i32 %103, i32* %7, align 4, !dbg !6842
  br label %135, !dbg !6843

104:                                              ; preds = %86, %77
  %105 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !6844
  %106 = load i16, i16* %105, align 2, !dbg !6844
  %107 = zext i16 %106 to i32, !dbg !6844
  %108 = shl nuw nsw i32 %107, 8, !dbg !6846
  %109 = load volatile i32, i32* %12, align 4, !dbg !6847
  %110 = or i32 %108, %109, !dbg !6847
  store volatile i32 %110, i32* %12, align 4, !dbg !6847
  %111 = zext i16 %60 to i32, !dbg !6848
  %112 = shl nuw i32 %111, 16, !dbg !6849
  %113 = add i32 %112, -65536, !dbg !6849
  %114 = load volatile i32, i32* %12, align 4, !dbg !6850
  %115 = or i32 %114, %113, !dbg !6850
  store volatile i32 %115, i32* %12, align 4, !dbg !6850
  %116 = load volatile i32, i32* %7, align 4, !dbg !6851
  br i1 %10, label %121, label %117, !dbg !6853

117:                                              ; preds = %104
  %118 = and i32 %116, -17, !dbg !6854
  store volatile i32 %118, i32* %7, align 4, !dbg !6854
  %119 = load volatile i32, i32* %7, align 4, !dbg !6856
  %120 = or i32 %119, 2, !dbg !6856
  store volatile i32 %120, i32* %7, align 4, !dbg !6856
  br label %135, !dbg !6857

121:                                              ; preds = %104
  %122 = or i32 %116, 1, !dbg !6858
  store volatile i32 %122, i32* %7, align 4, !dbg !6858
  br label %135

123:                                              ; preds = %2
  %124 = load volatile i32, i32* %7, align 4, !dbg !6860
  %125 = or i32 %124, 1, !dbg !6860
  store volatile i32 %125, i32* %7, align 4, !dbg !6860
  %126 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 8
  br label %127, !dbg !6861

127:                                              ; preds = %127, %123
  %128 = load volatile i32, i32* %126, align 4, !dbg !6862
  store volatile i32 %128, i32* %3, align 4, !dbg !6864
  %129 = load volatile i32, i32* %3, align 4, !dbg !6865
  %130 = icmp eq i32 %129, 1, !dbg !6866
  br i1 %130, label %131, label %127, !dbg !6867, !llvm.loop !6868

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 7, !dbg !6870
  %133 = load volatile i32, i32* %132, align 4, !dbg !6870
  store volatile i32 %133, i32* %3, align 4, !dbg !6871
  %134 = load volatile i32, i32* %3, align 4, !dbg !6872
  store volatile i32 %134, i32* %3, align 4, !dbg !6873
  br label %135, !dbg !6874

135:                                              ; preds = %35, %74, %88, %121, %117, %78, %55, %2, %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !6875
  ret void, !dbg !6875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* nocapture noundef readonly %1) local_unnamed_addr #2 !dbg !6876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %1, metadata !6891, metadata !DIExpression()), !dbg !6893
  %3 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6894
  %4 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %3, align 4, !dbg !6894
  %5 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 0, !dbg !6895
  store volatile i32 0, i32* %5, align 4, !dbg !6896
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 1, !dbg !6897
  store volatile i32 0, i32* %6, align 4, !dbg !6898
  %7 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 6, !dbg !6899
  store volatile i32 0, i32* %7, align 4, !dbg !6900
  %8 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 0, !dbg !6901
  %9 = load i32, i32* %8, align 4, !dbg !6901
  %10 = udiv i32 13000000, %9, !dbg !6902
  %11 = add nsw i32 %10, -1, !dbg !6903
  call void @llvm.dbg.value(metadata i32 %11, metadata !6892, metadata !DIExpression()), !dbg !6893
  %12 = shl i32 %11, 16, !dbg !6904
  %13 = or i32 %12, %11, !dbg !6905
  %14 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 10, !dbg !6906
  store volatile i32 %13, i32* %14, align 4, !dbg !6907
  %15 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 1, !dbg !6908
  %16 = load i32, i32* %15, align 4, !dbg !6908
  switch i32 %16, label %25 [
    i32 0, label %17
    i32 1, label %20
  ], !dbg !6909

17:                                               ; preds = %2
  %18 = load volatile i32, i32* %6, align 4, !dbg !6910
  %19 = and i32 %18, -67108865, !dbg !6910
  br label %23, !dbg !6912

20:                                               ; preds = %2
  %21 = load volatile i32, i32* %6, align 4, !dbg !6913
  %22 = or i32 %21, 67108864, !dbg !6913
  br label %23, !dbg !6914

23:                                               ; preds = %17, %20
  %24 = phi i32 [ %22, %20 ], [ %19, %17 ]
  store volatile i32 %24, i32* %6, align 4, !dbg !6915
  br label %25, !dbg !6916

25:                                               ; preds = %23, %2
  %26 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 2, !dbg !6916
  %27 = load i32, i32* %26, align 4, !dbg !6916
  switch i32 %27, label %36 [
    i32 0, label %28
    i32 1, label %31
  ], !dbg !6917

28:                                               ; preds = %25
  %29 = load volatile i32, i32* %7, align 4, !dbg !6918
  %30 = and i32 %29, -12289, !dbg !6918
  br label %34, !dbg !6920

31:                                               ; preds = %25
  %32 = load volatile i32, i32* %7, align 4, !dbg !6921
  %33 = or i32 %32, 12288, !dbg !6921
  br label %34, !dbg !6922

34:                                               ; preds = %28, %31
  %35 = phi i32 [ %33, %31 ], [ %30, %28 ]
  store volatile i32 %35, i32* %7, align 4, !dbg !6923
  br label %36, !dbg !6924

36:                                               ; preds = %34, %25
  %37 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 3, !dbg !6924
  %38 = load i32, i32* %37, align 4, !dbg !6924
  switch i32 %38, label %47 [
    i32 0, label %39
    i32 1, label %42
  ], !dbg !6925

39:                                               ; preds = %36
  %40 = load volatile i32, i32* %7, align 4, !dbg !6926
  %41 = and i32 %40, -513, !dbg !6926
  br label %45, !dbg !6928

42:                                               ; preds = %36
  %43 = load volatile i32, i32* %7, align 4, !dbg !6929
  %44 = or i32 %43, 512, !dbg !6929
  br label %45, !dbg !6930

45:                                               ; preds = %39, %42
  %46 = phi i32 [ %44, %42 ], [ %41, %39 ]
  store volatile i32 %46, i32* %7, align 4, !dbg !6931
  br label %47, !dbg !6932

47:                                               ; preds = %45, %36
  %48 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 4, !dbg !6932
  %49 = load i32, i32* %48, align 4, !dbg !6932
  switch i32 %49, label %58 [
    i32 0, label %50
    i32 1, label %53
  ], !dbg !6933

50:                                               ; preds = %47
  %51 = load volatile i32, i32* %7, align 4, !dbg !6934
  %52 = and i32 %51, -257, !dbg !6934
  br label %56, !dbg !6936

53:                                               ; preds = %47
  %54 = load volatile i32, i32* %7, align 4, !dbg !6937
  %55 = or i32 %54, 256, !dbg !6937
  br label %56, !dbg !6938

56:                                               ; preds = %50, %53
  %57 = phi i32 [ %55, %53 ], [ %52, %50 ]
  store volatile i32 %57, i32* %7, align 4, !dbg !6939
  br label %58, !dbg !6940

58:                                               ; preds = %56, %47
  %59 = load volatile i32, i32* %7, align 4, !dbg !6940
  %60 = and i32 %59, -17, !dbg !6940
  store volatile i32 %60, i32* %7, align 4, !dbg !6940
  tail call fastcc void @spi_master_pad_macro_select(i32 noundef %0) #21, !dbg !6941
  ret void, !dbg !6942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @spi_master_pad_macro_select(i32 noundef %0) unnamed_addr #2 !dbg !6943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6947, metadata !DIExpression()), !dbg !6948
  switch i32 %0, label %22 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 3, label %17
  ], !dbg !6949

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -1576924160 to i32*), align 1024, !dbg !6950
  %4 = and i32 %3, 7340032, !dbg !6953
  %5 = icmp eq i32 %4, 7340032, !dbg !6953
  br i1 %5, label %6, label %22, !dbg !6954

6:                                                ; preds = %2
  store volatile i32 1, i32* inttoptr (i32 -1609498588 to i32*), align 4, !dbg !6955
  br label %22, !dbg !6957

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -1576924144 to i32*), align 16, !dbg !6958
  %9 = and i32 %8, 458752, !dbg !6960
  %10 = icmp eq i32 %9, 262144, !dbg !6960
  br i1 %10, label %11, label %22, !dbg !6961

11:                                               ; preds = %7
  store volatile i32 2, i32* inttoptr (i32 -1609433052 to i32*), align 4, !dbg !6962
  br label %22, !dbg !6964

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -1576924080 to i32*), align 16, !dbg !6965
  %14 = and i32 %13, 15, !dbg !6967
  %15 = icmp eq i32 %14, 9, !dbg !6968
  br i1 %15, label %16, label %22, !dbg !6969

16:                                               ; preds = %12
  store volatile i32 2, i32* inttoptr (i32 -1609367516 to i32*), align 4, !dbg !6970
  br label %22, !dbg !6972

17:                                               ; preds = %1
  %18 = load volatile i32, i32* inttoptr (i32 -1576924096 to i32*), align 64, !dbg !6973
  %19 = and i32 %18, 240, !dbg !6975
  %20 = icmp eq i32 %19, 144, !dbg !6975
  br i1 %20, label %21, label %22, !dbg !6976

21:                                               ; preds = %17
  store volatile i32 1, i32* inttoptr (i32 -1609301980 to i32*), align 4, !dbg !6977
  br label %22, !dbg !6979

22:                                               ; preds = %1, %17, %21, %12, %16, %7, %11, %2, %6
  ret void, !dbg !6980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_set_advanced_config(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #2 !dbg !6981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6994, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6995, metadata !DIExpression()), !dbg !6996
  %3 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6997
  %4 = load i32, i32* %3, align 4, !dbg !6997
  switch i32 %4, label %17 [
    i32 0, label %5
    i32 1, label %11
  ], !dbg !6998

5:                                                ; preds = %2
  %6 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6999
  %7 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %6, align 4, !dbg !6999
  %8 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 6, !dbg !7001
  %9 = load volatile i32, i32* %8, align 4, !dbg !7002
  %10 = and i32 %9, -49153, !dbg !7002
  store volatile i32 %10, i32* %8, align 4, !dbg !7002
  br label %17, !dbg !7003

11:                                               ; preds = %2
  %12 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7004
  %13 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %12, align 4, !dbg !7004
  %14 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %13, i32 0, i32 6, !dbg !7005
  %15 = load volatile i32, i32* %14, align 4, !dbg !7006
  %16 = or i32 %15, 49152, !dbg !7006
  store volatile i32 %16, i32* %14, align 4, !dbg !7006
  br label %17, !dbg !7007

17:                                               ; preds = %2, %11, %5
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7008
  %19 = load i32, i32* %18, align 4, !dbg !7008
  switch i32 %19, label %20 [
    i32 0, label %23
    i32 1, label %29
  ], !dbg !7009

20:                                               ; preds = %17
  %21 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0
  %22 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %21, align 4, !dbg !7010
  br label %35, !dbg !7009

23:                                               ; preds = %17
  %24 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7011
  %25 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %24, align 4, !dbg !7011
  %26 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %25, i32 0, i32 6, !dbg !7013
  %27 = load volatile i32, i32* %26, align 4, !dbg !7014
  %28 = and i32 %27, -129, !dbg !7014
  store volatile i32 %28, i32* %26, align 4, !dbg !7014
  br label %35, !dbg !7015

29:                                               ; preds = %17
  %30 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7016
  %31 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %30, align 4, !dbg !7016
  %32 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %31, i32 0, i32 6, !dbg !7017
  %33 = load volatile i32, i32* %32, align 4, !dbg !7018
  %34 = or i32 %33, 128, !dbg !7018
  store volatile i32 %34, i32* %32, align 4, !dbg !7018
  br label %35, !dbg !7019

35:                                               ; preds = %20, %29, %23
  %36 = phi %struct.SPI_MASTER_REGISTER_T* [ %22, %20 ], [ %31, %29 ], [ %25, %23 ], !dbg !7010
  %37 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %36, i32 0, i32 1, !dbg !7020
  %38 = load volatile i32, i32* %37, align 4, !dbg !7021
  %39 = and i32 %38, 536870911, !dbg !7021
  store volatile i32 %39, i32* %37, align 4, !dbg !7021
  %40 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7022
  %41 = load i32, i32* %40, align 4, !dbg !7022
  %42 = shl i32 %41, 29, !dbg !7023
  %43 = load volatile i32, i32* %37, align 4, !dbg !7024
  %44 = or i32 %43, %42, !dbg !7024
  store volatile i32 %44, i32* %37, align 4, !dbg !7024
  %45 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7025
  %46 = load i32, i32* %45, align 4, !dbg !7025
  switch i32 %46, label %55 [
    i32 0, label %47
    i32 1, label %51
  ], !dbg !7026

47:                                               ; preds = %35
  %48 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %36, i32 0, i32 6, !dbg !7027
  %49 = load volatile i32, i32* %48, align 4, !dbg !7029
  %50 = and i32 %49, -65, !dbg !7029
  store volatile i32 %50, i32* %48, align 4, !dbg !7029
  br label %55, !dbg !7030

51:                                               ; preds = %35
  %52 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %36, i32 0, i32 6, !dbg !7031
  %53 = load volatile i32, i32* %52, align 4, !dbg !7032
  %54 = or i32 %53, 64, !dbg !7032
  store volatile i32 %54, i32* %52, align 4, !dbg !7032
  br label %55, !dbg !7033

55:                                               ; preds = %35, %51, %47
  ret void, !dbg !7034
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @spi_get_status(i32 noundef %0) local_unnamed_addr #9 !dbg !7035 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7039, metadata !DIExpression()), !dbg !7041
  %3 = bitcast i32* %2 to i8*, !dbg !7042
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !7042
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7040, metadata !DIExpression()), !dbg !7043
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7044
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7044
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 8, !dbg !7045
  %7 = load volatile i32, i32* %6, align 4, !dbg !7045
  store volatile i32 %7, i32* %2, align 4, !dbg !7046
  %8 = load volatile i32, i32* %2, align 4, !dbg !7047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !7048
  ret i32 %8, !dbg !7049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_set_rwaddr(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #2 !dbg !7050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i32 %1, metadata !7055, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %2, metadata !7056, metadata !DIExpression()), !dbg !7057
  switch i32 %1, label %14 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !7058

4:                                                ; preds = %3
  %5 = ptrtoint i8* %2 to i32, !dbg !7059
  %6 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7061
  %7 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %6, align 4, !dbg !7061
  %8 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 2, !dbg !7062
  store volatile i32 %5, i32* %8, align 4, !dbg !7063
  br label %14, !dbg !7064

9:                                                ; preds = %3
  %10 = ptrtoint i8* %2 to i32, !dbg !7065
  %11 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7066
  %12 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %11, align 4, !dbg !7066
  %13 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %12, i32 0, i32 3, !dbg !7067
  store volatile i32 %10, i32* %13, align 4, !dbg !7068
  br label %14, !dbg !7069

14:                                               ; preds = %3, %9, %4
  ret void, !dbg !7070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_push_data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7075, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i8* %1, metadata !7076, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %2, metadata !7077, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7078, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7079, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7080, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i8* %1, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i8 0, metadata !7082, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7086
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7087
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7087
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 6, !dbg !7089
  %7 = load volatile i32, i32* %6, align 4, !dbg !7089
  %8 = and i32 %7, 32768, !dbg !7090
  %9 = icmp eq i32 %8, 0, !dbg !7090
  br i1 %9, label %11, label %10, !dbg !7091

10:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.spi_push_data, i32 0, i32 0), i32 noundef 254, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.101, i32 0, i32 0), i32 noundef %0) #20, !dbg !7092
  br label %77, !dbg !7094

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 1, !dbg !7095
  %13 = load volatile i32, i32* %12, align 4, !dbg !7096
  %14 = and i32 %13, -67108609, !dbg !7096
  store volatile i32 %14, i32* %12, align 4, !dbg !7096
  %15 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7097
  %16 = load i16, i16* %15, align 2, !dbg !7097
  %17 = zext i16 %16 to i32, !dbg !7097
  %18 = shl nuw nsw i32 %17, 8, !dbg !7098
  %19 = load volatile i32, i32* %12, align 4, !dbg !7099
  %20 = or i32 %18, %19, !dbg !7099
  store volatile i32 %20, i32* %12, align 4, !dbg !7099
  %21 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7100
  %22 = load i16, i16* %21, align 2, !dbg !7100
  %23 = zext i16 %22 to i32, !dbg !7100
  %24 = shl nuw i32 %23, 16, !dbg !7101
  %25 = add i32 %24, -65536, !dbg !7101
  %26 = load volatile i32, i32* %12, align 4, !dbg !7102
  %27 = or i32 %25, %26, !dbg !7102
  store volatile i32 %27, i32* %12, align 4, !dbg !7102
  call void @llvm.dbg.value(metadata i32 %2, metadata !7083, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7086
  %28 = and i32 %2, 3, !dbg !7103
  call void @llvm.dbg.value(metadata i32 %28, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7079, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i8* %1, metadata !7081, metadata !DIExpression()), !dbg !7086
  %29 = icmp ult i32 %2, 4, !dbg !7104
  br i1 %29, label %52, label %30, !dbg !7107

30:                                               ; preds = %11
  %31 = lshr i32 %2, 2, !dbg !7108
  call void @llvm.dbg.value(metadata i32 %31, metadata !7083, metadata !DIExpression()), !dbg !7086
  %32 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4
  br label %33, !dbg !7107

33:                                               ; preds = %30, %48
  %34 = phi i8* [ %1, %30 ], [ %49, %48 ]
  %35 = phi i32 [ 0, %30 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i8* %34, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %35, metadata !7079, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i8* %34, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7080, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7078, metadata !DIExpression()), !dbg !7086
  br label %36, !dbg !7109

36:                                               ; preds = %33, %36
  %37 = phi i8* [ %34, %33 ], [ %45, %36 ]
  %38 = phi i32 [ 0, %33 ], [ %46, %36 ]
  %39 = phi i32 [ 0, %33 ], [ %44, %36 ]
  call void @llvm.dbg.value(metadata i8* %37, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %38, metadata !7080, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %39, metadata !7078, metadata !DIExpression()), !dbg !7086
  %40 = load i8, i8* %37, align 1, !dbg !7112
  call void @llvm.dbg.value(metadata i8 %40, metadata !7082, metadata !DIExpression()), !dbg !7086
  %41 = zext i8 %40 to i32, !dbg !7115
  %42 = shl nuw nsw i32 %38, 3, !dbg !7116
  %43 = shl nuw i32 %41, %42, !dbg !7117
  %44 = or i32 %43, %39, !dbg !7118
  call void @llvm.dbg.value(metadata i32 %44, metadata !7078, metadata !DIExpression()), !dbg !7086
  %45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7119
  call void @llvm.dbg.value(metadata i8* %45, metadata !7081, metadata !DIExpression()), !dbg !7086
  %46 = add nuw nsw i32 %38, 1, !dbg !7120
  call void @llvm.dbg.value(metadata i32 %46, metadata !7080, metadata !DIExpression()), !dbg !7086
  %47 = icmp eq i32 %46, 4, !dbg !7121
  br i1 %47, label %48, label %36, !dbg !7109, !llvm.loop !7122

48:                                               ; preds = %36
  %49 = getelementptr i8, i8* %34, i32 4, !dbg !7109
  store volatile i32 %44, i32* %32, align 4, !dbg !7124
  %50 = add nuw nsw i32 %35, 1, !dbg !7125
  call void @llvm.dbg.value(metadata i8* %49, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %50, metadata !7079, metadata !DIExpression()), !dbg !7086
  %51 = icmp eq i32 %50, %31, !dbg !7104
  br i1 %51, label %52, label %33, !dbg !7107, !llvm.loop !7126

52:                                               ; preds = %48, %11
  %53 = phi i8* [ %1, %11 ], [ %49, %48 ], !dbg !7128
  %54 = icmp eq i32 %28, 0, !dbg !7129
  br i1 %54, label %77, label %55, !dbg !7131

55:                                               ; preds = %52, %55
  %56 = phi i8* [ %64, %55 ], [ %53, %52 ]
  %57 = phi i32 [ %65, %55 ], [ 0, %52 ]
  %58 = phi i32 [ %63, %55 ], [ 0, %52 ]
  call void @llvm.dbg.value(metadata i8* %56, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %57, metadata !7080, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %58, metadata !7078, metadata !DIExpression()), !dbg !7086
  %59 = load i8, i8* %56, align 1, !dbg !7132
  call void @llvm.dbg.value(metadata i8 %59, metadata !7082, metadata !DIExpression()), !dbg !7086
  %60 = zext i8 %59 to i32, !dbg !7137
  %61 = shl nuw nsw i32 %57, 3, !dbg !7138
  %62 = shl nuw i32 %60, %61, !dbg !7139
  %63 = or i32 %62, %58, !dbg !7140
  call void @llvm.dbg.value(metadata i32 %63, metadata !7078, metadata !DIExpression()), !dbg !7086
  %64 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !7141
  call void @llvm.dbg.value(metadata i8* %64, metadata !7081, metadata !DIExpression()), !dbg !7086
  %65 = add nuw nsw i32 %57, 1, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %65, metadata !7080, metadata !DIExpression()), !dbg !7086
  %66 = icmp eq i32 %65, 4, !dbg !7143
  br i1 %66, label %67, label %55, !dbg !7144, !llvm.loop !7145

67:                                               ; preds = %55
  switch i32 %28, label %77 [
    i32 3, label %68
    i32 2, label %71
    i32 1, label %74
  ], !dbg !7147

68:                                               ; preds = %67
  %69 = and i32 %63, 16777215, !dbg !7148
  %70 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4, !dbg !7150
  store volatile i32 %69, i32* %70, align 4, !dbg !7151
  br label %77, !dbg !7152

71:                                               ; preds = %67
  %72 = and i32 %63, 65535, !dbg !7153
  %73 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4, !dbg !7154
  store volatile i32 %72, i32* %73, align 4, !dbg !7155
  br label %77, !dbg !7156

74:                                               ; preds = %67
  %75 = and i32 %63, 255, !dbg !7157
  %76 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4, !dbg !7158
  store volatile i32 %75, i32* %76, align 4, !dbg !7159
  br label %77, !dbg !7160

77:                                               ; preds = %52, %67, %74, %71, %68, %10
  %78 = phi i32 [ -4, %10 ], [ 0, %68 ], [ 0, %71 ], [ 0, %74 ], [ 0, %67 ], [ 0, %52 ], !dbg !7086
  ret i32 %78, !dbg !7161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_pop_data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7164, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %1, metadata !7165, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %2, metadata !7166, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7167, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7168, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7169, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %1, metadata !7170, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8 0, metadata !7171, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7172, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7173, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7174, metadata !DIExpression()), !dbg !7175
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7176
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7176
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 6, !dbg !7178
  %7 = load volatile i32, i32* %6, align 4, !dbg !7178
  %8 = and i32 %7, 16384, !dbg !7179
  %9 = icmp eq i32 %8, 0, !dbg !7179
  br i1 %9, label %11, label %10, !dbg !7180

10:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.spi_pop_data, i32 0, i32 0), i32 noundef 311, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef %0) #20, !dbg !7181
  br label %58, !dbg !7183

11:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %2, metadata !7172, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7175
  %12 = and i32 %2, 3, !dbg !7184
  call void @llvm.dbg.value(metadata i32 %12, metadata !7173, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7168, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %1, metadata !7170, metadata !DIExpression()), !dbg !7175
  %13 = icmp ult i32 %2, 4, !dbg !7185
  br i1 %13, label %35, label %14, !dbg !7188

14:                                               ; preds = %11
  %15 = lshr i32 %2, 2, !dbg !7189
  call void @llvm.dbg.value(metadata i32 %15, metadata !7172, metadata !DIExpression()), !dbg !7175
  %16 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 5
  br label %17, !dbg !7188

17:                                               ; preds = %14, %32
  %18 = phi i8* [ %1, %14 ], [ %29, %32 ]
  %19 = phi i32 [ 0, %14 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7170, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %19, metadata !7168, metadata !DIExpression()), !dbg !7175
  %20 = load volatile i32, i32* %16, align 4, !dbg !7190
  call void @llvm.dbg.value(metadata i32 %20, metadata !7167, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7169, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %18, metadata !7170, metadata !DIExpression()), !dbg !7175
  br label %21, !dbg !7192

21:                                               ; preds = %17, %21
  %22 = phi i8* [ %18, %17 ], [ %29, %21 ]
  %23 = phi i32 [ 0, %17 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i8* %22, metadata !7170, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %23, metadata !7169, metadata !DIExpression()), !dbg !7175
  %24 = shl nuw nsw i32 %23, 3, !dbg !7194
  %25 = shl nuw i32 255, %24, !dbg !7197
  %26 = and i32 %25, %20, !dbg !7198
  %27 = lshr i32 %26, %24, !dbg !7199
  %28 = trunc i32 %27 to i8, !dbg !7200
  call void @llvm.dbg.value(metadata i8 %28, metadata !7171, metadata !DIExpression()), !dbg !7175
  store i8 %28, i8* %22, align 1, !dbg !7201
  %29 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !7202
  call void @llvm.dbg.value(metadata i8* %29, metadata !7170, metadata !DIExpression()), !dbg !7175
  %30 = add nuw nsw i32 %23, 1, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %30, metadata !7169, metadata !DIExpression()), !dbg !7175
  %31 = icmp eq i32 %30, 4, !dbg !7204
  br i1 %31, label %32, label %21, !dbg !7192, !llvm.loop !7205

32:                                               ; preds = %21
  %33 = add nuw nsw i32 %19, 1, !dbg !7207
  call void @llvm.dbg.value(metadata i8* %29, metadata !7170, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %33, metadata !7168, metadata !DIExpression()), !dbg !7175
  %34 = icmp eq i32 %33, %15, !dbg !7185
  br i1 %34, label %35, label %17, !dbg !7188, !llvm.loop !7208

35:                                               ; preds = %32, %11
  %36 = phi i8* [ %1, %11 ], [ %29, %32 ], !dbg !7210
  %37 = icmp eq i32 %12, 0, !dbg !7211
  br i1 %37, label %58, label %38, !dbg !7213

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 5, !dbg !7214
  %40 = load volatile i32, i32* %39, align 4, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %40, metadata !7167, metadata !DIExpression()), !dbg !7175
  switch i32 %12, label %47 [
    i32 3, label %41
    i32 2, label %43
    i32 1, label %45
  ], !dbg !7216

41:                                               ; preds = %38
  %42 = and i32 %40, 16777215, !dbg !7217
  call void @llvm.dbg.value(metadata i32 %42, metadata !7167, metadata !DIExpression()), !dbg !7175
  br label %47, !dbg !7219

43:                                               ; preds = %38
  %44 = and i32 %40, 65535, !dbg !7220
  call void @llvm.dbg.value(metadata i32 %44, metadata !7167, metadata !DIExpression()), !dbg !7175
  br label %47, !dbg !7221

45:                                               ; preds = %38
  %46 = and i32 %40, 255, !dbg !7222
  call void @llvm.dbg.value(metadata i32 %46, metadata !7167, metadata !DIExpression()), !dbg !7175
  br label %47, !dbg !7223

47:                                               ; preds = %41, %43, %45, %38
  %48 = phi i32 [ %40, %38 ], [ %46, %45 ], [ %44, %43 ], [ %42, %41 ], !dbg !7224
  call void @llvm.dbg.value(metadata i32 %48, metadata !7167, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 0, metadata !7169, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %36, metadata !7170, metadata !DIExpression()), !dbg !7175
  br label %49, !dbg !7225

49:                                               ; preds = %47, %49
  %50 = phi i8* [ %55, %49 ], [ %36, %47 ]
  %51 = phi i32 [ %56, %49 ], [ 0, %47 ]
  call void @llvm.dbg.value(metadata i8* %50, metadata !7170, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %51, metadata !7169, metadata !DIExpression()), !dbg !7175
  %52 = shl i32 %51, 3, !dbg !7227
  %53 = lshr i32 %48, %52, !dbg !7230
  %54 = trunc i32 %53 to i8, !dbg !7231
  store i8 %54, i8* %50, align 1, !dbg !7232
  %55 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !7233
  call void @llvm.dbg.value(metadata i8* %55, metadata !7170, metadata !DIExpression()), !dbg !7175
  %56 = add nuw nsw i32 %51, 1, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %56, metadata !7169, metadata !DIExpression()), !dbg !7175
  %57 = icmp eq i32 %56, %12, !dbg !7235
  br i1 %57, label %58, label %49, !dbg !7225, !llvm.loop !7236

58:                                               ; preds = %49, %35, %10
  %59 = phi i32 [ -4, %10 ], [ 0, %35 ], [ 0, %49 ], !dbg !7175
  ret i32 %59, !dbg !7238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #2 !dbg !7239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i1 %1, metadata !7244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7245
  %3 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7246
  %4 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %3, align 4, !dbg !7246
  %5 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 6, !dbg !7246
  %6 = load volatile i32, i32* %5, align 4, !dbg !7246
  %7 = and i32 %6, -196609, !dbg !7248
  %8 = select i1 %1, i32 196608, i32 0, !dbg !7248
  %9 = or i32 %7, %8, !dbg !7248
  store volatile i32 %9, i32* %5, align 4, !dbg !7246
  ret void, !dbg !7249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_clear_fifo(i32 noundef %0) local_unnamed_addr #2 !dbg !7250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7252, metadata !DIExpression()), !dbg !7253
  %2 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7254
  %3 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %2, align 4, !dbg !7254
  %4 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %3, i32 0, i32 6, !dbg !7255
  %5 = load volatile i32, i32* %4, align 4, !dbg !7256
  %6 = or i32 %5, 4, !dbg !7256
  store volatile i32 %6, i32* %4, align 4, !dbg !7256
  %7 = load volatile i32, i32* %4, align 4, !dbg !7257
  %8 = and i32 %7, -5, !dbg !7257
  store volatile i32 %8, i32* %4, align 4, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_set_mode(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !7259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7263, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i32 %1, metadata !7264, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata i32 %2, metadata !7265, metadata !DIExpression()), !dbg !7266
  %4 = icmp eq i32 %1, 0, !dbg !7267
  br i1 %4, label %5, label %18, !dbg !7269

5:                                                ; preds = %3
  switch i32 %2, label %31 [
    i32 1, label %6
    i32 0, label %12
  ], !dbg !7270

6:                                                ; preds = %5
  %7 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7272
  %8 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %7, align 4, !dbg !7272
  %9 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %8, i32 0, i32 6, !dbg !7274
  %10 = load volatile i32, i32* %9, align 4, !dbg !7275
  %11 = or i32 %10, 2048, !dbg !7275
  store volatile i32 %11, i32* %9, align 4, !dbg !7275
  br label %31, !dbg !7276

12:                                               ; preds = %5
  %13 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7277
  %14 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %13, align 4, !dbg !7277
  %15 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %14, i32 0, i32 6, !dbg !7278
  %16 = load volatile i32, i32* %15, align 4, !dbg !7279
  %17 = and i32 %16, -2049, !dbg !7279
  store volatile i32 %17, i32* %15, align 4, !dbg !7279
  br label %31, !dbg !7280

18:                                               ; preds = %3
  switch i32 %2, label %31 [
    i32 1, label %19
    i32 0, label %25
  ], !dbg !7281

19:                                               ; preds = %18
  %20 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7283
  %21 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %20, align 4, !dbg !7283
  %22 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %21, i32 0, i32 6, !dbg !7285
  %23 = load volatile i32, i32* %22, align 4, !dbg !7286
  %24 = or i32 %23, 1024, !dbg !7286
  store volatile i32 %24, i32* %22, align 4, !dbg !7286
  br label %31, !dbg !7287

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7288
  %27 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %26, align 4, !dbg !7288
  %28 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %27, i32 0, i32 6, !dbg !7289
  %29 = load volatile i32, i32* %28, align 4, !dbg !7290
  %30 = and i32 %29, -1025, !dbg !7290
  store volatile i32 %30, i32* %28, align 4, !dbg !7290
  br label %31, !dbg !7291

31:                                               ; preds = %19, %18, %25, %6, %5, %12
  ret void, !dbg !7292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_start_transfer_dma_blocking(i32 noundef %0) local_unnamed_addr #2 !dbg !7293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7295, metadata !DIExpression()), !dbg !7298
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7299
  %3 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0
  %4 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %3, align 4
  %5 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 6
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 1
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_pause_count, i32 0, i32 %0
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0
  %9 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0
  %10 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 8
  %11 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 7
  br label %12, !dbg !7300

12:                                               ; preds = %137, %1
  %13 = load volatile i32, i32* %5, align 4, !dbg !7301
  %14 = and i32 %13, 16, !dbg !7304
  %15 = icmp eq i32 %14, 0, !dbg !7304
  call void @llvm.dbg.value(metadata i8 poison, metadata !7296, metadata !DIExpression()), !dbg !7298
  %16 = load volatile i32, i32* %6, align 4, !dbg !7305
  %17 = and i32 %16, -67108609, !dbg !7305
  store volatile i32 %17, i32* %6, align 4, !dbg !7305
  %18 = load i32, i32* %7, align 4, !dbg !7306
  %19 = icmp eq i32 %18, 0, !dbg !7308
  %20 = select i1 %19, i1 true, i1 %15, !dbg !7309
  br i1 %20, label %38, label %21, !dbg !7309

21:                                               ; preds = %12
  %22 = add i32 %18, -1, !dbg !7310
  store i32 %22, i32* %7, align 4, !dbg !7310
  %23 = load volatile i32, i32* %6, align 4, !dbg !7312
  %24 = or i32 %23, 67108608, !dbg !7312
  store volatile i32 %24, i32* %6, align 4, !dbg !7312
  %25 = icmp eq i32 %22, 0, !dbg !7313
  br i1 %25, label %26, label %35, !dbg !7315

26:                                               ; preds = %21
  %27 = load i32, i32* %8, align 4, !dbg !7316
  %28 = icmp eq i32 %27, 0, !dbg !7317
  br i1 %28, label %29, label %35, !dbg !7318

29:                                               ; preds = %26
  %30 = load i16, i16* %2, align 2, !dbg !7319
  %31 = icmp eq i16 %30, 0, !dbg !7320
  br i1 %31, label %32, label %35, !dbg !7321

32:                                               ; preds = %29
  %33 = load volatile i32, i32* %5, align 4, !dbg !7322
  %34 = and i32 %33, -17, !dbg !7322
  store volatile i32 %34, i32* %5, align 4, !dbg !7322
  br label %35, !dbg !7324

35:                                               ; preds = %32, %29, %26, %21
  %36 = load volatile i32, i32* %5, align 4, !dbg !7325
  %37 = or i32 %36, 2, !dbg !7325
  store volatile i32 %37, i32* %5, align 4, !dbg !7325
  br label %120, !dbg !7326

38:                                               ; preds = %12
  %39 = load i32, i32* %8, align 4, !dbg !7327
  %40 = icmp eq i32 %39, 0, !dbg !7329
  %41 = select i1 %40, i1 true, i1 %15, !dbg !7330
  br i1 %41, label %56, label %42, !dbg !7330

42:                                               ; preds = %38
  %43 = shl i32 %39, 8, !dbg !7331
  %44 = add i32 %43, -256, !dbg !7331
  %45 = load volatile i32, i32* %6, align 4, !dbg !7333
  %46 = or i32 %44, %45, !dbg !7333
  %47 = or i32 %46, 67043328, !dbg !7333
  store volatile i32 %47, i32* %6, align 4, !dbg !7333
  store i32 0, i32* %8, align 4, !dbg !7334
  %48 = load i16, i16* %2, align 2, !dbg !7335
  %49 = icmp eq i16 %48, 0, !dbg !7337
  br i1 %49, label %50, label %53, !dbg !7338

50:                                               ; preds = %42
  %51 = load volatile i32, i32* %5, align 4, !dbg !7339
  %52 = and i32 %51, -17, !dbg !7339
  store volatile i32 %52, i32* %5, align 4, !dbg !7339
  br label %53, !dbg !7341

53:                                               ; preds = %50, %42
  %54 = load volatile i32, i32* %5, align 4, !dbg !7342
  %55 = or i32 %54, 2, !dbg !7342
  store volatile i32 %55, i32* %5, align 4, !dbg !7342
  br label %120, !dbg !7343

56:                                               ; preds = %38
  %57 = load i16, i16* %2, align 2, !dbg !7344
  %58 = and i16 %57, 3, !dbg !7346
  %59 = icmp eq i16 %58, 0, !dbg !7347
  br i1 %59, label %83, label %60, !dbg !7348

60:                                               ; preds = %56
  br i1 %19, label %74, label %61, !dbg !7349

61:                                               ; preds = %60
  %62 = add i32 %18, -1, !dbg !7350
  store i32 %62, i32* %7, align 4, !dbg !7350
  %63 = load volatile i32, i32* %6, align 4, !dbg !7352
  %64 = or i32 %63, 67108608, !dbg !7352
  store volatile i32 %64, i32* %6, align 4, !dbg !7352
  %65 = icmp ne i32 %62, 0, !dbg !7353
  %66 = xor i1 %40, true, !dbg !7355
  %67 = select i1 %65, i1 true, i1 %66, !dbg !7355
  br i1 %67, label %71, label %68, !dbg !7355

68:                                               ; preds = %61
  %69 = load volatile i32, i32* %5, align 4, !dbg !7356
  %70 = and i32 %69, -17, !dbg !7356
  store volatile i32 %70, i32* %5, align 4, !dbg !7356
  br label %71, !dbg !7358

71:                                               ; preds = %61, %68
  %72 = load volatile i32, i32* %5, align 4, !dbg !7359
  %73 = or i32 %72, 17, !dbg !7359
  store volatile i32 %73, i32* %5, align 4, !dbg !7359
  br label %120, !dbg !7360

74:                                               ; preds = %60
  br i1 %40, label %100, label %75, !dbg !7361

75:                                               ; preds = %74
  %76 = shl i32 %39, 8, !dbg !7362
  %77 = add i32 %76, -256, !dbg !7362
  %78 = load volatile i32, i32* %6, align 4, !dbg !7365
  %79 = or i32 %77, %78, !dbg !7365
  %80 = or i32 %79, 67043328, !dbg !7365
  store volatile i32 %80, i32* %6, align 4, !dbg !7365
  store i32 0, i32* %8, align 4, !dbg !7366
  %81 = load volatile i32, i32* %5, align 4, !dbg !7367
  %82 = or i32 %81, 17, !dbg !7367
  store volatile i32 %82, i32* %5, align 4, !dbg !7367
  br label %120, !dbg !7368

83:                                               ; preds = %56
  %84 = select i1 %19, i1 %40, i1 false, !dbg !7369
  br i1 %84, label %100, label %85, !dbg !7369

85:                                               ; preds = %83
  %86 = load i16, i16* %9, align 2, !dbg !7371
  %87 = zext i16 %86 to i32, !dbg !7371
  %88 = shl nuw nsw i32 %87, 8, !dbg !7373
  %89 = load volatile i32, i32* %6, align 4, !dbg !7374
  %90 = or i32 %88, %89, !dbg !7374
  store volatile i32 %90, i32* %6, align 4, !dbg !7374
  %91 = zext i16 %57 to i32, !dbg !7375
  %92 = shl nuw i32 %91, 16, !dbg !7376
  %93 = add i32 %92, -65536, !dbg !7376
  %94 = load volatile i32, i32* %6, align 4, !dbg !7377
  %95 = or i32 %94, %93, !dbg !7377
  store volatile i32 %95, i32* %6, align 4, !dbg !7377
  store i16 0, i16* %2, align 2, !dbg !7378
  %96 = load volatile i32, i32* %5, align 4, !dbg !7379
  %97 = or i32 %96, 16, !dbg !7379
  store volatile i32 %97, i32* %5, align 4, !dbg !7379
  %98 = load volatile i32, i32* %5, align 4, !dbg !7380
  %99 = or i32 %98, 1, !dbg !7380
  store volatile i32 %99, i32* %5, align 4, !dbg !7380
  br label %120, !dbg !7381

100:                                              ; preds = %83, %74
  %101 = load i16, i16* %9, align 2, !dbg !7382
  %102 = zext i16 %101 to i32, !dbg !7382
  %103 = shl nuw nsw i32 %102, 8, !dbg !7384
  %104 = load volatile i32, i32* %6, align 4, !dbg !7385
  %105 = or i32 %103, %104, !dbg !7385
  store volatile i32 %105, i32* %6, align 4, !dbg !7385
  %106 = zext i16 %57 to i32, !dbg !7386
  %107 = shl nuw i32 %106, 16, !dbg !7387
  %108 = add i32 %107, -65536, !dbg !7387
  %109 = load volatile i32, i32* %6, align 4, !dbg !7388
  %110 = or i32 %109, %108, !dbg !7388
  store volatile i32 %110, i32* %6, align 4, !dbg !7388
  %111 = load volatile i32, i32* %5, align 4, !dbg !7389
  br i1 %15, label %116, label %112, !dbg !7391

112:                                              ; preds = %100
  %113 = and i32 %111, -17, !dbg !7392
  store volatile i32 %113, i32* %5, align 4, !dbg !7392
  %114 = load volatile i32, i32* %5, align 4, !dbg !7394
  %115 = or i32 %114, 2, !dbg !7394
  br label %118, !dbg !7395

116:                                              ; preds = %100
  %117 = or i32 %111, 1, !dbg !7396
  br label %118

118:                                              ; preds = %116, %112
  %119 = phi i32 [ %117, %116 ], [ %115, %112 ]
  store volatile i32 %119, i32* %5, align 4, !dbg !7389
  store i16 0, i16* %2, align 2, !dbg !7398
  br label %120

120:                                              ; preds = %53, %75, %118, %85, %71, %35
  %121 = phi i32 [ %18, %53 ], [ 0, %75 ], [ 0, %118 ], [ %18, %85 ], [ %62, %71 ], [ %22, %35 ]
  br label %122, !dbg !7399

122:                                              ; preds = %122, %120
  %123 = load volatile i32, i32* %10, align 4, !dbg !7400
  %124 = icmp eq i32 %123, 1, !dbg !7401
  br i1 %124, label %125, label %122, !dbg !7399, !llvm.loop !7402

125:                                              ; preds = %122, %125
  %126 = load volatile i32, i32* %11, align 4, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %126, metadata !7297, metadata !DIExpression()), !dbg !7298
  %127 = add i32 %126, -3, !dbg !7406
  %128 = icmp ult i32 %127, -2, !dbg !7406
  br i1 %128, label %125, label %129, !dbg !7407, !llvm.loop !7408

129:                                              ; preds = %125
  %130 = icmp eq i32 %121, 0, !dbg !7411
  br i1 %130, label %131, label %137, !dbg !7412

131:                                              ; preds = %129
  %132 = load i32, i32* %8, align 4, !dbg !7413
  %133 = icmp eq i32 %132, 0, !dbg !7414
  br i1 %133, label %134, label %137, !dbg !7415

134:                                              ; preds = %131
  %135 = load i16, i16* %2, align 2, !dbg !7299
  %136 = icmp eq i16 %135, 0, !dbg !7416
  br i1 %136, label %138, label %137, !dbg !7417

137:                                              ; preds = %134, %131, %129
  br label %12, !dbg !7301, !llvm.loop !7418

138:                                              ; preds = %134
  ret void, !dbg !7420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7425, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 %1, metadata !7426, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 0, metadata !7427, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 %1, metadata !7428, metadata !DIExpression()), !dbg !7429
  %3 = icmp ugt i32 %1, 262144, !dbg !7430
  br i1 %3, label %4, label %19, !dbg !7432

4:                                                ; preds = %2
  %5 = lshr i32 %1, 18, !dbg !7433
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_pause_count, i32 0, i32 %0, !dbg !7435
  store i32 %5, i32* %6, align 4, !dbg !7436
  %7 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7437
  %8 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %7, align 4, !dbg !7437
  %9 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %8, i32 0, i32 6, !dbg !7439
  %10 = load volatile i32, i32* %9, align 4, !dbg !7439
  %11 = and i32 %10, 32, !dbg !7440
  %12 = icmp eq i32 %11, 0, !dbg !7441
  br i1 %12, label %14, label %13, !dbg !7442

13:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.spi_analyse_transfer_size, i32 0, i32 0), i32 noundef 546, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef %0) #20, !dbg !7443
  br label %44, !dbg !7445

14:                                               ; preds = %4
  %15 = and i32 %1, 262143, !dbg !7446
  call void @llvm.dbg.value(metadata i32 %15, metadata !7428, metadata !DIExpression()), !dbg !7429
  %16 = icmp eq i32 %15, 0, !dbg !7447
  br i1 %16, label %17, label %19, !dbg !7449

17:                                               ; preds = %14
  %18 = add nsw i32 %5, -1, !dbg !7450
  store i32 %18, i32* %6, align 4, !dbg !7450
  call void @llvm.dbg.value(metadata i32 %20, metadata !7428, metadata !DIExpression()), !dbg !7429
  br label %31, !dbg !7452

19:                                               ; preds = %14, %2
  %20 = phi i32 [ %15, %14 ], [ %1, %2 ], !dbg !7429
  call void @llvm.dbg.value(metadata i32 %20, metadata !7428, metadata !DIExpression()), !dbg !7429
  %21 = icmp ugt i32 %20, 1024, !dbg !7455
  br i1 %21, label %22, label %38, !dbg !7456

22:                                               ; preds = %19
  %23 = and i32 %20, 1023, !dbg !7457
  %24 = icmp eq i32 %23, 0, !dbg !7459
  br i1 %24, label %31, label %25, !dbg !7452

25:                                               ; preds = %22
  %26 = lshr i32 %20, 10, !dbg !7460
  %27 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0, !dbg !7462
  store i32 %26, i32* %27, align 4, !dbg !7463
  %28 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7464
  store i16 0, i16* %28, align 2, !dbg !7465
  %29 = trunc i32 %23 to i16, !dbg !7466
  %30 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7467
  store i16 %29, i16* %30, align 2, !dbg !7468
  br label %44, !dbg !7469

31:                                               ; preds = %17, %22
  %32 = phi i32 [ 262144, %17 ], [ %20, %22 ]
  %33 = lshr i32 %32, 10, !dbg !7470
  %34 = trunc i32 %33 to i16, !dbg !7472
  %35 = add nsw i16 %34, -1, !dbg !7472
  %36 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7473
  store i16 %35, i16* %36, align 2, !dbg !7474
  %37 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7475
  store i16 1024, i16* %37, align 2, !dbg !7476
  br label %44

38:                                               ; preds = %19
  %39 = icmp eq i32 %20, 0, !dbg !7477
  br i1 %39, label %44, label %40, !dbg !7479

40:                                               ; preds = %38
  %41 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7480
  store i16 0, i16* %41, align 2, !dbg !7482
  %42 = trunc i32 %20 to i16, !dbg !7483
  %43 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7484
  store i16 %42, i16* %43, align 2, !dbg !7485
  br label %44

44:                                               ; preds = %40, %31, %25, %38, %13
  %45 = phi i32 [ -4, %13 ], [ -1, %38 ], [ 0, %25 ], [ 0, %31 ], [ 0, %40 ], !dbg !7429
  ret i32 %45, !dbg !7486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_set_chip_select_timing(i32 noundef %0, [3 x i32] %1) local_unnamed_addr #2 !dbg !7487 {
  %3 = extractvalue [3 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !7498, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7499
  %4 = extractvalue [3 x i32] %1, 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !7498, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7499
  %5 = extractvalue [3 x i32] %1, 2
  call void @llvm.dbg.value(metadata i32 %5, metadata !7498, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !7499
  call void @llvm.dbg.value(metadata i32 %0, metadata !7497, metadata !DIExpression()), !dbg !7499
  %6 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7500
  %7 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %6, align 4, !dbg !7500
  %8 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 0, !dbg !7501
  %9 = load volatile i32, i32* %8, align 4, !dbg !7502
  store volatile i32 0, i32* %8, align 4, !dbg !7502
  %10 = shl i32 %3, 16, !dbg !7503
  %11 = load volatile i32, i32* %8, align 4, !dbg !7504
  %12 = or i32 %11, %10, !dbg !7504
  store volatile i32 %12, i32* %8, align 4, !dbg !7504
  %13 = load volatile i32, i32* %8, align 4, !dbg !7505
  %14 = or i32 %13, %4, !dbg !7505
  store volatile i32 %14, i32* %8, align 4, !dbg !7505
  %15 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 1, !dbg !7506
  %16 = load volatile i32, i32* %15, align 4, !dbg !7507
  %17 = and i32 %16, -256, !dbg !7507
  store volatile i32 %17, i32* %15, align 4, !dbg !7507
  %18 = load volatile i32, i32* %15, align 4, !dbg !7508
  %19 = or i32 %18, %5, !dbg !7508
  store volatile i32 %19, i32* %15, align 4, !dbg !7508
  ret void, !dbg !7509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_set_deassert(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7514, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i32 %1, metadata !7515, metadata !DIExpression()), !dbg !7516
  switch i32 %1, label %15 [
    i32 0, label %3
    i32 1, label %9
  ], !dbg !7517

3:                                                ; preds = %2
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7518
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7518
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 6, !dbg !7520
  %7 = load volatile i32, i32* %6, align 4, !dbg !7521
  %8 = and i32 %7, -33, !dbg !7521
  store volatile i32 %8, i32* %6, align 4, !dbg !7521
  br label %15, !dbg !7522

9:                                                ; preds = %2
  %10 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7523
  %11 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %10, align 4, !dbg !7523
  %12 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %11, i32 0, i32 6, !dbg !7524
  %13 = load volatile i32, i32* %12, align 4, !dbg !7525
  %14 = or i32 %13, 32, !dbg !7525
  store volatile i32 %14, i32* %12, align 4, !dbg !7525
  br label %15, !dbg !7526

15:                                               ; preds = %2, %9, %3
  ret void, !dbg !7527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1021 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !7528
  br i1 %1, label %9, label %2, !dbg !7530

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1113, metadata !DIExpression()), !dbg !7531
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !7532
  %5 = load i32, i32* %4, align 4, !dbg !7532
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !7537
  %6 = add nuw nsw i32 %3, 1, !dbg !7538
  call void @llvm.dbg.value(metadata i32 %6, metadata !1113, metadata !DIExpression()), !dbg !7531
  %7 = icmp eq i32 %6, 64, !dbg !7539
  br i1 %7, label %8, label %2, !dbg !7540, !llvm.loop !7541

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !7543
  br label %9, !dbg !7544

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !7545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !7546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %1, metadata !7551, metadata !DIExpression()), !dbg !7552
  %3 = trunc i32 %1 to i8, !dbg !7553
  %4 = shl i8 %3, 2, !dbg !7553
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7556
  store volatile i8 %4, i8* %5, align 1, !dbg !7557
  ret void, !dbg !7558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7563, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 -1, metadata !7564, metadata !DIExpression()), !dbg !7565
  %2 = icmp ugt i32 %0, 63, !dbg !7566
  br i1 %2, label %4, label %3, !dbg !7566

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !7568
  call void @llvm.dbg.value(metadata i32 0, metadata !7564, metadata !DIExpression()), !dbg !7565
  br label %4, !dbg !7570

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7565
  ret i32 %5, !dbg !7571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7576, metadata !DIExpression()), !dbg !7577
  %2 = and i32 %0, 31, !dbg !7578
  %3 = shl nuw i32 1, %2, !dbg !7579
  %4 = lshr i32 %0, 5, !dbg !7580
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7581
  store volatile i32 %3, i32* %5, align 4, !dbg !7582
  ret void, !dbg !7583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7586, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 -1, metadata !7587, metadata !DIExpression()), !dbg !7588
  %2 = icmp ugt i32 %0, 63, !dbg !7589
  br i1 %2, label %4, label %3, !dbg !7589

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !7591
  call void @llvm.dbg.value(metadata i32 0, metadata !7587, metadata !DIExpression()), !dbg !7588
  br label %4, !dbg !7593

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7588
  ret i32 %5, !dbg !7594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7597, metadata !DIExpression()), !dbg !7598
  %2 = and i32 %0, 31, !dbg !7599
  %3 = shl nuw i32 1, %2, !dbg !7600
  %4 = lshr i32 %0, 5, !dbg !7601
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7602
  store volatile i32 %3, i32* %5, align 4, !dbg !7603
  ret void, !dbg !7604
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !7605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7609, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i32 255, metadata !7610, metadata !DIExpression()), !dbg !7611
  %2 = icmp ugt i32 %0, 63, !dbg !7612
  br i1 %2, label %5, label %3, !dbg !7612

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %4, metadata !7610, metadata !DIExpression()), !dbg !7611
  br label %5, !dbg !7616

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7611
  ret i32 %6, !dbg !7617
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !7618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7622, metadata !DIExpression()), !dbg !7623
  %2 = lshr i32 %0, 5, !dbg !7624
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7625
  %4 = load volatile i32, i32* %3, align 4, !dbg !7625
  %5 = and i32 %0, 31, !dbg !7626
  %6 = lshr i32 %4, %5, !dbg !7627
  %7 = and i32 %6, 1, !dbg !7627
  ret i32 %7, !dbg !7628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7631, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 -1, metadata !7632, metadata !DIExpression()), !dbg !7633
  %2 = icmp ugt i32 %0, 63, !dbg !7634
  br i1 %2, label %4, label %3, !dbg !7634

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !7636
  call void @llvm.dbg.value(metadata i32 0, metadata !7632, metadata !DIExpression()), !dbg !7633
  br label %4, !dbg !7638

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7633
  ret i32 %5, !dbg !7639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7642, metadata !DIExpression()), !dbg !7643
  %2 = and i32 %0, 31, !dbg !7644
  %3 = shl nuw i32 1, %2, !dbg !7645
  %4 = lshr i32 %0, 5, !dbg !7646
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7647
  store volatile i32 %3, i32* %5, align 4, !dbg !7648
  ret void, !dbg !7649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7652, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 -1, metadata !7653, metadata !DIExpression()), !dbg !7654
  %2 = icmp ugt i32 %0, 63, !dbg !7655
  br i1 %2, label %4, label %3, !dbg !7655

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7657
  call void @llvm.dbg.value(metadata i32 0, metadata !7653, metadata !DIExpression()), !dbg !7654
  br label %4, !dbg !7659

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7654
  ret i32 %5, !dbg !7660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7663, metadata !DIExpression()), !dbg !7664
  %2 = and i32 %0, 31, !dbg !7665
  %3 = shl nuw i32 1, %2, !dbg !7666
  %4 = lshr i32 %0, 5, !dbg !7667
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7668
  store volatile i32 %3, i32* %5, align 4, !dbg !7669
  ret void, !dbg !7670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7675, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %1, metadata !7676, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 -1, metadata !7677, metadata !DIExpression()), !dbg !7678
  %3 = icmp ugt i32 %0, 63, !dbg !7679
  br i1 %3, label %5, label %4, !dbg !7679

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !7681
  call void @llvm.dbg.value(metadata i32 0, metadata !7677, metadata !DIExpression()), !dbg !7678
  br label %5, !dbg !7683

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7678
  ret i32 %6, !dbg !7684
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !7685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 68, metadata !7688, metadata !DIExpression()), !dbg !7689
  %2 = icmp ugt i32 %0, 63, !dbg !7690
  br i1 %2, label %5, label %3, !dbg !7690

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !7692
  call void @llvm.dbg.value(metadata i32 %4, metadata !7688, metadata !DIExpression()), !dbg !7689
  br label %5, !dbg !7694

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7689
  ret i32 %6, !dbg !7695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !7696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7698, metadata !DIExpression()), !dbg !7699
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7700
  %3 = load volatile i8, i8* %2, align 1, !dbg !7700
  %4 = lshr i8 %3, 2, !dbg !7703
  %5 = zext i8 %4 to i32, !dbg !7703
  ret i32 %5, !dbg !7704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7705 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7707, metadata !DIExpression()), !dbg !7709
  tail call void @Flash_ReturnReady() #20, !dbg !7710
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %1, metadata !7708, metadata !DIExpression()), !dbg !7709
  %2 = icmp ugt i32 %1, 63, !dbg !7712
  br i1 %2, label %12, label %3, !dbg !7712

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !7714
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !7714
  %6 = icmp eq void (i32)* %5, null, !dbg !7716
  br i1 %6, label %7, label %8, !dbg !7717

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7707, metadata !DIExpression()), !dbg !7709
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.126, i32 0, i32 0)) #20, !dbg !7718
  br label %12, !dbg !7720

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !7721
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !7723
  store i32 %9, i32* %10, align 4, !dbg !7724
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !7725
  tail call void %11(i32 noundef %1) #20, !dbg !7726
  call void @llvm.dbg.value(metadata i32 0, metadata !7707, metadata !DIExpression()), !dbg !7709
  br label %12, !dbg !7727

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7709
  ret i32 %13, !dbg !7728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !7729 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7732
  %2 = and i32 %1, 511, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression()), !dbg !7734
  %3 = add nsw i32 %2, -16, !dbg !7735
  ret i32 %3, !dbg !7736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !7737 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7738
  %2 = lshr i32 %1, 22, !dbg !7739
  %3 = and i32 %2, 1, !dbg !7739
  ret i32 %3, !dbg !7740
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !7741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7746, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !7747, metadata !DIExpression()), !dbg !7749
  %3 = icmp ugt i32 %0, 63, !dbg !7750
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !7750
  br i1 %5, label %10, label %6, !dbg !7750

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %7, metadata !7748, metadata !DIExpression()), !dbg !7749
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7753
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !7754
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !7755
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !7756
  store i32 0, i32* %9, align 4, !dbg !7757
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !7758
  br label %10, !dbg !7759

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !7749
  ret i32 %11, !dbg !7760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !7761 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7765, metadata !DIExpression()), !dbg !7766
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7767
  store i32 %2, i32* %0, align 4, !dbg !7768
  ret i32 0, !dbg !7769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7774, metadata !DIExpression()), !dbg !7775
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7776
  ret i32 0, !dbg !7777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !7778 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !7782, !srcloc !7788
  call void @llvm.dbg.value(metadata i32 %1, metadata !7786, metadata !DIExpression()) #22, !dbg !7789
  call void @llvm.dbg.value(metadata i32 %1, metadata !7780, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i32 1, metadata !7781, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i32 4, metadata !7791, metadata !DIExpression()) #22, !dbg !7796
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !7798, !srcloc !7799
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7800, !srcloc !7803
  tail call void asm sideeffect "isb", ""() #22, !dbg !7804, !srcloc !7807
  ret i32 %1, !dbg !7808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i32 %0, metadata !7791, metadata !DIExpression()) #22, !dbg !7813
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !7815, !srcloc !7799
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7816, !srcloc !7803
  tail call void asm sideeffect "isb", ""() #22, !dbg !7818, !srcloc !7807
  ret void, !dbg !7820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !7821 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %1, metadata !7824, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.value(metadata i32 0, metadata !7823, metadata !DIExpression()), !dbg !7826
  br label %2, !dbg !7827

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7823, metadata !DIExpression()), !dbg !7826
  tail call fastcc void @NVIC_DisableIRQ.133(i32 noundef %3) #21, !dbg !7829
  %4 = add nuw nsw i32 %3, 1, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %4, metadata !7823, metadata !DIExpression()), !dbg !7826
  %5 = icmp eq i32 %4, 64, !dbg !7833
  br i1 %5, label %6, label %2, !dbg !7827, !llvm.loop !7834

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7836
  ret void, !dbg !7837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.133(i32 noundef %0) unnamed_addr #2 !dbg !7838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7840, metadata !DIExpression()), !dbg !7841
  %2 = and i32 %0, 31, !dbg !7842
  %3 = shl nuw i32 1, %2, !dbg !7843
  %4 = lshr i32 %0, 5, !dbg !7844
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7845
  store volatile i32 %3, i32* %5, align 4, !dbg !7846
  ret void, !dbg !7847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !7848 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %1, metadata !7851, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 0, metadata !7850, metadata !DIExpression()), !dbg !7853
  br label %2, !dbg !7854

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7850, metadata !DIExpression()), !dbg !7853
  tail call fastcc void @NVIC_EnableIRQ.134(i32 noundef %3) #21, !dbg !7856
  %4 = add nuw nsw i32 %3, 1, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %4, metadata !7850, metadata !DIExpression()), !dbg !7853
  %5 = icmp eq i32 %4, 64, !dbg !7860
  br i1 %5, label %6, label %2, !dbg !7854, !llvm.loop !7861

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7863
  ret void, !dbg !7864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.134(i32 noundef %0) unnamed_addr #2 !dbg !7865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7867, metadata !DIExpression()), !dbg !7868
  %2 = and i32 %0, 31, !dbg !7869
  %3 = shl nuw i32 1, %2, !dbg !7870
  %4 = lshr i32 %0, 5, !dbg !7871
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7872
  store volatile i32 %3, i32* %5, align 4, !dbg !7873
  ret void, !dbg !7874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !7875 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7877, metadata !DIExpression()), !dbg !7878
  br label %1, !dbg !7879

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7877, metadata !DIExpression()), !dbg !7878
  tail call fastcc void @NVIC_ClearPendingIRQ.135(i32 noundef %2) #21, !dbg !7881
  %3 = add nuw nsw i32 %2, 1, !dbg !7884
  call void @llvm.dbg.value(metadata i32 %3, metadata !7877, metadata !DIExpression()), !dbg !7878
  %4 = icmp eq i32 %3, 64, !dbg !7885
  br i1 %4, label %5, label %1, !dbg !7879, !llvm.loop !7886

5:                                                ; preds = %1
  ret void, !dbg !7888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.135(i32 noundef %0) unnamed_addr #2 !dbg !7889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7891, metadata !DIExpression()), !dbg !7892
  %2 = and i32 %0, 31, !dbg !7893
  %3 = shl nuw i32 1, %2, !dbg !7894
  %4 = lshr i32 %0, 5, !dbg !7895
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7896
  store volatile i32 %3, i32* %5, align 4, !dbg !7897
  ret void, !dbg !7898
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7901, metadata !DIExpression()), !dbg !7902
  %2 = icmp ugt i32 %0, 63, !dbg !7903
  br i1 %2, label %4, label %3, !dbg !7903

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !7905
  br label %4, !dbg !7906

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7902
  ret i32 %5, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !7908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7910, metadata !DIExpression()), !dbg !7911
  %2 = and i32 %0, 511, !dbg !7912
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !7913
  tail call void asm sideeffect "dsb", ""() #22, !dbg !7914, !srcloc !7917
  ret void, !dbg !7918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !7919 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7920
  %2 = and i32 %1, 511, !dbg !7921
  ret i32 %2, !dbg !7922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !7923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7927, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %1, metadata !7928, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !8026
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !8027
  call void @llvm.dbg.value(metadata i32 %3, metadata !8024, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !8026
  call void @llvm.dbg.value(metadata i32 0, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32* undef, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 0, metadata !8023, metadata !DIExpression()), !dbg !8026
  %4 = icmp ult i32 %3, 4, !dbg !8028
  br i1 %4, label %20, label %5, !dbg !8031

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8032
  %7 = bitcast i8* %6 to i32**, !dbg !8032
  %8 = load i32*, i32** %7, align 4, !dbg !8032
  call void @llvm.dbg.value(metadata i32* %8, metadata !8025, metadata !DIExpression()), !dbg !8026
  %9 = lshr i32 %3, 2, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %9, metadata !8024, metadata !DIExpression()), !dbg !8026
  br label %10, !dbg !8031

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %12, metadata !8023, metadata !DIExpression()), !dbg !8026
  %13 = load i32, i32* %11, align 4, !dbg !8034
  %14 = icmp eq i32 %13, -1, !dbg !8037
  br i1 %14, label %16, label %15, !dbg !8038

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !8039
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.136, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !8039
  unreachable, !dbg !8039

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !8044
  call void @llvm.dbg.value(metadata i32 %17, metadata !8023, metadata !DIExpression()), !dbg !8026
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !8045
  call void @llvm.dbg.value(metadata i32* %18, metadata !8025, metadata !DIExpression()), !dbg !8026
  %19 = icmp eq i32 %17, %9, !dbg !8028
  br i1 %19, label %20, label %10, !dbg !8031, !llvm.loop !8046

20:                                               ; preds = %16, %2
  ret void, !dbg !8048
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !8049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 0, metadata !8052, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %0, metadata !8052, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !8053
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !8052, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8053
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !8052, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8053
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !8054
  call void @llvm.dbg.value(metadata i32 %2, metadata !8052, metadata !DIExpression()), !dbg !8053
  ret i32 %2, !dbg !8055
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8056 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8060, metadata !DIExpression()), !dbg !8062
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8063
  %3 = or i32 %2, 512, !dbg !8063
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8063
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8066
  call void @llvm.dbg.value(metadata i32 %4, metadata !8061, metadata !DIExpression()), !dbg !8062
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !8067

5:                                                ; preds = %1
  br label %7, !dbg !8068

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !8072
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.136, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !8072
  unreachable, !dbg !8072

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !8077
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  br label %10, !dbg !8078

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8079
  %12 = and i32 %11, 8192, !dbg !8080
  %13 = icmp eq i32 %12, 0, !dbg !8081
  br i1 %13, label %10, label %14, !dbg !8078, !llvm.loop !8082

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8084
  %16 = and i32 %15, 256, !dbg !8085
  %17 = icmp eq i32 %16, 0, !dbg !8086
  br i1 %17, label %14, label %18, !dbg !8087, !llvm.loop !8088

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !8077
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !8061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  %20 = and i32 %19, 16, !dbg !8077
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !8061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  call void @llvm.dbg.value(metadata i32 undef, metadata !8061, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  %21 = or i32 %4, %20, !dbg !8090
  %22 = or i32 %21, 8, !dbg !8090
  call void @llvm.dbg.value(metadata i32 %22, metadata !8061, metadata !DIExpression()), !dbg !8062
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8091
  ret void, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8093 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !8095, metadata !DIExpression()), !dbg !8097
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8098
  call void @llvm.dbg.value(metadata i32 %2, metadata !8096, metadata !DIExpression()), !dbg !8097
  %3 = and i32 %2, -268435477, !dbg !8099
  call void @llvm.dbg.value(metadata i32 %3, metadata !8096, metadata !DIExpression()), !dbg !8097
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8100
  br label %4, !dbg !8101

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8102
  %6 = and i32 %5, 2, !dbg !8103
  %7 = icmp eq i32 %6, 0, !dbg !8101
  br i1 %7, label %8, label %4, !dbg !8101, !llvm.loop !8104

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8106
  call void @llvm.dbg.value(metadata i32 %9, metadata !8096, metadata !DIExpression()), !dbg !8097
  %10 = and i32 %9, -9, !dbg !8107
  call void @llvm.dbg.value(metadata i32 %10, metadata !8096, metadata !DIExpression()), !dbg !8097
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8108
  br label %11, !dbg !8109

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8110
  %13 = and i32 %12, 8, !dbg !8111
  %14 = icmp eq i32 %13, 0, !dbg !8109
  br i1 %14, label %15, label %11, !dbg !8109, !llvm.loop !8112

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8114, !range !2742
  %17 = icmp eq i8 %16, 0, !dbg !8116
  br i1 %17, label %18, label %21, !dbg !8117

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8118
  %20 = and i32 %19, -513, !dbg !8118
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8118
  br label %21, !dbg !8122

21:                                               ; preds = %18, %15
  ret void, !dbg !8123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8124 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8128, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.value(metadata i32 0, metadata !8129, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.value(metadata i32 0, metadata !8130, metadata !DIExpression()), !dbg !8131
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8132
  call void @llvm.dbg.value(metadata i32 %2, metadata !8129, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.value(metadata i32 %2, metadata !8129, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !8131
  %3 = icmp eq i16 %0, 1, !dbg !8133
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !8135
  %5 = or i32 %2, %4, !dbg !8135
  call void @llvm.dbg.value(metadata i32 %5, metadata !8129, metadata !DIExpression()), !dbg !8131
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8136
  br label %6, !dbg !8137

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8138
  %8 = and i32 %7, 2, !dbg !8139
  %9 = icmp eq i32 %8, 0, !dbg !8140
  br i1 %9, label %6, label %10, !dbg !8137, !llvm.loop !8141

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8143
  %12 = and i32 %11, 1, !dbg !8144
  %13 = icmp eq i32 %12, 0, !dbg !8145
  br i1 %13, label %14, label %10, !dbg !8145, !llvm.loop !8146

14:                                               ; preds = %10
  ret i32 0, !dbg !8148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8149 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8151, metadata !DIExpression()), !dbg !8152
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !8153
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !8154
  ret void, !dbg !8155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !8156 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8160, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8161, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8162, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8 0, metadata !8164, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 0, metadata !8163, metadata !DIExpression()), !dbg !8165
  %3 = icmp eq i32 %1, 0, !dbg !8166
  br i1 %3, label %16, label %4, !dbg !8169

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !8164, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %6, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %7, metadata !8162, metadata !DIExpression()), !dbg !8165
  %8 = shl i32 %6, 8, !dbg !8170
  %9 = and i32 %7, 255, !dbg !8172
  %10 = or i32 %8, %9, !dbg !8173
  call void @llvm.dbg.value(metadata i32 %10, metadata !8163, metadata !DIExpression()), !dbg !8165
  %11 = lshr i32 %7, 8, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %11, metadata !8162, metadata !DIExpression()), !dbg !8165
  %12 = add nuw nsw i8 %5, 1, !dbg !8175
  call void @llvm.dbg.value(metadata i8 %12, metadata !8164, metadata !DIExpression()), !dbg !8165
  %13 = icmp ult i32 %7, 256, !dbg !8166
  br i1 %13, label %14, label %4, !dbg !8169, !llvm.loop !8176

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !8178
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8180
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8181
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8182
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8183
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8184
  br label %16, !dbg !8185

16:                                               ; preds = %2, %14
  ret void, !dbg !8186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !8187 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8191, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i8 %1, metadata !8192, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i32 %2, metadata !8193, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i32 %3, metadata !8194, metadata !DIExpression()), !dbg !8197
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !8198
  call void @llvm.dbg.value(metadata i32 %5, metadata !8196, metadata !DIExpression()), !dbg !8197
  %6 = icmp eq i32 %3, 3, !dbg !8199
  br i1 %6, label %7, label %11, !dbg !8201

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !8202
  %9 = zext i8 %1 to i32, !dbg !8204
  %10 = or i32 %8, %9, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %10, metadata !8195, metadata !DIExpression()), !dbg !8197
  br label %16, !dbg !8206

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !8207
  %13 = zext i8 %1 to i32, !dbg !8209
  %14 = or i32 %12, %13, !dbg !8210
  call void @llvm.dbg.value(metadata i32 %14, metadata !8195, metadata !DIExpression()), !dbg !8197
  %15 = lshr i32 %5, 24, !dbg !8211
  call void @llvm.dbg.value(metadata i32 %15, metadata !8196, metadata !DIExpression()), !dbg !8197
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !8212
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !8197
  call void @llvm.dbg.value(metadata i32 %18, metadata !8196, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i32 %17, metadata !8195, metadata !DIExpression()), !dbg !8197
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8213
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8214
  %19 = add i32 %3, 1, !dbg !8215
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8216
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8217
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8218
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8219
  ret void, !dbg !8220
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !8221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8225, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 %1, metadata !8226, metadata !DIExpression()), !dbg !8227
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8228
  %4 = and i32 %3, -256, !dbg !8229
  %5 = and i32 %0, 255, !dbg !8230
  %6 = or i32 %4, %5, !dbg !8231
  ret i32 %6, !dbg !8232
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !8233 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8238, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 %1, metadata !8239, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i8** %2, metadata !8240, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32* %3, metadata !8241, metadata !DIExpression()), !dbg !8253
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !8254
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !8242, metadata !DIExpression()), !dbg !8255
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %7, metadata !8251, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !8250, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8253
  %8 = lshr i32 %7, 24, !dbg !8257
  call void @llvm.dbg.value(metadata i32 %8, metadata !8251, metadata !DIExpression()), !dbg !8253
  %9 = trunc i32 %8 to i8, !dbg !8258
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !8259
  store i8 %9, i8* %6, align 4, !dbg !8260
  call void @llvm.dbg.value(metadata i32 1, metadata !8252, metadata !DIExpression()), !dbg !8253
  %11 = load i8*, i8** %2, align 4, !dbg !8261
  br label %12, !dbg !8265

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !8261
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8252, metadata !DIExpression()), !dbg !8253
  %15 = load i8, i8* %13, align 1, !dbg !8266
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !8267
  store i8 %15, i8* %16, align 1, !dbg !8268
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8269
  store i8* %17, i8** %2, align 4, !dbg !8269
  %18 = add nuw nsw i32 %14, 1, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %18, metadata !8252, metadata !DIExpression()), !dbg !8253
  %19 = icmp eq i32 %18, 4, !dbg !8271
  br i1 %19, label %20, label %12, !dbg !8265, !llvm.loop !8272

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !8274
  %22 = load i32, i32* %21, align 4, !dbg !8274
  call void @llvm.dbg.value(metadata i32 %22, metadata !8251, metadata !DIExpression()), !dbg !8253
  %23 = load i32, i32* %3, align 4, !dbg !8275
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !8276
  %25 = shl i32 %7, 8, !dbg !8277
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !8250, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8253
  %26 = and i32 %0, 255, !dbg !8278
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !8250, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8253
  %27 = or i32 %25, %26, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %27, metadata !8250, metadata !DIExpression()), !dbg !8253
  store i32 %24, i32* %3, align 4, !dbg !8280
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8281
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8282
  ret i32 %27, !dbg !8283
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !8284 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8288, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i8* %1, metadata !8289, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %2, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i8* %1, metadata !8292, metadata !DIExpression()), !dbg !8294
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !8295
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8295
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !8293, metadata !DIExpression()), !dbg !8296
  %6 = add i32 %0, -1610348544, !dbg !8297
  call void @llvm.dbg.value(metadata i32 %6, metadata !8288, metadata !DIExpression()), !dbg !8294
  %7 = ptrtoint i8* %1 to i32, !dbg !8298
  %8 = and i32 %7, 3, !dbg !8300
  %9 = icmp eq i32 %8, 0, !dbg !8301
  br i1 %9, label %10, label %23, !dbg !8302

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %2, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %6, metadata !8288, metadata !DIExpression()), !dbg !8294
  %11 = icmp sgt i32 %2, 0, !dbg !8303
  br i1 %11, label %12, label %72, !dbg !8307

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %14, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %15, metadata !8288, metadata !DIExpression()), !dbg !8294
  %16 = bitcast i8* %13 to i32*, !dbg !8308
  %17 = load i32, i32* %16, align 4, !dbg !8308
  %18 = inttoptr i32 %15 to i32*, !dbg !8308
  store volatile i32 %17, i32* %18, align 4, !dbg !8308
  %19 = add i32 %15, 4, !dbg !8310
  call void @llvm.dbg.value(metadata i32 %19, metadata !8288, metadata !DIExpression()), !dbg !8294
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !8311
  call void @llvm.dbg.value(metadata i8* %20, metadata !8292, metadata !DIExpression()), !dbg !8294
  %21 = add nsw i32 %14, -4, !dbg !8312
  call void @llvm.dbg.value(metadata i32 %21, metadata !8290, metadata !DIExpression()), !dbg !8294
  %22 = icmp ugt i32 %14, 4, !dbg !8303
  br i1 %22, label %12, label %72, !dbg !8307, !llvm.loop !8313

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !8315
  %25 = icmp eq i32 %24, 0, !dbg !8317
  call void @llvm.dbg.value(metadata i8* %1, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i8* %1, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %2, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %2, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %6, metadata !8288, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %6, metadata !8288, metadata !DIExpression()), !dbg !8294
  %26 = icmp sgt i32 %2, 0, !dbg !8318
  br i1 %25, label %31, label %27, !dbg !8319

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !8320

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !8320

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8323

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !8323

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %39, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %40, metadata !8288, metadata !DIExpression()), !dbg !8294
  %41 = bitcast i8* %38 to i16*, !dbg !8326
  %42 = load i16, i16* %41, align 2, !dbg !8326
  store i16 %42, i16* %34, align 4, !dbg !8329
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8330
  %44 = bitcast i8* %43 to i16*, !dbg !8330
  %45 = load i16, i16* %44, align 2, !dbg !8331
  store i16 %45, i16* %35, align 2, !dbg !8332
  %46 = load i32, i32* %36, align 4, !dbg !8333
  %47 = inttoptr i32 %40 to i32*, !dbg !8333
  store volatile i32 %46, i32* %47, align 4, !dbg !8333
  %48 = add i32 %40, 4, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %48, metadata !8288, metadata !DIExpression()), !dbg !8294
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8335
  call void @llvm.dbg.value(metadata i8* %49, metadata !8292, metadata !DIExpression()), !dbg !8294
  %50 = add nsw i32 %39, -4, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %50, metadata !8290, metadata !DIExpression()), !dbg !8294
  %51 = icmp ugt i32 %39, 4, !dbg !8337
  br i1 %51, label %37, label %72, !dbg !8323, !llvm.loop !8338

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %54, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %55, metadata !8288, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i8* %53, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 0, metadata !8291, metadata !DIExpression()), !dbg !8294
  br label %56, !dbg !8340

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %58, metadata !8291, metadata !DIExpression()), !dbg !8294
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8344
  call void @llvm.dbg.value(metadata i8* %59, metadata !8292, metadata !DIExpression()), !dbg !8294
  %60 = load i8, i8* %57, align 1, !dbg !8347
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8348
  store i8 %60, i8* %61, align 1, !dbg !8349
  %62 = add nuw nsw i32 %58, 1, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %62, metadata !8291, metadata !DIExpression()), !dbg !8294
  %63 = icmp ult i32 %58, 3, !dbg !8351
  %64 = icmp ult i32 %62, %54, !dbg !8352
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8352
  br i1 %65, label %56, label %66, !dbg !8340, !llvm.loop !8353

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8355
  %68 = inttoptr i32 %55 to i32*, !dbg !8355
  store volatile i32 %67, i32* %68, align 4, !dbg !8355
  %69 = add i32 %55, 4, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %69, metadata !8288, metadata !DIExpression()), !dbg !8294
  %70 = add nsw i32 %54, -4, !dbg !8357
  call void @llvm.dbg.value(metadata i8* %59, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %70, metadata !8290, metadata !DIExpression()), !dbg !8294
  %71 = icmp sgt i32 %54, 4, !dbg !8358
  br i1 %71, label %52, label %72, !dbg !8320, !llvm.loop !8359

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8361
  ret void, !dbg !8361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8362 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8366, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i8* %1, metadata !8367, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i8* %2, metadata !8368, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i16 %3, metadata !8369, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i16 %4, metadata !8370, metadata !DIExpression()), !dbg !8376
  %7 = bitcast i32* %6 to i8*, !dbg !8377
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8377
  call void @llvm.dbg.value(metadata i8* %7, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 0, metadata !8372, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8374, metadata !DIExpression()), !dbg !8376
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 0, metadata !8372, metadata !DIExpression()), !dbg !8376
  %9 = icmp eq i16 %3, 0, !dbg !8378
  br i1 %9, label %33, label %10, !dbg !8381

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %12, metadata !8372, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 0, metadata !8373, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 0, metadata !8371, metadata !DIExpression()), !dbg !8376
  store i32 0, i32* %6, align 4, !dbg !8382
  call void @llvm.dbg.value(metadata i32 0, metadata !8373, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %12, metadata !8372, metadata !DIExpression()), !dbg !8376
  %13 = icmp ult i32 %12, %8, !dbg !8385
  br i1 %13, label %14, label %27, !dbg !8387

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8373, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %16, metadata !8372, metadata !DIExpression()), !dbg !8376
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8388
  %18 = load i8, i8* %17, align 1, !dbg !8388
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !8390
  store i8 %18, i8* %19, align 1, !dbg !8391
  %20 = add nuw nsw i32 %16, 1, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %20, metadata !8372, metadata !DIExpression()), !dbg !8376
  %21 = add nuw nsw i32 %15, 1, !dbg !8393
  call void @llvm.dbg.value(metadata i32 %21, metadata !8373, metadata !DIExpression()), !dbg !8376
  %22 = icmp ult i32 %20, %8, !dbg !8385
  %23 = icmp ult i32 %15, 3, !dbg !8394
  %24 = select i1 %22, i1 %23, i1 false, !dbg !8394
  br i1 %24, label %14, label %25, !dbg !8387, !llvm.loop !8395

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !8397
  br label %27, !dbg !8397

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !8397
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !8398
  call void @llvm.dbg.value(metadata i32 %28, metadata !8371, metadata !DIExpression()), !dbg !8376
  %30 = bitcast i8* %11 to i32*, !dbg !8397
  store volatile i32 %28, i32* %30, align 4, !dbg !8397
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !8399
  call void @llvm.dbg.value(metadata i8* %31, metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %29, metadata !8372, metadata !DIExpression()), !dbg !8376
  %32 = icmp ult i32 %29, %8, !dbg !8378
  br i1 %32, label %10, label %33, !dbg !8381, !llvm.loop !8400

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8402
  %34 = zext i16 %4 to i32, !dbg !8403
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8404
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8405
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8406
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !8374, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8376
  call void @llvm.dbg.value(metadata i8* %2, metadata !8368, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 0, metadata !8372, metadata !DIExpression()), !dbg !8376
  %35 = icmp eq i16 %4, 0, !dbg !8407
  br i1 %35, label %47, label %36, !dbg !8410

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !8411
  call void @llvm.dbg.value(metadata i8* %37, metadata !8374, metadata !DIExpression()), !dbg !8376
  br label %38, !dbg !8410

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !8368, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i8* %40, metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %41, metadata !8372, metadata !DIExpression()), !dbg !8376
  %42 = load volatile i8, i8* %40, align 1, !dbg !8412
  store i8 %42, i8* %39, align 1, !dbg !8414
  %43 = add nuw nsw i32 %41, 1, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %43, metadata !8372, metadata !DIExpression()), !dbg !8376
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8416
  call void @llvm.dbg.value(metadata i8* %44, metadata !8368, metadata !DIExpression()), !dbg !8376
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8417
  call void @llvm.dbg.value(metadata i8* %45, metadata !8374, metadata !DIExpression()), !dbg !8376
  %46 = icmp eq i32 %43, %34, !dbg !8407
  br i1 %46, label %47, label %38, !dbg !8410, !llvm.loop !8418

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8420
  ret void, !dbg !8420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8421 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8425, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i8* %1, metadata !8426, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 0, metadata !8427, metadata !DIExpression()), !dbg !8433
  %4 = icmp eq i8* %1, null, !dbg !8434
  br i1 %4, label %67, label %5, !dbg !8436

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %27, metadata !8428, metadata !DIExpression()), !dbg !8433
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !8438

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !8433
  call void @llvm.dbg.value(metadata i32 %9, metadata !8427, metadata !DIExpression()), !dbg !8433
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8439
  %11 = load i8, i8* %10, align 1, !dbg !8439
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !8440

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !8441

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8444
  %15 = and i32 %14, -2, !dbg !8444
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8444
  br label %41, !dbg !8448

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8449
  %18 = and i32 %17, -2, !dbg !8449
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8449
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !8452

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8454
  %22 = or i32 %21, 1, !dbg !8454
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8454
  br label %41, !dbg !8458

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8459
  %25 = or i32 %24, 1, !dbg !8459
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8459
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !8437
  %28 = icmp eq i32 %27, 0, !dbg !8462
  br i1 %7, label %29, label %35, !dbg !8465

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8466
  br i1 %28, label %33, label %31, !dbg !8469

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !8466
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8466
  br label %67, !dbg !8466

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !8466
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8466
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8470
  br i1 %28, label %39, label %37, !dbg !8473

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !8470
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8470
  br label %67, !dbg !8470

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !8470
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8470
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !8474
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !8475
  %44 = load i8, i8* %43, align 1, !dbg !8475
  %45 = icmp eq i8 %44, 5, !dbg !8476
  br i1 %45, label %46, label %56, !dbg !8477

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8478
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !8479

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !8429, metadata !DIExpression(DW_OP_deref)), !dbg !8480
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8481
  %50 = load i8, i8* %3, align 1, !dbg !8483
  call void @llvm.dbg.value(metadata i8 %50, metadata !8429, metadata !DIExpression()), !dbg !8480
  %51 = load i8, i8* %48, align 1, !dbg !8484
  %52 = and i8 %51, %50, !dbg !8485
  %53 = icmp eq i8 %52, 0, !dbg !8486
  br i1 %53, label %54, label %49, !dbg !8486, !llvm.loop !8487

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8489
  %55 = add i32 %9, 1, !dbg !8490
  br label %61, !dbg !8491

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !8492
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !8494
  %59 = load i8, i8* %58, align 1, !dbg !8494
  %60 = zext i8 %59 to i16, !dbg !8494
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !8495
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !8490
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !8496
  %64 = load i8, i8* %63, align 1, !dbg !8496
  %65 = zext i8 %64 to i32, !dbg !8496
  %66 = add i32 %42, %65, !dbg !8497
  call void @llvm.dbg.value(metadata i32 %66, metadata !8427, metadata !DIExpression()), !dbg !8433
  br label %8, !dbg !8438, !llvm.loop !8498

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !8500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8501 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8505, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i8* %1, metadata !8506, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i8 %2, metadata !8507, metadata !DIExpression()), !dbg !8508
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !8507, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8511 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8515, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i8* %1, metadata !8516, metadata !DIExpression()), !dbg !8517
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !8520 {
  ret i32 78, !dbg !8524
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !8525 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8529
  %2 = and i32 %1, 7340032, !dbg !8531
  %3 = icmp ult i32 %2, 2097153, !dbg !8532
  %4 = select i1 %3, i32 30, i32 18, !dbg !8533
  ret i32 %4, !dbg !8534
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !8535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8539, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i32 0, metadata !8540, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i32 0, metadata !8540, metadata !DIExpression()), !dbg !8541
  br label %2, !dbg !8542

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8540, metadata !DIExpression()), !dbg !8541
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8544
  store i8 -1, i8* %4, align 1, !dbg !8547
  %5 = add nuw nsw i32 %3, 1, !dbg !8548
  call void @llvm.dbg.value(metadata i32 %5, metadata !8540, metadata !DIExpression()), !dbg !8541
  %6 = icmp eq i32 %5, 8, !dbg !8549
  br i1 %6, label %7, label %2, !dbg !8542, !llvm.loop !8550

7:                                                ; preds = %2
  ret i1 true, !dbg !8552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !8553 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !8555, metadata !DIExpression()), !dbg !8556
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8557
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !8558
  %3 = load i8, i8* %2, align 1, !dbg !8558
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8559
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8560
  %5 = ptrtoint i8* %4 to i32, !dbg !8561
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8562
  %6 = bitcast i8* %4 to i32*, !dbg !8563
  %7 = load volatile i32, i32* %6, align 4, !dbg !8564
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8565
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8566
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8567
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8568
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8569
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8570
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8571
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8572
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8573
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8574
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8575
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8576
  %14 = or i32 %13, 986880, !dbg !8577
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8578
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8579
  %16 = or i32 %15, 252645135, !dbg !8580
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8581
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8582
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8583
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !8584
  %20 = load i8, i8* %19, align 1, !dbg !8584
  %21 = zext i8 %20 to i32, !dbg !8585
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !8586
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8587
  ret void, !dbg !8588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !8589 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8590
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8591
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8592
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8593
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8594
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8595
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8596
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8597
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8598
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8599
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8600
  %7 = and i32 %6, -252645136, !dbg !8601
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8602
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8603
  %9 = zext i8 %8 to i32, !dbg !8603
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !8604
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8605
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8606
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8608
  %13 = inttoptr i32 %12 to i32*, !dbg !8609
  %14 = load volatile i32, i32* %13, align 4, !dbg !8610
  %15 = icmp eq i32 %11, %14, !dbg !8611
  br i1 %15, label %17, label %16, !dbg !8612

16:                                               ; preds = %0, %16
  br label %16, !dbg !8613, !llvm.loop !8614

17:                                               ; preds = %0
  ret void, !dbg !8616
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8617 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8618
  %2 = icmp eq i32 %1, 0, !dbg !8620
  br i1 %2, label %3, label %5, !dbg !8621

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8622
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8624
  br label %5, !dbg !8625

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8626
  %7 = icmp eq i32 %6, 0, !dbg !8628
  br i1 %7, label %8, label %10, !dbg !8629

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8630
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8632
  br label %10, !dbg !8633

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8634
  %12 = and i32 %11, -256, !dbg !8635
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8636
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8637
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !8638
  ret void, !dbg !8639
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8640 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8641
  %2 = icmp eq i32 %1, 0, !dbg !8643
  br i1 %2, label %4, label %3, !dbg !8644

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8645
  br label %4, !dbg !8647

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8648
  %6 = icmp eq i32 %5, 0, !dbg !8650
  br i1 %6, label %8, label %7, !dbg !8651

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8652
  br label %8, !dbg !8654

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !8655
  ret void, !dbg !8656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !8657 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8659, metadata !DIExpression()), !dbg !8660
  ret i32 0, !dbg !8661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !8662 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8664, metadata !DIExpression()), !dbg !8665
  ret i32 0, !dbg !8666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8669, metadata !DIExpression()), !dbg !8670
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !8671
  ret void, !dbg !8672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !8673 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8676
  call void @llvm.dbg.value(metadata i32 %1, metadata !8675, metadata !DIExpression()), !dbg !8677
  ret i32 %1, !dbg !8678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8681, metadata !DIExpression()), !dbg !8682
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8683
  ret void, !dbg !8684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !8685 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8687, metadata !DIExpression()), !dbg !8688
  ret i32 0, !dbg !8689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !8690 {
  ret i32 0, !dbg !8693
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !8694 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8698, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i8* %1, metadata !8699, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i32 %2, metadata !8700, metadata !DIExpression()), !dbg !8713
  %4 = ptrtoint i8* %0 to i32, !dbg !8714
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !8715
  %7 = and i32 %6, 3, !dbg !8715
  %8 = icmp eq i32 %7, 0, !dbg !8715
  br i1 %8, label %9, label %26, !dbg !8715

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !8716
  call void @llvm.dbg.value(metadata i32* %10, metadata !8702, metadata !DIExpression()), !dbg !8717
  %11 = bitcast i8* %1 to i32*, !dbg !8718
  call void @llvm.dbg.value(metadata i32* %11, metadata !8705, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i32 0, metadata !8701, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i32 0, metadata !8701, metadata !DIExpression()), !dbg !8713
  %12 = icmp ult i32 %2, 4, !dbg !8719
  br i1 %12, label %65, label %13, !dbg !8722

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !8722

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8701, metadata !DIExpression()), !dbg !8713
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !8723
  %18 = load i32, i32* %17, align 4, !dbg !8723
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !8726
  %20 = load i32, i32* %19, align 4, !dbg !8726
  %21 = icmp eq i32 %18, %20, !dbg !8727
  %22 = add nuw nsw i32 %16, 1, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %22, metadata !8701, metadata !DIExpression()), !dbg !8713
  %23 = xor i1 %21, true, !dbg !8729
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !8729
  call void @llvm.dbg.value(metadata i32 %22, metadata !8701, metadata !DIExpression()), !dbg !8713
  br i1 %25, label %59, label %15, !dbg !8729, !llvm.loop !8730

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !8732
  %28 = icmp eq i32 %27, 0, !dbg !8732
  br i1 %28, label %31, label %29, !dbg !8732

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !8701, metadata !DIExpression()), !dbg !8713
  %30 = icmp eq i32 %2, 0, !dbg !8733
  br i1 %30, label %65, label %48, !dbg !8736

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !8737
  call void @llvm.dbg.value(metadata i16* %32, metadata !8706, metadata !DIExpression()), !dbg !8738
  %33 = bitcast i8* %1 to i16*, !dbg !8739
  call void @llvm.dbg.value(metadata i16* %33, metadata !8709, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 0, metadata !8701, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i32 0, metadata !8701, metadata !DIExpression()), !dbg !8713
  %34 = icmp ult i32 %2, 2, !dbg !8740
  br i1 %34, label %65, label %35, !dbg !8743

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !8743

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8701, metadata !DIExpression()), !dbg !8713
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !8744
  %40 = load i16, i16* %39, align 2, !dbg !8744
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !8747
  %42 = load i16, i16* %41, align 2, !dbg !8747
  %43 = icmp eq i16 %40, %42, !dbg !8748
  %44 = add nuw nsw i32 %38, 1, !dbg !8749
  call void @llvm.dbg.value(metadata i32 %44, metadata !8701, metadata !DIExpression()), !dbg !8713
  %45 = xor i1 %43, true, !dbg !8750
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %44, metadata !8701, metadata !DIExpression()), !dbg !8713
  br i1 %47, label %61, label %37, !dbg !8750, !llvm.loop !8751

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8701, metadata !DIExpression()), !dbg !8713
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !8753
  %51 = load i8, i8* %50, align 1, !dbg !8753
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !8756
  %53 = load i8, i8* %52, align 1, !dbg !8756
  %54 = icmp eq i8 %51, %53, !dbg !8757
  %55 = add nuw i32 %49, 1, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %55, metadata !8701, metadata !DIExpression()), !dbg !8713
  %56 = xor i1 %54, true, !dbg !8759
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !8759
  call void @llvm.dbg.value(metadata i32 %55, metadata !8701, metadata !DIExpression()), !dbg !8713
  br i1 %58, label %63, label %48, !dbg !8759, !llvm.loop !8760

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !8762
  br label %65, !dbg !8762

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !8762
  br label %65, !dbg !8762

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !8762
  br label %65, !dbg !8762

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !8713
  ret i1 %66, !dbg !8762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !8763 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8767, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %2, metadata !8769, metadata !DIExpression()), !dbg !8778
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8779
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !8770, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %0, metadata !8771, metadata !DIExpression()), !dbg !8778
  %7 = bitcast i8** %4 to i8*, !dbg !8780
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8780
  call void @llvm.dbg.value(metadata i8* %1, metadata !8772, metadata !DIExpression()), !dbg !8778
  store i8* %1, i8** %4, align 4, !dbg !8781
  call void @llvm.dbg.value(metadata i32 0, metadata !8773, metadata !DIExpression()), !dbg !8778
  %8 = bitcast i32* %5 to i8*, !dbg !8782
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8782
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8783
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !8784
  store i8 1, i8* %9, align 4, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %2, metadata !8769, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %0, metadata !8771, metadata !DIExpression()), !dbg !8778
  %10 = icmp eq i32 %2, 0, !dbg !8786
  br i1 %10, label %73, label %11, !dbg !8787

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !8788
  call void @llvm.dbg.value(metadata i32 %12, metadata !8771, metadata !DIExpression()), !dbg !8778
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !8787

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8769, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %20, metadata !8771, metadata !DIExpression()), !dbg !8778
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8789
  %22 = shl i32 %21, 1, !dbg !8791
  %23 = add i32 %22, -1, !dbg !8792
  %24 = and i32 %23, %20, !dbg !8793
  %25 = sub i32 %22, %24, !dbg !8794
  %26 = icmp ugt i32 %19, %25, !dbg !8795
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !8796
  call void @llvm.dbg.value(metadata i32 %27, metadata !8775, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %27, metadata !8774, metadata !DIExpression()), !dbg !8778
  store i32 %27, i32* %5, align 4, !dbg !8797
  %28 = load i32, i32* %13, align 4, !dbg !8798
  %29 = and i32 %28, 16, !dbg !8800
  %30 = icmp eq i32 %29, 0, !dbg !8800
  br i1 %30, label %31, label %32, !dbg !8801

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !8802
  br label %32, !dbg !8804

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !8805
  %34 = icmp eq i8 %33, 4, !dbg !8807
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8808
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !8808
  %37 = load i8, i8* %36, align 1, !dbg !8808
  %38 = zext i8 %37 to i32, !dbg !8808
  br i1 %34, label %39, label %43, !dbg !8809

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !8772, metadata !DIExpression(DW_OP_deref)), !dbg !8778
  call void @llvm.dbg.value(metadata i32* %5, metadata !8774, metadata !DIExpression(DW_OP_deref)), !dbg !8778
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %40, metadata !8773, metadata !DIExpression()), !dbg !8778
  %41 = load i8*, i8** %4, align 4, !dbg !8812
  call void @llvm.dbg.value(metadata i8* %41, metadata !8772, metadata !DIExpression()), !dbg !8778
  %42 = load i32, i32* %5, align 4, !dbg !8813
  call void @llvm.dbg.value(metadata i32 %42, metadata !8774, metadata !DIExpression()), !dbg !8778
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !8814
  br label %47, !dbg !8815

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %44, metadata !8773, metadata !DIExpression()), !dbg !8778
  %45 = load i8*, i8** %4, align 4, !dbg !8818
  call void @llvm.dbg.value(metadata i8* %45, metadata !8772, metadata !DIExpression()), !dbg !8778
  %46 = load i32, i32* %5, align 4, !dbg !8819
  call void @llvm.dbg.value(metadata i32 %46, metadata !8774, metadata !DIExpression()), !dbg !8778
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !8820
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !8808
  call void @llvm.dbg.value(metadata i32 %48, metadata !8773, metadata !DIExpression()), !dbg !8778
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !8821
  call void @llvm.dbg.value(metadata i32 %49, metadata !8777, metadata !DIExpression()), !dbg !8778
  %50 = load i8, i8* %14, align 1, !dbg !8822
  %51 = zext i8 %50 to i32, !dbg !8823
  %52 = add i32 %27, 1, !dbg !8824
  %53 = add i32 %52, %51, !dbg !8825
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8826
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8827
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8828
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8829
  %54 = load i16, i16* %16, align 2, !dbg !8830
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !8831
  %55 = load i16, i16* %16, align 2, !dbg !8832
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !8833
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !8834
  br label %56, !dbg !8835

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8836
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !8838
  %59 = load i8, i8* %58, align 1, !dbg !8838
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !8839
  call void @llvm.dbg.value(metadata i32 %60, metadata !8776, metadata !DIExpression()), !dbg !8778
  %61 = load i8*, i8** %17, align 4, !dbg !8840
  %62 = load i8, i8* %61, align 1, !dbg !8842
  %63 = zext i8 %62 to i32, !dbg !8842
  %64 = and i32 %60, %63, !dbg !8843
  %65 = icmp eq i32 %64, 0, !dbg !8844
  br i1 %65, label %66, label %56, !dbg !8845, !llvm.loop !8846

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8848
  %67 = load i32, i32* %5, align 4, !dbg !8849
  call void @llvm.dbg.value(metadata i32 %67, metadata !8774, metadata !DIExpression()), !dbg !8778
  %68 = load i8*, i8** %4, align 4, !dbg !8850
  call void @llvm.dbg.value(metadata i8* %68, metadata !8772, metadata !DIExpression()), !dbg !8778
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !8850
  call void @llvm.dbg.value(metadata i8* %69, metadata !8772, metadata !DIExpression()), !dbg !8778
  store i8* %69, i8** %4, align 4, !dbg !8850
  %70 = sub i32 %19, %27, !dbg !8851
  call void @llvm.dbg.value(metadata i32 %70, metadata !8769, metadata !DIExpression()), !dbg !8778
  %71 = add i32 %27, %20, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %71, metadata !8771, metadata !DIExpression()), !dbg !8778
  %72 = icmp eq i32 %70, 0, !dbg !8786
  br i1 %72, label %73, label %18, !dbg !8787, !llvm.loop !8853

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !8855
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8856
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8857
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8857
  ret void, !dbg !8857
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8858 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8862, metadata !DIExpression()), !dbg !8864
  br label %2, !dbg !8865

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !8866
  call void @llvm.dbg.value(metadata i32 %3, metadata !8863, metadata !DIExpression()), !dbg !8864
  %4 = icmp eq i32 %3, 0, !dbg !8868
  br i1 %4, label %5, label %2, !dbg !8869, !llvm.loop !8870

5:                                                ; preds = %2
  ret void, !dbg !8872
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8875, metadata !DIExpression()), !dbg !8876
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8877
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !8877
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !8878
  %5 = load i8, i8* %4, align 1, !dbg !8878
  %6 = zext i8 %5 to i32, !dbg !8879
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !8880
  ret void, !dbg !8881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8882 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8885
  call void @llvm.dbg.value(metadata i32 %1, metadata !8884, metadata !DIExpression()), !dbg !8886
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8887
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !8890 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8894, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i8 %1, metadata !8895, metadata !DIExpression()), !dbg !8898
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8899
  call void @llvm.dbg.value(metadata i32 %3, metadata !8896, metadata !DIExpression()), !dbg !8898
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8900
  %5 = load i16, i16* %4, align 2, !dbg !8900
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !8901
  %6 = zext i8 %1 to i32, !dbg !8902
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8903
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8904
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8905
  %7 = load i16, i16* %4, align 2, !dbg !8906
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !8907
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8908
  %9 = lshr i32 %8, 8, !dbg !8909
  %10 = and i32 %9, 255, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %10, metadata !8897, metadata !DIExpression()), !dbg !8898
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !8911
  ret i32 %10, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8913 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %1, metadata !8915, metadata !DIExpression()), !dbg !8917
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8918
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8919
  %3 = and i32 %2, -513, !dbg !8919
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8919
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8922
  ret void, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8926, metadata !DIExpression()), !dbg !8928
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8929
  call void @llvm.dbg.value(metadata i32 %2, metadata !8927, metadata !DIExpression()), !dbg !8928
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8930
  br i1 %3, label %4, label %5, !dbg !8932

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8933
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8935
  ret void, !dbg !8936

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8937
  tail call void @Flash_ReturnReady() #21, !dbg !8939
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !8939
  unreachable, !dbg !8939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8943 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8945, metadata !DIExpression()), !dbg !8950
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %1, metadata !8947, metadata !DIExpression()), !dbg !8950
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !8952
  %3 = icmp eq i32 %2, 0, !dbg !8954
  br i1 %3, label %4, label %125, !dbg !8955

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8956
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8957
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8945, metadata !DIExpression()), !dbg !8950
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8959
  %7 = load i32, i32* %6, align 4, !dbg !8959
  %8 = xor i32 %7, -1, !dbg !8959
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8959
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !8959
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !8959
  %12 = icmp eq i32 %8, %11, !dbg !8959
  br i1 %12, label %14, label %13, !dbg !8962

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8963
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !8963
  unreachable, !dbg !8963

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8965
  %16 = icmp ult i32 %15, 16, !dbg !8967
  br i1 %16, label %17, label %34, !dbg !8968

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8969
  %19 = load i8, i8* %18, align 4, !dbg !8969
  %20 = icmp eq i8 %19, 1, !dbg !8970
  br i1 %20, label %21, label %34, !dbg !8971

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8972

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8974
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8976
  %27 = load i8, i8* %26, align 1, !dbg !8976
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %28, metadata !8946, metadata !DIExpression()), !dbg !8950
  %29 = load i8*, i8** %23, align 4, !dbg !8978
  %30 = load i8, i8* %29, align 1, !dbg !8980
  %31 = zext i8 %30 to i32, !dbg !8980
  %32 = and i32 %28, %31, !dbg !8981
  %33 = icmp eq i32 %32, 0, !dbg !8982
  br i1 %33, label %34, label %24, !dbg !8983, !llvm.loop !8984

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8986, !range !2742
  %36 = icmp ne i8 %35, 0, !dbg !8986
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !8988
  br i1 %39, label %116, label %40, !dbg !8988

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !8989
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8989
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !8991
  %44 = load i8, i8* %43, align 1, !dbg !8991
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %45, metadata !8946, metadata !DIExpression()), !dbg !8950
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !8993
  %47 = load i8*, i8** %46, align 4, !dbg !8993
  %48 = load i8, i8* %47, align 1, !dbg !8995
  %49 = zext i8 %48 to i32, !dbg !8995
  %50 = and i32 %45, %49, !dbg !8996
  %51 = icmp eq i32 %50, 0, !dbg !8997
  br i1 %51, label %85, label %52, !dbg !8998

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !8999
  br label %53, !dbg !9001

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9002
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !9004
  %56 = load i8, i8* %55, align 1, !dbg !9004
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %57, metadata !8946, metadata !DIExpression()), !dbg !8950
  %58 = load i8*, i8** %46, align 4, !dbg !9006
  %59 = load i8, i8* %58, align 1, !dbg !9008
  %60 = zext i8 %59 to i32, !dbg !9008
  %61 = and i32 %57, %60, !dbg !9009
  %62 = icmp eq i32 %61, 0, !dbg !9010
  br i1 %62, label %63, label %53, !dbg !9011, !llvm.loop !9012

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9014
  %65 = load i32, i32* %64, align 4, !dbg !9014
  %66 = and i32 %65, 4, !dbg !9016
  %67 = icmp eq i32 %66, 0, !dbg !9016
  br i1 %67, label %84, label %68, !dbg !9017

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !9018
  %70 = load i8, i8* %69, align 4, !dbg !9018
  %71 = icmp eq i8 %70, 2, !dbg !9019
  br i1 %71, label %72, label %84, !dbg !9020

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9021
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9023
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9024
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9025
  %74 = load i16, i16* %73, align 2, !dbg !9025
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !9026
  %75 = load i16, i16* %73, align 2, !dbg !9027
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !9028
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9029
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9030
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9031
  %76 = load i16, i16* %73, align 2, !dbg !9032
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !9033
  %77 = load i16, i16* %73, align 2, !dbg !9034
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !9035
  br label %78, !dbg !9036

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9037
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9039
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9040
  %79 = load i16, i16* %73, align 2, !dbg !9041
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !9042
  %80 = load i16, i16* %73, align 2, !dbg !9043
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !9044
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9045
  call void @llvm.dbg.value(metadata i32 %81, metadata !8946, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8950
  %82 = and i32 %81, 256, !dbg !9046
  %83 = icmp eq i32 %82, 0, !dbg !9046
  br i1 %83, label %84, label %78, !dbg !9046, !llvm.loop !9047

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9049
  br label %116, !dbg !9050

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9051
  %87 = load i32, i32* %86, align 4, !dbg !9051
  %88 = and i32 %87, 2, !dbg !9054
  %89 = icmp eq i32 %88, 0, !dbg !9054
  br i1 %89, label %115, label %90, !dbg !9055

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !9056
  %92 = load %struct.anon.10*, %struct.anon.10** %91, align 4, !dbg !9056
  %93 = icmp eq %struct.anon.10* %92, null, !dbg !9057
  br i1 %93, label %94, label %115, !dbg !9058

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9059
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !9061
  %97 = load i8, i8* %96, align 1, !dbg !9061
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !9062
  call void @llvm.dbg.value(metadata i32 %98, metadata !8946, metadata !DIExpression()), !dbg !8950
  %99 = load i8*, i8** %46, align 4, !dbg !9063
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !9065
  %101 = load i8, i8* %100, align 1, !dbg !9065
  %102 = zext i8 %101 to i32, !dbg !9065
  %103 = and i32 %98, %102, !dbg !9066
  %104 = icmp eq i32 %103, 0, !dbg !9067
  br i1 %104, label %105, label %115, !dbg !9068

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !9069
  %107 = load i8, i8* %106, align 1, !dbg !9069
  %108 = zext i8 %107 to i32, !dbg !9069
  %109 = and i32 %98, %108, !dbg !9070
  %110 = icmp eq i32 %109, 0, !dbg !9071
  br i1 %110, label %111, label %115, !dbg !9072

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9073
  %113 = load i16, i16* %112, align 2, !dbg !9073
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !9075
  %114 = load i16, i16* %112, align 2, !dbg !9076
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !9077
  br label %115, !dbg !9078

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9079
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9080
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !9081
  %118 = sub i32 0, %117, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %118, metadata !8948, metadata !DIExpression()), !dbg !9082
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9083
  %120 = icmp ult i32 %119, %118, !dbg !9085
  br i1 %120, label %121, label %122, !dbg !9086

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9087
  br label %122, !dbg !9089

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9090
  %124 = and i32 %123, -513, !dbg !9090
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9090
  br label %125, !dbg !9093

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8950
  ret void, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9097, metadata !DIExpression()), !dbg !9101
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9102
  %3 = icmp eq i32 %2, -1, !dbg !9104
  br i1 %3, label %12, label %4, !dbg !9105

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9099, metadata !DIExpression()), !dbg !9101
  %5 = sub i32 0, %2, !dbg !9106
  call void @llvm.dbg.value(metadata i32 %5, metadata !9100, metadata !DIExpression()), !dbg !9101
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9108
  %7 = load i8, i8* %6, align 4, !dbg !9108
  %8 = zext i8 %7 to i32, !dbg !9110
  %9 = icmp ugt i32 %8, %5, !dbg !9111
  br i1 %9, label %10, label %12, !dbg !9112

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !9113
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !9115
  br label %12, !dbg !9116

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9117
  call void @llvm.dbg.value(metadata i32 %13, metadata !9098, metadata !DIExpression()), !dbg !9101
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9118
  %15 = load i16, i16* %14, align 2, !dbg !9118
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9119
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !9119
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !9120
  %19 = load i8, i8* %18, align 1, !dbg !9120
  %20 = zext i8 %19 to i32, !dbg !9121
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !9122
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !9123
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9125 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9128
  call void @llvm.dbg.value(metadata i32 %1, metadata !9127, metadata !DIExpression()), !dbg !9129
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9130
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9131
  %3 = and i32 %2, -513, !dbg !9131
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9131
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9134
  ret void, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9140, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.value(metadata i8 %2, metadata !9142, metadata !DIExpression()), !dbg !9144
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %4, metadata !9143, metadata !DIExpression()), !dbg !9144
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9146
  %6 = load i16, i16* %5, align 2, !dbg !9146
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !9147
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9148
  %7 = zext i8 %2 to i32, !dbg !9149
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9150
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9151
  %8 = load i16, i16* %5, align 2, !dbg !9152
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !9153
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9154
  ret void, !dbg !9155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !9156 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9161
  call void @llvm.dbg.value(metadata i32 %1, metadata !9160, metadata !DIExpression()), !dbg !9162
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !9163
  br i1 %2, label %4, label %3, !dbg !9165

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !9166
  br label %4, !dbg !9168

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9169
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9169
  ret i32 %5, !dbg !9170
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !9171 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9178
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9175, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8 0, metadata !9177, metadata !DIExpression()), !dbg !9179
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9180
  %3 = load i32, i32* %2, align 4, !dbg !9180
  %4 = xor i32 %3, -1, !dbg !9180
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9180
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !9180
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !9180
  %8 = icmp eq i32 %4, %7, !dbg !9180
  br i1 %8, label %10, label %9, !dbg !9183

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9184
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9184
  unreachable, !dbg !9184

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9186
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9187
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9187
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !9188
  %14 = load i8, i8* %13, align 1, !dbg !9188
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %15, metadata !9176, metadata !DIExpression()), !dbg !9179
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9190
  %17 = load i8*, i8** %16, align 4, !dbg !9190
  %18 = load i8, i8* %17, align 1, !dbg !9192
  %19 = zext i8 %18 to i32, !dbg !9192
  %20 = and i32 %15, %19, !dbg !9193
  %21 = icmp eq i32 %20, 0, !dbg !9194
  br i1 %21, label %22, label %23, !dbg !9195

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9196
  call void @llvm.dbg.value(metadata i8 1, metadata !9177, metadata !DIExpression()), !dbg !9179
  br label %23, !dbg !9198

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !9177, metadata !DIExpression()), !dbg !9179
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9199
  ret i1 %21, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9203, metadata !DIExpression()), !dbg !9204
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9205, !range !2742
  %2 = icmp eq i8 %1, 0, !dbg !9205
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9205
  %4 = icmp eq i8 %3, 0, !dbg !9205
  %5 = select i1 %2, i1 true, i1 %4, !dbg !9205
  br i1 %5, label %6, label %7, !dbg !9205

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9208
  tail call void @Flash_ReturnReady() #21, !dbg !9210
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9210
  unreachable, !dbg !9210

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9214
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !9203, metadata !DIExpression()), !dbg !9204
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !9215
  ret void, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9219, metadata !DIExpression()), !dbg !9221
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %2, metadata !9220, metadata !DIExpression()), !dbg !9221
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9223
  %4 = load i16, i16* %3, align 2, !dbg !9223
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9224
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !9224
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !9225
  %8 = load i8, i8* %7, align 1, !dbg !9225
  %9 = zext i8 %8 to i32, !dbg !9226
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !9227
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9228
  %11 = load i8, i8* %10, align 4, !dbg !9228
  %12 = icmp eq i8 %11, 0, !dbg !9230
  br i1 %12, label %14, label %13, !dbg !9231

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !9232
  br label %14, !dbg !9234

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9235
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !9236
  ret void, !dbg !9237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !9238 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9241
  call void @llvm.dbg.value(metadata i32 %1, metadata !9240, metadata !DIExpression()), !dbg !9242
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9243
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9244
  ret void, !dbg !9245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9246 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9250
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9248, metadata !DIExpression()), !dbg !9251
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9252, !range !2742
  %3 = icmp ne i8 %2, 0, !dbg !9252
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9252
  %5 = icmp eq i8 %4, 0, !dbg !9252
  %6 = select i1 %3, i1 %5, i1 false, !dbg !9252
  br i1 %6, label %8, label %7, !dbg !9252

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9255
  tail call void @Flash_ReturnReady() #21, !dbg !9257
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9257
  unreachable, !dbg !9257

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9261
  %10 = load i32, i32* %9, align 4, !dbg !9261
  %11 = xor i32 %10, -1, !dbg !9261
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9261
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !9261
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !9261
  %15 = icmp eq i32 %11, %14, !dbg !9261
  br i1 %15, label %17, label %16, !dbg !9264

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !9265
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9265
  unreachable, !dbg !9265

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9267
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !9268

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !9269
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !9271
  %23 = load i8, i8* %22, align 1, !dbg !9271
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %24, metadata !9249, metadata !DIExpression()), !dbg !9251
  %25 = load i8*, i8** %19, align 4, !dbg !9273
  %26 = load i8, i8* %25, align 1, !dbg !9275
  %27 = zext i8 %26 to i32, !dbg !9275
  %28 = and i32 %24, %27, !dbg !9276
  %29 = icmp eq i32 %28, 0, !dbg !9277
  br i1 %29, label %30, label %20, !dbg !9278, !llvm.loop !9279

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9281
  ret void, !dbg !9282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !9283 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9285, metadata !DIExpression()), !dbg !9286
  ret void, !dbg !9287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9288 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9311, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9312, metadata !DIExpression()), !dbg !9314
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9315
  %4 = load i8*, i8** %3, align 4, !dbg !9315
  call void @llvm.dbg.value(metadata i8* %4, metadata !9313, metadata !DIExpression()), !dbg !9314
  store i8 1, i8* %4, align 1, !dbg !9316
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9317
  store i8 2, i8* %5, align 1, !dbg !9318
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9319
  store i8 8, i8* %6, align 1, !dbg !9320
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9321
  store i8 4, i8* %7, align 1, !dbg !9322
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9323
  store i8 60, i8* %8, align 1, !dbg !9324
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9325
  store i8 -128, i8* %9, align 1, !dbg !9326
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !9327
  store i8 96, i8* %10, align 1, !dbg !9328
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9329
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9329
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !9330
  store i8 43, i8* %13, align 1, !dbg !9331
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9332
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !9333
  store i8 43, i8* %15, align 1, !dbg !9334
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9335
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !9336
  store i8 47, i8* %17, align 1, !dbg !9337
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9338
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !9339
  store i8 5, i8* %19, align 1, !dbg !9340
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9341
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !9342
  store i8 1, i8* %21, align 1, !dbg !9343
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9344
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !9345
  store i8 43, i8* %23, align 1, !dbg !9346
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9347
  store i8 22, i8* %24, align 4, !dbg !9348
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !9349
  %26 = load i8, i8* %25, align 1, !dbg !9349
  %27 = icmp eq i8 %26, 32, !dbg !9351
  br i1 %27, label %28, label %49, !dbg !9352

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !9353
  %30 = load i8, i8* %29, align 1, !dbg !9353
  %31 = icmp eq i8 %30, 24, !dbg !9354
  br i1 %31, label %32, label %41, !dbg !9355

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9356
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !9358
  store i8 117, i8* %34, align 1, !dbg !9359
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9360
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !9361
  store i8 122, i8* %36, align 1, !dbg !9362
  %37 = load i8, i8* %25, align 1, !dbg !9363
  %38 = icmp eq i8 %37, 32, !dbg !9365
  br i1 %38, label %39, label %49, !dbg !9366

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !9368
  br label %41, !dbg !9368

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !9368
  %43 = icmp eq i8 %42, 22, !dbg !9369
  br i1 %43, label %44, label %49, !dbg !9370

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9371
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !9373
  store i8 117, i8* %46, align 1, !dbg !9374
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9375
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !9376
  store i8 122, i8* %48, align 1, !dbg !9377
  br label %49, !dbg !9378

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9379
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !9380
  ret i32 0, !dbg !9381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !9382 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9384, metadata !DIExpression()), !dbg !9388
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9389
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9385, metadata !DIExpression()), !dbg !9388
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9390
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9391
  %5 = load i8, i8* %4, align 1, !dbg !9393
  %6 = icmp eq i8 %5, -62, !dbg !9394
  br i1 %6, label %7, label %15, !dbg !9395

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !9396
  %9 = load i8, i8* %8, align 1, !dbg !9396
  %10 = icmp eq i8 %9, 32, !dbg !9397
  br i1 %10, label %11, label %15, !dbg !9398

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !9399
  %13 = load i8, i8* %12, align 1, !dbg !9399
  %14 = icmp eq i8 %13, 22, !dbg !9400
  br i1 %14, label %48, label %15, !dbg !9401

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9402
  %17 = bitcast i8* %16 to i16*, !dbg !9402
  %18 = load i16, i16* %17, align 2, !dbg !9402
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9403
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !9403
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9403
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !9404
  %23 = load i8, i8* %22, align 1, !dbg !9404
  %24 = zext i8 %23 to i32, !dbg !9405
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !9406
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9407
  %25 = load i16, i16* %17, align 2, !dbg !9408
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9409
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !9410
  call void @llvm.dbg.value(metadata i8* %2, metadata !9387, metadata !DIExpression(DW_OP_deref)), !dbg !9388
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9411
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9412
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !9413
  %30 = load i8, i8* %29, align 1, !dbg !9413
  %31 = zext i8 %30 to i32, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %31, metadata !9386, metadata !DIExpression()), !dbg !9388
  %32 = shl nuw nsw i32 %31, 8, !dbg !9415
  %33 = load i8, i8* %2, align 1, !dbg !9416
  call void @llvm.dbg.value(metadata i8 %33, metadata !9387, metadata !DIExpression()), !dbg !9388
  %34 = zext i8 %33 to i32, !dbg !9416
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9417
  %36 = bitcast i8* %35 to i8**, !dbg !9417
  %37 = load i8*, i8** %36, align 4, !dbg !9417
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !9418
  %39 = load i8, i8* %38, align 1, !dbg !9418
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !9419
  %41 = load i8, i8* %40, align 1, !dbg !9419
  %42 = or i8 %41, %39, !dbg !9420
  %43 = zext i8 %42 to i32, !dbg !9420
  %44 = xor i32 %43, -1, !dbg !9421
  %45 = and i32 %44, %34, !dbg !9422
  %46 = or i32 %45, %32, !dbg !9423
  call void @llvm.dbg.value(metadata i32 %46, metadata !9386, metadata !DIExpression()), !dbg !9388
  %47 = load i16, i16* %17, align 2, !dbg !9424
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !9425
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9426
  br label %48, !dbg !9427

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9428
  ret i32 0, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9429 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9431, metadata !DIExpression()), !dbg !9433
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9434
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !9435

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !9436
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9438
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !9439
  call void @llvm.dbg.value(metadata i8* %2, metadata !9432, metadata !DIExpression(DW_OP_deref)), !dbg !9433
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9440
  %10 = load i8, i8* %2, align 1, !dbg !9441
  call void @llvm.dbg.value(metadata i8 %10, metadata !9432, metadata !DIExpression()), !dbg !9433
  %11 = load i8*, i8** %5, align 4, !dbg !9442
  %12 = load i8, i8* %11, align 1, !dbg !9443
  %13 = and i8 %12, %10, !dbg !9444
  %14 = icmp eq i8 %13, 0, !dbg !9445
  br i1 %14, label %15, label %6, !dbg !9446, !llvm.loop !9447

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9449
  ret void, !dbg !9449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9450 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9452, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9453, metadata !DIExpression()), !dbg !9455
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9456
  %4 = load i8*, i8** %3, align 4, !dbg !9456
  call void @llvm.dbg.value(metadata i8* %4, metadata !9454, metadata !DIExpression()), !dbg !9455
  store i8 1, i8* %4, align 1, !dbg !9457
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9458
  store i8 2, i8* %5, align 1, !dbg !9459
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9460
  store i8 -128, i8* %6, align 1, !dbg !9461
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9462
  store i8 -128, i8* %7, align 1, !dbg !9463
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9464
  store i8 60, i8* %8, align 1, !dbg !9465
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9466
  store i8 -128, i8* %9, align 1, !dbg !9467
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9468
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9468
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !9469
  store i8 -97, i8* %12, align 1, !dbg !9470
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9471
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !9472
  store i8 53, i8* %14, align 1, !dbg !9473
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9474
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !9475
  store i8 53, i8* %16, align 1, !dbg !9476
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9477
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !9478
  store i8 5, i8* %18, align 1, !dbg !9479
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9480
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !9481
  store i8 1, i8* %20, align 1, !dbg !9482
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9483
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !9484
  store i8 117, i8* %22, align 1, !dbg !9485
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9486
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !9487
  store i8 122, i8* %24, align 1, !dbg !9488
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9489
  store i8 22, i8* %25, align 4, !dbg !9490
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9491
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !9492
  ret i32 0, !dbg !9493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !9494 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9496, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9497, metadata !DIExpression()), !dbg !9498
  ret i32 0, !dbg !9499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9500 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9502, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9503, metadata !DIExpression()), !dbg !9504
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !9505
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !9506
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !9507
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !9508
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !9509
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !9510
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !9511
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !9512
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !9513
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !9514
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !9515
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !9516
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !9517
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !9518
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !9519
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !9520
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !9521
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !9522
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !9523
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !9524
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !9525
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !9526
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !9527
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !9528
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !9529
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !9530
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !9531
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !9532
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !9533
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !9534
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !9535
  %19 = icmp ugt i32 %18, 16777216, !dbg !9537
  %20 = select i1 %19, i8 4, i8 3, !dbg !9538
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !9539
  store i8 %20, i8* %21, align 1, !dbg !9541
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9542
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9542
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !9543
  store i8 0, i8* %24, align 1, !dbg !9544
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9545
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !9546
  store i8 -81, i8* %26, align 1, !dbg !9547
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9548
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !9549
  store i8 -97, i8* %28, align 1, !dbg !9550
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9551
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !9552
  store i8 2, i8* %30, align 1, !dbg !9553
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9554
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !9555
  store i8 32, i8* %32, align 1, !dbg !9556
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9557
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !9558
  store i8 82, i8* %34, align 1, !dbg !9559
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9560
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !9561
  store i8 -40, i8* %36, align 1, !dbg !9562
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9563
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !9564
  store i8 -80, i8* %38, align 1, !dbg !9565
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9566
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !9567
  store i8 48, i8* %40, align 1, !dbg !9568
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9569
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !9570
  store i8 6, i8* %42, align 1, !dbg !9571
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9572
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !9573
  store i8 -71, i8* %44, align 1, !dbg !9574
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9575
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !9576
  store i8 -85, i8* %46, align 1, !dbg !9577
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9578
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !9579
  store i8 5, i8* %48, align 1, !dbg !9580
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !9581
  store i16 0, i16* %49, align 4, !dbg !9582
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !9583
  store %struct.anon.10* null, %struct.anon.10** %50, align 4, !dbg !9584
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !9585
  store %struct.anon.10* null, %struct.anon.10** %51, align 4, !dbg !9586
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !9587
  store i8 0, i8* %52, align 4, !dbg !9588
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9589
  store i8 5, i8* %53, align 4, !dbg !9590
  ret i32 0, !dbg !9591
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !9592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i8* %1, metadata !9595, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i8* %1, metadata !9596, metadata !DIExpression()), !dbg !9612
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9613
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9609, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 0, metadata !9610, metadata !DIExpression()), !dbg !9612
  %4 = bitcast i8* %1 to i32*, !dbg !9614
  store i32 0, i32* %4, align 4, !dbg !9615
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !9610, metadata !DIExpression()), !dbg !9612
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9616
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !9617
  %9 = load i32, i32* %8, align 4, !dbg !9617
  %10 = icmp eq i32 %9, 0, !dbg !9618
  br i1 %10, label %34, label %11, !dbg !9619

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !9619

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9610, metadata !DIExpression()), !dbg !9612
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !9620
  store i32 %17, i32* %19, align 4, !dbg !9622
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9623
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !9624
  %22 = load i32, i32* %21, align 4, !dbg !9624
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9625
  store i32 %22, i32* %23, align 4, !dbg !9626
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9627
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !9628
  %26 = load i32, i32* %25, align 4, !dbg !9628
  %27 = load i32, i32* %4, align 4, !dbg !9629
  %28 = add i32 %27, %26, !dbg !9629
  store i32 %28, i32* %4, align 4, !dbg !9629
  %29 = add i32 %18, 1, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %29, metadata !9610, metadata !DIExpression()), !dbg !9612
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9616
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !9617
  %32 = load i32, i32* %31, align 4, !dbg !9617
  %33 = icmp eq i32 %32, 0, !dbg !9618
  br i1 %33, label %34, label %16, !dbg !9619, !llvm.loop !9631

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !9612
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9633
  %37 = bitcast i8* %36 to i32*, !dbg !9633
  store i32 %35, i32* %37, align 4, !dbg !9634
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9635
  %39 = bitcast i8* %38 to i16*, !dbg !9635
  store i16 512, i16* %39, align 4, !dbg !9636
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9637
  br label %40, !dbg !9638

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %41, metadata !9611, metadata !DIExpression()), !dbg !9612
  %42 = icmp eq i32 %41, -121, !dbg !9641
  br i1 %42, label %40, label %43, !dbg !9642, !llvm.loop !9643

43:                                               ; preds = %40
  ret i32 0, !dbg !9645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9646 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9648, metadata !DIExpression()), !dbg !9652
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9653
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9649, metadata !DIExpression()), !dbg !9652
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9654
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9655

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %8, metadata !9651, metadata !DIExpression()), !dbg !9652
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9658, !range !2742
  %10 = icmp eq i8 %9, 0, !dbg !9658
  br i1 %10, label %12, label %11, !dbg !9660

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !9661
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9663
  br label %12, !dbg !9664

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9665
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !9666
  %15 = load i8, i8* %14, align 1, !dbg !9666
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %16, metadata !9650, metadata !DIExpression()), !dbg !9652
  %17 = load i8*, i8** %6, align 4, !dbg !9668
  %18 = load i8, i8* %17, align 1, !dbg !9670
  %19 = zext i8 %18 to i32, !dbg !9670
  %20 = and i32 %16, %19, !dbg !9671
  %21 = icmp eq i32 %20, 0, !dbg !9672
  br i1 %21, label %22, label %25, !dbg !9673

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9674
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9676
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9677
  %24 = bitcast i8* %23 to i8**, !dbg !9677
  store i8* null, i8** %24, align 4, !dbg !9678
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9679
  ret i32 0, !dbg !9680

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9681
  br label %7, !dbg !9655, !llvm.loop !9683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9685 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9687, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %1, metadata !9688, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 0, metadata !9689, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 1, metadata !9693, metadata !DIExpression()), !dbg !9701
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9702
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9694, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 0, metadata !9695, metadata !DIExpression()), !dbg !9701
  %4 = bitcast i8* %0 to i32*, !dbg !9703
  %5 = load i32, i32* %4, align 4, !dbg !9703
  %6 = xor i32 %5, -1, !dbg !9703
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9703
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9703
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9703
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9703
  %11 = icmp eq i32 %6, %10, !dbg !9703
  br i1 %11, label %13, label %12, !dbg !9706

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9707
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9707
  unreachable, !dbg !9707

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9709
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9710
  store i8 2, i8* %14, align 4, !dbg !9711
  call void @llvm.dbg.value(metadata i32 %19, metadata !9695, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %1, metadata !9688, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9701
  br label %15, !dbg !9712

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %16, metadata !9689, metadata !DIExpression()), !dbg !9701
  %17 = icmp eq i32 %16, -121, !dbg !9715
  br i1 %17, label %15, label %18, !dbg !9716, !llvm.loop !9717

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9719
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9720
  %21 = bitcast i8* %20 to i8**, !dbg !9720
  %22 = load i8*, i8** %21, align 4, !dbg !9720
  %23 = ptrtoint i8* %22 to i32, !dbg !9721
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !9722
  call void @llvm.dbg.value(metadata i32 %24, metadata !9690, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %24, metadata !9691, metadata !DIExpression()), !dbg !9701
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9723
  %26 = bitcast i8* %25 to i16*, !dbg !9723
  %27 = load i16, i16* %26, align 2, !dbg !9723
  %28 = zext i16 %27 to i32, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %28, metadata !9696, metadata !DIExpression()), !dbg !9725
  %29 = lshr i32 %24, 10, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %29, metadata !9699, metadata !DIExpression()), !dbg !9725
  %30 = and i32 %29, %28, !dbg !9727
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9729
  %33 = icmp eq i32 %32, 0, !dbg !9729
  call void @llvm.dbg.value(metadata i32 0, metadata !9700, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %29, metadata !9699, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %28, metadata !9696, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 1, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %24, metadata !9691, metadata !DIExpression()), !dbg !9701
  br i1 %33, label %34, label %51, !dbg !9729

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9700, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %36, metadata !9699, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %37, metadata !9696, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %38, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %39, metadata !9691, metadata !DIExpression()), !dbg !9701
  %40 = and i32 %37, 1, !dbg !9730
  %41 = icmp eq i32 %40, 0, !dbg !9730
  %42 = add i32 %35, 10, !dbg !9736
  %43 = shl nuw i32 1, %42, !dbg !9736
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9736
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %45, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %44, metadata !9691, metadata !DIExpression()), !dbg !9701
  %46 = lshr i32 %37, 1, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %46, metadata !9696, metadata !DIExpression()), !dbg !9725
  %47 = lshr i32 %36, 1, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %47, metadata !9699, metadata !DIExpression()), !dbg !9725
  %48 = add i32 %35, 1, !dbg !9739
  call void @llvm.dbg.value(metadata i32 %48, metadata !9700, metadata !DIExpression()), !dbg !9725
  %49 = and i32 %36, 2, !dbg !9740
  %50 = icmp eq i32 %49, 0, !dbg !9740
  br i1 %50, label %34, label %51, !dbg !9741, !llvm.loop !9742

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9744
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9745
  call void @llvm.dbg.value(metadata i32 %53, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %52, metadata !9691, metadata !DIExpression()), !dbg !9701
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9746

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9747
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9747
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9747
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9749
  br label %70, !dbg !9750

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9751
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9751
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9751
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9752
  br label %70, !dbg !9753

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9754
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9754
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9754
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9755
  br label %70, !dbg !9756

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !9757
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9757
  unreachable, !dbg !9757

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9761
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9761
  store i8 %73, i8* %74, align 1, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %53, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %52, metadata !9691, metadata !DIExpression()), !dbg !9701
  %75 = trunc i32 %19 to i8, !dbg !9762
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9762

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9763
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9763
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9763
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9765
  br label %91, !dbg !9766

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9767
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9767
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9767
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9768
  br label %91, !dbg !9769

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9770
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9770
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9770
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9771
  br label %91, !dbg !9772

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9773
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9773
  store i8 %94, i8* %95, align 1, !dbg !9773
  br label %96, !dbg !9774

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9692, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %53, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %16, metadata !9689, metadata !DIExpression()), !dbg !9701
  %97 = icmp eq i32 %53, 0, !dbg !9774
  br i1 %97, label %111, label %98, !dbg !9777

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9778
  call void @llvm.dbg.value(metadata i8* %99, metadata !9692, metadata !DIExpression()), !dbg !9701
  %100 = ptrtoint i8* %99 to i32, !dbg !9779
  call void @llvm.dbg.value(metadata i32 %100, metadata !9692, metadata !DIExpression()), !dbg !9701
  br label %101, !dbg !9777

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9693, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %103, metadata !9692, metadata !DIExpression()), !dbg !9701
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !9780
  br label %104, !dbg !9782

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %105, metadata !9689, metadata !DIExpression()), !dbg !9701
  %106 = icmp eq i32 %105, -121, !dbg !9785
  br i1 %106, label %104, label %107, !dbg !9787, !llvm.loop !9788

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %108, metadata !9693, metadata !DIExpression()), !dbg !9701
  %109 = add i32 %103, %52, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %109, metadata !9692, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %105, metadata !9689, metadata !DIExpression()), !dbg !9701
  %110 = icmp eq i32 %108, 0, !dbg !9774
  br i1 %110, label %111, label %101, !dbg !9777, !llvm.loop !9792

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9701
  store i8 0, i8* %14, align 4, !dbg !9794
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9795
  ret i32 %112, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9797 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9799, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %1, metadata !9800, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %2, metadata !9801, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %3, metadata !9802, metadata !DIExpression()), !dbg !9816
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9817
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9803, metadata !DIExpression()), !dbg !9816
  %8 = ptrtoint i8* %1 to i32, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %8, metadata !9805, metadata !DIExpression()), !dbg !9816
  %9 = bitcast i8** %5 to i8*, !dbg !9819
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9819
  call void @llvm.dbg.value(metadata i8* %2, metadata !9806, metadata !DIExpression()), !dbg !9816
  store i8* %2, i8** %5, align 4, !dbg !9820
  call void @llvm.dbg.value(metadata i32 0, metadata !9808, metadata !DIExpression()), !dbg !9816
  %10 = bitcast i32* %6 to i8*, !dbg !9821
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9821
  %11 = bitcast i8* %0 to i32*, !dbg !9822
  %12 = load i32, i32* %11, align 4, !dbg !9822
  %13 = xor i32 %12, -1, !dbg !9822
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9822
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9822
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9822
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !9822
  %18 = icmp eq i32 %13, %17, !dbg !9822
  br i1 %18, label %20, label %19, !dbg !9825

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !9826
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9826
  unreachable, !dbg !9826

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9828
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9829
  store i8 1, i8* %21, align 4, !dbg !9830
  br label %22, !dbg !9831

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %23, metadata !9808, metadata !DIExpression()), !dbg !9816
  %24 = icmp eq i32 %23, -121, !dbg !9834
  br i1 %24, label %22, label %25, !dbg !9835, !llvm.loop !9836

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9838
  br i1 %26, label %104, label %27, !dbg !9839

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9839

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !9840
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !9816
  call void @llvm.dbg.value(metadata i32 %38, metadata !9805, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %37, metadata !9802, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %36, metadata !9806, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %36, metadata !9807, metadata !DIExpression()), !dbg !9816
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9841
  %40 = shl i32 %39, 1, !dbg !9842
  %41 = add i32 %40, -1, !dbg !9843
  %42 = and i32 %41, %38, !dbg !9844
  %43 = sub i32 %40, %42, !dbg !9845
  %44 = icmp ugt i32 %37, %43, !dbg !9846
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %45, metadata !9809, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %45, metadata !9810, metadata !DIExpression()), !dbg !9816
  store i32 %45, i32* %6, align 4, !dbg !9848
  call void @llvm.dbg.value(metadata i8* %36, metadata !9806, metadata !DIExpression()), !dbg !9816
  %46 = ptrtoint i8* %36 to i32, !dbg !9849
  %47 = and i32 %46, 134217728, !dbg !9850
  %48 = icmp eq i32 %47, 0, !dbg !9850
  br i1 %48, label %58, label %49, !dbg !9851

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9812, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %45, metadata !9810, metadata !DIExpression()), !dbg !9816
  %50 = icmp eq i32 %45, 0, !dbg !9853
  br i1 %50, label %58, label %51, !dbg !9856

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9812, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8* %36, metadata !9806, metadata !DIExpression()), !dbg !9816
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9857
  %54 = load i8, i8* %53, align 1, !dbg !9857
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9859
  store i8 %54, i8* %55, align 1, !dbg !9860
  %56 = add nuw i32 %52, 1, !dbg !9861
  call void @llvm.dbg.value(metadata i32 %56, metadata !9812, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %45, metadata !9810, metadata !DIExpression()), !dbg !9816
  %57 = icmp eq i32 %56, %45, !dbg !9853
  br i1 %57, label %58, label %51, !dbg !9856, !llvm.loop !9862

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9864
  call void @llvm.dbg.value(metadata i8* %59, metadata !9807, metadata !DIExpression()), !dbg !9816
  %60 = load i32, i32* %29, align 4, !dbg !9865
  %61 = and i32 %60, 16, !dbg !9867
  %62 = icmp eq i32 %61, 0, !dbg !9867
  br i1 %62, label %63, label %64, !dbg !9868

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !9869
  br label %64, !dbg !9871

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9872
  %66 = icmp eq i8 %65, 4, !dbg !9874
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9875
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9875
  %69 = load i8, i8* %68, align 1, !dbg !9875
  %70 = zext i8 %69 to i32, !dbg !9875
  br i1 %66, label %71, label %75, !dbg !9876

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9806, metadata !DIExpression(DW_OP_deref)), !dbg !9816
  call void @llvm.dbg.value(metadata i32* %6, metadata !9810, metadata !DIExpression(DW_OP_deref)), !dbg !9816
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %72, metadata !9811, metadata !DIExpression()), !dbg !9816
  %73 = load i8*, i8** %5, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata i8* %73, metadata !9806, metadata !DIExpression()), !dbg !9816
  %74 = load i32, i32* %6, align 4, !dbg !9880
  call void @llvm.dbg.value(metadata i32 %74, metadata !9810, metadata !DIExpression()), !dbg !9816
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !9881
  br label %79, !dbg !9882

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %76, metadata !9811, metadata !DIExpression()), !dbg !9816
  %77 = load i8*, i8** %5, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata i8* %77, metadata !9806, metadata !DIExpression()), !dbg !9816
  %78 = load i32, i32* %6, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %78, metadata !9810, metadata !DIExpression()), !dbg !9816
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !9887
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9875
  call void @llvm.dbg.value(metadata i32 %80, metadata !9811, metadata !DIExpression()), !dbg !9816
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %81, metadata !9804, metadata !DIExpression()), !dbg !9816
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9889
  %82 = load i8, i8* %30, align 1, !dbg !9890
  %83 = zext i8 %82 to i32, !dbg !9891
  %84 = add i32 %45, 1, !dbg !9892
  %85 = add i32 %84, %83, !dbg !9893
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9894
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9895
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9896
  %86 = load i16, i16* %34, align 2, !dbg !9897
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !9898
  %87 = load i16, i16* %34, align 2, !dbg !9899
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !9900
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !9901
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !9902

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !9903
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %94, metadata !9808, metadata !DIExpression()), !dbg !9816
  %95 = icmp eq i32 %94, 0, !dbg !9906
  br i1 %95, label %92, label %96, !dbg !9907, !llvm.loop !9908

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !9910
  call void @llvm.dbg.value(metadata i32 %97, metadata !9810, metadata !DIExpression()), !dbg !9816
  %98 = load i8*, i8** %5, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata i8* %98, metadata !9806, metadata !DIExpression()), !dbg !9816
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !9911
  call void @llvm.dbg.value(metadata i8* %99, metadata !9806, metadata !DIExpression()), !dbg !9816
  store i8* %99, i8** %5, align 4, !dbg !9911
  %100 = sub i32 %37, %45, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %100, metadata !9802, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 undef, metadata !9805, metadata !DIExpression()), !dbg !9816
  %101 = icmp eq i32 %94, 1, !dbg !9913
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !9915
  br i1 %103, label %35, label %104, !dbg !9915, !llvm.loop !9916

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !9816
  call void @llvm.dbg.value(metadata i32 %105, metadata !9808, metadata !DIExpression()), !dbg !9816
  store i8 0, i8* %21, align 4, !dbg !9918
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9919
  %106 = icmp eq i32 %105, 1, !dbg !9920
  %107 = select i1 %106, i32 0, i32 %105, !dbg !9816
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9922
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9922
  ret i32 %107, !dbg !9922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !9923 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 undef, metadata !9926, metadata !DIExpression()), !dbg !9927
  ret i32 -12, !dbg !9928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9931, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 undef, metadata !9932, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 0, metadata !9934, metadata !DIExpression()), !dbg !9941
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9935, metadata !DIExpression()), !dbg !9941
  %4 = bitcast i8* %0 to i32*, !dbg !9943
  %5 = load i32, i32* %4, align 4, !dbg !9943
  %6 = xor i32 %5, -1, !dbg !9943
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9943
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9943
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9943
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9943
  %11 = icmp eq i32 %6, %10, !dbg !9943
  br i1 %11, label %13, label %12, !dbg !9946

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9947
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9947
  unreachable, !dbg !9947

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9949
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9949
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9949
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9950
  %18 = load i8, i8* %17, align 1, !dbg !9950
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !9951
  call void @llvm.dbg.value(metadata i32 %19, metadata !9936, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9941
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9952
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9953
  %22 = load i8, i8* %21, align 1, !dbg !9953
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !9954
  call void @llvm.dbg.value(metadata i32 %23, metadata !9937, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9941
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9955
  call void @llvm.dbg.value(metadata i32 %24, metadata !9934, metadata !DIExpression()), !dbg !9941
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9956
  %26 = bitcast i8* %25 to i8**, !dbg !9956
  %27 = load i8*, i8** %26, align 4, !dbg !9956
  %28 = load i8, i8* %27, align 1, !dbg !9957
  %29 = zext i8 %28 to i32, !dbg !9957
  %30 = and i32 %19, %29, !dbg !9958
  %31 = icmp eq i32 %30, 0, !dbg !9959
  br i1 %31, label %32, label %62, !dbg !9960

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9937, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9941
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9961
  %34 = load i8, i8* %33, align 1, !dbg !9961
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9962
  %36 = load i8, i8* %35, align 1, !dbg !9962
  %37 = or i8 %36, %34, !dbg !9963
  call void @llvm.dbg.value(metadata i8 %37, metadata !9938, metadata !DIExpression()), !dbg !9964
  %38 = zext i8 %37 to i32, !dbg !9965
  %39 = and i32 %23, %38, !dbg !9967
  %40 = icmp eq i32 %39, 0, !dbg !9968
  br i1 %40, label %41, label %46, !dbg !9969

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9970
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9971
  br i1 %45, label %51, label %46, !dbg !9971

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9972, !range !2742
  %48 = icmp eq i8 %47, 0, !dbg !9972
  br i1 %48, label %49, label %50, !dbg !9976

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !9977
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9977
  unreachable, !dbg !9977

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9979
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9980
  call void @llvm.dbg.value(metadata i32 -121, metadata !9933, metadata !DIExpression()), !dbg !9941
  br label %62, !dbg !9981

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9982
  %53 = bitcast i8* %52 to i32*, !dbg !9982
  %54 = load i32, i32* %53, align 4, !dbg !9982
  %55 = and i32 %54, 2, !dbg !9985
  %56 = icmp eq i32 %55, 0, !dbg !9985
  br i1 %56, label %63, label %57, !dbg !9986

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9987
  %59 = bitcast i8* %58 to i16*, !dbg !9987
  %60 = load i16, i16* %59, align 2, !dbg !9987
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !9989
  %61 = load i16, i16* %59, align 2, !dbg !9990
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !9991
  br label %63, !dbg !9992

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9933, metadata !DIExpression()), !dbg !9941
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9993
  br label %65, !dbg !9994

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9995
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9996
  call void @llvm.dbg.value(metadata i32 0, metadata !9933, metadata !DIExpression()), !dbg !9941
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9993
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %64, metadata !9933, metadata !DIExpression()), !dbg !9941
  br label %65, !dbg !10000

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9941
  call void @llvm.dbg.value(metadata i32 %66, metadata !9933, metadata !DIExpression()), !dbg !9941
  ret i32 %66, !dbg !10001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10002 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10004, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata i32 undef, metadata !10005, metadata !DIExpression()), !dbg !10009
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10006, metadata !DIExpression()), !dbg !10009
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10011
  call void @llvm.dbg.value(metadata i32 %4, metadata !10008, metadata !DIExpression()), !dbg !10009
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !10012
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !10013

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10014
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !10016
  %12 = load i8, i8* %11, align 1, !dbg !10016
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !10017
  call void @llvm.dbg.value(metadata i32 %13, metadata !10007, metadata !DIExpression()), !dbg !10009
  %14 = load i8*, i8** %8, align 4, !dbg !10018
  %15 = load i8, i8* %14, align 1, !dbg !10020
  %16 = zext i8 %15 to i32, !dbg !10020
  %17 = and i32 %13, %16, !dbg !10021
  %18 = icmp eq i32 %17, 0, !dbg !10022
  br i1 %18, label %19, label %9, !dbg !10023, !llvm.loop !10024

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !10026
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !10027
  ret i32 0, !dbg !10028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10031, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 undef, metadata !10032, metadata !DIExpression()), !dbg !10034
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10035
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10033, metadata !DIExpression()), !dbg !10034
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10036
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !10037
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10038
  ret i32 0, !dbg !10039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !10040 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !10042, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i8* undef, metadata !10043, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i32 undef, metadata !10044, metadata !DIExpression()), !dbg !10045
  ret i32 0, !dbg !10046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !10047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10049, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i32 %1, metadata !10050, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i8* undef, metadata !10051, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i8* %0, metadata !10052, metadata !DIExpression()), !dbg !10053
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !10054

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10052, metadata !DIExpression()), !dbg !10053
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !10055
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !10055
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !10055
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !10058
  br label %21, !dbg !10059

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !10060
  %11 = load i8, i8* %10, align 1, !dbg !10064
  %12 = icmp eq i8 %11, -62, !dbg !10065
  br i1 %12, label %13, label %21, !dbg !10066

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10067
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !10067
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !10067
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !10068
  %18 = load i32, i32* %17, align 4, !dbg !10068
  %19 = icmp eq i32 %18, 262144, !dbg !10069
  br i1 %19, label %22, label %21, !dbg !10070

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !10071
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !10071
  unreachable, !dbg !10071

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !10076

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !10053
  ret i32 %23, !dbg !10077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10080, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i8* %0, metadata !10081, metadata !DIExpression()), !dbg !10083
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10084
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !10084
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !10084
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !10086
  %6 = load i8, i8* %5, align 1, !dbg !10086
  %7 = icmp eq i8 %6, 0, !dbg !10087
  br i1 %7, label %19, label %8, !dbg !10088

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10089
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !10081, metadata !DIExpression()), !dbg !10083
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %10, metadata !10082, metadata !DIExpression()), !dbg !10083
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10092
  %12 = bitcast i8* %11 to i8**, !dbg !10092
  %13 = load i8*, i8** %12, align 4, !dbg !10092
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !10094
  %15 = load i8, i8* %14, align 1, !dbg !10094
  %16 = zext i8 %15 to i32, !dbg !10094
  %17 = and i32 %10, %16, !dbg !10095
  %18 = icmp eq i32 %17, 0, !dbg !10095
  br i1 %18, label %19, label %20, !dbg !10096

19:                                               ; preds = %8, %1
  br label %20, !dbg !10097

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !10083
  ret i32 %21, !dbg !10098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10103, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %1, metadata !10104, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i8 %2, metadata !10105, metadata !DIExpression()), !dbg !10111
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10112
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !10107, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 0, metadata !10108, metadata !DIExpression()), !dbg !10111
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10113
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !10113
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10113
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !10114
  %9 = load i8, i8* %8, align 1, !dbg !10114
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %10, metadata !10110, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10111
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10116, !range !2742
  %12 = icmp eq i8 %11, 0, !dbg !10116
  br i1 %12, label %18, label %13, !dbg !10118

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10119, !range !2742
  %15 = icmp eq i8 %14, 0, !dbg !10119
  br i1 %15, label %16, label %17, !dbg !10123

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !10124
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !10124
  unreachable, !dbg !10124

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !10126
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10127
  br label %42, !dbg !10128

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !10110, metadata !DIExpression()), !dbg !10111
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10129
  %20 = bitcast i8* %19 to i8**, !dbg !10129
  %21 = load i8*, i8** %20, align 4, !dbg !10129
  %22 = load i8, i8* %21, align 1, !dbg !10131
  %23 = zext i8 %22 to i32, !dbg !10131
  %24 = and i32 %10, %23, !dbg !10132
  %25 = icmp eq i32 %24, 0, !dbg !10133
  br i1 %25, label %26, label %42, !dbg !10134

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10135
  call void @llvm.dbg.value(metadata i32 %27, metadata !10106, metadata !DIExpression()), !dbg !10111
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10137
  %28 = inttoptr i32 %1 to i8*, !dbg !10138
  %29 = load volatile i8, i8* %28, align 1, !dbg !10139
  call void @llvm.dbg.value(metadata i8 %29, metadata !10109, metadata !DIExpression()), !dbg !10111
  %30 = icmp eq i8 %29, %2, !dbg !10140
  br i1 %30, label %39, label %31, !dbg !10142

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10108, metadata !DIExpression()), !dbg !10111
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !10143
  br i1 %32, label %33, label %38, !dbg !10146

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !10147
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !10149
  %36 = load volatile i8, i8* %28, align 1, !dbg !10150
  %37 = icmp eq i8 %36, %2, !dbg !10152
  br i1 %37, label %39, label %38, !dbg !10153

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !10108, metadata !DIExpression()), !dbg !10111
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10154
  br label %42, !dbg !10155

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10108, metadata !DIExpression()), !dbg !10111
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10154
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !10156
  %41 = icmp eq i32 %40, 0, !dbg !10159
  br i1 %41, label %42, label %44, !dbg !10160

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !10161

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !10111
  ret i32 %45, !dbg !10162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10163 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10167, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 %1, metadata !10168, metadata !DIExpression()), !dbg !10170
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !10171
  %4 = load i32, i32* %3, align 4, !dbg !10171
  %5 = and i32 %4, 16, !dbg !10173
  %6 = icmp eq i32 %5, 0, !dbg !10173
  br i1 %6, label %7, label %8, !dbg !10174

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !10175
  br label %8, !dbg !10177

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10178
  call void @llvm.dbg.value(metadata i32 %9, metadata !10169, metadata !DIExpression()), !dbg !10170
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !10179
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10180
  %11 = load i16, i16* %10, align 2, !dbg !10180
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10181
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !10181
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !10182
  %15 = load i8, i8* %14, align 1, !dbg !10182
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !10183
  %17 = load i8, i8* %16, align 1, !dbg !10183
  %18 = zext i8 %17 to i32, !dbg !10184
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !10185
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !10186
  ret void, !dbg !10187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10190, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10191, metadata !DIExpression()), !dbg !10193
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10194
  %4 = load i8, i8* %3, align 1, !dbg !10194
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !10195

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10196
  %7 = load i32, i32* %6, align 4, !dbg !10198
  %8 = or i32 %7, 4, !dbg !10198
  store i32 %8, i32* %6, align 4, !dbg !10198
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10199
  call void @llvm.dbg.value(metadata i32 0, metadata !10192, metadata !DIExpression()), !dbg !10193
  br label %18, !dbg !10200

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10201
  %12 = load i32, i32* %11, align 4, !dbg !10202
  %13 = or i32 %12, 2, !dbg !10202
  store i32 %13, i32* %11, align 4, !dbg !10202
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10203
  call void @llvm.dbg.value(metadata i32 0, metadata !10192, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.value(metadata i32 0, metadata !10192, metadata !DIExpression()), !dbg !10193
  br label %18, !dbg !10204

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10205
  call void @llvm.dbg.value(metadata i32 0, metadata !10192, metadata !DIExpression()), !dbg !10193
  br label %18, !dbg !10206

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !10192, metadata !DIExpression()), !dbg !10193
  tail call void @Flash_ReturnReady() #21, !dbg !10207
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !10207
  unreachable, !dbg !10207

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !10192, metadata !DIExpression()), !dbg !10193
  ret i32 0, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10216, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10217, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %2, metadata !10218, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %3, metadata !10219, metadata !DIExpression()), !dbg !10221
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !10222
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !10224
  br i1 %7, label %33, label %8, !dbg !10224

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10225
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10225
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !10227
  br i1 %11, label %33, label %12, !dbg !10228

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10229
  %14 = load i8*, i8** %13, align 4, !dbg !10229
  %15 = icmp eq i8* %14, null, !dbg !10230
  br i1 %15, label %33, label %16, !dbg !10231

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !10232
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !10233
  store i8* %17, i8** %18, align 4, !dbg !10234
  %19 = trunc i32 %3 to i16, !dbg !10235
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !10236
  store i16 %19, i16* %20, align 2, !dbg !10237
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10238
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10239
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !10240
  store i8 -81, i8* %23, align 1, !dbg !10241
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10242
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10243
  %25 = load i8, i8* %24, align 1, !dbg !10244
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !10246

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !10247
  br i1 %27, label %31, label %28, !dbg !10248

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10249
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !10251
  store i8 -97, i8* %30, align 1, !dbg !10252
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10253
  br label %31, !dbg !10254

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10255
  call void @llvm.dbg.value(metadata i32 0, metadata !10220, metadata !DIExpression()), !dbg !10221
  br label %33, !dbg !10256

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !10221
  ret i32 %34, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10258 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10262, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i8* %1, metadata !10263, metadata !DIExpression()), !dbg !10265
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10266
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10267
  %5 = and i32 %4, 1, !dbg !10267
  %6 = icmp eq i32 %5, 0, !dbg !10269
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10270
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !10270
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !10271
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !10271
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !10271
  %12 = load i8, i8* %11, align 1, !dbg !10270
  store i8 %12, i8* %3, align 1, !dbg !10270
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10272
  %14 = load i16, i16* %13, align 2, !dbg !10272
  call void @llvm.dbg.value(metadata i8* %3, metadata !10264, metadata !DIExpression(DW_OP_deref)), !dbg !10265
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !10273
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10274
  ret void, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !10275 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10279, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i8* %1, metadata !10280, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i8* %2, metadata !10281, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i16 %3, metadata !10282, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i16 %4, metadata !10283, metadata !DIExpression()), !dbg !10285
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10286
  call void @llvm.dbg.value(metadata i32 %6, metadata !10284, metadata !DIExpression()), !dbg !10285
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !10287
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10290 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10292, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10295, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 0, metadata !10293, metadata !DIExpression()), !dbg !10298
  br label %6, !dbg !10299

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %3, metadata !10293, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %8, metadata !10293, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10298
  %4 = icmp ult i32 %8, 4, !dbg !10303
  %5 = icmp eq i32 %3, 5, !dbg !10303
  br i1 %5, label %26, label %6, !dbg !10299, !llvm.loop !10304

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10293, metadata !DIExpression()), !dbg !10298
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10294, metadata !DIExpression()), !dbg !10298
  %12 = icmp eq i8 %10, 0, !dbg !10306
  br i1 %12, label %23, label %13, !dbg !10310

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10294, metadata !DIExpression()), !dbg !10298
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10311
  %16 = load i8, i8* %15, align 1, !dbg !10311
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10314
  %18 = load i8, i8* %17, align 1, !dbg !10314
  %19 = icmp eq i8 %16, %18, !dbg !10315
  br i1 %19, label %20, label %23, !dbg !10316

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %21, metadata !10294, metadata !DIExpression()), !dbg !10298
  %22 = icmp eq i32 %21, %11, !dbg !10306
  br i1 %22, label %26, label %13, !dbg !10310, !llvm.loop !10318

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10320
  %25 = icmp eq i32 %24, %11, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %8, metadata !10293, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10298
  br i1 %25, label %26, label %2, !dbg !10323

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10303
  ret i1 %27, !dbg !10324
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10325 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10336
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10336
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10329, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10335, metadata !DIExpression()), !dbg !10338
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10339
  %4 = icmp sgt i16 %3, -1, !dbg !10341
  br i1 %4, label %34, label %5, !dbg !10342

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10343
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !10344
  call void @llvm.dbg.value(metadata i32 0, metadata !10327, metadata !DIExpression()), !dbg !10338
  br label %7, !dbg !10345

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10327, metadata !DIExpression()), !dbg !10338
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10328, metadata !DIExpression()), !dbg !10338
  %12 = icmp eq i8 %10, 0, !dbg !10347
  br i1 %12, label %24, label %13, !dbg !10352

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10328, metadata !DIExpression()), !dbg !10338
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10353
  %16 = load i8, i8* %15, align 1, !dbg !10353
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10356
  %18 = load i16, i16* %17, align 2, !dbg !10356
  %19 = zext i8 %16 to i16, !dbg !10357
  %20 = icmp eq i16 %18, %19, !dbg !10357
  br i1 %20, label %21, label %24, !dbg !10358

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %22, metadata !10328, metadata !DIExpression()), !dbg !10338
  %23 = icmp eq i32 %22, %11, !dbg !10347
  br i1 %23, label %27, label %13, !dbg !10352, !llvm.loop !10360

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10362
  %26 = icmp eq i32 %25, %11, !dbg !10363
  br i1 %26, label %27, label %29, !dbg !10365

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10366
  store i16 %28, i16* @cmem_index, align 2, !dbg !10368
  br label %34, !dbg !10369

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10370
  call void @llvm.dbg.value(metadata i32 %30, metadata !10327, metadata !DIExpression()), !dbg !10338
  %31 = icmp eq i32 %30, 5, !dbg !10371
  br i1 %31, label %32, label %7, !dbg !10345, !llvm.loop !10372

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10374
  br label %34, !dbg !10374

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10375
  ret i32 %36, !dbg !10375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !10376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10380, metadata !DIExpression()), !dbg !10381
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !10382
  ret %struct.CMEMEntryID* %2, !dbg !10383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10384 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10388, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i8* undef, metadata !10389, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i16* %2, metadata !10390, metadata !DIExpression()), !dbg !10395
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10396
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10396
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10396
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10393, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata i8 -81, metadata !10391, metadata !DIExpression()), !dbg !10398
  store i8 -81, i8* %4, align 1, !dbg !10399
  call void @llvm.dbg.value(metadata i8* %4, metadata !10391, metadata !DIExpression(DW_OP_deref)), !dbg !10398
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10400
  %7 = load i8, i8* %6, align 1, !dbg !10401
  %8 = add i8 %7, 1, !dbg !10403
  %9 = icmp ult i8 %8, 2, !dbg !10403
  br i1 %9, label %12, label %10, !dbg !10403

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !10404
  br i1 %11, label %13, label %12, !dbg !10405

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10391, metadata !DIExpression()), !dbg !10398
  store i8 -97, i8* %4, align 1, !dbg !10406
  call void @llvm.dbg.value(metadata i8* %4, metadata !10391, metadata !DIExpression(DW_OP_deref)), !dbg !10398
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10408
  br label %13, !dbg !10409

13:                                               ; preds = %12, %10
  br label %14, !dbg !10410

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10394, metadata !DIExpression()), !dbg !10398
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !10412
  %17 = load i8, i8* %16, align 1, !dbg !10412
  %18 = zext i8 %17 to i16, !dbg !10412
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !10415
  store i16 %18, i16* %19, align 2, !dbg !10416
  %20 = add nuw nsw i32 %15, 1, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %20, metadata !10394, metadata !DIExpression()), !dbg !10398
  %21 = icmp eq i32 %20, 3, !dbg !10418
  br i1 %21, label %22, label %14, !dbg !10410, !llvm.loop !10419

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10421
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10421
  ret void, !dbg !10422
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !10423 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10425, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10428, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 0, metadata !10426, metadata !DIExpression()), !dbg !10429
  br label %6, !dbg !10430

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10432
  call void @llvm.dbg.value(metadata i32 %3, metadata !10426, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 %8, metadata !10426, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10429
  %4 = icmp ult i32 %8, 4, !dbg !10434
  %5 = icmp eq i32 %3, 5, !dbg !10434
  br i1 %5, label %26, label %6, !dbg !10430, !llvm.loop !10435

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10426, metadata !DIExpression()), !dbg !10429
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10427, metadata !DIExpression()), !dbg !10429
  %12 = icmp eq i8 %10, 0, !dbg !10437
  br i1 %12, label %23, label %13, !dbg !10441

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10427, metadata !DIExpression()), !dbg !10429
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10442
  %16 = load i8, i8* %15, align 1, !dbg !10442
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10445
  %18 = load i8, i8* %17, align 1, !dbg !10445
  %19 = icmp eq i8 %16, %18, !dbg !10446
  br i1 %19, label %20, label %23, !dbg !10447

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %21, metadata !10427, metadata !DIExpression()), !dbg !10429
  %22 = icmp eq i32 %21, %11, !dbg !10437
  br i1 %22, label %26, label %13, !dbg !10441, !llvm.loop !10449

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10451
  %25 = icmp eq i32 %24, %11, !dbg !10452
  call void @llvm.dbg.value(metadata i32 %8, metadata !10426, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10429
  br i1 %25, label %26, label %2, !dbg !10454

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10434
  ret i1 %27, !dbg !10455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !10456 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10462
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10462
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10461, metadata !DIExpression()), !dbg !10464
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10465
  %4 = icmp sgt i16 %3, -1, !dbg !10467
  br i1 %4, label %34, label %5, !dbg !10468

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10469
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !10470
  call void @llvm.dbg.value(metadata i32 0, metadata !10458, metadata !DIExpression()), !dbg !10464
  br label %7, !dbg !10471

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10458, metadata !DIExpression()), !dbg !10464
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10459, metadata !DIExpression()), !dbg !10464
  %12 = icmp eq i8 %10, 0, !dbg !10473
  br i1 %12, label %24, label %13, !dbg !10478

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10459, metadata !DIExpression()), !dbg !10464
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10479
  %16 = load i8, i8* %15, align 1, !dbg !10479
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10482
  %18 = load i16, i16* %17, align 2, !dbg !10482
  %19 = zext i8 %16 to i16, !dbg !10483
  %20 = icmp eq i16 %18, %19, !dbg !10483
  br i1 %20, label %21, label %24, !dbg !10484

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %22, metadata !10459, metadata !DIExpression()), !dbg !10464
  %23 = icmp eq i32 %22, %11, !dbg !10473
  br i1 %23, label %27, label %13, !dbg !10478, !llvm.loop !10486

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10488
  %26 = icmp eq i32 %25, %11, !dbg !10489
  br i1 %26, label %27, label %29, !dbg !10491

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10492
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !10494
  br label %34, !dbg !10495

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %30, metadata !10458, metadata !DIExpression()), !dbg !10464
  %31 = icmp eq i32 %30, 5, !dbg !10497
  br i1 %31, label %32, label %7, !dbg !10471, !llvm.loop !10498

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10500
  br label %34, !dbg !10500

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10464
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10501
  ret i32 %36, !dbg !10501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10502 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10510, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i16* %1, metadata !10511, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i16* %2, metadata !10512, metadata !DIExpression()), !dbg !10518
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10519
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10519
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10519
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10516, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i8 -81, metadata !10514, metadata !DIExpression()), !dbg !10521
  store i8 -81, i8* %4, align 1, !dbg !10522
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %7, metadata !10513, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8* %4, metadata !10514, metadata !DIExpression(DW_OP_deref)), !dbg !10521
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10524
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !10525
  %8 = load i8, i8* %6, align 1, !dbg !10526
  %9 = add i8 %8, 1, !dbg !10528
  %10 = icmp ult i8 %9, 2, !dbg !10528
  br i1 %10, label %13, label %11, !dbg !10528

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !10529
  br i1 %12, label %15, label %13, !dbg !10530

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10514, metadata !DIExpression()), !dbg !10521
  store i8 -97, i8* %4, align 1, !dbg !10531
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %14, metadata !10513, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8* %4, metadata !10514, metadata !DIExpression(DW_OP_deref)), !dbg !10521
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10534
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !10535
  br label %15, !dbg !10536

15:                                               ; preds = %13, %11
  br label %16, !dbg !10537

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10517, metadata !DIExpression()), !dbg !10521
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !10539
  %19 = load i8, i8* %18, align 1, !dbg !10539
  %20 = zext i8 %19 to i16, !dbg !10539
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !10542
  store i16 %20, i16* %21, align 2, !dbg !10543
  %22 = add nuw nsw i32 %17, 1, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %22, metadata !10517, metadata !DIExpression()), !dbg !10521
  %23 = icmp eq i32 %22, 3, !dbg !10545
  br i1 %23, label %24, label %16, !dbg !10537, !llvm.loop !10546

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10548
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10548
  ret void, !dbg !10549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !10550 {
  ret i32 3932160, !dbg !10551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !10552 {
  ret i32 4194304, !dbg !10553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !10554 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !10555
  ret void, !dbg !10556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !10557 {
  ret void, !dbg !10558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !10559 {
  ret void, !dbg !10560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !10561 {
  ret i32 3932160, !dbg !10562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !10563 {
  ret i32 262144, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !10565 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !10566
  ret void, !dbg !10567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !10568 {
  ret i32 134217728, !dbg !10569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !10570 {
  ret i32 4194304, !dbg !10571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !10572 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10573
  ret i32 134217728, !dbg !10574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !10575 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !10576
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10577
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10578
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10579
  %4 = load i16, i16* %3, align 2, !dbg !10579
  %5 = zext i16 %4 to i32, !dbg !10577
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10580
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !10581
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10582
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !10583
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !10584
  ret i32 0, !dbg !10585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !10586 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !10589
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !10590
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !10591
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !10592
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10593
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10594
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !10595
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !10596
  %5 = load i32, i32* %4, align 4, !dbg !10596
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !10597
  call void @llvm.dbg.value(metadata i32 %6, metadata !10588, metadata !DIExpression()), !dbg !10598
  %7 = icmp eq i32 %6, -120, !dbg !10599
  %8 = select i1 %7, i32 5, i32 0, !dbg !10598
  ret i32 %8, !dbg !10601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !10602 {
  ret i8 1, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !10605 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10609, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10611, metadata !DIExpression()), !dbg !10612
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %2, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10611, metadata !DIExpression()), !dbg !10612
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !10614
  %4 = load i32, i32* %3, align 4, !dbg !10614
  ret i32 %4, !dbg !10615
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !10616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10620, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !10621, metadata !DIExpression()), !dbg !10623
  %3 = and i32 %0, 134217727, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %3, metadata !10620, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i16 0, metadata !10622, metadata !DIExpression()), !dbg !10623
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !10625
  %5 = load i32, i32* %4, align 4, !dbg !10625
  %6 = icmp eq i32 %5, 0, !dbg !10628
  br i1 %6, label %25, label %7, !dbg !10629

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !10622, metadata !DIExpression()), !dbg !10623
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !10630
  %12 = load i32, i32* %11, align 4, !dbg !10630
  %13 = icmp ult i32 %3, %12, !dbg !10633
  br i1 %13, label %18, label %14, !dbg !10634

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !10635
  %16 = load i32, i32* %15, align 4, !dbg !10635
  %17 = icmp ult i32 %3, %16, !dbg !10636
  br i1 %17, label %25, label %18, !dbg !10637

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10638
  call void @llvm.dbg.value(metadata i16 %19, metadata !10622, metadata !DIExpression()), !dbg !10623
  %20 = zext i16 %19 to i32, !dbg !10639
  %21 = add nuw nsw i32 %20, 1, !dbg !10640
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !10625
  %23 = load i32, i32* %22, align 4, !dbg !10625
  %24 = icmp eq i32 %23, 0, !dbg !10628
  br i1 %24, label %25, label %7, !dbg !10629, !llvm.loop !10641

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10639
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !10643
  %28 = load i32, i32* %27, align 4, !dbg !10643
  ret i32 %28, !dbg !10644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !10645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10647, metadata !DIExpression()), !dbg !10648
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10649
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !10650
  ret i32 %3, !dbg !10651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10654, metadata !DIExpression()), !dbg !10657
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %2, metadata !10655, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10656, metadata !DIExpression()), !dbg !10657
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10659
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !10660
  ret i32 %4, !dbg !10661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10662 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10668, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 0, metadata !10669, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 0, metadata !10670, metadata !DIExpression()), !dbg !10671
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !10672
  %3 = load i32, i32* %2, align 4, !dbg !10672
  %4 = icmp eq i32 %3, 0, !dbg !10675
  br i1 %4, label %17, label %5, !dbg !10676

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10670, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 %8, metadata !10669, metadata !DIExpression()), !dbg !10671
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !10677
  %10 = load i32, i32* %9, align 4, !dbg !10677
  %11 = mul i32 %10, %6, !dbg !10679
  %12 = add i32 %11, %8, !dbg !10680
  call void @llvm.dbg.value(metadata i32 %12, metadata !10669, metadata !DIExpression()), !dbg !10671
  %13 = add i32 %7, 1, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %13, metadata !10670, metadata !DIExpression()), !dbg !10671
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !10672
  %15 = load i32, i32* %14, align 4, !dbg !10672
  %16 = icmp eq i32 %15, 0, !dbg !10675
  br i1 %16, label %17, label %5, !dbg !10676, !llvm.loop !10682

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10671
  ret i32 %18, !dbg !10684
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10689, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %1, metadata !10690, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10691, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10692, metadata !DIExpression()), !dbg !10698
  %5 = add i32 %1, %0, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %5, metadata !10697, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %0, metadata !10693, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 0, metadata !10694, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 0, metadata !10696, metadata !DIExpression()), !dbg !10698
  %6 = icmp ugt i32 %5, %0, !dbg !10700
  br i1 %6, label %7, label %34, !dbg !10703

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10696, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %9, metadata !10693, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %10, metadata !10694, metadata !DIExpression()), !dbg !10698
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !10704
  call void @llvm.dbg.value(metadata i32 %11, metadata !10695, metadata !DIExpression()), !dbg !10698
  %12 = icmp eq i32 %8, 0, !dbg !10706
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !10708
  br i1 %12, label %14, label %16, !dbg !10709

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10710
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10712
  store i32 1, i32* %15, align 4, !dbg !10713
  br label %29, !dbg !10714

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10715
  %18 = icmp eq i32 %11, %17, !dbg !10717
  br i1 %18, label %19, label %23, !dbg !10718

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10719
  %21 = load i32, i32* %20, align 4, !dbg !10721
  %22 = add i32 %21, 1, !dbg !10721
  store i32 %22, i32* %20, align 4, !dbg !10721
  br label %29, !dbg !10722

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10723
  call void @llvm.dbg.value(metadata i32 %24, metadata !10694, metadata !DIExpression()), !dbg !10698
  %25 = icmp eq i32 %24, 9, !dbg !10725
  br i1 %25, label %34, label %26, !dbg !10727

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !10728
  store i32 %11, i32* %27, align 4, !dbg !10729
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !10730
  store i32 1, i32* %28, align 4, !dbg !10731
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10732
  call void @llvm.dbg.value(metadata i32 %30, metadata !10694, metadata !DIExpression()), !dbg !10698
  %31 = add i32 %11, %9, !dbg !10733
  call void @llvm.dbg.value(metadata i32 %31, metadata !10693, metadata !DIExpression()), !dbg !10698
  %32 = add i32 %8, 1, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %32, metadata !10696, metadata !DIExpression()), !dbg !10698
  %33 = icmp ult i32 %31, %5, !dbg !10700
  br i1 %33, label %7, label %34, !dbg !10703, !llvm.loop !10735

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10698
  ret i32 %35, !dbg !10737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !10738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10742, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i32 %1, metadata !10743, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10744, metadata !DIExpression()), !dbg !10745
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10746
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !10747
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10748
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !10749
  ret i32 %7, !dbg !10750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10753, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata i32 %1, metadata !10754, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10755, metadata !DIExpression()), !dbg !10756
  ret i32 0, !dbg !10757
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10760, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %1, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10762, metadata !DIExpression()), !dbg !10765
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %4, metadata !10763, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10764, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10764, metadata !DIExpression()), !dbg !10765
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10767
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !10768
  ret i32 %6, !dbg !10769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10772, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.value(metadata i32 %1, metadata !10773, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10774, metadata !DIExpression()), !dbg !10775
  ret i32 0, !dbg !10776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10777 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10779, metadata !DIExpression()), !dbg !10782
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10783
  call void @llvm.dbg.value(metadata i32 %2, metadata !10780, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10781, metadata !DIExpression()), !dbg !10782
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10784
  %4 = load i32, i32* %3, align 4, !dbg !10784
  ret i32 %4, !dbg !10785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !10786 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10790, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.value(metadata i32* %1, metadata !10791, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.value(metadata i32 %2, metadata !10792, metadata !DIExpression()), !dbg !10793
  %4 = load i32, i32* %1, align 4, !dbg !10794
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !10796
  %6 = load i32, i32* %5, align 4, !dbg !10796
  %7 = icmp eq i32 %6, %2, !dbg !10797
  br i1 %7, label %8, label %12, !dbg !10798

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !10799
  %10 = load i32, i32* %9, align 4, !dbg !10801
  %11 = add i32 %10, 1, !dbg !10801
  store i32 %11, i32* %9, align 4, !dbg !10801
  br label %17, !dbg !10802

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10803
  store i32 %13, i32* %1, align 4, !dbg !10803
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !10805
  store i32 1, i32* %14, align 4, !dbg !10806
  %15 = load i32, i32* %1, align 4, !dbg !10807
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !10808
  store i32 %2, i32* %16, align 4, !dbg !10809
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10815, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %1, metadata !10816, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10817, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10818, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 0, metadata !10819, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 0, metadata !10820, metadata !DIExpression()), !dbg !10824
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10825
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !10826
  call void @llvm.dbg.value(metadata i32 0, metadata !10823, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 0, metadata !10822, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 0, metadata !10820, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 0, metadata !10819, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %0, metadata !10815, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %1, metadata !10816, metadata !DIExpression()), !dbg !10824
  %7 = icmp eq i32 %1, 0, !dbg !10827
  br i1 %7, label %53, label %8, !dbg !10830

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10823, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %10, metadata !10822, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %11, metadata !10820, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %12, metadata !10819, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %13, metadata !10815, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %14, metadata !10816, metadata !DIExpression()), !dbg !10824
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !10831
  %16 = load i32, i32* %15, align 4, !dbg !10831
  %17 = icmp ult i32 %9, %16, !dbg !10834
  %18 = xor i1 %17, true, !dbg !10835
  %19 = zext i1 %18 to i32, !dbg !10835
  %20 = add i32 %12, %19, !dbg !10835
  call void @llvm.dbg.value(metadata i32 undef, metadata !10823, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %20, metadata !10819, metadata !DIExpression()), !dbg !10824
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !10836
  %22 = load i32, i32* %21, align 4, !dbg !10836
  %23 = add i32 %22, %10, !dbg !10837
  call void @llvm.dbg.value(metadata i32 %23, metadata !10822, metadata !DIExpression()), !dbg !10824
  %24 = icmp ult i32 %23, %13, !dbg !10838
  br i1 %24, label %46, label %25, !dbg !10840

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10841
  call void @llvm.dbg.value(metadata i32 %26, metadata !10821, metadata !DIExpression()), !dbg !10824
  %27 = icmp ult i32 %14, %26, !dbg !10843
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %28, metadata !10821, metadata !DIExpression()), !dbg !10824
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !10846
  %30 = load i32, i32* %29, align 4, !dbg !10846
  %31 = icmp eq i32 %30, %28, !dbg !10848
  br i1 %31, label %32, label %36, !dbg !10849

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !10850
  %34 = load i32, i32* %33, align 4, !dbg !10852
  %35 = add i32 %34, 1, !dbg !10852
  store i32 %35, i32* %33, align 4, !dbg !10852
  br label %42, !dbg !10853

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10854
  %38 = zext i1 %37 to i32, !dbg !10857
  %39 = add nsw i32 %11, %38, !dbg !10857
  call void @llvm.dbg.value(metadata i32 %39, metadata !10820, metadata !DIExpression()), !dbg !10824
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !10858
  store i32 1, i32* %40, align 4, !dbg !10859
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !10860
  store i32 %28, i32* %41, align 4, !dbg !10861
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10824
  call void @llvm.dbg.value(metadata i32 %43, metadata !10820, metadata !DIExpression()), !dbg !10824
  %44 = add i32 %28, %13, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %44, metadata !10815, metadata !DIExpression()), !dbg !10824
  %45 = sub i32 %14, %28, !dbg !10863
  call void @llvm.dbg.value(metadata i32 %45, metadata !10816, metadata !DIExpression()), !dbg !10824
  br label %46, !dbg !10864

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10865
  call void @llvm.dbg.value(metadata i32 %49, metadata !10820, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %48, metadata !10815, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %47, metadata !10816, metadata !DIExpression()), !dbg !10824
  %50 = add nuw i32 %9, 1, !dbg !10866
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %51, metadata !10823, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %23, metadata !10822, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %20, metadata !10819, metadata !DIExpression()), !dbg !10824
  %52 = icmp eq i32 %47, 0, !dbg !10827
  br i1 %52, label %53, label %8, !dbg !10830, !llvm.loop !10867

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !10870 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10874
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10875
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10874
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10876
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !10877
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !10878
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10879
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !10880
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !10879
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !10881
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !10882
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !10883
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %12, metadata !10872, metadata !DIExpression()), !dbg !10885
  %13 = icmp eq i32 %12, 0, !dbg !10886
  br i1 %13, label %14, label %46, !dbg !10888

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !10873, metadata !DIExpression()), !dbg !10885
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !10889
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10891
  call void @llvm.dbg.value(metadata i32 0, metadata !10873, metadata !DIExpression()), !dbg !10885
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !10892
  %16 = icmp eq i32 %15, 0, !dbg !10894
  br i1 %16, label %34, label %17, !dbg !10895

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10873, metadata !DIExpression()), !dbg !10885
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !10896
  %23 = load i32, i32* %22, align 4, !dbg !10896
  %24 = add i32 %20, %23, !dbg !10898
  %25 = icmp ugt i32 %18, %21, !dbg !10899
  br i1 %25, label %26, label %27, !dbg !10901

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10902
  br label %27, !dbg !10904

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %29, metadata !10873, metadata !DIExpression()), !dbg !10885
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !10892
  %31 = load i32, i32* %30, align 4, !dbg !10892
  %32 = icmp eq i32 %31, 0, !dbg !10894
  br i1 %32, label %33, label %17, !dbg !10895, !llvm.loop !10906

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !10898
  br label %34, !dbg !10895

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !10908
  %36 = mul i32 %35, -5, !dbg !10909
  %37 = add i32 %36, 262144, !dbg !10910
  %38 = lshr i32 %37, 9, !dbg !10911
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !10912
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !10913
  call void @llvm.dbg.value(metadata i32 0, metadata !10872, metadata !DIExpression()), !dbg !10885
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10914
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !10915
  %42 = load i8, i8* %41, align 1, !dbg !10915
  %43 = icmp eq i8 %42, 3, !dbg !10916
  br i1 %43, label %44, label %46, !dbg !10916

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %45, metadata !10872, metadata !DIExpression()), !dbg !10885
  br label %46, !dbg !10919

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !10885
  ret i32 %47, !dbg !10920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10925, metadata !DIExpression()), !dbg !10926
  %2 = icmp eq i32 %0, 0, !dbg !10927
  br i1 %2, label %3, label %9, !dbg !10929

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !10930
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10932
  %5 = icmp slt i32 %4, 0, !dbg !10933
  br i1 %5, label %6, label %7, !dbg !10935

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10936
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.156, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.157, i32 0, i32 0)) #23, !dbg !10936
  unreachable, !dbg !10936

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !10941
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10942
  br label %9, !dbg !10943

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10944
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10946 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10947
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !10948
  ret i32 %1, !dbg !10949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10950 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10953
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10954
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10955
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10956
  %4 = load i16, i16* %3, align 2, !dbg !10956
  %5 = zext i16 %4 to i32, !dbg !10954
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10957
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10958
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10959
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10960
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !10960
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !10961
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10962
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10963
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10964
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10965
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10966
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10967
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10968
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10969
  %13 = load i32, i32* %12, align 4, !dbg !10969
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !10970
  call void @llvm.dbg.value(metadata i32 %14, metadata !10952, metadata !DIExpression()), !dbg !10971
  %15 = icmp eq i32 %14, -120, !dbg !10972
  br i1 %15, label %16, label %17, !dbg !10975

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !10976
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.156, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.157, i32 0, i32 0)) #23, !dbg !10976
  unreachable, !dbg !10976

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !10978
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10979
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !10980
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10981
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10982
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10983
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10984
  ret i32 0, !dbg !10985
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !10986 {
  ret void, !dbg !10987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !10988 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %1, metadata !10990, metadata !DIExpression()), !dbg !10992
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10993
  br i1 %2, label %4, label %3, !dbg !10995

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !10996
  br label %4, !dbg !10998

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10999
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10999
  ret i32 %5, !dbg !11000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !11001 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !11004
  call void @llvm.dbg.value(metadata i32 %1, metadata !11003, metadata !DIExpression()), !dbg !11005
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11006
  br i1 %2, label %3, label %4, !dbg !11008

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !11009
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11011
  ret void, !dbg !11012

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11013
  tail call void @Flash_ReturnReady() #20, !dbg !11015
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11015
  unreachable, !dbg !11015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !11019 {
  ret void, !dbg !11020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !11021 {
  br label %1, !dbg !11024

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !11025
  call void @llvm.dbg.value(metadata i32 %2, metadata !11023, metadata !DIExpression()), !dbg !11027
  %3 = icmp eq i32 %2, 0, !dbg !11028
  br i1 %3, label %4, label %1, !dbg !11029, !llvm.loop !11030

4:                                                ; preds = %1
  ret void, !dbg !11032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !11033 {
  tail call void @FreeFDMLock() #21, !dbg !11034
  ret void, !dbg !11035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11079, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i32 %1, metadata !11080, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i8* %2, metadata !11081, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i32 %3, metadata !11082, metadata !DIExpression()), !dbg !11085
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11086
  %6 = load i32, i32* %5, align 4, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %6, metadata !11084, metadata !DIExpression()), !dbg !11085
  %7 = icmp ule i32 %6, %1, !dbg !11087
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !11089
  br i1 %10, label %26, label %11, !dbg !11089

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11090
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !11090
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !11090
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !11091
  %16 = load i8*, i8** %15, align 4, !dbg !11091
  %17 = ptrtoint i8* %16 to i32, !dbg !11092
  %18 = add i32 %17, %1, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %18, metadata !11083, metadata !DIExpression()), !dbg !11085
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11094
  %20 = load i8, i8* %19, align 4, !dbg !11094, !range !2742
  %21 = icmp eq i8 %20, 0, !dbg !11094
  br i1 %21, label %22, label %23, !dbg !11096

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11097
  br label %23, !dbg !11099

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !11100
  %24 = inttoptr i32 %18 to i8*, !dbg !11101
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !11102
  tail call void @release_FDM_lock() #21, !dbg !11103
  br label %26, !dbg !11104

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !11085
  ret i32 %27, !dbg !11105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11110, metadata !DIExpression()), !dbg !11112
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11113
  %3 = load i8, i8* %2, align 4, !dbg !11113, !range !2742
  %4 = icmp eq i8 %3, 0, !dbg !11113
  br i1 %4, label %5, label %18, !dbg !11115

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !11116
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11117
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !11117
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !11118
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !11118
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11119
  %11 = load i8*, i8** %10, align 4, !dbg !11119
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !11120
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !11121
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %14, metadata !11111, metadata !DIExpression()), !dbg !11112
  tail call void @release_FDM_lock() #21, !dbg !11123
  %15 = icmp slt i32 %14, 0, !dbg !11124
  br i1 %15, label %16, label %17, !dbg !11126

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11127
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11127
  unreachable, !dbg !11127

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !11132
  br label %18, !dbg !11133

18:                                               ; preds = %1, %17
  ret void, !dbg !11133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11134 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11136, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %1, metadata !11137, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i8* %2, metadata !11138, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %3, metadata !11139, metadata !DIExpression()), !dbg !11157
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11158
  %7 = load i32, i32* %6, align 4, !dbg !11158
  call void @llvm.dbg.value(metadata i32 %7, metadata !11142, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 0, metadata !11143, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 0, metadata !11144, metadata !DIExpression()), !dbg !11157
  %8 = icmp ugt i32 %7, %1, !dbg !11159
  br i1 %8, label %9, label %101, !dbg !11161

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !11162
  %11 = icmp ugt i32 %10, %7, !dbg !11164
  br i1 %11, label %101, label %12, !dbg !11165

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11166
  %14 = load i8, i8* %13, align 4, !dbg !11166, !range !2742
  %15 = icmp eq i8 %14, 0, !dbg !11166
  br i1 %15, label %16, label %17, !dbg !11168

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11169
  br label %17, !dbg !11171

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !11172
  %18 = bitcast i16* %5 to i8*, !dbg !11173
  call void @llvm.dbg.value(metadata i32 0, metadata !11143, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 0, metadata !11144, metadata !DIExpression()), !dbg !11157
  %19 = icmp eq i32 %3, 0, !dbg !11174
  br i1 %19, label %99, label %20, !dbg !11175

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !11175

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !11144, metadata !DIExpression()), !dbg !11157
  %27 = load i8*, i8** %21, align 4, !dbg !11176
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !11177
  %29 = bitcast i8* %28 to i8**, !dbg !11177
  %30 = load i8*, i8** %29, align 4, !dbg !11177
  %31 = ptrtoint i8* %30 to i32, !dbg !11178
  %32 = add i32 %31, %1, !dbg !11179
  %33 = add i32 %32, %26, !dbg !11180
  call void @llvm.dbg.value(metadata i32 %33, metadata !11140, metadata !DIExpression()), !dbg !11157
  %34 = add i32 %26, %22, !dbg !11181
  call void @llvm.dbg.value(metadata i32 %34, metadata !11141, metadata !DIExpression()), !dbg !11157
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11182
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !11183
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !11183
  %38 = add i32 %26, %1, !dbg !11184
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !11185
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !11186
  %41 = and i32 %33, 1, !dbg !11187
  %42 = icmp eq i32 %41, 0, !dbg !11187
  br i1 %42, label %43, label %46, !dbg !11188

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !11189
  %45 = icmp eq i32 %44, 1, !dbg !11190
  br i1 %45, label %46, label %57, !dbg !11191

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11192
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !11194
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !11194
  %50 = load i8*, i8** %21, align 4, !dbg !11195
  %51 = inttoptr i32 %33 to i8*, !dbg !11196
  %52 = inttoptr i32 %34 to i8*, !dbg !11197
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !11198
  call void @llvm.dbg.value(metadata i32 %53, metadata !11143, metadata !DIExpression()), !dbg !11157
  %54 = icmp eq i32 %53, 0, !dbg !11199
  br i1 %54, label %55, label %99, !dbg !11201

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %56, metadata !11144, metadata !DIExpression()), !dbg !11157
  br label %96, !dbg !11203

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !11204
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !11205
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %60, metadata !11145, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata i32 %44, metadata !11149, metadata !DIExpression()), !dbg !11207
  %61 = add i32 %60, %33, !dbg !11208
  %62 = sub i32 0, %60, !dbg !11209
  %63 = and i32 %61, %62, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %63, metadata !11150, metadata !DIExpression()), !dbg !11207
  %64 = add i32 %32, %3, !dbg !11211
  %65 = icmp ugt i32 %64, %63, !dbg !11213
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %67, metadata !11149, metadata !DIExpression()), !dbg !11207
  %68 = and i32 %67, -2, !dbg !11215
  call void @llvm.dbg.value(metadata i32 %68, metadata !11149, metadata !DIExpression()), !dbg !11207
  %69 = icmp ne i32 %68, 2, !dbg !11216
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !11217
  br i1 %72, label %85, label %73, !dbg !11217

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11173
  call void @llvm.dbg.value(metadata i8* %18, metadata !11156, metadata !DIExpression()), !dbg !11218
  %74 = inttoptr i32 %34 to i8*, !dbg !11219
  %75 = load i8, i8* %74, align 1, !dbg !11220
  call void @llvm.dbg.value(metadata i8 undef, metadata !11151, metadata !DIExpression()), !dbg !11218
  store i8 %75, i8* %18, align 2, !dbg !11221
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !11222
  %77 = load i8, i8* %76, align 1, !dbg !11223
  store i8 %77, i8* %24, align 1, !dbg !11224
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11225
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !11226
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !11226
  %81 = load i8*, i8** %21, align 4, !dbg !11227
  %82 = inttoptr i32 %33 to i8*, !dbg !11228
  call void @llvm.dbg.value(metadata i16* %5, metadata !11151, metadata !DIExpression(DW_OP_deref)), !dbg !11218
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !11229
  call void @llvm.dbg.value(metadata i32 %83, metadata !11143, metadata !DIExpression()), !dbg !11157
  %84 = icmp eq i32 %83, 0, !dbg !11230
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11232
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11233
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !11237
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !11237
  %89 = load i8*, i8** %21, align 4, !dbg !11238
  %90 = inttoptr i32 %33 to i8*, !dbg !11239
  %91 = inttoptr i32 %34 to i8*, !dbg !11240
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !11241
  call void @llvm.dbg.value(metadata i32 %92, metadata !11143, metadata !DIExpression()), !dbg !11157
  %93 = icmp eq i32 %92, 0, !dbg !11242
  br i1 %93, label %94, label %99, !dbg !11244

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !11143, metadata !DIExpression()), !dbg !11157
  %95 = add i32 %68, %26, !dbg !11245
  call void @llvm.dbg.value(metadata i32 %83, metadata !11143, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %26, metadata !11144, metadata !DIExpression()), !dbg !11157
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !11246
  call void @llvm.dbg.value(metadata i32 0, metadata !11143, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %97, metadata !11144, metadata !DIExpression()), !dbg !11157
  %98 = icmp ult i32 %97, %3, !dbg !11174
  br i1 %98, label %25, label %99, !dbg !11175, !llvm.loop !11247

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !11249
  br label %101, !dbg !11250

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !11157
  ret i32 %102, !dbg !11250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11251 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11255, metadata !DIExpression()), !dbg !11259
  call void @llvm.dbg.value(metadata i32 %1, metadata !11256, metadata !DIExpression()), !dbg !11259
  %3 = and i32 %1, 16777215, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %3, metadata !11258, metadata !DIExpression()), !dbg !11259
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11261
  %5 = load i8, i8* %4, align 4, !dbg !11261, !range !2742
  %6 = icmp eq i8 %5, 0, !dbg !11261
  br i1 %6, label %7, label %8, !dbg !11263

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11264
  br label %8, !dbg !11266

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !11267
  %10 = load i32, i32* %9, align 4, !dbg !11267
  %11 = icmp ult i32 %3, %10, !dbg !11269
  br i1 %11, label %12, label %27, !dbg !11270

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !11271
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11272
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11272
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !11273
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !11273
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11274
  %18 = load i8*, i8** %17, align 4, !dbg !11274
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !11275
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11276
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !11277
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !11277
  %23 = load i8*, i8** %17, align 4, !dbg !11278
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !11279
  call void @llvm.dbg.value(metadata i32 %24, metadata !11257, metadata !DIExpression()), !dbg !11259
  tail call void @release_FDM_lock() #21, !dbg !11280
  %25 = icmp eq i32 %24, 0, !dbg !11281
  %26 = select i1 %25, i32 0, i32 6, !dbg !11259
  br label %27, !dbg !11259

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !11259
  ret i32 %28, !dbg !11283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !11284 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11285
  br i1 %1, label %3, label %2, !dbg !11287

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !11288
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !11290
  store i1 true, i1* @flash_init_status, align 4, !dbg !11291
  br label %3, !dbg !11292

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !11294 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11295
  %2 = select i1 %1, i32 0, i32 -5, !dbg !11295
  ret i32 %2, !dbg !11296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11301, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i32 %1, metadata !11302, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i8* %2, metadata !11303, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11304, metadata !DIExpression()), !dbg !11308
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11309
  call void @llvm.dbg.value(metadata i8* %4, metadata !11305, metadata !DIExpression()), !dbg !11308
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11310
  %6 = ptrtoint i8* %5 to i32, !dbg !11311
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11312
  %8 = bitcast i8* %7 to i8**, !dbg !11312
  %9 = load i8*, i8** %8, align 4, !dbg !11312
  %10 = ptrtoint i8* %9 to i32, !dbg !11313
  %11 = shl i32 %1, 9, !dbg !11314
  %12 = add i32 %11, %6, !dbg !11315
  %13 = sub i32 %12, %10, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %13, metadata !11307, metadata !DIExpression()), !dbg !11308
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11317
  call void @llvm.dbg.value(metadata i32 %14, metadata !11306, metadata !DIExpression()), !dbg !11308
  %15 = icmp eq i32 %14, 0, !dbg !11318
  %16 = select i1 %15, i32 0, i32 -13, !dbg !11308
  ret i32 %16, !dbg !11320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11323, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i32 %1, metadata !11324, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i8* %2, metadata !11325, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11326, metadata !DIExpression()), !dbg !11330
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11331
  call void @llvm.dbg.value(metadata i8* %4, metadata !11327, metadata !DIExpression()), !dbg !11330
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11332
  %6 = ptrtoint i8* %5 to i32, !dbg !11333
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11334
  %8 = bitcast i8* %7 to i8**, !dbg !11334
  %9 = load i8*, i8** %8, align 4, !dbg !11334
  %10 = ptrtoint i8* %9 to i32, !dbg !11335
  %11 = shl i32 %1, 9, !dbg !11336
  %12 = add i32 %11, %6, !dbg !11337
  %13 = sub i32 %12, %10, !dbg !11338
  call void @llvm.dbg.value(metadata i32 %13, metadata !11329, metadata !DIExpression()), !dbg !11330
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %14, metadata !11328, metadata !DIExpression()), !dbg !11330
  %15 = icmp eq i32 %14, 0, !dbg !11340
  %16 = select i1 %15, i32 0, i32 -14, !dbg !11330
  ret i32 %16, !dbg !11342
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !11343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11347, metadata !DIExpression()), !dbg !11349
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !11350
  call void @llvm.dbg.value(metadata i32 %2, metadata !11348, metadata !DIExpression()), !dbg !11349
  %3 = icmp eq i32 %2, 0, !dbg !11351
  %4 = select i1 %3, i32 0, i32 -15, !dbg !11349
  ret i32 %4, !dbg !11353
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11356, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11357, metadata !DIExpression()), !dbg !11359
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11360
  call void @llvm.dbg.value(metadata i8* %2, metadata !11358, metadata !DIExpression()), !dbg !11359
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !11361
  ret i32 %3, !dbg !11362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !11363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11365, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11366, metadata !DIExpression()), !dbg !11368
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11369
  call void @llvm.dbg.value(metadata i8* %2, metadata !11367, metadata !DIExpression()), !dbg !11368
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !11370
  ret i32 %3, !dbg !11371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11376, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i32* %1, metadata !11377, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i32* %2, metadata !11378, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11379, metadata !DIExpression()), !dbg !11381
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11382
  call void @llvm.dbg.value(metadata i8* %4, metadata !11380, metadata !DIExpression()), !dbg !11381
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !11383
  store i32 %5, i32* %1, align 4, !dbg !11384
  %6 = icmp eq i32 %5, -1, !dbg !11385
  br i1 %6, label %10, label %7, !dbg !11387

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !11388
  %9 = urem i32 %0, %8, !dbg !11389
  store i32 %9, i32* %2, align 4, !dbg !11390
  br label %10, !dbg !11391

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !11381
  ret i32 %11, !dbg !11392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11397, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.value(metadata i32 %1, metadata !11398, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.value(metadata i32* %2, metadata !11399, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11400, metadata !DIExpression()), !dbg !11402
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11403
  call void @llvm.dbg.value(metadata i8* %4, metadata !11401, metadata !DIExpression()), !dbg !11402
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11404
  %6 = ptrtoint i8* %5 to i32, !dbg !11405
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11406
  %8 = bitcast i8* %7 to i8**, !dbg !11406
  %9 = load i8*, i8** %8, align 4, !dbg !11406
  %10 = ptrtoint i8* %9 to i32, !dbg !11407
  %11 = add i32 %6, %1, !dbg !11408
  %12 = sub i32 %11, %10, !dbg !11409
  store i32 %12, i32* %2, align 4, !dbg !11410
  ret i32 0, !dbg !11411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !11412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11416, metadata !DIExpression()), !dbg !11417
  %2 = add i32 %0, 2, !dbg !11418
  %3 = icmp ult i32 %2, 9, !dbg !11418
  br i1 %3, label %5, label %4, !dbg !11418

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !11419
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11419
  unreachable, !dbg !11419

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !11418
  %7 = lshr i16 433, %6, !dbg !11418
  %8 = and i16 %7, 1, !dbg !11418
  %9 = icmp eq i16 %8, 0, !dbg !11418
  br i1 %9, label %4, label %10, !dbg !11418

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !11418
  %12 = load i32, i32* %11, align 4, !dbg !11418
  ret i32 %12, !dbg !11429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !11430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11435, metadata !DIExpression()), !dbg !11438
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11439
  call void @llvm.dbg.value(metadata i32 %2, metadata !11437, metadata !DIExpression()), !dbg !11438
  %3 = icmp eq i32 %2, -1, !dbg !11440
  br i1 %3, label %4, label %5, !dbg !11442

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11443
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11443
  unreachable, !dbg !11443

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !11448
  call void @llvm.dbg.value(metadata i32 %6, metadata !11436, metadata !DIExpression()), !dbg !11438
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !11449

7:                                                ; preds = %5
  br label %10, !dbg !11450

8:                                                ; preds = %5
  br label %10, !dbg !11454

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11457
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11457
  unreachable, !dbg !11457

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !11462
  ret i32 %11, !dbg !11463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !11464 {
  %1 = tail call i32 @NOR_init() #21, !dbg !11465
  ret i32 0, !dbg !11466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !11467 {
  ret i32 0, !dbg !11468
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11473, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata i32 %1, metadata !11474, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11478
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !11479

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !11480
  %5 = icmp eq i32 %4, 0, !dbg !11484
  br i1 %5, label %12, label %22, !dbg !11485

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !11486
  %8 = icmp eq i32 %7, 0, !dbg !11490
  br i1 %8, label %12, label %22, !dbg !11491

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !11492
  %11 = icmp eq i32 %10, 0, !dbg !11496
  br i1 %11, label %12, label %22, !dbg !11497

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !11498
  call void @llvm.dbg.value(metadata i32 %13, metadata !11477, metadata !DIExpression()), !dbg !11478
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11499
  call void @llvm.dbg.value(metadata i32 %14, metadata !11476, metadata !DIExpression()), !dbg !11478
  %15 = icmp eq i32 %14, -1, !dbg !11500
  br i1 %15, label %22, label %16, !dbg !11502

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !11503
  call void @llvm.dbg.value(metadata i32 %17, metadata !11476, metadata !DIExpression()), !dbg !11478
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !11504
  call void @llvm.dbg.value(metadata i32 %18, metadata !11475, metadata !DIExpression()), !dbg !11478
  %19 = icmp eq i32 %18, 0, !dbg !11505
  br i1 %19, label %22, label %20, !dbg !11507

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !11508
  br label %22, !dbg !11510

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !11478
  ret i32 %23, !dbg !11511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11516, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i8* %1, metadata !11517, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 %2, metadata !11518, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11519, metadata !DIExpression()), !dbg !11521
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11522
  call void @llvm.dbg.value(metadata i32 %4, metadata !11520, metadata !DIExpression()), !dbg !11521
  %5 = icmp eq i32 %4, 0, !dbg !11523
  br i1 %5, label %8, label %6, !dbg !11525

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11526
  br label %8, !dbg !11528

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !11521
  ret i32 %9, !dbg !11529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11534, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata i8* %1, metadata !11535, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata i32 %2, metadata !11536, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11537, metadata !DIExpression()), !dbg !11542
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11543
  call void @llvm.dbg.value(metadata i32 %4, metadata !11538, metadata !DIExpression()), !dbg !11542
  %5 = icmp eq i32 %4, 0, !dbg !11544
  br i1 %5, label %8, label %6, !dbg !11546

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11547
  br label %21, !dbg !11549

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !11550
  br i1 %9, label %10, label %21, !dbg !11551

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %11, metadata !11539, metadata !DIExpression()), !dbg !11554
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !11539, metadata !DIExpression()), !dbg !11554
  %15 = icmp ugt i32 %11, %14, !dbg !11555
  br i1 %15, label %21, label %16, !dbg !11557

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11539, metadata !DIExpression()), !dbg !11554
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !11558
  %19 = add i32 %17, 32, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %19, metadata !11539, metadata !DIExpression()), !dbg !11554
  %20 = icmp ugt i32 %19, %14, !dbg !11555
  br i1 %20, label %21, label %16, !dbg !11557, !llvm.loop !11561

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !11542
  ret i32 %22, !dbg !11563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11568, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 %1, metadata !11569, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i8* %0, metadata !11570, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 0, metadata !11571, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 0, metadata !11572, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 0, metadata !11573, metadata !DIExpression()), !dbg !11574
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11575
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11575
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11575
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11576
  %7 = load i32, i32* %6, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %7, metadata !11573, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 0, metadata !11572, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 0, metadata !11571, metadata !DIExpression()), !dbg !11574
  %8 = icmp ugt i32 %7, %1, !dbg !11577
  br i1 %8, label %23, label %9, !dbg !11578

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !11579
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11573, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 %12, metadata !11572, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 %13, metadata !11571, metadata !DIExpression()), !dbg !11574
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !11581
  %15 = load i32, i32* %14, align 4, !dbg !11581
  %16 = mul i32 %15, %10, !dbg !11582
  %17 = add i32 %16, %13, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %17, metadata !11571, metadata !DIExpression()), !dbg !11574
  %18 = add i32 %12, 1, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %18, metadata !11572, metadata !DIExpression()), !dbg !11574
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !11585
  %20 = load i32, i32* %19, align 4, !dbg !11585
  %21 = add i32 %20, %11, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %21, metadata !11573, metadata !DIExpression()), !dbg !11574
  %22 = icmp ugt i32 %21, %1, !dbg !11577
  br i1 %22, label %23, label %9, !dbg !11578, !llvm.loop !11587

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !11589
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !11574
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !11574
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !11574
  call void @llvm.dbg.value(metadata i8* %0, metadata !11570, metadata !DIExpression()), !dbg !11574
  %28 = sub i32 %1, %27, !dbg !11590
  %29 = add i32 %28, %24, !dbg !11591
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !11592
  %31 = load i32, i32* %30, align 4, !dbg !11592
  %32 = mul i32 %29, %31, !dbg !11593
  %33 = add i32 %32, %25, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %33, metadata !11571, metadata !DIExpression()), !dbg !11574
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11595
  %35 = bitcast i8* %34 to i8**, !dbg !11595
  %36 = load i8*, i8** %35, align 4, !dbg !11595
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !11596
  ret i8* %37, !dbg !11597
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !11598 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11600, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i32 %1, metadata !11601, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i32 %2, metadata !11602, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i8* %0, metadata !11603, metadata !DIExpression()), !dbg !11604
  %4 = icmp eq i32 %2, 0, !dbg !11605
  br i1 %4, label %6, label %5, !dbg !11608

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !11609
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.178, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.179, i32 0, i32 0)) #23, !dbg !11609
  unreachable, !dbg !11609

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11603, metadata !DIExpression()), !dbg !11604
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !11611
  %8 = inttoptr i32 %7 to i8*, !dbg !11612
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11613
  %10 = bitcast i8* %9 to i8**, !dbg !11613
  store i8* %8, i8** %10, align 4, !dbg !11614
  ret i8* %8, !dbg !11615
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2080, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 %1, metadata !2081, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i8* %0, metadata !2082, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 0, metadata !2127, metadata !DIExpression()), !dbg !11616
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !11617
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !11617
  %5 = and i32 %1, 7, !dbg !11619
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !11620
  %7 = load i32, i32* %6, align 4, !dbg !11620
  %8 = icmp eq i32 %7, -1, !dbg !11621
  br i1 %8, label %62, label %9, !dbg !11622

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !11623
  br i1 %10, label %54, label %11, !dbg !11626

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !11627
  %13 = load i32, i32* %12, align 4, !dbg !11627
  %14 = icmp eq i32 %13, -1, !dbg !11630
  br i1 %14, label %44, label %15, !dbg !11631

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !11632
  br i1 %16, label %35, label %17, !dbg !11635

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11636
  %19 = add i32 %18, 1, !dbg !11636
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !11636
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11638
  %21 = shl nuw nsw i32 1, %5, !dbg !11640
  %22 = and i32 %20, %21, !dbg !11641
  %23 = icmp eq i32 %22, 0, !dbg !11641
  br i1 %23, label %30, label %24, !dbg !11642

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !11643
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11645
  %26 = ptrtoint i8* %25 to i32, !dbg !11646
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11647
  store i32 %26, i32* %27, align 4, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %26, metadata !2127, metadata !DIExpression()), !dbg !11616
  %28 = xor i32 %21, -1, !dbg !11649
  %29 = and i32 %20, %28, !dbg !11650
  br label %71, !dbg !11651

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !11652
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11654
  %32 = ptrtoint i8* %31 to i32, !dbg !11655
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11656
  store i32 %32, i32* %33, align 4, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %32, metadata !2127, metadata !DIExpression()), !dbg !11616
  %34 = or i32 %20, %21, !dbg !11658
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11659
  %37 = add i32 %36, 1, !dbg !11659
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11659
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11661
  %39 = load i32, i32* %38, align 4, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %39, metadata !2127, metadata !DIExpression()), !dbg !11616
  %40 = shl nuw nsw i32 1, %5, !dbg !11662
  %41 = xor i32 %40, -1, !dbg !11663
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11664
  %43 = and i32 %42, %41, !dbg !11664
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11665
  %46 = add i32 %45, 1, !dbg !11665
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11665
  store i32 %1, i32* %12, align 4, !dbg !11667
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11668
  %48 = ptrtoint i8* %47 to i32, !dbg !11669
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11670
  store i32 %48, i32* %49, align 4, !dbg !11671
  call void @llvm.dbg.value(metadata i32 %48, metadata !2127, metadata !DIExpression()), !dbg !11616
  %50 = shl nuw nsw i32 1, %5, !dbg !11672
  %51 = xor i32 %50, -1, !dbg !11673
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11674
  %53 = and i32 %52, %51, !dbg !11674
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11675
  %56 = add i32 %55, 1, !dbg !11675
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11675
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11677
  %58 = load i32, i32* %57, align 4, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %58, metadata !2127, metadata !DIExpression()), !dbg !11616
  %59 = shl nuw nsw i32 1, %5, !dbg !11678
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11679
  %61 = or i32 %60, %59, !dbg !11679
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11680
  %64 = add i32 %63, 1, !dbg !11680
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11680
  store i32 %1, i32* %6, align 4, !dbg !11682
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11683
  %66 = ptrtoint i8* %65 to i32, !dbg !11684
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11685
  store i32 %66, i32* %67, align 4, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %66, metadata !2127, metadata !DIExpression()), !dbg !11616
  %68 = shl nuw nsw i32 1, %5, !dbg !11687
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11688
  %70 = or i32 %69, %68, !dbg !11688
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11689
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11689
  call void @llvm.dbg.value(metadata i32 %73, metadata !2127, metadata !DIExpression()), !dbg !11616
  ret i32 %73, !dbg !11690
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11693, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 %1, metadata !11694, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i8* %0, metadata !11695, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 0, metadata !11696, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 0, metadata !11697, metadata !DIExpression()), !dbg !11698
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11699
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11699
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11699
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11700
  %7 = load i32, i32* %6, align 4, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %7, metadata !11697, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 0, metadata !11696, metadata !DIExpression()), !dbg !11698
  %8 = icmp ugt i32 %7, %1, !dbg !11701
  br i1 %8, label %17, label %9, !dbg !11702

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11697, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 %11, metadata !11696, metadata !DIExpression()), !dbg !11698
  %12 = add i32 %11, 1, !dbg !11703
  call void @llvm.dbg.value(metadata i32 %12, metadata !11696, metadata !DIExpression()), !dbg !11698
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !11705
  %14 = load i32, i32* %13, align 4, !dbg !11705
  %15 = add i32 %14, %10, !dbg !11706
  call void @llvm.dbg.value(metadata i32 %15, metadata !11697, metadata !DIExpression()), !dbg !11698
  %16 = icmp ugt i32 %15, %1, !dbg !11701
  br i1 %16, label %17, label %9, !dbg !11702, !llvm.loop !11707

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11698
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !11709
  %20 = load i32, i32* %19, align 4, !dbg !11709
  ret i32 %20, !dbg !11710
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11711 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11713, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 %1, metadata !11714, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i8* %0, metadata !11715, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 0, metadata !11716, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 0, metadata !11717, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 0, metadata !11718, metadata !DIExpression()), !dbg !11719
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11720
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11720
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11720
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11721
  %7 = load i32, i32* %6, align 4, !dbg !11721
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !11722
  %9 = load i32, i32* %8, align 4, !dbg !11722
  %10 = mul i32 %9, %7, !dbg !11723
  call void @llvm.dbg.value(metadata i32 %10, metadata !11717, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 0, metadata !11718, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 0, metadata !11716, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 %1, metadata !11714, metadata !DIExpression()), !dbg !11719
  %11 = icmp ult i32 %10, %1, !dbg !11724
  br i1 %11, label %12, label %30, !dbg !11725

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11726
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11718, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 %16, metadata !11717, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 %17, metadata !11716, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 %18, metadata !11714, metadata !DIExpression()), !dbg !11719
  %19 = icmp eq i32 %14, 0, !dbg !11725
  br i1 %19, label %36, label %20, !dbg !11727

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11728
  call void @llvm.dbg.value(metadata i32 %21, metadata !11718, metadata !DIExpression()), !dbg !11719
  %22 = sub i32 %18, %16, !dbg !11730
  call void @llvm.dbg.value(metadata i32 %22, metadata !11714, metadata !DIExpression()), !dbg !11719
  %23 = add i32 %17, 1, !dbg !11731
  call void @llvm.dbg.value(metadata i32 %23, metadata !11716, metadata !DIExpression()), !dbg !11719
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !11732
  %25 = load i32, i32* %24, align 4, !dbg !11732
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !11733
  %27 = load i32, i32* %26, align 4, !dbg !11733
  %28 = mul i32 %27, %25, !dbg !11734
  call void @llvm.dbg.value(metadata i32 %28, metadata !11717, metadata !DIExpression()), !dbg !11719
  %29 = icmp ugt i32 %22, %28, !dbg !11724
  br i1 %29, label %12, label %30, !dbg !11725, !llvm.loop !11735

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11737
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11719
  %34 = udiv i32 %32, %31, !dbg !11740
  %35 = add i32 %34, %33, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %35, metadata !11718, metadata !DIExpression()), !dbg !11719
  br label %36, !dbg !11742

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11743
  call void @llvm.dbg.value(metadata i32 %37, metadata !11718, metadata !DIExpression()), !dbg !11719
  ret i32 %37, !dbg !11744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !11745 {
  ret i32 134217728, !dbg !11746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !11747 {
  ret i32 3932160, !dbg !11748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !11749 {
  ret i32 0, !dbg !11750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !11751 {
  ret i32 262144, !dbg !11752
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11755, metadata !DIExpression()), !dbg !11757
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %2, metadata !11756, metadata !DIExpression()), !dbg !11757
  %3 = icmp eq i32 %2, 0, !dbg !11759
  br i1 %3, label %5, label %4, !dbg !11761

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11762
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.178, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.179, i32 0, i32 0)) #23, !dbg !11762
  unreachable, !dbg !11762

5:                                                ; preds = %1
  ret void, !dbg !11767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11768 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11772, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i32 %1, metadata !11773, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i8* %2, metadata !11774, metadata !DIExpression()), !dbg !11785
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11786
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11786
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11775, metadata !DIExpression()), !dbg !11787
  %7 = bitcast i32* %5 to i8*, !dbg !11788
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11788
  call void @llvm.dbg.value(metadata i32* %5, metadata !11784, metadata !DIExpression(DW_OP_deref)), !dbg !11785
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11789
  call void @llvm.va_start(i8* nonnull %6), !dbg !11790
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11791
  %10 = load i32, i32* %9, align 4, !dbg !11791
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11791
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11791
  call void @llvm.va_end(i8* nonnull %6), !dbg !11792
  %13 = load i32, i32* %5, align 4, !dbg !11793
  call void @llvm.dbg.value(metadata i32 %13, metadata !11784, metadata !DIExpression()), !dbg !11785
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11795
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11795
  ret void, !dbg !11795
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11796 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11798, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i32 %1, metadata !11799, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i8* %2, metadata !11800, metadata !DIExpression()), !dbg !11803
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11804
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11801, metadata !DIExpression()), !dbg !11805
  %7 = bitcast i32* %5 to i8*, !dbg !11806
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11806
  call void @llvm.dbg.value(metadata i32* %5, metadata !11802, metadata !DIExpression(DW_OP_deref)), !dbg !11803
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11807
  call void @llvm.va_start(i8* nonnull %6), !dbg !11808
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11809
  %10 = load i32, i32* %9, align 4, !dbg !11809
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11809
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11809
  call void @llvm.va_end(i8* nonnull %6), !dbg !11810
  %13 = load i32, i32* %5, align 4, !dbg !11811
  call void @llvm.dbg.value(metadata i32 %13, metadata !11802, metadata !DIExpression()), !dbg !11803
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11812
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11813
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11813
  ret void, !dbg !11813
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11814 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11816, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i32 %1, metadata !11817, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i8* %2, metadata !11818, metadata !DIExpression()), !dbg !11821
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11822
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11819, metadata !DIExpression()), !dbg !11823
  %7 = bitcast i32* %5 to i8*, !dbg !11824
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11824
  call void @llvm.dbg.value(metadata i32* %5, metadata !11820, metadata !DIExpression(DW_OP_deref)), !dbg !11821
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11825
  call void @llvm.va_start(i8* nonnull %6), !dbg !11826
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11827
  %10 = load i32, i32* %9, align 4, !dbg !11827
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11827
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11827
  call void @llvm.va_end(i8* nonnull %6), !dbg !11828
  %13 = load i32, i32* %5, align 4, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %13, metadata !11820, metadata !DIExpression()), !dbg !11821
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11831
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11831
  ret void, !dbg !11831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !11832 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11838, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 %1, metadata !11839, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i8* %2, metadata !11840, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i8* %3, metadata !11841, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 %4, metadata !11842, metadata !DIExpression()), !dbg !11843
  ret void, !dbg !11844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !11845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11847, metadata !DIExpression()), !dbg !11849
  %2 = shl i32 %0, 20, !dbg !11850
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11851
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !11852
  store volatile i32 %2, i32* %4, align 4, !dbg !11853
  %5 = load volatile i32, i32* %4, align 4, !dbg !11854
  %6 = or i32 %5, 65536, !dbg !11855
  store volatile i32 %6, i32* %4, align 4, !dbg !11856
  br label %7, !dbg !11857

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !11858
  %9 = and i32 %8, 1, !dbg !11859
  %10 = icmp eq i32 %9, 0, !dbg !11860
  br i1 %10, label %7, label %11, !dbg !11857, !llvm.loop !11861

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !11863
  %13 = lshr i32 %12, 8, !dbg !11864
  %14 = and i32 %13, 255, !dbg !11864
  call void @llvm.dbg.value(metadata i32 %14, metadata !11848, metadata !DIExpression()), !dbg !11849
  ret i32 %14, !dbg !11865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !11866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11870, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.value(metadata i32 %1, metadata !11871, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.value(metadata i32 %1, metadata !11871, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11872
  %3 = shl i32 %1, 24, !dbg !11873
  %4 = shl i32 %0, 20, !dbg !11874
  %5 = or i32 %4, %3, !dbg !11875
  %6 = or i32 %5, 131072, !dbg !11875
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11876
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !11877
  store volatile i32 %6, i32* %8, align 4, !dbg !11878
  %9 = load volatile i32, i32* %8, align 4, !dbg !11879
  %10 = or i32 %9, 65536, !dbg !11880
  store volatile i32 %10, i32* %8, align 4, !dbg !11881
  br label %11, !dbg !11882

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !11883
  %13 = and i32 %12, 1, !dbg !11884
  %14 = icmp eq i32 %13, 0, !dbg !11885
  br i1 %14, label %11, label %15, !dbg !11882, !llvm.loop !11886

15:                                               ; preds = %11
  ret void, !dbg !11888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !11889 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !11890
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !11891
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !11892
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !11893
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !11894
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !11895
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !11896
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !11897
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !11898
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !11899
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !11900
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !11901
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !11902
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !11903
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !11904
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !11905
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !11906
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !11907
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !11908
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !11909
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !11910
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !11911
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !11912
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !11913
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !11914
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !11915
  ret void, !dbg !11916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !11917 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11920
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11921
  store volatile i32 21553, i32* %2, align 4, !dbg !11922
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11923
  store volatile i32 20489, i32* %3, align 4, !dbg !11924
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11925
  store volatile i32 20550, i32* %4, align 4, !dbg !11926
  ret i32 0, !dbg !11927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !11928 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !11932, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i32 0, metadata !11930, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i32 16384, metadata !11931, metadata !DIExpression()), !dbg !11937
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11938
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !11939
  store volatile i32 0, i32* %2, align 4, !dbg !11940
  call void @llvm.dbg.value(metadata i32 0, metadata !11934, metadata !DIExpression()), !dbg !11937
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !11934, metadata !DIExpression()), !dbg !11937
  br label %5, !dbg !11941

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11934, metadata !DIExpression()), !dbg !11937
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !11933, metadata !DIExpression()), !dbg !11937
  br label %8, !dbg !11943

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11933, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i32 0, metadata !11935, metadata !DIExpression()), !dbg !11937
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !11947

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !11935, metadata !DIExpression()), !dbg !11937
  %12 = icmp eq i32 %30, 2, !dbg !11951
  br i1 %12, label %31, label %13, !dbg !11947, !llvm.loop !11953

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11935, metadata !DIExpression()), !dbg !11937
  store volatile i32 0, i32* %2, align 4, !dbg !11955
  store volatile i32 63, i32* %3, align 4, !dbg !11957
  %15 = load i32, i32* %10, align 4, !dbg !11958
  %16 = shl i32 %15, 16, !dbg !11959
  %17 = shl nuw nsw i32 %14, 13, !dbg !11960
  %18 = or i32 %17, %7, !dbg !11961
  %19 = or i32 %18, %16, !dbg !11962
  store volatile i32 %19, i32* %2, align 4, !dbg !11963
  %20 = load volatile i32, i32* %2, align 4, !dbg !11964
  %21 = or i32 %20, 805, !dbg !11964
  store volatile i32 %21, i32* %2, align 4, !dbg !11964
  br label %22, !dbg !11965

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !11966
  %24 = and i32 %23, 2, !dbg !11967
  %25 = icmp eq i32 %24, 0, !dbg !11968
  br i1 %25, label %22, label %26, !dbg !11965, !llvm.loop !11969

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !11971
  %28 = and i32 %27, 1, !dbg !11973
  %29 = icmp eq i32 %28, 0, !dbg !11974
  %30 = add nuw nsw i32 %14, 1, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %30, metadata !11935, metadata !DIExpression()), !dbg !11937
  br i1 %29, label %11, label %37, !dbg !11976

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %32, metadata !11933, metadata !DIExpression()), !dbg !11937
  %33 = icmp eq i32 %32, 2, !dbg !11978
  br i1 %33, label %34, label %8, !dbg !11943, !llvm.loop !11979

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %35, metadata !11934, metadata !DIExpression()), !dbg !11937
  %36 = icmp eq i32 %35, 2, !dbg !11982
  br i1 %36, label %37, label %5, !dbg !11941, !llvm.loop !11983

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !11937
  store volatile i32 0, i32* %2, align 4, !dbg !11937
  ret i32 %38, !dbg !11985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !11986 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !11987
  %2 = icmp ne i32 %1, 0, !dbg !11989
  %3 = sext i1 %2 to i32, !dbg !11990
  ret i32 %3, !dbg !11991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !11992 {
  call void @llvm.dbg.value(metadata i32 31, metadata !11994, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.value(metadata i32 0, metadata !11995, metadata !DIExpression()), !dbg !11996
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11997
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11998
  store volatile i32 0, i32* %2, align 4, !dbg !11999
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12000
  store volatile i32 0, i32* %3, align 4, !dbg !12001
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12002
  store volatile i32 0, i32* %4, align 4, !dbg !12003
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12004
  store volatile i32 0, i32* %5, align 4, !dbg !12005
  call void @llvm.dbg.value(metadata i32 31, metadata !11994, metadata !DIExpression()), !dbg !11996
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12006
  store volatile i32 522133279, i32* %6, align 4, !dbg !12010
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12011
  store volatile i32 522133279, i32* %7, align 4, !dbg !12012
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12013
  %9 = icmp eq i32 %8, 0, !dbg !12015
  call void @llvm.dbg.value(metadata i32 31, metadata !11994, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11996
  br i1 %9, label %36, label %10, !dbg !12016

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11994, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.value(metadata i32 %11, metadata !11994, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11996
  call void @llvm.dbg.value(metadata i32 %11, metadata !11994, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11996
  %12 = icmp eq i32 %11, 0, !dbg !12017
  br i1 %12, label %26, label %13, !dbg !12018, !llvm.loop !12019

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %14, metadata !11994, metadata !DIExpression()), !dbg !11996
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12022
  %16 = shl i32 %14, 24, !dbg !12023
  %17 = shl i32 %14, 16, !dbg !12024
  %18 = shl i32 %14, 8, !dbg !12025
  %19 = or i32 %17, %14, !dbg !12026
  %20 = or i32 %19, %16, !dbg !12027
  %21 = or i32 %20, %18, !dbg !12028
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !12006
  store volatile i32 %21, i32* %22, align 4, !dbg !12010
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !12011
  store volatile i32 %21, i32* %23, align 4, !dbg !12012
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12013
  %25 = icmp eq i32 %24, 0, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %14, metadata !11994, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11996
  br i1 %25, label %36, label %10, !dbg !12016

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !11995, metadata !DIExpression()), !dbg !11996
  %28 = shl nuw nsw i32 %27, 16, !dbg !12029
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12035
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !12036
  store volatile i32 %28, i32* %30, align 4, !dbg !12037
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12038
  %32 = icmp eq i32 %31, 0, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %27, metadata !11995, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11996
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %33, metadata !11995, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.value(metadata i32 %27, metadata !11995, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11996
  br i1 %35, label %36, label %26, !dbg !12041, !llvm.loop !12042

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !12045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !12046 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !12047
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12048
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12049
  store volatile i32 1, i32* %2, align 4, !dbg !12050
  br label %3, !dbg !12051

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12052
  %5 = and i32 %4, 2, !dbg !12053
  %6 = icmp eq i32 %5, 0, !dbg !12053
  br i1 %6, label %3, label %7, !dbg !12051, !llvm.loop !12054

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !12056
  br label %8, !dbg !12057

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !12058
  %10 = and i32 %9, 2, !dbg !12059
  %11 = icmp eq i32 %10, 0, !dbg !12059
  br i1 %11, label %12, label %8, !dbg !12057, !llvm.loop !12060

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !12062
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !12063
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !12064

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !12065
  %17 = and i32 %16, 1, !dbg !12066
  %18 = icmp eq i32 %17, 0, !dbg !12067
  br i1 %18, label %15, label %19, !dbg !12064, !llvm.loop !12068

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !12070
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !12071
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !12072

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !12073
  %24 = and i32 %23, 1, !dbg !12074
  %25 = icmp eq i32 %24, 0, !dbg !12075
  br i1 %25, label %22, label %26, !dbg !12072, !llvm.loop !12076

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !12078
  %28 = icmp eq i32 %27, 9507, !dbg !12080
  br i1 %28, label %29, label %37, !dbg !12081

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !12082
  %31 = and i32 %30, 15, !dbg !12085
  %32 = icmp eq i32 %31, 2, !dbg !12086
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !12087
  %34 = and i32 %33, -128, !dbg !12087
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !12087
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !12087
  br label %37, !dbg !12088

37:                                               ; preds = %29, %26
  ret void, !dbg !12088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12089 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !12092
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !12093
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !12094
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !12095
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !12096
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !12097
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !12098
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !12099
  ret i8 0, !dbg !12100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12101 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !12102
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12103
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !12104
  store volatile i32 %1, i32* %3, align 4, !dbg !12105
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !12106
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !12107
  store volatile i32 %4, i32* %5, align 4, !dbg !12108
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !12109
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !12110
  store volatile i32 %6, i32* %7, align 4, !dbg !12111
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !12112
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !12113
  store volatile i32 %8, i32* %9, align 4, !dbg !12114
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !12115
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !12116
  store volatile i32 %10, i32* %11, align 4, !dbg !12117
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !12118
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !12119
  store volatile i32 %12, i32* %13, align 4, !dbg !12120
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !12121
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !12122
  store volatile i32 %14, i32* %15, align 4, !dbg !12123
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !12124
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !12125
  store volatile i32 %16, i32* %17, align 4, !dbg !12126
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !12127
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !12128
  store volatile i32 %18, i32* %19, align 4, !dbg !12129
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !12130
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !12131
  store volatile i32 %20, i32* %21, align 4, !dbg !12132
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !12133
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !12134
  store volatile i32 %22, i32* %23, align 4, !dbg !12135
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !12136
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !12137
  store volatile i32 %24, i32* %25, align 4, !dbg !12138
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !12139
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !12140
  store volatile i32 %26, i32* %27, align 4, !dbg !12141
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !12142
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12143
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !12144
  store volatile i32 806289408, i32* %29, align 4, !dbg !12145
  br label %30, !dbg !12146

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !12147
  %32 = and i32 %31, 128, !dbg !12148
  %33 = icmp eq i32 %32, 0, !dbg !12148
  br i1 %33, label %30, label %34, !dbg !12146, !llvm.loop !12149

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !12151
  br label %35, !dbg !12152

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !12153
  %37 = and i32 %36, 128, !dbg !12154
  %38 = icmp eq i32 %37, 0, !dbg !12154
  br i1 %38, label %39, label %35, !dbg !12152, !llvm.loop !12155

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !12157
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !12158
  ret i8 0, !dbg !12159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !12160 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12161
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12162
  %3 = load volatile i32, i32* %2, align 4, !dbg !12162
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12163
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12164
  %5 = load volatile i32, i32* %4, align 4, !dbg !12164
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12165
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12166
  %7 = load volatile i32, i32* %6, align 4, !dbg !12166
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12167
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12168
  %9 = load volatile i32, i32* %8, align 4, !dbg !12168
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12169
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12170
  %11 = load volatile i32, i32* %10, align 4, !dbg !12170
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12171
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12172
  %13 = load volatile i32, i32* %12, align 4, !dbg !12172
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12173
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12174
  %15 = load volatile i32, i32* %14, align 4, !dbg !12174
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12175
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12176
  %17 = load volatile i32, i32* %16, align 4, !dbg !12176
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12177
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12178
  %19 = load volatile i32, i32* %18, align 4, !dbg !12178
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12179
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12180
  %21 = load volatile i32, i32* %20, align 4, !dbg !12180
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12181
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12182
  %23 = load volatile i32, i32* %22, align 4, !dbg !12182
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12183
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12184
  %25 = load volatile i32, i32* %24, align 4, !dbg !12184
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12185
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12186
  %27 = load volatile i32, i32* %26, align 4, !dbg !12186
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12187
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12188
  %29 = load volatile i32, i32* %28, align 4, !dbg !12188
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12189
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12190
  %31 = load volatile i32, i32* %30, align 4, !dbg !12190
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12191
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12192
  %33 = load volatile i32, i32* %32, align 4, !dbg !12192
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12193
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12194
  %35 = load volatile i32, i32* %34, align 4, !dbg !12194
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12195
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12196
  %37 = load volatile i32, i32* %36, align 4, !dbg !12196
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12197
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12198
  %39 = load volatile i32, i32* %38, align 4, !dbg !12198
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12199
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12200
  %41 = load volatile i32, i32* %40, align 4, !dbg !12200
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12201
  ret void, !dbg !12202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !12203 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12204

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12205
  %5 = and i32 %4, 17, !dbg !12206
  %6 = icmp eq i32 %5, 17, !dbg !12207
  br i1 %6, label %7, label %3, !dbg !12204, !llvm.loop !12208

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12210
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12211
  store volatile i32 %8, i32* %9, align 4, !dbg !12212
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12213
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12214
  store volatile i32 %10, i32* %11, align 4, !dbg !12215
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12216
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12217
  store volatile i32 %12, i32* %13, align 4, !dbg !12218
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12219
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12220
  store volatile i32 %14, i32* %15, align 4, !dbg !12221
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12222
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12223
  store volatile i32 %16, i32* %17, align 4, !dbg !12224
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12225
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12226
  store volatile i32 %18, i32* %19, align 4, !dbg !12227
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12228
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12229
  store volatile i32 %20, i32* %21, align 4, !dbg !12230
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12231
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12232
  store volatile i32 %22, i32* %23, align 4, !dbg !12233
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12234
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12235
  store volatile i32 %24, i32* %25, align 4, !dbg !12236
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12237
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12238
  store volatile i32 %26, i32* %27, align 4, !dbg !12239
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12240
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12241
  store volatile i32 %28, i32* %29, align 4, !dbg !12242
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12243
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12244
  store volatile i32 %30, i32* %31, align 4, !dbg !12245
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12246
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12247
  store volatile i32 %32, i32* %33, align 4, !dbg !12248
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12249
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12250
  store volatile i32 %34, i32* %35, align 4, !dbg !12251
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12252
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12253
  store volatile i32 %36, i32* %37, align 4, !dbg !12254
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12255
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12256
  store volatile i32 %38, i32* %39, align 4, !dbg !12257
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12258
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12259
  store volatile i32 %40, i32* %41, align 4, !dbg !12260
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12261
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12262
  store volatile i32 %42, i32* %43, align 4, !dbg !12263
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12264
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12265
  store volatile i32 %44, i32* %45, align 4, !dbg !12266
  ret void, !dbg !12267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !12268 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12269
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12270
  %3 = load volatile i32, i32* %2, align 4, !dbg !12270
  %4 = and i32 %3, -2097185, !dbg !12271
  store volatile i32 %4, i32* %2, align 4, !dbg !12272
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12273
  store volatile i32 1, i32* %5, align 4, !dbg !12274
  br label %6, !dbg !12275

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !12276
  %8 = and i32 %7, 2, !dbg !12277
  %9 = icmp eq i32 %8, 0, !dbg !12277
  br i1 %9, label %6, label %10, !dbg !12275, !llvm.loop !12278

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !12280
  br label %11, !dbg !12281

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !12282
  %13 = and i32 %12, 2, !dbg !12283
  %14 = icmp eq i32 %13, 0, !dbg !12283
  br i1 %14, label %15, label %11, !dbg !12281, !llvm.loop !12284

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !12286
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12287
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !12288
  store volatile i32 806289408, i32* %17, align 4, !dbg !12289
  br label %18, !dbg !12290

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12291
  %20 = and i32 %19, 128, !dbg !12292
  %21 = icmp eq i32 %20, 0, !dbg !12292
  br i1 %21, label %18, label %22, !dbg !12290, !llvm.loop !12293

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !12295
  br label %23, !dbg !12296

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !12297
  %25 = and i32 %24, 128, !dbg !12298
  %26 = icmp eq i32 %25, 0, !dbg !12298
  br i1 %26, label %27, label %23, !dbg !12296, !llvm.loop !12299

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !12301
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12302
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !12303
  store volatile i32 %28, i32* %29, align 4, !dbg !12304
  ret void, !dbg !12305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !12306 {
  tail call void @EMI_Setting_Save() #21, !dbg !12307
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12308

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12309
  %5 = and i32 %4, 17, !dbg !12310
  %6 = icmp eq i32 %5, 17, !dbg !12311
  br i1 %6, label %7, label %3, !dbg !12308, !llvm.loop !12312

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !12314
  %9 = or i32 %8, 1792, !dbg !12315
  store volatile i32 %9, i32* %2, align 4, !dbg !12316
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !12317
  store volatile i32 -261685248, i32* %10, align 4, !dbg !12318
  br label %11, !dbg !12319

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !12320
  %13 = and i32 %12, 1, !dbg !12321
  %14 = icmp eq i32 %13, 0, !dbg !12322
  br i1 %14, label %11, label %15, !dbg !12319, !llvm.loop !12323

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12325
  store volatile i32 0, i32* %16, align 4, !dbg !12326
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !12327

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12328
  %20 = and i32 %19, 16, !dbg !12329
  %21 = icmp eq i32 %20, 0, !dbg !12329
  br i1 %21, label %18, label %22, !dbg !12327, !llvm.loop !12330

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12332
  %24 = load volatile i32, i32* %23, align 4, !dbg !12332
  %25 = or i32 %24, 2097184, !dbg !12333
  store volatile i32 %25, i32* %23, align 4, !dbg !12334
  ret void, !dbg !12335
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !12336 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12341, metadata !DIExpression()), !dbg !12343
  %3 = bitcast i32* %2 to i8*, !dbg !12344
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12344
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12342, metadata !DIExpression()), !dbg !12345
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !12346

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12347
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !12350
  store volatile i32 0, i32* %6, align 4, !dbg !12351
  store volatile i32 806289408, i32* %6, align 4, !dbg !12352
  br label %7, !dbg !12353

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !12354
  %9 = and i32 %8, 128, !dbg !12355
  %10 = icmp eq i32 %9, 0, !dbg !12355
  br i1 %10, label %7, label %11, !dbg !12353, !llvm.loop !12356

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !12358
  br label %12, !dbg !12359

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !12360
  %14 = and i32 %13, 128, !dbg !12361
  %15 = icmp eq i32 %14, 0, !dbg !12361
  br i1 %15, label %16, label %12, !dbg !12359, !llvm.loop !12362

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !12364
  store volatile i32 0, i32* %2, align 4, !dbg !12365
  %17 = load volatile i32, i32* %2, align 4, !dbg !12367
  %18 = icmp ult i32 %17, 255, !dbg !12369
  br i1 %18, label %19, label %25, !dbg !12370

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !12371
  %21 = add i32 %20, 1, !dbg !12371
  store volatile i32 %21, i32* %2, align 4, !dbg !12371
  %22 = load volatile i32, i32* %2, align 4, !dbg !12367
  %23 = icmp ult i32 %22, 255, !dbg !12369
  br i1 %23, label %19, label %25, !dbg !12370, !llvm.loop !12372

24:                                               ; preds = %1
  br label %25, !dbg !12374

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !12343
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12377
  ret i32 %26, !dbg !12377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12378 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12379
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12380
  %3 = load volatile i32, i32* %2, align 4, !dbg !12380
  %4 = or i32 %3, 1792, !dbg !12381
  store volatile i32 %4, i32* %2, align 4, !dbg !12382
  ret void, !dbg !12383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12384 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12385
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12386
  %3 = load volatile i32, i32* %2, align 4, !dbg !12386
  %4 = and i32 %3, -1793, !dbg !12387
  store volatile i32 %4, i32* %2, align 4, !dbg !12388
  ret void, !dbg !12389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !12390 {
  ret i1 false, !dbg !12391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !12392 {
  ret i1 false, !dbg !12393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !12394 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !12395
  ret void, !dbg !12398
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !12399 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !12400
  ret void, !dbg !12403
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12404 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !12405
  ret void, !dbg !12408
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12409 {
  tail call void @peri_26m_dcxo() #20, !dbg !12410
  ret void, !dbg !12413
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !12414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12418, metadata !DIExpression()), !dbg !12419
  %2 = trunc i32 %0 to i8, !dbg !12420
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !12421
  ret i32 %0, !dbg !12422
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !12423 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !12424
  tail call void @SystemCoreClockUpdate() #20, !dbg !12425
  tail call fastcc void @prvSetupHardware() #21, !dbg !12426
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !12427, !srcloc !12430
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !12431, !srcloc !12434
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0)) #20, !dbg !12435
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.191, i32 0, i32 0)) #20, !dbg !12436
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0)) #20, !dbg !12437
  tail call fastcc void @spim_send_data_polling_example() #21, !dbg !12438
  br label %4, !dbg !12439

4:                                                ; preds = %0, %4
  br label %4, !dbg !12439, !llvm.loop !12440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !12442 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !12443
  ret void, !dbg !12444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !12445 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !12446
  %1 = tail call i32 @hal_flash_init() #20, !dbg !12447
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @spim_send_data_polling_example() unnamed_addr #0 !dbg !12450 {
  %1 = alloca i16, align 2
  %2 = alloca %struct.hal_spi_master_config_t, align 4
  %3 = bitcast i16* %1 to i8*, !dbg !12463
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #22, !dbg !12463
  call void @llvm.dbg.value(metadata i16 21886, metadata !12452, metadata !DIExpression()), !dbg !12464
  store i16 21886, i16* %1, align 2, !dbg !12465
  %4 = bitcast %struct.hal_spi_master_config_t* %2 to i8*, !dbg !12466
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !12466
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_config_t* %2, metadata !12454, metadata !DIExpression()), !dbg !12467
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.192, i32 0, i32 0)) #20, !dbg !12468
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.193, i32 0, i32 0)) #20, !dbg !12469
  %7 = tail call i32 @hal_gpio_init(i32 noundef 25) #20, !dbg !12470
  %8 = tail call i32 @hal_gpio_init(i32 noundef 26) #20, !dbg !12471
  %9 = tail call i32 @hal_gpio_init(i32 noundef 27) #20, !dbg !12472
  %10 = tail call i32 @hal_gpio_init(i32 noundef 28) #20, !dbg !12473
  %11 = tail call i32 @hal_pinmux_set_function(i32 noundef 25, i8 noundef zeroext 5) #20, !dbg !12474
  %12 = tail call i32 @hal_pinmux_set_function(i32 noundef 26, i8 noundef zeroext 5) #20, !dbg !12475
  %13 = tail call i32 @hal_pinmux_set_function(i32 noundef 27, i8 noundef zeroext 5) #20, !dbg !12476
  %14 = tail call i32 @hal_pinmux_set_function(i32 noundef 28, i8 noundef zeroext 5) #20, !dbg !12477
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.194, i32 0, i32 0)) #20, !dbg !12478
  %16 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 2, !dbg !12479
  store i32 0, i32* %16, align 4, !dbg !12480
  %17 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 0, !dbg !12481
  store i32 1000000, i32* %17, align 4, !dbg !12482
  %18 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 4, !dbg !12483
  store i32 0, i32* %18, align 4, !dbg !12484
  %19 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 3, !dbg !12485
  store i32 0, i32* %19, align 4, !dbg !12486
  %20 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 1, !dbg !12487
  store i32 0, i32* %20, align 4, !dbg !12488
  %21 = call i32 @hal_spi_master_init(i32 noundef 3, %struct.hal_spi_master_config_t* noundef nonnull %2) #20, !dbg !12489
  %22 = icmp eq i32 %21, 0, !dbg !12491
  br i1 %22, label %23, label %35, !dbg !12492

23:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i16* %1, metadata !12452, metadata !DIExpression(DW_OP_deref)), !dbg !12464
  %24 = call i32 @hal_spi_master_send_polling(i32 noundef 3, i8* noundef nonnull %3, i32 noundef 2) #20, !dbg !12493
  %25 = icmp eq i32 %24, 0, !dbg !12495
  br i1 %25, label %26, label %35, !dbg !12496

26:                                               ; preds = %23
  %27 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.195, i32 0, i32 0)) #20, !dbg !12497
  %28 = call i32 @hal_spi_master_deinit(i32 noundef 3) #20, !dbg !12498
  %29 = icmp eq i32 %28, 0, !dbg !12500
  br i1 %29, label %30, label %35, !dbg !12501

30:                                               ; preds = %26
  %31 = call i32 @hal_gpio_deinit(i32 noundef 25) #20, !dbg !12502
  %32 = call i32 @hal_gpio_deinit(i32 noundef 26) #20, !dbg !12503
  %33 = call i32 @hal_gpio_deinit(i32 noundef 27) #20, !dbg !12504
  %34 = call i32 @hal_gpio_deinit(i32 noundef 28) #20, !dbg !12505
  br label %35, !dbg !12506

35:                                               ; preds = %26, %23, %0, %30
  %36 = phi i8* [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i32 0, i32 0), %30 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5.196, i32 0, i32 0), %0 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.197, i32 0, i32 0), %23 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), %26 ]
  %37 = call i32 (i8*, ...) @printf(i8* noundef %36) #20, !dbg !12464
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !12506
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #22, !dbg !12506
  ret void, !dbg !12506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !12507 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12517
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12517
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !12509, metadata !DIExpression()), !dbg !12518
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !12519
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !12520
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !12521
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !12522
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12523
  store i32 9, i32* %7, align 4, !dbg !12524
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12525
  store i32 3, i32* %8, align 4, !dbg !12526
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12527
  store i32 0, i32* %9, align 4, !dbg !12528
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12529
  store i32 0, i32* %10, align 4, !dbg !12530
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !12531
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12532
  ret void, !dbg !12532
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !12533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12535, metadata !DIExpression()), !dbg !12536
  ret i32 0, !dbg !12537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !12538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12588, metadata !DIExpression()), !dbg !12590
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !12589, metadata !DIExpression()), !dbg !12590
  ret i32 0, !dbg !12591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !12592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12594, metadata !DIExpression()), !dbg !12595
  ret i32 1, !dbg !12596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32 %1, metadata !12602, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32 %2, metadata !12603, metadata !DIExpression()), !dbg !12604
  ret i32 0, !dbg !12605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12610, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 %1, metadata !12611, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 %2, metadata !12612, metadata !DIExpression()), !dbg !12613
  ret i32 -1, !dbg !12614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12619, metadata !DIExpression()), !dbg !12622
  call void @llvm.dbg.value(metadata i8* %1, metadata !12620, metadata !DIExpression()), !dbg !12622
  call void @llvm.dbg.value(metadata i32 %2, metadata !12621, metadata !DIExpression()), !dbg !12622
  ret i32 0, !dbg !12623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !12624 {
  ret i32 1, !dbg !12625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !12626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12630, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.value(metadata i32 %1, metadata !12631, metadata !DIExpression()), !dbg !12632
  ret i32 -1, !dbg !12633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !12634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12636, metadata !DIExpression()), !dbg !12637
  ret i32 -1, !dbg !12638
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2311 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2509, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata i32 %1, metadata !2510, metadata !DIExpression()), !dbg !12639
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !12640, !srcloc !12641
  call void @llvm.dbg.value(metadata i8* %3, metadata !2512, metadata !DIExpression()), !dbg !12639
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !12642
  %5 = icmp eq i8* %4, null, !dbg !12644
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !12645
  call void @llvm.dbg.value(metadata i8* %6, metadata !2511, metadata !DIExpression()), !dbg !12639
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !12646
  %8 = icmp ult i8* %3, %7, !dbg !12648
  %9 = xor i1 %8, true, !dbg !12649
  %10 = or i1 %5, %9, !dbg !12649
  br i1 %10, label %11, label %13, !dbg !12649

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !12650
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !12649
  br label %13, !dbg !12649

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !12650
  ret i8* %14, !dbg !12649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !12651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12653, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i8* %1, metadata !12654, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32 %2, metadata !12655, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32 0, metadata !12656, metadata !DIExpression()), !dbg !12657
  %4 = icmp sgt i32 %2, 0, !dbg !12658
  br i1 %4, label %5, label %14, !dbg !12661

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12656, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i8* %7, metadata !12654, metadata !DIExpression()), !dbg !12657
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !12662
  call void @llvm.dbg.value(metadata i8* %8, metadata !12654, metadata !DIExpression()), !dbg !12657
  %9 = load i8, i8* %7, align 1, !dbg !12664
  %10 = zext i8 %9 to i32, !dbg !12664
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !12665
  %12 = add nuw nsw i32 %6, 1, !dbg !12666
  call void @llvm.dbg.value(metadata i32 %12, metadata !12656, metadata !DIExpression()), !dbg !12657
  %13 = icmp eq i32 %12, %2, !dbg !12658
  br i1 %13, label %14, label %5, !dbg !12661, !llvm.loop !12667

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !12669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !12670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12672, metadata !DIExpression()), !dbg !12674
  %2 = add i32 %0, -1, !dbg !12675
  %3 = icmp ugt i32 %2, 16777215, !dbg !12677
  br i1 %3, label %8, label %4, !dbg !12678

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12679
  call void @llvm.dbg.value(metadata i32 %5, metadata !12673, metadata !DIExpression()), !dbg !12674
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12680
  %7 = and i32 %6, -4, !dbg !12680
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12680
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12681
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12682
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12683
  br label %8, !dbg !12684

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !12674
  ret i32 %9, !dbg !12685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !12686 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !12687
  ret void, !dbg !12688
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !12689 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !12690
  ret i32 %1, !dbg !12691
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !12692 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !12695
  %2 = lshr i32 %1, 3, !dbg !12696
  %3 = and i32 %2, 15, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %3, metadata !12694, metadata !DIExpression()), !dbg !12697
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !12698

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !12699

5:                                                ; preds = %0, %0
  br label %9, !dbg !12701

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !12702
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12703
  br label %15, !dbg !12705

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !12702
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12703
  %12 = and i32 %11, 1024, !dbg !12706
  %13 = icmp eq i32 %12, 0, !dbg !12706
  br i1 %13, label %15, label %14, !dbg !12705

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !12707
  br label %15, !dbg !12709

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !12710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !12711 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12712
  %2 = or i32 %1, 15728640, !dbg !12712
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12712
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !12713
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12714
  %4 = or i32 %3, 458752, !dbg !12714
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12714
  ret void, !dbg !12715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !12716 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12717
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12718
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12719
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !12720
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !12721
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !12722
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12723
  ret void, !dbg !12724
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2637, !94, !345, !628, !2663, !783, !868, !982, !1026, !2667, !1116, !1211, !1536, !2713, !1624, !1635, !1993, !2054, !2715, !2134, !2299, !2717, !2504, !2515, !2625}
!llvm.ident = !{!2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720, !2720}
!llvm.module.flags = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !345, file: !346, line: 64, type: !446, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !441, globals: !445, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!347 = !{!348, !400, !407, !411, !417, !421, !430, !435}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!350 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!351 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!352 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!353 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!354 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!355 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!356 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!357 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!358 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!359 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!360 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!361 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!362 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!363 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!364 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!365 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!366 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!367 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!368 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!369 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!370 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!371 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!372 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!373 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!374 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!375 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!376 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!377 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!378 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!379 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!380 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!381 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!382 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!383 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!384 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!385 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!386 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!387 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!388 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!389 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!390 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!391 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!392 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!393 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!394 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!395 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!396 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!397 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!398 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!399 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 224, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!404 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!405 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!406 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 210, baseType: !18, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!410 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 233, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!414 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!415 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!416 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 217, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429}
!423 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!424 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!425 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!426 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!427 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!428 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!429 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!433 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!434 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 242, baseType: !18, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!438 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!439 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!440 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!441 = !{!88, !442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !401, line: 213, baseType: !407)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !401, line: 220, baseType: !417)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !401, line: 247, baseType: !435)
!445 = !{!343}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !449)
!449 = !{!450, !467, !471, !480, !481, !490, !491, !500, !501, !511, !512, !521, !522, !531, !532, !541, !542, !551, !555, !564, !565, !574, !575, !584, !593, !594, !605, !609, !618, !619}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !448, file: !56, line: 1523, baseType: !451, size: 256)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !465)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !453, file: !56, line: 1396, baseType: !60, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !453, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !453, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !56, line: 1399, baseType: !459, size: 32, offset: 96)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !463)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !462)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !{!464}
!464 = !DISubrange(count: 4)
!465 = !{!466}
!466 = !DISubrange(count: 2)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !448, file: !56, line: 1524, baseType: !468, size: 1792, offset: 256)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1792, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 224)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !448, file: !56, line: 1525, baseType: !472, size: 256, offset: 2048)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !465)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !474, file: !56, line: 1405, baseType: !60, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !474, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !474, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !474, file: !56, line: 1408, baseType: !459, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !448, file: !56, line: 1526, baseType: !468, size: 1792, offset: 2304)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !448, file: !56, line: 1527, baseType: !482, size: 256, offset: 4096)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !465)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !484, file: !56, line: 1413, baseType: !60, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !484, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !484, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !484, file: !56, line: 1416, baseType: !459, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !448, file: !56, line: 1528, baseType: !468, size: 1792, offset: 4352)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !448, file: !56, line: 1529, baseType: !492, size: 256, offset: 6144)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !465)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !495)
!495 = !{!496, !497, !498, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !494, file: !56, line: 1422, baseType: !60, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !494, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !494, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !494, file: !56, line: 1425, baseType: !459, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !448, file: !56, line: 1530, baseType: !468, size: 1792, offset: 6400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !448, file: !56, line: 1531, baseType: !502, size: 256, offset: 8192)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 256, elements: !465)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !504, file: !56, line: 1430, baseType: !60, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !504, file: !56, line: 1431, baseType: !508, size: 96, offset: 32)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 12)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !448, file: !56, line: 1532, baseType: !468, size: 1792, offset: 8448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !448, file: !56, line: 1533, baseType: !513, size: 256, offset: 10240)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !465)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !515, file: !56, line: 1436, baseType: !60, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !515, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !515, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !56, line: 1439, baseType: !459, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !448, file: !56, line: 1534, baseType: !468, size: 1792, offset: 10496)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !448, file: !56, line: 1535, baseType: !523, size: 256, offset: 12288)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 256, elements: !465)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !525, file: !56, line: 1444, baseType: !60, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !525, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !525, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !525, file: !56, line: 1447, baseType: !459, size: 32, offset: 96)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !448, file: !56, line: 1536, baseType: !468, size: 1792, offset: 12544)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !448, file: !56, line: 1537, baseType: !533, size: 256, offset: 14336)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 256, elements: !465)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !535, file: !56, line: 1451, baseType: !60, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !535, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !535, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !535, file: !56, line: 1454, baseType: !459, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !448, file: !56, line: 1538, baseType: !468, size: 1792, offset: 14592)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !448, file: !56, line: 1539, baseType: !543, size: 512, offset: 16384)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !463)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !545, file: !56, line: 1459, baseType: !60, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !545, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !545, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !545, file: !56, line: 1462, baseType: !459, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !448, file: !56, line: 1540, baseType: !552, size: 1536, offset: 16896)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1536, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !448, file: !56, line: 1541, baseType: !556, size: 256, offset: 18432)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !465)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !558, file: !56, line: 1467, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !558, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !558, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1470, baseType: !459, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !448, file: !56, line: 1542, baseType: !468, size: 1792, offset: 18688)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !448, file: !56, line: 1543, baseType: !566, size: 256, offset: 20480)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !465)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !568, file: !56, line: 1476, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !568, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !568, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1479, baseType: !459, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !448, file: !56, line: 1544, baseType: !468, size: 1792, offset: 20736)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !448, file: !56, line: 1545, baseType: !576, size: 256, offset: 22528)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !465)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !578, file: !56, line: 1485, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !578, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !578, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1488, baseType: !459, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !448, file: !56, line: 1546, baseType: !585, size: 256, offset: 22784)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !465)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !587, file: !56, line: 1493, baseType: !60, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !587, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !587, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !56, line: 1496, baseType: !459, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !448, file: !56, line: 1547, baseType: !552, size: 1536, offset: 23040)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !448, file: !56, line: 1548, baseType: !595, size: 896, offset: 24576)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 896, elements: !603)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !597, file: !56, line: 1501, baseType: !60, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !597, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !597, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !56, line: 1504, baseType: !459, size: 32, offset: 96)
!603 = !{!604}
!604 = !DISubrange(count: 7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !448, file: !56, line: 1549, baseType: !606, size: 1152, offset: 25472)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1152, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !448, file: !56, line: 1550, baseType: !610, size: 512, offset: 26624)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 512, elements: !463)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !613)
!613 = !{!614, !615, !616, !617}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !612, file: !56, line: 1509, baseType: !60, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !612, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !612, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !612, file: !56, line: 1512, baseType: !459, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !448, file: !56, line: 1551, baseType: !552, size: 1536, offset: 27136)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !448, file: !56, line: 1552, baseType: !620, size: 768, offset: 28672)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 768, elements: !314)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !622, file: !56, line: 1517, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1518, baseType: !508, size: 96, offset: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !628, file: !629, line: 101, type: !777, isLocal: true, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !727, globals: !736, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!630 = !{!631, !638, !653, !659, !665, !670, !677, !693, !699, !703, !708, !715, !723}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636, !637}
!633 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!637 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 189, baseType: !18, size: 32, elements: !640)
!639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!641 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!642 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!643 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!644 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!645 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!646 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!647 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!648 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!649 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!650 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!651 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!652 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 355, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!657 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!658 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 206, baseType: !7, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!662 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!663 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!664 = !DIEnumerator(name: "VDMA_OK", value: 0)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !629, line: 65, baseType: !18, size: 32, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!668 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!669 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 345, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!673 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!674 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!675 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 302, baseType: !18, size: 32, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!679 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!680 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!681 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!682 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!683 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!684 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!685 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!686 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!687 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!688 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!689 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 321, baseType: !18, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698}
!695 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!696 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!698 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 330, baseType: !18, size: 32, elements: !700)
!700 = !{!701, !702}
!701 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!702 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 337, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!706 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!707 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !709, line: 101, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!710 = !{!711, !712, !713, !714}
!711 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!712 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!713 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!714 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !716, line: 152, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!717 = !{!718, !719, !720, !721, !722}
!718 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!719 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!720 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!721 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 222, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!726 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!727 = !{!88, !61, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !731)
!730 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !731, file: !730, line: 94, baseType: !91, size: 8)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !731, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !631)
!736 = !{!626, !737, !750, !755, !769, !775}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !628, file: !629, line: 102, type: !739, isLocal: true, isDefinition: true)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !463)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !629, line: 74, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 71, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !629, line: 72, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !654, line: 410, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !748, !88}
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !654, line: 359, baseType: !653)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !741, file: !629, line: 73, baseType: !88, size: 32, offset: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !628, file: !629, line: 103, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !628, file: !629, line: 104, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !463)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !654, line: 390, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 382, size: 224, elements: !760)
!760 = !{!761, !763, !764, !765, !766, !767, !768}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !759, file: !654, line: 383, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !759, file: !654, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !759, file: !654, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !759, file: !654, line: 386, baseType: !762, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !759, file: !654, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !759, file: !654, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !759, file: !654, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !628, file: !629, line: 105, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 416, elements: !773)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !628, file: !629, line: 90, type: !91, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !463)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !629, line: 69, baseType: !665)
!780 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !783, file: !784, line: 53, type: !864, isLocal: false, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !785, retainedTypes: !796, globals: !852, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!785 = !{!97, !168, !638, !631, !786}
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 46, baseType: !18, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795}
!788 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!789 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!790 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!791 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!792 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!793 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!794 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!795 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !800)
!800 = !{!801, !807, !812, !818, !819, !824, !829, !830, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !799, file: !56, line: 547, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 543, size: 32, elements: !803)
!803 = !{!804, !805, !806}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !802, file: !56, line: 544, baseType: !272, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !802, file: !56, line: 545, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !802, file: !56, line: 546, baseType: !60, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !799, file: !56, line: 551, baseType: !808, size: 32, offset: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 548, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !808, file: !56, line: 549, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !808, file: !56, line: 550, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !799, file: !56, line: 556, baseType: !813, size: 32, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 552, size: 32, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !813, file: !56, line: 553, baseType: !272, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !813, file: !56, line: 554, baseType: !60, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !813, file: !56, line: 555, baseType: !60, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !799, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !799, file: !56, line: 561, baseType: !820, size: 32, offset: 128)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 558, size: 32, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !820, file: !56, line: 559, baseType: !60, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !820, file: !56, line: 560, baseType: !60, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !799, file: !56, line: 565, baseType: !825, size: 32, offset: 160)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 562, size: 32, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !825, file: !56, line: 563, baseType: !272, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !825, file: !56, line: 564, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !799, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !799, file: !56, line: 570, baseType: !831, size: 32, offset: 224)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 567, size: 32, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !831, file: !56, line: 568, baseType: !60, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !831, file: !56, line: 569, baseType: !60, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !799, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !799, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !799, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !799, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !799, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !799, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !799, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !799, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !799, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !799, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !799, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !799, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !799, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !799, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !799, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !799, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !799, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!852 = !{!781, !853, !858}
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !783, file: !784, line: 54, type: !855, isLocal: false, isDefinition: true)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !463)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !783, file: !784, line: 55, type: !860, isLocal: false, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 128, elements: !463)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !463)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "g_spi_master_status", scope: !868, file: !869, line: 55, type: !978, isLocal: true, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !870, retainedTypes: !951, globals: !953, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_spi_master.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!870 = !{!871, !879, !886, !891, !895, !899, !708, !903, !907, !911, !921, !925, !929, !933, !938, !942, !946, !97, !168}
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 550, baseType: !7, size: 32, elements: !873)
!872 = !DIFile(filename: "../../../../../driver/chip/inc/hal_spi_master.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR", value: -4)
!875 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR_BUSY", value: -3)
!876 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR_PORT", value: -2)
!877 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_INVALID_PARAMETER", value: -1)
!878 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_OK", value: 0)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 580, baseType: !18, size: 32, elements: !880)
!880 = !{!881, !882, !883, !884, !885}
!881 = !DIEnumerator(name: "HAL_SPI_MASTER_0", value: 0)
!882 = !DIEnumerator(name: "HAL_SPI_MASTER_1", value: 1)
!883 = !DIEnumerator(name: "HAL_SPI_MASTER_2", value: 2)
!884 = !DIEnumerator(name: "HAL_SPI_MASTER_3", value: 3)
!885 = !DIEnumerator(name: "HAL_SPI_MASTER_MAX", value: 4)
!886 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 590, baseType: !18, size: 32, elements: !887)
!887 = !{!888, !889, !890}
!888 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_0", value: 0)
!889 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_1", value: 1)
!890 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_MAX", value: 2)
!891 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 611, baseType: !18, size: 32, elements: !892)
!892 = !{!893, !894}
!893 = !DIEnumerator(name: "HAL_SPI_MASTER_LSB_FIRST", value: 0)
!894 = !DIEnumerator(name: "HAL_SPI_MASTER_MSB_FIRST", value: 1)
!895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 597, baseType: !18, size: 32, elements: !896)
!896 = !{!897, !898}
!897 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_POLARITY0", value: 0)
!898 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_POLARITY1", value: 1)
!899 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 604, baseType: !18, size: 32, elements: !900)
!900 = !{!901, !902}
!901 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_PHASE0", value: 0)
!902 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_PHASE1", value: 1)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 489, baseType: !18, size: 32, elements: !904)
!904 = !{!905, !906}
!905 = !DIEnumerator(name: "HAL_SPI_MASTER_LITTLE_ENDIAN", value: 0)
!906 = !DIEnumerator(name: "HAL_SPI_MASTER_BIG_ENDIAN", value: 1)
!907 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 496, baseType: !18, size: 32, elements: !908)
!908 = !{!909, !910}
!909 = !DIEnumerator(name: "HAL_SPI_MASTER_CHIP_SELECT_LOW", value: 0)
!910 = !DIEnumerator(name: "HAL_SPI_MASTER_CHIP_SELECT_HIGH", value: 1)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 503, baseType: !18, size: 32, elements: !912)
!912 = !{!913, !914, !915, !916, !917, !918, !919, !920}
!913 = !DIEnumerator(name: "HAL_SPI_MASTER_NO_GET_TICK_MODE", value: 0)
!914 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY1", value: 1)
!915 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY2", value: 2)
!916 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY3", value: 3)
!917 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY4", value: 4)
!918 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY5", value: 5)
!919 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY6", value: 6)
!920 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY7", value: 7)
!921 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 516, baseType: !18, size: 32, elements: !922)
!922 = !{!923, !924}
!923 = !DIEnumerator(name: "HAL_SPI_MASTER_SAMPLE_POSITIVE", value: 0)
!924 = !DIEnumerator(name: "HAL_SPI_MASTER_SAMPLE_NEGATIVE", value: 1)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 560, baseType: !18, size: 32, elements: !926)
!926 = !{!927, !928}
!927 = !DIEnumerator(name: "HAL_SPI_MASTER_BUSY", value: 0)
!928 = !DIEnumerator(name: "HAL_SPI_MASTER_IDLE", value: 1)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 543, baseType: !18, size: 32, elements: !930)
!930 = !{!931, !932}
!931 = !DIEnumerator(name: "HAL_SPI_MASTER_EVENT_SEND_FINISHED", value: 0)
!932 = !DIEnumerator(name: "HAL_SPI_MASTER_EVENT_RECEIVE_FINISHED", value: 1)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !934, line: 42, baseType: !18, size: 32, elements: !935)
!934 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_spi_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!935 = !{!936, !937}
!936 = !DIEnumerator(name: "SPI_TX", value: 0)
!937 = !DIEnumerator(name: "SPI_RX", value: 1)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !934, line: 47, baseType: !18, size: 32, elements: !939)
!939 = !{!940, !941}
!940 = !DIEnumerator(name: "SPI_MODE_FIFO", value: 0)
!941 = !DIEnumerator(name: "SPI_MODE_DMA", value: 1)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 525, baseType: !18, size: 32, elements: !943)
!943 = !{!944, !945}
!944 = !DIEnumerator(name: "HAL_SPI_MASTER_DEASSERT_DISABLE", value: 0)
!945 = !DIEnumerator(name: "HAL_SPI_MASTER_DEASSERT_ENABLE", value: 1)
!946 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 534, baseType: !18, size: 32, elements: !947)
!947 = !{!948, !949, !950}
!948 = !DIEnumerator(name: "HAL_SPI_MASTER_MACRO_GROUP_A", value: 0)
!949 = !DIEnumerator(name: "HAL_SPI_MASTER_MACRO_GROUP_B", value: 1)
!950 = !DIEnumerator(name: "HAL_SPI_MASTER_MACRO_GROUP_C", value: 2)
!951 = !{!88, !61, !952}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_port_t", file: !98, line: 586, baseType: !879)
!953 = !{!866, !954, !956, !960, !968, !971}
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "g_spix_cg_code", scope: !868, file: !869, line: 51, type: !855, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "g_spix_irq_code", scope: !868, file: !869, line: 50, type: !958, isLocal: true, isDefinition: true)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 128, elements: !463)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "g_spix_callback", scope: !868, file: !869, line: 53, type: !962, isLocal: true, isDefinition: true)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !963, size: 128, elements: !463)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_callback_t", file: !872, line: 636, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !967, !88}
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_callback_event_t", file: !872, line: 546, baseType: !929)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "g_spix_user_data", scope: !868, file: !869, line: 54, type: !970, isLocal: true, isDefinition: true)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 128, elements: !463)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "g_spix_pri_code", scope: !868, file: !869, line: 52, type: !973, isLocal: true, isDefinition: true)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 64, elements: !463)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !977)
!977 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 32, elements: !463)
!979 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "spi_master_register", scope: !982, file: !983, line: 44, type: !1002, isLocal: false, isDefinition: true)
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !984, retainedTypes: !985, globals: !987, splitDebugInlining: false, nameTableKind: None)
!983 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_spi_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!984 = !{!933, !879, !929, !938, !886, !891, !895, !899, !903, !907, !911, !921, !871, !942}
!985 = !{!88, !61, !975, !986}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!987 = !{!980, !988, !992, !995, !997, !1000}
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "g_spi_direction", scope: !982, file: !983, line: 45, type: !990, isLocal: false, isDefinition: true)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 128, elements: !463)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "spi_direction_t", file: !934, line: 45, baseType: !933)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "g_packet_count", scope: !982, file: !983, line: 49, type: !994, isLocal: true, isDefinition: true)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 64, elements: !463)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "g_packet_length", scope: !982, file: !983, line: 48, type: !994, isLocal: true, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "g_pause_count", scope: !982, file: !983, line: 47, type: !999, isLocal: true, isDefinition: true)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !463)
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "g_small_size_pause_count", scope: !982, file: !983, line: 51, type: !999, isLocal: true, isDefinition: true)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1003, size: 128, elements: !463)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPI_MASTER_REGISTER_T", file: !56, line: 1573, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1561, size: 352, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CFG0", scope: !1006, file: !56, line: 1562, baseType: !60, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CFG1", scope: !1006, file: !56, line: 1563, baseType: !60, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_TX_SRC", scope: !1006, file: !56, line: 1564, baseType: !60, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_RX_DST", scope: !1006, file: !56, line: 1565, baseType: !60, size: 32, offset: 96)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_TX_DATA", scope: !1006, file: !56, line: 1566, baseType: !60, size: 32, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_RX_DATA", scope: !1006, file: !56, line: 1567, baseType: !272, size: 32, offset: 160)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CMD", scope: !1006, file: !56, line: 1568, baseType: !60, size: 32, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_STATUS0", scope: !1006, file: !56, line: 1569, baseType: !272, size: 32, offset: 224)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_STATUS1", scope: !1006, file: !56, line: 1570, baseType: !272, size: 32, offset: 256)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_PAD_MACRO_SEL", scope: !1006, file: !56, line: 1571, baseType: !60, size: 32, offset: 288)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CFG2", scope: !1006, file: !56, line: 1572, baseType: !60, size: 32, offset: 320)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1020 = distinct !DIGlobalVariable(name: "priority_set", scope: !1021, file: !1022, line: 128, type: !61, isLocal: true, isDefinition: true)
!1021 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1022, file: !1022, line: 126, type: !1023, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !1112)
!1022 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!1025}
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !716, line: 158, baseType: !715)
!1026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1022, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1027, retainedTypes: !1028, globals: !1094, splitDebugInlining: false, nameTableKind: None)
!1027 = !{!715, !168}
!1028 = !{!862, !1029, !61, !1062, !1092}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1031, line: 418, baseType: !1032)
!1031 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 395, size: 1120, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038, !1039, !1040, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1051, !1052, !1053, !1055, !1059, !1061}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1032, file: !1031, line: 397, baseType: !272, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1032, file: !1031, line: 398, baseType: !60, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1032, file: !1031, line: 399, baseType: !60, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1032, file: !1031, line: 400, baseType: !60, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1032, file: !1031, line: 401, baseType: !60, size: 32, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1032, file: !1031, line: 402, baseType: !60, size: 32, offset: 160)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1032, file: !1031, line: 403, baseType: !1041, size: 96, offset: 192)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 96, elements: !509)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1032, file: !1031, line: 404, baseType: !60, size: 32, offset: 288)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1032, file: !1031, line: 405, baseType: !60, size: 32, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1032, file: !1031, line: 406, baseType: !60, size: 32, offset: 352)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1032, file: !1031, line: 407, baseType: !60, size: 32, offset: 384)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1032, file: !1031, line: 408, baseType: !60, size: 32, offset: 416)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1032, file: !1031, line: 409, baseType: !60, size: 32, offset: 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1032, file: !1031, line: 410, baseType: !60, size: 32, offset: 480)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1032, file: !1031, line: 411, baseType: !1050, size: 64, offset: 512)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !465)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1032, file: !1031, line: 412, baseType: !272, size: 32, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1032, file: !1031, line: 413, baseType: !272, size: 32, offset: 608)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1032, file: !1031, line: 414, baseType: !1054, size: 128, offset: 640)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !463)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1032, file: !1031, line: 415, baseType: !1056, size: 160, offset: 768)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1057)
!1057 = !{!1058}
!1058 = !DISubrange(count: 5)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1032, file: !1031, line: 416, baseType: !1060, size: 160, offset: 928)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1057)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1032, file: !1031, line: 417, baseType: !60, size: 32, offset: 1088)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1031, line: 378, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 363, size: 28704, elements: !1065)
!1065 = !{!1066, !1068, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1083, !1087, !1091}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1064, file: !1031, line: 365, baseType: !1067, size: 256)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !753)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1064, file: !1031, line: 366, baseType: !1069, size: 768, offset: 256)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1070)
!1070 = !{!1071}
!1071 = !DISubrange(count: 24)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1064, file: !1031, line: 367, baseType: !1067, size: 256, offset: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1064, file: !1031, line: 368, baseType: !1069, size: 768, offset: 1280)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1064, file: !1031, line: 369, baseType: !1067, size: 256, offset: 2048)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1064, file: !1031, line: 370, baseType: !1069, size: 768, offset: 2304)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1064, file: !1031, line: 371, baseType: !1067, size: 256, offset: 3072)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1064, file: !1031, line: 372, baseType: !1069, size: 768, offset: 3328)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1064, file: !1031, line: 373, baseType: !1067, size: 256, offset: 4096)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1064, file: !1031, line: 374, baseType: !1080, size: 1792, offset: 4352)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1081)
!1081 = !{!1082}
!1082 = !DISubrange(count: 56)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1064, file: !1031, line: 375, baseType: !1084, size: 1920, offset: 6144)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 1920, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 240)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1064, file: !1031, line: 376, baseType: !1088, size: 20608, offset: 8064)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1089)
!1089 = !{!1090}
!1090 = !DISubrange(count: 644)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1064, file: !1031, line: 377, baseType: !60, size: 32, offset: 28672)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1094 = !{!1095, !1096, !1109}
!1095 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1026, file: !1022, line: 119, type: !1098, isLocal: false, isDefinition: true)
!1098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 4096, elements: !1107)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1022, line: 50, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1022, line: 47, size: 64, elements: !1101)
!1101 = !{!1102, !1106}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1100, file: !1022, line: 48, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !862}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1100, file: !1022, line: 49, baseType: !61, size: 32, offset: 32)
!1107 = !{!1108}
!1108 = !DISubrange(count: 64)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1026, file: !1022, line: 52, type: !1111, isLocal: true, isDefinition: true)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2048, elements: !1107)
!1112 = !{!1113}
!1113 = !DILocalVariable(name: "i", scope: !1021, file: !1022, line: 129, type: !61)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1116, file: !1117, line: 55, type: !91, isLocal: false, isDefinition: true)
!1116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1118, retainedTypes: !1153, globals: !1188, splitDebugInlining: false, nameTableKind: None)
!1117 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1118 = !{!1119, !1127, !1132}
!1119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1120, line: 51, baseType: !18, size: 32, elements: !1121)
!1120 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1121 = !{!1122, !1123, !1124, !1125, !1126}
!1122 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1123 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1124 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1125 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1126 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1120, line: 62, baseType: !18, size: 32, elements: !1128)
!1128 = !{!1129, !1130, !1131}
!1129 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1130 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1131 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1133, line: 228, baseType: !18, size: 32, elements: !1134)
!1133 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152}
!1135 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1136 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1137 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1138 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1139 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1140 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1141 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1142 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1143 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1144 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1145 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1146 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1147 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1148 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1149 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1150 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1151 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1152 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1153 = !{!1154, !1155, !1177, !762, !61, !18, !1183, !1185, !1186, !986}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1157, file: !56, line: 2759, baseType: !60, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1157, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1157, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1157, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1157, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1157, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1157, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1157, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1157, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1157, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1157, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1157, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1157, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1157, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1157, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1157, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1157, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1157, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1179, file: !56, line: 2799, baseType: !60, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1179, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !462)
!1188 = !{!1114, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1205, !1207}
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1116, file: !1117, line: 604, type: !460, isLocal: false, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1116, file: !1117, line: 605, type: !61, isLocal: false, isDefinition: true)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1116, file: !1117, line: 606, type: !61, isLocal: false, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1116, file: !1117, line: 607, type: !61, isLocal: false, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1116, file: !1117, line: 608, type: !61, isLocal: false, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1116, file: !1117, line: 609, type: !61, isLocal: false, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1116, file: !1117, line: 610, type: !61, isLocal: false, isDefinition: true)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1116, file: !1117, line: 611, type: !61, isLocal: false, isDefinition: true)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1116, file: !1117, line: 665, type: !61, isLocal: false, isDefinition: true)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1116, file: !1117, line: 666, type: !61, isLocal: false, isDefinition: true)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1211, file: !1212, line: 334, type: !91, isLocal: false, isDefinition: true)
!1211 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1212, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1213, retainedTypes: !1381, globals: !1521, splitDebugInlining: false, nameTableKind: None)
!1212 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1213 = !{!1214, !1305, !1311, !1318, !1330, !1341, !1350, !1359, !1363, !1367}
!1214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1215, line: 58, baseType: !7, size: 32, elements: !1216)
!1215 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304}
!1217 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1218 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1219 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1220 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1221 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1222 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1223 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1224 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1225 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1226 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1227 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1228 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1229 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1230 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1231 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1232 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1233 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1234 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1235 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1236 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1237 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1238 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1239 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1240 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1241 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1242 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1243 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1244 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1245 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1246 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1247 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1248 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1249 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1250 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1251 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1252 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1253 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1254 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1255 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1256 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1257 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1258 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1259 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1260 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1261 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1262 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1263 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1264 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1265 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1266 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1267 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1268 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1269 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1270 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1271 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1272 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1273 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1274 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1275 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1276 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1277 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1278 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1279 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1280 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1281 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1282 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1283 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1284 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1285 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1286 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1287 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1288 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1289 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1290 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1291 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1292 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1293 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1294 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1295 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1296 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1297 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1298 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1299 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1300 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1301 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1302 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1303 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1304 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1305 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 81, baseType: !18, size: 32, elements: !1307)
!1306 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1307 = !{!1308, !1309, !1310}
!1308 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1309 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1310 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1212, line: 298, baseType: !18, size: 32, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317}
!1313 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1314 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1315 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1316 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1317 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 51, baseType: !18, size: 32, elements: !1320)
!1319 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329}
!1321 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1322 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1323 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1324 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1325 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1326 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1327 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1328 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1329 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1330 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1331, line: 110, baseType: !7, size: 32, elements: !1332)
!1331 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340}
!1333 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1334 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1335 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1336 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1337 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1338 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1339 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1340 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 73, baseType: !18, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1343 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1344 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1345 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1346 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1347 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1348 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1349 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 83, baseType: !18, size: 32, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1352 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1353 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1354 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1355 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1356 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1357 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1358 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 98, baseType: !18, size: 32, elements: !1360)
!1360 = !{!1361, !1362}
!1361 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1362 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 76, baseType: !18, size: 32, elements: !1364)
!1364 = !{!1365, !1366}
!1365 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1366 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 208, baseType: !18, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1369 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1370 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1371 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1372 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1373 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1374 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1375 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1376 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1377 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1378 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1379 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1380 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1381 = !{!61, !1154, !1185, !762, !1382, !1492, !1514, !88, !1520, !462}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1395, !1401, !1405, !1413, !1414, !1421, !1422, !1423, !1424, !1432, !1435, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1486, !1487, !1491}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1384, file: !1306, line: 136, baseType: !61, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1384, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1384, file: !1306, line: 138, baseType: !1389, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !1391)
!1390 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1392, file: !1390, line: 55, baseType: !460, size: 8)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1384, file: !1306, line: 139, baseType: !1396, size: 32, offset: 96)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1398, file: !1390, line: 45, baseType: !460, size: 8)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1384, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1403)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1404)
!1404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1384, file: !1306, line: 143, baseType: !1406, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !1409)
!1408 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1409, file: !1408, line: 144, baseType: !61, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1409, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1384, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1384, file: !1306, line: 145, baseType: !1415, size: 32, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1417, file: !1408, line: 150, baseType: !61, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1417, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1384, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1384, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1384, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1384, file: !1306, line: 151, baseType: !1425, size: 1024, offset: 352)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1426, size: 1024, elements: !1431)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1427, file: !1408, line: 168, baseType: !61, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1427, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!1431 = !{!754, !466}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1384, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1319, line: 120, baseType: !460)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1384, file: !1306, line: 156, baseType: !1436, size: 32, offset: 1408)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1438, file: !1306, line: 91, baseType: !460, size: 8)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1438, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1438, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1438, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1438, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1438, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1438, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1438, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1438, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1438, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1438, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1438, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1438, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1438, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1438, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1438, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1438, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1438, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1438, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1438, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1438, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1438, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1438, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1438, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1438, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1384, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1384, file: !1306, line: 158, baseType: !975, size: 16, offset: 1472)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1384, file: !1306, line: 159, baseType: !975, size: 16, offset: 1488)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1384, file: !1306, line: 163, baseType: !975, size: 16, offset: 1504)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1384, file: !1306, line: 164, baseType: !975, size: 16, offset: 1520)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1384, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1384, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 24, elements: !1473)
!1473 = !{!1474}
!1474 = !DISubrange(count: 3)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1384, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1384, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1384, file: !1306, line: 173, baseType: !975, size: 16, offset: 1584)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1384, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1384, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1384, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1384, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1384, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!7, !88}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1384, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1384, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!7, !88, !61, !88, !61}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1384, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1494, file: !56, line: 2759, baseType: !60, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1494, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1494, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1494, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1494, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1494, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1494, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1494, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1494, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1494, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1494, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1494, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1494, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1494, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1494, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1494, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1494, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1494, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1516, file: !56, line: 2799, baseType: !60, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1516, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!1521 = !{!1209, !1522, !1524, !1526, !1531}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1211, file: !1212, line: 382, type: !61, isLocal: false, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1211, file: !1212, line: 383, type: !61, isLocal: false, isDefinition: true)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1211, file: !1212, line: 369, type: !1528, isLocal: true, isDefinition: true)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 128)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1211, file: !1212, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1533 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1536, file: !1591, line: 35, type: !1592, isLocal: false, isDefinition: true)
!1536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1538, retainedTypes: !1584, globals: !1585, splitDebugInlining: false, nameTableKind: None)
!1537 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1538 = !{!1539}
!1539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1540, line: 77, baseType: !18, size: 32, elements: !1541)
!1540 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1541 = !{!1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583}
!1542 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1543 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1544 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1545 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1546 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1547 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1548 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1549 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1550 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1551 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1552 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1553 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1554 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1555 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1556 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1557 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1558 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1559 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1560 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1561 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1562 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1563 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1564 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1565 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1566 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1567 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1568 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1569 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1570 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1571 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1572 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1573 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1574 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1575 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1576 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1577 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1578 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1579 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1580 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1581 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1582 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1583 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1584 = !{!88}
!1585 = !{!1534, !1586, !1589}
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1536, file: !1537, line: 96, type: !1588, isLocal: true, isDefinition: true)
!1588 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1536, file: !1537, line: 94, type: !1588, isLocal: true, isDefinition: true)
!1591 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1537, line: 54, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1537, line: 51, size: 576, elements: !1595)
!1595 = !{!1596, !1606}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1594, file: !1537, line: 52, baseType: !1597, size: 96)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1540, line: 152, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1540, line: 144, size: 96, elements: !1599)
!1599 = !{!1600, !1602, !1604}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1598, file: !1540, line: 145, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1540, line: 61, baseType: !18)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1598, file: !1540, line: 146, baseType: !1603, size: 16, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1540, line: 62, baseType: !977)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1598, file: !1540, line: 150, baseType: !1605, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1540, line: 127, baseType: !1539)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1594, file: !1537, line: 53, baseType: !1607, size: 480, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1608, line: 107, baseType: !1609)
!1608 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 103, size: 480, elements: !1610)
!1610 = !{!1611, !1612, !1613}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1609, file: !1608, line: 104, baseType: !18, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1609, file: !1608, line: 105, baseType: !18, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1609, file: !1608, line: 106, baseType: !1614, size: 400, offset: 64)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 400, elements: !1057)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1608, line: 100, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 92, size: 80, elements: !1617)
!1617 = !{!1618, !1619, !1620}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1616, file: !1608, line: 93, baseType: !460, size: 8)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1616, file: !1608, line: 94, baseType: !460, size: 8, offset: 8)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1616, file: !1608, line: 96, baseType: !1621, size: 64, offset: 16)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !753)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1624, file: !1627, line: 96, type: !1628, isLocal: false, isDefinition: true)
!1624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1626, splitDebugInlining: false, nameTableKind: None)
!1625 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1626 = !{!1622}
!1627 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 152, elements: !1631)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1631 = !{!1632}
!1632 = !DISubrange(count: 19)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1635, file: !1636, line: 168, type: !1986, isLocal: false, isDefinition: true)
!1635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1637, retainedTypes: !1648, globals: !1657, splitDebugInlining: false, nameTableKind: None)
!1636 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1637 = !{!1638, !1214, !1539}
!1638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1639, line: 49, baseType: !18, size: 32, elements: !1640)
!1639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1640 = !{!1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1641 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1642 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1643 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1644 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1645 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1646 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1647 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1648 = !{!1649, !61, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1215, line: 47, baseType: !462)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1653, file: !1408, line: 144, baseType: !61, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1653, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!1657 = !{!1633, !1658, !1660, !1670, !1807, !1809, !1811, !1813, !1815, !1820, !1823, !1832, !1834, !1836, !1844, !1846, !1848, !1931, !1934, !1936, !1938, !1949, !1951, !1964}
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1635, file: !1636, line: 94, type: !1092, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1635, file: !1636, line: 95, type: !1662, isLocal: false, isDefinition: true)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1608, line: 100, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 92, size: 80, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1665, file: !1608, line: 93, baseType: !460, size: 8)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1665, file: !1608, line: 94, baseType: !460, size: 8, offset: 8)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1665, file: !1608, line: 96, baseType: !1621, size: 64, offset: 16)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1635, file: !1636, line: 127, type: !1672, isLocal: false, isDefinition: true)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1408, line: 317, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1408, line: 237, size: 2720, elements: !1674)
!1674 = !{!1675, !1676, !1728, !1729, !1732, !1733, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1774, !1775, !1776, !1781, !1782, !1783, !1784, !1785, !1789, !1793, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1673, file: !1408, line: 238, baseType: !61, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1673, file: !1408, line: 239, baseType: !1677, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !1680)
!1680 = !{!1681, !1685, !1686, !1690, !1694, !1698, !1699, !1703, !1704, !1705, !1706, !1711, !1716, !1720, !1724}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1679, file: !1408, line: 106, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!7, !88, !88}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1679, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1679, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!88, !88, !61, !61}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1679, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!7, !88, !61}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1679, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!7, !88, !88, !88, !61}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1679, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1679, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!1092, !88, !61}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1679, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1679, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1679, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1679, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!7, !88, !7, !1710, !88, !1710}
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1215, line: 50, baseType: !18)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1679, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!7, !88, !1715}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1679, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!7, !88, !88, !61}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1679, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!91, !88, !61}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1679, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!7, !88, !61, !88}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1673, file: !1408, line: 240, baseType: !88, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1673, file: !1408, line: 241, baseType: !1730, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1215, line: 46, baseType: !977)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1673, file: !1408, line: 242, baseType: !1730, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1673, file: !1408, line: 243, baseType: !1734, size: 928, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !1736)
!1736 = !{!1737, !1738, !1740, !1741, !1742, !1743, !1744, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1735, file: !1408, line: 91, baseType: !61, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1735, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !753)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1735, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1735, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1735, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1735, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1735, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1735, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1673, file: !1408, line: 244, baseType: !1739, size: 256, offset: 1088)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1673, file: !1408, line: 245, baseType: !1739, size: 256, offset: 1344)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1673, file: !1408, line: 246, baseType: !61, size: 32, offset: 1600)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1673, file: !1408, line: 247, baseType: !61, size: 32, offset: 1632)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1673, file: !1408, line: 248, baseType: !61, size: 32, offset: 1664)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1673, file: !1408, line: 249, baseType: !61, size: 32, offset: 1696)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1673, file: !1408, line: 250, baseType: !61, size: 32, offset: 1728)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1673, file: !1408, line: 252, baseType: !61, size: 32, offset: 1760)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1673, file: !1408, line: 255, baseType: !61, size: 32, offset: 1792)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1673, file: !1408, line: 256, baseType: !61, size: 32, offset: 1824)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1673, file: !1408, line: 257, baseType: !61, size: 32, offset: 1856)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1673, file: !1408, line: 261, baseType: !61, size: 32, offset: 1888)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1673, file: !1408, line: 262, baseType: !61, size: 32, offset: 1920)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1673, file: !1408, line: 263, baseType: !61, size: 32, offset: 1952)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1673, file: !1408, line: 264, baseType: !61, size: 32, offset: 1984)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1673, file: !1408, line: 265, baseType: !61, size: 32, offset: 2016)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1673, file: !1408, line: 266, baseType: !61, size: 32, offset: 2048)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1673, file: !1408, line: 267, baseType: !61, size: 32, offset: 2080)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1673, file: !1408, line: 268, baseType: !61, size: 32, offset: 2112)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1673, file: !1408, line: 270, baseType: !61, size: 32, offset: 2144)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1673, file: !1408, line: 271, baseType: !61, size: 32, offset: 2176)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1673, file: !1408, line: 272, baseType: !1768, size: 32, offset: 2208)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1408, line: 229, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 226, size: 64, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1770, file: !1408, line: 227, baseType: !61, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1770, file: !1408, line: 228, baseType: !61, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1673, file: !1408, line: 273, baseType: !1649, size: 32, offset: 2240)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1673, file: !1408, line: 274, baseType: !1649, size: 32, offset: 2272)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1673, file: !1408, line: 276, baseType: !1777, size: 32, offset: 2304)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{null, !1780}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1673, file: !1408, line: 278, baseType: !61, size: 32, offset: 2336)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1673, file: !1408, line: 280, baseType: !1777, size: 32, offset: 2368)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1673, file: !1408, line: 281, baseType: !1777, size: 32, offset: 2400)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1673, file: !1408, line: 283, baseType: !61, size: 32, offset: 2432)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1673, file: !1408, line: 284, baseType: !1786, size: 32, offset: 2464)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!61, !1780}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1673, file: !1408, line: 285, baseType: !1790, size: 32, offset: 2496)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!61, !1780, !61, !61}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1673, file: !1408, line: 293, baseType: !1794, size: 32, offset: 2528)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1408, line: 162, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 159, size: 64, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1796, file: !1408, line: 160, baseType: !61, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1796, file: !1408, line: 161, baseType: !61, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1673, file: !1408, line: 295, baseType: !61, size: 32, offset: 2560)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1673, file: !1408, line: 296, baseType: !61, size: 32, offset: 2592)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1673, file: !1408, line: 297, baseType: !61, size: 32, offset: 2624)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1673, file: !1408, line: 298, baseType: !1731, size: 16, offset: 2656)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1673, file: !1408, line: 302, baseType: !1731, size: 16, offset: 2672)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1673, file: !1408, line: 310, baseType: !91, size: 8, offset: 2688)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1673, file: !1408, line: 313, baseType: !91, size: 8, offset: 2696)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1635, file: !1636, line: 129, type: !61, isLocal: false, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1635, file: !1636, line: 130, type: !61, isLocal: false, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1635, file: !1636, line: 131, type: !61, isLocal: false, isDefinition: true)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1635, file: !1636, line: 132, type: !975, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1635, file: !1636, line: 136, type: !1817, isLocal: false, isDefinition: true)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 4096, elements: !1818)
!1818 = !{!1819}
!1819 = !DISubrange(count: 512)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1635, file: !1636, line: 146, type: !1822, isLocal: true, isDefinition: true)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 512, elements: !753)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1635, file: !1636, line: 152, type: !1825, isLocal: true, isDefinition: true)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1608, line: 116, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 113, size: 64, elements: !1829)
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1828, file: !1608, line: 114, baseType: !61, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1828, file: !1608, line: 115, baseType: !61, size: 32, offset: 32)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1635, file: !1636, line: 156, type: !61, isLocal: false, isDefinition: true)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1635, file: !1636, line: 157, type: !61, isLocal: false, isDefinition: true)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1635, file: !1636, line: 160, type: !1838, isLocal: true, isDefinition: true)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 512, elements: !753)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1840, file: !1408, line: 150, baseType: !61, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1840, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1635, file: !1636, line: 173, type: !61, isLocal: false, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1635, file: !1636, line: 176, type: !1678, isLocal: false, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1635, file: !1636, line: 177, type: !1850, isLocal: false, isDefinition: true)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1861, !1867, !1868, !1869, !1870, !1872, !1873, !1874, !1875, !1882, !1883, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1851, file: !1306, line: 136, baseType: !61, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1851, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1851, file: !1306, line: 138, baseType: !1856, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !1859)
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1858, file: !1390, line: 55, baseType: !460, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1851, file: !1306, line: 139, baseType: !1862, size: 32, offset: 96)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1864, file: !1390, line: 45, baseType: !460, size: 8)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1851, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1851, file: !1306, line: 143, baseType: !1651, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1851, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1851, file: !1306, line: 145, baseType: !1871, size: 32, offset: 224)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1851, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1851, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1851, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1851, file: !1306, line: 151, baseType: !1876, size: 1024, offset: 352)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 1024, elements: !1431)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1878, file: !1408, line: 168, baseType: !61, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1878, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1851, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1851, file: !1306, line: 156, baseType: !1884, size: 32, offset: 1408)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1886, file: !1306, line: 91, baseType: !460, size: 8)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1886, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1886, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1886, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1886, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1886, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1886, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1886, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1886, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1886, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1886, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1886, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1886, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1886, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1886, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1886, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1886, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1886, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1886, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1886, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1886, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1886, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1886, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1886, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1886, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1851, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1851, file: !1306, line: 158, baseType: !975, size: 16, offset: 1472)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1851, file: !1306, line: 159, baseType: !975, size: 16, offset: 1488)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1851, file: !1306, line: 163, baseType: !975, size: 16, offset: 1504)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1851, file: !1306, line: 164, baseType: !975, size: 16, offset: 1520)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1851, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1851, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1851, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1851, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1851, file: !1306, line: 173, baseType: !975, size: 16, offset: 1584)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1851, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1851, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1851, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1851, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1851, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1851, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1851, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1851, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1635, file: !1636, line: 178, type: !1933, isLocal: false, isDefinition: true)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1434, size: 64, elements: !753)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1635, file: !1636, line: 179, type: !1885, isLocal: false, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1635, file: !1636, line: 204, type: !1822, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1635, file: !1636, line: 205, type: !1940, isLocal: false, isDefinition: true)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1941, line: 93, baseType: !1942)
!1941 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1941, line: 83, size: 1056, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1942, file: !1941, line: 84, baseType: !61, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1942, file: !1941, line: 85, baseType: !1677, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1942, file: !1941, line: 86, baseType: !88, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1942, file: !1941, line: 87, baseType: !1734, size: 928, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1942, file: !1941, line: 92, baseType: !91, size: 8, offset: 1024)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1635, file: !1636, line: 208, type: !1850, isLocal: false, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "nor_list", scope: !1635, file: !1636, line: 114, type: !1953, isLocal: true, isDefinition: true)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1608, line: 125, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 119, size: 1088, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1963}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1956, file: !1608, line: 120, baseType: !975, size: 16)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1956, file: !1608, line: 121, baseType: !975, size: 16, offset: 16)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1956, file: !1608, line: 122, baseType: !61, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1956, file: !1608, line: 123, baseType: !1962, size: 512, offset: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 512, elements: !753)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1956, file: !1608, line: 124, baseType: !1838, size: 512, offset: 576)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1635, file: !1966, line: 42, type: !1967, isLocal: true, isDefinition: true)
!1966 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1636, line: 66, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1636, line: 63, size: 5600, elements: !1970)
!1970 = !{!1971, !1978}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1969, file: !1636, line: 64, baseType: !1972, size: 96)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1540, line: 152, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1540, line: 144, size: 96, elements: !1974)
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1973, file: !1540, line: 145, baseType: !1601, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1973, file: !1540, line: 146, baseType: !1603, size: 16, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1973, file: !1540, line: 150, baseType: !1605, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1969, file: !1636, line: 65, baseType: !1979, size: 5504, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1608, line: 132, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 128, size: 5504, elements: !1981)
!1981 = !{!1982, !1983, !1984}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1980, file: !1608, line: 129, baseType: !18, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1980, file: !1608, line: 130, baseType: !18, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1980, file: !1608, line: 131, baseType: !1985, size: 5440, offset: 64)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 5440, elements: !1057)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1390, line: 79, baseType: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 77, size: 8, elements: !1989)
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1988, file: !1390, line: 78, baseType: !460, size: 8)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1992 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1993, file: !1994, line: 82, type: !7, isLocal: true, isDefinition: true)
!1993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1995, retainedTypes: !2001, globals: !2046, splitDebugInlining: false, nameTableKind: None)
!1994 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!1995 = !{!1330, !1214, !1996}
!1996 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1331, line: 123, baseType: !18, size: 32, elements: !1997)
!1997 = !{!1998, !1999, !2000}
!1998 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1999 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2000 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2001 = !{!61, !2002, !88, !762}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1408, line: 190, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 173, size: 1376, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2014, !2020, !2021, !2028, !2029, !2036, !2037, !2038, !2039}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2004, file: !1408, line: 174, baseType: !61, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2004, file: !1408, line: 175, baseType: !1649, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2004, file: !1408, line: 176, baseType: !2009, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !2012)
!2012 = !{!2013}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2011, file: !1390, line: 55, baseType: !460, size: 8)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2004, file: !1408, line: 177, baseType: !2015, size: 32, offset: 96)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !2018)
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2017, file: !1390, line: 45, baseType: !460, size: 8)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2004, file: !1408, line: 178, baseType: !1402, size: 8, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2004, file: !1408, line: 180, baseType: !2022, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2024, file: !1408, line: 144, baseType: !61, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2024, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2004, file: !1408, line: 181, baseType: !1649, size: 32, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2004, file: !1408, line: 182, baseType: !2030, size: 32, offset: 224)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2032, file: !1408, line: 150, baseType: !61, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2032, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2004, file: !1408, line: 183, baseType: !1649, size: 32, offset: 256)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2004, file: !1408, line: 184, baseType: !61, size: 32, offset: 288)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2004, file: !1408, line: 185, baseType: !1649, size: 32, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2004, file: !1408, line: 188, baseType: !2040, size: 1024, offset: 352)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 1024, elements: !1431)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !2043)
!2043 = !{!2044, !2045}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2042, file: !1408, line: 168, baseType: !61, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2042, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!2046 = !{!2047, !2048}
!2047 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1993, file: !1994, line: 432, type: !2050, isLocal: true, isDefinition: true)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1331, line: 119, baseType: !1330)
!2051 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2054, file: !2055, line: 60, type: !61, isLocal: false, isDefinition: true)
!2054 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2055, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2056, retainedTypes: !2064, globals: !2065, splitDebugInlining: false, nameTableKind: None)
!2055 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2056 = !{!2057}
!2057 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063}
!2059 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2060 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2061 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2062 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2063 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2064 = !{!88, !61}
!2065 = !{!2052, !2066, !2068, !2070, !2072, !2074, !2128, !2130}
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2054, file: !2055, line: 61, type: !61, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2054, file: !2055, line: 107, type: !61, isLocal: false, isDefinition: true)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2054, file: !2055, line: 132, type: !91, isLocal: false, isDefinition: true)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2054, file: !2055, line: 133, type: !91, isLocal: false, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "replaced", scope: !2076, file: !2055, line: 139, type: !61, isLocal: true, isDefinition: true)
!2076 = distinct !DISubprogram(name: "LookupAddress", scope: !2055, file: !2055, line: 135, type: !2077, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !2079)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!61, !88, !61}
!2079 = !{!2080, !2081, !2082, !2127}
!2080 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2076, file: !2055, line: 135, type: !88)
!2081 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2076, file: !2055, line: 135, type: !61)
!2082 = !DILocalVariable(name: "D", scope: !2076, file: !2055, line: 137, type: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1408, line: 190, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 173, size: 1376, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2095, !2101, !2102, !2109, !2110, !2117, !2118, !2119, !2120}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2085, file: !1408, line: 174, baseType: !61, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2085, file: !1408, line: 175, baseType: !1649, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2085, file: !1408, line: 176, baseType: !2090, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !2091)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2092, file: !1390, line: 55, baseType: !460, size: 8)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2085, file: !1408, line: 177, baseType: !2096, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2098, file: !1390, line: 45, baseType: !460, size: 8)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2085, file: !1408, line: 178, baseType: !1402, size: 8, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2085, file: !1408, line: 180, baseType: !2103, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2105, file: !1408, line: 144, baseType: !61, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2105, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2085, file: !1408, line: 181, baseType: !1649, size: 32, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2085, file: !1408, line: 182, baseType: !2111, size: 32, offset: 224)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2113, file: !1408, line: 150, baseType: !61, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2113, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2085, file: !1408, line: 183, baseType: !1649, size: 32, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2085, file: !1408, line: 184, baseType: !61, size: 32, offset: 288)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2085, file: !1408, line: 185, baseType: !1649, size: 32, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2085, file: !1408, line: 188, baseType: !2121, size: 1024, offset: 352)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 1024, elements: !1431)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2123, file: !1408, line: 168, baseType: !61, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2123, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!2127 = !DILocalVariable(name: "addr", scope: !2076, file: !2055, line: 138, type: !61)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2076, file: !2055, line: 140, type: !61, isLocal: true, isDefinition: true)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2076, file: !2055, line: 141, type: !61, isLocal: true, isDefinition: true)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2134, file: !2135, line: 44, type: !2280, isLocal: false, isDefinition: true)
!2134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2136, retainedTypes: !2142, globals: !2143, splitDebugInlining: false, nameTableKind: None)
!2135 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2136 = !{!2137}
!2137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2138, line: 40, baseType: !18, size: 32, elements: !2139)
!2138 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2139 = !{!2140, !2141}
!2140 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2141 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2142 = !{!986}
!2143 = !{!2132, !2144, !2146, !2148, !2150, !2250, !2252, !2254, !2256, !2258, !2260, !2262, !2264, !2266, !2268, !2270, !2272, !2274, !2276, !2278}
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2134, file: !2135, line: 65, type: !61, isLocal: false, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2134, file: !2135, line: 66, type: !61, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2134, file: !2135, line: 67, type: !61, isLocal: false, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "emi_register", scope: !2134, file: !2135, line: 83, type: !2152, isLocal: false, isDefinition: true)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2155)
!2155 = !{!2156, !2160, !2161, !2162, !2163, !2167, !2168, !2169, !2170, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2154, file: !56, line: 2448, baseType: !2157, size: 768)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 768, elements: !2158)
!2158 = !{!2159}
!2159 = !DISubrange(count: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2154, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2154, file: !56, line: 2450, baseType: !1041, size: 96, offset: 800)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2154, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2154, file: !56, line: 2452, baseType: !2164, size: 160, offset: 928)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 160, elements: !2165)
!2165 = !{!2166}
!2166 = !DISubrange(count: 20)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2154, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2154, file: !56, line: 2454, baseType: !978, size: 32, offset: 1120)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2154, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2154, file: !56, line: 2456, baseType: !2171, size: 480, offset: 1184)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 480, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 60)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2154, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2154, file: !56, line: 2458, baseType: !978, size: 32, offset: 1696)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2154, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2154, file: !56, line: 2460, baseType: !978, size: 32, offset: 1760)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2154, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2154, file: !56, line: 2462, baseType: !2164, size: 160, offset: 1824)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2154, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2154, file: !56, line: 2464, baseType: !978, size: 32, offset: 2016)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2154, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2154, file: !56, line: 2466, baseType: !978, size: 32, offset: 2080)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2154, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2154, file: !56, line: 2468, baseType: !978, size: 32, offset: 2144)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2154, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2154, file: !56, line: 2470, baseType: !2188, size: 224, offset: 2208)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 224, elements: !2189)
!2189 = !{!2190}
!2190 = !DISubrange(count: 28)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2154, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2154, file: !56, line: 2472, baseType: !978, size: 32, offset: 2464)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2154, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2154, file: !56, line: 2474, baseType: !1041, size: 96, offset: 2528)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2154, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2154, file: !56, line: 2476, baseType: !978, size: 32, offset: 2656)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2154, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2154, file: !56, line: 2478, baseType: !978, size: 32, offset: 2720)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2154, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2154, file: !56, line: 2480, baseType: !978, size: 32, offset: 2784)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2154, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2154, file: !56, line: 2482, baseType: !1041, size: 96, offset: 2848)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2154, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2154, file: !56, line: 2484, baseType: !978, size: 32, offset: 2976)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2154, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2154, file: !56, line: 2486, baseType: !978, size: 32, offset: 3040)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2154, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2154, file: !56, line: 2488, baseType: !2164, size: 160, offset: 3104)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2154, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2154, file: !56, line: 2490, baseType: !978, size: 32, offset: 3296)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2154, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2154, file: !56, line: 2492, baseType: !2213, size: 736, offset: 3360)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 736, elements: !2214)
!2214 = !{!2215}
!2215 = !DISubrange(count: 92)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2154, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2154, file: !56, line: 2494, baseType: !978, size: 32, offset: 4128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2154, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2154, file: !56, line: 2496, baseType: !978, size: 32, offset: 4192)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2154, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2154, file: !56, line: 2498, baseType: !978, size: 32, offset: 4256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2154, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2154, file: !56, line: 2500, baseType: !978, size: 32, offset: 4320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2154, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2154, file: !56, line: 2502, baseType: !978, size: 32, offset: 4384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2154, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2154, file: !56, line: 2504, baseType: !978, size: 32, offset: 4448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2154, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2154, file: !56, line: 2506, baseType: !978, size: 32, offset: 4512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2154, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2154, file: !56, line: 2508, baseType: !978, size: 32, offset: 4576)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2154, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2154, file: !56, line: 2510, baseType: !2171, size: 480, offset: 4640)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2154, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2154, file: !56, line: 2512, baseType: !2236, size: 992, offset: 5152)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 992, elements: !2237)
!2237 = !{!2238}
!2238 = !DISubrange(count: 124)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2154, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2154, file: !56, line: 2514, baseType: !978, size: 32, offset: 6176)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2154, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2154, file: !56, line: 2516, baseType: !978, size: 32, offset: 6240)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2154, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2154, file: !56, line: 2518, baseType: !978, size: 32, offset: 6304)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2154, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2154, file: !56, line: 2520, baseType: !2164, size: 160, offset: 6368)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2154, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2154, file: !56, line: 2522, baseType: !2164, size: 160, offset: 6560)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2154, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2134, file: !2135, line: 485, type: !60, isLocal: false, isDefinition: true)
!2252 = !DIGlobalVariableExpression(var: !2253, expr: !DIExpression())
!2253 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2134, file: !2135, line: 68, type: !61, isLocal: false, isDefinition: true)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2134, file: !2135, line: 69, type: !61, isLocal: false, isDefinition: true)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2134, file: !2135, line: 70, type: !61, isLocal: false, isDefinition: true)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2134, file: !2135, line: 71, type: !61, isLocal: false, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2134, file: !2135, line: 72, type: !61, isLocal: false, isDefinition: true)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2134, file: !2135, line: 73, type: !61, isLocal: false, isDefinition: true)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2134, file: !2135, line: 74, type: !61, isLocal: false, isDefinition: true)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2134, file: !2135, line: 75, type: !61, isLocal: false, isDefinition: true)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2134, file: !2135, line: 76, type: !61, isLocal: false, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2134, file: !2135, line: 77, type: !61, isLocal: false, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2134, file: !2135, line: 78, type: !61, isLocal: false, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2134, file: !2135, line: 79, type: !61, isLocal: false, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2134, file: !2135, line: 80, type: !61, isLocal: false, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2134, file: !2135, line: 84, type: !2153, isLocal: false, isDefinition: true)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2281, size: 416, elements: !76)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2138, line: 60, baseType: !2282)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2138, line: 45, size: 416, elements: !2283)
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2282, file: !2138, line: 46, baseType: !61, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2282, file: !2138, line: 47, baseType: !61, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2282, file: !2138, line: 48, baseType: !61, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2282, file: !2138, line: 49, baseType: !61, size: 32, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2282, file: !2138, line: 50, baseType: !61, size: 32, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2282, file: !2138, line: 51, baseType: !61, size: 32, offset: 160)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2282, file: !2138, line: 52, baseType: !61, size: 32, offset: 192)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2282, file: !2138, line: 53, baseType: !61, size: 32, offset: 224)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2282, file: !2138, line: 54, baseType: !61, size: 32, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2282, file: !2138, line: 55, baseType: !61, size: 32, offset: 288)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2282, file: !2138, line: 56, baseType: !61, size: 32, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2282, file: !2138, line: 57, baseType: !61, size: 32, offset: 352)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2282, file: !2138, line: 58, baseType: !61, size: 32, offset: 384)
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2299, file: !2300, line: 48, type: !2308, isLocal: false, isDefinition: true)
!2299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2300, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2301, globals: !2307, splitDebugInlining: false, nameTableKind: None)
!2300 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2301 = !{!2302}
!2302 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1133, line: 100, baseType: !18, size: 32, elements: !2303)
!2303 = !{!2304, !2305, !2306}
!2304 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2305 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2306 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2307 = !{!2297}
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1133, line: 104, baseType: !2302)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "heap_end", scope: !2311, file: !2312, line: 69, type: !2317, isLocal: true, isDefinition: true)
!2311 = distinct !DISubprogram(name: "_sbrk_r", scope: !2312, file: !2312, line: 66, type: !2313, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !2508)
!2312 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_master_polling/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!2315, !2318, !2503}
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2316, line: 123, baseType: !2317)
!2316 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2320, line: 377, size: 1920, elements: !2321)
!2320 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2321 = !{!2322, !2323, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2402, !2423, !2427, !2428, !2429, !2430, !2440, !2453, !2454, !2459, !2477, !2478, !2485, !2486, !2502}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2319, file: !2320, line: 381, baseType: !7, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2319, file: !2320, line: 386, baseType: !2324, size: 32, offset: 32)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2320, line: 292, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2320, line: 186, size: 832, elements: !2327)
!2327 = !{!2328, !2330, !2331, !2332, !2333, !2334, !2339, !2340, !2341, !2342, !2346, !2351, !2358, !2362, !2363, !2364, !2365, !2367, !2369, !2370, !2371, !2373, !2379, !2392}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2326, file: !2320, line: 187, baseType: !2329, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2326, file: !2320, line: 188, baseType: !7, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2326, file: !2320, line: 189, baseType: !7, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2326, file: !2320, line: 190, baseType: !1588, size: 16, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2326, file: !2320, line: 191, baseType: !1588, size: 16, offset: 112)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2326, file: !2320, line: 192, baseType: !2335, size: 64, offset: 128)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2320, line: 122, size: 64, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2335, file: !2320, line: 123, baseType: !2329, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2335, file: !2320, line: 124, baseType: !7, size: 32, offset: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2326, file: !2320, line: 193, baseType: !7, size: 32, offset: 192)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2326, file: !2320, line: 196, baseType: !2318, size: 32, offset: 224)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2326, file: !2320, line: 200, baseType: !88, size: 32, offset: 256)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2326, file: !2320, line: 202, baseType: !2343, size: 32, offset: 288)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!7, !2318, !88, !2317, !7}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2326, file: !2320, line: 204, baseType: !2347, size: 32, offset: 320)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{!7, !2318, !88, !2350, !7}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2326, file: !2320, line: 207, baseType: !2352, size: 32, offset: 352)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!2355, !2318, !88, !2355, !7}
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2356, line: 116, baseType: !2357)
!2356 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2357 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2326, file: !2320, line: 208, baseType: !2359, size: 32, offset: 384)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!7, !2318, !88}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2326, file: !2320, line: 211, baseType: !2335, size: 64, offset: 416)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2326, file: !2320, line: 212, baseType: !2329, size: 32, offset: 480)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2326, file: !2320, line: 213, baseType: !7, size: 32, offset: 512)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2326, file: !2320, line: 216, baseType: !2366, size: 24, offset: 544)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 24, elements: !1473)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2326, file: !2320, line: 217, baseType: !2368, size: 8, offset: 568)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 8, elements: !76)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2326, file: !2320, line: 220, baseType: !2335, size: 64, offset: 576)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2326, file: !2320, line: 223, baseType: !7, size: 32, offset: 640)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2326, file: !2320, line: 224, baseType: !2372, size: 32, offset: 672)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2356, line: 46, baseType: !2357)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2326, file: !2320, line: 231, baseType: !2374, size: 32, offset: 704)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2320, line: 35, baseType: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2376, line: 34, baseType: !2377)
!2376 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2378 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2376, line: 33, flags: DIFlagFwdDecl)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2326, file: !2320, line: 233, baseType: !2380, size: 64, offset: 736)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2356, line: 170, baseType: !2381)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2356, line: 162, size: 64, elements: !2382)
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2381, file: !2356, line: 164, baseType: !7, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2381, file: !2356, line: 169, baseType: !2385, size: 32, offset: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2381, file: !2356, line: 165, size: 32, elements: !2386)
!2386 = !{!2387, !2390}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2385, file: !2356, line: 167, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2389, line: 116, baseType: !7)
!2389 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2385, file: !2356, line: 168, baseType: !2391, size: 32)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 32, elements: !463)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2326, file: !2320, line: 234, baseType: !7, size: 32, offset: 800)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2319, file: !2320, line: 386, baseType: !2324, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2319, file: !2320, line: 386, baseType: !2324, size: 32, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2319, file: !2320, line: 388, baseType: !7, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2319, file: !2320, line: 390, baseType: !2317, size: 32, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2319, file: !2320, line: 392, baseType: !7, size: 32, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2319, file: !2320, line: 394, baseType: !7, size: 32, offset: 224)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2319, file: !2320, line: 395, baseType: !2400, size: 32, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2320, line: 45, flags: DIFlagFwdDecl)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2319, file: !2320, line: 397, baseType: !2403, size: 32, offset: 288)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2320, line: 349, size: 128, elements: !2405)
!2405 = !{!2406, !2419, !2420, !2421}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2404, file: !2320, line: 352, baseType: !2407, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2320, line: 52, size: 192, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414, !2415}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2408, file: !2320, line: 54, baseType: !2407, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2408, file: !2320, line: 55, baseType: !7, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2408, file: !2320, line: 55, baseType: !7, size: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2408, file: !2320, line: 55, baseType: !7, size: 32, offset: 96)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2408, file: !2320, line: 55, baseType: !7, size: 32, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2408, file: !2320, line: 56, baseType: !2416, size: 32, offset: 160)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2417, size: 32, elements: !76)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2320, line: 22, baseType: !2418)
!2418 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2404, file: !2320, line: 353, baseType: !7, size: 32, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2404, file: !2320, line: 354, baseType: !2407, size: 32, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2404, file: !2320, line: 355, baseType: !2422, size: 32, offset: 96)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2319, file: !2320, line: 399, baseType: !2424, size: 32, offset: 320)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{null, !2318}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2319, file: !2320, line: 401, baseType: !7, size: 32, offset: 352)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2319, file: !2320, line: 404, baseType: !7, size: 32, offset: 384)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2319, file: !2320, line: 405, baseType: !2317, size: 32, offset: 416)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2319, file: !2320, line: 407, baseType: !2431, size: 32, offset: 448)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2320, line: 324, size: 192, elements: !2433)
!2433 = !{!2434, !2436, !2437, !2438}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2432, file: !2320, line: 325, baseType: !2435, size: 48)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 48, elements: !1473)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2432, file: !2320, line: 326, baseType: !2435, size: 48, offset: 48)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2432, file: !2320, line: 327, baseType: !977, size: 16, offset: 96)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2432, file: !2320, line: 330, baseType: !2439, size: 64, offset: 128)
!2439 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2319, file: !2320, line: 408, baseType: !2441, size: 32, offset: 480)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2320, line: 60, size: 288, elements: !2443)
!2443 = !{!2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2442, file: !2320, line: 62, baseType: !7, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2442, file: !2320, line: 63, baseType: !7, size: 32, offset: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2442, file: !2320, line: 64, baseType: !7, size: 32, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2442, file: !2320, line: 65, baseType: !7, size: 32, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2442, file: !2320, line: 66, baseType: !7, size: 32, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2442, file: !2320, line: 67, baseType: !7, size: 32, offset: 160)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2442, file: !2320, line: 68, baseType: !7, size: 32, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2442, file: !2320, line: 69, baseType: !7, size: 32, offset: 224)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2442, file: !2320, line: 70, baseType: !7, size: 32, offset: 256)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2319, file: !2320, line: 409, baseType: !2317, size: 32, offset: 512)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2319, file: !2320, line: 412, baseType: !2455, size: 32, offset: 544)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{null, !7}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2319, file: !2320, line: 416, baseType: !2460, size: 32, offset: 576)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2320, line: 90, size: 1120, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2468}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2461, file: !2320, line: 91, baseType: !2460, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2461, file: !2320, line: 92, baseType: !7, size: 32, offset: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2461, file: !2320, line: 93, baseType: !2466, size: 1024, offset: 64)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2467, size: 1024, elements: !330)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2461, file: !2320, line: 94, baseType: !2469, size: 32, offset: 1088)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2320, line: 79, size: 2112, elements: !2471)
!2471 = !{!2472, !2474, !2475, !2476}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2470, file: !2320, line: 80, baseType: !2473, size: 1024)
!2473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2470, file: !2320, line: 81, baseType: !2473, size: 1024, offset: 1024)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2470, file: !2320, line: 83, baseType: !2417, size: 32, offset: 2048)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2470, file: !2320, line: 86, baseType: !2417, size: 32, offset: 2080)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2319, file: !2320, line: 417, baseType: !2461, size: 1120, offset: 608)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2319, file: !2320, line: 420, baseType: !2479, size: 96, offset: 1728)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2320, line: 296, size: 96, elements: !2480)
!2480 = !{!2481, !2483, !2484}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2479, file: !2320, line: 298, baseType: !2482, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2479, file: !2320, line: 299, baseType: !7, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2479, file: !2320, line: 300, baseType: !2324, size: 32, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2319, file: !2320, line: 421, baseType: !2324, size: 32, offset: 1824)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2319, file: !2320, line: 422, baseType: !2487, size: 32, offset: 1856)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2320, line: 359, size: 640, elements: !2489)
!2489 = !{!2490, !2491, !2492, !2493, !2494, !2496, !2497, !2498, !2499, !2500, !2501}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2488, file: !2320, line: 362, baseType: !2317, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2488, file: !2320, line: 363, baseType: !2380, size: 64, offset: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2488, file: !2320, line: 364, baseType: !2380, size: 64, offset: 96)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2488, file: !2320, line: 365, baseType: !2380, size: 64, offset: 160)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2488, file: !2320, line: 366, baseType: !2495, size: 64, offset: 224)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 64, elements: !753)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2488, file: !2320, line: 367, baseType: !7, size: 32, offset: 288)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2488, file: !2320, line: 368, baseType: !2380, size: 64, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2488, file: !2320, line: 369, baseType: !2380, size: 64, offset: 384)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2488, file: !2320, line: 370, baseType: !2380, size: 64, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2488, file: !2320, line: 371, baseType: !2380, size: 64, offset: 512)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2488, file: !2320, line: 372, baseType: !2380, size: 64, offset: 576)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2319, file: !2320, line: 423, baseType: !2317, size: 32, offset: 1888)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2389, line: 46, baseType: !18)
!2504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2506, globals: !2507, splitDebugInlining: false, nameTableKind: None)
!2505 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2506 = !{!2317, !2315}
!2507 = !{!2309}
!2508 = !{!2509, !2510, !2511, !2512}
!2509 = !DILocalVariable(name: "r", arg: 1, scope: !2311, file: !2312, line: 66, type: !2318)
!2510 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2311, file: !2312, line: 66, type: !2503)
!2511 = !DILocalVariable(name: "prev_heap_end", scope: !2311, file: !2312, line: 70, type: !2317)
!2512 = !DILocalVariable(name: "stack", scope: !2311, file: !2312, line: 71, type: !2317)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2515, file: !2516, line: 52, type: !60, isLocal: true, isDefinition: true)
!2515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2517, globals: !2620, splitDebugInlining: false, nameTableKind: None)
!2516 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_master_polling/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2517 = !{!2518, !2526, !61, !2571, !2576, !2601}
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1031, line: 656, baseType: !2520)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 650, size: 128, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2520, file: !1031, line: 652, baseType: !60, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2520, file: !1031, line: 653, baseType: !60, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2520, file: !1031, line: 654, baseType: !60, size: 32, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2520, file: !1031, line: 655, baseType: !272, size: 32, offset: 96)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2540, !2541, !2545, !2546, !2548, !2549, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2568, !2569, !2570}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2528, file: !56, line: 1922, baseType: !60, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2528, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2528, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2528, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2528, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2528, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2528, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2528, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2528, file: !56, line: 1930, baseType: !2539, size: 768, offset: 256)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1070)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2528, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2528, file: !56, line: 1932, baseType: !2542, size: 992, offset: 1056)
!2542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2543)
!2543 = !{!2544}
!2544 = !DISubrange(count: 31)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2528, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2528, file: !56, line: 1934, baseType: !2547, size: 416, offset: 2080)
!2547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !773)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2528, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2528, file: !56, line: 1936, baseType: !2550, size: 1568, offset: 2528)
!2550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2551)
!2551 = !{!2552}
!2552 = !DISubrange(count: 49)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2528, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2528, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2528, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2528, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2528, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2528, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2528, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2528, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2528, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2528, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2528, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2528, file: !56, line: 1948, baseType: !2565, size: 3744, offset: 4448)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2566)
!2566 = !{!2567}
!2567 = !DISubrange(count: 117)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2528, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2528, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2528, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2574)
!2574 = !{!2575}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2573, file: !56, line: 2157, baseType: !60, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1031, line: 418, baseType: !2578)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 395, size: 1120, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2578, file: !1031, line: 397, baseType: !272, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2578, file: !1031, line: 398, baseType: !60, size: 32, offset: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2578, file: !1031, line: 399, baseType: !60, size: 32, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2578, file: !1031, line: 400, baseType: !60, size: 32, offset: 96)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2578, file: !1031, line: 401, baseType: !60, size: 32, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2578, file: !1031, line: 402, baseType: !60, size: 32, offset: 160)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2578, file: !1031, line: 403, baseType: !1041, size: 96, offset: 192)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2578, file: !1031, line: 404, baseType: !60, size: 32, offset: 288)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2578, file: !1031, line: 405, baseType: !60, size: 32, offset: 320)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2578, file: !1031, line: 406, baseType: !60, size: 32, offset: 352)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2578, file: !1031, line: 407, baseType: !60, size: 32, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2578, file: !1031, line: 408, baseType: !60, size: 32, offset: 416)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2578, file: !1031, line: 409, baseType: !60, size: 32, offset: 448)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2578, file: !1031, line: 410, baseType: !60, size: 32, offset: 480)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2578, file: !1031, line: 411, baseType: !1050, size: 64, offset: 512)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2578, file: !1031, line: 412, baseType: !272, size: 32, offset: 576)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2578, file: !1031, line: 413, baseType: !272, size: 32, offset: 608)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2578, file: !1031, line: 414, baseType: !1054, size: 128, offset: 640)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2578, file: !1031, line: 415, baseType: !1056, size: 160, offset: 768)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2578, file: !1031, line: 416, baseType: !1060, size: 160, offset: 928)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2578, file: !1031, line: 417, baseType: !60, size: 32, offset: 1088)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2603)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2603, file: !56, line: 261, baseType: !60, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2603, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2603, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2603, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2603, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2603, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2603, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2603, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2603, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2603, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2603, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2603, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2603, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2603, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2603, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2620 = !{!2621, !2513}
!2621 = !DIGlobalVariableExpression(var: !2622, expr: !DIExpression())
!2622 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2515, file: !2516, line: 50, type: !61, isLocal: false, isDefinition: true)
!2623 = !DIGlobalVariableExpression(var: !2624, expr: !DIExpression())
!2624 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2625, file: !2630, line: 4, type: !2636, isLocal: false, isDefinition: true)
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2627, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2627 = !{!2623, !2628, !2634}
!2628 = !DIGlobalVariableExpression(var: !2629, expr: !DIExpression())
!2629 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2625, file: !2630, line: 5, type: !2631, isLocal: false, isDefinition: true)
!2630 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 88, elements: !2632)
!2632 = !{!2633}
!2633 = !DISubrange(count: 11)
!2634 = !DIGlobalVariableExpression(var: !2635, expr: !DIExpression())
!2635 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2625, file: !2630, line: 6, type: !2631, isLocal: false, isDefinition: true)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 248, elements: !2543)
!2637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2639, retainedTypes: !2662, splitDebugInlining: false, nameTableKind: None)
!2638 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2639 = !{!2057, !245, !259, !2640, !2644, !254, !157}
!2640 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2643 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661}
!2646 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2647 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2648 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2649 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2650 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2651 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2652 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2653 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2654 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2655 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2656 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2657 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2658 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2659 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2660 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2661 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2662 = !{!61, !88, !307}
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2665, retainedTypes: !2666, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2665 = !{!693, !699, !703, !786}
!2666 = !{!460}
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2669, retainedTypes: !2670, splitDebugInlining: false, nameTableKind: None)
!2668 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2669 = !{!168, !715}
!2670 = !{!862, !2671, !61, !2696, !1092}
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1031, line: 418, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 395, size: 1120, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2673, file: !1031, line: 397, baseType: !272, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2673, file: !1031, line: 398, baseType: !60, size: 32, offset: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2673, file: !1031, line: 399, baseType: !60, size: 32, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2673, file: !1031, line: 400, baseType: !60, size: 32, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2673, file: !1031, line: 401, baseType: !60, size: 32, offset: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2673, file: !1031, line: 402, baseType: !60, size: 32, offset: 160)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2673, file: !1031, line: 403, baseType: !1041, size: 96, offset: 192)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2673, file: !1031, line: 404, baseType: !60, size: 32, offset: 288)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2673, file: !1031, line: 405, baseType: !60, size: 32, offset: 320)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2673, file: !1031, line: 406, baseType: !60, size: 32, offset: 352)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2673, file: !1031, line: 407, baseType: !60, size: 32, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2673, file: !1031, line: 408, baseType: !60, size: 32, offset: 416)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2673, file: !1031, line: 409, baseType: !60, size: 32, offset: 448)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2673, file: !1031, line: 410, baseType: !60, size: 32, offset: 480)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2673, file: !1031, line: 411, baseType: !1050, size: 64, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2673, file: !1031, line: 412, baseType: !272, size: 32, offset: 576)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2673, file: !1031, line: 413, baseType: !272, size: 32, offset: 608)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2673, file: !1031, line: 414, baseType: !1054, size: 128, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2673, file: !1031, line: 415, baseType: !1056, size: 160, offset: 768)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2673, file: !1031, line: 416, baseType: !1060, size: 160, offset: 928)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2673, file: !1031, line: 417, baseType: !60, size: 32, offset: 1088)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1031, line: 378, baseType: !2698)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 363, size: 28704, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2698, file: !1031, line: 365, baseType: !1067, size: 256)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2698, file: !1031, line: 366, baseType: !1069, size: 768, offset: 256)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2698, file: !1031, line: 367, baseType: !1067, size: 256, offset: 1024)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2698, file: !1031, line: 368, baseType: !1069, size: 768, offset: 1280)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2698, file: !1031, line: 369, baseType: !1067, size: 256, offset: 2048)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2698, file: !1031, line: 370, baseType: !1069, size: 768, offset: 2304)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2698, file: !1031, line: 371, baseType: !1067, size: 256, offset: 3072)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2698, file: !1031, line: 372, baseType: !1069, size: 768, offset: 3328)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2698, file: !1031, line: 373, baseType: !1067, size: 256, offset: 4096)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2698, file: !1031, line: 374, baseType: !1080, size: 1792, offset: 4352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2698, file: !1031, line: 375, baseType: !1084, size: 1920, offset: 6144)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2698, file: !1031, line: 376, baseType: !1088, size: 20608, offset: 8064)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2698, file: !1031, line: 377, baseType: !60, size: 32, offset: 28672)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2716, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2716 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2718, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2719, splitDebugInlining: false, nameTableKind: None)
!2718 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_master_polling/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2719 = !{!631, !677, !693, !699, !703, !348, !886, !891, !895, !899, !871, !879}
!2720 = !{!"Ubuntu clang version 14.0.6"}
!2721 = !{i32 7, !"Dwarf Version", i32 2}
!2722 = !{i32 2, !"Debug Info Version", i32 3}
!2723 = !{i32 1, !"wchar_size", i32 4}
!2724 = !{i32 1, !"min_enum_size", i32 4}
!2725 = !{i32 1, !"branch-target-enforcement", i32 0}
!2726 = !{i32 1, !"sign-return-address", i32 0}
!2727 = !{i32 1, !"sign-return-address-all", i32 0}
!2728 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2729 = !{i32 7, !"frame-pointer", i32 2}
!2730 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2731, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2734)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!2733}
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2734 = !{!2735, !2737}
!2735 = !DILocalVariable(name: "region", scope: !2730, file: !3, line: 55, type: !2736)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2737 = !DILocalVariable(name: "irq_flag", scope: !2730, file: !3, line: 56, type: !61)
!2738 = !DILocation(line: 59, column: 16, scope: !2730)
!2739 = !DILocation(line: 0, scope: !2730)
!2740 = !DILocation(line: 62, column: 9, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 62, column: 9)
!2742 = !{i8 0, i8 2}
!2743 = !DILocation(line: 62, column: 9, scope: !2730)
!2744 = !DILocation(line: 64, column: 9, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 62, column: 39)
!2746 = !DILocation(line: 66, column: 9, scope: !2745)
!2747 = !DILocation(line: 69, column: 24, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 67, column: 12)
!2749 = !DILocation(line: 72, column: 9, scope: !2748)
!2750 = !DILocation(line: 77, column: 5, scope: !2730)
!2751 = !DILocation(line: 80, column: 22, scope: !2730)
!2752 = !DILocation(line: 81, column: 28, scope: !2730)
!2753 = !DILocation(line: 84, column: 19, scope: !2730)
!2754 = !DILocation(line: 85, column: 23, scope: !2730)
!2755 = !DILocation(line: 88, column: 5, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 88, column: 5)
!2757 = !DILocation(line: 90, column: 9, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 88, column: 81)
!2759 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 88, column: 5)
!2760 = !DILocation(line: 90, column: 38, scope: !2758)
!2761 = !DILocation(line: 91, column: 9, scope: !2758)
!2762 = !DILocation(line: 91, column: 42, scope: !2758)
!2763 = !DILocation(line: 94, column: 45, scope: !2758)
!2764 = !DILocation(line: 94, column: 47, scope: !2758)
!2765 = !DILocation(line: 95, column: 49, scope: !2758)
!2766 = !DILocation(line: 95, column: 51, scope: !2758)
!2767 = !DILocation(line: 88, column: 77, scope: !2759)
!2768 = !DILocation(line: 88, column: 46, scope: !2759)
!2769 = distinct !{!2769, !2755, !2770}
!2770 = !DILocation(line: 96, column: 5, scope: !2756)
!2771 = !DILocation(line: 99, column: 1, scope: !2730)
!2772 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2731, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2773)
!2773 = !{!2774}
!2774 = !DILocalVariable(name: "irq_flag", scope: !2772, file: !3, line: 329, type: !61)
!2775 = !DILocation(line: 332, column: 16, scope: !2772)
!2776 = !DILocation(line: 0, scope: !2772)
!2777 = !DILocation(line: 335, column: 21, scope: !2772)
!2778 = !DILocation(line: 336, column: 21, scope: !2772)
!2779 = !DILocation(line: 339, column: 21, scope: !2772)
!2780 = !DILocation(line: 340, column: 21, scope: !2772)
!2781 = !DILocation(line: 434, column: 3, scope: !2782, inlinedAt: !2784)
!2782 = distinct !DISubprogram(name: "__ISB", scope: !2783, file: !2783, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2783 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!2784 = distinct !DILocation(line: 343, column: 5, scope: !2772)
!2785 = !{i64 442812}
!2786 = !DILocation(line: 346, column: 5, scope: !2772)
!2787 = !DILocation(line: 348, column: 5, scope: !2772)
!2788 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2731, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2789)
!2789 = !{!2790}
!2790 = !DILocalVariable(name: "region", scope: !2788, file: !3, line: 103, type: !2736)
!2791 = !DILocation(line: 107, column: 5, scope: !2788)
!2792 = !DILocation(line: 110, column: 22, scope: !2788)
!2793 = !DILocation(line: 111, column: 28, scope: !2788)
!2794 = !DILocation(line: 114, column: 19, scope: !2788)
!2795 = !DILocation(line: 115, column: 23, scope: !2788)
!2796 = !DILocation(line: 0, scope: !2788)
!2797 = !DILocation(line: 118, column: 5, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 118, column: 5)
!2799 = !DILocation(line: 120, column: 9, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 118, column: 81)
!2801 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 118, column: 5)
!2802 = !DILocation(line: 120, column: 38, scope: !2800)
!2803 = !DILocation(line: 121, column: 9, scope: !2800)
!2804 = !DILocation(line: 121, column: 42, scope: !2800)
!2805 = !DILocation(line: 124, column: 45, scope: !2800)
!2806 = !DILocation(line: 124, column: 47, scope: !2800)
!2807 = !DILocation(line: 125, column: 49, scope: !2800)
!2808 = !DILocation(line: 125, column: 51, scope: !2800)
!2809 = !DILocation(line: 118, column: 77, scope: !2801)
!2810 = !DILocation(line: 118, column: 46, scope: !2801)
!2811 = distinct !{!2811, !2797, !2812}
!2812 = !DILocation(line: 126, column: 5, scope: !2798)
!2813 = !DILocation(line: 129, column: 20, scope: !2788)
!2814 = !DILocation(line: 131, column: 5, scope: !2788)
!2815 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2731, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2816 = !DILocation(line: 137, column: 45, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2815, file: !3, line: 137, column: 9)
!2818 = !DILocation(line: 137, column: 28, scope: !2817)
!2819 = !DILocation(line: 137, column: 9, scope: !2815)
!2820 = !DILocation(line: 142, column: 22, scope: !2815)
!2821 = !DILocation(line: 145, column: 28, scope: !2815)
!2822 = !DILocation(line: 145, column: 19, scope: !2815)
!2823 = !DILocation(line: 147, column: 5, scope: !2815)
!2824 = !DILocation(line: 0, scope: !2815)
!2825 = !DILocation(line: 148, column: 1, scope: !2815)
!2826 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2731, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2827)
!2827 = !{!2828}
!2828 = !DILocalVariable(name: "irq_flag", scope: !2826, file: !3, line: 152, type: !61)
!2829 = !DILocation(line: 155, column: 16, scope: !2826)
!2830 = !DILocation(line: 0, scope: !2826)
!2831 = !DILocation(line: 158, column: 16, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2826, file: !3, line: 158, column: 9)
!2833 = !DILocation(line: 158, column: 26, scope: !2832)
!2834 = !DILocation(line: 158, column: 9, scope: !2826)
!2835 = !DILocation(line: 160, column: 9, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 158, column: 49)
!2837 = !DILocation(line: 161, column: 5, scope: !2836)
!2838 = !DILocation(line: 164, column: 22, scope: !2826)
!2839 = !DILocation(line: 167, column: 28, scope: !2826)
!2840 = !DILocation(line: 167, column: 19, scope: !2826)
!2841 = !DILocation(line: 170, column: 5, scope: !2826)
!2842 = !DILocation(line: 172, column: 5, scope: !2826)
!2843 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2844, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2846)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!2733, !2736}
!2846 = !{!2847}
!2847 = !DILocalVariable(name: "region", arg: 1, scope: !2843, file: !3, line: 175, type: !2736)
!2848 = !DILocation(line: 0, scope: !2843)
!2849 = !DILocation(line: 178, column: 16, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 178, column: 9)
!2851 = !DILocation(line: 178, column: 9, scope: !2843)
!2852 = !DILocation(line: 183, column: 9, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 183, column: 9)
!2854 = !DILocation(line: 183, column: 38, scope: !2853)
!2855 = !DILocation(line: 183, column: 9, scope: !2843)
!2856 = !DILocation(line: 184, column: 38, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 183, column: 62)
!2858 = !DILocation(line: 184, column: 32, scope: !2857)
!2859 = !DILocation(line: 190, column: 32, scope: !2843)
!2860 = !DILocation(line: 190, column: 23, scope: !2843)
!2861 = !DILocation(line: 192, column: 5, scope: !2843)
!2862 = !DILocation(line: 193, column: 1, scope: !2843)
!2863 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2844, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2864)
!2864 = !{!2865}
!2865 = !DILocalVariable(name: "region", arg: 1, scope: !2863, file: !3, line: 195, type: !2736)
!2866 = !DILocation(line: 0, scope: !2863)
!2867 = !DILocation(line: 198, column: 16, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 198, column: 9)
!2869 = !DILocation(line: 198, column: 9, scope: !2863)
!2870 = !DILocation(line: 203, column: 35, scope: !2863)
!2871 = !DILocation(line: 203, column: 31, scope: !2863)
!2872 = !DILocation(line: 203, column: 28, scope: !2863)
!2873 = !DILocation(line: 206, column: 32, scope: !2863)
!2874 = !DILocation(line: 206, column: 23, scope: !2863)
!2875 = !DILocation(line: 209, column: 41, scope: !2863)
!2876 = !DILocation(line: 209, column: 43, scope: !2863)
!2877 = !DILocation(line: 210, column: 45, scope: !2863)
!2878 = !DILocation(line: 210, column: 47, scope: !2863)
!2879 = !DILocation(line: 212, column: 5, scope: !2863)
!2880 = !DILocation(line: 213, column: 1, scope: !2863)
!2881 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2882, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2885)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!2733, !2884}
!2884 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2885 = !{!2886}
!2886 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2881, file: !3, line: 215, type: !2884)
!2887 = !DILocation(line: 0, scope: !2881)
!2888 = !DILocation(line: 218, column: 20, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 218, column: 9)
!2890 = !DILocation(line: 218, column: 9, scope: !2881)
!2891 = !DILocation(line: 223, column: 22, scope: !2881)
!2892 = !DILocation(line: 224, column: 37, scope: !2881)
!2893 = !DILocation(line: 224, column: 22, scope: !2881)
!2894 = !DILocation(line: 227, column: 20, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 227, column: 9)
!2896 = !DILocation(line: 227, column: 9, scope: !2881)
!2897 = !DILocation(line: 228, column: 26, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 227, column: 43)
!2899 = !DILocation(line: 229, column: 5, scope: !2898)
!2900 = !DILocation(line: 232, column: 28, scope: !2881)
!2901 = !DILocation(line: 232, column: 19, scope: !2881)
!2902 = !DILocation(line: 234, column: 5, scope: !2881)
!2903 = !DILocation(line: 235, column: 1, scope: !2881)
!2904 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2905, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2914)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!2733, !2736, !2907}
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2909)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2910, file: !6, line: 220, baseType: !61, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2910, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2914 = !{!2915, !2916}
!2915 = !DILocalVariable(name: "region", arg: 1, scope: !2904, file: !3, line: 237, type: !2736)
!2916 = !DILocalVariable(name: "region_config", arg: 2, scope: !2904, file: !3, line: 237, type: !2907)
!2917 = !DILocation(line: 0, scope: !2904)
!2918 = !DILocation(line: 240, column: 16, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 240, column: 9)
!2920 = !DILocation(line: 240, column: 9, scope: !2904)
!2921 = !DILocation(line: 245, column: 23, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 245, column: 9)
!2923 = !DILocation(line: 245, column: 9, scope: !2904)
!2924 = !DILocation(line: 250, column: 24, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 250, column: 9)
!2926 = !DILocation(line: 250, column: 45, scope: !2925)
!2927 = !DILocation(line: 250, column: 9, scope: !2904)
!2928 = !DILocation(line: 251, column: 9, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 250, column: 81)
!2930 = !DILocation(line: 256, column: 24, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 256, column: 9)
!2932 = !DILocation(line: 256, column: 42, scope: !2931)
!2933 = !DILocation(line: 256, column: 9, scope: !2904)
!2934 = !DILocation(line: 257, column: 9, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 256, column: 78)
!2936 = !DILocation(line: 262, column: 5, scope: !2904)
!2937 = !DILocation(line: 262, column: 34, scope: !2904)
!2938 = !DILocation(line: 263, column: 55, scope: !2904)
!2939 = !DILocation(line: 263, column: 93, scope: !2904)
!2940 = !DILocation(line: 263, column: 76, scope: !2904)
!2941 = !DILocation(line: 263, column: 5, scope: !2904)
!2942 = !DILocation(line: 263, column: 38, scope: !2904)
!2943 = !DILocation(line: 266, column: 34, scope: !2904)
!2944 = !DILocation(line: 269, column: 45, scope: !2904)
!2945 = !DILocation(line: 269, column: 41, scope: !2904)
!2946 = !DILocation(line: 269, column: 43, scope: !2904)
!2947 = !DILocation(line: 270, column: 49, scope: !2904)
!2948 = !DILocation(line: 270, column: 45, scope: !2904)
!2949 = !DILocation(line: 270, column: 47, scope: !2904)
!2950 = !DILocation(line: 272, column: 5, scope: !2904)
!2951 = !DILocation(line: 273, column: 1, scope: !2904)
!2952 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2953, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2955)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!2733, !61}
!2955 = !{!2956, !2957}
!2956 = !DILocalVariable(name: "address", arg: 1, scope: !2952, file: !3, line: 275, type: !61)
!2957 = !DILocalVariable(name: "irq_flag", scope: !2952, file: !3, line: 277, type: !61)
!2958 = !DILocation(line: 0, scope: !2952)
!2959 = !DILocation(line: 280, column: 17, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 280, column: 9)
!2961 = !DILocation(line: 280, column: 9, scope: !2952)
!2962 = !DILocation(line: 284, column: 16, scope: !2952)
!2963 = !DILocation(line: 287, column: 32, scope: !2952)
!2964 = !DILocation(line: 287, column: 21, scope: !2952)
!2965 = !DILocation(line: 288, column: 21, scope: !2952)
!2966 = !DILocation(line: 434, column: 3, scope: !2782, inlinedAt: !2967)
!2967 = distinct !DILocation(line: 291, column: 5, scope: !2952)
!2968 = !DILocation(line: 294, column: 5, scope: !2952)
!2969 = !DILocation(line: 296, column: 5, scope: !2952)
!2970 = !DILocation(line: 297, column: 1, scope: !2952)
!2971 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2972, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2974)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!2733, !61, !61}
!2974 = !{!2975, !2976, !2977, !2978}
!2975 = !DILocalVariable(name: "address", arg: 1, scope: !2971, file: !3, line: 299, type: !61)
!2976 = !DILocalVariable(name: "length", arg: 2, scope: !2971, file: !3, line: 299, type: !61)
!2977 = !DILocalVariable(name: "irq_flag", scope: !2971, file: !3, line: 301, type: !61)
!2978 = !DILocalVariable(name: "end_address", scope: !2971, file: !3, line: 302, type: !61)
!2979 = !DILocation(line: 0, scope: !2971)
!2980 = !DILocation(line: 302, column: 36, scope: !2971)
!2981 = !DILocation(line: 305, column: 47, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 305, column: 9)
!2983 = !DILocation(line: 310, column: 16, scope: !2971)
!2984 = !DILocation(line: 313, column: 20, scope: !2971)
!2985 = !DILocation(line: 313, column: 5, scope: !2971)
!2986 = !DILocation(line: 314, column: 9, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 313, column: 35)
!2988 = !DILocation(line: 315, column: 17, scope: !2987)
!2989 = distinct !{!2989, !2985, !2990}
!2990 = !DILocation(line: 316, column: 5, scope: !2971)
!2991 = !DILocation(line: 434, column: 3, scope: !2782, inlinedAt: !2992)
!2992 = distinct !DILocation(line: 319, column: 5, scope: !2971)
!2993 = !DILocation(line: 322, column: 5, scope: !2971)
!2994 = !DILocation(line: 324, column: 5, scope: !2971)
!2995 = !DILocation(line: 325, column: 1, scope: !2971)
!2996 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2953, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2997)
!2997 = !{!2998, !2999}
!2998 = !DILocalVariable(name: "address", arg: 1, scope: !2996, file: !3, line: 351, type: !61)
!2999 = !DILocalVariable(name: "irq_flag", scope: !2996, file: !3, line: 353, type: !61)
!3000 = !DILocation(line: 0, scope: !2996)
!3001 = !DILocation(line: 356, column: 17, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 356, column: 9)
!3003 = !DILocation(line: 356, column: 9, scope: !2996)
!3004 = !DILocation(line: 361, column: 16, scope: !2996)
!3005 = !DILocation(line: 364, column: 32, scope: !2996)
!3006 = !DILocation(line: 364, column: 21, scope: !2996)
!3007 = !DILocation(line: 365, column: 21, scope: !2996)
!3008 = !DILocation(line: 434, column: 3, scope: !2782, inlinedAt: !3009)
!3009 = distinct !DILocation(line: 368, column: 5, scope: !2996)
!3010 = !DILocation(line: 371, column: 5, scope: !2996)
!3011 = !DILocation(line: 373, column: 5, scope: !2996)
!3012 = !DILocation(line: 374, column: 1, scope: !2996)
!3013 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2972, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3014)
!3014 = !{!3015, !3016, !3017, !3018}
!3015 = !DILocalVariable(name: "address", arg: 1, scope: !3013, file: !3, line: 376, type: !61)
!3016 = !DILocalVariable(name: "length", arg: 2, scope: !3013, file: !3, line: 376, type: !61)
!3017 = !DILocalVariable(name: "irq_flag", scope: !3013, file: !3, line: 378, type: !61)
!3018 = !DILocalVariable(name: "end_address", scope: !3013, file: !3, line: 379, type: !61)
!3019 = !DILocation(line: 0, scope: !3013)
!3020 = !DILocation(line: 379, column: 36, scope: !3013)
!3021 = !DILocation(line: 382, column: 47, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 382, column: 9)
!3023 = !DILocation(line: 387, column: 16, scope: !3013)
!3024 = !DILocation(line: 390, column: 20, scope: !3013)
!3025 = !DILocation(line: 390, column: 5, scope: !3013)
!3026 = !DILocation(line: 391, column: 9, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 390, column: 35)
!3028 = !DILocation(line: 392, column: 17, scope: !3027)
!3029 = distinct !{!3029, !3025, !3030}
!3030 = !DILocation(line: 393, column: 5, scope: !3013)
!3031 = !DILocation(line: 434, column: 3, scope: !2782, inlinedAt: !3032)
!3032 = distinct !DILocation(line: 396, column: 5, scope: !3013)
!3033 = !DILocation(line: 399, column: 5, scope: !3013)
!3034 = !DILocation(line: 401, column: 5, scope: !3013)
!3035 = !DILocation(line: 402, column: 1, scope: !3013)
!3036 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2731, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3037)
!3037 = !{!3038}
!3038 = !DILocalVariable(name: "irq_flag", scope: !3036, file: !3, line: 406, type: !61)
!3039 = !DILocation(line: 409, column: 16, scope: !3036)
!3040 = !DILocation(line: 0, scope: !3036)
!3041 = !DILocation(line: 412, column: 21, scope: !3036)
!3042 = !DILocation(line: 413, column: 21, scope: !3036)
!3043 = !DILocation(line: 434, column: 3, scope: !2782, inlinedAt: !3044)
!3044 = distinct !DILocation(line: 416, column: 5, scope: !3036)
!3045 = !DILocation(line: 419, column: 5, scope: !3036)
!3046 = !DILocation(line: 421, column: 5, scope: !3036)
!3047 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3048, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3050)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!91, !61}
!3050 = !{!3051, !3052}
!3051 = !DILocalVariable(name: "address", arg: 1, scope: !3047, file: !3, line: 424, type: !61)
!3052 = !DILocalVariable(name: "region", scope: !3047, file: !3, line: 426, type: !2736)
!3053 = !DILocation(line: 0, scope: !3047)
!3054 = !DILocation(line: 429, column: 18, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 429, column: 9)
!3056 = !DILocation(line: 429, column: 28, scope: !3055)
!3057 = !DILocation(line: 429, column: 9, scope: !3047)
!3058 = !DILocation(line: 435, column: 20, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 435, column: 13)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 433, column: 81)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 433, column: 5)
!3062 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 433, column: 5)
!3063 = !DILocation(line: 435, column: 41, scope: !3059)
!3064 = !DILocation(line: 435, column: 36, scope: !3059)
!3065 = !DILocation(line: 435, column: 13, scope: !3060)
!3066 = !DILocation(line: 436, column: 30, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 436, column: 17)
!3068 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 435, column: 53)
!3069 = !DILocation(line: 436, column: 59, scope: !3067)
!3070 = !DILocation(line: 436, column: 26, scope: !3067)
!3071 = !DILocation(line: 436, column: 85, scope: !3067)
!3072 = !DILocation(line: 436, column: 99, scope: !3067)
!3073 = !DILocation(line: 436, column: 97, scope: !3067)
!3074 = !DILocation(line: 436, column: 17, scope: !3068)
!3075 = !DILocation(line: 433, column: 77, scope: !3061)
!3076 = !DILocation(line: 433, column: 46, scope: !3061)
!3077 = !DILocation(line: 433, column: 5, scope: !3062)
!3078 = distinct !{!3078, !3077, !3079}
!3079 = !DILocation(line: 440, column: 5, scope: !3062)
!3080 = !DILocation(line: 442, column: 1, scope: !3047)
!3081 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2638, file: !2638, line: 95, type: !3082, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3086)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!3084, !3085}
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2057)
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3086 = !{!3087}
!3087 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3081, file: !2638, line: 95, type: !3085)
!3088 = !DILocation(line: 0, scope: !3081)
!3089 = !DILocation(line: 98, column: 9, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3081, file: !2638, line: 98, column: 9)
!3091 = !DILocation(line: 98, column: 9, scope: !3081)
!3092 = !DILocation(line: 102, column: 10, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3081, file: !2638, line: 102, column: 9)
!3094 = !DILocation(line: 102, column: 34, scope: !3093)
!3095 = !DILocation(line: 102, column: 49, scope: !3093)
!3096 = !DILocation(line: 102, column: 69, scope: !3093)
!3097 = !DILocation(line: 103, column: 38, scope: !3093)
!3098 = !DILocation(line: 102, column: 9, scope: !3081)
!3099 = !DILocation(line: 109, column: 12, scope: !3081)
!3100 = !DILocation(line: 109, column: 5, scope: !3081)
!3101 = !DILocation(line: 112, column: 5, scope: !3081)
!3102 = !DILocation(line: 115, column: 44, scope: !3081)
!3103 = !DILocation(line: 118, column: 5, scope: !3081)
!3104 = !DILocation(line: 118, column: 23, scope: !3081)
!3105 = !DILocation(line: 118, column: 35, scope: !3081)
!3106 = !DILocation(line: 121, column: 42, scope: !3081)
!3107 = !DILocation(line: 121, column: 38, scope: !3081)
!3108 = !DILocation(line: 121, column: 5, scope: !3081)
!3109 = !DILocation(line: 121, column: 17, scope: !3081)
!3110 = !DILocation(line: 121, column: 35, scope: !3081)
!3111 = !DILocation(line: 129, column: 5, scope: !3081)
!3112 = !DILocation(line: 131, column: 1, scope: !3081)
!3113 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2638, file: !2638, line: 81, type: !3114, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3116)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!91, !3085}
!3116 = !{!3117}
!3117 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3113, file: !2638, line: 81, type: !3085)
!3118 = !DILocation(line: 0, scope: !3113)
!3119 = !DILocation(line: 84, column: 25, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3113, file: !2638, line: 84, column: 9)
!3121 = !DILocation(line: 84, column: 35, scope: !3120)
!3122 = !DILocation(line: 84, column: 45, scope: !3120)
!3123 = !DILocation(line: 93, column: 1, scope: !3113)
!3124 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2638, file: !2638, line: 133, type: !3082, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3125)
!3125 = !{!3126}
!3126 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3124, file: !2638, line: 133, type: !3085)
!3127 = !DILocation(line: 0, scope: !3124)
!3128 = !DILocation(line: 136, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3124, file: !2638, line: 136, column: 9)
!3130 = !DILocation(line: 136, column: 9, scope: !3124)
!3131 = !DILocation(line: 140, column: 9, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3124, file: !2638, line: 140, column: 9)
!3133 = !DILocation(line: 140, column: 33, scope: !3132)
!3134 = !DILocation(line: 140, column: 48, scope: !3132)
!3135 = !DILocation(line: 140, column: 9, scope: !3124)
!3136 = !DILocation(line: 146, column: 12, scope: !3124)
!3137 = !DILocation(line: 146, column: 5, scope: !3124)
!3138 = !DILocation(line: 149, column: 29, scope: !3124)
!3139 = !DILocation(line: 149, column: 44, scope: !3124)
!3140 = !DILocation(line: 151, column: 29, scope: !3124)
!3141 = !DILocation(line: 151, column: 5, scope: !3124)
!3142 = !DILocation(line: 159, column: 5, scope: !3124)
!3143 = !DILocation(line: 160, column: 1, scope: !3124)
!3144 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2638, file: !2638, line: 163, type: !3145, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3148)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!3084, !3147, !1154}
!3147 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2640)
!3148 = !{!3149, !3150}
!3149 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3144, file: !2638, line: 163, type: !3147)
!3150 = !DILocalVariable(name: "count", arg: 2, scope: !3144, file: !2638, line: 163, type: !1154)
!3151 = !DILocation(line: 0, scope: !3144)
!3152 = !DILocation(line: 166, column: 9, scope: !3144)
!3153 = !DILocation(line: 167, column: 44, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3155, file: !2638, line: 167, column: 13)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !2638, line: 166, column: 51)
!3156 = distinct !DILexicalBlock(scope: !3144, file: !2638, line: 166, column: 9)
!3157 = !DILocation(line: 167, column: 59, scope: !3154)
!3158 = !DILocation(line: 167, column: 13, scope: !3155)
!3159 = !DILocation(line: 170, column: 38, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3154, file: !2638, line: 167, column: 79)
!3161 = !DILocation(line: 170, column: 13, scope: !3160)
!3162 = !DILocation(line: 172, column: 59, scope: !3160)
!3163 = !DILocation(line: 173, column: 9, scope: !3160)
!3164 = !DILocation(line: 175, column: 36, scope: !3155)
!3165 = !DILocation(line: 175, column: 18, scope: !3155)
!3166 = !DILocation(line: 177, column: 5, scope: !3155)
!3167 = !DILocation(line: 179, column: 44, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !2638, line: 179, column: 13)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !2638, line: 178, column: 55)
!3170 = distinct !DILexicalBlock(scope: !3156, file: !2638, line: 178, column: 14)
!3171 = !DILocation(line: 179, column: 59, scope: !3168)
!3172 = !DILocation(line: 179, column: 13, scope: !3169)
!3173 = !DILocation(line: 182, column: 38, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3168, file: !2638, line: 179, column: 79)
!3175 = !DILocation(line: 182, column: 13, scope: !3174)
!3176 = !DILocation(line: 184, column: 59, scope: !3174)
!3177 = !DILocation(line: 186, column: 9, scope: !3174)
!3178 = !DILocation(line: 188, column: 68, scope: !3169)
!3179 = !DILocation(line: 188, column: 50, scope: !3169)
!3180 = !DILocation(line: 188, column: 18, scope: !3169)
!3181 = !DILocation(line: 0, scope: !3156)
!3182 = !DILocation(line: 193, column: 5, scope: !3144)
!3183 = !DILocation(line: 194, column: 1, scope: !3144)
!3184 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2638, file: !2638, line: 196, type: !3185, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!3084, !61, !61, !1154}
!3187 = !{!3188, !3189, !3190}
!3188 = !DILocalVariable(name: "start_count", arg: 1, scope: !3184, file: !2638, line: 196, type: !61)
!3189 = !DILocalVariable(name: "end_count", arg: 2, scope: !3184, file: !2638, line: 196, type: !61)
!3190 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3184, file: !2638, line: 196, type: !1154)
!3191 = !DILocation(line: 0, scope: !3184)
!3192 = !DILocation(line: 198, column: 24, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3184, file: !2638, line: 198, column: 9)
!3194 = !DILocation(line: 198, column: 9, scope: !3184)
!3195 = !DILocation(line: 0, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3184, file: !2638, line: 202, column: 9)
!3197 = !DILocation(line: 208, column: 5, scope: !3184)
!3198 = !DILocation(line: 209, column: 1, scope: !3184)
!3199 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2638, file: !2638, line: 211, type: !3200, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3203)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{!3084, !3085, !3202}
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3203 = !{!3204, !3205}
!3204 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3199, file: !2638, line: 211, type: !3085)
!3205 = !DILocalVariable(name: "running_status", arg: 2, scope: !3199, file: !2638, line: 211, type: !3202)
!3206 = !DILocation(line: 0, scope: !3199)
!3207 = !DILocation(line: 213, column: 18, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3199, file: !2638, line: 213, column: 9)
!3209 = !DILocation(line: 213, column: 9, scope: !3199)
!3210 = !DILocation(line: 217, column: 47, scope: !3199)
!3211 = !DILocation(line: 217, column: 21, scope: !3199)
!3212 = !DILocation(line: 219, column: 5, scope: !3199)
!3213 = !DILocation(line: 220, column: 1, scope: !3199)
!3214 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2638, file: !2638, line: 222, type: !3215, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3217)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!3084, !3085, !307, !88}
!3217 = !{!3218, !3219, !3220}
!3218 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3214, file: !2638, line: 222, type: !3085)
!3219 = !DILocalVariable(name: "callback", arg: 2, scope: !3214, file: !2638, line: 223, type: !307)
!3220 = !DILocalVariable(name: "user_data", arg: 3, scope: !3214, file: !2638, line: 224, type: !88)
!3221 = !DILocation(line: 0, scope: !3214)
!3222 = !DILocation(line: 227, column: 9, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3214, file: !2638, line: 227, column: 9)
!3224 = !DILocation(line: 227, column: 9, scope: !3214)
!3225 = !DILocation(line: 231, column: 34, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3214, file: !2638, line: 231, column: 9)
!3227 = !DILocation(line: 231, column: 49, scope: !3226)
!3228 = !DILocation(line: 231, column: 69, scope: !3226)
!3229 = !DILocation(line: 232, column: 38, scope: !3226)
!3230 = !DILocation(line: 232, column: 53, scope: !3226)
!3231 = !DILocation(line: 231, column: 9, scope: !3214)
!3232 = !DILocation(line: 237, column: 18, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3214, file: !2638, line: 237, column: 9)
!3234 = !DILocation(line: 237, column: 9, scope: !3214)
!3235 = !DILocation(line: 245, column: 46, scope: !3214)
!3236 = !DILocation(line: 245, column: 56, scope: !3214)
!3237 = !DILocation(line: 246, column: 46, scope: !3214)
!3238 = !DILocation(line: 246, column: 56, scope: !3214)
!3239 = !DILocation(line: 248, column: 5, scope: !3214)
!3240 = !DILocation(line: 250, column: 5, scope: !3214)
!3241 = !DILocation(line: 252, column: 1, scope: !3214)
!3242 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2638, file: !2638, line: 256, type: !3243, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3246)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!3084, !3085, !61, !3245}
!3245 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3246 = !{!3247, !3248, !3249, !3250}
!3247 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3242, file: !2638, line: 256, type: !3085)
!3248 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3242, file: !2638, line: 256, type: !61)
!3249 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3242, file: !2638, line: 256, type: !3245)
!3250 = !DILocalVariable(name: "mask", scope: !3242, file: !2638, line: 259, type: !60)
!3251 = !DILocation(line: 0, scope: !3242)
!3252 = !DILocation(line: 259, column: 5, scope: !3242)
!3253 = !DILocation(line: 259, column: 23, scope: !3242)
!3254 = !DILocation(line: 261, column: 9, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3242, file: !2638, line: 261, column: 9)
!3256 = !DILocation(line: 261, column: 9, scope: !3242)
!3257 = !DILocation(line: 265, column: 34, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3242, file: !2638, line: 265, column: 9)
!3259 = !DILocation(line: 265, column: 49, scope: !3258)
!3260 = !DILocation(line: 266, column: 13, scope: !3258)
!3261 = !DILocation(line: 266, column: 41, scope: !3258)
!3262 = !DILocation(line: 266, column: 56, scope: !3258)
!3263 = !DILocation(line: 265, column: 9, scope: !3242)
!3264 = !DILocation(line: 271, column: 25, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3242, file: !2638, line: 271, column: 9)
!3266 = !DILocation(line: 271, column: 9, scope: !3242)
!3267 = !DILocation(line: 282, column: 12, scope: !3242)
!3268 = !DILocation(line: 282, column: 10, scope: !3242)
!3269 = !DILocation(line: 284, column: 5, scope: !3242)
!3270 = !DILocation(line: 286, column: 5, scope: !3242)
!3271 = !DILocation(line: 286, column: 23, scope: !3242)
!3272 = !DILocation(line: 286, column: 34, scope: !3242)
!3273 = !DILocation(line: 287, column: 5, scope: !3242)
!3274 = !DILocation(line: 287, column: 23, scope: !3242)
!3275 = !DILocation(line: 287, column: 34, scope: !3242)
!3276 = !DILocation(line: 290, column: 5, scope: !3242)
!3277 = !DILocation(line: 290, column: 23, scope: !3242)
!3278 = !DILocation(line: 290, column: 37, scope: !3242)
!3279 = !DILocation(line: 291, column: 39, scope: !3242)
!3280 = !DILocation(line: 291, column: 5, scope: !3242)
!3281 = !DILocation(line: 291, column: 23, scope: !3242)
!3282 = !DILocation(line: 291, column: 37, scope: !3242)
!3283 = !DILocation(line: 292, column: 5, scope: !3242)
!3284 = !DILocation(line: 292, column: 23, scope: !3242)
!3285 = !DILocation(line: 292, column: 37, scope: !3242)
!3286 = !DILocation(line: 297, column: 47, scope: !3242)
!3287 = !DILocation(line: 298, column: 33, scope: !3242)
!3288 = !DILocation(line: 296, column: 5, scope: !3242)
!3289 = !DILocation(line: 296, column: 23, scope: !3242)
!3290 = !DILocation(line: 296, column: 31, scope: !3242)
!3291 = !DILocation(line: 300, column: 5, scope: !3242)
!3292 = !DILocation(line: 300, column: 29, scope: !3242)
!3293 = distinct !{!3293, !3291, !3294}
!3294 = !DILocation(line: 300, column: 39, scope: !3242)
!3295 = !DILocation(line: 301, column: 23, scope: !3242)
!3296 = !DILocation(line: 301, column: 33, scope: !3242)
!3297 = !DILocation(line: 302, column: 5, scope: !3242)
!3298 = !DILocation(line: 302, column: 23, scope: !3242)
!3299 = !DILocation(line: 302, column: 34, scope: !3242)
!3300 = !DILocation(line: 303, column: 44, scope: !3242)
!3301 = !DILocation(line: 305, column: 28, scope: !3242)
!3302 = !DILocation(line: 305, column: 5, scope: !3242)
!3303 = !DILocation(line: 306, column: 5, scope: !3242)
!3304 = !DILocation(line: 307, column: 1, scope: !3242)
!3305 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2638, file: !2638, line: 310, type: !3306, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3308)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{!3084, !61}
!3308 = !{!3309}
!3309 = !DILocalVariable(name: "ms", arg: 1, scope: !3305, file: !2638, line: 310, type: !61)
!3310 = !DILocation(line: 0, scope: !3305)
!3311 = !DILocation(line: 313, column: 40, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3305, file: !2638, line: 313, column: 9)
!3313 = !DILocation(line: 313, column: 55, scope: !3312)
!3314 = !DILocation(line: 313, column: 9, scope: !3305)
!3315 = !DILocation(line: 316, column: 34, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3312, file: !2638, line: 313, column: 75)
!3317 = !DILocation(line: 316, column: 9, scope: !3316)
!3318 = !DILocation(line: 317, column: 55, scope: !3316)
!3319 = !DILocation(line: 318, column: 5, scope: !3316)
!3320 = !DILocation(line: 320, column: 20, scope: !3305)
!3321 = !DILocation(line: 320, column: 45, scope: !3305)
!3322 = !DILocation(line: 320, column: 5, scope: !3305)
!3323 = !DILocation(line: 322, column: 5, scope: !3305)
!3324 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2638, file: !2638, line: 327, type: !3243, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3325)
!3325 = !{!3326, !3327, !3328, !3329}
!3326 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3324, file: !2638, line: 327, type: !3085)
!3327 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3324, file: !2638, line: 327, type: !61)
!3328 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3324, file: !2638, line: 327, type: !3245)
!3329 = !DILocalVariable(name: "mask", scope: !3324, file: !2638, line: 329, type: !60)
!3330 = !DILocation(line: 0, scope: !3324)
!3331 = !DILocation(line: 329, column: 5, scope: !3324)
!3332 = !DILocation(line: 329, column: 23, scope: !3324)
!3333 = !DILocation(line: 331, column: 9, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3324, file: !2638, line: 331, column: 9)
!3335 = !DILocation(line: 331, column: 9, scope: !3324)
!3336 = !DILocation(line: 336, column: 34, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3324, file: !2638, line: 336, column: 9)
!3338 = !DILocation(line: 336, column: 49, scope: !3337)
!3339 = !DILocation(line: 337, column: 13, scope: !3337)
!3340 = !DILocation(line: 337, column: 41, scope: !3337)
!3341 = !DILocation(line: 337, column: 56, scope: !3337)
!3342 = !DILocation(line: 336, column: 9, scope: !3324)
!3343 = !DILocation(line: 349, column: 29, scope: !3324)
!3344 = !DILocation(line: 349, column: 49, scope: !3324)
!3345 = !DILocation(line: 351, column: 12, scope: !3324)
!3346 = !DILocation(line: 351, column: 10, scope: !3324)
!3347 = !DILocation(line: 353, column: 5, scope: !3324)
!3348 = !DILocation(line: 355, column: 5, scope: !3324)
!3349 = !DILocation(line: 355, column: 23, scope: !3324)
!3350 = !DILocation(line: 355, column: 34, scope: !3324)
!3351 = !DILocation(line: 356, column: 5, scope: !3324)
!3352 = !DILocation(line: 356, column: 23, scope: !3324)
!3353 = !DILocation(line: 356, column: 34, scope: !3324)
!3354 = !DILocation(line: 359, column: 5, scope: !3324)
!3355 = !DILocation(line: 359, column: 23, scope: !3324)
!3356 = !DILocation(line: 359, column: 37, scope: !3324)
!3357 = !DILocation(line: 360, column: 39, scope: !3324)
!3358 = !DILocation(line: 360, column: 5, scope: !3324)
!3359 = !DILocation(line: 360, column: 23, scope: !3324)
!3360 = !DILocation(line: 360, column: 37, scope: !3324)
!3361 = !DILocation(line: 361, column: 5, scope: !3324)
!3362 = !DILocation(line: 361, column: 23, scope: !3324)
!3363 = !DILocation(line: 361, column: 37, scope: !3324)
!3364 = !DILocation(line: 366, column: 47, scope: !3324)
!3365 = !DILocation(line: 367, column: 33, scope: !3324)
!3366 = !DILocation(line: 365, column: 5, scope: !3324)
!3367 = !DILocation(line: 365, column: 23, scope: !3324)
!3368 = !DILocation(line: 365, column: 31, scope: !3324)
!3369 = !DILocation(line: 369, column: 5, scope: !3324)
!3370 = !DILocation(line: 369, column: 29, scope: !3324)
!3371 = distinct !{!3371, !3369, !3372}
!3372 = !DILocation(line: 369, column: 39, scope: !3324)
!3373 = !DILocation(line: 370, column: 23, scope: !3324)
!3374 = !DILocation(line: 370, column: 33, scope: !3324)
!3375 = !DILocation(line: 371, column: 5, scope: !3324)
!3376 = !DILocation(line: 371, column: 23, scope: !3324)
!3377 = !DILocation(line: 371, column: 34, scope: !3324)
!3378 = !DILocation(line: 373, column: 28, scope: !3324)
!3379 = !DILocation(line: 373, column: 5, scope: !3324)
!3380 = !DILocation(line: 375, column: 44, scope: !3324)
!3381 = !DILocation(line: 377, column: 5, scope: !3324)
!3382 = !DILocation(line: 378, column: 1, scope: !3324)
!3383 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2638, file: !2638, line: 382, type: !3306, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3384)
!3384 = !{!3385}
!3385 = !DILocalVariable(name: "us", arg: 1, scope: !3383, file: !2638, line: 382, type: !61)
!3386 = !DILocation(line: 0, scope: !3383)
!3387 = !DILocation(line: 385, column: 40, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3383, file: !2638, line: 385, column: 9)
!3389 = !DILocation(line: 385, column: 55, scope: !3388)
!3390 = !DILocation(line: 385, column: 9, scope: !3383)
!3391 = !DILocation(line: 388, column: 34, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3388, file: !2638, line: 385, column: 75)
!3393 = !DILocation(line: 388, column: 9, scope: !3392)
!3394 = !DILocation(line: 390, column: 55, scope: !3392)
!3395 = !DILocation(line: 391, column: 5, scope: !3392)
!3396 = !DILocation(line: 392, column: 20, scope: !3383)
!3397 = !DILocation(line: 392, column: 45, scope: !3383)
!3398 = !DILocation(line: 392, column: 5, scope: !3383)
!3399 = !DILocation(line: 394, column: 5, scope: !3383)
!3400 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2638, file: !2638, line: 398, type: !3082, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3401)
!3401 = !{!3402, !3403}
!3402 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3400, file: !2638, line: 398, type: !3085)
!3403 = !DILocalVariable(name: "mask", scope: !3400, file: !2638, line: 400, type: !60)
!3404 = !DILocation(line: 0, scope: !3400)
!3405 = !DILocation(line: 400, column: 5, scope: !3400)
!3406 = !DILocation(line: 400, column: 23, scope: !3400)
!3407 = !DILocation(line: 402, column: 9, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3400, file: !2638, line: 402, column: 9)
!3409 = !DILocation(line: 402, column: 9, scope: !3400)
!3410 = !DILocation(line: 413, column: 12, scope: !3400)
!3411 = !DILocation(line: 413, column: 10, scope: !3400)
!3412 = !DILocation(line: 415, column: 5, scope: !3400)
!3413 = !DILocation(line: 415, column: 23, scope: !3400)
!3414 = !DILocation(line: 415, column: 34, scope: !3400)
!3415 = !DILocation(line: 418, column: 5, scope: !3400)
!3416 = !DILocation(line: 418, column: 23, scope: !3400)
!3417 = !DILocation(line: 418, column: 34, scope: !3400)
!3418 = !DILocation(line: 420, column: 5, scope: !3400)
!3419 = !DILocation(line: 420, column: 23, scope: !3400)
!3420 = !DILocation(line: 420, column: 35, scope: !3400)
!3421 = !DILocation(line: 422, column: 29, scope: !3400)
!3422 = !DILocation(line: 422, column: 44, scope: !3400)
!3423 = !DILocation(line: 423, column: 28, scope: !3400)
!3424 = !DILocation(line: 423, column: 5, scope: !3400)
!3425 = !DILocation(line: 425, column: 33, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3400, file: !2638, line: 425, column: 9)
!3427 = !DILocation(line: 425, column: 9, scope: !3400)
!3428 = !DILocation(line: 427, column: 53, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3426, file: !2638, line: 425, column: 62)
!3430 = !DILocation(line: 428, column: 5, scope: !3429)
!3431 = !DILocation(line: 430, column: 1, scope: !3400)
!3432 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2638, file: !2638, line: 434, type: !3433, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!3084, !1154}
!3435 = !{!3436, !3437, !3438}
!3436 = !DILocalVariable(name: "handle", arg: 1, scope: !3432, file: !2638, line: 434, type: !1154)
!3437 = !DILocalVariable(name: "timer", scope: !3432, file: !2638, line: 436, type: !61)
!3438 = !DILocalVariable(name: "mask", scope: !3432, file: !2638, line: 437, type: !61)
!3439 = !DILocation(line: 0, scope: !3432)
!3440 = !DILocation(line: 439, column: 24, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3432, file: !2638, line: 439, column: 9)
!3442 = !DILocation(line: 439, column: 41, scope: !3441)
!3443 = !DILocation(line: 439, column: 9, scope: !3432)
!3444 = !DILocation(line: 443, column: 16, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3432, file: !2638, line: 443, column: 9)
!3446 = !DILocation(line: 443, column: 9, scope: !3432)
!3447 = !DILocation(line: 448, column: 12, scope: !3432)
!3448 = !DILocation(line: 450, column: 15, scope: !3432)
!3449 = !DILocation(line: 451, column: 21, scope: !3432)
!3450 = !DILocation(line: 451, column: 13, scope: !3432)
!3451 = !DILocation(line: 452, column: 33, scope: !3432)
!3452 = !DILocation(line: 452, column: 41, scope: !3432)
!3453 = !DILocation(line: 453, column: 36, scope: !3432)
!3454 = !DILocation(line: 455, column: 5, scope: !3432)
!3455 = !DILocation(line: 456, column: 5, scope: !3432)
!3456 = !DILocation(line: 457, column: 1, scope: !3432)
!3457 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2638, file: !2638, line: 459, type: !3306, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3458)
!3458 = !{!3459, !3460}
!3459 = !DILocalVariable(name: "handle", arg: 1, scope: !3457, file: !2638, line: 459, type: !61)
!3460 = !DILocalVariable(name: "timer", scope: !3457, file: !2638, line: 461, type: !60)
!3461 = !DILocation(line: 0, scope: !3457)
!3462 = !DILocation(line: 461, column: 5, scope: !3457)
!3463 = !DILocation(line: 461, column: 23, scope: !3457)
!3464 = !DILocation(line: 463, column: 17, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3457, file: !2638, line: 463, column: 9)
!3466 = !DILocation(line: 463, column: 37, scope: !3465)
!3467 = !DILocation(line: 463, column: 9, scope: !3457)
!3468 = !DILocation(line: 467, column: 20, scope: !3457)
!3469 = !DILocation(line: 467, column: 11, scope: !3457)
!3470 = !DILocation(line: 469, column: 24, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3457, file: !2638, line: 469, column: 9)
!3472 = !DILocation(line: 469, column: 41, scope: !3471)
!3473 = !DILocation(line: 469, column: 9, scope: !3457)
!3474 = !DILocation(line: 473, column: 30, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3457, file: !2638, line: 473, column: 9)
!3476 = !DILocation(line: 473, column: 37, scope: !3475)
!3477 = !DILocation(line: 473, column: 9, scope: !3457)
!3478 = !DILocation(line: 477, column: 30, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3457, file: !2638, line: 477, column: 9)
!3480 = !DILocation(line: 477, column: 37, scope: !3479)
!3481 = !DILocation(line: 477, column: 45, scope: !3479)
!3482 = !DILocation(line: 477, column: 9, scope: !3457)
!3483 = !DILocation(line: 481, column: 26, scope: !3457)
!3484 = !DILocation(line: 481, column: 33, scope: !3457)
!3485 = !DILocation(line: 481, column: 41, scope: !3457)
!3486 = !DILocation(line: 482, column: 36, scope: !3457)
!3487 = !DILocation(line: 484, column: 5, scope: !3457)
!3488 = !DILocation(line: 485, column: 1, scope: !3457)
!3489 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2638, file: !2638, line: 487, type: !3490, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3492)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!3084, !61, !61, !307, !88}
!3492 = !{!3493, !3494, !3495, !3496, !3497, !3498, !3499}
!3493 = !DILocalVariable(name: "handle", arg: 1, scope: !3489, file: !2638, line: 487, type: !61)
!3494 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3489, file: !2638, line: 487, type: !61)
!3495 = !DILocalVariable(name: "callback", arg: 3, scope: !3489, file: !2638, line: 487, type: !307)
!3496 = !DILocalVariable(name: "user_data", arg: 4, scope: !3489, file: !2638, line: 487, type: !88)
!3497 = !DILocalVariable(name: "current_time", scope: !3489, file: !2638, line: 489, type: !61)
!3498 = !DILocalVariable(name: "mask", scope: !3489, file: !2638, line: 490, type: !61)
!3499 = !DILocalVariable(name: "timer", scope: !3489, file: !2638, line: 491, type: !61)
!3500 = !DILocation(line: 0, scope: !3489)
!3501 = !DILocation(line: 493, column: 17, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3489, file: !2638, line: 493, column: 9)
!3503 = !DILocation(line: 493, column: 37, scope: !3502)
!3504 = !DILocation(line: 493, column: 9, scope: !3489)
!3505 = !DILocation(line: 497, column: 20, scope: !3489)
!3506 = !DILocation(line: 503, column: 37, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3489, file: !2638, line: 503, column: 9)
!3508 = !DILocation(line: 503, column: 9, scope: !3489)
!3509 = !DILocation(line: 507, column: 37, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3489, file: !2638, line: 507, column: 9)
!3511 = !DILocation(line: 507, column: 45, scope: !3510)
!3512 = !DILocation(line: 507, column: 9, scope: !3489)
!3513 = !DILocation(line: 511, column: 25, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3489, file: !2638, line: 511, column: 9)
!3515 = !DILocation(line: 511, column: 9, scope: !3489)
!3516 = !DILocation(line: 516, column: 12, scope: !3489)
!3517 = !DILocation(line: 519, column: 30, scope: !3489)
!3518 = !DILocation(line: 521, column: 24, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3489, file: !2638, line: 521, column: 9)
!3520 = !DILocation(line: 521, column: 38, scope: !3519)
!3521 = !DILocation(line: 521, column: 9, scope: !3489)
!3522 = !DILocation(line: 522, column: 9, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3519, file: !2638, line: 521, column: 48)
!3524 = !DILocation(line: 523, column: 9, scope: !3523)
!3525 = !DILocation(line: 524, column: 38, scope: !3523)
!3526 = !DILocation(line: 525, column: 5, scope: !3523)
!3527 = !DILocation(line: 526, column: 5, scope: !3489)
!3528 = !DILocation(line: 528, column: 23, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3489, file: !2638, line: 528, column: 8)
!3530 = !DILocation(line: 528, column: 41, scope: !3529)
!3531 = !DILocation(line: 528, column: 8, scope: !3489)
!3532 = !DILocation(line: 529, column: 51, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3529, file: !2638, line: 528, column: 51)
!3534 = !DILocation(line: 529, column: 24, scope: !3533)
!3535 = !DILocation(line: 530, column: 5, scope: !3533)
!3536 = !DILocation(line: 0, scope: !3529)
!3537 = !DILocation(line: 534, column: 34, scope: !3489)
!3538 = !DILocation(line: 535, column: 39, scope: !3489)
!3539 = !DILocation(line: 537, column: 49, scope: !3489)
!3540 = !DILocation(line: 538, column: 80, scope: !3489)
!3541 = !DILocation(line: 538, column: 33, scope: !3489)
!3542 = !DILocation(line: 538, column: 49, scope: !3489)
!3543 = !DILocation(line: 539, column: 50, scope: !3489)
!3544 = !DILocation(line: 539, column: 61, scope: !3489)
!3545 = !DILocation(line: 540, column: 50, scope: !3489)
!3546 = !DILocation(line: 540, column: 61, scope: !3489)
!3547 = !DILocation(line: 542, column: 5, scope: !3489)
!3548 = !DILocation(line: 546, column: 30, scope: !3489)
!3549 = !DILocation(line: 548, column: 5, scope: !3489)
!3550 = !DILocation(line: 550, column: 5, scope: !3489)
!3551 = !DILocation(line: 551, column: 1, scope: !3489)
!3552 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2638, file: !2638, line: 553, type: !3306, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3553)
!3553 = !{!3554, !3555, !3556, !3557}
!3554 = !DILocalVariable(name: "handle", arg: 1, scope: !3552, file: !2638, line: 553, type: !61)
!3555 = !DILocalVariable(name: "current_time", scope: !3552, file: !2638, line: 555, type: !61)
!3556 = !DILocalVariable(name: "mask", scope: !3552, file: !2638, line: 556, type: !61)
!3557 = !DILocalVariable(name: "timer", scope: !3552, file: !2638, line: 557, type: !61)
!3558 = !DILocation(line: 0, scope: !3552)
!3559 = !DILocation(line: 559, column: 17, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3552, file: !2638, line: 559, column: 9)
!3561 = !DILocation(line: 559, column: 37, scope: !3560)
!3562 = !DILocation(line: 559, column: 9, scope: !3552)
!3563 = !DILocation(line: 563, column: 20, scope: !3552)
!3564 = !DILocation(line: 565, column: 37, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3552, file: !2638, line: 565, column: 9)
!3566 = !DILocation(line: 565, column: 48, scope: !3565)
!3567 = !DILocation(line: 565, column: 9, scope: !3552)
!3568 = !DILocation(line: 569, column: 37, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3552, file: !2638, line: 569, column: 9)
!3570 = !DILocation(line: 569, column: 45, scope: !3569)
!3571 = !DILocation(line: 569, column: 9, scope: !3552)
!3572 = !DILocation(line: 574, column: 12, scope: !3552)
!3573 = !DILocation(line: 577, column: 30, scope: !3552)
!3574 = !DILocation(line: 578, column: 5, scope: !3552)
!3575 = !DILocation(line: 579, column: 30, scope: !3552)
!3576 = !DILocation(line: 581, column: 23, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3552, file: !2638, line: 581, column: 8)
!3578 = !DILocation(line: 581, column: 41, scope: !3577)
!3579 = !DILocation(line: 581, column: 8, scope: !3552)
!3580 = !DILocation(line: 582, column: 51, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !2638, line: 581, column: 51)
!3582 = !DILocation(line: 582, column: 24, scope: !3581)
!3583 = !DILocation(line: 583, column: 5, scope: !3581)
!3584 = !DILocation(line: 0, scope: !3577)
!3585 = !DILocation(line: 587, column: 34, scope: !3552)
!3586 = !DILocation(line: 588, column: 39, scope: !3552)
!3587 = !DILocation(line: 590, column: 44, scope: !3552)
!3588 = !DILocation(line: 592, column: 24, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3552, file: !2638, line: 592, column: 9)
!3590 = !DILocation(line: 592, column: 44, scope: !3589)
!3591 = !DILocation(line: 592, column: 9, scope: !3552)
!3592 = !DILocation(line: 593, column: 9, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !2638, line: 592, column: 50)
!3594 = !DILocation(line: 594, column: 5, scope: !3593)
!3595 = !DILocation(line: 598, column: 30, scope: !3552)
!3596 = !DILocation(line: 599, column: 5, scope: !3552)
!3597 = !DILocation(line: 601, column: 5, scope: !3552)
!3598 = !DILocation(line: 603, column: 1, scope: !3552)
!3599 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2638, file: !2638, line: 605, type: !3600, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !3602)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!3084, !61, !1154}
!3602 = !{!3603, !3604, !3605, !3606, !3607}
!3603 = !DILocalVariable(name: "handle", arg: 1, scope: !3599, file: !2638, line: 605, type: !61)
!3604 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3599, file: !2638, line: 605, type: !1154)
!3605 = !DILocalVariable(name: "current_time", scope: !3599, file: !2638, line: 607, type: !61)
!3606 = !DILocalVariable(name: "mask", scope: !3599, file: !2638, line: 608, type: !61)
!3607 = !DILocalVariable(name: "timer", scope: !3599, file: !2638, line: 609, type: !61)
!3608 = !DILocation(line: 0, scope: !3599)
!3609 = !DILocation(line: 611, column: 17, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3599, file: !2638, line: 611, column: 9)
!3611 = !DILocation(line: 611, column: 37, scope: !3610)
!3612 = !DILocation(line: 611, column: 9, scope: !3599)
!3613 = !DILocation(line: 615, column: 20, scope: !3599)
!3614 = !DILocation(line: 617, column: 37, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3599, file: !2638, line: 617, column: 9)
!3616 = !DILocation(line: 617, column: 45, scope: !3615)
!3617 = !DILocation(line: 617, column: 9, scope: !3599)
!3618 = !DILocation(line: 622, column: 12, scope: !3599)
!3619 = !DILocation(line: 624, column: 35, scope: !3599)
!3620 = !DILocation(line: 624, column: 51, scope: !3599)
!3621 = !DILocation(line: 624, column: 76, scope: !3599)
!3622 = !DILocation(line: 624, column: 49, scope: !3599)
!3623 = !DILocation(line: 626, column: 37, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3599, file: !2638, line: 626, column: 9)
!3625 = !DILocation(line: 626, column: 9, scope: !3599)
!3626 = !DILocation(line: 0, scope: !3624)
!3627 = !DILocation(line: 632, column: 5, scope: !3599)
!3628 = !DILocation(line: 634, column: 5, scope: !3599)
!3629 = !DILocation(line: 636, column: 1, scope: !3599)
!3630 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3631, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!61, !61, !61, !61}
!3633 = !{!3634, !3635, !3636, !3637, !3639, !3640}
!3634 = !DILocalVariable(name: "mul1", arg: 1, scope: !3630, file: !95, line: 56, type: !61)
!3635 = !DILocalVariable(name: "mul2", arg: 2, scope: !3630, file: !95, line: 56, type: !61)
!3636 = !DILocalVariable(name: "div", arg: 3, scope: !3630, file: !95, line: 56, type: !61)
!3637 = !DILocalVariable(name: "data1", scope: !3630, file: !95, line: 58, type: !3638)
!3638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !465)
!3639 = !DILocalVariable(name: "data2", scope: !3630, file: !95, line: 59, type: !3638)
!3640 = !DILocalVariable(name: "result", scope: !3630, file: !95, line: 60, type: !3638)
!3641 = !DILocation(line: 0, scope: !3630)
!3642 = !DILocation(line: 63, column: 22, scope: !3630)
!3643 = !DILocation(line: 63, column: 32, scope: !3630)
!3644 = !DILocation(line: 64, column: 23, scope: !3630)
!3645 = !DILocation(line: 64, column: 40, scope: !3630)
!3646 = !DILocation(line: 66, column: 27, scope: !3630)
!3647 = !DILocation(line: 67, column: 27, scope: !3630)
!3648 = !DILocation(line: 67, column: 44, scope: !3630)
!3649 = !DILocation(line: 69, column: 26, scope: !3630)
!3650 = !DILocation(line: 70, column: 36, scope: !3630)
!3651 = !DILocation(line: 70, column: 43, scope: !3630)
!3652 = !DILocation(line: 70, column: 55, scope: !3630)
!3653 = !DILocation(line: 72, column: 34, scope: !3630)
!3654 = !DILocation(line: 72, column: 41, scope: !3630)
!3655 = !DILocation(line: 72, column: 5, scope: !3630)
!3656 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3657, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3659)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{!61, !264}
!3659 = !{!3660}
!3660 = !DILocalVariable(name: "gpt", arg: 1, scope: !3656, file: !95, line: 75, type: !264)
!3661 = !DILocation(line: 0, scope: !3656)
!3662 = !DILocation(line: 77, column: 17, scope: !3656)
!3663 = !DILocation(line: 77, column: 5, scope: !3656)
!3664 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3665, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3667)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!61, !61}
!3667 = !{!3668}
!3668 = !DILocalVariable(name: "ms", arg: 1, scope: !3664, file: !95, line: 81, type: !61)
!3669 = !DILocation(line: 0, scope: !3664)
!3670 = !DILocation(line: 83, column: 27, scope: !3664)
!3671 = !DILocation(line: 83, column: 37, scope: !3664)
!3672 = !DILocation(line: 83, column: 43, scope: !3664)
!3673 = !DILocation(line: 83, column: 32, scope: !3664)
!3674 = !DILocation(line: 83, column: 53, scope: !3664)
!3675 = !DILocation(line: 83, column: 59, scope: !3664)
!3676 = !DILocation(line: 83, column: 48, scope: !3664)
!3677 = !DILocation(line: 83, column: 70, scope: !3664)
!3678 = !DILocation(line: 83, column: 76, scope: !3664)
!3679 = !DILocation(line: 83, column: 65, scope: !3664)
!3680 = !DILocation(line: 83, column: 5, scope: !3664)
!3681 = !DILocation(line: 90, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3683 = !DILocation(line: 90, column: 9, scope: !290)
!3684 = !DILocation(line: 91, column: 13, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !95, line: 91, column: 13)
!3686 = distinct !DILexicalBlock(scope: !3682, file: !95, line: 90, column: 24)
!3687 = !DILocation(line: 91, column: 13, scope: !3686)
!3688 = !DILocation(line: 92, column: 32, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3685, file: !95, line: 91, column: 41)
!3690 = !DILocation(line: 92, column: 30, scope: !3689)
!3691 = !DILocation(line: 93, column: 41, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3689, file: !95, line: 93, column: 17)
!3693 = !DILocation(line: 0, scope: !3685)
!3694 = !DILocation(line: 105, column: 1, scope: !290)
!3695 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3696 = !DILocation(line: 109, column: 9, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3695, file: !95, line: 109, column: 9)
!3698 = !DILocation(line: 109, column: 9, scope: !3695)
!3699 = !DILocation(line: 110, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3697, file: !95, line: 109, column: 61)
!3701 = !DILocation(line: 111, column: 5, scope: !3700)
!3702 = !DILocation(line: 112, column: 1, scope: !3695)
!3703 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3665, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3704)
!3704 = !{!3705}
!3705 = !DILocalVariable(name: "time_us", arg: 1, scope: !3703, file: !95, line: 114, type: !61)
!3706 = !DILocation(line: 0, scope: !3703)
!3707 = !DILocation(line: 116, column: 5, scope: !3703)
!3708 = !DILocation(line: 118, column: 9, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3703, file: !95, line: 118, column: 9)
!3710 = !DILocation(line: 118, column: 9, scope: !3703)
!3711 = !DILocation(line: 120, column: 49, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3709, file: !95, line: 118, column: 37)
!3713 = !DILocation(line: 120, column: 16, scope: !3712)
!3714 = !DILocation(line: 120, column: 9, scope: !3712)
!3715 = !DILocation(line: 0, scope: !3709)
!3716 = !DILocation(line: 125, column: 1, scope: !3703)
!3717 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3665, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3718)
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "count", arg: 1, scope: !3717, file: !95, line: 127, type: !61)
!3720 = !DILocation(line: 0, scope: !3717)
!3721 = !DILocation(line: 129, column: 5, scope: !3717)
!3722 = !DILocation(line: 131, column: 9, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3717, file: !95, line: 131, column: 9)
!3724 = !DILocation(line: 131, column: 9, scope: !3717)
!3725 = !DILocation(line: 133, column: 69, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3723, file: !95, line: 131, column: 37)
!3727 = !DILocation(line: 133, column: 16, scope: !3726)
!3728 = !DILocation(line: 133, column: 9, scope: !3726)
!3729 = !DILocation(line: 0, scope: !3723)
!3730 = !DILocation(line: 138, column: 1, scope: !3717)
!3731 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3732, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3734)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{null, !264, !61, !61}
!3734 = !{!3735, !3736, !3737}
!3735 = !DILocalVariable(name: "gpt", arg: 1, scope: !3731, file: !95, line: 141, type: !264)
!3736 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3731, file: !95, line: 141, type: !61)
!3737 = !DILocalVariable(name: "divide", arg: 3, scope: !3731, file: !95, line: 141, type: !61)
!3738 = !DILocation(line: 0, scope: !3731)
!3739 = !DILocation(line: 143, column: 5, scope: !3731)
!3740 = !DILocation(line: 145, column: 33, scope: !3731)
!3741 = !DILocation(line: 145, column: 10, scope: !3731)
!3742 = !DILocation(line: 145, column: 18, scope: !3731)
!3743 = !DILocation(line: 148, column: 10, scope: !3731)
!3744 = !DILocation(line: 148, column: 18, scope: !3731)
!3745 = !DILocation(line: 149, column: 1, scope: !3731)
!3746 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3747, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3749)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{null, !264, !772}
!3749 = !{!3750, !3751, !3752, !3753}
!3750 = !DILocalVariable(name: "gpt", arg: 1, scope: !3746, file: !95, line: 151, type: !264)
!3751 = !DILocalVariable(name: "count", arg: 2, scope: !3746, file: !95, line: 151, type: !772)
!3752 = !DILocalVariable(name: "end_count", scope: !3746, file: !95, line: 153, type: !61)
!3753 = !DILocalVariable(name: "current", scope: !3746, file: !95, line: 153, type: !61)
!3754 = !DILocation(line: 0, scope: !3746)
!3755 = !DILocation(line: 155, column: 17, scope: !3746)
!3756 = !DILocation(line: 156, column: 25, scope: !3746)
!3757 = !DILocation(line: 156, column: 33, scope: !3746)
!3758 = !DILocation(line: 159, column: 19, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3746, file: !95, line: 159, column: 9)
!3760 = !DILocation(line: 159, column: 9, scope: !3746)
!3761 = !DILocation(line: 160, column: 16, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3759, file: !95, line: 159, column: 30)
!3763 = !DILocation(line: 160, column: 39, scope: !3762)
!3764 = !DILocation(line: 160, column: 9, scope: !3762)
!3765 = distinct !{!3765, !3764, !3766}
!3766 = !DILocation(line: 160, column: 51, scope: !3762)
!3767 = !DILocation(line: 162, column: 16, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3759, file: !95, line: 161, column: 12)
!3769 = !DILocation(line: 162, column: 39, scope: !3768)
!3770 = !DILocation(line: 162, column: 9, scope: !3768)
!3771 = distinct !{!3771, !3770, !3772}
!3772 = !DILocation(line: 162, column: 50, scope: !3768)
!3773 = !DILocation(line: 163, column: 16, scope: !3768)
!3774 = !DILocation(line: 163, column: 39, scope: !3768)
!3775 = !DILocation(line: 163, column: 9, scope: !3768)
!3776 = distinct !{!3776, !3775, !3777}
!3777 = !DILocation(line: 163, column: 51, scope: !3768)
!3778 = !DILocation(line: 165, column: 1, scope: !3746)
!3779 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3780, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3782)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{null, !264}
!3782 = !{!3783}
!3783 = !DILocalVariable(name: "gpt", arg: 1, scope: !3779, file: !95, line: 166, type: !264)
!3784 = !DILocation(line: 0, scope: !3779)
!3785 = !DILocation(line: 168, column: 10, scope: !3779)
!3786 = !DILocation(line: 168, column: 22, scope: !3779)
!3787 = !DILocation(line: 169, column: 10, scope: !3779)
!3788 = !DILocation(line: 169, column: 22, scope: !3779)
!3789 = !DILocation(line: 170, column: 21, scope: !3779)
!3790 = !DILocation(line: 171, column: 5, scope: !3779)
!3791 = !DILocation(line: 171, column: 16, scope: !3779)
!3792 = distinct !{!3792, !3790, !3793}
!3793 = !DILocation(line: 171, column: 26, scope: !3779)
!3794 = !DILocation(line: 172, column: 10, scope: !3779)
!3795 = !DILocation(line: 172, column: 22, scope: !3779)
!3796 = !DILocation(line: 173, column: 10, scope: !3779)
!3797 = !DILocation(line: 173, column: 22, scope: !3779)
!3798 = !DILocation(line: 174, column: 10, scope: !3779)
!3799 = !DILocation(line: 174, column: 22, scope: !3779)
!3800 = !DILocation(line: 176, column: 13, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3779, file: !95, line: 176, column: 9)
!3802 = !DILocation(line: 176, column: 9, scope: !3779)
!3803 = !DILocation(line: 177, column: 27, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3801, file: !95, line: 176, column: 22)
!3805 = !DILocation(line: 178, column: 5, scope: !3804)
!3806 = !DILocation(line: 179, column: 1, scope: !3779)
!3807 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3657, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3808)
!3808 = !{!3809, !3810}
!3809 = !DILocalVariable(name: "gpt", arg: 1, scope: !3807, file: !95, line: 181, type: !264)
!3810 = !DILocalVariable(name: "mask", scope: !3807, file: !95, line: 183, type: !60)
!3811 = !DILocation(line: 0, scope: !3807)
!3812 = !DILocation(line: 183, column: 5, scope: !3807)
!3813 = !DILocation(line: 183, column: 23, scope: !3807)
!3814 = !DILocation(line: 185, column: 17, scope: !3807)
!3815 = !DILocation(line: 185, column: 10, scope: !3807)
!3816 = !DILocation(line: 187, column: 22, scope: !3807)
!3817 = !DILocation(line: 189, column: 12, scope: !3807)
!3818 = !DILocation(line: 190, column: 1, scope: !3807)
!3819 = !DILocation(line: 189, column: 5, scope: !3807)
!3820 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3821, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3823)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{null, !264, !61}
!3823 = !{!3824, !3825}
!3824 = !DILocalVariable(name: "gpt", arg: 1, scope: !3820, file: !95, line: 192, type: !264)
!3825 = !DILocalVariable(name: "mask", arg: 2, scope: !3820, file: !95, line: 192, type: !61)
!3826 = !DILocation(line: 0, scope: !3820)
!3827 = !DILocation(line: 194, column: 10, scope: !3820)
!3828 = !DILocation(line: 194, column: 21, scope: !3820)
!3829 = !DILocation(line: 195, column: 1, scope: !3820)
!3830 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !1104, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3831)
!3831 = !{!3832, !3833, !3834, !3835, !3836}
!3832 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3830, file: !95, line: 197, type: !862)
!3833 = !DILocalVariable(name: "i", scope: !3830, file: !95, line: 199, type: !61)
!3834 = !DILocalVariable(name: "mask", scope: !3830, file: !95, line: 200, type: !60)
!3835 = !DILocalVariable(name: "state", scope: !3830, file: !95, line: 201, type: !60)
!3836 = !DILocalVariable(name: "enable", scope: !3830, file: !95, line: 202, type: !60)
!3837 = !DILocation(line: 0, scope: !3830)
!3838 = !DILocation(line: 200, column: 5, scope: !3830)
!3839 = !DILocation(line: 200, column: 23, scope: !3830)
!3840 = !DILocation(line: 201, column: 5, scope: !3830)
!3841 = !DILocation(line: 201, column: 23, scope: !3830)
!3842 = !DILocation(line: 202, column: 5, scope: !3830)
!3843 = !DILocation(line: 202, column: 23, scope: !3830)
!3844 = !DILocation(line: 207, column: 5, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3830, file: !95, line: 207, column: 5)
!3846 = !DILocation(line: 209, column: 18, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !95, line: 207, column: 44)
!3848 = distinct !DILexicalBlock(scope: !3845, file: !95, line: 207, column: 5)
!3849 = !DILocation(line: 209, column: 29, scope: !3847)
!3850 = !DILocation(line: 209, column: 16, scope: !3847)
!3851 = !DILocation(line: 210, column: 29, scope: !3847)
!3852 = !DILocation(line: 210, column: 16, scope: !3847)
!3853 = !DILocation(line: 212, column: 16, scope: !3847)
!3854 = !DILocation(line: 212, column: 14, scope: !3847)
!3855 = !DILocation(line: 214, column: 9, scope: !3847)
!3856 = !DILocation(line: 214, column: 20, scope: !3847)
!3857 = !DILocation(line: 214, column: 32, scope: !3847)
!3858 = !DILocation(line: 216, column: 14, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3847, file: !95, line: 216, column: 13)
!3860 = !DILocation(line: 216, column: 20, scope: !3859)
!3861 = !DILocation(line: 216, column: 40, scope: !3859)
!3862 = !DILocation(line: 216, column: 44, scope: !3859)
!3863 = !DILocation(line: 216, column: 51, scope: !3859)
!3864 = !DILocation(line: 216, column: 13, scope: !3847)
!3865 = !DILocation(line: 224, column: 51, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !95, line: 224, column: 17)
!3867 = distinct !DILexicalBlock(scope: !3859, file: !95, line: 216, column: 70)
!3868 = !DILocation(line: 224, column: 60, scope: !3866)
!3869 = !DILocation(line: 224, column: 17, scope: !3867)
!3870 = !DILocation(line: 225, column: 94, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3866, file: !95, line: 224, column: 69)
!3872 = !DILocation(line: 225, column: 17, scope: !3871)
!3873 = !DILocation(line: 226, column: 13, scope: !3871)
!3874 = !DILocation(line: 229, column: 31, scope: !3847)
!3875 = !DILocation(line: 229, column: 42, scope: !3847)
!3876 = !DILocation(line: 229, column: 9, scope: !3847)
!3877 = !DILocation(line: 207, column: 40, scope: !3848)
!3878 = !DILocation(line: 207, column: 19, scope: !3848)
!3879 = distinct !{!3879, !3844, !3880}
!3880 = !DILocation(line: 231, column: 5, scope: !3845)
!3881 = !DILocation(line: 233, column: 1, scope: !3830)
!3882 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3883 = !DILocation(line: 238, column: 5, scope: !3882)
!3884 = !DILocation(line: 239, column: 5, scope: !3882)
!3885 = !DILocation(line: 240, column: 5, scope: !3882)
!3886 = !DILocation(line: 241, column: 1, scope: !3882)
!3887 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3657, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3888)
!3888 = !{!3889, !3890, !3891, !3892, !3893}
!3889 = !DILocalVariable(name: "gpt", arg: 1, scope: !3887, file: !95, line: 242, type: !264)
!3890 = !DILocalVariable(name: "time", scope: !3887, file: !95, line: 244, type: !60)
!3891 = !DILocalVariable(name: "count", scope: !3887, file: !95, line: 245, type: !61)
!3892 = !DILocalVariable(name: "time_s", scope: !3887, file: !95, line: 245, type: !61)
!3893 = !DILocalVariable(name: "time_ms", scope: !3887, file: !95, line: 245, type: !61)
!3894 = !DILocation(line: 0, scope: !3887)
!3895 = !DILocation(line: 244, column: 5, scope: !3887)
!3896 = !DILocation(line: 244, column: 23, scope: !3887)
!3897 = !DILocation(line: 247, column: 13, scope: !3887)
!3898 = !DILocation(line: 248, column: 20, scope: !3887)
!3899 = !DILocation(line: 249, column: 23, scope: !3887)
!3900 = !DILocation(line: 249, column: 32, scope: !3887)
!3901 = !DILocation(line: 249, column: 39, scope: !3887)
!3902 = !DILocation(line: 249, column: 48, scope: !3887)
!3903 = !DILocation(line: 250, column: 19, scope: !3887)
!3904 = !DILocation(line: 250, column: 26, scope: !3887)
!3905 = !DILocation(line: 250, column: 10, scope: !3887)
!3906 = !DILocation(line: 253, column: 5, scope: !3887)
!3907 = !DILocation(line: 253, column: 30, scope: !3887)
!3908 = !DILocation(line: 253, column: 38, scope: !3887)
!3909 = !DILocation(line: 254, column: 5, scope: !3887)
!3910 = !DILocation(line: 254, column: 36, scope: !3887)
!3911 = distinct !{!3911, !3909, !3912}
!3912 = !DILocation(line: 254, column: 46, scope: !3887)
!3913 = !DILocation(line: 255, column: 12, scope: !3887)
!3914 = !DILocation(line: 256, column: 1, scope: !3887)
!3915 = !DILocation(line: 255, column: 5, scope: !3887)
!3916 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3917, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3919)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!61}
!3919 = !{!3920}
!3920 = !DILocalVariable(name: "i", scope: !3916, file: !95, line: 260, type: !61)
!3921 = !DILocation(line: 0, scope: !3916)
!3922 = !DILocation(line: 262, column: 5, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3916, file: !95, line: 262, column: 5)
!3924 = !DILocation(line: 263, column: 37, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !95, line: 263, column: 13)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !95, line: 262, column: 45)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !95, line: 262, column: 5)
!3928 = !DILocation(line: 263, column: 45, scope: !3925)
!3929 = !DILocation(line: 263, column: 13, scope: !3926)
!3930 = !DILocation(line: 262, column: 41, scope: !3927)
!3931 = !DILocation(line: 262, column: 19, scope: !3927)
!3932 = distinct !{!3932, !3922, !3933}
!3933 = !DILocation(line: 266, column: 5, scope: !3923)
!3934 = !DILocation(line: 269, column: 1, scope: !3916)
!3935 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3936)
!3936 = !{!3937, !3938}
!3937 = !DILocalVariable(name: "minimum_time", scope: !3935, file: !95, line: 273, type: !61)
!3938 = !DILocalVariable(name: "current_timer", scope: !3935, file: !95, line: 273, type: !61)
!3939 = !DILocation(line: 273, column: 5, scope: !3935)
!3940 = !DILocation(line: 275, column: 24, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3935, file: !95, line: 275, column: 9)
!3942 = !DILocation(line: 275, column: 9, scope: !3935)
!3943 = !DILocation(line: 0, scope: !3935)
!3944 = !DILocation(line: 279, column: 5, scope: !3935)
!3945 = !DILocation(line: 282, column: 56, scope: !3935)
!3946 = !DILocation(line: 282, column: 39, scope: !3935)
!3947 = !DILocation(line: 284, column: 30, scope: !3935)
!3948 = !DILocation(line: 285, column: 45, scope: !3935)
!3949 = !DILocation(line: 285, column: 5, scope: !3935)
!3950 = !DILocation(line: 286, column: 30, scope: !3935)
!3951 = !DILocation(line: 287, column: 1, scope: !3935)
!3952 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3953, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{null, !1154, !1154}
!3955 = !{!3956, !3957, !3958, !3959, !3960}
!3956 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3952, file: !95, line: 308, type: !1154)
!3957 = !DILocalVariable(name: "number", arg: 2, scope: !3952, file: !95, line: 308, type: !1154)
!3958 = !DILocalVariable(name: "i", scope: !3952, file: !95, line: 310, type: !61)
!3959 = !DILocalVariable(name: "minimum", scope: !3952, file: !95, line: 311, type: !61)
!3960 = !DILocalVariable(name: "data", scope: !3952, file: !95, line: 312, type: !61)
!3961 = !DILocation(line: 0, scope: !3952)
!3962 = !DILocation(line: 314, column: 5, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3952, file: !95, line: 314, column: 5)
!3964 = !DILocation(line: 315, column: 37, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !95, line: 315, column: 13)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !95, line: 314, column: 45)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !95, line: 314, column: 5)
!3968 = !DILocation(line: 315, column: 13, scope: !3966)
!3969 = !DILocation(line: 316, column: 20, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3965, file: !95, line: 315, column: 57)
!3971 = !DILocation(line: 318, column: 22, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3970, file: !95, line: 318, column: 17)
!3973 = !DILocation(line: 318, column: 17, scope: !3970)
!3974 = !DILocation(line: 320, column: 25, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !95, line: 318, column: 33)
!3976 = !DILocation(line: 321, column: 13, scope: !3975)
!3977 = !DILocation(line: 314, column: 41, scope: !3967)
!3978 = !DILocation(line: 314, column: 19, scope: !3967)
!3979 = distinct !{!3979, !3962, !3980}
!3980 = !DILocation(line: 323, column: 5, scope: !3963)
!3981 = !DILocation(line: 325, column: 19, scope: !3952)
!3982 = !DILocation(line: 326, column: 1, scope: !3952)
!3983 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3665, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3984)
!3984 = !{!3985, !3986, !3987, !3988}
!3985 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3983, file: !95, line: 289, type: !61)
!3986 = !DILocalVariable(name: "time_out_delta", scope: !3983, file: !95, line: 291, type: !61)
!3987 = !DILocalVariable(name: "current_delta", scope: !3983, file: !95, line: 292, type: !61)
!3988 = !DILocalVariable(name: "ret_value", scope: !3983, file: !95, line: 293, type: !61)
!3989 = !DILocation(line: 0, scope: !3983)
!3990 = !DILocation(line: 295, column: 22, scope: !3983)
!3991 = !DILocation(line: 296, column: 22, scope: !3983)
!3992 = !DILocation(line: 298, column: 24, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3983, file: !95, line: 298, column: 9)
!3994 = !DILocation(line: 298, column: 9, scope: !3983)
!3995 = !DILocation(line: 306, column: 5, scope: !3983)
!3996 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3997)
!3997 = !{!3998, !3999, !4000, !4001}
!3998 = !DILocalVariable(name: "parameter", arg: 1, scope: !3996, file: !95, line: 329, type: !88)
!3999 = !DILocalVariable(name: "i", scope: !3996, file: !95, line: 331, type: !61)
!4000 = !DILocalVariable(name: "time_ms", scope: !3996, file: !95, line: 332, type: !60)
!4001 = !DILocalVariable(name: "data", scope: !3996, file: !95, line: 333, type: !60)
!4002 = !DILocation(line: 0, scope: !3996)
!4003 = !DILocation(line: 332, column: 5, scope: !3996)
!4004 = !DILocation(line: 332, column: 23, scope: !3996)
!4005 = !DILocation(line: 333, column: 5, scope: !3996)
!4006 = !DILocation(line: 333, column: 23, scope: !3996)
!4007 = !DILocation(line: 336, column: 24, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3996, file: !95, line: 336, column: 9)
!4009 = !DILocation(line: 336, column: 41, scope: !4008)
!4010 = !DILocation(line: 336, column: 9, scope: !3996)
!4011 = !DILocation(line: 338, column: 34, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !95, line: 336, column: 47)
!4013 = !DILocation(line: 339, column: 9, scope: !4012)
!4014 = !DILocation(line: 340, column: 34, scope: !4012)
!4015 = !DILocation(line: 342, column: 46, scope: !4012)
!4016 = !DILocation(line: 342, column: 19, scope: !4012)
!4017 = !DILocation(line: 342, column: 17, scope: !4012)
!4018 = !DILocation(line: 344, column: 41, scope: !4012)
!4019 = !DILocation(line: 344, column: 38, scope: !4012)
!4020 = !DILocation(line: 345, column: 42, scope: !4012)
!4021 = !DILocation(line: 347, column: 9, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4012, file: !95, line: 347, column: 9)
!4023 = !DILocation(line: 348, column: 41, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !95, line: 348, column: 17)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !95, line: 347, column: 49)
!4026 = distinct !DILexicalBlock(scope: !4022, file: !95, line: 347, column: 9)
!4027 = !DILocation(line: 348, column: 17, scope: !4025)
!4028 = !DILocation(line: 350, column: 24, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4024, file: !95, line: 348, column: 61)
!4030 = !DILocation(line: 350, column: 22, scope: !4029)
!4031 = !DILocation(line: 352, column: 21, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4029, file: !95, line: 352, column: 21)
!4033 = !DILocation(line: 352, column: 26, scope: !4032)
!4034 = !DILocation(line: 352, column: 21, scope: !4029)
!4035 = !DILocation(line: 353, column: 56, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4032, file: !95, line: 352, column: 32)
!4037 = !DILocation(line: 354, column: 55, scope: !4036)
!4038 = !DILocation(line: 356, column: 62, scope: !4036)
!4039 = !DILocation(line: 356, column: 112, scope: !4036)
!4040 = !DILocation(line: 356, column: 21, scope: !4036)
!4041 = !DILocation(line: 357, column: 17, scope: !4036)
!4042 = !DILocation(line: 347, column: 45, scope: !4026)
!4043 = !DILocation(line: 347, column: 23, scope: !4026)
!4044 = distinct !{!4044, !4021, !4045}
!4045 = !DILocation(line: 360, column: 9, scope: !4022)
!4046 = !DILocation(line: 362, column: 42, scope: !4012)
!4047 = !DILocation(line: 364, column: 28, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4012, file: !95, line: 364, column: 13)
!4049 = !DILocation(line: 364, column: 48, scope: !4048)
!4050 = !DILocation(line: 364, column: 13, scope: !4012)
!4051 = !DILocation(line: 365, column: 13, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !95, line: 364, column: 54)
!4053 = !DILocation(line: 366, column: 9, scope: !4052)
!4054 = !DILocation(line: 369, column: 1, scope: !3996)
!4055 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !346, file: !346, line: 50, type: !4056, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4059)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!61, !4058}
!4058 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !348)
!4059 = !{!4060, !4061, !4062}
!4060 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4055, file: !346, line: 50, type: !4058)
!4061 = !DILocalVariable(name: "i", scope: !4055, file: !346, line: 52, type: !61)
!4062 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4055, file: !346, line: 53, type: !1060)
!4063 = !DILocation(line: 0, scope: !4055)
!4064 = !DILocation(line: 53, column: 14, scope: !4055)
!4065 = !DILocation(line: 55, column: 5, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4055, file: !346, line: 55, column: 5)
!4067 = !DILocation(line: 55, column: 25, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4066, file: !346, line: 55, column: 5)
!4069 = !DILocation(line: 55, column: 19, scope: !4068)
!4070 = distinct !{!4070, !4065, !4071}
!4071 = !DILocation(line: 59, column: 5, scope: !4066)
!4072 = !DILocation(line: 56, column: 13, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !346, line: 56, column: 13)
!4074 = distinct !DILexicalBlock(scope: !4068, file: !346, line: 55, column: 29)
!4075 = !DILocation(line: 56, column: 40, scope: !4073)
!4076 = !DILocation(line: 56, column: 13, scope: !4074)
!4077 = !DILocation(line: 61, column: 1, scope: !4055)
!4078 = distinct !DISubprogram(name: "hal_gpio_init", scope: !346, file: !346, line: 66, type: !4079, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4082)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!4081, !4058}
!4081 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !401, line: 229, baseType: !400)
!4082 = !{!4083}
!4083 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4078, file: !346, line: 66, type: !4058)
!4084 = !DILocation(line: 0, scope: !4078)
!4085 = !DILocation(line: 68, column: 5, scope: !4078)
!4086 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !346, file: !346, line: 72, type: !4079, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4087)
!4087 = !{!4088}
!4088 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4086, file: !346, line: 72, type: !4058)
!4089 = !DILocation(line: 0, scope: !4086)
!4090 = !DILocation(line: 74, column: 5, scope: !4086)
!4091 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !346, file: !346, line: 79, type: !4092, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4094)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!4081, !4058, !442}
!4094 = !{!4095, !4096, !4097, !4098}
!4095 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4091, file: !346, line: 79, type: !4058)
!4096 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4091, file: !346, line: 79, type: !442)
!4097 = !DILocalVariable(name: "no", scope: !4091, file: !346, line: 81, type: !61)
!4098 = !DILocalVariable(name: "remainder", scope: !4091, file: !346, line: 82, type: !61)
!4099 = !DILocation(line: 0, scope: !4091)
!4100 = !DILocation(line: 84, column: 18, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4091, file: !346, line: 84, column: 9)
!4102 = !DILocation(line: 84, column: 9, scope: !4091)
!4103 = !DILocation(line: 89, column: 19, scope: !4091)
!4104 = !DILocation(line: 92, column: 26, scope: !4091)
!4105 = !DILocation(line: 94, column: 24, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4091, file: !346, line: 94, column: 9)
!4107 = !DILocation(line: 0, scope: !4106)
!4108 = !DILocation(line: 94, column: 9, scope: !4091)
!4109 = !DILocation(line: 101, column: 1, scope: !4091)
!4110 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !346, file: !346, line: 105, type: !4111, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4114)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{!4081, !4058, !4113}
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!4114 = !{!4115, !4116, !4117, !4118, !4119}
!4115 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4110, file: !346, line: 105, type: !4058)
!4116 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4110, file: !346, line: 105, type: !4113)
!4117 = !DILocalVariable(name: "no", scope: !4110, file: !346, line: 107, type: !61)
!4118 = !DILocalVariable(name: "remainder", scope: !4110, file: !346, line: 108, type: !61)
!4119 = !DILocalVariable(name: "temp", scope: !4110, file: !346, line: 109, type: !61)
!4120 = !DILocation(line: 0, scope: !4110)
!4121 = !DILocation(line: 111, column: 18, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4110, file: !346, line: 111, column: 9)
!4123 = !DILocation(line: 111, column: 9, scope: !4110)
!4124 = !DILocation(line: 115, column: 14, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4110, file: !346, line: 115, column: 9)
!4126 = !DILocation(line: 115, column: 9, scope: !4110)
!4127 = !DILocation(line: 120, column: 19, scope: !4110)
!4128 = !DILocation(line: 123, column: 26, scope: !4110)
!4129 = !DILocation(line: 125, column: 12, scope: !4110)
!4130 = !DILocation(line: 125, column: 54, scope: !4110)
!4131 = !DILocation(line: 126, column: 45, scope: !4110)
!4132 = !DILocation(line: 126, column: 17, scope: !4110)
!4133 = !DILocation(line: 127, column: 51, scope: !4110)
!4134 = !DILocation(line: 127, column: 21, scope: !4110)
!4135 = !DILocation(line: 128, column: 5, scope: !4110)
!4136 = !DILocation(line: 130, column: 1, scope: !4110)
!4137 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !346, file: !346, line: 134, type: !4138, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4141)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!4140, !4058, !460}
!4140 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !401, line: 238, baseType: !411)
!4141 = !{!4142, !4143, !4144, !4145, !4146}
!4142 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4137, file: !346, line: 134, type: !4058)
!4143 = !DILocalVariable(name: "function_index", arg: 2, scope: !4137, file: !346, line: 134, type: !460)
!4144 = !DILocalVariable(name: "no", scope: !4137, file: !346, line: 136, type: !61)
!4145 = !DILocalVariable(name: "remainder", scope: !4137, file: !346, line: 137, type: !61)
!4146 = !DILocalVariable(name: "irq_status", scope: !4137, file: !346, line: 138, type: !61)
!4147 = !DILocation(line: 0, scope: !4137)
!4148 = !DILocation(line: 140, column: 18, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4137, file: !346, line: 140, column: 9)
!4150 = !DILocation(line: 140, column: 9, scope: !4137)
!4151 = !DILocation(line: 145, column: 24, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4137, file: !346, line: 145, column: 9)
!4153 = !DILocation(line: 145, column: 9, scope: !4137)
!4154 = !DILocation(line: 145, column: 9, scope: !4152)
!4155 = !DILocation(line: 150, column: 19, scope: !4137)
!4156 = !DILocation(line: 156, column: 18, scope: !4137)
!4157 = !DILocation(line: 157, column: 105, scope: !4137)
!4158 = !DILocation(line: 157, column: 91, scope: !4137)
!4159 = !DILocation(line: 157, column: 5, scope: !4137)
!4160 = !DILocation(line: 157, column: 48, scope: !4137)
!4161 = !DILocation(line: 157, column: 62, scope: !4137)
!4162 = !DILocation(line: 158, column: 80, scope: !4137)
!4163 = !DILocation(line: 158, column: 5, scope: !4137)
!4164 = !DILocation(line: 158, column: 48, scope: !4137)
!4165 = !DILocation(line: 158, column: 62, scope: !4137)
!4166 = !DILocation(line: 159, column: 5, scope: !4137)
!4167 = !DILocation(line: 160, column: 5, scope: !4137)
!4168 = !DILocation(line: 162, column: 1, scope: !4137)
!4169 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !346, file: !346, line: 166, type: !4170, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4173)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!4081, !4058, !4172}
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!4173 = !{!4174, !4175, !4176, !4177, !4178}
!4174 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4169, file: !346, line: 166, type: !4058)
!4175 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4169, file: !346, line: 166, type: !4172)
!4176 = !DILocalVariable(name: "no", scope: !4169, file: !346, line: 168, type: !61)
!4177 = !DILocalVariable(name: "remainder", scope: !4169, file: !346, line: 169, type: !61)
!4178 = !DILocalVariable(name: "temp", scope: !4169, file: !346, line: 170, type: !61)
!4179 = !DILocation(line: 0, scope: !4169)
!4180 = !DILocation(line: 172, column: 18, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4169, file: !346, line: 172, column: 9)
!4182 = !DILocation(line: 172, column: 9, scope: !4169)
!4183 = !DILocation(line: 176, column: 14, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4169, file: !346, line: 176, column: 9)
!4185 = !DILocation(line: 176, column: 9, scope: !4169)
!4186 = !DILocation(line: 181, column: 19, scope: !4169)
!4187 = !DILocation(line: 184, column: 26, scope: !4169)
!4188 = !DILocation(line: 186, column: 12, scope: !4169)
!4189 = !DILocation(line: 186, column: 54, scope: !4169)
!4190 = !DILocation(line: 187, column: 45, scope: !4169)
!4191 = !DILocation(line: 187, column: 17, scope: !4169)
!4192 = !DILocation(line: 188, column: 41, scope: !4169)
!4193 = !DILocation(line: 188, column: 16, scope: !4169)
!4194 = !DILocation(line: 189, column: 5, scope: !4169)
!4195 = !DILocation(line: 191, column: 1, scope: !4169)
!4196 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !346, file: !346, line: 195, type: !4197, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4199)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!4081, !4058, !443}
!4199 = !{!4200, !4201, !4202, !4203}
!4200 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4196, file: !346, line: 195, type: !4058)
!4201 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4196, file: !346, line: 195, type: !443)
!4202 = !DILocalVariable(name: "no", scope: !4196, file: !346, line: 197, type: !61)
!4203 = !DILocalVariable(name: "remainder", scope: !4196, file: !346, line: 198, type: !61)
!4204 = !DILocation(line: 0, scope: !4196)
!4205 = !DILocation(line: 200, column: 18, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4196, file: !346, line: 200, column: 9)
!4207 = !DILocation(line: 200, column: 9, scope: !4196)
!4208 = !DILocation(line: 205, column: 19, scope: !4196)
!4209 = !DILocation(line: 208, column: 26, scope: !4196)
!4210 = !DILocation(line: 210, column: 9, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4196, file: !346, line: 210, column: 9)
!4212 = !DILocation(line: 0, scope: !4211)
!4213 = !DILocation(line: 210, column: 9, scope: !4196)
!4214 = !DILocation(line: 216, column: 1, scope: !4196)
!4215 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !346, file: !346, line: 220, type: !4170, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4216)
!4216 = !{!4217, !4218, !4219, !4220, !4221}
!4217 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4215, file: !346, line: 220, type: !4058)
!4218 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4215, file: !346, line: 220, type: !4172)
!4219 = !DILocalVariable(name: "no", scope: !4215, file: !346, line: 222, type: !61)
!4220 = !DILocalVariable(name: "remainder", scope: !4215, file: !346, line: 223, type: !61)
!4221 = !DILocalVariable(name: "temp", scope: !4215, file: !346, line: 224, type: !61)
!4222 = !DILocation(line: 0, scope: !4215)
!4223 = !DILocation(line: 226, column: 18, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4215, file: !346, line: 226, column: 9)
!4225 = !DILocation(line: 226, column: 9, scope: !4215)
!4226 = !DILocation(line: 230, column: 14, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4215, file: !346, line: 230, column: 9)
!4228 = !DILocation(line: 230, column: 9, scope: !4215)
!4229 = !DILocation(line: 235, column: 19, scope: !4215)
!4230 = !DILocation(line: 238, column: 26, scope: !4215)
!4231 = !DILocation(line: 240, column: 12, scope: !4215)
!4232 = !DILocation(line: 240, column: 55, scope: !4215)
!4233 = !DILocation(line: 241, column: 45, scope: !4215)
!4234 = !DILocation(line: 241, column: 17, scope: !4215)
!4235 = !DILocation(line: 242, column: 41, scope: !4215)
!4236 = !DILocation(line: 242, column: 16, scope: !4215)
!4237 = !DILocation(line: 243, column: 5, scope: !4215)
!4238 = !DILocation(line: 245, column: 1, scope: !4215)
!4239 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !346, file: !346, line: 249, type: !4079, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4240)
!4240 = !{!4241, !4242, !4243, !4244}
!4241 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4239, file: !346, line: 249, type: !4058)
!4242 = !DILocalVariable(name: "no", scope: !4239, file: !346, line: 251, type: !61)
!4243 = !DILocalVariable(name: "remainder", scope: !4239, file: !346, line: 252, type: !61)
!4244 = !DILocalVariable(name: "temp", scope: !4239, file: !346, line: 253, type: !61)
!4245 = !DILocation(line: 0, scope: !4239)
!4246 = !DILocation(line: 255, column: 18, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4239, file: !346, line: 255, column: 9)
!4248 = !DILocation(line: 255, column: 9, scope: !4239)
!4249 = !DILocation(line: 260, column: 19, scope: !4239)
!4250 = !DILocation(line: 263, column: 26, scope: !4239)
!4251 = !DILocation(line: 265, column: 12, scope: !4239)
!4252 = !DILocation(line: 265, column: 55, scope: !4239)
!4253 = !DILocation(line: 266, column: 45, scope: !4239)
!4254 = !DILocation(line: 266, column: 17, scope: !4239)
!4255 = !DILocation(line: 267, column: 15, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4239, file: !346, line: 267, column: 9)
!4257 = !DILocation(line: 267, column: 9, scope: !4239)
!4258 = !DILocation(line: 0, scope: !4256)
!4259 = !DILocation(line: 273, column: 1, scope: !4239)
!4260 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !346, file: !346, line: 278, type: !4079, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4261)
!4261 = !{!4262, !4263, !4264}
!4262 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4260, file: !346, line: 278, type: !4058)
!4263 = !DILocalVariable(name: "no", scope: !4260, file: !346, line: 280, type: !61)
!4264 = !DILocalVariable(name: "remainder", scope: !4260, file: !346, line: 281, type: !61)
!4265 = !DILocation(line: 0, scope: !4260)
!4266 = !DILocation(line: 283, column: 18, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4260, file: !346, line: 283, column: 9)
!4268 = !DILocation(line: 283, column: 9, scope: !4260)
!4269 = !DILocation(line: 288, column: 19, scope: !4260)
!4270 = !DILocation(line: 291, column: 26, scope: !4260)
!4271 = !DILocation(line: 293, column: 90, scope: !4260)
!4272 = !DILocation(line: 293, column: 5, scope: !4260)
!4273 = !DILocation(line: 293, column: 48, scope: !4260)
!4274 = !DILocation(line: 293, column: 62, scope: !4260)
!4275 = !DILocation(line: 294, column: 5, scope: !4260)
!4276 = !DILocation(line: 295, column: 1, scope: !4260)
!4277 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !346, file: !346, line: 299, type: !4079, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4278)
!4278 = !{!4279, !4280, !4281}
!4279 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4277, file: !346, line: 299, type: !4058)
!4280 = !DILocalVariable(name: "no", scope: !4277, file: !346, line: 301, type: !61)
!4281 = !DILocalVariable(name: "remainder", scope: !4277, file: !346, line: 302, type: !61)
!4282 = !DILocation(line: 0, scope: !4277)
!4283 = !DILocation(line: 304, column: 18, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4277, file: !346, line: 304, column: 9)
!4285 = !DILocation(line: 304, column: 9, scope: !4277)
!4286 = !DILocation(line: 309, column: 19, scope: !4277)
!4287 = !DILocation(line: 312, column: 26, scope: !4277)
!4288 = !DILocation(line: 314, column: 90, scope: !4277)
!4289 = !DILocation(line: 314, column: 5, scope: !4277)
!4290 = !DILocation(line: 314, column: 48, scope: !4277)
!4291 = !DILocation(line: 314, column: 62, scope: !4277)
!4292 = !DILocation(line: 315, column: 5, scope: !4277)
!4293 = !DILocation(line: 316, column: 1, scope: !4277)
!4294 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !346, file: !346, line: 321, type: !4079, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4295)
!4295 = !{!4296, !4297, !4298}
!4296 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4294, file: !346, line: 321, type: !4058)
!4297 = !DILocalVariable(name: "no", scope: !4294, file: !346, line: 323, type: !61)
!4298 = !DILocalVariable(name: "remainder", scope: !4294, file: !346, line: 324, type: !61)
!4299 = !DILocation(line: 0, scope: !4294)
!4300 = !DILocation(line: 326, column: 19, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4294, file: !346, line: 326, column: 9)
!4302 = !DILocation(line: 326, column: 36, scope: !4301)
!4303 = !DILocation(line: 326, column: 41, scope: !4301)
!4304 = !DILocation(line: 326, column: 9, scope: !4294)
!4305 = !DILocation(line: 331, column: 19, scope: !4294)
!4306 = !DILocation(line: 334, column: 26, scope: !4294)
!4307 = !DILocation(line: 336, column: 94, scope: !4294)
!4308 = !DILocation(line: 336, column: 5, scope: !4294)
!4309 = !DILocation(line: 336, column: 50, scope: !4294)
!4310 = !DILocation(line: 336, column: 66, scope: !4294)
!4311 = !DILocation(line: 337, column: 5, scope: !4294)
!4312 = !DILocation(line: 337, column: 51, scope: !4294)
!4313 = !DILocation(line: 337, column: 68, scope: !4294)
!4314 = !DILocation(line: 338, column: 5, scope: !4294)
!4315 = !DILocation(line: 339, column: 1, scope: !4294)
!4316 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !346, file: !346, line: 343, type: !4079, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4317)
!4317 = !{!4318, !4319, !4320}
!4318 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4316, file: !346, line: 343, type: !4058)
!4319 = !DILocalVariable(name: "no", scope: !4316, file: !346, line: 345, type: !61)
!4320 = !DILocalVariable(name: "remainder", scope: !4316, file: !346, line: 346, type: !61)
!4321 = !DILocation(line: 0, scope: !4316)
!4322 = !DILocation(line: 348, column: 19, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4316, file: !346, line: 348, column: 9)
!4324 = !DILocation(line: 348, column: 36, scope: !4323)
!4325 = !DILocation(line: 348, column: 41, scope: !4323)
!4326 = !DILocation(line: 348, column: 9, scope: !4316)
!4327 = !DILocation(line: 353, column: 19, scope: !4316)
!4328 = !DILocation(line: 356, column: 26, scope: !4316)
!4329 = !DILocation(line: 358, column: 94, scope: !4316)
!4330 = !DILocation(line: 358, column: 5, scope: !4316)
!4331 = !DILocation(line: 358, column: 50, scope: !4316)
!4332 = !DILocation(line: 358, column: 66, scope: !4316)
!4333 = !DILocation(line: 359, column: 5, scope: !4316)
!4334 = !DILocation(line: 359, column: 51, scope: !4316)
!4335 = !DILocation(line: 359, column: 68, scope: !4316)
!4336 = !DILocation(line: 360, column: 5, scope: !4316)
!4337 = !DILocation(line: 361, column: 1, scope: !4316)
!4338 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !346, file: !346, line: 365, type: !4079, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4339)
!4339 = !{!4340, !4341, !4342}
!4340 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4338, file: !346, line: 365, type: !4058)
!4341 = !DILocalVariable(name: "no", scope: !4338, file: !346, line: 367, type: !61)
!4342 = !DILocalVariable(name: "remainder", scope: !4338, file: !346, line: 368, type: !61)
!4343 = !DILocation(line: 0, scope: !4338)
!4344 = !DILocation(line: 370, column: 19, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4338, file: !346, line: 370, column: 9)
!4346 = !DILocation(line: 370, column: 36, scope: !4345)
!4347 = !DILocation(line: 370, column: 41, scope: !4345)
!4348 = !DILocation(line: 370, column: 9, scope: !4338)
!4349 = !DILocation(line: 375, column: 19, scope: !4338)
!4350 = !DILocation(line: 378, column: 26, scope: !4338)
!4351 = !DILocation(line: 380, column: 94, scope: !4338)
!4352 = !DILocation(line: 380, column: 5, scope: !4338)
!4353 = !DILocation(line: 380, column: 50, scope: !4338)
!4354 = !DILocation(line: 380, column: 66, scope: !4338)
!4355 = !DILocation(line: 381, column: 5, scope: !4338)
!4356 = !DILocation(line: 382, column: 1, scope: !4338)
!4357 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !346, file: !346, line: 387, type: !4358, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4362)
!4358 = !DISubroutineType(types: !4359)
!4359 = !{!4081, !4360, !4361}
!4360 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !421)
!4361 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !430)
!4362 = !{!4363, !4364}
!4363 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4357, file: !346, line: 387, type: !4360)
!4364 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4357, file: !346, line: 387, type: !4361)
!4365 = !DILocation(line: 0, scope: !4357)
!4366 = !DILocation(line: 390, column: 24, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4357, file: !346, line: 390, column: 9)
!4368 = !DILocation(line: 390, column: 9, scope: !4357)
!4369 = !DILocation(line: 394, column: 5, scope: !4357)
!4370 = !DILocation(line: 394, column: 62, scope: !4357)
!4371 = !DILocation(line: 394, column: 74, scope: !4357)
!4372 = !DILocation(line: 395, column: 5, scope: !4357)
!4373 = !DILocation(line: 396, column: 1, scope: !4357)
!4374 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !346, file: !346, line: 403, type: !4375, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!4081, !4058, !460, !460, !460}
!4377 = !{!4378, !4379, !4380, !4381, !4382, !4383}
!4378 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4374, file: !346, line: 403, type: !4058)
!4379 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4374, file: !346, line: 403, type: !460)
!4380 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4374, file: !346, line: 403, type: !460)
!4381 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4374, file: !346, line: 403, type: !460)
!4382 = !DILocalVariable(name: "no", scope: !4374, file: !346, line: 405, type: !61)
!4383 = !DILocalVariable(name: "remainder", scope: !4374, file: !346, line: 406, type: !61)
!4384 = !DILocation(line: 0, scope: !4374)
!4385 = !DILocation(line: 408, column: 19, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4374, file: !346, line: 408, column: 9)
!4387 = !DILocation(line: 408, column: 36, scope: !4386)
!4388 = !DILocation(line: 408, column: 40, scope: !4386)
!4389 = !DILocation(line: 408, column: 9, scope: !4374)
!4390 = !DILocation(line: 413, column: 19, scope: !4374)
!4391 = !DILocation(line: 416, column: 26, scope: !4374)
!4392 = !DILocation(line: 418, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4374, file: !346, line: 418, column: 9)
!4394 = !DILocation(line: 0, scope: !4393)
!4395 = !DILocation(line: 418, column: 9, scope: !4374)
!4396 = !DILocation(line: 424, column: 9, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4374, file: !346, line: 424, column: 9)
!4398 = !DILocation(line: 0, scope: !4397)
!4399 = !DILocation(line: 424, column: 9, scope: !4374)
!4400 = !DILocation(line: 430, column: 9, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4374, file: !346, line: 430, column: 9)
!4402 = !DILocation(line: 0, scope: !4401)
!4403 = !DILocation(line: 430, column: 9, scope: !4374)
!4404 = !DILocation(line: 436, column: 1, scope: !4374)
!4405 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !346, file: !346, line: 441, type: !4079, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4406)
!4406 = !{!4407, !4408, !4409, !4410, !4411, !4412, !4413}
!4407 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4405, file: !346, line: 441, type: !4058)
!4408 = !DILocalVariable(name: "no1", scope: !4405, file: !346, line: 443, type: !61)
!4409 = !DILocalVariable(name: "no2", scope: !4405, file: !346, line: 443, type: !61)
!4410 = !DILocalVariable(name: "no3", scope: !4405, file: !346, line: 443, type: !61)
!4411 = !DILocalVariable(name: "remainder1", scope: !4405, file: !346, line: 444, type: !61)
!4412 = !DILocalVariable(name: "remainder2", scope: !4405, file: !346, line: 444, type: !61)
!4413 = !DILocalVariable(name: "remainder3", scope: !4405, file: !346, line: 444, type: !61)
!4414 = !DILocation(line: 0, scope: !4405)
!4415 = !DILocation(line: 446, column: 18, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4405, file: !346, line: 446, column: 9)
!4417 = !DILocation(line: 446, column: 9, scope: !4405)
!4418 = !DILocation(line: 451, column: 20, scope: !4405)
!4419 = !DILocation(line: 454, column: 27, scope: !4405)
!4420 = !DILocation(line: 457, column: 20, scope: !4405)
!4421 = !DILocation(line: 463, column: 20, scope: !4405)
!4422 = !DILocation(line: 469, column: 107, scope: !4405)
!4423 = !DILocation(line: 469, column: 92, scope: !4405)
!4424 = !DILocation(line: 469, column: 5, scope: !4405)
!4425 = !DILocation(line: 469, column: 49, scope: !4405)
!4426 = !DILocation(line: 469, column: 63, scope: !4405)
!4427 = !DILocation(line: 472, column: 89, scope: !4405)
!4428 = !DILocation(line: 472, column: 5, scope: !4405)
!4429 = !DILocation(line: 472, column: 48, scope: !4405)
!4430 = !DILocation(line: 472, column: 61, scope: !4405)
!4431 = !DILocation(line: 475, column: 5, scope: !4405)
!4432 = !DILocation(line: 475, column: 48, scope: !4405)
!4433 = !DILocation(line: 475, column: 61, scope: !4405)
!4434 = !DILocation(line: 478, column: 9, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4405, file: !346, line: 478, column: 9)
!4436 = !DILocation(line: 0, scope: !4435)
!4437 = !DILocation(line: 478, column: 9, scope: !4405)
!4438 = !DILocation(line: 479, column: 55, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4435, file: !346, line: 478, column: 40)
!4440 = !DILocation(line: 480, column: 5, scope: !4439)
!4441 = !DILocation(line: 483, column: 53, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4435, file: !346, line: 482, column: 10)
!4443 = !DILocation(line: 483, column: 67, scope: !4442)
!4444 = !DILocation(line: 484, column: 9, scope: !4442)
!4445 = !DILocation(line: 484, column: 55, scope: !4442)
!4446 = !DILocation(line: 484, column: 71, scope: !4442)
!4447 = !DILocation(line: 485, column: 9, scope: !4442)
!4448 = !DILocation(line: 485, column: 55, scope: !4442)
!4449 = !DILocation(line: 490, column: 5, scope: !4405)
!4450 = !DILocation(line: 490, column: 48, scope: !4405)
!4451 = !DILocation(line: 490, column: 61, scope: !4405)
!4452 = !DILocation(line: 493, column: 5, scope: !4405)
!4453 = !DILocation(line: 493, column: 47, scope: !4405)
!4454 = !DILocation(line: 493, column: 59, scope: !4405)
!4455 = !DILocation(line: 496, column: 108, scope: !4405)
!4456 = !DILocation(line: 496, column: 93, scope: !4405)
!4457 = !DILocation(line: 496, column: 5, scope: !4405)
!4458 = !DILocation(line: 496, column: 50, scope: !4405)
!4459 = !DILocation(line: 496, column: 65, scope: !4405)
!4460 = !DILocation(line: 498, column: 5, scope: !4405)
!4461 = !DILocation(line: 499, column: 1, scope: !4405)
!4462 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !346, file: !346, line: 502, type: !4079, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4463)
!4463 = !{!4464, !4465, !4466, !4467, !4468}
!4464 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4462, file: !346, line: 502, type: !4058)
!4465 = !DILocalVariable(name: "no1", scope: !4462, file: !346, line: 504, type: !61)
!4466 = !DILocalVariable(name: "no2", scope: !4462, file: !346, line: 504, type: !61)
!4467 = !DILocalVariable(name: "remainder1", scope: !4462, file: !346, line: 505, type: !61)
!4468 = !DILocalVariable(name: "remainder2", scope: !4462, file: !346, line: 505, type: !61)
!4469 = !DILocation(line: 0, scope: !4462)
!4470 = !DILocation(line: 507, column: 18, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4462, file: !346, line: 507, column: 9)
!4472 = !DILocation(line: 507, column: 9, scope: !4462)
!4473 = !DILocation(line: 512, column: 20, scope: !4462)
!4474 = !DILocation(line: 515, column: 27, scope: !4462)
!4475 = !DILocation(line: 518, column: 20, scope: !4462)
!4476 = !DILocation(line: 524, column: 107, scope: !4462)
!4477 = !DILocation(line: 524, column: 92, scope: !4462)
!4478 = !DILocation(line: 524, column: 5, scope: !4462)
!4479 = !DILocation(line: 524, column: 49, scope: !4462)
!4480 = !DILocation(line: 524, column: 63, scope: !4462)
!4481 = !DILocation(line: 527, column: 89, scope: !4462)
!4482 = !DILocation(line: 527, column: 5, scope: !4462)
!4483 = !DILocation(line: 527, column: 48, scope: !4462)
!4484 = !DILocation(line: 527, column: 61, scope: !4462)
!4485 = !DILocation(line: 530, column: 9, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4462, file: !346, line: 530, column: 9)
!4487 = !DILocation(line: 0, scope: !4486)
!4488 = !DILocation(line: 530, column: 9, scope: !4462)
!4489 = !DILocation(line: 531, column: 55, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !346, line: 530, column: 40)
!4491 = !DILocation(line: 531, column: 71, scope: !4490)
!4492 = !DILocation(line: 532, column: 9, scope: !4490)
!4493 = !DILocation(line: 532, column: 56, scope: !4490)
!4494 = !DILocation(line: 533, column: 5, scope: !4490)
!4495 = !DILocation(line: 536, column: 53, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4486, file: !346, line: 535, column: 10)
!4497 = !DILocation(line: 536, column: 67, scope: !4496)
!4498 = !DILocation(line: 537, column: 9, scope: !4496)
!4499 = !DILocation(line: 537, column: 55, scope: !4496)
!4500 = !DILocation(line: 537, column: 71, scope: !4496)
!4501 = !DILocation(line: 538, column: 9, scope: !4496)
!4502 = !DILocation(line: 538, column: 55, scope: !4496)
!4503 = !DILocation(line: 543, column: 5, scope: !4462)
!4504 = !DILocation(line: 543, column: 48, scope: !4462)
!4505 = !DILocation(line: 543, column: 61, scope: !4462)
!4506 = !DILocation(line: 546, column: 5, scope: !4462)
!4507 = !DILocation(line: 546, column: 47, scope: !4462)
!4508 = !DILocation(line: 546, column: 59, scope: !4462)
!4509 = !DILocation(line: 549, column: 5, scope: !4462)
!4510 = !DILocation(line: 550, column: 1, scope: !4462)
!4511 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !346, file: !346, line: 554, type: !4512, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4514)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!4081, !4058, !444}
!4514 = !{!4515, !4516, !4517, !4518}
!4515 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4511, file: !346, line: 554, type: !4058)
!4516 = !DILocalVariable(name: "driving", arg: 2, scope: !4511, file: !346, line: 554, type: !444)
!4517 = !DILocalVariable(name: "no", scope: !4511, file: !346, line: 556, type: !61)
!4518 = !DILocalVariable(name: "remainder", scope: !4511, file: !346, line: 557, type: !61)
!4519 = !DILocation(line: 0, scope: !4511)
!4520 = !DILocation(line: 559, column: 19, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4511, file: !346, line: 559, column: 9)
!4522 = !DILocation(line: 559, column: 9, scope: !4511)
!4523 = !DILocation(line: 564, column: 19, scope: !4511)
!4524 = !DILocation(line: 569, column: 102, scope: !4511)
!4525 = !DILocation(line: 569, column: 88, scope: !4511)
!4526 = !DILocation(line: 569, column: 5, scope: !4511)
!4527 = !DILocation(line: 569, column: 47, scope: !4511)
!4528 = !DILocation(line: 569, column: 60, scope: !4511)
!4529 = !DILocation(line: 570, column: 71, scope: !4511)
!4530 = !DILocation(line: 570, column: 5, scope: !4511)
!4531 = !DILocation(line: 570, column: 47, scope: !4511)
!4532 = !DILocation(line: 570, column: 60, scope: !4511)
!4533 = !DILocation(line: 571, column: 5, scope: !4511)
!4534 = !DILocation(line: 572, column: 1, scope: !4511)
!4535 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !346, file: !346, line: 575, type: !4536, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4539)
!4536 = !DISubroutineType(types: !4537)
!4537 = !{!4081, !4058, !4538}
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 32)
!4539 = !{!4540, !4541, !4542, !4543, !4544}
!4540 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4535, file: !346, line: 575, type: !4058)
!4541 = !DILocalVariable(name: "driving", arg: 2, scope: !4535, file: !346, line: 575, type: !4538)
!4542 = !DILocalVariable(name: "no", scope: !4535, file: !346, line: 577, type: !61)
!4543 = !DILocalVariable(name: "remainder", scope: !4535, file: !346, line: 578, type: !61)
!4544 = !DILocalVariable(name: "temp", scope: !4535, file: !346, line: 579, type: !61)
!4545 = !DILocation(line: 0, scope: !4535)
!4546 = !DILocation(line: 581, column: 19, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4535, file: !346, line: 581, column: 9)
!4548 = !DILocation(line: 581, column: 9, scope: !4535)
!4549 = !DILocation(line: 585, column: 14, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4535, file: !346, line: 585, column: 9)
!4551 = !DILocation(line: 585, column: 9, scope: !4535)
!4552 = !DILocation(line: 590, column: 19, scope: !4535)
!4553 = !DILocation(line: 595, column: 12, scope: !4535)
!4554 = !DILocation(line: 595, column: 54, scope: !4535)
!4555 = !DILocation(line: 596, column: 59, scope: !4535)
!4556 = !DILocation(line: 596, column: 45, scope: !4535)
!4557 = !DILocation(line: 596, column: 17, scope: !4535)
!4558 = !DILocation(line: 597, column: 18, scope: !4535)
!4559 = !DILocation(line: 600, column: 56, scope: !4535)
!4560 = !DILocation(line: 600, column: 14, scope: !4535)
!4561 = !DILocation(line: 602, column: 5, scope: !4535)
!4562 = !DILocation(line: 603, column: 1, scope: !4535)
!4563 = distinct !DISubprogram(name: "uart_receive_handler", scope: !629, file: !629, line: 146, type: !4564, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4566)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !735, !91}
!4566 = !{!4567, !4568, !4569, !4571, !4572, !4573, !4574, !4630}
!4567 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4563, file: !629, line: 146, type: !735)
!4568 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4563, file: !629, line: 146, type: !91)
!4569 = !DILocalVariable(name: "channel", scope: !4563, file: !629, line: 148, type: !4570)
!4570 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !639, line: 203, baseType: !638)
!4571 = !DILocalVariable(name: "avail_bytes", scope: !4563, file: !629, line: 149, type: !61)
!4572 = !DILocalVariable(name: "callback", scope: !4563, file: !629, line: 150, type: !744)
!4573 = !DILocalVariable(name: "arg", scope: !4563, file: !629, line: 151, type: !88)
!4574 = !DILocalVariable(name: "uartx", scope: !4563, file: !629, line: 152, type: !4575)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4577)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4578)
!4578 = !{!4579, !4585, !4590, !4596, !4597, !4602, !4607, !4608, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4577, file: !56, line: 547, baseType: !4580, size: 32)
!4580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4577, file: !56, line: 543, size: 32, elements: !4581)
!4581 = !{!4582, !4583, !4584}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4580, file: !56, line: 544, baseType: !272, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4580, file: !56, line: 545, baseType: !60, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4580, file: !56, line: 546, baseType: !60, size: 32)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4577, file: !56, line: 551, baseType: !4586, size: 32, offset: 32)
!4586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4577, file: !56, line: 548, size: 32, elements: !4587)
!4587 = !{!4588, !4589}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4586, file: !56, line: 549, baseType: !60, size: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4586, file: !56, line: 550, baseType: !60, size: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4577, file: !56, line: 556, baseType: !4591, size: 32, offset: 64)
!4591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4577, file: !56, line: 552, size: 32, elements: !4592)
!4592 = !{!4593, !4594, !4595}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4591, file: !56, line: 553, baseType: !272, size: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4591, file: !56, line: 554, baseType: !60, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4591, file: !56, line: 555, baseType: !60, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4577, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4577, file: !56, line: 561, baseType: !4598, size: 32, offset: 128)
!4598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4577, file: !56, line: 558, size: 32, elements: !4599)
!4599 = !{!4600, !4601}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4598, file: !56, line: 559, baseType: !60, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4598, file: !56, line: 560, baseType: !60, size: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4577, file: !56, line: 565, baseType: !4603, size: 32, offset: 160)
!4603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4577, file: !56, line: 562, size: 32, elements: !4604)
!4604 = !{!4605, !4606}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4603, file: !56, line: 563, baseType: !272, size: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4603, file: !56, line: 564, baseType: !60, size: 32)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4577, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4577, file: !56, line: 570, baseType: !4609, size: 32, offset: 224)
!4609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4577, file: !56, line: 567, size: 32, elements: !4610)
!4610 = !{!4611, !4612}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4609, file: !56, line: 568, baseType: !60, size: 32)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4609, file: !56, line: 569, baseType: !60, size: 32)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4577, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4577, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4577, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4577, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4577, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4577, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4577, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4577, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4577, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4577, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4577, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4577, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4577, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4577, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4577, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4577, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4577, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4630 = !DILocalVariable(name: "status", scope: !4563, file: !629, line: 153, type: !4631)
!4631 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !639, line: 211, baseType: !659)
!4632 = !DILocation(line: 0, scope: !4563)
!4633 = !DILocation(line: 149, column: 5, scope: !4563)
!4634 = !DILocation(line: 155, column: 9, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 155, column: 9)
!4636 = !DILocation(line: 155, column: 36, scope: !4635)
!4637 = !DILocation(line: 155, column: 9, scope: !4563)
!4638 = !DILocation(line: 156, column: 9, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4635, file: !629, line: 155, column: 70)
!4640 = !DILocation(line: 160, column: 13, scope: !4563)
!4641 = !DILocation(line: 161, column: 15, scope: !4563)
!4642 = !DILocation(line: 163, column: 9, scope: !4563)
!4643 = !DILocation(line: 164, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !629, line: 163, column: 29)
!4645 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 163, column: 9)
!4646 = !DILocation(line: 165, column: 5, scope: !4644)
!4647 = !DILocation(line: 167, column: 14, scope: !4563)
!4648 = !DILocation(line: 168, column: 16, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 168, column: 9)
!4650 = !DILocation(line: 168, column: 9, scope: !4563)
!4651 = !DILocation(line: 169, column: 9, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4649, file: !629, line: 168, column: 28)
!4653 = !DILocation(line: 172, column: 9, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 172, column: 9)
!4655 = !DILocation(line: 172, column: 21, scope: !4654)
!4656 = !DILocation(line: 172, column: 9, scope: !4563)
!4657 = !DILocation(line: 176, column: 43, scope: !4563)
!4658 = !DILocation(line: 178, column: 18, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 178, column: 9)
!4660 = !DILocation(line: 178, column: 9, scope: !4563)
!4661 = !DILocation(line: 179, column: 9, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4659, file: !629, line: 178, column: 27)
!4663 = !DILocation(line: 177, column: 38, scope: !4563)
!4664 = !DILocation(line: 183, column: 5, scope: !4563)
!4665 = !DILocation(line: 184, column: 5, scope: !4563)
!4666 = !DILocation(line: 185, column: 5, scope: !4563)
!4667 = !DILocation(line: 187, column: 14, scope: !4563)
!4668 = !DILocation(line: 188, column: 16, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 188, column: 9)
!4670 = !DILocation(line: 188, column: 9, scope: !4563)
!4671 = !DILocation(line: 189, column: 9, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4669, file: !629, line: 188, column: 28)
!4673 = !DILocation(line: 192, column: 9, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4563, file: !629, line: 192, column: 9)
!4675 = !DILocation(line: 192, column: 53, scope: !4674)
!4676 = !DILocation(line: 192, column: 21, scope: !4674)
!4677 = !DILocation(line: 192, column: 9, scope: !4563)
!4678 = !DILocation(line: 193, column: 18, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4674, file: !629, line: 192, column: 83)
!4680 = !DILocation(line: 194, column: 20, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4679, file: !629, line: 194, column: 13)
!4682 = !DILocation(line: 194, column: 13, scope: !4679)
!4683 = !DILocation(line: 195, column: 13, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !629, line: 194, column: 32)
!4685 = !DILocation(line: 199, column: 1, scope: !4563)
!4686 = distinct !DISubprogram(name: "uart_send_handler", scope: !629, file: !629, line: 210, type: !4564, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4687)
!4687 = !{!4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695}
!4688 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4686, file: !629, line: 210, type: !735)
!4689 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4686, file: !629, line: 210, type: !91)
!4690 = !DILocalVariable(name: "channel", scope: !4686, file: !629, line: 212, type: !4570)
!4691 = !DILocalVariable(name: "status", scope: !4686, file: !629, line: 213, type: !4631)
!4692 = !DILocalVariable(name: "compare_space", scope: !4686, file: !629, line: 214, type: !61)
!4693 = !DILocalVariable(name: "avail_space", scope: !4686, file: !629, line: 214, type: !61)
!4694 = !DILocalVariable(name: "callback", scope: !4686, file: !629, line: 215, type: !744)
!4695 = !DILocalVariable(name: "arg", scope: !4686, file: !629, line: 216, type: !88)
!4696 = !DILocation(line: 0, scope: !4686)
!4697 = !DILocation(line: 214, column: 5, scope: !4686)
!4698 = !DILocation(line: 221, column: 9, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4686, file: !629, line: 221, column: 9)
!4700 = !DILocation(line: 221, column: 36, scope: !4699)
!4701 = !DILocation(line: 221, column: 9, scope: !4686)
!4702 = !DILocation(line: 222, column: 9, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4699, file: !629, line: 221, column: 70)
!4704 = !DILocation(line: 226, column: 15, scope: !4686)
!4705 = !DILocation(line: 228, column: 9, scope: !4686)
!4706 = !DILocation(line: 253, column: 47, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !629, line: 252, column: 12)
!4708 = distinct !DILexicalBlock(scope: !4686, file: !629, line: 228, column: 9)
!4709 = !DILocation(line: 255, column: 22, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4707, file: !629, line: 255, column: 13)
!4711 = !DILocation(line: 255, column: 13, scope: !4707)
!4712 = !DILocation(line: 256, column: 13, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !629, line: 255, column: 31)
!4714 = !DILocation(line: 254, column: 42, scope: !4707)
!4715 = !DILocation(line: 260, column: 9, scope: !4707)
!4716 = !DILocation(line: 261, column: 9, scope: !4707)
!4717 = !DILocation(line: 262, column: 9, scope: !4707)
!4718 = !DILocation(line: 264, column: 18, scope: !4707)
!4719 = !DILocation(line: 265, column: 20, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4707, file: !629, line: 265, column: 13)
!4721 = !DILocation(line: 265, column: 13, scope: !4707)
!4722 = !DILocation(line: 266, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4720, file: !629, line: 265, column: 32)
!4724 = !DILocation(line: 269, column: 54, scope: !4707)
!4725 = !DILocation(line: 270, column: 56, scope: !4707)
!4726 = !DILocation(line: 270, column: 25, scope: !4707)
!4727 = !DILocation(line: 271, column: 13, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4707, file: !629, line: 271, column: 13)
!4729 = !DILocation(line: 271, column: 25, scope: !4728)
!4730 = !DILocation(line: 271, column: 13, scope: !4707)
!4731 = !DILocation(line: 272, column: 22, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4728, file: !629, line: 271, column: 43)
!4733 = !DILocation(line: 273, column: 24, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4732, file: !629, line: 273, column: 17)
!4735 = !DILocation(line: 273, column: 17, scope: !4732)
!4736 = !DILocation(line: 274, column: 17, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4734, file: !629, line: 273, column: 36)
!4738 = !DILocation(line: 279, column: 1, scope: !4686)
!4739 = distinct !DISubprogram(name: "uart_error_handler", scope: !629, file: !629, line: 282, type: !4740, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4742)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{null, !735}
!4742 = !{!4743, !4744, !4745, !4746}
!4743 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4739, file: !629, line: 282, type: !735)
!4744 = !DILocalVariable(name: "uartx", scope: !4739, file: !629, line: 284, type: !4575)
!4745 = !DILocalVariable(name: "callback", scope: !4739, file: !629, line: 285, type: !744)
!4746 = !DILocalVariable(name: "arg", scope: !4739, file: !629, line: 286, type: !88)
!4747 = !DILocation(line: 0, scope: !4739)
!4748 = !DILocation(line: 288, column: 13, scope: !4739)
!4749 = !DILocation(line: 290, column: 10, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4739, file: !629, line: 290, column: 9)
!4751 = !DILocation(line: 290, column: 9, scope: !4739)
!4752 = !DILocation(line: 291, column: 9, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !629, line: 290, column: 36)
!4754 = !DILocation(line: 292, column: 9, scope: !4753)
!4755 = !DILocation(line: 293, column: 47, scope: !4753)
!4756 = !DILocation(line: 295, column: 22, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4753, file: !629, line: 295, column: 13)
!4758 = !DILocation(line: 295, column: 13, scope: !4753)
!4759 = !DILocation(line: 296, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4757, file: !629, line: 295, column: 31)
!4761 = !DILocation(line: 294, column: 42, scope: !4753)
!4762 = !DILocation(line: 299, column: 9, scope: !4753)
!4763 = !DILocation(line: 300, column: 5, scope: !4753)
!4764 = !DILocation(line: 301, column: 1, scope: !4739)
!4765 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !629, file: !629, line: 416, type: !4766, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4770)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!4768, !735, !4769}
!4768 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !654, line: 351, baseType: !670)
!4769 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !654, line: 317, baseType: !677)
!4770 = !{!4771, !4772, !4773, !4774, !4775}
!4771 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4765, file: !629, line: 416, type: !735)
!4772 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4765, file: !629, line: 416, type: !4769)
!4773 = !DILocalVariable(name: "actual_baudrate", scope: !4765, file: !629, line: 418, type: !61)
!4774 = !DILocalVariable(name: "irq_status", scope: !4765, file: !629, line: 418, type: !61)
!4775 = !DILocalVariable(name: "uartx", scope: !4765, file: !629, line: 419, type: !4575)
!4776 = !DILocation(line: 0, scope: !4765)
!4777 = !DILocation(line: 421, column: 11, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4765, file: !629, line: 421, column: 9)
!4779 = !DILocation(line: 421, column: 42, scope: !4778)
!4780 = !DILocation(line: 422, column: 11, scope: !4778)
!4781 = !DILocation(line: 421, column: 9, scope: !4765)
!4782 = !DILocation(line: 426, column: 9, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4765, file: !629, line: 426, column: 9)
!4784 = !DILocation(line: 426, column: 36, scope: !4783)
!4785 = !DILocation(line: 426, column: 9, scope: !4765)
!4786 = !DILocation(line: 430, column: 18, scope: !4765)
!4787 = !DILocation(line: 434, column: 5, scope: !4765)
!4788 = !DILocation(line: 436, column: 13, scope: !4765)
!4789 = !DILocation(line: 437, column: 23, scope: !4765)
!4790 = !DILocation(line: 439, column: 5, scope: !4765)
!4791 = !DILocation(line: 441, column: 5, scope: !4765)
!4792 = !DILocation(line: 442, column: 1, scope: !4765)
!4793 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !629, file: !629, line: 120, type: !4794, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4796)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!91, !735}
!4796 = !{!4797}
!4797 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4793, file: !629, line: 120, type: !735)
!4798 = !DILocation(line: 0, scope: !4793)
!4799 = !DILocation(line: 122, column: 23, scope: !4793)
!4800 = !DILocation(line: 122, column: 5, scope: !4793)
!4801 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !629, file: !629, line: 125, type: !4802, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4804)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!91, !4769}
!4804 = !{!4805}
!4805 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4801, file: !629, line: 125, type: !4769)
!4806 = !DILocation(line: 0, scope: !4801)
!4807 = !DILocation(line: 127, column: 22, scope: !4801)
!4808 = !DILocation(line: 127, column: 5, scope: !4801)
!4809 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !629, file: !629, line: 444, type: !4810, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4824)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!4768, !735, !4812}
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 32)
!4813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4814)
!4814 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !4815)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !4816)
!4816 = !{!4817, !4818, !4820, !4822}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4815, file: !654, line: 374, baseType: !4769, size: 32)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4815, file: !654, line: 375, baseType: !4819, size: 32, offset: 32)
!4819 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !654, line: 326, baseType: !693)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4815, file: !654, line: 376, baseType: !4821, size: 32, offset: 64)
!4821 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !654, line: 333, baseType: !699)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4815, file: !654, line: 377, baseType: !4823, size: 32, offset: 96)
!4823 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !654, line: 341, baseType: !703)
!4824 = !{!4825, !4826, !4827, !4828}
!4825 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4809, file: !629, line: 444, type: !735)
!4826 = !DILocalVariable(name: "config", arg: 2, scope: !4809, file: !629, line: 445, type: !4812)
!4827 = !DILocalVariable(name: "irq_status", scope: !4809, file: !629, line: 447, type: !61)
!4828 = !DILocalVariable(name: "uartx", scope: !4809, file: !629, line: 448, type: !4575)
!4829 = !DILocation(line: 0, scope: !4809)
!4830 = !DILocation(line: 450, column: 11, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4809, file: !629, line: 450, column: 9)
!4832 = !DILocation(line: 450, column: 42, scope: !4831)
!4833 = !DILocation(line: 451, column: 11, scope: !4831)
!4834 = !DILocation(line: 450, column: 9, scope: !4809)
!4835 = !DILocation(line: 455, column: 9, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4809, file: !629, line: 455, column: 9)
!4837 = !DILocation(line: 455, column: 36, scope: !4836)
!4838 = !DILocation(line: 455, column: 9, scope: !4809)
!4839 = !DILocation(line: 459, column: 18, scope: !4809)
!4840 = !DILocation(line: 466, column: 5, scope: !4809)
!4841 = !DILocation(line: 468, column: 13, scope: !4809)
!4842 = !DILocation(line: 470, column: 46, scope: !4809)
!4843 = !DILocation(line: 470, column: 5, scope: !4809)
!4844 = !DILocation(line: 471, column: 36, scope: !4809)
!4845 = !DILocation(line: 471, column: 57, scope: !4809)
!4846 = !DILocation(line: 471, column: 75, scope: !4809)
!4847 = !DILocation(line: 471, column: 5, scope: !4809)
!4848 = !DILocation(line: 473, column: 5, scope: !4809)
!4849 = !DILocation(line: 474, column: 1, scope: !4809)
!4850 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !629, file: !629, line: 130, type: !4851, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!91, !4812}
!4853 = !{!4854}
!4854 = !DILocalVariable(name: "config", arg: 1, scope: !4850, file: !629, line: 130, type: !4812)
!4855 = !DILocation(line: 0, scope: !4850)
!4856 = !DILocation(line: 132, column: 22, scope: !4850)
!4857 = !DILocation(line: 132, column: 31, scope: !4850)
!4858 = !DILocation(line: 132, column: 56, scope: !4850)
!4859 = !DILocation(line: 133, column: 22, scope: !4850)
!4860 = !DILocation(line: 133, column: 34, scope: !4850)
!4861 = !DILocation(line: 133, column: 61, scope: !4850)
!4862 = !DILocation(line: 134, column: 22, scope: !4850)
!4863 = !DILocation(line: 134, column: 31, scope: !4850)
!4864 = !DILocation(line: 134, column: 55, scope: !4850)
!4865 = !DILocation(line: 135, column: 22, scope: !4850)
!4866 = !DILocation(line: 135, column: 29, scope: !4850)
!4867 = !DILocation(line: 132, column: 5, scope: !4850)
!4868 = distinct !DISubprogram(name: "hal_uart_init", scope: !629, file: !629, line: 476, type: !4869, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4872)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{!4768, !735, !4871}
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 32)
!4872 = !{!4873, !4874, !4875, !4876, !4877, !4878, !4879}
!4873 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4868, file: !629, line: 476, type: !735)
!4874 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4868, file: !629, line: 476, type: !4871)
!4875 = !DILocalVariable(name: "uartx", scope: !4868, file: !629, line: 478, type: !4575)
!4876 = !DILocalVariable(name: "i", scope: !4868, file: !629, line: 479, type: !61)
!4877 = !DILocalVariable(name: "actual_baudrate", scope: !4868, file: !629, line: 479, type: !61)
!4878 = !DILocalVariable(name: "irq_status", scope: !4868, file: !629, line: 479, type: !61)
!4879 = !DILocalVariable(name: "status", scope: !4868, file: !629, line: 480, type: !4880)
!4880 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !709, line: 106, baseType: !708)
!4881 = !DILocation(line: 0, scope: !4868)
!4882 = !DILocation(line: 482, column: 11, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4868, file: !629, line: 482, column: 9)
!4884 = !DILocation(line: 482, column: 42, scope: !4883)
!4885 = !DILocation(line: 483, column: 11, scope: !4883)
!4886 = !DILocation(line: 482, column: 9, scope: !4868)
!4887 = !DILocation(line: 487, column: 18, scope: !4868)
!4888 = !DILocation(line: 488, column: 9, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4868, file: !629, line: 488, column: 9)
!4890 = !DILocation(line: 488, column: 36, scope: !4889)
!4891 = !DILocation(line: 488, column: 9, scope: !4868)
!4892 = !DILocation(line: 489, column: 9, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !629, line: 488, column: 68)
!4894 = !DILocation(line: 490, column: 9, scope: !4893)
!4895 = !DILocation(line: 502, column: 9, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4868, file: !629, line: 502, column: 9)
!4897 = !DILocation(line: 502, column: 9, scope: !4868)
!4898 = !DILocation(line: 504, column: 13, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !629, line: 503, column: 44)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !629, line: 503, column: 9)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !629, line: 503, column: 9)
!4902 = distinct !DILexicalBlock(scope: !4896, file: !629, line: 502, column: 50)
!4903 = !DILocation(line: 504, column: 32, scope: !4899)
!4904 = !DILocation(line: 510, column: 32, scope: !4899)
!4905 = !DILocation(line: 510, column: 36, scope: !4899)
!4906 = !DILocation(line: 511, column: 32, scope: !4899)
!4907 = !DILocation(line: 511, column: 37, scope: !4899)
!4908 = !DILocation(line: 503, column: 40, scope: !4900)
!4909 = !DILocation(line: 503, column: 23, scope: !4900)
!4910 = !DILocation(line: 503, column: 9, scope: !4901)
!4911 = distinct !{!4911, !4910, !4912}
!4912 = !DILocation(line: 512, column: 9, scope: !4901)
!4913 = !DILocation(line: 513, column: 40, scope: !4902)
!4914 = !DILocation(line: 514, column: 5, scope: !4902)
!4915 = !DILocation(line: 521, column: 32, scope: !4868)
!4916 = !DILocation(line: 522, column: 5, scope: !4868)
!4917 = !DILocation(line: 524, column: 31, scope: !4868)
!4918 = !DILocation(line: 524, column: 14, scope: !4868)
!4919 = !DILocation(line: 525, column: 16, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4868, file: !629, line: 525, column: 9)
!4921 = !DILocation(line: 525, column: 9, scope: !4868)
!4922 = !DILocation(line: 526, column: 9, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4920, file: !629, line: 525, column: 40)
!4924 = !DILocation(line: 530, column: 13, scope: !4868)
!4925 = !DILocation(line: 532, column: 5, scope: !4868)
!4926 = !DILocation(line: 533, column: 56, scope: !4868)
!4927 = !DILocation(line: 533, column: 23, scope: !4868)
!4928 = !DILocation(line: 534, column: 5, scope: !4868)
!4929 = !DILocation(line: 535, column: 41, scope: !4868)
!4930 = !DILocation(line: 535, column: 67, scope: !4868)
!4931 = !DILocation(line: 535, column: 90, scope: !4868)
!4932 = !DILocation(line: 535, column: 5, scope: !4868)
!4933 = !DILocation(line: 536, column: 5, scope: !4868)
!4934 = !DILocation(line: 541, column: 5, scope: !4868)
!4935 = !DILocation(line: 542, column: 1, scope: !4868)
!4936 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !629, file: !629, line: 544, type: !4937, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4939)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!4768, !735}
!4939 = !{!4940, !4941, !4942, !4943, !4944, !4945, !4946}
!4940 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4936, file: !629, line: 544, type: !735)
!4941 = !DILocalVariable(name: "uartx", scope: !4936, file: !629, line: 546, type: !4575)
!4942 = !DILocalVariable(name: "tx_dma_channel", scope: !4936, file: !629, line: 547, type: !4570)
!4943 = !DILocalVariable(name: "rx_dma_channel", scope: !4936, file: !629, line: 547, type: !4570)
!4944 = !DILocalVariable(name: "irq_status", scope: !4936, file: !629, line: 548, type: !61)
!4945 = !DILocalVariable(name: "status", scope: !4936, file: !629, line: 549, type: !4631)
!4946 = !DILocalVariable(name: "clock_status", scope: !4936, file: !629, line: 550, type: !4880)
!4947 = !DILocation(line: 0, scope: !4936)
!4948 = !DILocation(line: 552, column: 10, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4936, file: !629, line: 552, column: 9)
!4950 = !DILocation(line: 552, column: 9, scope: !4936)
!4951 = !DILocation(line: 556, column: 18, scope: !4936)
!4952 = !DILocation(line: 557, column: 9, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4936, file: !629, line: 557, column: 9)
!4954 = !DILocation(line: 557, column: 36, scope: !4953)
!4955 = !DILocation(line: 557, column: 9, scope: !4936)
!4956 = !DILocation(line: 562, column: 13, scope: !4936)
!4957 = !DILocation(line: 565, column: 5, scope: !4936)
!4958 = !DILocation(line: 568, column: 9, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4936, file: !629, line: 568, column: 9)
!4960 = !DILocation(line: 568, column: 36, scope: !4959)
!4961 = !DILocation(line: 568, column: 9, scope: !4936)
!4962 = !DILocation(line: 569, column: 26, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !629, line: 568, column: 70)
!4964 = !DILocation(line: 570, column: 26, scope: !4963)
!4965 = !DILocation(line: 572, column: 18, scope: !4963)
!4966 = !DILocation(line: 573, column: 20, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4963, file: !629, line: 573, column: 13)
!4968 = !DILocation(line: 573, column: 13, scope: !4963)
!4969 = !DILocation(line: 574, column: 13, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4967, file: !629, line: 573, column: 32)
!4971 = !DILocation(line: 575, column: 13, scope: !4970)
!4972 = !DILocation(line: 578, column: 18, scope: !4963)
!4973 = !DILocation(line: 579, column: 20, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4963, file: !629, line: 579, column: 13)
!4975 = !DILocation(line: 579, column: 13, scope: !4963)
!4976 = !DILocation(line: 580, column: 13, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4974, file: !629, line: 579, column: 32)
!4978 = !DILocation(line: 581, column: 13, scope: !4977)
!4979 = !DILocation(line: 584, column: 18, scope: !4963)
!4980 = !DILocation(line: 585, column: 20, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4963, file: !629, line: 585, column: 13)
!4982 = !DILocation(line: 585, column: 13, scope: !4963)
!4983 = !DILocation(line: 586, column: 13, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4981, file: !629, line: 585, column: 32)
!4985 = !DILocation(line: 587, column: 13, scope: !4984)
!4986 = !DILocation(line: 590, column: 18, scope: !4963)
!4987 = !DILocation(line: 591, column: 20, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4963, file: !629, line: 591, column: 13)
!4989 = !DILocation(line: 591, column: 13, scope: !4963)
!4990 = !DILocation(line: 592, column: 13, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4988, file: !629, line: 591, column: 32)
!4992 = !DILocation(line: 593, column: 13, scope: !4991)
!4993 = !DILocation(line: 596, column: 18, scope: !4963)
!4994 = !DILocation(line: 597, column: 20, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4963, file: !629, line: 597, column: 13)
!4996 = !DILocation(line: 597, column: 13, scope: !4963)
!4997 = !DILocation(line: 598, column: 13, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !629, line: 597, column: 32)
!4999 = !DILocation(line: 599, column: 13, scope: !4998)
!5000 = !DILocation(line: 602, column: 18, scope: !4963)
!5001 = !DILocation(line: 603, column: 20, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4963, file: !629, line: 603, column: 13)
!5003 = !DILocation(line: 603, column: 13, scope: !4963)
!5004 = !DILocation(line: 604, column: 13, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5002, file: !629, line: 603, column: 32)
!5006 = !DILocation(line: 605, column: 13, scope: !5005)
!5007 = !DILocation(line: 608, column: 30, scope: !4963)
!5008 = !DILocation(line: 608, column: 9, scope: !4963)
!5009 = !DILocation(line: 609, column: 5, scope: !4963)
!5010 = !DILocation(line: 610, column: 5, scope: !4936)
!5011 = !DILocation(line: 611, column: 38, scope: !4936)
!5012 = !DILocation(line: 611, column: 20, scope: !4936)
!5013 = !DILocation(line: 612, column: 22, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4936, file: !629, line: 612, column: 9)
!5015 = !DILocation(line: 612, column: 9, scope: !4936)
!5016 = !DILocation(line: 613, column: 9, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !629, line: 612, column: 46)
!5018 = !DILocation(line: 614, column: 9, scope: !5017)
!5019 = !DILocation(line: 618, column: 32, scope: !4936)
!5020 = !DILocation(line: 618, column: 37, scope: !4936)
!5021 = !DILocation(line: 619, column: 32, scope: !4936)
!5022 = !DILocation(line: 619, column: 36, scope: !4936)
!5023 = !DILocation(line: 635, column: 32, scope: !4936)
!5024 = !DILocation(line: 639, column: 5, scope: !4936)
!5025 = !DILocation(line: 640, column: 1, scope: !4936)
!5026 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !629, file: !629, line: 642, type: !5027, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5029)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{null, !735, !1630}
!5029 = !{!5030, !5031, !5032}
!5030 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5026, file: !629, line: 642, type: !735)
!5031 = !DILocalVariable(name: "byte", arg: 2, scope: !5026, file: !629, line: 642, type: !1630)
!5032 = !DILocalVariable(name: "uartx", scope: !5026, file: !629, line: 644, type: !4575)
!5033 = !DILocation(line: 0, scope: !5026)
!5034 = !DILocation(line: 646, column: 10, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5026, file: !629, line: 646, column: 9)
!5036 = !DILocation(line: 646, column: 9, scope: !5026)
!5037 = !DILocation(line: 650, column: 9, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5026, file: !629, line: 650, column: 9)
!5039 = !DILocation(line: 650, column: 36, scope: !5038)
!5040 = !DILocation(line: 650, column: 9, scope: !5026)
!5041 = !DILocation(line: 654, column: 13, scope: !5026)
!5042 = !DILocation(line: 655, column: 5, scope: !5026)
!5043 = !DILocation(line: 656, column: 1, scope: !5026)
!5044 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !629, file: !629, line: 658, type: !5045, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5049)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!61, !735, !5047, !61}
!5047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5048, size: 32)
!5048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!5049 = !{!5050, !5051, !5052, !5053}
!5050 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5044, file: !629, line: 658, type: !735)
!5051 = !DILocalVariable(name: "data", arg: 2, scope: !5044, file: !629, line: 658, type: !5047)
!5052 = !DILocalVariable(name: "size", arg: 3, scope: !5044, file: !629, line: 658, type: !61)
!5053 = !DILocalVariable(name: "i", scope: !5044, file: !629, line: 660, type: !61)
!5054 = !DILocation(line: 0, scope: !5044)
!5055 = !DILocation(line: 662, column: 11, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5044, file: !629, line: 662, column: 9)
!5057 = !DILocation(line: 662, column: 42, scope: !5056)
!5058 = !DILocation(line: 666, column: 9, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5044, file: !629, line: 666, column: 9)
!5060 = !DILocation(line: 666, column: 36, scope: !5059)
!5061 = !DILocation(line: 666, column: 9, scope: !5044)
!5062 = !DILocation(line: 671, column: 38, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !629, line: 670, column: 32)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !629, line: 670, column: 5)
!5065 = distinct !DILexicalBlock(scope: !5044, file: !629, line: 670, column: 5)
!5066 = !DILocation(line: 671, column: 9, scope: !5063)
!5067 = !DILocation(line: 672, column: 13, scope: !5063)
!5068 = !DILocation(line: 670, column: 28, scope: !5064)
!5069 = !DILocation(line: 670, column: 19, scope: !5064)
!5070 = !DILocation(line: 670, column: 5, scope: !5065)
!5071 = distinct !{!5071, !5070, !5072}
!5072 = !DILocation(line: 673, column: 5, scope: !5065)
!5073 = !DILocation(line: 676, column: 1, scope: !5044)
!5074 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !629, file: !629, line: 678, type: !5045, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5075)
!5075 = !{!5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083}
!5076 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5074, file: !629, line: 678, type: !735)
!5077 = !DILocalVariable(name: "data", arg: 2, scope: !5074, file: !629, line: 678, type: !5047)
!5078 = !DILocalVariable(name: "size", arg: 3, scope: !5074, file: !629, line: 678, type: !61)
!5079 = !DILocalVariable(name: "channel", scope: !5074, file: !629, line: 680, type: !4570)
!5080 = !DILocalVariable(name: "i", scope: !5074, file: !629, line: 681, type: !61)
!5081 = !DILocalVariable(name: "real_count", scope: !5074, file: !629, line: 681, type: !61)
!5082 = !DILocalVariable(name: "avail_space", scope: !5074, file: !629, line: 681, type: !61)
!5083 = !DILocalVariable(name: "status", scope: !5074, file: !629, line: 682, type: !4631)
!5084 = !DILocation(line: 0, scope: !5074)
!5085 = !DILocation(line: 681, column: 5, scope: !5074)
!5086 = !DILocation(line: 687, column: 11, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5074, file: !629, line: 687, column: 9)
!5088 = !DILocation(line: 687, column: 42, scope: !5087)
!5089 = !DILocation(line: 691, column: 9, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5074, file: !629, line: 691, column: 9)
!5091 = !DILocation(line: 691, column: 36, scope: !5090)
!5092 = !DILocation(line: 691, column: 9, scope: !5074)
!5093 = !DILocation(line: 704, column: 15, scope: !5074)
!5094 = !DILocation(line: 706, column: 14, scope: !5074)
!5095 = !DILocation(line: 707, column: 16, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5074, file: !629, line: 707, column: 9)
!5097 = !DILocation(line: 707, column: 9, scope: !5074)
!5098 = !DILocation(line: 708, column: 9, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 707, column: 28)
!5100 = !DILocation(line: 712, column: 9, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5074, file: !629, line: 712, column: 9)
!5102 = !DILocation(line: 712, column: 21, scope: !5101)
!5103 = !DILocation(line: 717, column: 19, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !629, line: 717, column: 5)
!5105 = distinct !DILexicalBlock(scope: !5074, file: !629, line: 717, column: 5)
!5106 = !DILocation(line: 717, column: 5, scope: !5105)
!5107 = distinct !{!5107, !5106, !5108}
!5108 = !DILocation(line: 723, column: 5, scope: !5105)
!5109 = !DILocation(line: 718, column: 42, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5104, file: !629, line: 717, column: 38)
!5111 = !DILocation(line: 718, column: 18, scope: !5110)
!5112 = !DILocation(line: 719, column: 20, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5110, file: !629, line: 719, column: 13)
!5114 = !DILocation(line: 717, column: 34, scope: !5104)
!5115 = !DILocation(line: 719, column: 13, scope: !5110)
!5116 = !DILocation(line: 720, column: 13, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5113, file: !629, line: 719, column: 32)
!5118 = !DILocation(line: 728, column: 23, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5074, file: !629, line: 728, column: 9)
!5120 = !DILocation(line: 728, column: 20, scope: !5119)
!5121 = !DILocation(line: 728, column: 9, scope: !5074)
!5122 = !DILocation(line: 729, column: 18, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5119, file: !629, line: 728, column: 36)
!5124 = !DILocation(line: 730, column: 20, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5123, file: !629, line: 730, column: 13)
!5126 = !DILocation(line: 730, column: 13, scope: !5123)
!5127 = !DILocation(line: 731, column: 13, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5125, file: !629, line: 730, column: 32)
!5129 = !DILocation(line: 737, column: 1, scope: !5074)
!5130 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !629, file: !629, line: 739, type: !5131, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5133)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!1630, !735}
!5133 = !{!5134, !5135, !5136}
!5134 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5130, file: !629, line: 739, type: !735)
!5135 = !DILocalVariable(name: "data", scope: !5130, file: !629, line: 741, type: !1630)
!5136 = !DILocalVariable(name: "uartx", scope: !5130, file: !629, line: 742, type: !4575)
!5137 = !DILocation(line: 0, scope: !5130)
!5138 = !DILocation(line: 744, column: 10, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5130, file: !629, line: 744, column: 9)
!5140 = !DILocation(line: 744, column: 9, scope: !5130)
!5141 = !DILocation(line: 748, column: 9, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5130, file: !629, line: 748, column: 9)
!5143 = !DILocation(line: 748, column: 36, scope: !5142)
!5144 = !DILocation(line: 748, column: 9, scope: !5130)
!5145 = !DILocation(line: 752, column: 13, scope: !5130)
!5146 = !DILocation(line: 754, column: 12, scope: !5130)
!5147 = !DILocation(line: 756, column: 5, scope: !5130)
!5148 = !DILocation(line: 757, column: 1, scope: !5130)
!5149 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !629, file: !629, line: 759, type: !5150, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5152)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{!61, !735}
!5152 = !{!5153, !5154, !5155}
!5153 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5149, file: !629, line: 759, type: !735)
!5154 = !DILocalVariable(name: "data", scope: !5149, file: !629, line: 761, type: !61)
!5155 = !DILocalVariable(name: "uartx", scope: !5149, file: !629, line: 762, type: !4575)
!5156 = !DILocation(line: 0, scope: !5149)
!5157 = !DILocation(line: 764, column: 10, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5149, file: !629, line: 764, column: 9)
!5159 = !DILocation(line: 764, column: 9, scope: !5149)
!5160 = !DILocation(line: 768, column: 9, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5149, file: !629, line: 768, column: 9)
!5162 = !DILocation(line: 768, column: 36, scope: !5161)
!5163 = !DILocation(line: 768, column: 9, scope: !5149)
!5164 = !DILocation(line: 772, column: 13, scope: !5149)
!5165 = !DILocation(line: 774, column: 12, scope: !5149)
!5166 = !DILocation(line: 776, column: 5, scope: !5149)
!5167 = !DILocation(line: 777, column: 1, scope: !5149)
!5168 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !629, file: !629, line: 779, type: !5169, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5171)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!61, !735, !762, !61}
!5171 = !{!5172, !5173, !5174, !5175, !5176}
!5172 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5168, file: !629, line: 779, type: !735)
!5173 = !DILocalVariable(name: "buffer", arg: 2, scope: !5168, file: !629, line: 779, type: !762)
!5174 = !DILocalVariable(name: "size", arg: 3, scope: !5168, file: !629, line: 779, type: !61)
!5175 = !DILocalVariable(name: "i", scope: !5168, file: !629, line: 781, type: !61)
!5176 = !DILocalVariable(name: "pbuf", scope: !5168, file: !629, line: 782, type: !762)
!5177 = !DILocation(line: 0, scope: !5168)
!5178 = !DILocation(line: 784, column: 11, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5168, file: !629, line: 784, column: 9)
!5180 = !DILocation(line: 784, column: 42, scope: !5179)
!5181 = !DILocation(line: 789, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5168, file: !629, line: 789, column: 9)
!5183 = !DILocation(line: 789, column: 36, scope: !5182)
!5184 = !DILocation(line: 789, column: 9, scope: !5168)
!5185 = !DILocation(line: 794, column: 19, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5187, file: !629, line: 793, column: 32)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !629, line: 793, column: 5)
!5188 = distinct !DILexicalBlock(scope: !5168, file: !629, line: 793, column: 5)
!5189 = !DILocation(line: 794, column: 9, scope: !5186)
!5190 = !DILocation(line: 794, column: 17, scope: !5186)
!5191 = !DILocation(line: 793, column: 28, scope: !5187)
!5192 = !DILocation(line: 793, column: 19, scope: !5187)
!5193 = !DILocation(line: 793, column: 5, scope: !5188)
!5194 = distinct !{!5194, !5193, !5195}
!5195 = !DILocation(line: 795, column: 5, scope: !5188)
!5196 = !DILocation(line: 798, column: 1, scope: !5168)
!5197 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !629, file: !629, line: 800, type: !5169, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5198)
!5198 = !{!5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206}
!5199 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5197, file: !629, line: 800, type: !735)
!5200 = !DILocalVariable(name: "buffer", arg: 2, scope: !5197, file: !629, line: 800, type: !762)
!5201 = !DILocalVariable(name: "size", arg: 3, scope: !5197, file: !629, line: 800, type: !61)
!5202 = !DILocalVariable(name: "channel", scope: !5197, file: !629, line: 802, type: !4570)
!5203 = !DILocalVariable(name: "receive_count", scope: !5197, file: !629, line: 803, type: !61)
!5204 = !DILocalVariable(name: "avail_count", scope: !5197, file: !629, line: 803, type: !61)
!5205 = !DILocalVariable(name: "index", scope: !5197, file: !629, line: 804, type: !61)
!5206 = !DILocalVariable(name: "status", scope: !5197, file: !629, line: 805, type: !4631)
!5207 = !DILocation(line: 0, scope: !5197)
!5208 = !DILocation(line: 803, column: 5, scope: !5197)
!5209 = !DILocation(line: 807, column: 11, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5197, file: !629, line: 807, column: 9)
!5211 = !DILocation(line: 807, column: 42, scope: !5210)
!5212 = !DILocation(line: 813, column: 9, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5197, file: !629, line: 813, column: 9)
!5214 = !DILocation(line: 813, column: 36, scope: !5213)
!5215 = !DILocation(line: 813, column: 9, scope: !5197)
!5216 = !DILocation(line: 817, column: 15, scope: !5197)
!5217 = !DILocation(line: 819, column: 14, scope: !5197)
!5218 = !DILocation(line: 820, column: 16, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5197, file: !629, line: 820, column: 9)
!5220 = !DILocation(line: 820, column: 9, scope: !5197)
!5221 = !DILocation(line: 821, column: 9, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 820, column: 28)
!5223 = !DILocation(line: 825, column: 9, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5197, file: !629, line: 825, column: 9)
!5225 = !DILocation(line: 825, column: 21, scope: !5224)
!5226 = !DILocation(line: 830, column: 27, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !629, line: 830, column: 5)
!5228 = distinct !DILexicalBlock(scope: !5197, file: !629, line: 830, column: 5)
!5229 = !DILocation(line: 830, column: 5, scope: !5228)
!5230 = distinct !{!5230, !5229, !5231}
!5231 = !DILocation(line: 836, column: 5, scope: !5228)
!5232 = !DILocation(line: 831, column: 42, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5227, file: !629, line: 830, column: 53)
!5234 = !DILocation(line: 831, column: 18, scope: !5233)
!5235 = !DILocation(line: 832, column: 20, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5233, file: !629, line: 832, column: 13)
!5237 = !DILocation(line: 830, column: 49, scope: !5227)
!5238 = !DILocation(line: 832, column: 13, scope: !5233)
!5239 = !DILocation(line: 833, column: 13, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5236, file: !629, line: 832, column: 32)
!5241 = !DILocation(line: 841, column: 26, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5197, file: !629, line: 841, column: 9)
!5243 = !DILocation(line: 841, column: 23, scope: !5242)
!5244 = !DILocation(line: 841, column: 9, scope: !5197)
!5245 = !DILocation(line: 842, column: 18, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5242, file: !629, line: 841, column: 39)
!5247 = !DILocation(line: 843, column: 20, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5246, file: !629, line: 843, column: 13)
!5249 = !DILocation(line: 843, column: 13, scope: !5246)
!5250 = !DILocation(line: 844, column: 13, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5248, file: !629, line: 843, column: 32)
!5252 = !DILocation(line: 850, column: 1, scope: !5197)
!5253 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !629, file: !629, line: 891, type: !5254, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5256)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{!4768, !735, !744, !88}
!5256 = !{!5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264}
!5257 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5253, file: !629, line: 891, type: !735)
!5258 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5253, file: !629, line: 892, type: !744)
!5259 = !DILocalVariable(name: "user_data", arg: 3, scope: !5253, file: !629, line: 893, type: !88)
!5260 = !DILocalVariable(name: "tx_dma_channel", scope: !5253, file: !629, line: 895, type: !4570)
!5261 = !DILocalVariable(name: "rx_dma_channel", scope: !5253, file: !629, line: 895, type: !4570)
!5262 = !DILocalVariable(name: "irq_status", scope: !5253, file: !629, line: 896, type: !61)
!5263 = !DILocalVariable(name: "status", scope: !5253, file: !629, line: 897, type: !4631)
!5264 = !DILocalVariable(name: "nvic_status", scope: !5253, file: !629, line: 898, type: !1025)
!5265 = !DILocation(line: 0, scope: !5253)
!5266 = !DILocation(line: 900, column: 11, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5253, file: !629, line: 900, column: 9)
!5268 = !DILocation(line: 900, column: 42, scope: !5267)
!5269 = !DILocation(line: 905, column: 18, scope: !5253)
!5270 = !DILocation(line: 906, column: 9, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5253, file: !629, line: 906, column: 9)
!5272 = !DILocation(line: 906, column: 36, scope: !5271)
!5273 = !DILocation(line: 906, column: 9, scope: !5253)
!5274 = !DILocation(line: 911, column: 22, scope: !5253)
!5275 = !DILocation(line: 912, column: 22, scope: !5253)
!5276 = !DILocation(line: 914, column: 32, scope: !5253)
!5277 = !DILocation(line: 914, column: 37, scope: !5253)
!5278 = !DILocation(line: 915, column: 32, scope: !5253)
!5279 = !DILocation(line: 915, column: 36, scope: !5253)
!5280 = !DILocation(line: 917, column: 91, scope: !5253)
!5281 = !DILocation(line: 917, column: 56, scope: !5253)
!5282 = !DILocation(line: 917, column: 5, scope: !5253)
!5283 = !DILocation(line: 918, column: 80, scope: !5253)
!5284 = !DILocation(line: 918, column: 14, scope: !5253)
!5285 = !DILocation(line: 919, column: 16, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5253, file: !629, line: 919, column: 9)
!5287 = !DILocation(line: 919, column: 9, scope: !5253)
!5288 = !DILocation(line: 920, column: 9, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5286, file: !629, line: 919, column: 28)
!5290 = !DILocation(line: 921, column: 9, scope: !5289)
!5291 = !DILocation(line: 924, column: 97, scope: !5253)
!5292 = !DILocation(line: 924, column: 56, scope: !5253)
!5293 = !DILocation(line: 924, column: 5, scope: !5253)
!5294 = !DILocation(line: 925, column: 80, scope: !5253)
!5295 = !DILocation(line: 925, column: 14, scope: !5253)
!5296 = !DILocation(line: 926, column: 16, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5253, file: !629, line: 926, column: 9)
!5298 = !DILocation(line: 926, column: 9, scope: !5253)
!5299 = !DILocation(line: 927, column: 9, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5297, file: !629, line: 926, column: 28)
!5301 = !DILocation(line: 928, column: 9, scope: !5300)
!5302 = !DILocation(line: 931, column: 49, scope: !5253)
!5303 = !DILocation(line: 931, column: 19, scope: !5253)
!5304 = !DILocation(line: 932, column: 21, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5253, file: !629, line: 932, column: 9)
!5306 = !DILocation(line: 932, column: 9, scope: !5253)
!5307 = !DILocation(line: 933, column: 9, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5305, file: !629, line: 932, column: 44)
!5309 = !DILocation(line: 934, column: 9, scope: !5308)
!5310 = !DILocation(line: 938, column: 5, scope: !5253)
!5311 = !DILocation(line: 940, column: 32, scope: !5253)
!5312 = !DILocation(line: 944, column: 5, scope: !5253)
!5313 = !DILocation(line: 945, column: 1, scope: !5253)
!5314 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !629, file: !629, line: 303, type: !5315, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5318)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !5317, !88}
!5317 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !639, line: 225, baseType: !723)
!5318 = !{!5319, !5320, !5321}
!5319 = !DILocalVariable(name: "event", arg: 1, scope: !5314, file: !629, line: 303, type: !5317)
!5320 = !DILocalVariable(name: "user_data", arg: 2, scope: !5314, file: !629, line: 303, type: !88)
!5321 = !DILocalVariable(name: "callback_data", scope: !5314, file: !629, line: 305, type: !728)
!5322 = !DILocation(line: 0, scope: !5314)
!5323 = !DILocation(line: 307, column: 24, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5314, file: !629, line: 307, column: 9)
!5325 = !DILocation(line: 0, scope: !5324)
!5326 = !DILocation(line: 307, column: 9, scope: !5314)
!5327 = !DILocation(line: 308, column: 9, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !629, line: 307, column: 39)
!5329 = !DILocation(line: 309, column: 5, scope: !5328)
!5330 = !DILocation(line: 310, column: 9, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5324, file: !629, line: 309, column: 12)
!5332 = !DILocation(line: 312, column: 1, scope: !5314)
!5333 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !629, file: !629, line: 852, type: !4740, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5334)
!5334 = !{!5335, !5336, !5337, !5338, !5339}
!5335 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5333, file: !629, line: 852, type: !735)
!5336 = !DILocalVariable(name: "uartx", scope: !5333, file: !629, line: 854, type: !4575)
!5337 = !DILocalVariable(name: "tx_dma_channel", scope: !5333, file: !629, line: 855, type: !4570)
!5338 = !DILocalVariable(name: "rx_dma_channel", scope: !5333, file: !629, line: 855, type: !4570)
!5339 = !DILocalVariable(name: "status", scope: !5333, file: !629, line: 856, type: !4631)
!5340 = !DILocation(line: 0, scope: !5333)
!5341 = !DILocation(line: 858, column: 13, scope: !5333)
!5342 = !DILocation(line: 859, column: 22, scope: !5333)
!5343 = !DILocation(line: 860, column: 22, scope: !5333)
!5344 = !DILocation(line: 866, column: 5, scope: !5333)
!5345 = !DILocation(line: 867, column: 25, scope: !5333)
!5346 = !DILocation(line: 867, column: 5, scope: !5333)
!5347 = !DILocation(line: 868, column: 14, scope: !5333)
!5348 = !DILocation(line: 869, column: 16, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5333, file: !629, line: 869, column: 9)
!5350 = !DILocation(line: 869, column: 9, scope: !5333)
!5351 = !DILocation(line: 870, column: 9, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5349, file: !629, line: 869, column: 28)
!5353 = !DILocation(line: 873, column: 14, scope: !5333)
!5354 = !DILocation(line: 874, column: 16, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5333, file: !629, line: 874, column: 9)
!5356 = !DILocation(line: 874, column: 9, scope: !5333)
!5357 = !DILocation(line: 875, column: 9, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5355, file: !629, line: 874, column: 28)
!5359 = !DILocation(line: 878, column: 14, scope: !5333)
!5360 = !DILocation(line: 879, column: 16, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5333, file: !629, line: 879, column: 9)
!5362 = !DILocation(line: 879, column: 9, scope: !5333)
!5363 = !DILocation(line: 880, column: 9, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5361, file: !629, line: 879, column: 28)
!5365 = !DILocation(line: 883, column: 14, scope: !5333)
!5366 = !DILocation(line: 884, column: 16, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5333, file: !629, line: 884, column: 9)
!5368 = !DILocation(line: 884, column: 9, scope: !5333)
!5369 = !DILocation(line: 885, column: 9, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5367, file: !629, line: 884, column: 28)
!5371 = !DILocation(line: 888, column: 5, scope: !5333)
!5372 = !DILocation(line: 889, column: 1, scope: !5333)
!5373 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !629, file: !629, line: 947, type: !5150, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5374)
!5374 = !{!5375, !5376, !5377, !5378}
!5375 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5373, file: !629, line: 947, type: !735)
!5376 = !DILocalVariable(name: "channel", scope: !5373, file: !629, line: 949, type: !4570)
!5377 = !DILocalVariable(name: "roomleft", scope: !5373, file: !629, line: 950, type: !61)
!5378 = !DILocalVariable(name: "status", scope: !5373, file: !629, line: 951, type: !4631)
!5379 = !DILocation(line: 0, scope: !5373)
!5380 = !DILocation(line: 950, column: 5, scope: !5373)
!5381 = !DILocation(line: 953, column: 10, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5373, file: !629, line: 953, column: 9)
!5383 = !DILocation(line: 953, column: 9, scope: !5373)
!5384 = !DILocation(line: 957, column: 9, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5373, file: !629, line: 957, column: 9)
!5386 = !DILocation(line: 957, column: 36, scope: !5385)
!5387 = !DILocation(line: 957, column: 9, scope: !5373)
!5388 = !DILocation(line: 961, column: 15, scope: !5373)
!5389 = !DILocation(line: 962, column: 14, scope: !5373)
!5390 = !DILocation(line: 963, column: 16, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5373, file: !629, line: 963, column: 9)
!5392 = !DILocation(line: 963, column: 9, scope: !5373)
!5393 = !DILocation(line: 964, column: 9, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !629, line: 963, column: 28)
!5395 = !DILocation(line: 968, column: 12, scope: !5373)
!5396 = !DILocation(line: 968, column: 5, scope: !5373)
!5397 = !DILocation(line: 969, column: 1, scope: !5373)
!5398 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !629, file: !629, line: 971, type: !5150, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5399)
!5399 = !{!5400, !5401, !5402, !5403}
!5400 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5398, file: !629, line: 971, type: !735)
!5401 = !DILocalVariable(name: "channel", scope: !5398, file: !629, line: 973, type: !4570)
!5402 = !DILocalVariable(name: "avail", scope: !5398, file: !629, line: 974, type: !61)
!5403 = !DILocalVariable(name: "status", scope: !5398, file: !629, line: 975, type: !4631)
!5404 = !DILocation(line: 0, scope: !5398)
!5405 = !DILocation(line: 974, column: 5, scope: !5398)
!5406 = !DILocation(line: 977, column: 10, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5398, file: !629, line: 977, column: 9)
!5408 = !DILocation(line: 977, column: 9, scope: !5398)
!5409 = !DILocation(line: 981, column: 9, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5398, file: !629, line: 981, column: 9)
!5411 = !DILocation(line: 981, column: 36, scope: !5410)
!5412 = !DILocation(line: 981, column: 9, scope: !5398)
!5413 = !DILocation(line: 985, column: 15, scope: !5398)
!5414 = !DILocation(line: 986, column: 14, scope: !5398)
!5415 = !DILocation(line: 987, column: 16, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5398, file: !629, line: 987, column: 9)
!5417 = !DILocation(line: 987, column: 9, scope: !5398)
!5418 = !DILocation(line: 988, column: 9, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !629, line: 987, column: 28)
!5420 = !DILocation(line: 992, column: 12, scope: !5398)
!5421 = !DILocation(line: 992, column: 5, scope: !5398)
!5422 = !DILocation(line: 993, column: 1, scope: !5398)
!5423 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !629, file: !629, line: 995, type: !4937, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5424)
!5424 = !{!5425, !5426}
!5425 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5423, file: !629, line: 995, type: !735)
!5426 = !DILocalVariable(name: "uartx", scope: !5423, file: !629, line: 997, type: !4575)
!5427 = !DILocation(line: 0, scope: !5423)
!5428 = !DILocation(line: 999, column: 10, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5423, file: !629, line: 999, column: 9)
!5430 = !DILocation(line: 999, column: 9, scope: !5423)
!5431 = !DILocation(line: 1003, column: 9, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5423, file: !629, line: 1003, column: 9)
!5433 = !DILocation(line: 1003, column: 36, scope: !5432)
!5434 = !DILocation(line: 1003, column: 9, scope: !5423)
!5435 = !DILocation(line: 1007, column: 13, scope: !5423)
!5436 = !DILocation(line: 1009, column: 5, scope: !5423)
!5437 = !DILocation(line: 1015, column: 5, scope: !5423)
!5438 = !DILocation(line: 1016, column: 1, scope: !5423)
!5439 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !629, file: !629, line: 1018, type: !5440, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5442)
!5440 = !DISubroutineType(types: !5441)
!5441 = !{!4768, !735, !460, !460, !460}
!5442 = !{!5443, !5444, !5445, !5446, !5447}
!5443 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5439, file: !629, line: 1018, type: !735)
!5444 = !DILocalVariable(name: "xon", arg: 2, scope: !5439, file: !629, line: 1019, type: !460)
!5445 = !DILocalVariable(name: "xoff", arg: 3, scope: !5439, file: !629, line: 1020, type: !460)
!5446 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5439, file: !629, line: 1021, type: !460)
!5447 = !DILocalVariable(name: "uartx", scope: !5439, file: !629, line: 1023, type: !4575)
!5448 = !DILocation(line: 0, scope: !5439)
!5449 = !DILocation(line: 1025, column: 10, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5439, file: !629, line: 1025, column: 9)
!5451 = !DILocation(line: 1025, column: 9, scope: !5439)
!5452 = !DILocation(line: 1029, column: 9, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5439, file: !629, line: 1029, column: 9)
!5454 = !DILocation(line: 1029, column: 36, scope: !5453)
!5455 = !DILocation(line: 1029, column: 9, scope: !5439)
!5456 = !DILocation(line: 1033, column: 13, scope: !5439)
!5457 = !DILocation(line: 1035, column: 5, scope: !5439)
!5458 = !DILocation(line: 1044, column: 5, scope: !5439)
!5459 = !DILocation(line: 1045, column: 1, scope: !5439)
!5460 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !629, file: !629, line: 1047, type: !4937, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5461)
!5461 = !{!5462, !5463}
!5462 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5460, file: !629, line: 1047, type: !735)
!5463 = !DILocalVariable(name: "uartx", scope: !5460, file: !629, line: 1049, type: !4575)
!5464 = !DILocation(line: 0, scope: !5460)
!5465 = !DILocation(line: 1051, column: 10, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5460, file: !629, line: 1051, column: 9)
!5467 = !DILocation(line: 1051, column: 9, scope: !5460)
!5468 = !DILocation(line: 1055, column: 9, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5460, file: !629, line: 1055, column: 9)
!5470 = !DILocation(line: 1055, column: 36, scope: !5469)
!5471 = !DILocation(line: 1055, column: 9, scope: !5460)
!5472 = !DILocation(line: 1059, column: 13, scope: !5460)
!5473 = !DILocation(line: 1061, column: 5, scope: !5460)
!5474 = !DILocation(line: 1067, column: 5, scope: !5460)
!5475 = !DILocation(line: 1068, column: 1, scope: !5460)
!5476 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !629, file: !629, line: 1071, type: !5477, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5481)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!4768, !735, !5479}
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5480, size: 32)
!5480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !758)
!5481 = !{!5482, !5483, !5484, !5485, !5491, !5492, !5493}
!5482 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5476, file: !629, line: 1071, type: !735)
!5483 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5476, file: !629, line: 1071, type: !5479)
!5484 = !DILocalVariable(name: "irq_status", scope: !5476, file: !629, line: 1073, type: !61)
!5485 = !DILocalVariable(name: "internal_dma_config", scope: !5476, file: !629, line: 1074, type: !5486)
!5486 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !639, line: 283, baseType: !5487)
!5487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 280, size: 64, elements: !5488)
!5488 = !{!5489, !5490}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5487, file: !639, line: 281, baseType: !61, size: 32)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5487, file: !639, line: 282, baseType: !61, size: 32, offset: 32)
!5491 = !DILocalVariable(name: "tx_dma_channel", scope: !5476, file: !629, line: 1075, type: !4570)
!5492 = !DILocalVariable(name: "rx_dma_channel", scope: !5476, file: !629, line: 1075, type: !4570)
!5493 = !DILocalVariable(name: "status", scope: !5476, file: !629, line: 1076, type: !4631)
!5494 = !DILocation(line: 0, scope: !5476)
!5495 = !DILocation(line: 1074, column: 5, scope: !5476)
!5496 = !DILocation(line: 1074, column: 19, scope: !5476)
!5497 = !DILocation(line: 1078, column: 10, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1078, column: 9)
!5499 = !DILocation(line: 1078, column: 9, scope: !5476)
!5500 = !DILocation(line: 1081, column: 22, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1081, column: 9)
!5502 = !DILocation(line: 1081, column: 40, scope: !5501)
!5503 = !DILocation(line: 1081, column: 49, scope: !5501)
!5504 = !DILocation(line: 1082, column: 22, scope: !5501)
!5505 = !DILocation(line: 1082, column: 43, scope: !5501)
!5506 = !DILocation(line: 1081, column: 9, scope: !5476)
!5507 = !DILocation(line: 1085, column: 22, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1085, column: 9)
!5509 = !DILocation(line: 1085, column: 45, scope: !5508)
!5510 = !DILocation(line: 1085, column: 76, scope: !5508)
!5511 = !DILocation(line: 1086, column: 22, scope: !5508)
!5512 = !DILocation(line: 1086, column: 48, scope: !5508)
!5513 = !DILocation(line: 1086, column: 79, scope: !5508)
!5514 = !DILocation(line: 1090, column: 22, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1090, column: 9)
!5516 = !DILocation(line: 1090, column: 48, scope: !5515)
!5517 = !DILocation(line: 1090, column: 79, scope: !5515)
!5518 = !DILocation(line: 1091, column: 22, scope: !5515)
!5519 = !DILocation(line: 1091, column: 51, scope: !5515)
!5520 = !DILocation(line: 1091, column: 82, scope: !5515)
!5521 = !DILocation(line: 1092, column: 22, scope: !5515)
!5522 = !DILocation(line: 1092, column: 47, scope: !5515)
!5523 = !DILocation(line: 1092, column: 78, scope: !5515)
!5524 = !DILocation(line: 1098, column: 9, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1098, column: 9)
!5526 = !DILocation(line: 1098, column: 36, scope: !5525)
!5527 = !DILocation(line: 1098, column: 9, scope: !5476)
!5528 = !DILocation(line: 1102, column: 22, scope: !5476)
!5529 = !DILocation(line: 1103, column: 22, scope: !5476)
!5530 = !DILocation(line: 1105, column: 14, scope: !5476)
!5531 = !DILocation(line: 1106, column: 16, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1106, column: 9)
!5533 = !DILocation(line: 1106, column: 9, scope: !5476)
!5534 = !DILocation(line: 1107, column: 9, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5532, file: !629, line: 1106, column: 28)
!5536 = !DILocation(line: 1110, column: 62, scope: !5476)
!5537 = !DILocation(line: 1110, column: 40, scope: !5476)
!5538 = !DILocation(line: 1110, column: 25, scope: !5476)
!5539 = !DILocation(line: 1110, column: 38, scope: !5476)
!5540 = !DILocation(line: 1111, column: 44, scope: !5476)
!5541 = !DILocation(line: 1111, column: 25, scope: !5476)
!5542 = !DILocation(line: 1111, column: 30, scope: !5476)
!5543 = !DILocation(line: 1112, column: 14, scope: !5476)
!5544 = !DILocation(line: 1113, column: 16, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1113, column: 9)
!5546 = !DILocation(line: 1113, column: 9, scope: !5476)
!5547 = !DILocation(line: 1114, column: 9, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1113, column: 28)
!5549 = !DILocation(line: 1117, column: 61, scope: !5476)
!5550 = !DILocation(line: 1117, column: 14, scope: !5476)
!5551 = !DILocation(line: 1118, column: 16, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1118, column: 9)
!5553 = !DILocation(line: 1118, column: 9, scope: !5476)
!5554 = !DILocation(line: 1119, column: 9, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5552, file: !629, line: 1118, column: 28)
!5556 = !DILocation(line: 1123, column: 14, scope: !5476)
!5557 = !DILocation(line: 1124, column: 16, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1124, column: 9)
!5559 = !DILocation(line: 1124, column: 9, scope: !5476)
!5560 = !DILocation(line: 1125, column: 9, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5558, file: !629, line: 1124, column: 28)
!5562 = !DILocation(line: 1128, column: 62, scope: !5476)
!5563 = !DILocation(line: 1128, column: 40, scope: !5476)
!5564 = !DILocation(line: 1128, column: 38, scope: !5476)
!5565 = !DILocation(line: 1129, column: 44, scope: !5476)
!5566 = !DILocation(line: 1129, column: 30, scope: !5476)
!5567 = !DILocation(line: 1130, column: 14, scope: !5476)
!5568 = !DILocation(line: 1131, column: 16, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1131, column: 9)
!5570 = !DILocation(line: 1131, column: 9, scope: !5476)
!5571 = !DILocation(line: 1132, column: 9, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5569, file: !629, line: 1131, column: 28)
!5573 = !DILocation(line: 1135, column: 61, scope: !5476)
!5574 = !DILocation(line: 1135, column: 14, scope: !5476)
!5575 = !DILocation(line: 1136, column: 16, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1136, column: 9)
!5577 = !DILocation(line: 1136, column: 9, scope: !5476)
!5578 = !DILocation(line: 1137, column: 9, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5576, file: !629, line: 1136, column: 28)
!5580 = !DILocation(line: 1140, column: 64, scope: !5476)
!5581 = !DILocation(line: 1140, column: 14, scope: !5476)
!5582 = !DILocation(line: 1141, column: 16, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5476, file: !629, line: 1141, column: 9)
!5584 = !DILocation(line: 1141, column: 9, scope: !5476)
!5585 = !DILocation(line: 1142, column: 9, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5583, file: !629, line: 1141, column: 28)
!5587 = !DILocation(line: 1146, column: 18, scope: !5476)
!5588 = !DILocation(line: 1147, column: 66, scope: !5476)
!5589 = !DILocation(line: 1147, column: 34, scope: !5476)
!5590 = !DILocation(line: 1147, column: 52, scope: !5476)
!5591 = !DILocation(line: 1148, column: 71, scope: !5476)
!5592 = !DILocation(line: 1148, column: 34, scope: !5476)
!5593 = !DILocation(line: 1148, column: 57, scope: !5476)
!5594 = !DILocation(line: 1149, column: 74, scope: !5476)
!5595 = !DILocation(line: 1149, column: 34, scope: !5476)
!5596 = !DILocation(line: 1149, column: 60, scope: !5476)
!5597 = !DILocation(line: 1150, column: 73, scope: !5476)
!5598 = !DILocation(line: 1150, column: 34, scope: !5476)
!5599 = !DILocation(line: 1150, column: 59, scope: !5476)
!5600 = !DILocation(line: 1151, column: 69, scope: !5476)
!5601 = !DILocation(line: 1151, column: 34, scope: !5476)
!5602 = !DILocation(line: 1151, column: 55, scope: !5476)
!5603 = !DILocation(line: 1152, column: 74, scope: !5476)
!5604 = !DILocation(line: 1152, column: 34, scope: !5476)
!5605 = !DILocation(line: 1152, column: 60, scope: !5476)
!5606 = !DILocation(line: 1153, column: 77, scope: !5476)
!5607 = !DILocation(line: 1153, column: 34, scope: !5476)
!5608 = !DILocation(line: 1153, column: 63, scope: !5476)
!5609 = !DILocation(line: 1154, column: 5, scope: !5476)
!5610 = !DILocation(line: 1156, column: 5, scope: !5476)
!5611 = !DILocation(line: 1157, column: 1, scope: !5476)
!5612 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2664, file: !2664, line: 52, type: !5613, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5670)
!5613 = !DISubroutineType(types: !5614)
!5614 = !{null, !5615, !61}
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 32)
!5616 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5617)
!5617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5618)
!5618 = !{!5619, !5625, !5630, !5636, !5637, !5642, !5647, !5648, !5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669}
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5617, file: !56, line: 547, baseType: !5620, size: 32)
!5620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5617, file: !56, line: 543, size: 32, elements: !5621)
!5621 = !{!5622, !5623, !5624}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5620, file: !56, line: 544, baseType: !272, size: 32)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5620, file: !56, line: 545, baseType: !60, size: 32)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5620, file: !56, line: 546, baseType: !60, size: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5617, file: !56, line: 551, baseType: !5626, size: 32, offset: 32)
!5626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5617, file: !56, line: 548, size: 32, elements: !5627)
!5627 = !{!5628, !5629}
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5626, file: !56, line: 549, baseType: !60, size: 32)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5626, file: !56, line: 550, baseType: !60, size: 32)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5617, file: !56, line: 556, baseType: !5631, size: 32, offset: 64)
!5631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5617, file: !56, line: 552, size: 32, elements: !5632)
!5632 = !{!5633, !5634, !5635}
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5631, file: !56, line: 553, baseType: !272, size: 32)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5631, file: !56, line: 554, baseType: !60, size: 32)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5631, file: !56, line: 555, baseType: !60, size: 32)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5617, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5617, file: !56, line: 561, baseType: !5638, size: 32, offset: 128)
!5638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5617, file: !56, line: 558, size: 32, elements: !5639)
!5639 = !{!5640, !5641}
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5638, file: !56, line: 559, baseType: !60, size: 32)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5638, file: !56, line: 560, baseType: !60, size: 32)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5617, file: !56, line: 565, baseType: !5643, size: 32, offset: 160)
!5643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5617, file: !56, line: 562, size: 32, elements: !5644)
!5644 = !{!5645, !5646}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5643, file: !56, line: 563, baseType: !272, size: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5643, file: !56, line: 564, baseType: !60, size: 32)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5617, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5617, file: !56, line: 570, baseType: !5649, size: 32, offset: 224)
!5649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5617, file: !56, line: 567, size: 32, elements: !5650)
!5650 = !{!5651, !5652}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5649, file: !56, line: 568, baseType: !60, size: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5649, file: !56, line: 569, baseType: !60, size: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5617, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5617, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5617, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5617, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5617, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5617, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5617, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5617, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5617, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5617, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5617, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5617, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5617, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5617, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5617, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5617, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5617, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5670 = !{!5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5685}
!5671 = !DILocalVariable(name: "uartx", arg: 1, scope: !5612, file: !2664, line: 52, type: !5615)
!5672 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5612, file: !2664, line: 52, type: !61)
!5673 = !DILocalVariable(name: "uart_clock", scope: !5612, file: !2664, line: 54, type: !61)
!5674 = !DILocalVariable(name: "integer", scope: !5612, file: !2664, line: 54, type: !61)
!5675 = !DILocalVariable(name: "remainder", scope: !5612, file: !2664, line: 54, type: !61)
!5676 = !DILocalVariable(name: "fraction", scope: !5612, file: !2664, line: 54, type: !61)
!5677 = !DILocalVariable(name: "dll_dlm", scope: !5612, file: !2664, line: 55, type: !61)
!5678 = !DILocalVariable(name: "sample_count", scope: !5612, file: !2664, line: 55, type: !61)
!5679 = !DILocalVariable(name: "sample_point", scope: !5612, file: !2664, line: 55, type: !61)
!5680 = !DILocalVariable(name: "temp_lcr", scope: !5612, file: !2664, line: 55, type: !61)
!5681 = !DILocalVariable(name: "fraction_L_mapping", scope: !5612, file: !2664, line: 56, type: !5682)
!5682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5683)
!5683 = !{!5684}
!5684 = !DISubrange(count: 10)
!5685 = !DILocalVariable(name: "fraction_M_mapping", scope: !5612, file: !2664, line: 57, type: !5682)
!5686 = !DILocation(line: 0, scope: !5612)
!5687 = !DILocation(line: 56, column: 14, scope: !5612)
!5688 = !DILocation(line: 57, column: 5, scope: !5612)
!5689 = !DILocation(line: 57, column: 14, scope: !5612)
!5690 = !DILocation(line: 59, column: 12, scope: !5612)
!5691 = !DILocation(line: 59, column: 23, scope: !5612)
!5692 = !DILocation(line: 60, column: 12, scope: !5612)
!5693 = !DILocation(line: 60, column: 22, scope: !5612)
!5694 = !DILocation(line: 61, column: 12, scope: !5612)
!5695 = !DILocation(line: 61, column: 22, scope: !5612)
!5696 = !DILocation(line: 63, column: 9, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5612, file: !2664, line: 63, column: 9)
!5698 = !DILocation(line: 63, column: 9, scope: !5612)
!5699 = !DILocation(line: 64, column: 22, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5697, file: !2664, line: 63, column: 37)
!5701 = !DILocation(line: 64, column: 45, scope: !5700)
!5702 = !DILocation(line: 65, column: 5, scope: !5700)
!5703 = !DILocation(line: 0, scope: !5697)
!5704 = !DILocation(line: 69, column: 45, scope: !5612)
!5705 = !DILocation(line: 69, column: 26, scope: !5612)
!5706 = !DILocation(line: 70, column: 30, scope: !5612)
!5707 = !DILocation(line: 70, column: 36, scope: !5612)
!5708 = !DILocation(line: 70, column: 63, scope: !5612)
!5709 = !DILocation(line: 71, column: 20, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5612, file: !2664, line: 71, column: 9)
!5711 = !DILocation(line: 71, column: 26, scope: !5710)
!5712 = !DILocation(line: 77, column: 5, scope: !5612)
!5713 = !DILocation(line: 77, column: 25, scope: !5612)
!5714 = !DILocation(line: 78, column: 16, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5612, file: !2664, line: 77, column: 32)
!5716 = distinct !{!5716, !5712, !5717}
!5717 = !DILocation(line: 80, column: 5, scope: !5612)
!5718 = !DILocation(line: 82, column: 35, scope: !5612)
!5719 = !DILocation(line: 82, column: 66, scope: !5612)
!5720 = !DILocation(line: 84, column: 18, scope: !5612)
!5721 = !DILocation(line: 85, column: 34, scope: !5612)
!5722 = !DILocation(line: 85, column: 39, scope: !5612)
!5723 = !DILocation(line: 87, column: 12, scope: !5612)
!5724 = !DILocation(line: 87, column: 22, scope: !5612)
!5725 = !DILocation(line: 89, column: 23, scope: !5612)
!5726 = !DILocation(line: 90, column: 27, scope: !5612)
!5727 = !DILocation(line: 90, column: 16, scope: !5612)
!5728 = !DILocation(line: 91, column: 38, scope: !5612)
!5729 = !DILocation(line: 91, column: 24, scope: !5612)
!5730 = !DILocation(line: 91, column: 28, scope: !5612)
!5731 = !DILocation(line: 92, column: 35, scope: !5612)
!5732 = !DILocation(line: 92, column: 41, scope: !5612)
!5733 = !DILocation(line: 92, column: 20, scope: !5612)
!5734 = !DILocation(line: 92, column: 24, scope: !5612)
!5735 = !DILocation(line: 93, column: 16, scope: !5612)
!5736 = !DILocation(line: 95, column: 12, scope: !5612)
!5737 = !DILocation(line: 95, column: 25, scope: !5612)
!5738 = !DILocation(line: 96, column: 12, scope: !5612)
!5739 = !DILocation(line: 96, column: 25, scope: !5612)
!5740 = !DILocation(line: 98, column: 24, scope: !5612)
!5741 = !DILocation(line: 98, column: 22, scope: !5612)
!5742 = !DILocation(line: 99, column: 24, scope: !5612)
!5743 = !DILocation(line: 99, column: 22, scope: !5612)
!5744 = !DILocation(line: 101, column: 25, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5612, file: !2664, line: 101, column: 9)
!5746 = !DILocation(line: 101, column: 9, scope: !5612)
!5747 = !DILocation(line: 102, column: 16, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5745, file: !2664, line: 101, column: 37)
!5749 = !DILocation(line: 102, column: 22, scope: !5748)
!5750 = !DILocation(line: 103, column: 5, scope: !5748)
!5751 = !DILocation(line: 104, column: 1, scope: !5612)
!5752 = distinct !DISubprogram(name: "uart_set_format", scope: !2664, file: !2664, line: 106, type: !5753, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5755)
!5753 = !DISubroutineType(types: !5754)
!5754 = !{null, !5615, !4819, !4821, !4823}
!5755 = !{!5756, !5757, !5758, !5759, !5760}
!5756 = !DILocalVariable(name: "uartx", arg: 1, scope: !5752, file: !2664, line: 106, type: !5615)
!5757 = !DILocalVariable(name: "word_length", arg: 2, scope: !5752, file: !2664, line: 107, type: !4819)
!5758 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5752, file: !2664, line: 108, type: !4821)
!5759 = !DILocalVariable(name: "parity", arg: 4, scope: !5752, file: !2664, line: 109, type: !4823)
!5760 = !DILocalVariable(name: "byte", scope: !5752, file: !2664, line: 111, type: !975)
!5761 = !DILocation(line: 0, scope: !5752)
!5762 = !DILocation(line: 114, column: 19, scope: !5752)
!5763 = !DILocation(line: 115, column: 16, scope: !5752)
!5764 = !DILocation(line: 118, column: 10, scope: !5752)
!5765 = !DILocation(line: 119, column: 5, scope: !5752)
!5766 = !DILocation(line: 124, column: 18, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5752, file: !2664, line: 119, column: 26)
!5768 = !DILocation(line: 125, column: 13, scope: !5767)
!5769 = !DILocation(line: 127, column: 18, scope: !5767)
!5770 = !DILocation(line: 128, column: 13, scope: !5767)
!5771 = !DILocation(line: 130, column: 18, scope: !5767)
!5772 = !DILocation(line: 131, column: 13, scope: !5767)
!5773 = !DILocation(line: 137, column: 10, scope: !5752)
!5774 = !DILocation(line: 138, column: 5, scope: !5752)
!5775 = !DILocation(line: 151, column: 5, scope: !5752)
!5776 = !DILocation(line: 166, column: 18, scope: !5752)
!5777 = !DILocation(line: 166, column: 16, scope: !5752)
!5778 = !DILocation(line: 167, column: 1, scope: !5752)
!5779 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2664, file: !2664, line: 169, type: !5780, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{null, !5615, !460}
!5782 = !{!5783, !5784, !5785}
!5783 = !DILocalVariable(name: "uartx", arg: 1, scope: !5779, file: !2664, line: 169, type: !5615)
!5784 = !DILocalVariable(name: "byte", arg: 2, scope: !5779, file: !2664, line: 169, type: !460)
!5785 = !DILocalVariable(name: "LSR", scope: !5779, file: !2664, line: 171, type: !975)
!5786 = !DILocation(line: 0, scope: !5779)
!5787 = !DILocation(line: 173, column: 5, scope: !5779)
!5788 = !DILocation(line: 174, column: 31, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5779, file: !2664, line: 173, column: 15)
!5790 = !DILocation(line: 175, column: 17, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5789, file: !2664, line: 175, column: 13)
!5792 = !DILocation(line: 175, column: 13, scope: !5789)
!5793 = distinct !{!5793, !5787, !5794}
!5794 = !DILocation(line: 179, column: 5, scope: !5779)
!5795 = !DILocation(line: 176, column: 38, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5791, file: !2664, line: 175, column: 39)
!5797 = !DILocation(line: 176, column: 32, scope: !5796)
!5798 = !DILocation(line: 176, column: 36, scope: !5796)
!5799 = !DILocation(line: 180, column: 1, scope: !5779)
!5800 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2664, file: !2664, line: 182, type: !5801, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5803)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{!460, !5615}
!5803 = !{!5804, !5805, !5806}
!5804 = !DILocalVariable(name: "uartx", arg: 1, scope: !5800, file: !2664, line: 182, type: !5615)
!5805 = !DILocalVariable(name: "LSR", scope: !5800, file: !2664, line: 184, type: !975)
!5806 = !DILocalVariable(name: "byte", scope: !5800, file: !2664, line: 185, type: !460)
!5807 = !DILocation(line: 0, scope: !5800)
!5808 = !DILocation(line: 187, column: 5, scope: !5800)
!5809 = !DILocation(line: 188, column: 31, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5800, file: !2664, line: 187, column: 15)
!5811 = !DILocation(line: 189, column: 17, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5810, file: !2664, line: 189, column: 13)
!5813 = !DILocation(line: 189, column: 13, scope: !5810)
!5814 = distinct !{!5814, !5808, !5815}
!5815 = !DILocation(line: 193, column: 5, scope: !5800)
!5816 = !DILocation(line: 190, column: 48, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5812, file: !2664, line: 189, column: 37)
!5818 = !DILocation(line: 190, column: 20, scope: !5817)
!5819 = !DILocation(line: 195, column: 5, scope: !5800)
!5820 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2664, file: !2664, line: 198, type: !5821, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5823)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!61, !5615}
!5823 = !{!5824, !5825, !5826}
!5824 = !DILocalVariable(name: "uartx", arg: 1, scope: !5820, file: !2664, line: 198, type: !5615)
!5825 = !DILocalVariable(name: "LSR", scope: !5820, file: !2664, line: 200, type: !975)
!5826 = !DILocalVariable(name: "value", scope: !5820, file: !2664, line: 201, type: !61)
!5827 = !DILocation(line: 0, scope: !5820)
!5828 = !DILocation(line: 203, column: 27, scope: !5820)
!5829 = !DILocation(line: 204, column: 13, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5820, file: !2664, line: 204, column: 9)
!5831 = !DILocation(line: 204, column: 9, scope: !5820)
!5832 = !DILocation(line: 205, column: 36, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5830, file: !2664, line: 204, column: 33)
!5834 = !DILocation(line: 206, column: 5, scope: !5833)
!5835 = !DILocation(line: 0, scope: !5830)
!5836 = !DILocation(line: 210, column: 5, scope: !5820)
!5837 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2664, file: !2664, line: 213, type: !5838, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5840)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{null, !5615}
!5840 = !{!5841, !5842, !5843}
!5841 = !DILocalVariable(name: "uartx", arg: 1, scope: !5837, file: !2664, line: 213, type: !5615)
!5842 = !DILocalVariable(name: "EFR", scope: !5837, file: !2664, line: 215, type: !975)
!5843 = !DILocalVariable(name: "LCR", scope: !5837, file: !2664, line: 215, type: !975)
!5844 = !DILocation(line: 0, scope: !5837)
!5845 = !DILocation(line: 217, column: 18, scope: !5837)
!5846 = !DILocation(line: 219, column: 16, scope: !5837)
!5847 = !DILocation(line: 220, column: 30, scope: !5837)
!5848 = !DILocation(line: 222, column: 30, scope: !5837)
!5849 = !DILocation(line: 222, column: 28, scope: !5837)
!5850 = !DILocation(line: 223, column: 12, scope: !5837)
!5851 = !DILocation(line: 223, column: 22, scope: !5837)
!5852 = !DILocation(line: 225, column: 16, scope: !5837)
!5853 = !DILocation(line: 226, column: 21, scope: !5837)
!5854 = !DILocation(line: 226, column: 25, scope: !5837)
!5855 = !DILocation(line: 228, column: 18, scope: !5837)
!5856 = !DILocation(line: 228, column: 16, scope: !5837)
!5857 = !DILocation(line: 229, column: 1, scope: !5837)
!5858 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2664, file: !2664, line: 231, type: !5859, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5861)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{null, !5615, !460, !460, !460}
!5861 = !{!5862, !5863, !5864, !5865, !5866, !5867}
!5862 = !DILocalVariable(name: "uartx", arg: 1, scope: !5858, file: !2664, line: 231, type: !5615)
!5863 = !DILocalVariable(name: "xon", arg: 2, scope: !5858, file: !2664, line: 232, type: !460)
!5864 = !DILocalVariable(name: "xoff", arg: 3, scope: !5858, file: !2664, line: 233, type: !460)
!5865 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5858, file: !2664, line: 234, type: !460)
!5866 = !DILocalVariable(name: "EFR", scope: !5858, file: !2664, line: 236, type: !975)
!5867 = !DILocalVariable(name: "LCR", scope: !5858, file: !2664, line: 236, type: !975)
!5868 = !DILocation(line: 0, scope: !5858)
!5869 = !DILocation(line: 238, column: 18, scope: !5858)
!5870 = !DILocation(line: 240, column: 16, scope: !5858)
!5871 = !DILocation(line: 241, column: 28, scope: !5858)
!5872 = !DILocation(line: 241, column: 21, scope: !5858)
!5873 = !DILocation(line: 241, column: 26, scope: !5858)
!5874 = !DILocation(line: 242, column: 20, scope: !5858)
!5875 = !DILocation(line: 242, column: 12, scope: !5858)
!5876 = !DILocation(line: 242, column: 18, scope: !5858)
!5877 = !DILocation(line: 243, column: 30, scope: !5858)
!5878 = !DILocation(line: 245, column: 30, scope: !5858)
!5879 = !DILocation(line: 245, column: 28, scope: !5858)
!5880 = !DILocation(line: 246, column: 25, scope: !5858)
!5881 = !DILocation(line: 246, column: 12, scope: !5858)
!5882 = !DILocation(line: 246, column: 23, scope: !5858)
!5883 = !DILocation(line: 247, column: 12, scope: !5858)
!5884 = !DILocation(line: 247, column: 22, scope: !5858)
!5885 = !DILocation(line: 249, column: 18, scope: !5858)
!5886 = !DILocation(line: 249, column: 16, scope: !5858)
!5887 = !DILocation(line: 250, column: 1, scope: !5858)
!5888 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2664, file: !2664, line: 252, type: !5838, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5889)
!5889 = !{!5890, !5891}
!5890 = !DILocalVariable(name: "uartx", arg: 1, scope: !5888, file: !2664, line: 252, type: !5615)
!5891 = !DILocalVariable(name: "LCR", scope: !5888, file: !2664, line: 254, type: !975)
!5892 = !DILocation(line: 0, scope: !5888)
!5893 = !DILocation(line: 256, column: 18, scope: !5888)
!5894 = !DILocation(line: 258, column: 16, scope: !5888)
!5895 = !DILocation(line: 259, column: 24, scope: !5888)
!5896 = !DILocation(line: 259, column: 28, scope: !5888)
!5897 = !DILocation(line: 261, column: 16, scope: !5888)
!5898 = !DILocation(line: 262, column: 18, scope: !5888)
!5899 = !DILocation(line: 262, column: 16, scope: !5888)
!5900 = !DILocation(line: 263, column: 1, scope: !5888)
!5901 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2664, file: !2664, line: 265, type: !5838, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5902)
!5902 = !{!5903, !5904, !5905}
!5903 = !DILocalVariable(name: "uartx", arg: 1, scope: !5901, file: !2664, line: 265, type: !5615)
!5904 = !DILocalVariable(name: "EFR", scope: !5901, file: !2664, line: 267, type: !975)
!5905 = !DILocalVariable(name: "LCR", scope: !5901, file: !2664, line: 267, type: !975)
!5906 = !DILocation(line: 0, scope: !5901)
!5907 = !DILocation(line: 269, column: 18, scope: !5901)
!5908 = !DILocation(line: 271, column: 16, scope: !5901)
!5909 = !DILocation(line: 272, column: 30, scope: !5901)
!5910 = !DILocation(line: 274, column: 30, scope: !5901)
!5911 = !DILocation(line: 274, column: 28, scope: !5901)
!5912 = !DILocation(line: 276, column: 16, scope: !5901)
!5913 = !DILocation(line: 277, column: 28, scope: !5901)
!5914 = !DILocation(line: 283, column: 18, scope: !5901)
!5915 = !DILocation(line: 283, column: 16, scope: !5901)
!5916 = !DILocation(line: 284, column: 1, scope: !5901)
!5917 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2664, file: !2664, line: 307, type: !5838, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5918)
!5918 = !{!5919, !5920, !5921}
!5919 = !DILocalVariable(name: "uartx", arg: 1, scope: !5917, file: !2664, line: 307, type: !5615)
!5920 = !DILocalVariable(name: "IER", scope: !5917, file: !2664, line: 309, type: !975)
!5921 = !DILocalVariable(name: "LCR", scope: !5917, file: !2664, line: 309, type: !975)
!5922 = !DILocation(line: 0, scope: !5917)
!5923 = !DILocation(line: 311, column: 18, scope: !5917)
!5924 = !DILocation(line: 313, column: 16, scope: !5917)
!5925 = !DILocation(line: 314, column: 26, scope: !5917)
!5926 = !DILocation(line: 316, column: 26, scope: !5917)
!5927 = !DILocation(line: 316, column: 24, scope: !5917)
!5928 = !DILocation(line: 318, column: 19, scope: !5917)
!5929 = !DILocation(line: 318, column: 16, scope: !5917)
!5930 = !DILocation(line: 319, column: 1, scope: !5917)
!5931 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2664, file: !2664, line: 321, type: !5932, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5934)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{null, !5615, !1092}
!5934 = !{!5935, !5936, !5937}
!5935 = !DILocalVariable(name: "uartx", arg: 1, scope: !5931, file: !2664, line: 321, type: !5615)
!5936 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5931, file: !2664, line: 321, type: !1092)
!5937 = !DILocalVariable(name: "FCR", scope: !5931, file: !2664, line: 323, type: !975)
!5938 = !DILocation(line: 0, scope: !5931)
!5939 = !DILocation(line: 327, column: 9, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5931, file: !2664, line: 327, column: 9)
!5941 = !DILocation(line: 333, column: 24, scope: !5931)
!5942 = !DILocation(line: 333, column: 28, scope: !5931)
!5943 = !DILocation(line: 334, column: 1, scope: !5931)
!5944 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2664, file: !2664, line: 336, type: !5945, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5948)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{!5947, !5615}
!5947 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !730, line: 55, baseType: !786)
!5948 = !{!5949, !5950, !5951, !5952}
!5949 = !DILocalVariable(name: "uartx", arg: 1, scope: !5944, file: !2664, line: 336, type: !5615)
!5950 = !DILocalVariable(name: "IIR", scope: !5944, file: !2664, line: 338, type: !975)
!5951 = !DILocalVariable(name: "LSR", scope: !5944, file: !2664, line: 338, type: !975)
!5952 = !DILocalVariable(name: "type", scope: !5944, file: !2664, line: 339, type: !5947)
!5953 = !DILocation(line: 0, scope: !5944)
!5954 = !DILocation(line: 341, column: 30, scope: !5944)
!5955 = !DILocation(line: 342, column: 13, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5944, file: !2664, line: 342, column: 9)
!5957 = !DILocation(line: 342, column: 9, scope: !5944)
!5958 = !DILocation(line: 346, column: 17, scope: !5944)
!5959 = !DILocation(line: 346, column: 5, scope: !5944)
!5960 = !DILocation(line: 350, column: 13, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5944, file: !2664, line: 346, column: 37)
!5962 = !DILocation(line: 353, column: 35, scope: !5961)
!5963 = !DILocation(line: 354, column: 21, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !2664, line: 354, column: 17)
!5965 = !DILocation(line: 363, column: 13, scope: !5961)
!5966 = !DILocation(line: 369, column: 1, scope: !5944)
!5967 = distinct !DISubprogram(name: "uart_verify_error", scope: !2664, file: !2664, line: 371, type: !5968, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5970)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!1092, !5615}
!5970 = !{!5971, !5972, !5973}
!5971 = !DILocalVariable(name: "uartx", arg: 1, scope: !5967, file: !2664, line: 371, type: !5615)
!5972 = !DILocalVariable(name: "LSR", scope: !5967, file: !2664, line: 373, type: !975)
!5973 = !DILocalVariable(name: "ret", scope: !5967, file: !2664, line: 374, type: !1092)
!5974 = !DILocation(line: 0, scope: !5967)
!5975 = !DILocation(line: 376, column: 27, scope: !5967)
!5976 = !DILocation(line: 377, column: 15, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5967, file: !2664, line: 377, column: 9)
!5978 = !DILocation(line: 377, column: 9, scope: !5967)
!5979 = !DILocation(line: 381, column: 5, scope: !5967)
!5980 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2664, file: !2664, line: 384, type: !5838, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5981)
!5981 = !{!5982, !5983}
!5982 = !DILocalVariable(name: "uartx", arg: 1, scope: !5980, file: !2664, line: 384, type: !5615)
!5983 = !DILocalVariable(name: "DMA_EN", scope: !5980, file: !2664, line: 386, type: !975)
!5984 = !DILocation(line: 0, scope: !5980)
!5985 = !DILocation(line: 388, column: 21, scope: !5980)
!5986 = !DILocation(line: 390, column: 1, scope: !5980)
!5987 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2664, file: !2664, line: 392, type: !5838, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5988)
!5988 = !{!5989}
!5989 = !DILocalVariable(name: "uartx", arg: 1, scope: !5987, file: !2664, line: 392, type: !5615)
!5990 = !DILocation(line: 0, scope: !5987)
!5991 = !DILocation(line: 394, column: 12, scope: !5987)
!5992 = !DILocation(line: 394, column: 16, scope: !5987)
!5993 = !DILocation(line: 395, column: 24, scope: !5987)
!5994 = !DILocation(line: 395, column: 28, scope: !5987)
!5995 = !DILocation(line: 396, column: 21, scope: !5987)
!5996 = !DILocation(line: 396, column: 26, scope: !5987)
!5997 = !DILocation(line: 397, column: 12, scope: !5987)
!5998 = !DILocation(line: 397, column: 18, scope: !5987)
!5999 = !DILocation(line: 399, column: 16, scope: !5987)
!6000 = !DILocation(line: 400, column: 24, scope: !5987)
!6001 = !DILocation(line: 400, column: 28, scope: !5987)
!6002 = !DILocation(line: 401, column: 20, scope: !5987)
!6003 = !DILocation(line: 401, column: 24, scope: !5987)
!6004 = !DILocation(line: 403, column: 16, scope: !5987)
!6005 = !DILocation(line: 404, column: 24, scope: !5987)
!6006 = !DILocation(line: 405, column: 28, scope: !5987)
!6007 = !DILocation(line: 407, column: 16, scope: !5987)
!6008 = !DILocation(line: 408, column: 28, scope: !5987)
!6009 = !DILocation(line: 409, column: 16, scope: !5987)
!6010 = !DILocation(line: 411, column: 25, scope: !5987)
!6011 = !DILocation(line: 412, column: 22, scope: !5987)
!6012 = !DILocation(line: 412, column: 26, scope: !5987)
!6013 = !DILocation(line: 413, column: 12, scope: !5987)
!6014 = !DILocation(line: 413, column: 24, scope: !5987)
!6015 = !DILocation(line: 414, column: 12, scope: !5987)
!6016 = !DILocation(line: 414, column: 22, scope: !5987)
!6017 = !DILocation(line: 415, column: 12, scope: !5987)
!6018 = !DILocation(line: 415, column: 25, scope: !5987)
!6019 = !DILocation(line: 416, column: 12, scope: !5987)
!6020 = !DILocation(line: 416, column: 25, scope: !5987)
!6021 = !DILocation(line: 417, column: 12, scope: !5987)
!6022 = !DILocation(line: 417, column: 23, scope: !5987)
!6023 = !DILocation(line: 418, column: 12, scope: !5987)
!6024 = !DILocation(line: 418, column: 27, scope: !5987)
!6025 = !DILocation(line: 419, column: 12, scope: !5987)
!6026 = !DILocation(line: 419, column: 18, scope: !5987)
!6027 = !DILocation(line: 420, column: 12, scope: !5987)
!6028 = !DILocation(line: 420, column: 23, scope: !5987)
!6029 = !DILocation(line: 421, column: 12, scope: !5987)
!6030 = !DILocation(line: 421, column: 22, scope: !5987)
!6031 = !DILocation(line: 422, column: 12, scope: !5987)
!6032 = !DILocation(line: 422, column: 21, scope: !5987)
!6033 = !DILocation(line: 423, column: 12, scope: !5987)
!6034 = !DILocation(line: 423, column: 19, scope: !5987)
!6035 = !DILocation(line: 424, column: 23, scope: !5987)
!6036 = !DILocation(line: 425, column: 12, scope: !5987)
!6037 = !DILocation(line: 425, column: 22, scope: !5987)
!6038 = !DILocation(line: 426, column: 12, scope: !5987)
!6039 = !DILocation(line: 426, column: 22, scope: !5987)
!6040 = !DILocation(line: 427, column: 1, scope: !5987)
!6041 = distinct !DISubprogram(name: "uart_query_empty", scope: !2664, file: !2664, line: 429, type: !5838, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !6042)
!6042 = !{!6043}
!6043 = !DILocalVariable(name: "uartx", arg: 1, scope: !6041, file: !2664, line: 429, type: !5615)
!6044 = !DILocation(line: 0, scope: !6041)
!6045 = !DILocation(line: 431, column: 5, scope: !6041)
!6046 = !DILocation(line: 431, column: 31, scope: !6041)
!6047 = !DILocation(line: 431, column: 36, scope: !6041)
!6048 = !DILocation(line: 431, column: 12, scope: !6041)
!6049 = distinct !{!6049, !6045, !6050}
!6050 = !DILocation(line: 431, column: 44, scope: !6041)
!6051 = !DILocation(line: 432, column: 1, scope: !6041)
!6052 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !784, file: !784, line: 134, type: !6053, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!4570, !735, !1092}
!6055 = !{!6056, !6057, !6058}
!6056 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6052, file: !784, line: 134, type: !735)
!6057 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6052, file: !784, line: 134, type: !1092)
!6058 = !DILocalVariable(name: "dma_channel", scope: !6052, file: !784, line: 136, type: !4570)
!6059 = !DILocation(line: 0, scope: !6052)
!6060 = !DILocation(line: 138, column: 5, scope: !6052)
!6061 = !DILocation(line: 140, column: 17, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !784, line: 140, column: 17)
!6063 = distinct !DILexicalBlock(scope: !6052, file: !784, line: 138, column: 24)
!6064 = !DILocation(line: 147, column: 17, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6063, file: !784, line: 147, column: 17)
!6066 = !DILocation(line: 154, column: 17, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !784, line: 154, column: 17)
!6068 = !DILocation(line: 161, column: 17, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6063, file: !784, line: 161, column: 17)
!6070 = !DILocation(line: 171, column: 5, scope: !6052)
!6071 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !784, file: !784, line: 174, type: !6072, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6080)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{null, !4570, !6074}
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 32)
!6075 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !6076)
!6076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !6077)
!6077 = !{!6078, !6079}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6076, file: !730, line: 94, baseType: !91, size: 8)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6076, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!6080 = !{!6081, !6082}
!6081 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6071, file: !784, line: 174, type: !4570)
!6082 = !DILocalVariable(name: "user_data", arg: 2, scope: !6071, file: !784, line: 174, type: !6074)
!6083 = !DILocation(line: 0, scope: !6071)
!6084 = !DILocation(line: 176, column: 5, scope: !6071)
!6085 = !DILocation(line: 0, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6071, file: !784, line: 176, column: 26)
!6087 = !DILocation(line: 212, column: 1, scope: !6071)
!6088 = distinct !DISubprogram(name: "uart_enable_dma", scope: !784, file: !784, line: 214, type: !6089, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6091)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{null, !797}
!6091 = !{!6092}
!6092 = !DILocalVariable(name: "uartx", arg: 1, scope: !6088, file: !784, line: 214, type: !797)
!6093 = !DILocation(line: 0, scope: !6088)
!6094 = !DILocation(line: 216, column: 12, scope: !6088)
!6095 = !DILocation(line: 216, column: 19, scope: !6088)
!6096 = !DILocation(line: 217, column: 1, scope: !6088)
!6097 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !784, file: !784, line: 219, type: !1104, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6098)
!6098 = !{!6099, !6100, !6101, !6102}
!6099 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6097, file: !784, line: 219, type: !862)
!6100 = !DILocalVariable(name: "uart_port", scope: !6097, file: !784, line: 221, type: !735)
!6101 = !DILocalVariable(name: "type", scope: !6097, file: !784, line: 222, type: !5947)
!6102 = !DILocalVariable(name: "uartx", scope: !6097, file: !784, line: 223, type: !797)
!6103 = !DILocation(line: 0, scope: !6097)
!6104 = !DILocation(line: 225, column: 5, scope: !6097)
!6105 = !DILocation(line: 242, column: 13, scope: !6097)
!6106 = !DILocation(line: 243, column: 12, scope: !6097)
!6107 = !DILocation(line: 245, column: 5, scope: !6097)
!6108 = !DILocation(line: 248, column: 13, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6097, file: !784, line: 245, column: 19)
!6110 = !DILocation(line: 249, column: 13, scope: !6109)
!6111 = !DILocation(line: 252, column: 13, scope: !6109)
!6112 = !DILocation(line: 253, column: 13, scope: !6109)
!6113 = !DILocation(line: 263, column: 13, scope: !6109)
!6114 = !DILocation(line: 264, column: 13, scope: !6109)
!6115 = !DILocation(line: 276, column: 13, scope: !6109)
!6116 = !DILocation(line: 278, column: 1, scope: !6097)
!6117 = distinct !DISubprogram(name: "hal_spi_master_init", scope: !869, file: !869, line: 184, type: !6118, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6134)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!6120, !952, !6121}
!6120 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_status_t", file: !872, line: 556, baseType: !871)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 32)
!6122 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !872, line: 580, baseType: !6123)
!6123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 574, size: 160, elements: !6124)
!6124 = !{!6125, !6126, !6128, !6130, !6132}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !6123, file: !872, line: 575, baseType: !61, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !6123, file: !872, line: 576, baseType: !6127, size: 32, offset: 32)
!6127 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_slave_port_t", file: !98, line: 594, baseType: !886)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !6123, file: !872, line: 577, baseType: !6129, size: 32, offset: 64)
!6129 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_bit_order_t", file: !98, line: 614, baseType: !891)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6123, file: !872, line: 578, baseType: !6131, size: 32, offset: 96)
!6131 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_clock_polarity_t", file: !98, line: 600, baseType: !895)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6123, file: !872, line: 579, baseType: !6133, size: 32, offset: 128)
!6133 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_clock_phase_t", file: !98, line: 607, baseType: !899)
!6134 = !{!6135, !6136, !6137, !6138}
!6135 = !DILocalVariable(name: "master_port", arg: 1, scope: !6117, file: !869, line: 184, type: !952)
!6136 = !DILocalVariable(name: "spi_config", arg: 2, scope: !6117, file: !869, line: 185, type: !6121)
!6137 = !DILocalVariable(name: "busy_status", scope: !6117, file: !869, line: 187, type: !6120)
!6138 = !DILocalVariable(name: "saved_mask", scope: !6139, file: !869, line: 197, type: !61)
!6139 = distinct !DILexicalBlock(scope: !6117, file: !869, line: 197, column: 5)
!6140 = !DILocation(line: 0, scope: !6117)
!6141 = !DILocation(line: 189, column: 10, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6117, file: !869, line: 189, column: 9)
!6143 = !DILocation(line: 189, column: 9, scope: !6117)
!6144 = !DILocation(line: 192, column: 10, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6117, file: !869, line: 192, column: 9)
!6146 = !DILocation(line: 192, column: 9, scope: !6117)
!6147 = !DILocation(line: 197, column: 5, scope: !6139)
!6148 = !DILocation(line: 0, scope: !6139)
!6149 = !DILocation(line: 197, column: 5, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6139, file: !869, line: 197, column: 5)
!6151 = !DILocation(line: 197, column: 5, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6150, file: !869, line: 197, column: 5)
!6153 = !DILocation(line: 203, column: 30, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6117, file: !869, line: 203, column: 9)
!6155 = !DILocation(line: 203, column: 9, scope: !6154)
!6156 = !DILocation(line: 203, column: 9, scope: !6117)
!6157 = !DILocation(line: 199, column: 9, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !869, line: 198, column: 58)
!6159 = distinct !DILexicalBlock(scope: !6117, file: !869, line: 198, column: 9)
!6160 = !DILocation(line: 200, column: 9, scope: !6158)
!6161 = !DILocation(line: 204, column: 36, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !869, line: 204, column: 13)
!6163 = distinct !DILexicalBlock(scope: !6154, file: !869, line: 203, column: 68)
!6164 = !DILocation(line: 204, column: 33, scope: !6162)
!6165 = !DILocation(line: 204, column: 13, scope: !6163)
!6166 = !DILocation(line: 205, column: 13, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6162, file: !869, line: 204, column: 83)
!6168 = !DILocation(line: 206, column: 13, scope: !6167)
!6169 = !DILocation(line: 211, column: 5, scope: !6117)
!6170 = !DILocation(line: 215, column: 5, scope: !6117)
!6171 = !DILocation(line: 216, column: 1, scope: !6117)
!6172 = distinct !DISubprogram(name: "is_master_port", scope: !869, file: !869, line: 76, type: !6173, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6175)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!91, !952}
!6175 = !{!6176}
!6176 = !DILocalVariable(name: "master_port", arg: 1, scope: !6172, file: !869, line: 76, type: !952)
!6177 = !DILocation(line: 0, scope: !6172)
!6178 = !DILocation(line: 78, column: 25, scope: !6172)
!6179 = !DILocation(line: 78, column: 5, scope: !6172)
!6180 = distinct !DISubprogram(name: "is_master_config", scope: !869, file: !869, line: 81, type: !6181, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6185)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!91, !6183}
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 32)
!6184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6122)
!6185 = !{!6186, !6187}
!6186 = !DILocalVariable(name: "spi_config", arg: 1, scope: !6180, file: !869, line: 81, type: !6183)
!6187 = !DILocalVariable(name: "ret", scope: !6180, file: !869, line: 83, type: !91)
!6188 = !DILocation(line: 0, scope: !6180)
!6189 = !DILocation(line: 85, column: 27, scope: !6180)
!6190 = !DILocation(line: 85, column: 83, scope: !6180)
!6191 = !DILocation(line: 88, column: 27, scope: !6180)
!6192 = !DILocation(line: 91, column: 27, scope: !6180)
!6193 = !DILocation(line: 94, column: 27, scope: !6180)
!6194 = !DILocation(line: 91, column: 9, scope: !6180)
!6195 = !DILocation(line: 94, column: 9, scope: !6180)
!6196 = !DILocation(line: 100, column: 26, scope: !6180)
!6197 = !DILocation(line: 100, column: 9, scope: !6180)
!6198 = !DILocation(line: 102, column: 5, scope: !6180)
!6199 = distinct !DISubprogram(name: "hal_spi_master_set_advanced_config", scope: !869, file: !869, line: 219, type: !6200, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6214)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!6120, !952, !6202}
!6202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6203, size: 32)
!6203 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_advanced_config_t", file: !872, line: 589, baseType: !6204)
!6204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 584, size: 128, elements: !6205)
!6205 = !{!6206, !6208, !6210, !6212}
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !6204, file: !872, line: 585, baseType: !6207, size: 32)
!6207 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_byte_order_t", file: !872, line: 492, baseType: !903)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "chip_polarity", scope: !6204, file: !872, line: 586, baseType: !6209, size: 32, offset: 32)
!6209 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_chip_select_polarity_t", file: !872, line: 499, baseType: !907)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "get_tick", scope: !6204, file: !872, line: 587, baseType: !6211, size: 32, offset: 64)
!6211 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_get_tick_mode_t", file: !872, line: 512, baseType: !911)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "sample_select", scope: !6204, file: !872, line: 588, baseType: !6213, size: 32, offset: 96)
!6213 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_sample_select_t", file: !872, line: 519, baseType: !921)
!6214 = !{!6215, !6216}
!6215 = !DILocalVariable(name: "master_port", arg: 1, scope: !6199, file: !869, line: 219, type: !952)
!6216 = !DILocalVariable(name: "advanced_config", arg: 2, scope: !6199, file: !869, line: 220, type: !6202)
!6217 = !DILocation(line: 0, scope: !6199)
!6218 = !DILocation(line: 222, column: 10, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6199, file: !869, line: 222, column: 9)
!6220 = !DILocation(line: 222, column: 9, scope: !6199)
!6221 = !DILocation(line: 225, column: 10, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6199, file: !869, line: 225, column: 9)
!6223 = !DILocation(line: 225, column: 9, scope: !6199)
!6224 = !DILocation(line: 229, column: 32, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6199, file: !869, line: 229, column: 9)
!6226 = !DILocation(line: 229, column: 29, scope: !6225)
!6227 = !DILocation(line: 229, column: 9, scope: !6199)
!6228 = !DILocation(line: 233, column: 5, scope: !6199)
!6229 = !DILocation(line: 235, column: 5, scope: !6199)
!6230 = !DILocation(line: 236, column: 1, scope: !6199)
!6231 = distinct !DISubprogram(name: "is_master_advanced_config", scope: !869, file: !869, line: 106, type: !6232, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6236)
!6232 = !DISubroutineType(types: !6233)
!6233 = !{!91, !6234}
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6203)
!6236 = !{!6237, !6238}
!6237 = !DILocalVariable(name: "advanced_config", arg: 1, scope: !6231, file: !869, line: 106, type: !6234)
!6238 = !DILocalVariable(name: "ret", scope: !6231, file: !869, line: 108, type: !91)
!6239 = !DILocation(line: 0, scope: !6231)
!6240 = !DILocation(line: 110, column: 32, scope: !6231)
!6241 = !DILocation(line: 113, column: 32, scope: !6231)
!6242 = !DILocation(line: 116, column: 31, scope: !6231)
!6243 = !DILocation(line: 118, column: 32, scope: !6231)
!6244 = !DILocation(line: 113, column: 9, scope: !6231)
!6245 = !DILocation(line: 116, column: 41, scope: !6231)
!6246 = !DILocation(line: 118, column: 9, scope: !6231)
!6247 = !DILocation(line: 121, column: 5, scope: !6231)
!6248 = distinct !DISubprogram(name: "hal_spi_master_deinit", scope: !869, file: !869, line: 239, type: !6249, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6251)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!6120, !952}
!6251 = !{!6252}
!6252 = !DILocalVariable(name: "master_port", arg: 1, scope: !6248, file: !869, line: 239, type: !952)
!6253 = !DILocation(line: 0, scope: !6248)
!6254 = !DILocation(line: 241, column: 10, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6248, file: !869, line: 241, column: 9)
!6256 = !DILocation(line: 241, column: 9, scope: !6248)
!6257 = !DILocation(line: 246, column: 26, scope: !6248)
!6258 = !DILocation(line: 246, column: 5, scope: !6248)
!6259 = !DILocation(line: 249, column: 5, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6248, file: !869, line: 249, column: 5)
!6261 = !DILocation(line: 252, column: 5, scope: !6248)
!6262 = !DILocation(line: 252, column: 34, scope: !6248)
!6263 = !DILocation(line: 254, column: 23, scope: !6248)
!6264 = !DILocation(line: 254, column: 5, scope: !6248)
!6265 = !DILocation(line: 259, column: 5, scope: !6248)
!6266 = !DILocation(line: 260, column: 1, scope: !6248)
!6267 = distinct !DISubprogram(name: "hal_spi_master_register_callback", scope: !869, file: !869, line: 263, type: !6268, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6270)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!6120, !952, !963, !88}
!6270 = !{!6271, !6272, !6273}
!6271 = !DILocalVariable(name: "master_port", arg: 1, scope: !6267, file: !869, line: 263, type: !952)
!6272 = !DILocalVariable(name: "callback", arg: 2, scope: !6267, file: !869, line: 264, type: !963)
!6273 = !DILocalVariable(name: "user_data", arg: 3, scope: !6267, file: !869, line: 265, type: !88)
!6274 = !DILocation(line: 0, scope: !6267)
!6275 = !DILocation(line: 267, column: 10, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6267, file: !869, line: 267, column: 9)
!6277 = !DILocation(line: 267, column: 9, scope: !6267)
!6278 = !DILocation(line: 270, column: 14, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6267, file: !869, line: 270, column: 9)
!6280 = !DILocation(line: 270, column: 9, scope: !6267)
!6281 = !DILocation(line: 274, column: 5, scope: !6267)
!6282 = !DILocation(line: 274, column: 34, scope: !6267)
!6283 = !DILocation(line: 276, column: 5, scope: !6267)
!6284 = !DILocation(line: 276, column: 35, scope: !6267)
!6285 = !DILocation(line: 279, column: 35, scope: !6267)
!6286 = !DILocation(line: 279, column: 5, scope: !6267)
!6287 = !DILocation(line: 280, column: 57, scope: !6267)
!6288 = !DILocation(line: 280, column: 5, scope: !6267)
!6289 = !DILocation(line: 281, column: 5, scope: !6267)
!6290 = !DILocation(line: 283, column: 5, scope: !6267)
!6291 = !DILocation(line: 284, column: 1, scope: !6267)
!6292 = distinct !DISubprogram(name: "hal_spi_master_isr", scope: !869, file: !869, line: 140, type: !1104, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6293)
!6293 = !{!6294, !6295, !6296}
!6294 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6292, file: !869, line: 140, type: !862)
!6295 = !DILocalVariable(name: "spi_port", scope: !6292, file: !869, line: 142, type: !952)
!6296 = !DILocalVariable(name: "i", scope: !6292, file: !869, line: 143, type: !61)
!6297 = !DILocation(line: 0, scope: !6292)
!6298 = !DILocation(line: 144, column: 5, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6292, file: !869, line: 144, column: 5)
!6300 = !DILocation(line: 145, column: 13, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !869, line: 145, column: 13)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !869, line: 144, column: 46)
!6303 = distinct !DILexicalBlock(scope: !6299, file: !869, line: 144, column: 5)
!6304 = !DILocation(line: 145, column: 32, scope: !6301)
!6305 = !DILocation(line: 145, column: 13, scope: !6302)
!6306 = !DILocation(line: 144, column: 42, scope: !6303)
!6307 = !DILocation(line: 144, column: 19, scope: !6303)
!6308 = distinct !{!6308, !6298, !6309}
!6309 = !DILocation(line: 149, column: 5, scope: !6299)
!6310 = !DILocation(line: 151, column: 31, scope: !6292)
!6311 = !DILocation(line: 151, column: 58, scope: !6292)
!6312 = !DILocation(line: 151, column: 5, scope: !6292)
!6313 = !DILocation(line: 152, column: 1, scope: !6292)
!6314 = distinct !DISubprogram(name: "hal_spi_master_send_polling", scope: !869, file: !869, line: 287, type: !6315, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!6120, !952, !762, !61}
!6317 = !{!6318, !6319, !6320, !6321}
!6318 = !DILocalVariable(name: "master_port", arg: 1, scope: !6314, file: !869, line: 287, type: !952)
!6319 = !DILocalVariable(name: "data", arg: 2, scope: !6314, file: !869, line: 288, type: !762)
!6320 = !DILocalVariable(name: "size", arg: 3, scope: !6314, file: !869, line: 289, type: !61)
!6321 = !DILocalVariable(name: "status", scope: !6314, file: !869, line: 291, type: !6120)
!6322 = !DILocation(line: 0, scope: !6314)
!6323 = !DILocation(line: 293, column: 10, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 293, column: 9)
!6325 = !DILocation(line: 293, column: 9, scope: !6314)
!6326 = !DILocation(line: 297, column: 14, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 297, column: 9)
!6328 = !DILocation(line: 297, column: 9, scope: !6314)
!6329 = !DILocation(line: 307, column: 32, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 307, column: 9)
!6331 = !DILocation(line: 307, column: 29, scope: !6330)
!6332 = !DILocation(line: 307, column: 9, scope: !6314)
!6333 = !DILocation(line: 308, column: 9, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6330, file: !869, line: 307, column: 61)
!6335 = !DILocation(line: 309, column: 9, scope: !6334)
!6336 = !DILocation(line: 312, column: 5, scope: !6314)
!6337 = !DILocation(line: 313, column: 5, scope: !6314)
!6338 = !DILocation(line: 314, column: 5, scope: !6314)
!6339 = !DILocation(line: 315, column: 5, scope: !6314)
!6340 = !DILocation(line: 317, column: 14, scope: !6314)
!6341 = !DILocation(line: 318, column: 34, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 318, column: 9)
!6343 = !DILocation(line: 318, column: 9, scope: !6314)
!6344 = !DILocation(line: 324, column: 14, scope: !6314)
!6345 = !DILocation(line: 325, column: 34, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 325, column: 9)
!6347 = !DILocation(line: 325, column: 9, scope: !6314)
!6348 = !DILocation(line: 333, column: 5, scope: !6314)
!6349 = !DILocation(line: 343, column: 5, scope: !6314)
!6350 = !DILocation(line: 344, column: 1, scope: !6314)
!6351 = distinct !DISubprogram(name: "hal_spi_master_send_dma", scope: !869, file: !869, line: 347, type: !6315, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6352)
!6352 = !{!6353, !6354, !6355, !6356}
!6353 = !DILocalVariable(name: "master_port", arg: 1, scope: !6351, file: !869, line: 347, type: !952)
!6354 = !DILocalVariable(name: "data", arg: 2, scope: !6351, file: !869, line: 348, type: !762)
!6355 = !DILocalVariable(name: "size", arg: 3, scope: !6351, file: !869, line: 349, type: !61)
!6356 = !DILocalVariable(name: "status", scope: !6351, file: !869, line: 351, type: !6120)
!6357 = !DILocation(line: 0, scope: !6351)
!6358 = !DILocation(line: 353, column: 10, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 353, column: 9)
!6360 = !DILocation(line: 353, column: 9, scope: !6351)
!6361 = !DILocation(line: 356, column: 14, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 356, column: 9)
!6363 = !DILocation(line: 356, column: 9, scope: !6351)
!6364 = !DILocation(line: 360, column: 10, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 360, column: 9)
!6366 = !DILocation(line: 360, column: 25, scope: !6365)
!6367 = !DILocation(line: 360, column: 30, scope: !6365)
!6368 = !DILocation(line: 360, column: 9, scope: !6351)
!6369 = !DILocation(line: 367, column: 17, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 367, column: 9)
!6371 = !DILocation(line: 367, column: 9, scope: !6351)
!6372 = !DILocation(line: 372, column: 32, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 372, column: 9)
!6374 = !DILocation(line: 372, column: 29, scope: !6373)
!6375 = !DILocation(line: 372, column: 9, scope: !6351)
!6376 = !DILocation(line: 373, column: 9, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6373, file: !869, line: 372, column: 61)
!6378 = !DILocation(line: 374, column: 9, scope: !6377)
!6379 = !DILocation(line: 377, column: 5, scope: !6351)
!6380 = !DILocation(line: 378, column: 5, scope: !6351)
!6381 = !DILocation(line: 379, column: 5, scope: !6351)
!6382 = !DILocation(line: 380, column: 5, scope: !6351)
!6383 = !DILocation(line: 381, column: 14, scope: !6351)
!6384 = !DILocation(line: 382, column: 16, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 382, column: 9)
!6386 = !DILocation(line: 382, column: 9, scope: !6351)
!6387 = !DILocation(line: 393, column: 9, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6385, file: !869, line: 384, column: 12)
!6389 = !DILocation(line: 394, column: 9, scope: !6388)
!6390 = !DILocation(line: 394, column: 38, scope: !6388)
!6391 = !DILocation(line: 397, column: 5, scope: !6351)
!6392 = !DILocation(line: 398, column: 1, scope: !6351)
!6393 = distinct !DISubprogram(name: "hal_spi_master_send_dma_blocking", scope: !869, file: !869, line: 400, type: !6315, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6394)
!6394 = !{!6395, !6396, !6397, !6398}
!6395 = !DILocalVariable(name: "master_port", arg: 1, scope: !6393, file: !869, line: 400, type: !952)
!6396 = !DILocalVariable(name: "data", arg: 2, scope: !6393, file: !869, line: 401, type: !762)
!6397 = !DILocalVariable(name: "size", arg: 3, scope: !6393, file: !869, line: 402, type: !61)
!6398 = !DILocalVariable(name: "status", scope: !6393, file: !869, line: 404, type: !6120)
!6399 = !DILocation(line: 0, scope: !6393)
!6400 = !DILocation(line: 406, column: 10, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6393, file: !869, line: 406, column: 9)
!6402 = !DILocation(line: 406, column: 9, scope: !6393)
!6403 = !DILocation(line: 409, column: 14, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6393, file: !869, line: 409, column: 9)
!6405 = !DILocation(line: 409, column: 9, scope: !6393)
!6406 = !DILocation(line: 413, column: 10, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6393, file: !869, line: 413, column: 9)
!6408 = !DILocation(line: 413, column: 25, scope: !6407)
!6409 = !DILocation(line: 413, column: 30, scope: !6407)
!6410 = !DILocation(line: 413, column: 9, scope: !6393)
!6411 = !DILocation(line: 420, column: 17, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6393, file: !869, line: 420, column: 9)
!6413 = !DILocation(line: 420, column: 9, scope: !6393)
!6414 = !DILocation(line: 425, column: 32, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6393, file: !869, line: 425, column: 9)
!6416 = !DILocation(line: 425, column: 29, scope: !6415)
!6417 = !DILocation(line: 425, column: 9, scope: !6393)
!6418 = !DILocation(line: 426, column: 9, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !869, line: 425, column: 61)
!6420 = !DILocation(line: 427, column: 9, scope: !6419)
!6421 = !DILocation(line: 430, column: 5, scope: !6393)
!6422 = !DILocation(line: 431, column: 5, scope: !6393)
!6423 = !DILocation(line: 432, column: 5, scope: !6393)
!6424 = !DILocation(line: 433, column: 5, scope: !6393)
!6425 = !DILocation(line: 434, column: 14, scope: !6393)
!6426 = !DILocation(line: 435, column: 16, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6393, file: !869, line: 435, column: 9)
!6428 = !DILocation(line: 435, column: 9, scope: !6393)
!6429 = !DILocation(line: 438, column: 9, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6427, file: !869, line: 437, column: 12)
!6431 = !DILocation(line: 441, column: 5, scope: !6393)
!6432 = !DILocation(line: 442, column: 1, scope: !6393)
!6433 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_polling", scope: !869, file: !869, line: 445, type: !6434, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6444)
!6434 = !DISubroutineType(types: !6435)
!6435 = !{!6120, !952, !6436}
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 32)
!6437 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_send_and_receive_config_t", file: !872, line: 616, baseType: !6438)
!6438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 611, size: 128, elements: !6439)
!6439 = !{!6440, !6441, !6442, !6443}
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !6438, file: !872, line: 612, baseType: !762, size: 32)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !6438, file: !872, line: 613, baseType: !61, size: 32, offset: 32)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !6438, file: !872, line: 614, baseType: !762, size: 32, offset: 64)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !6438, file: !872, line: 615, baseType: !61, size: 32, offset: 96)
!6444 = !{!6445, !6446, !6447}
!6445 = !DILocalVariable(name: "master_port", arg: 1, scope: !6433, file: !869, line: 445, type: !952)
!6446 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !6433, file: !869, line: 446, type: !6436)
!6447 = !DILocalVariable(name: "status", scope: !6433, file: !869, line: 448, type: !6120)
!6448 = !DILocation(line: 0, scope: !6433)
!6449 = !DILocation(line: 450, column: 10, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 450, column: 9)
!6451 = !DILocation(line: 450, column: 9, scope: !6433)
!6452 = !DILocation(line: 453, column: 47, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 453, column: 9)
!6454 = !DILocation(line: 453, column: 14, scope: !6453)
!6455 = !DILocation(line: 453, column: 9, scope: !6433)
!6456 = !DILocation(line: 456, column: 47, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 456, column: 9)
!6458 = !DILocation(line: 456, column: 14, scope: !6457)
!6459 = !DILocation(line: 456, column: 9, scope: !6433)
!6460 = !DILocation(line: 459, column: 40, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 459, column: 9)
!6462 = !DILocation(line: 459, column: 62, scope: !6461)
!6463 = !DILocation(line: 463, column: 40, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 463, column: 9)
!6465 = !DILocation(line: 463, column: 59, scope: !6464)
!6466 = !DILocation(line: 469, column: 32, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 469, column: 9)
!6468 = !DILocation(line: 469, column: 29, scope: !6467)
!6469 = !DILocation(line: 469, column: 9, scope: !6433)
!6470 = !DILocation(line: 470, column: 9, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6467, file: !869, line: 469, column: 61)
!6472 = !DILocation(line: 471, column: 9, scope: !6471)
!6473 = !DILocation(line: 474, column: 5, scope: !6433)
!6474 = !DILocation(line: 475, column: 5, scope: !6433)
!6475 = !DILocation(line: 476, column: 5, scope: !6433)
!6476 = !DILocation(line: 477, column: 5, scope: !6433)
!6477 = !DILocation(line: 480, column: 82, scope: !6433)
!6478 = !DILocation(line: 480, column: 14, scope: !6433)
!6479 = !DILocation(line: 481, column: 34, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 481, column: 9)
!6481 = !DILocation(line: 481, column: 9, scope: !6433)
!6482 = !DILocation(line: 487, column: 70, scope: !6433)
!6483 = !DILocation(line: 487, column: 110, scope: !6433)
!6484 = !DILocation(line: 487, column: 14, scope: !6433)
!6485 = !DILocation(line: 488, column: 34, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6433, file: !869, line: 488, column: 9)
!6487 = !DILocation(line: 488, column: 9, scope: !6433)
!6488 = !DILocation(line: 496, column: 5, scope: !6433)
!6489 = !DILocation(line: 498, column: 69, scope: !6433)
!6490 = !DILocation(line: 498, column: 114, scope: !6433)
!6491 = !DILocation(line: 498, column: 14, scope: !6433)
!6492 = !DILocation(line: 507, column: 5, scope: !6433)
!6493 = !DILocation(line: 508, column: 1, scope: !6433)
!6494 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_dma", scope: !869, file: !869, line: 511, type: !6434, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6495)
!6495 = !{!6496, !6497, !6498}
!6496 = !DILocalVariable(name: "master_port", arg: 1, scope: !6494, file: !869, line: 511, type: !952)
!6497 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !6494, file: !869, line: 512, type: !6436)
!6498 = !DILocalVariable(name: "status", scope: !6494, file: !869, line: 514, type: !6120)
!6499 = !DILocation(line: 0, scope: !6494)
!6500 = !DILocation(line: 516, column: 10, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 516, column: 9)
!6502 = !DILocation(line: 516, column: 9, scope: !6494)
!6503 = !DILocation(line: 519, column: 47, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 519, column: 9)
!6505 = !DILocation(line: 519, column: 14, scope: !6504)
!6506 = !DILocation(line: 519, column: 9, scope: !6494)
!6507 = !DILocation(line: 522, column: 47, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 522, column: 9)
!6509 = !DILocation(line: 522, column: 14, scope: !6508)
!6510 = !DILocation(line: 522, column: 9, scope: !6494)
!6511 = !DILocation(line: 526, column: 11, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 526, column: 9)
!6513 = !DILocation(line: 526, column: 67, scope: !6512)
!6514 = !DILocation(line: 526, column: 72, scope: !6512)
!6515 = !DILocation(line: 526, column: 77, scope: !6512)
!6516 = !DILocation(line: 530, column: 39, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 530, column: 9)
!6518 = !DILocation(line: 530, column: 55, scope: !6517)
!6519 = !DILocation(line: 530, column: 9, scope: !6494)
!6520 = !DILocation(line: 533, column: 39, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 533, column: 9)
!6522 = !DILocation(line: 533, column: 52, scope: !6521)
!6523 = !DILocation(line: 533, column: 9, scope: !6494)
!6524 = !DILocation(line: 537, column: 17, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 537, column: 9)
!6526 = !DILocation(line: 537, column: 97, scope: !6525)
!6527 = !DILocation(line: 538, column: 84, scope: !6525)
!6528 = !DILocation(line: 538, column: 44, scope: !6525)
!6529 = !DILocation(line: 538, column: 21, scope: !6525)
!6530 = !DILocation(line: 537, column: 9, scope: !6494)
!6531 = !DILocation(line: 544, column: 32, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 544, column: 9)
!6533 = !DILocation(line: 544, column: 29, scope: !6532)
!6534 = !DILocation(line: 544, column: 9, scope: !6494)
!6535 = !DILocation(line: 545, column: 9, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6532, file: !869, line: 544, column: 61)
!6537 = !DILocation(line: 546, column: 9, scope: !6536)
!6538 = !DILocation(line: 549, column: 70, scope: !6494)
!6539 = !DILocation(line: 549, column: 5, scope: !6494)
!6540 = !DILocation(line: 550, column: 70, scope: !6494)
!6541 = !DILocation(line: 550, column: 5, scope: !6494)
!6542 = !DILocation(line: 551, column: 5, scope: !6494)
!6543 = !DILocation(line: 552, column: 5, scope: !6494)
!6544 = !DILocation(line: 553, column: 5, scope: !6494)
!6545 = !DILocation(line: 554, column: 82, scope: !6494)
!6546 = !DILocation(line: 554, column: 14, scope: !6494)
!6547 = !DILocation(line: 555, column: 16, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6494, file: !869, line: 555, column: 9)
!6549 = !DILocation(line: 555, column: 9, scope: !6494)
!6550 = !DILocation(line: 566, column: 9, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6548, file: !869, line: 557, column: 12)
!6552 = !DILocation(line: 567, column: 9, scope: !6551)
!6553 = !DILocation(line: 567, column: 38, scope: !6551)
!6554 = !DILocation(line: 570, column: 5, scope: !6494)
!6555 = !DILocation(line: 571, column: 1, scope: !6494)
!6556 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_dma_blocking", scope: !869, file: !869, line: 573, type: !6434, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6557)
!6557 = !{!6558, !6559, !6560}
!6558 = !DILocalVariable(name: "master_port", arg: 1, scope: !6556, file: !869, line: 573, type: !952)
!6559 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !6556, file: !869, line: 574, type: !6436)
!6560 = !DILocalVariable(name: "status", scope: !6556, file: !869, line: 576, type: !6120)
!6561 = !DILocation(line: 0, scope: !6556)
!6562 = !DILocation(line: 578, column: 10, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 578, column: 9)
!6564 = !DILocation(line: 578, column: 9, scope: !6556)
!6565 = !DILocation(line: 581, column: 47, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 581, column: 9)
!6567 = !DILocation(line: 581, column: 14, scope: !6566)
!6568 = !DILocation(line: 581, column: 9, scope: !6556)
!6569 = !DILocation(line: 584, column: 47, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 584, column: 9)
!6571 = !DILocation(line: 584, column: 14, scope: !6570)
!6572 = !DILocation(line: 584, column: 9, scope: !6556)
!6573 = !DILocation(line: 588, column: 11, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 588, column: 9)
!6575 = !DILocation(line: 588, column: 67, scope: !6574)
!6576 = !DILocation(line: 588, column: 72, scope: !6574)
!6577 = !DILocation(line: 588, column: 77, scope: !6574)
!6578 = !DILocation(line: 592, column: 39, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 592, column: 9)
!6580 = !DILocation(line: 592, column: 55, scope: !6579)
!6581 = !DILocation(line: 592, column: 9, scope: !6556)
!6582 = !DILocation(line: 595, column: 39, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 595, column: 9)
!6584 = !DILocation(line: 595, column: 52, scope: !6583)
!6585 = !DILocation(line: 595, column: 9, scope: !6556)
!6586 = !DILocation(line: 599, column: 17, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 599, column: 9)
!6588 = !DILocation(line: 599, column: 97, scope: !6587)
!6589 = !DILocation(line: 600, column: 84, scope: !6587)
!6590 = !DILocation(line: 600, column: 44, scope: !6587)
!6591 = !DILocation(line: 600, column: 21, scope: !6587)
!6592 = !DILocation(line: 599, column: 9, scope: !6556)
!6593 = !DILocation(line: 606, column: 32, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 606, column: 9)
!6595 = !DILocation(line: 606, column: 29, scope: !6594)
!6596 = !DILocation(line: 606, column: 9, scope: !6556)
!6597 = !DILocation(line: 607, column: 9, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6594, file: !869, line: 606, column: 61)
!6599 = !DILocation(line: 608, column: 9, scope: !6598)
!6600 = !DILocation(line: 611, column: 70, scope: !6556)
!6601 = !DILocation(line: 611, column: 5, scope: !6556)
!6602 = !DILocation(line: 612, column: 70, scope: !6556)
!6603 = !DILocation(line: 612, column: 5, scope: !6556)
!6604 = !DILocation(line: 613, column: 5, scope: !6556)
!6605 = !DILocation(line: 614, column: 5, scope: !6556)
!6606 = !DILocation(line: 615, column: 5, scope: !6556)
!6607 = !DILocation(line: 616, column: 82, scope: !6556)
!6608 = !DILocation(line: 616, column: 14, scope: !6556)
!6609 = !DILocation(line: 617, column: 16, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6556, file: !869, line: 617, column: 9)
!6611 = !DILocation(line: 617, column: 9, scope: !6556)
!6612 = !DILocation(line: 620, column: 9, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6610, file: !869, line: 619, column: 12)
!6614 = !DILocation(line: 623, column: 5, scope: !6556)
!6615 = !DILocation(line: 624, column: 1, scope: !6556)
!6616 = distinct !DISubprogram(name: "hal_spi_master_get_running_status", scope: !869, file: !869, line: 627, type: !6617, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6621)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{!6120, !952, !6619}
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 32)
!6620 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_running_status_t", file: !872, line: 563, baseType: !925)
!6621 = !{!6622, !6623, !6624}
!6622 = !DILocalVariable(name: "master_port", arg: 1, scope: !6616, file: !869, line: 627, type: !952)
!6623 = !DILocalVariable(name: "running_status", arg: 2, scope: !6616, file: !869, line: 628, type: !6619)
!6624 = !DILocalVariable(name: "status", scope: !6616, file: !869, line: 630, type: !61)
!6625 = !DILocation(line: 0, scope: !6616)
!6626 = !DILocation(line: 631, column: 10, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6616, file: !869, line: 631, column: 9)
!6628 = !DILocation(line: 631, column: 9, scope: !6616)
!6629 = !DILocation(line: 634, column: 14, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6616, file: !869, line: 634, column: 9)
!6631 = !DILocation(line: 634, column: 9, scope: !6616)
!6632 = !DILocation(line: 637, column: 30, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6616, file: !869, line: 637, column: 9)
!6634 = !DILocation(line: 637, column: 9, scope: !6633)
!6635 = !DILocation(line: 637, column: 9, scope: !6616)
!6636 = !DILocation(line: 642, column: 14, scope: !6616)
!6637 = !DILocation(line: 643, column: 16, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6616, file: !869, line: 643, column: 9)
!6639 = !DILocation(line: 0, scope: !6638)
!6640 = !DILocation(line: 649, column: 5, scope: !6616)
!6641 = !DILocation(line: 650, column: 1, scope: !6616)
!6642 = distinct !DISubprogram(name: "hal_spi_master_set_chip_select_timing", scope: !869, file: !869, line: 653, type: !6643, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6651)
!6643 = !DISubroutineType(types: !6644)
!6644 = !{!6120, !952, !6645}
!6645 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_chip_select_timing_t", file: !872, line: 606, baseType: !6646)
!6646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 595, size: 96, elements: !6647)
!6647 = !{!6648, !6649, !6650}
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_setup_count", scope: !6646, file: !872, line: 596, baseType: !61, size: 32)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_hold_count", scope: !6646, file: !872, line: 600, baseType: !61, size: 32, offset: 32)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_idle_count", scope: !6646, file: !872, line: 603, baseType: !61, size: 32, offset: 64)
!6651 = !{!6652, !6653}
!6652 = !DILocalVariable(name: "master_port", arg: 1, scope: !6642, file: !869, line: 653, type: !952)
!6653 = !DILocalVariable(name: "chip_select_timing", arg: 2, scope: !6642, file: !869, line: 654, type: !6645)
!6654 = !DILocation(line: 0, scope: !6642)
!6655 = !DILocation(line: 656, column: 10, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6642, file: !869, line: 656, column: 9)
!6657 = !DILocation(line: 656, column: 9, scope: !6642)
!6658 = !DILocation(line: 659, column: 10, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6642, file: !869, line: 659, column: 9)
!6660 = !DILocation(line: 659, column: 9, scope: !6642)
!6661 = !DILocation(line: 663, column: 32, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6642, file: !869, line: 663, column: 9)
!6663 = !DILocation(line: 663, column: 29, scope: !6662)
!6664 = !DILocation(line: 663, column: 9, scope: !6642)
!6665 = !DILocation(line: 664, column: 9, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6662, file: !869, line: 663, column: 61)
!6667 = !DILocation(line: 665, column: 9, scope: !6666)
!6668 = !DILocation(line: 668, column: 5, scope: !6642)
!6669 = !DILocation(line: 670, column: 5, scope: !6642)
!6670 = !DILocation(line: 671, column: 1, scope: !6642)
!6671 = distinct !DISubprogram(name: "is_master_chip_select_timing", scope: !869, file: !869, line: 126, type: !6672, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6674)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{!91, !6645}
!6674 = !{!6675, !6676}
!6675 = !DILocalVariable(name: "chip_select_timing", arg: 1, scope: !6671, file: !869, line: 126, type: !6645)
!6676 = !DILocalVariable(name: "ret", scope: !6671, file: !869, line: 128, type: !91)
!6677 = !DILocation(line: 0, scope: !6671)
!6678 = !DILocation(line: 132, column: 9, scope: !6671)
!6679 = !DILocation(line: 134, column: 57, scope: !6671)
!6680 = !DILocation(line: 134, column: 9, scope: !6671)
!6681 = !DILocation(line: 136, column: 5, scope: !6671)
!6682 = distinct !DISubprogram(name: "hal_spi_master_set_deassert", scope: !869, file: !869, line: 675, type: !6683, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6686)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{!6120, !952, !6685}
!6685 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_deassert_t", file: !872, line: 528, baseType: !942)
!6686 = !{!6687, !6688}
!6687 = !DILocalVariable(name: "master_port", arg: 1, scope: !6682, file: !869, line: 675, type: !952)
!6688 = !DILocalVariable(name: "deassert", arg: 2, scope: !6682, file: !869, line: 676, type: !6685)
!6689 = !DILocation(line: 0, scope: !6682)
!6690 = !DILocation(line: 678, column: 10, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6682, file: !869, line: 678, column: 9)
!6692 = !DILocation(line: 678, column: 9, scope: !6682)
!6693 = !DILocation(line: 681, column: 59, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6682, file: !869, line: 681, column: 9)
!6695 = !DILocation(line: 686, column: 32, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6682, file: !869, line: 686, column: 9)
!6697 = !DILocation(line: 686, column: 29, scope: !6696)
!6698 = !DILocation(line: 686, column: 9, scope: !6682)
!6699 = !DILocation(line: 687, column: 9, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !869, line: 686, column: 61)
!6701 = !DILocation(line: 688, column: 9, scope: !6700)
!6702 = !DILocation(line: 691, column: 5, scope: !6682)
!6703 = !DILocation(line: 693, column: 5, scope: !6682)
!6704 = !DILocation(line: 694, column: 1, scope: !6682)
!6705 = distinct !DISubprogram(name: "hal_spi_master_set_macro_selection", scope: !869, file: !869, line: 698, type: !6706, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6709)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{!6120, !952, !6708}
!6708 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_macro_select_t", file: !872, line: 538, baseType: !946)
!6709 = !{!6710, !6711}
!6710 = !DILocalVariable(name: "master_port", arg: 1, scope: !6705, file: !869, line: 698, type: !952)
!6711 = !DILocalVariable(name: "macro_select", arg: 2, scope: !6705, file: !869, line: 699, type: !6708)
!6712 = !DILocation(line: 0, scope: !6705)
!6713 = !DILocation(line: 701, column: 10, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6705, file: !869, line: 701, column: 9)
!6715 = !DILocation(line: 701, column: 9, scope: !6705)
!6716 = !DILocation(line: 711, column: 1, scope: !6705)
!6717 = distinct !DISubprogram(name: "spi_isr_handler", scope: !983, file: !983, line: 62, type: !6718, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6720)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{null, !952, !963, !88}
!6720 = !{!6721, !6722, !6723, !6724, !6725}
!6721 = !DILocalVariable(name: "master_port", arg: 1, scope: !6717, file: !983, line: 62, type: !952)
!6722 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6717, file: !983, line: 62, type: !963)
!6723 = !DILocalVariable(name: "user_data", arg: 3, scope: !6717, file: !983, line: 62, type: !88)
!6724 = !DILocalVariable(name: "event", scope: !6717, file: !983, line: 64, type: !967)
!6725 = !DILocalVariable(name: "interrupt_status", scope: !6717, file: !983, line: 65, type: !61)
!6726 = !DILocation(line: 0, scope: !6717)
!6727 = !DILocation(line: 67, column: 24, scope: !6717)
!6728 = !DILocation(line: 67, column: 58, scope: !6717)
!6729 = !DILocation(line: 69, column: 26, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6717, file: !983, line: 69, column: 9)
!6731 = !DILocation(line: 69, column: 9, scope: !6717)
!6732 = !DILocation(line: 82, column: 18, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !983, line: 82, column: 13)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !983, line: 69, column: 53)
!6735 = !DILocation(line: 82, column: 13, scope: !6734)
!6736 = !DILocation(line: 70, column: 17, scope: !6734)
!6737 = !DILocation(line: 70, column: 9, scope: !6734)
!6738 = !DILocation(line: 83, column: 13, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !983, line: 82, column: 36)
!6740 = !DILocation(line: 84, column: 9, scope: !6739)
!6741 = !DILocation(line: 93, column: 33, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6730, file: !983, line: 93, column: 16)
!6743 = !DILocation(line: 93, column: 16, scope: !6730)
!6744 = !DILocation(line: 94, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6742, file: !983, line: 93, column: 59)
!6746 = !DILocation(line: 95, column: 5, scope: !6745)
!6747 = !DILocation(line: 96, column: 1, scope: !6717)
!6748 = distinct !DISubprogram(name: "spi_start_transfer", scope: !983, file: !983, line: 388, type: !6749, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6752)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{null, !952, !6751}
!6751 = !DIDerivedType(tag: DW_TAG_typedef, name: "spi_mode_t", file: !934, line: 50, baseType: !938)
!6752 = !{!6753, !6754, !6755, !6756}
!6753 = !DILocalVariable(name: "master_port", arg: 1, scope: !6748, file: !983, line: 388, type: !952)
!6754 = !DILocalVariable(name: "mode", arg: 2, scope: !6748, file: !983, line: 388, type: !6751)
!6755 = !DILocalVariable(name: "status", scope: !6748, file: !983, line: 390, type: !60)
!6756 = !DILocalVariable(name: "pause_mode_status", scope: !6748, file: !983, line: 391, type: !91)
!6757 = !DILocation(line: 0, scope: !6748)
!6758 = !DILocation(line: 390, column: 5, scope: !6748)
!6759 = !DILocation(line: 390, column: 23, scope: !6748)
!6760 = !DILocation(line: 394, column: 10, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6748, file: !983, line: 394, column: 9)
!6762 = !DILocation(line: 394, column: 44, scope: !6761)
!6763 = !DILocation(line: 394, column: 53, scope: !6761)
!6764 = !DILocation(line: 400, column: 5, scope: !6748)
!6765 = !DILocation(line: 403, column: 47, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6748, file: !983, line: 400, column: 19)
!6767 = !DILocation(line: 403, column: 56, scope: !6766)
!6768 = !DILocation(line: 406, column: 18, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6766, file: !983, line: 406, column: 17)
!6770 = !DILocation(line: 406, column: 45, scope: !6769)
!6771 = !DILocation(line: 406, column: 50, scope: !6769)
!6772 = !DILocation(line: 407, column: 43, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6769, file: !983, line: 406, column: 82)
!6774 = !DILocation(line: 408, column: 60, scope: !6773)
!6775 = !DILocation(line: 409, column: 49, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !983, line: 409, column: 21)
!6777 = !DILocation(line: 409, column: 55, scope: !6776)
!6778 = !DILocation(line: 409, column: 59, scope: !6776)
!6779 = !DILocation(line: 409, column: 97, scope: !6776)
!6780 = !DILocation(line: 409, column: 103, scope: !6776)
!6781 = !DILocation(line: 409, column: 107, scope: !6776)
!6782 = !DILocation(line: 409, column: 136, scope: !6776)
!6783 = !DILocation(line: 409, column: 21, scope: !6773)
!6784 = !DILocation(line: 410, column: 63, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6776, file: !983, line: 409, column: 143)
!6786 = !DILocation(line: 411, column: 17, scope: !6785)
!6787 = !DILocation(line: 412, column: 59, scope: !6773)
!6788 = !DILocation(line: 413, column: 13, scope: !6773)
!6789 = !DILocation(line: 413, column: 25, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6769, file: !983, line: 413, column: 24)
!6791 = !DILocation(line: 413, column: 63, scope: !6790)
!6792 = !DILocation(line: 413, column: 68, scope: !6790)
!6793 = !DILocation(line: 414, column: 139, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6790, file: !983, line: 413, column: 100)
!6795 = !DILocation(line: 414, column: 60, scope: !6794)
!6796 = !DILocation(line: 415, column: 55, scope: !6794)
!6797 = !DILocation(line: 416, column: 21, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6794, file: !983, line: 416, column: 21)
!6799 = !DILocation(line: 416, column: 50, scope: !6798)
!6800 = !DILocation(line: 416, column: 21, scope: !6794)
!6801 = !DILocation(line: 417, column: 63, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !983, line: 416, column: 56)
!6803 = !DILocation(line: 418, column: 17, scope: !6802)
!6804 = !DILocation(line: 419, column: 59, scope: !6794)
!6805 = !DILocation(line: 420, column: 13, scope: !6794)
!6806 = !DILocation(line: 420, column: 26, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6790, file: !983, line: 420, column: 24)
!6808 = !DILocation(line: 420, column: 55, scope: !6807)
!6809 = !DILocation(line: 420, column: 60, scope: !6807)
!6810 = !DILocation(line: 420, column: 65, scope: !6807)
!6811 = !DILocation(line: 420, column: 24, scope: !6790)
!6812 = !DILocation(line: 422, column: 43, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6807, file: !983, line: 420, column: 102)
!6814 = !DILocation(line: 423, column: 60, scope: !6813)
!6815 = !DILocation(line: 424, column: 49, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6813, file: !983, line: 424, column: 21)
!6817 = !DILocation(line: 424, column: 55, scope: !6816)
!6818 = !DILocation(line: 425, column: 63, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6816, file: !983, line: 424, column: 104)
!6820 = !DILocation(line: 426, column: 17, scope: !6819)
!6821 = !DILocation(line: 427, column: 59, scope: !6813)
!6822 = !DILocation(line: 428, column: 13, scope: !6813)
!6823 = !DILocation(line: 428, column: 24, scope: !6807)
!6824 = !DILocation(line: 430, column: 139, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !983, line: 428, column: 113)
!6826 = distinct !DILexicalBlock(scope: !6807, file: !983, line: 428, column: 24)
!6827 = !DILocation(line: 430, column: 60, scope: !6825)
!6828 = !DILocation(line: 431, column: 55, scope: !6825)
!6829 = !DILocation(line: 432, column: 59, scope: !6825)
!6830 = !DILocation(line: 433, column: 13, scope: !6825)
!6831 = !DILocation(line: 433, column: 57, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6826, file: !983, line: 433, column: 24)
!6833 = !DILocation(line: 434, column: 64, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6832, file: !983, line: 433, column: 105)
!6835 = !DILocation(line: 434, column: 92, scope: !6834)
!6836 = !DILocation(line: 434, column: 60, scope: !6834)
!6837 = !DILocation(line: 435, column: 65, scope: !6834)
!6838 = !DILocation(line: 435, column: 99, scope: !6834)
!6839 = !DILocation(line: 435, column: 60, scope: !6834)
!6840 = !DILocation(line: 436, column: 46, scope: !6834)
!6841 = !DILocation(line: 438, column: 59, scope: !6834)
!6842 = !DILocation(line: 440, column: 59, scope: !6834)
!6843 = !DILocation(line: 441, column: 13, scope: !6834)
!6844 = !DILocation(line: 442, column: 64, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6832, file: !983, line: 441, column: 20)
!6846 = !DILocation(line: 442, column: 92, scope: !6845)
!6847 = !DILocation(line: 442, column: 60, scope: !6845)
!6848 = !DILocation(line: 443, column: 65, scope: !6845)
!6849 = !DILocation(line: 443, column: 99, scope: !6845)
!6850 = !DILocation(line: 443, column: 60, scope: !6845)
!6851 = !DILocation(line: 0, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6845, file: !983, line: 444, column: 21)
!6853 = !DILocation(line: 444, column: 21, scope: !6845)
!6854 = !DILocation(line: 445, column: 63, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6852, file: !983, line: 444, column: 48)
!6856 = !DILocation(line: 446, column: 63, scope: !6855)
!6857 = !DILocation(line: 447, column: 17, scope: !6855)
!6858 = !DILocation(line: 449, column: 63, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6852, file: !983, line: 447, column: 24)
!6860 = !DILocation(line: 455, column: 55, scope: !6766)
!6861 = !DILocation(line: 456, column: 13, scope: !6766)
!6862 = !DILocation(line: 457, column: 60, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6766, file: !983, line: 456, column: 16)
!6864 = !DILocation(line: 457, column: 24, scope: !6863)
!6865 = !DILocation(line: 458, column: 23, scope: !6766)
!6866 = !DILocation(line: 458, column: 30, scope: !6766)
!6867 = !DILocation(line: 458, column: 13, scope: !6863)
!6868 = distinct !{!6868, !6861, !6869}
!6869 = !DILocation(line: 458, column: 55, scope: !6766)
!6870 = !DILocation(line: 460, column: 57, scope: !6766)
!6871 = !DILocation(line: 460, column: 20, scope: !6766)
!6872 = !DILocation(line: 461, column: 22, scope: !6766)
!6873 = !DILocation(line: 461, column: 20, scope: !6766)
!6874 = !DILocation(line: 462, column: 13, scope: !6766)
!6875 = !DILocation(line: 464, column: 1, scope: !6748)
!6876 = distinct !DISubprogram(name: "spi_master_init", scope: !983, file: !983, line: 126, type: !6877, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6889)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{null, !952, !6879}
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6880, size: 32)
!6880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6881)
!6881 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !872, line: 580, baseType: !6882)
!6882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 574, size: 160, elements: !6883)
!6883 = !{!6884, !6885, !6886, !6887, !6888}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !6882, file: !872, line: 575, baseType: !61, size: 32)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !6882, file: !872, line: 576, baseType: !6127, size: 32, offset: 32)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !6882, file: !872, line: 577, baseType: !6129, size: 32, offset: 64)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6882, file: !872, line: 578, baseType: !6131, size: 32, offset: 96)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6882, file: !872, line: 579, baseType: !6133, size: 32, offset: 128)
!6889 = !{!6890, !6891, !6892}
!6890 = !DILocalVariable(name: "master_port", arg: 1, scope: !6876, file: !983, line: 126, type: !952)
!6891 = !DILocalVariable(name: "spi_config", arg: 2, scope: !6876, file: !983, line: 126, type: !6879)
!6892 = !DILocalVariable(name: "sck_count", scope: !6876, file: !983, line: 128, type: !61)
!6893 = !DILocation(line: 0, scope: !6876)
!6894 = !DILocation(line: 131, column: 5, scope: !6876)
!6895 = !DILocation(line: 131, column: 39, scope: !6876)
!6896 = !DILocation(line: 131, column: 48, scope: !6876)
!6897 = !DILocation(line: 132, column: 39, scope: !6876)
!6898 = !DILocation(line: 132, column: 48, scope: !6876)
!6899 = !DILocation(line: 133, column: 39, scope: !6876)
!6900 = !DILocation(line: 133, column: 48, scope: !6876)
!6901 = !DILocation(line: 135, column: 56, scope: !6876)
!6902 = !DILocation(line: 135, column: 41, scope: !6876)
!6903 = !DILocation(line: 135, column: 74, scope: !6876)
!6904 = !DILocation(line: 136, column: 62, scope: !6876)
!6905 = !DILocation(line: 136, column: 96, scope: !6876)
!6906 = !DILocation(line: 136, column: 39, scope: !6876)
!6907 = !DILocation(line: 136, column: 48, scope: !6876)
!6908 = !DILocation(line: 138, column: 25, scope: !6876)
!6909 = !DILocation(line: 138, column: 5, scope: !6876)
!6910 = !DILocation(line: 140, column: 56, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6876, file: !983, line: 138, column: 37)
!6912 = !DILocation(line: 141, column: 13, scope: !6911)
!6913 = !DILocation(line: 143, column: 56, scope: !6911)
!6914 = !DILocation(line: 144, column: 13, scope: !6911)
!6915 = !DILocation(line: 0, scope: !6911)
!6916 = !DILocation(line: 149, column: 25, scope: !6876)
!6917 = !DILocation(line: 149, column: 5, scope: !6876)
!6918 = !DILocation(line: 151, column: 55, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6876, file: !983, line: 149, column: 36)
!6920 = !DILocation(line: 152, column: 13, scope: !6919)
!6921 = !DILocation(line: 154, column: 55, scope: !6919)
!6922 = !DILocation(line: 155, column: 13, scope: !6919)
!6923 = !DILocation(line: 0, scope: !6919)
!6924 = !DILocation(line: 158, column: 25, scope: !6876)
!6925 = !DILocation(line: 158, column: 5, scope: !6876)
!6926 = !DILocation(line: 160, column: 55, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6876, file: !983, line: 158, column: 35)
!6928 = !DILocation(line: 161, column: 13, scope: !6927)
!6929 = !DILocation(line: 163, column: 55, scope: !6927)
!6930 = !DILocation(line: 164, column: 13, scope: !6927)
!6931 = !DILocation(line: 0, scope: !6927)
!6932 = !DILocation(line: 167, column: 25, scope: !6876)
!6933 = !DILocation(line: 167, column: 5, scope: !6876)
!6934 = !DILocation(line: 169, column: 55, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6876, file: !983, line: 167, column: 32)
!6936 = !DILocation(line: 170, column: 13, scope: !6935)
!6937 = !DILocation(line: 172, column: 55, scope: !6935)
!6938 = !DILocation(line: 173, column: 13, scope: !6935)
!6939 = !DILocation(line: 0, scope: !6935)
!6940 = !DILocation(line: 177, column: 47, scope: !6876)
!6941 = !DILocation(line: 180, column: 5, scope: !6876)
!6942 = !DILocation(line: 181, column: 1, scope: !6876)
!6943 = distinct !DISubprogram(name: "spi_master_pad_macro_select", scope: !983, file: !983, line: 98, type: !6944, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6946)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{null, !952}
!6946 = !{!6947}
!6947 = !DILocalVariable(name: "master_port", arg: 1, scope: !6943, file: !983, line: 98, type: !952)
!6948 = !DILocation(line: 0, scope: !6943)
!6949 = !DILocation(line: 100, column: 5, scope: !6943)
!6950 = !DILocation(line: 102, column: 47, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !983, line: 102, column: 17)
!6952 = distinct !DILexicalBlock(scope: !6943, file: !983, line: 100, column: 26)
!6953 = !DILocation(line: 102, column: 42, scope: !6951)
!6954 = !DILocation(line: 102, column: 17, scope: !6952)
!6955 = !DILocation(line: 103, column: 69, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6951, file: !983, line: 102, column: 174)
!6957 = !DILocation(line: 104, column: 13, scope: !6956)
!6958 = !DILocation(line: 107, column: 48, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6952, file: !983, line: 107, column: 17)
!6960 = !DILocation(line: 107, column: 43, scope: !6959)
!6961 = !DILocation(line: 107, column: 17, scope: !6952)
!6962 = !DILocation(line: 108, column: 69, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6959, file: !983, line: 107, column: 178)
!6964 = !DILocation(line: 109, column: 13, scope: !6963)
!6965 = !DILocation(line: 112, column: 48, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6952, file: !983, line: 112, column: 17)
!6967 = !DILocation(line: 112, column: 105, scope: !6966)
!6968 = !DILocation(line: 112, column: 43, scope: !6966)
!6969 = !DILocation(line: 112, column: 17, scope: !6952)
!6970 = !DILocation(line: 113, column: 69, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !983, line: 112, column: 178)
!6972 = !DILocation(line: 114, column: 13, scope: !6971)
!6973 = !DILocation(line: 117, column: 48, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6952, file: !983, line: 117, column: 17)
!6975 = !DILocation(line: 117, column: 43, scope: !6974)
!6976 = !DILocation(line: 117, column: 17, scope: !6952)
!6977 = !DILocation(line: 118, column: 69, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6974, file: !983, line: 117, column: 178)
!6979 = !DILocation(line: 119, column: 13, scope: !6978)
!6980 = !DILocation(line: 124, column: 1, scope: !6943)
!6981 = distinct !DISubprogram(name: "spi_master_set_advanced_config", scope: !983, file: !983, line: 184, type: !6982, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6993)
!6982 = !DISubroutineType(types: !6983)
!6983 = !{null, !952, !6984}
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6986)
!6986 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_advanced_config_t", file: !872, line: 589, baseType: !6987)
!6987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 584, size: 128, elements: !6988)
!6988 = !{!6989, !6990, !6991, !6992}
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !6987, file: !872, line: 585, baseType: !6207, size: 32)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "chip_polarity", scope: !6987, file: !872, line: 586, baseType: !6209, size: 32, offset: 32)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "get_tick", scope: !6987, file: !872, line: 587, baseType: !6211, size: 32, offset: 64)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "sample_select", scope: !6987, file: !872, line: 588, baseType: !6213, size: 32, offset: 96)
!6993 = !{!6994, !6995}
!6994 = !DILocalVariable(name: "master_port", arg: 1, scope: !6981, file: !983, line: 184, type: !952)
!6995 = !DILocalVariable(name: "advanced_config", arg: 2, scope: !6981, file: !983, line: 184, type: !6984)
!6996 = !DILocation(line: 0, scope: !6981)
!6997 = !DILocation(line: 186, column: 30, scope: !6981)
!6998 = !DILocation(line: 186, column: 5, scope: !6981)
!6999 = !DILocation(line: 188, column: 13, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6981, file: !983, line: 186, column: 42)
!7001 = !DILocation(line: 188, column: 47, scope: !7000)
!7002 = !DILocation(line: 188, column: 55, scope: !7000)
!7003 = !DILocation(line: 189, column: 13, scope: !7000)
!7004 = !DILocation(line: 191, column: 13, scope: !7000)
!7005 = !DILocation(line: 191, column: 47, scope: !7000)
!7006 = !DILocation(line: 191, column: 55, scope: !7000)
!7007 = !DILocation(line: 192, column: 13, scope: !7000)
!7008 = !DILocation(line: 195, column: 30, scope: !6981)
!7009 = !DILocation(line: 195, column: 5, scope: !6981)
!7010 = !DILocation(line: 205, column: 5, scope: !6981)
!7011 = !DILocation(line: 197, column: 13, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6981, file: !983, line: 195, column: 45)
!7013 = !DILocation(line: 197, column: 47, scope: !7012)
!7014 = !DILocation(line: 197, column: 55, scope: !7012)
!7015 = !DILocation(line: 198, column: 13, scope: !7012)
!7016 = !DILocation(line: 200, column: 13, scope: !7012)
!7017 = !DILocation(line: 200, column: 47, scope: !7012)
!7018 = !DILocation(line: 200, column: 55, scope: !7012)
!7019 = !DILocation(line: 201, column: 13, scope: !7012)
!7020 = !DILocation(line: 205, column: 39, scope: !6981)
!7021 = !DILocation(line: 205, column: 48, scope: !6981)
!7022 = !DILocation(line: 206, column: 80, scope: !6981)
!7023 = !DILocation(line: 206, column: 90, scope: !6981)
!7024 = !DILocation(line: 206, column: 48, scope: !6981)
!7025 = !DILocation(line: 208, column: 30, scope: !6981)
!7026 = !DILocation(line: 208, column: 5, scope: !6981)
!7027 = !DILocation(line: 210, column: 47, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6981, file: !983, line: 208, column: 45)
!7029 = !DILocation(line: 210, column: 55, scope: !7028)
!7030 = !DILocation(line: 211, column: 13, scope: !7028)
!7031 = !DILocation(line: 213, column: 47, scope: !7028)
!7032 = !DILocation(line: 213, column: 55, scope: !7028)
!7033 = !DILocation(line: 214, column: 13, scope: !7028)
!7034 = !DILocation(line: 217, column: 1, scope: !6981)
!7035 = distinct !DISubprogram(name: "spi_get_status", scope: !983, file: !983, line: 220, type: !7036, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7038)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!61, !952}
!7038 = !{!7039, !7040}
!7039 = !DILocalVariable(name: "master_port", arg: 1, scope: !7035, file: !983, line: 220, type: !952)
!7040 = !DILocalVariable(name: "status", scope: !7035, file: !983, line: 222, type: !60)
!7041 = !DILocation(line: 0, scope: !7035)
!7042 = !DILocation(line: 222, column: 5, scope: !7035)
!7043 = !DILocation(line: 222, column: 23, scope: !7035)
!7044 = !DILocation(line: 224, column: 15, scope: !7035)
!7045 = !DILocation(line: 224, column: 49, scope: !7035)
!7046 = !DILocation(line: 224, column: 12, scope: !7035)
!7047 = !DILocation(line: 226, column: 12, scope: !7035)
!7048 = !DILocation(line: 227, column: 1, scope: !7035)
!7049 = !DILocation(line: 226, column: 5, scope: !7035)
!7050 = distinct !DISubprogram(name: "spi_set_rwaddr", scope: !983, file: !983, line: 229, type: !7051, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7053)
!7051 = !DISubroutineType(types: !7052)
!7052 = !{null, !952, !991, !5047}
!7053 = !{!7054, !7055, !7056}
!7054 = !DILocalVariable(name: "master_port", arg: 1, scope: !7050, file: !983, line: 229, type: !952)
!7055 = !DILocalVariable(name: "type", arg: 2, scope: !7050, file: !983, line: 229, type: !991)
!7056 = !DILocalVariable(name: "addr", arg: 3, scope: !7050, file: !983, line: 229, type: !5047)
!7057 = !DILocation(line: 0, scope: !7050)
!7058 = !DILocation(line: 231, column: 5, scope: !7050)
!7059 = !DILocation(line: 233, column: 60, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7050, file: !983, line: 231, column: 19)
!7061 = !DILocation(line: 233, column: 13, scope: !7060)
!7062 = !DILocation(line: 233, column: 47, scope: !7060)
!7063 = !DILocation(line: 233, column: 58, scope: !7060)
!7064 = !DILocation(line: 234, column: 13, scope: !7060)
!7065 = !DILocation(line: 236, column: 60, scope: !7060)
!7066 = !DILocation(line: 236, column: 13, scope: !7060)
!7067 = !DILocation(line: 236, column: 47, scope: !7060)
!7068 = !DILocation(line: 236, column: 58, scope: !7060)
!7069 = !DILocation(line: 237, column: 13, scope: !7060)
!7070 = !DILocation(line: 239, column: 1, scope: !7050)
!7071 = distinct !DISubprogram(name: "spi_push_data", scope: !983, file: !983, line: 241, type: !7072, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7074)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!6120, !952, !5047, !61}
!7074 = !{!7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085}
!7075 = !DILocalVariable(name: "master_port", arg: 1, scope: !7071, file: !983, line: 241, type: !952)
!7076 = !DILocalVariable(name: "data", arg: 2, scope: !7071, file: !983, line: 241, type: !5047)
!7077 = !DILocalVariable(name: "size", arg: 3, scope: !7071, file: !983, line: 241, type: !61)
!7078 = !DILocalVariable(name: "spi_data", scope: !7071, file: !983, line: 243, type: !61)
!7079 = !DILocalVariable(name: "i", scope: !7071, file: !983, line: 244, type: !61)
!7080 = !DILocalVariable(name: "j", scope: !7071, file: !983, line: 245, type: !61)
!7081 = !DILocalVariable(name: "temp_addr", scope: !7071, file: !983, line: 246, type: !5047)
!7082 = !DILocalVariable(name: "temp_data", scope: !7071, file: !983, line: 247, type: !460)
!7083 = !DILocalVariable(name: "quotient", scope: !7071, file: !983, line: 248, type: !61)
!7084 = !DILocalVariable(name: "remainder", scope: !7071, file: !983, line: 249, type: !61)
!7085 = !DILocalVariable(name: "status", scope: !7071, file: !983, line: 250, type: !6120)
!7086 = !DILocation(line: 0, scope: !7071)
!7087 = !DILocation(line: 253, column: 10, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7071, file: !983, line: 253, column: 9)
!7089 = !DILocation(line: 253, column: 44, scope: !7088)
!7090 = !DILocation(line: 253, column: 53, scope: !7088)
!7091 = !DILocation(line: 253, column: 9, scope: !7071)
!7092 = !DILocation(line: 254, column: 9, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7088, file: !983, line: 253, column: 79)
!7094 = !DILocation(line: 255, column: 9, scope: !7093)
!7095 = !DILocation(line: 260, column: 39, scope: !7071)
!7096 = !DILocation(line: 260, column: 48, scope: !7071)
!7097 = !DILocation(line: 261, column: 52, scope: !7071)
!7098 = !DILocation(line: 261, column: 80, scope: !7071)
!7099 = !DILocation(line: 261, column: 48, scope: !7071)
!7100 = !DILocation(line: 262, column: 53, scope: !7071)
!7101 = !DILocation(line: 262, column: 87, scope: !7071)
!7102 = !DILocation(line: 262, column: 48, scope: !7071)
!7103 = !DILocation(line: 265, column: 22, scope: !7071)
!7104 = !DILocation(line: 267, column: 19, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !983, line: 267, column: 5)
!7106 = distinct !DILexicalBlock(scope: !7071, file: !983, line: 267, column: 5)
!7107 = !DILocation(line: 267, column: 5, scope: !7106)
!7108 = !DILocation(line: 264, column: 21, scope: !7071)
!7109 = !DILocation(line: 269, column: 9, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !983, line: 269, column: 9)
!7111 = distinct !DILexicalBlock(scope: !7105, file: !983, line: 267, column: 36)
!7112 = !DILocation(line: 270, column: 26, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !983, line: 269, column: 33)
!7114 = distinct !DILexicalBlock(scope: !7110, file: !983, line: 269, column: 9)
!7115 = !DILocation(line: 271, column: 26, scope: !7113)
!7116 = !DILocation(line: 271, column: 42, scope: !7113)
!7117 = !DILocation(line: 271, column: 36, scope: !7113)
!7118 = !DILocation(line: 271, column: 22, scope: !7113)
!7119 = !DILocation(line: 272, column: 22, scope: !7113)
!7120 = !DILocation(line: 269, column: 29, scope: !7114)
!7121 = !DILocation(line: 269, column: 23, scope: !7114)
!7122 = distinct !{!7122, !7109, !7123}
!7123 = !DILocation(line: 273, column: 9, scope: !7110)
!7124 = !DILocation(line: 274, column: 55, scope: !7111)
!7125 = !DILocation(line: 267, column: 32, scope: !7105)
!7126 = distinct !{!7126, !7107, !7127}
!7127 = !DILocation(line: 275, column: 5, scope: !7106)
!7128 = !DILocation(line: 246, column: 20, scope: !7071)
!7129 = !DILocation(line: 276, column: 19, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7071, file: !983, line: 276, column: 9)
!7131 = !DILocation(line: 276, column: 9, scope: !7071)
!7132 = !DILocation(line: 279, column: 26, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !983, line: 278, column: 33)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !983, line: 278, column: 9)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !983, line: 278, column: 9)
!7136 = distinct !DILexicalBlock(scope: !7130, file: !983, line: 276, column: 24)
!7137 = !DILocation(line: 280, column: 26, scope: !7133)
!7138 = !DILocation(line: 280, column: 42, scope: !7133)
!7139 = !DILocation(line: 280, column: 36, scope: !7133)
!7140 = !DILocation(line: 280, column: 22, scope: !7133)
!7141 = !DILocation(line: 281, column: 22, scope: !7133)
!7142 = !DILocation(line: 278, column: 29, scope: !7134)
!7143 = !DILocation(line: 278, column: 23, scope: !7134)
!7144 = !DILocation(line: 278, column: 9, scope: !7135)
!7145 = distinct !{!7145, !7144, !7146}
!7146 = !DILocation(line: 282, column: 9, scope: !7135)
!7147 = !DILocation(line: 283, column: 9, scope: !7136)
!7148 = !DILocation(line: 285, column: 75, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7136, file: !983, line: 283, column: 28)
!7150 = !DILocation(line: 285, column: 51, scope: !7149)
!7151 = !DILocation(line: 285, column: 63, scope: !7149)
!7152 = !DILocation(line: 286, column: 17, scope: !7149)
!7153 = !DILocation(line: 288, column: 75, scope: !7149)
!7154 = !DILocation(line: 288, column: 51, scope: !7149)
!7155 = !DILocation(line: 288, column: 63, scope: !7149)
!7156 = !DILocation(line: 289, column: 17, scope: !7149)
!7157 = !DILocation(line: 291, column: 75, scope: !7149)
!7158 = !DILocation(line: 291, column: 51, scope: !7149)
!7159 = !DILocation(line: 291, column: 63, scope: !7149)
!7160 = !DILocation(line: 292, column: 17, scope: !7149)
!7161 = !DILocation(line: 296, column: 1, scope: !7071)
!7162 = distinct !DISubprogram(name: "spi_pop_data", scope: !983, file: !983, line: 298, type: !6315, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7163)
!7163 = !{!7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174}
!7164 = !DILocalVariable(name: "master_port", arg: 1, scope: !7162, file: !983, line: 298, type: !952)
!7165 = !DILocalVariable(name: "buffer", arg: 2, scope: !7162, file: !983, line: 298, type: !762)
!7166 = !DILocalVariable(name: "size", arg: 3, scope: !7162, file: !983, line: 298, type: !61)
!7167 = !DILocalVariable(name: "spi_data", scope: !7162, file: !983, line: 300, type: !61)
!7168 = !DILocalVariable(name: "i", scope: !7162, file: !983, line: 301, type: !61)
!7169 = !DILocalVariable(name: "j", scope: !7162, file: !983, line: 302, type: !61)
!7170 = !DILocalVariable(name: "temp_addr", scope: !7162, file: !983, line: 303, type: !762)
!7171 = !DILocalVariable(name: "temp_data", scope: !7162, file: !983, line: 304, type: !460)
!7172 = !DILocalVariable(name: "quotient", scope: !7162, file: !983, line: 305, type: !61)
!7173 = !DILocalVariable(name: "remainder", scope: !7162, file: !983, line: 306, type: !61)
!7174 = !DILocalVariable(name: "status", scope: !7162, file: !983, line: 307, type: !6120)
!7175 = !DILocation(line: 0, scope: !7162)
!7176 = !DILocation(line: 310, column: 10, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7162, file: !983, line: 310, column: 9)
!7178 = !DILocation(line: 310, column: 44, scope: !7177)
!7179 = !DILocation(line: 310, column: 53, scope: !7177)
!7180 = !DILocation(line: 310, column: 9, scope: !7162)
!7181 = !DILocation(line: 311, column: 9, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7177, file: !983, line: 310, column: 79)
!7183 = !DILocation(line: 312, column: 9, scope: !7182)
!7184 = !DILocation(line: 316, column: 22, scope: !7162)
!7185 = !DILocation(line: 318, column: 19, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !983, line: 318, column: 5)
!7187 = distinct !DILexicalBlock(scope: !7162, file: !983, line: 318, column: 5)
!7188 = !DILocation(line: 318, column: 5, scope: !7187)
!7189 = !DILocation(line: 315, column: 21, scope: !7162)
!7190 = !DILocation(line: 319, column: 54, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7186, file: !983, line: 318, column: 36)
!7192 = !DILocation(line: 320, column: 9, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7191, file: !983, line: 320, column: 9)
!7194 = !DILocation(line: 321, column: 50, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !983, line: 320, column: 33)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !983, line: 320, column: 9)
!7197 = !DILocation(line: 321, column: 44, scope: !7195)
!7198 = !DILocation(line: 321, column: 36, scope: !7195)
!7199 = !DILocation(line: 321, column: 57, scope: !7195)
!7200 = !DILocation(line: 321, column: 25, scope: !7195)
!7201 = !DILocation(line: 322, column: 24, scope: !7195)
!7202 = !DILocation(line: 323, column: 22, scope: !7195)
!7203 = !DILocation(line: 320, column: 29, scope: !7196)
!7204 = !DILocation(line: 320, column: 23, scope: !7196)
!7205 = distinct !{!7205, !7192, !7206}
!7206 = !DILocation(line: 324, column: 9, scope: !7193)
!7207 = !DILocation(line: 318, column: 32, scope: !7186)
!7208 = distinct !{!7208, !7188, !7209}
!7209 = !DILocation(line: 325, column: 5, scope: !7187)
!7210 = !DILocation(line: 303, column: 14, scope: !7162)
!7211 = !DILocation(line: 326, column: 19, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7162, file: !983, line: 326, column: 9)
!7213 = !DILocation(line: 326, column: 9, scope: !7162)
!7214 = !DILocation(line: 327, column: 54, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7212, file: !983, line: 326, column: 24)
!7216 = !DILocation(line: 328, column: 9, scope: !7215)
!7217 = !DILocation(line: 330, column: 26, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !983, line: 328, column: 28)
!7219 = !DILocation(line: 331, column: 17, scope: !7218)
!7220 = !DILocation(line: 333, column: 26, scope: !7218)
!7221 = !DILocation(line: 334, column: 17, scope: !7218)
!7222 = !DILocation(line: 336, column: 26, scope: !7218)
!7223 = !DILocation(line: 337, column: 17, scope: !7218)
!7224 = !DILocation(line: 0, scope: !7215)
!7225 = !DILocation(line: 340, column: 9, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7215, file: !983, line: 340, column: 9)
!7227 = !DILocation(line: 341, column: 42, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !983, line: 340, column: 41)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !983, line: 340, column: 9)
!7230 = !DILocation(line: 341, column: 36, scope: !7228)
!7231 = !DILocation(line: 341, column: 26, scope: !7228)
!7232 = !DILocation(line: 341, column: 24, scope: !7228)
!7233 = !DILocation(line: 342, column: 22, scope: !7228)
!7234 = !DILocation(line: 340, column: 37, scope: !7229)
!7235 = !DILocation(line: 340, column: 23, scope: !7229)
!7236 = distinct !{!7236, !7225, !7237}
!7237 = !DILocation(line: 343, column: 9, scope: !7226)
!7238 = !DILocation(line: 346, column: 1, scope: !7162)
!7239 = distinct !DISubprogram(name: "spi_set_interrupt", scope: !983, file: !983, line: 348, type: !7240, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7242)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{null, !952, !91}
!7242 = !{!7243, !7244}
!7243 = !DILocalVariable(name: "master_port", arg: 1, scope: !7239, file: !983, line: 348, type: !952)
!7244 = !DILocalVariable(name: "status", arg: 2, scope: !7239, file: !983, line: 348, type: !91)
!7245 = !DILocation(line: 0, scope: !7239)
!7246 = !DILocation(line: 0, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7239, file: !983, line: 350, column: 21)
!7248 = !DILocation(line: 350, column: 5, scope: !7239)
!7249 = !DILocation(line: 358, column: 1, scope: !7239)
!7250 = distinct !DISubprogram(name: "spi_clear_fifo", scope: !983, file: !983, line: 360, type: !6944, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7251)
!7251 = !{!7252}
!7252 = !DILocalVariable(name: "master_port", arg: 1, scope: !7250, file: !983, line: 360, type: !952)
!7253 = !DILocation(line: 0, scope: !7250)
!7254 = !DILocation(line: 362, column: 5, scope: !7250)
!7255 = !DILocation(line: 362, column: 39, scope: !7250)
!7256 = !DILocation(line: 362, column: 47, scope: !7250)
!7257 = !DILocation(line: 363, column: 47, scope: !7250)
!7258 = !DILocation(line: 364, column: 1, scope: !7250)
!7259 = distinct !DISubprogram(name: "spi_set_mode", scope: !983, file: !983, line: 366, type: !7260, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7262)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !952, !991, !6751}
!7262 = !{!7263, !7264, !7265}
!7263 = !DILocalVariable(name: "master_port", arg: 1, scope: !7259, file: !983, line: 366, type: !952)
!7264 = !DILocalVariable(name: "type", arg: 2, scope: !7259, file: !983, line: 366, type: !991)
!7265 = !DILocalVariable(name: "mode", arg: 3, scope: !7259, file: !983, line: 366, type: !6751)
!7266 = !DILocation(line: 0, scope: !7259)
!7267 = !DILocation(line: 368, column: 16, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7259, file: !983, line: 368, column: 9)
!7269 = !DILocation(line: 368, column: 9, scope: !7259)
!7270 = !DILocation(line: 369, column: 9, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7268, file: !983, line: 368, column: 25)
!7272 = !DILocation(line: 371, column: 17, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7271, file: !983, line: 369, column: 23)
!7274 = !DILocation(line: 371, column: 51, scope: !7273)
!7275 = !DILocation(line: 371, column: 59, scope: !7273)
!7276 = !DILocation(line: 372, column: 17, scope: !7273)
!7277 = !DILocation(line: 374, column: 17, scope: !7273)
!7278 = !DILocation(line: 374, column: 51, scope: !7273)
!7279 = !DILocation(line: 374, column: 59, scope: !7273)
!7280 = !DILocation(line: 375, column: 9, scope: !7273)
!7281 = !DILocation(line: 377, column: 9, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7268, file: !983, line: 376, column: 12)
!7283 = !DILocation(line: 379, column: 17, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7282, file: !983, line: 377, column: 23)
!7285 = !DILocation(line: 379, column: 51, scope: !7284)
!7286 = !DILocation(line: 379, column: 59, scope: !7284)
!7287 = !DILocation(line: 380, column: 17, scope: !7284)
!7288 = !DILocation(line: 382, column: 17, scope: !7284)
!7289 = !DILocation(line: 382, column: 51, scope: !7284)
!7290 = !DILocation(line: 382, column: 59, scope: !7284)
!7291 = !DILocation(line: 383, column: 9, scope: !7284)
!7292 = !DILocation(line: 385, column: 1, scope: !7259)
!7293 = distinct !DISubprogram(name: "spi_start_transfer_dma_blocking", scope: !983, file: !983, line: 466, type: !6944, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7294)
!7294 = !{!7295, !7296, !7297}
!7295 = !DILocalVariable(name: "master_port", arg: 1, scope: !7293, file: !983, line: 466, type: !952)
!7296 = !DILocalVariable(name: "pause_mode_status", scope: !7293, file: !983, line: 468, type: !91)
!7297 = !DILocalVariable(name: "irq_status", scope: !7293, file: !983, line: 469, type: !61)
!7298 = !DILocation(line: 0, scope: !7293)
!7299 = !DILocation(line: 533, column: 98, scope: !7293)
!7300 = !DILocation(line: 471, column: 5, scope: !7293)
!7301 = !DILocation(line: 473, column: 48, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !983, line: 473, column: 13)
!7303 = distinct !DILexicalBlock(scope: !7293, file: !983, line: 471, column: 8)
!7304 = !DILocation(line: 473, column: 57, scope: !7302)
!7305 = !DILocation(line: 480, column: 52, scope: !7303)
!7306 = !DILocation(line: 483, column: 14, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7303, file: !983, line: 483, column: 13)
!7308 = !DILocation(line: 483, column: 41, scope: !7307)
!7309 = !DILocation(line: 483, column: 46, scope: !7307)
!7310 = !DILocation(line: 484, column: 39, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !983, line: 483, column: 78)
!7312 = !DILocation(line: 485, column: 56, scope: !7311)
!7313 = !DILocation(line: 486, column: 45, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7311, file: !983, line: 486, column: 17)
!7315 = !DILocation(line: 486, column: 51, scope: !7314)
!7316 = !DILocation(line: 486, column: 55, scope: !7314)
!7317 = !DILocation(line: 486, column: 93, scope: !7314)
!7318 = !DILocation(line: 486, column: 99, scope: !7314)
!7319 = !DILocation(line: 486, column: 103, scope: !7314)
!7320 = !DILocation(line: 486, column: 132, scope: !7314)
!7321 = !DILocation(line: 486, column: 17, scope: !7311)
!7322 = !DILocation(line: 487, column: 59, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7314, file: !983, line: 486, column: 139)
!7324 = !DILocation(line: 488, column: 13, scope: !7323)
!7325 = !DILocation(line: 489, column: 55, scope: !7311)
!7326 = !DILocation(line: 490, column: 9, scope: !7311)
!7327 = !DILocation(line: 490, column: 21, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7307, file: !983, line: 490, column: 20)
!7329 = !DILocation(line: 490, column: 59, scope: !7328)
!7330 = !DILocation(line: 490, column: 64, scope: !7328)
!7331 = !DILocation(line: 491, column: 135, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7328, file: !983, line: 490, column: 96)
!7333 = !DILocation(line: 491, column: 56, scope: !7332)
!7334 = !DILocation(line: 492, column: 51, scope: !7332)
!7335 = !DILocation(line: 493, column: 17, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !983, line: 493, column: 17)
!7337 = !DILocation(line: 493, column: 46, scope: !7336)
!7338 = !DILocation(line: 493, column: 17, scope: !7332)
!7339 = !DILocation(line: 494, column: 59, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7336, file: !983, line: 493, column: 52)
!7341 = !DILocation(line: 495, column: 13, scope: !7340)
!7342 = !DILocation(line: 496, column: 55, scope: !7332)
!7343 = !DILocation(line: 497, column: 9, scope: !7332)
!7344 = !DILocation(line: 497, column: 22, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7328, file: !983, line: 497, column: 20)
!7346 = !DILocation(line: 497, column: 51, scope: !7345)
!7347 = !DILocation(line: 497, column: 56, scope: !7345)
!7348 = !DILocation(line: 497, column: 61, scope: !7345)
!7349 = !DILocation(line: 497, column: 20, scope: !7328)
!7350 = !DILocation(line: 499, column: 39, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7345, file: !983, line: 497, column: 98)
!7352 = !DILocation(line: 500, column: 56, scope: !7351)
!7353 = !DILocation(line: 501, column: 45, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7351, file: !983, line: 501, column: 17)
!7355 = !DILocation(line: 501, column: 51, scope: !7354)
!7356 = !DILocation(line: 502, column: 59, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7354, file: !983, line: 501, column: 100)
!7358 = !DILocation(line: 503, column: 13, scope: !7357)
!7359 = !DILocation(line: 504, column: 55, scope: !7351)
!7360 = !DILocation(line: 505, column: 9, scope: !7351)
!7361 = !DILocation(line: 505, column: 20, scope: !7345)
!7362 = !DILocation(line: 507, column: 135, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !983, line: 505, column: 109)
!7364 = distinct !DILexicalBlock(scope: !7345, file: !983, line: 505, column: 20)
!7365 = !DILocation(line: 507, column: 56, scope: !7363)
!7366 = !DILocation(line: 508, column: 51, scope: !7363)
!7367 = !DILocation(line: 509, column: 55, scope: !7363)
!7368 = !DILocation(line: 510, column: 9, scope: !7363)
!7369 = !DILocation(line: 510, column: 53, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7364, file: !983, line: 510, column: 20)
!7371 = !DILocation(line: 511, column: 60, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7370, file: !983, line: 510, column: 101)
!7373 = !DILocation(line: 511, column: 88, scope: !7372)
!7374 = !DILocation(line: 511, column: 56, scope: !7372)
!7375 = !DILocation(line: 512, column: 61, scope: !7372)
!7376 = !DILocation(line: 512, column: 95, scope: !7372)
!7377 = !DILocation(line: 512, column: 56, scope: !7372)
!7378 = !DILocation(line: 513, column: 42, scope: !7372)
!7379 = !DILocation(line: 515, column: 55, scope: !7372)
!7380 = !DILocation(line: 516, column: 55, scope: !7372)
!7381 = !DILocation(line: 517, column: 9, scope: !7372)
!7382 = !DILocation(line: 518, column: 60, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7370, file: !983, line: 517, column: 16)
!7384 = !DILocation(line: 518, column: 88, scope: !7383)
!7385 = !DILocation(line: 518, column: 56, scope: !7383)
!7386 = !DILocation(line: 519, column: 61, scope: !7383)
!7387 = !DILocation(line: 519, column: 95, scope: !7383)
!7388 = !DILocation(line: 519, column: 56, scope: !7383)
!7389 = !DILocation(line: 0, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7383, file: !983, line: 520, column: 17)
!7391 = !DILocation(line: 520, column: 17, scope: !7383)
!7392 = !DILocation(line: 521, column: 59, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7390, file: !983, line: 520, column: 44)
!7394 = !DILocation(line: 522, column: 59, scope: !7393)
!7395 = !DILocation(line: 523, column: 13, scope: !7393)
!7396 = !DILocation(line: 525, column: 59, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7390, file: !983, line: 523, column: 20)
!7398 = !DILocation(line: 527, column: 42, scope: !7383)
!7399 = !DILocation(line: 529, column: 9, scope: !7303)
!7400 = !DILocation(line: 529, column: 51, scope: !7303)
!7401 = !DILocation(line: 529, column: 64, scope: !7303)
!7402 = distinct !{!7402, !7399, !7403}
!7403 = !DILocation(line: 529, column: 89, scope: !7303)
!7404 = !DILocation(line: 531, column: 60, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7303, file: !983, line: 530, column: 12)
!7406 = !DILocation(line: 532, column: 58, scope: !7303)
!7407 = !DILocation(line: 532, column: 9, scope: !7405)
!7408 = distinct !{!7408, !7409, !7410}
!7409 = !DILocation(line: 530, column: 9, scope: !7303)
!7410 = !DILocation(line: 532, column: 99, scope: !7303)
!7411 = !DILocation(line: 533, column: 42, scope: !7293)
!7412 = !DILocation(line: 533, column: 47, scope: !7293)
!7413 = !DILocation(line: 533, column: 51, scope: !7293)
!7414 = !DILocation(line: 533, column: 89, scope: !7293)
!7415 = !DILocation(line: 533, column: 94, scope: !7293)
!7416 = !DILocation(line: 533, column: 127, scope: !7293)
!7417 = !DILocation(line: 533, column: 5, scope: !7303)
!7418 = distinct !{!7418, !7300, !7419}
!7419 = !DILocation(line: 533, column: 131, scope: !7293)
!7420 = !DILocation(line: 534, column: 1, scope: !7293)
!7421 = distinct !DISubprogram(name: "spi_analyse_transfer_size", scope: !983, file: !983, line: 536, type: !7422, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7424)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{!6120, !952, !61}
!7424 = !{!7425, !7426, !7427, !7428}
!7425 = !DILocalVariable(name: "master_port", arg: 1, scope: !7421, file: !983, line: 536, type: !952)
!7426 = !DILocalVariable(name: "size", arg: 2, scope: !7421, file: !983, line: 536, type: !61)
!7427 = !DILocalVariable(name: "status", scope: !7421, file: !983, line: 538, type: !6120)
!7428 = !DILocalVariable(name: "temp_size", scope: !7421, file: !983, line: 539, type: !61)
!7429 = !DILocation(line: 0, scope: !7421)
!7430 = !DILocation(line: 541, column: 19, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7421, file: !983, line: 541, column: 9)
!7432 = !DILocation(line: 541, column: 9, scope: !7421)
!7433 = !DILocation(line: 543, column: 49, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7431, file: !983, line: 541, column: 49)
!7435 = !DILocation(line: 543, column: 9, scope: !7434)
!7436 = !DILocation(line: 543, column: 36, scope: !7434)
!7437 = !DILocation(line: 545, column: 14, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7434, file: !983, line: 545, column: 13)
!7439 = !DILocation(line: 545, column: 48, scope: !7438)
!7440 = !DILocation(line: 545, column: 56, scope: !7438)
!7441 = !DILocation(line: 545, column: 87, scope: !7438)
!7442 = !DILocation(line: 545, column: 13, scope: !7434)
!7443 = !DILocation(line: 546, column: 13, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7438, file: !983, line: 545, column: 119)
!7445 = !DILocation(line: 547, column: 13, scope: !7444)
!7446 = !DILocation(line: 549, column: 32, scope: !7434)
!7447 = !DILocation(line: 550, column: 23, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7434, file: !983, line: 550, column: 13)
!7449 = !DILocation(line: 550, column: 13, scope: !7434)
!7450 = !DILocation(line: 551, column: 40, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7448, file: !983, line: 550, column: 29)
!7452 = !DILocation(line: 558, column: 13, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !983, line: 556, column: 44)
!7454 = distinct !DILexicalBlock(scope: !7421, file: !983, line: 556, column: 9)
!7455 = !DILocation(line: 556, column: 19, scope: !7454)
!7456 = !DILocation(line: 556, column: 9, scope: !7421)
!7457 = !DILocation(line: 558, column: 24, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7453, file: !983, line: 558, column: 13)
!7459 = !DILocation(line: 558, column: 49, scope: !7458)
!7460 = !DILocation(line: 559, column: 64, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !983, line: 558, column: 54)
!7462 = !DILocation(line: 559, column: 13, scope: !7461)
!7463 = !DILocation(line: 559, column: 51, scope: !7461)
!7464 = !DILocation(line: 560, column: 13, scope: !7461)
!7465 = !DILocation(line: 560, column: 41, scope: !7461)
!7466 = !DILocation(line: 561, column: 44, scope: !7461)
!7467 = !DILocation(line: 561, column: 13, scope: !7461)
!7468 = !DILocation(line: 561, column: 42, scope: !7461)
!7469 = !DILocation(line: 562, column: 9, scope: !7461)
!7470 = !DILocation(line: 563, column: 55, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7458, file: !983, line: 562, column: 16)
!7472 = !DILocation(line: 563, column: 43, scope: !7471)
!7473 = !DILocation(line: 563, column: 13, scope: !7471)
!7474 = !DILocation(line: 563, column: 41, scope: !7471)
!7475 = !DILocation(line: 564, column: 13, scope: !7471)
!7476 = !DILocation(line: 564, column: 42, scope: !7471)
!7477 = !DILocation(line: 566, column: 26, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7454, file: !983, line: 566, column: 16)
!7479 = !DILocation(line: 566, column: 16, scope: !7454)
!7480 = !DILocation(line: 567, column: 9, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7478, file: !983, line: 566, column: 31)
!7482 = !DILocation(line: 567, column: 37, scope: !7481)
!7483 = !DILocation(line: 568, column: 40, scope: !7481)
!7484 = !DILocation(line: 568, column: 9, scope: !7481)
!7485 = !DILocation(line: 568, column: 38, scope: !7481)
!7486 = !DILocation(line: 574, column: 1, scope: !7421)
!7487 = distinct !DISubprogram(name: "spi_master_set_chip_select_timing", scope: !983, file: !983, line: 577, type: !7488, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7496)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{null, !952, !7490}
!7490 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_chip_select_timing_t", file: !872, line: 606, baseType: !7491)
!7491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 595, size: 96, elements: !7492)
!7492 = !{!7493, !7494, !7495}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_setup_count", scope: !7491, file: !872, line: 596, baseType: !61, size: 32)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_hold_count", scope: !7491, file: !872, line: 600, baseType: !61, size: 32, offset: 32)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_idle_count", scope: !7491, file: !872, line: 603, baseType: !61, size: 32, offset: 64)
!7496 = !{!7497, !7498}
!7497 = !DILocalVariable(name: "master_port", arg: 1, scope: !7487, file: !983, line: 577, type: !952)
!7498 = !DILocalVariable(name: "chip_select_timing", arg: 2, scope: !7487, file: !983, line: 577, type: !7490)
!7499 = !DILocation(line: 0, scope: !7487)
!7500 = !DILocation(line: 580, column: 5, scope: !7487)
!7501 = !DILocation(line: 580, column: 39, scope: !7487)
!7502 = !DILocation(line: 580, column: 48, scope: !7487)
!7503 = !DILocation(line: 581, column: 95, scope: !7487)
!7504 = !DILocation(line: 581, column: 48, scope: !7487)
!7505 = !DILocation(line: 582, column: 48, scope: !7487)
!7506 = !DILocation(line: 585, column: 39, scope: !7487)
!7507 = !DILocation(line: 585, column: 48, scope: !7487)
!7508 = !DILocation(line: 586, column: 48, scope: !7487)
!7509 = !DILocation(line: 587, column: 1, scope: !7487)
!7510 = distinct !DISubprogram(name: "spi_master_set_deassert", scope: !983, file: !983, line: 591, type: !7511, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7513)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{null, !952, !6685}
!7513 = !{!7514, !7515}
!7514 = !DILocalVariable(name: "master_port", arg: 1, scope: !7510, file: !983, line: 591, type: !952)
!7515 = !DILocalVariable(name: "deassert", arg: 2, scope: !7510, file: !983, line: 591, type: !6685)
!7516 = !DILocation(line: 0, scope: !7510)
!7517 = !DILocation(line: 593, column: 5, scope: !7510)
!7518 = !DILocation(line: 595, column: 13, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7510, file: !983, line: 593, column: 23)
!7520 = !DILocation(line: 595, column: 47, scope: !7519)
!7521 = !DILocation(line: 595, column: 55, scope: !7519)
!7522 = !DILocation(line: 596, column: 13, scope: !7519)
!7523 = !DILocation(line: 598, column: 13, scope: !7519)
!7524 = !DILocation(line: 598, column: 47, scope: !7519)
!7525 = !DILocation(line: 598, column: 55, scope: !7519)
!7526 = !DILocation(line: 599, column: 13, scope: !7519)
!7527 = !DILocation(line: 601, column: 1, scope: !7510)
!7528 = !DILocation(line: 131, column: 9, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !1021, file: !1022, line: 131, column: 9)
!7530 = !DILocation(line: 131, column: 9, scope: !1021)
!7531 = !DILocation(line: 0, scope: !1021)
!7532 = !DILocation(line: 134, column: 49, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !1022, line: 133, column: 46)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !1022, line: 133, column: 9)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !1022, line: 133, column: 9)
!7536 = distinct !DILexicalBlock(scope: !7529, file: !1022, line: 131, column: 28)
!7537 = !DILocation(line: 134, column: 13, scope: !7533)
!7538 = !DILocation(line: 133, column: 42, scope: !7534)
!7539 = !DILocation(line: 133, column: 23, scope: !7534)
!7540 = !DILocation(line: 133, column: 9, scope: !7535)
!7541 = distinct !{!7541, !7540, !7542}
!7542 = !DILocation(line: 135, column: 9, scope: !7535)
!7543 = !DILocation(line: 136, column: 22, scope: !7536)
!7544 = !DILocation(line: 137, column: 5, scope: !7536)
!7545 = !DILocation(line: 138, column: 5, scope: !1021)
!7546 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1031, file: !1031, line: 1577, type: !7547, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7549)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{null, !863, !61}
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7546, file: !1031, line: 1577, type: !863)
!7551 = !DILocalVariable(name: "priority", arg: 2, scope: !7546, file: !1031, line: 1577, type: !61)
!7552 = !DILocation(line: 0, scope: !7546)
!7553 = !DILocation(line: 1582, column: 34, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !1031, line: 1581, column: 8)
!7555 = distinct !DILexicalBlock(scope: !7546, file: !1031, line: 1579, column: 6)
!7556 = !DILocation(line: 1582, column: 5, scope: !7554)
!7557 = !DILocation(line: 1582, column: 32, scope: !7554)
!7558 = !DILocation(line: 1583, column: 1, scope: !7546)
!7559 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1022, file: !1022, line: 141, type: !7560, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7562)
!7560 = !DISubroutineType(types: !7561)
!7561 = !{!1025, !862}
!7562 = !{!7563, !7564}
!7563 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7559, file: !1022, line: 141, type: !862)
!7564 = !DILocalVariable(name: "status", scope: !7559, file: !1022, line: 143, type: !1025)
!7565 = !DILocation(line: 0, scope: !7559)
!7566 = !DILocation(line: 145, column: 40, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7559, file: !1022, line: 145, column: 9)
!7568 = !DILocation(line: 149, column: 9, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7567, file: !1022, line: 148, column: 12)
!7570 = !DILocation(line: 153, column: 5, scope: !7559)
!7571 = !DILocation(line: 154, column: 1, scope: !7559)
!7572 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1031, file: !1031, line: 1494, type: !7573, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7575)
!7573 = !DISubroutineType(types: !7574)
!7574 = !{null, !863}
!7575 = !{!7576}
!7576 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7572, file: !1031, line: 1494, type: !863)
!7577 = !DILocation(line: 0, scope: !7572)
!7578 = !DILocation(line: 1497, column: 91, scope: !7572)
!7579 = !DILocation(line: 1497, column: 61, scope: !7572)
!7580 = !DILocation(line: 1497, column: 40, scope: !7572)
!7581 = !DILocation(line: 1497, column: 3, scope: !7572)
!7582 = !DILocation(line: 1497, column: 46, scope: !7572)
!7583 = !DILocation(line: 1498, column: 1, scope: !7572)
!7584 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1022, file: !1022, line: 156, type: !7560, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7585)
!7585 = !{!7586, !7587}
!7586 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7584, file: !1022, line: 156, type: !862)
!7587 = !DILocalVariable(name: "status", scope: !7584, file: !1022, line: 158, type: !1025)
!7588 = !DILocation(line: 0, scope: !7584)
!7589 = !DILocation(line: 160, column: 40, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7584, file: !1022, line: 160, column: 9)
!7591 = !DILocation(line: 164, column: 9, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7590, file: !1022, line: 163, column: 12)
!7593 = !DILocation(line: 168, column: 5, scope: !7584)
!7594 = !DILocation(line: 169, column: 1, scope: !7584)
!7595 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1031, file: !1031, line: 1507, type: !7573, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7596)
!7596 = !{!7597}
!7597 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7595, file: !1031, line: 1507, type: !863)
!7598 = !DILocation(line: 0, scope: !7595)
!7599 = !DILocation(line: 1509, column: 65, scope: !7595)
!7600 = !DILocation(line: 1509, column: 44, scope: !7595)
!7601 = !DILocation(line: 1509, column: 32, scope: !7595)
!7602 = !DILocation(line: 1509, column: 3, scope: !7595)
!7603 = !DILocation(line: 1509, column: 39, scope: !7595)
!7604 = !DILocation(line: 1510, column: 1, scope: !7595)
!7605 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1022, file: !1022, line: 171, type: !7606, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7608)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{!61, !862}
!7608 = !{!7609, !7610}
!7609 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7605, file: !1022, line: 171, type: !862)
!7610 = !DILocalVariable(name: "ret", scope: !7605, file: !1022, line: 173, type: !61)
!7611 = !DILocation(line: 0, scope: !7605)
!7612 = !DILocation(line: 175, column: 40, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7605, file: !1022, line: 175, column: 9)
!7614 = !DILocation(line: 178, column: 15, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7613, file: !1022, line: 177, column: 12)
!7616 = !DILocation(line: 181, column: 5, scope: !7605)
!7617 = !DILocation(line: 182, column: 1, scope: !7605)
!7618 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1031, file: !1031, line: 1523, type: !7619, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7621)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{!61, !863}
!7621 = !{!7622}
!7622 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7618, file: !1031, line: 1523, type: !863)
!7623 = !DILocation(line: 0, scope: !7618)
!7624 = !DILocation(line: 1525, column: 51, scope: !7618)
!7625 = !DILocation(line: 1525, column: 23, scope: !7618)
!7626 = !DILocation(line: 1525, column: 83, scope: !7618)
!7627 = !DILocation(line: 1525, column: 22, scope: !7618)
!7628 = !DILocation(line: 1525, column: 3, scope: !7618)
!7629 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1022, file: !1022, line: 184, type: !7560, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7630)
!7630 = !{!7631, !7632}
!7631 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7629, file: !1022, line: 184, type: !862)
!7632 = !DILocalVariable(name: "status", scope: !7629, file: !1022, line: 186, type: !1025)
!7633 = !DILocation(line: 0, scope: !7629)
!7634 = !DILocation(line: 188, column: 40, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7629, file: !1022, line: 188, column: 9)
!7636 = !DILocation(line: 192, column: 9, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7635, file: !1022, line: 191, column: 12)
!7638 = !DILocation(line: 196, column: 5, scope: !7629)
!7639 = !DILocation(line: 197, column: 1, scope: !7629)
!7640 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1031, file: !1031, line: 1535, type: !7573, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7641)
!7641 = !{!7642}
!7642 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7640, file: !1031, line: 1535, type: !863)
!7643 = !DILocation(line: 0, scope: !7640)
!7644 = !DILocation(line: 1537, column: 65, scope: !7640)
!7645 = !DILocation(line: 1537, column: 44, scope: !7640)
!7646 = !DILocation(line: 1537, column: 32, scope: !7640)
!7647 = !DILocation(line: 1537, column: 3, scope: !7640)
!7648 = !DILocation(line: 1537, column: 39, scope: !7640)
!7649 = !DILocation(line: 1538, column: 1, scope: !7640)
!7650 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1022, file: !1022, line: 199, type: !7560, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7651)
!7651 = !{!7652, !7653}
!7652 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7650, file: !1022, line: 199, type: !862)
!7653 = !DILocalVariable(name: "status", scope: !7650, file: !1022, line: 201, type: !1025)
!7654 = !DILocation(line: 0, scope: !7650)
!7655 = !DILocation(line: 203, column: 40, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7650, file: !1022, line: 203, column: 9)
!7657 = !DILocation(line: 207, column: 9, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7656, file: !1022, line: 206, column: 12)
!7659 = !DILocation(line: 211, column: 5, scope: !7650)
!7660 = !DILocation(line: 212, column: 1, scope: !7650)
!7661 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1031, file: !1031, line: 1547, type: !7573, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7662)
!7662 = !{!7663}
!7663 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7661, file: !1031, line: 1547, type: !863)
!7664 = !DILocation(line: 0, scope: !7661)
!7665 = !DILocation(line: 1549, column: 65, scope: !7661)
!7666 = !DILocation(line: 1549, column: 44, scope: !7661)
!7667 = !DILocation(line: 1549, column: 32, scope: !7661)
!7668 = !DILocation(line: 1549, column: 3, scope: !7661)
!7669 = !DILocation(line: 1549, column: 39, scope: !7661)
!7670 = !DILocation(line: 1550, column: 1, scope: !7661)
!7671 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1022, file: !1022, line: 214, type: !7672, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7674)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{!1025, !862, !61}
!7674 = !{!7675, !7676, !7677}
!7675 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7671, file: !1022, line: 214, type: !862)
!7676 = !DILocalVariable(name: "priority", arg: 2, scope: !7671, file: !1022, line: 214, type: !61)
!7677 = !DILocalVariable(name: "status", scope: !7671, file: !1022, line: 216, type: !1025)
!7678 = !DILocation(line: 0, scope: !7671)
!7679 = !DILocation(line: 218, column: 40, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7671, file: !1022, line: 218, column: 9)
!7681 = !DILocation(line: 222, column: 9, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7680, file: !1022, line: 221, column: 12)
!7683 = !DILocation(line: 226, column: 5, scope: !7671)
!7684 = !DILocation(line: 227, column: 1, scope: !7671)
!7685 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1022, file: !1022, line: 229, type: !7606, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7686)
!7686 = !{!7687, !7688}
!7687 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7685, file: !1022, line: 229, type: !862)
!7688 = !DILocalVariable(name: "ret", scope: !7685, file: !1022, line: 231, type: !61)
!7689 = !DILocation(line: 0, scope: !7685)
!7690 = !DILocation(line: 233, column: 40, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7685, file: !1022, line: 233, column: 9)
!7692 = !DILocation(line: 236, column: 15, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7691, file: !1022, line: 235, column: 12)
!7694 = !DILocation(line: 239, column: 5, scope: !7685)
!7695 = !DILocation(line: 240, column: 1, scope: !7685)
!7696 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1031, file: !1031, line: 1597, type: !7619, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7697)
!7697 = !{!7698}
!7698 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7696, file: !1031, line: 1597, type: !863)
!7699 = !DILocation(line: 0, scope: !7696)
!7700 = !DILocation(line: 1603, column: 23, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !1031, line: 1602, column: 8)
!7702 = distinct !DILexicalBlock(scope: !7696, file: !1031, line: 1600, column: 6)
!7703 = !DILocation(line: 1603, column: 60, scope: !7701)
!7704 = !DILocation(line: 1604, column: 1, scope: !7696)
!7705 = distinct !DISubprogram(name: "isrC_main", scope: !1022, file: !1022, line: 248, type: !1023, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7706)
!7706 = !{!7707, !7708}
!7707 = !DILocalVariable(name: "status", scope: !7705, file: !1022, line: 250, type: !1025)
!7708 = !DILocalVariable(name: "irq_number", scope: !7705, file: !1022, line: 251, type: !862)
!7709 = !DILocation(line: 0, scope: !7705)
!7710 = !DILocation(line: 253, column: 5, scope: !7705)
!7711 = !DILocation(line: 255, column: 35, scope: !7705)
!7712 = !DILocation(line: 256, column: 40, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7705, file: !1022, line: 256, column: 9)
!7714 = !DILocation(line: 259, column: 48, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7713, file: !1022, line: 259, column: 16)
!7716 = !DILocation(line: 259, column: 62, scope: !7715)
!7717 = !DILocation(line: 259, column: 16, scope: !7713)
!7718 = !DILocation(line: 261, column: 9, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7715, file: !1022, line: 259, column: 71)
!7720 = !DILocation(line: 262, column: 9, scope: !7719)
!7721 = !DILocation(line: 264, column: 55, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7715, file: !1022, line: 263, column: 12)
!7723 = !DILocation(line: 264, column: 41, scope: !7722)
!7724 = !DILocation(line: 264, column: 53, scope: !7722)
!7725 = !DILocation(line: 265, column: 41, scope: !7722)
!7726 = !DILocation(line: 265, column: 9, scope: !7722)
!7727 = !DILocation(line: 269, column: 5, scope: !7705)
!7728 = !DILocation(line: 270, column: 1, scope: !7705)
!7729 = distinct !DISubprogram(name: "get_current_irq", scope: !1022, file: !1022, line: 242, type: !3917, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7730)
!7730 = !{!7731}
!7731 = !DILocalVariable(name: "irq_num", scope: !7729, file: !1022, line: 244, type: !61)
!7732 = !DILocation(line: 244, column: 31, scope: !7729)
!7733 = !DILocation(line: 244, column: 36, scope: !7729)
!7734 = !DILocation(line: 0, scope: !7729)
!7735 = !DILocation(line: 245, column: 21, scope: !7729)
!7736 = !DILocation(line: 245, column: 5, scope: !7729)
!7737 = distinct !DISubprogram(name: "get_pending_irq", scope: !1022, file: !1022, line: 121, type: !3917, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !293)
!7738 = !DILocation(line: 123, column: 19, scope: !7737)
!7739 = !DILocation(line: 123, column: 51, scope: !7737)
!7740 = !DILocation(line: 123, column: 5, scope: !7737)
!7741 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1022, file: !1022, line: 272, type: !7742, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7745)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{!1025, !862, !7744}
!7744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !716, line: 175, baseType: !1103)
!7745 = !{!7746, !7747, !7748}
!7746 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7741, file: !1022, line: 272, type: !862)
!7747 = !DILocalVariable(name: "callback", arg: 2, scope: !7741, file: !1022, line: 272, type: !7744)
!7748 = !DILocalVariable(name: "mask", scope: !7741, file: !1022, line: 274, type: !61)
!7749 = !DILocation(line: 0, scope: !7741)
!7750 = !DILocation(line: 276, column: 40, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7741, file: !1022, line: 276, column: 9)
!7752 = !DILocation(line: 280, column: 12, scope: !7741)
!7753 = !DILocation(line: 281, column: 5, scope: !7741)
!7754 = !DILocation(line: 282, column: 37, scope: !7741)
!7755 = !DILocation(line: 282, column: 51, scope: !7741)
!7756 = !DILocation(line: 283, column: 37, scope: !7741)
!7757 = !DILocation(line: 283, column: 49, scope: !7741)
!7758 = !DILocation(line: 284, column: 5, scope: !7741)
!7759 = !DILocation(line: 286, column: 5, scope: !7741)
!7760 = !DILocation(line: 287, column: 1, scope: !7741)
!7761 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1022, file: !1022, line: 289, type: !7762, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!1025, !1154}
!7764 = !{!7765}
!7765 = !DILocalVariable(name: "mask", arg: 1, scope: !7761, file: !1022, line: 289, type: !1154)
!7766 = !DILocation(line: 0, scope: !7761)
!7767 = !DILocation(line: 291, column: 13, scope: !7761)
!7768 = !DILocation(line: 291, column: 11, scope: !7761)
!7769 = !DILocation(line: 292, column: 5, scope: !7761)
!7770 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1022, file: !1022, line: 295, type: !7771, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{!1025, !61}
!7773 = !{!7774}
!7774 = !DILocalVariable(name: "mask", arg: 1, scope: !7770, file: !1022, line: 295, type: !61)
!7775 = !DILocation(line: 0, scope: !7770)
!7776 = !DILocation(line: 297, column: 5, scope: !7770)
!7777 = !DILocation(line: 298, column: 5, scope: !7770)
!7778 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2668, file: !2668, line: 51, type: !3917, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7779)
!7779 = !{!7780, !7781}
!7780 = !DILocalVariable(name: "mask", scope: !7778, file: !2668, line: 53, type: !61)
!7781 = !DILocalVariable(name: "priority", scope: !7778, file: !2668, line: 55, type: !61)
!7782 = !DILocation(line: 521, column: 3, scope: !7783, inlinedAt: !7787)
!7783 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !7784, file: !7784, line: 517, type: !3917, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7785)
!7784 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!7785 = !{!7786}
!7786 = !DILocalVariable(name: "result", scope: !7783, file: !7784, line: 519, type: !61)
!7787 = distinct !DILocation(line: 53, column: 21, scope: !7778)
!7788 = !{i64 457576}
!7789 = !DILocation(line: 0, scope: !7783, inlinedAt: !7787)
!7790 = !DILocation(line: 0, scope: !7778)
!7791 = !DILocalVariable(name: "value", arg: 1, scope: !7792, file: !7784, line: 532, type: !61)
!7792 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !7784, file: !7784, line: 532, type: !7793, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7795)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{null, !61}
!7795 = !{!7791}
!7796 = !DILocation(line: 0, scope: !7792, inlinedAt: !7797)
!7797 = distinct !DILocation(line: 56, column: 5, scope: !7778)
!7798 = !DILocation(line: 534, column: 3, scope: !7792, inlinedAt: !7797)
!7799 = !{i64 457909}
!7800 = !DILocation(line: 456, column: 3, scope: !7801, inlinedAt: !7802)
!7801 = distinct !DISubprogram(name: "__DMB", scope: !2783, file: !2783, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !293)
!7802 = distinct !DILocation(line: 57, column: 5, scope: !7778)
!7803 = !{i64 430665}
!7804 = !DILocation(line: 434, column: 3, scope: !7805, inlinedAt: !7806)
!7805 = distinct !DISubprogram(name: "__ISB", scope: !2783, file: !2783, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !293)
!7806 = distinct !DILocation(line: 58, column: 5, scope: !7778)
!7807 = !{i64 430080}
!7808 = !DILocation(line: 59, column: 5, scope: !7778)
!7809 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2668, file: !2668, line: 62, type: !7793, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7810)
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "mask", arg: 1, scope: !7809, file: !2668, line: 62, type: !61)
!7812 = !DILocation(line: 0, scope: !7809)
!7813 = !DILocation(line: 0, scope: !7792, inlinedAt: !7814)
!7814 = distinct !DILocation(line: 64, column: 5, scope: !7809)
!7815 = !DILocation(line: 534, column: 3, scope: !7792, inlinedAt: !7814)
!7816 = !DILocation(line: 456, column: 3, scope: !7801, inlinedAt: !7817)
!7817 = distinct !DILocation(line: 65, column: 5, scope: !7809)
!7818 = !DILocation(line: 434, column: 3, scope: !7805, inlinedAt: !7819)
!7819 = distinct !DILocation(line: 66, column: 5, scope: !7809)
!7820 = !DILocation(line: 67, column: 1, scope: !7809)
!7821 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2668, file: !2668, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7822)
!7822 = !{!7823, !7824}
!7823 = !DILocalVariable(name: "irq_number", scope: !7821, file: !2668, line: 71, type: !862)
!7824 = !DILocalVariable(name: "mask", scope: !7821, file: !2668, line: 72, type: !61)
!7825 = !DILocation(line: 72, column: 21, scope: !7821)
!7826 = !DILocation(line: 0, scope: !7821)
!7827 = !DILocation(line: 73, column: 5, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7821, file: !2668, line: 73, column: 5)
!7829 = !DILocation(line: 74, column: 9, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !2668, line: 73, column: 85)
!7831 = distinct !DILexicalBlock(scope: !7828, file: !2668, line: 73, column: 5)
!7832 = !DILocation(line: 73, column: 81, scope: !7831)
!7833 = !DILocation(line: 73, column: 53, scope: !7831)
!7834 = distinct !{!7834, !7827, !7835}
!7835 = !DILocation(line: 75, column: 5, scope: !7828)
!7836 = !DILocation(line: 76, column: 5, scope: !7821)
!7837 = !DILocation(line: 77, column: 1, scope: !7821)
!7838 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1031, file: !1031, line: 1507, type: !7573, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7839)
!7839 = !{!7840}
!7840 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7838, file: !1031, line: 1507, type: !863)
!7841 = !DILocation(line: 0, scope: !7838)
!7842 = !DILocation(line: 1509, column: 65, scope: !7838)
!7843 = !DILocation(line: 1509, column: 44, scope: !7838)
!7844 = !DILocation(line: 1509, column: 32, scope: !7838)
!7845 = !DILocation(line: 1509, column: 3, scope: !7838)
!7846 = !DILocation(line: 1509, column: 39, scope: !7838)
!7847 = !DILocation(line: 1510, column: 1, scope: !7838)
!7848 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2668, file: !2668, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7849)
!7849 = !{!7850, !7851}
!7850 = !DILocalVariable(name: "irq_number", scope: !7848, file: !2668, line: 81, type: !862)
!7851 = !DILocalVariable(name: "mask", scope: !7848, file: !2668, line: 82, type: !61)
!7852 = !DILocation(line: 82, column: 21, scope: !7848)
!7853 = !DILocation(line: 0, scope: !7848)
!7854 = !DILocation(line: 84, column: 5, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7848, file: !2668, line: 84, column: 5)
!7856 = !DILocation(line: 85, column: 9, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !2668, line: 84, column: 85)
!7858 = distinct !DILexicalBlock(scope: !7855, file: !2668, line: 84, column: 5)
!7859 = !DILocation(line: 84, column: 81, scope: !7858)
!7860 = !DILocation(line: 84, column: 53, scope: !7858)
!7861 = distinct !{!7861, !7854, !7862}
!7862 = !DILocation(line: 86, column: 5, scope: !7855)
!7863 = !DILocation(line: 87, column: 5, scope: !7848)
!7864 = !DILocation(line: 88, column: 1, scope: !7848)
!7865 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1031, file: !1031, line: 1494, type: !7573, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7866)
!7866 = !{!7867}
!7867 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7865, file: !1031, line: 1494, type: !863)
!7868 = !DILocation(line: 0, scope: !7865)
!7869 = !DILocation(line: 1497, column: 91, scope: !7865)
!7870 = !DILocation(line: 1497, column: 61, scope: !7865)
!7871 = !DILocation(line: 1497, column: 40, scope: !7865)
!7872 = !DILocation(line: 1497, column: 3, scope: !7865)
!7873 = !DILocation(line: 1497, column: 46, scope: !7865)
!7874 = !DILocation(line: 1498, column: 1, scope: !7865)
!7875 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2668, file: !2668, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7876)
!7876 = !{!7877}
!7877 = !DILocalVariable(name: "irq_number", scope: !7875, file: !2668, line: 92, type: !862)
!7878 = !DILocation(line: 0, scope: !7875)
!7879 = !DILocation(line: 93, column: 5, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7875, file: !2668, line: 93, column: 5)
!7881 = !DILocation(line: 94, column: 9, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !2668, line: 93, column: 85)
!7883 = distinct !DILexicalBlock(scope: !7880, file: !2668, line: 93, column: 5)
!7884 = !DILocation(line: 93, column: 81, scope: !7883)
!7885 = !DILocation(line: 93, column: 53, scope: !7883)
!7886 = distinct !{!7886, !7879, !7887}
!7887 = !DILocation(line: 95, column: 5, scope: !7880)
!7888 = !DILocation(line: 96, column: 1, scope: !7875)
!7889 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1031, file: !1031, line: 1547, type: !7573, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7890)
!7890 = !{!7891}
!7891 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7889, file: !1031, line: 1547, type: !863)
!7892 = !DILocation(line: 0, scope: !7889)
!7893 = !DILocation(line: 1549, column: 65, scope: !7889)
!7894 = !DILocation(line: 1549, column: 44, scope: !7889)
!7895 = !DILocation(line: 1549, column: 32, scope: !7889)
!7896 = !DILocation(line: 1549, column: 3, scope: !7889)
!7897 = !DILocation(line: 1549, column: 39, scope: !7889)
!7898 = !DILocation(line: 1550, column: 1, scope: !7889)
!7899 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2668, file: !2668, line: 98, type: !7560, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7900)
!7900 = !{!7901}
!7901 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7899, file: !2668, line: 98, type: !862)
!7902 = !DILocation(line: 0, scope: !7899)
!7903 = !DILocation(line: 100, column: 24, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7899, file: !2668, line: 100, column: 9)
!7905 = !DILocation(line: 104, column: 5, scope: !7899)
!7906 = !DILocation(line: 105, column: 5, scope: !7899)
!7907 = !DILocation(line: 106, column: 1, scope: !7899)
!7908 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2668, file: !2668, line: 45, type: !1104, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7909)
!7909 = !{!7910}
!7910 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7908, file: !2668, line: 45, type: !862)
!7911 = !DILocation(line: 0, scope: !7908)
!7912 = !DILocation(line: 47, column: 54, scope: !7908)
!7913 = !DILocation(line: 47, column: 16, scope: !7908)
!7914 = !DILocation(line: 445, column: 3, scope: !7915, inlinedAt: !7916)
!7915 = distinct !DISubprogram(name: "__DSB", scope: !2783, file: !2783, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !293)
!7916 = distinct !DILocation(line: 48, column: 5, scope: !7908)
!7917 = !{i64 430376}
!7918 = !DILocation(line: 49, column: 1, scope: !7908)
!7919 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2668, file: !2668, line: 114, type: !3917, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !293)
!7920 = !DILocation(line: 116, column: 19, scope: !7919)
!7921 = !DILocation(line: 116, column: 24, scope: !7919)
!7922 = !DILocation(line: 116, column: 5, scope: !7919)
!7923 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1117, file: !1117, line: 71, type: !7924, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7926)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{null, !88, !61}
!7926 = !{!7927, !7928, !7929, !8023, !8024, !8025}
!7927 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7923, file: !1117, line: 71, type: !88)
!7928 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7923, file: !1117, line: 71, type: !61)
!7929 = !DILocalVariable(name: "D", scope: !7923, file: !1117, line: 73, type: !7930)
!7930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7931, size: 32)
!7931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !7932)
!7932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !7933)
!7933 = !{!7934, !7935, !7936, !7942, !7948, !7949, !7956, !7957, !7964, !7965, !7966, !7967, !7974, !7975, !8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016, !8017, !8018, !8019, !8020, !8021, !8022}
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7932, file: !1306, line: 136, baseType: !61, size: 32)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7932, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7932, file: !1306, line: 138, baseType: !7937, size: 32, offset: 64)
!7937 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !7938)
!7938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7939, size: 32)
!7939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !7940)
!7940 = !{!7941}
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7939, file: !1390, line: 55, baseType: !460, size: 8)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7932, file: !1306, line: 139, baseType: !7943, size: 32, offset: 96)
!7943 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !7944)
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 32)
!7945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !7946)
!7946 = !{!7947}
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7945, file: !1390, line: 45, baseType: !460, size: 8)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7932, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7932, file: !1306, line: 143, baseType: !7950, size: 32, offset: 160)
!7950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7951, size: 32)
!7951 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !7952)
!7952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !7953)
!7953 = !{!7954, !7955}
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7952, file: !1408, line: 144, baseType: !61, size: 32)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7952, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7932, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7932, file: !1306, line: 145, baseType: !7958, size: 32, offset: 224)
!7958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 32)
!7959 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !7960)
!7960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !7961)
!7961 = !{!7962, !7963}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7960, file: !1408, line: 150, baseType: !61, size: 32)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7960, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7932, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7932, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7932, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7932, file: !1306, line: 151, baseType: !7968, size: 1024, offset: 352)
!7968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7969, size: 1024, elements: !1431)
!7969 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !7970)
!7970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !7971)
!7971 = !{!7972, !7973}
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7970, file: !1408, line: 168, baseType: !61, size: 32)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7970, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7932, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7932, file: !1306, line: 156, baseType: !7976, size: 32, offset: 1408)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7977, size: 32)
!7977 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !7978)
!7978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !7979)
!7979 = !{!7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001, !8002, !8003, !8004}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7978, file: !1306, line: 91, baseType: !460, size: 8)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7978, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7978, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7978, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7978, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7978, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7978, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7978, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7978, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7978, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7978, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7978, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7978, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7978, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7978, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7978, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7978, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7978, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7978, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7978, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7978, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7978, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7978, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7978, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7978, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7932, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7932, file: !1306, line: 158, baseType: !975, size: 16, offset: 1472)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7932, file: !1306, line: 159, baseType: !975, size: 16, offset: 1488)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7932, file: !1306, line: 163, baseType: !975, size: 16, offset: 1504)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7932, file: !1306, line: 164, baseType: !975, size: 16, offset: 1520)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7932, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7932, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7932, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7932, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7932, file: !1306, line: 173, baseType: !975, size: 16, offset: 1584)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7932, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7932, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7932, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7932, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7932, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7932, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7932, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7932, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!8023 = !DILocalVariable(name: "i", scope: !7923, file: !1117, line: 74, type: !61)
!8024 = !DILocalVariable(name: "data_cnt", scope: !7923, file: !1117, line: 74, type: !61)
!8025 = !DILocalVariable(name: "p_data", scope: !7923, file: !1117, line: 75, type: !1154)
!8026 = !DILocation(line: 0, scope: !7923)
!8027 = !DILocation(line: 77, column: 16, scope: !7923)
!8028 = !DILocation(line: 79, column: 53, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !1117, line: 79, column: 5)
!8030 = distinct !DILexicalBlock(scope: !7923, file: !1117, line: 79, column: 5)
!8031 = !DILocation(line: 79, column: 5, scope: !8030)
!8032 = !DILocation(line: 79, column: 41, scope: !8030)
!8033 = !DILocation(line: 77, column: 47, scope: !7923)
!8034 = !DILocation(line: 80, column: 13, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !1117, line: 80, column: 13)
!8036 = distinct !DILexicalBlock(scope: !8029, file: !1117, line: 79, column: 80)
!8037 = !DILocation(line: 80, column: 21, scope: !8035)
!8038 = !DILocation(line: 80, column: 13, scope: !8036)
!8039 = !DILocation(line: 81, column: 13, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !1117, line: 81, column: 13)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !1117, line: 81, column: 13)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !1117, line: 81, column: 13)
!8043 = distinct !DILexicalBlock(scope: !8035, file: !1117, line: 80, column: 36)
!8044 = !DILocation(line: 79, column: 65, scope: !8029)
!8045 = !DILocation(line: 79, column: 70, scope: !8029)
!8046 = distinct !{!8046, !8031, !8047}
!8047 = !DILocation(line: 84, column: 5, scope: !8030)
!8048 = !DILocation(line: 85, column: 1, scope: !7923)
!8049 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1117, file: !1117, line: 93, type: !3665, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8050)
!8050 = !{!8051, !8052}
!8051 = !DILocalVariable(name: "num", arg: 1, scope: !8049, file: !1117, line: 93, type: !61)
!8052 = !DILocalVariable(name: "ret", scope: !8049, file: !1117, line: 95, type: !18)
!8053 = !DILocation(line: 0, scope: !8049)
!8054 = !DILocation(line: 100, column: 9, scope: !8049)
!8055 = !DILocation(line: 102, column: 5, scope: !8049)
!8056 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1117, file: !1117, line: 110, type: !8057, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8059)
!8057 = !DISubroutineType(types: !8058)
!8058 = !{null, !974}
!8059 = !{!8060, !8061}
!8060 = !DILocalVariable(name: "CS", arg: 1, scope: !8056, file: !1117, line: 110, type: !974)
!8061 = !DILocalVariable(name: "val", scope: !8056, file: !1117, line: 112, type: !61)
!8062 = !DILocation(line: 0, scope: !8056)
!8063 = !DILocation(line: 114, column: 5, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !1117, line: 114, column: 5)
!8065 = distinct !DILexicalBlock(scope: !8056, file: !1117, line: 114, column: 5)
!8066 = !DILocation(line: 116, column: 16, scope: !8056)
!8067 = !DILocation(line: 117, column: 9, scope: !8056)
!8068 = !DILocation(line: 122, column: 13, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !1117, line: 121, column: 27)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !1117, line: 121, column: 16)
!8071 = distinct !DILexicalBlock(scope: !8056, file: !1117, line: 117, column: 9)
!8072 = !DILocation(line: 127, column: 9, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !1117, line: 127, column: 9)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !1117, line: 127, column: 9)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !1117, line: 127, column: 9)
!8076 = distinct !DILexicalBlock(scope: !8070, file: !1117, line: 125, column: 12)
!8077 = !DILocation(line: 0, scope: !8071)
!8078 = !DILocation(line: 134, column: 5, scope: !8056)
!8079 = !DILocation(line: 134, column: 19, scope: !8056)
!8080 = !DILocation(line: 134, column: 35, scope: !8056)
!8081 = !DILocation(line: 134, column: 12, scope: !8056)
!8082 = distinct !{!8082, !8078, !8083}
!8083 = !DILocation(line: 134, column: 57, scope: !8056)
!8084 = !DILocation(line: 135, column: 19, scope: !8056)
!8085 = !DILocation(line: 135, column: 34, scope: !8056)
!8086 = !DILocation(line: 135, column: 12, scope: !8056)
!8087 = !DILocation(line: 135, column: 5, scope: !8056)
!8088 = distinct !{!8088, !8087, !8089}
!8089 = !DILocation(line: 135, column: 50, scope: !8056)
!8090 = !DILocation(line: 130, column: 9, scope: !8056)
!8091 = !DILocation(line: 138, column: 24, scope: !8056)
!8092 = !DILocation(line: 139, column: 1, scope: !8056)
!8093 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1117, file: !1117, line: 148, type: !8057, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8094)
!8094 = !{!8095, !8096}
!8095 = !DILocalVariable(name: "CS", arg: 1, scope: !8093, file: !1117, line: 148, type: !974)
!8096 = !DILocalVariable(name: "val", scope: !8093, file: !1117, line: 150, type: !61)
!8097 = !DILocation(line: 0, scope: !8093)
!8098 = !DILocation(line: 153, column: 16, scope: !8093)
!8099 = !DILocation(line: 154, column: 9, scope: !8093)
!8100 = !DILocation(line: 155, column: 24, scope: !8093)
!8101 = !DILocation(line: 158, column: 5, scope: !8093)
!8102 = !DILocation(line: 158, column: 18, scope: !8093)
!8103 = !DILocation(line: 158, column: 32, scope: !8093)
!8104 = distinct !{!8104, !8101, !8105}
!8105 = !DILocation(line: 158, column: 49, scope: !8093)
!8106 = !DILocation(line: 163, column: 16, scope: !8093)
!8107 = !DILocation(line: 164, column: 9, scope: !8093)
!8108 = !DILocation(line: 165, column: 24, scope: !8093)
!8109 = !DILocation(line: 168, column: 5, scope: !8093)
!8110 = !DILocation(line: 168, column: 18, scope: !8093)
!8111 = !DILocation(line: 168, column: 32, scope: !8093)
!8112 = distinct !{!8112, !8109, !8113}
!8113 = !DILocation(line: 168, column: 46, scope: !8093)
!8114 = !DILocation(line: 174, column: 10, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8093, file: !1117, line: 174, column: 9)
!8116 = !DILocation(line: 174, column: 25, scope: !8115)
!8117 = !DILocation(line: 174, column: 9, scope: !8093)
!8118 = !DILocation(line: 175, column: 9, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !1117, line: 175, column: 9)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !1117, line: 175, column: 9)
!8121 = distinct !DILexicalBlock(scope: !8115, file: !1117, line: 174, column: 36)
!8122 = !DILocation(line: 176, column: 5, scope: !8121)
!8123 = !DILocation(line: 179, column: 1, scope: !8093)
!8124 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1117, file: !1117, line: 186, type: !8125, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8127)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{!61, !974}
!8127 = !{!8128, !8129, !8130}
!8128 = !DILocalVariable(name: "CS", arg: 1, scope: !8124, file: !1117, line: 186, type: !974)
!8129 = !DILocalVariable(name: "val", scope: !8124, file: !1117, line: 188, type: !61)
!8130 = !DILocalVariable(name: "misc_ctl", scope: !8124, file: !1117, line: 189, type: !61)
!8131 = !DILocation(line: 0, scope: !8124)
!8132 = !DILocation(line: 204, column: 16, scope: !8124)
!8133 = !DILocation(line: 208, column: 12, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8124, file: !1117, line: 208, column: 9)
!8135 = !DILocation(line: 208, column: 9, scope: !8124)
!8136 = !DILocation(line: 212, column: 20, scope: !8124)
!8137 = !DILocation(line: 215, column: 1, scope: !8124)
!8138 = !DILocation(line: 215, column: 15, scope: !8124)
!8139 = !DILocation(line: 215, column: 29, scope: !8124)
!8140 = !DILocation(line: 215, column: 8, scope: !8124)
!8141 = distinct !{!8141, !8137, !8142}
!8142 = !DILocation(line: 215, column: 46, scope: !8124)
!8143 = !DILocation(line: 216, column: 22, scope: !8124)
!8144 = !DILocation(line: 216, column: 36, scope: !8124)
!8145 = !DILocation(line: 216, column: 9, scope: !8124)
!8146 = distinct !{!8146, !8145, !8147}
!8147 = !DILocation(line: 216, column: 47, scope: !8124)
!8148 = !DILocation(line: 218, column: 13, scope: !8124)
!8149 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1117, file: !1117, line: 227, type: !8057, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8150)
!8150 = !{!8151}
!8151 = !DILocalVariable(name: "CS", arg: 1, scope: !8149, file: !1117, line: 227, type: !974)
!8152 = !DILocation(line: 0, scope: !8149)
!8153 = !DILocation(line: 235, column: 5, scope: !8149)
!8154 = !DILocation(line: 236, column: 5, scope: !8149)
!8155 = !DILocation(line: 238, column: 1, scope: !8149)
!8156 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1117, file: !1117, line: 249, type: !8157, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8159)
!8157 = !DISubroutineType(types: !8158)
!8158 = !{null, !974, !772}
!8159 = !{!8160, !8161, !8162, !8163, !8164}
!8160 = !DILocalVariable(name: "CS", arg: 1, scope: !8156, file: !1117, line: 249, type: !974)
!8161 = !DILocalVariable(name: "cmd", arg: 2, scope: !8156, file: !1117, line: 249, type: !772)
!8162 = !DILocalVariable(name: "cmdi", scope: !8156, file: !1117, line: 251, type: !61)
!8163 = !DILocalVariable(name: "cmdo", scope: !8156, file: !1117, line: 251, type: !61)
!8164 = !DILocalVariable(name: "len", scope: !8156, file: !1117, line: 252, type: !460)
!8165 = !DILocation(line: 0, scope: !8156)
!8166 = !DILocation(line: 254, column: 46, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !1117, line: 254, column: 5)
!8168 = distinct !DILexicalBlock(scope: !8156, file: !1117, line: 254, column: 5)
!8169 = !DILocation(line: 254, column: 5, scope: !8168)
!8170 = !DILocation(line: 255, column: 22, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8167, file: !1117, line: 254, column: 103)
!8172 = !DILocation(line: 255, column: 59, scope: !8171)
!8173 = !DILocation(line: 255, column: 51, scope: !8171)
!8174 = !DILocation(line: 254, column: 65, scope: !8167)
!8175 = !DILocation(line: 254, column: 97, scope: !8167)
!8176 = distinct !{!8176, !8169, !8177}
!8177 = !DILocation(line: 256, column: 5, scope: !8168)
!8178 = !DILocation(line: 258, column: 9, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8156, file: !1117, line: 258, column: 9)
!8180 = !DILocation(line: 262, column: 5, scope: !8156)
!8181 = !DILocation(line: 263, column: 33, scope: !8156)
!8182 = !DILocation(line: 264, column: 25, scope: !8156)
!8183 = !DILocation(line: 265, column: 24, scope: !8156)
!8184 = !DILocation(line: 266, column: 5, scope: !8156)
!8185 = !DILocation(line: 268, column: 5, scope: !8156)
!8186 = !DILocation(line: 269, column: 1, scope: !8156)
!8187 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1117, file: !1117, line: 281, type: !8188, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8190)
!8188 = !DISubroutineType(types: !8189)
!8189 = !{null, !974, !5048, !772, !772}
!8190 = !{!8191, !8192, !8193, !8194, !8195, !8196}
!8191 = !DILocalVariable(name: "CS", arg: 1, scope: !8187, file: !1117, line: 281, type: !974)
!8192 = !DILocalVariable(name: "cmd", arg: 2, scope: !8187, file: !1117, line: 281, type: !5048)
!8193 = !DILocalVariable(name: "address", arg: 3, scope: !8187, file: !1117, line: 281, type: !772)
!8194 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !8187, file: !1117, line: 281, type: !772)
!8195 = !DILocalVariable(name: "cmd1", scope: !8187, file: !1117, line: 283, type: !61)
!8196 = !DILocalVariable(name: "cmd2", scope: !8187, file: !1117, line: 283, type: !61)
!8197 = !DILocation(line: 0, scope: !8187)
!8198 = !DILocation(line: 285, column: 12, scope: !8187)
!8199 = !DILocation(line: 287, column: 23, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8187, file: !1117, line: 287, column: 9)
!8201 = !DILocation(line: 287, column: 9, scope: !8187)
!8202 = !DILocation(line: 288, column: 22, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8200, file: !1117, line: 287, column: 31)
!8204 = !DILocation(line: 288, column: 55, scope: !8203)
!8205 = !DILocation(line: 288, column: 53, scope: !8203)
!8206 = !DILocation(line: 289, column: 5, scope: !8203)
!8207 = !DILocation(line: 290, column: 22, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8200, file: !1117, line: 289, column: 12)
!8209 = !DILocation(line: 290, column: 53, scope: !8208)
!8210 = !DILocation(line: 290, column: 51, scope: !8208)
!8211 = !DILocation(line: 291, column: 21, scope: !8208)
!8212 = !DILocation(line: 0, scope: !8200)
!8213 = !DILocation(line: 294, column: 33, scope: !8187)
!8214 = !DILocation(line: 295, column: 38, scope: !8187)
!8215 = !DILocation(line: 296, column: 41, scope: !8187)
!8216 = !DILocation(line: 296, column: 25, scope: !8187)
!8217 = !DILocation(line: 297, column: 24, scope: !8187)
!8218 = !DILocation(line: 299, column: 5, scope: !8187)
!8219 = !DILocation(line: 300, column: 5, scope: !8187)
!8220 = !DILocation(line: 302, column: 1, scope: !8187)
!8221 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1117, file: !1117, line: 312, type: !8222, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!61, !772, !772}
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "cmd", arg: 1, scope: !8221, file: !1117, line: 312, type: !772)
!8226 = !DILocalVariable(name: "address", arg: 2, scope: !8221, file: !1117, line: 312, type: !772)
!8227 = !DILocation(line: 0, scope: !8221)
!8228 = !DILocation(line: 314, column: 14, scope: !8221)
!8229 = !DILocation(line: 314, column: 44, scope: !8221)
!8230 = !DILocation(line: 314, column: 82, scope: !8221)
!8231 = !DILocation(line: 314, column: 75, scope: !8221)
!8232 = !DILocation(line: 314, column: 5, scope: !8221)
!8233 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1117, file: !1117, line: 332, type: !8234, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8237)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{!61, !772, !772, !8236, !1154}
!8236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!8237 = !{!8238, !8239, !8240, !8241, !8242, !8250, !8251, !8252}
!8238 = !DILocalVariable(name: "cmd", arg: 1, scope: !8233, file: !1117, line: 332, type: !772)
!8239 = !DILocalVariable(name: "address", arg: 2, scope: !8233, file: !1117, line: 332, type: !772)
!8240 = !DILocalVariable(name: "p_data", arg: 3, scope: !8233, file: !1117, line: 332, type: !8236)
!8241 = !DILocalVariable(name: "length", arg: 4, scope: !8233, file: !1117, line: 332, type: !1154)
!8242 = !DILocalVariable(name: "tmp", scope: !8233, file: !1117, line: 334, type: !8243)
!8243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1306, line: 202, baseType: !8244)
!8244 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1306, line: 198, size: 32, elements: !8245)
!8245 = !{!8246, !8247, !8249}
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !8244, file: !1306, line: 199, baseType: !61, size: 32)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !8244, file: !1306, line: 200, baseType: !8248, size: 32)
!8248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 32, elements: !465)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !8244, file: !1306, line: 201, baseType: !459, size: 32)
!8250 = !DILocalVariable(name: "cmd1", scope: !8233, file: !1117, line: 335, type: !61)
!8251 = !DILocalVariable(name: "cmd2", scope: !8233, file: !1117, line: 335, type: !61)
!8252 = !DILocalVariable(name: "i", scope: !8233, file: !1117, line: 336, type: !61)
!8253 = !DILocation(line: 0, scope: !8233)
!8254 = !DILocation(line: 334, column: 5, scope: !8233)
!8255 = !DILocation(line: 334, column: 16, scope: !8233)
!8256 = !DILocation(line: 338, column: 12, scope: !8233)
!8257 = !DILocation(line: 340, column: 17, scope: !8233)
!8258 = !DILocation(line: 342, column: 17, scope: !8233)
!8259 = !DILocation(line: 342, column: 9, scope: !8233)
!8260 = !DILocation(line: 342, column: 15, scope: !8233)
!8261 = !DILocation(line: 344, column: 22, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !1117, line: 343, column: 29)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !1117, line: 343, column: 5)
!8264 = distinct !DILexicalBlock(scope: !8233, file: !1117, line: 343, column: 5)
!8265 = !DILocation(line: 343, column: 5, scope: !8264)
!8266 = !DILocation(line: 344, column: 21, scope: !8262)
!8267 = !DILocation(line: 344, column: 9, scope: !8262)
!8268 = !DILocation(line: 344, column: 19, scope: !8262)
!8269 = !DILocation(line: 345, column: 18, scope: !8262)
!8270 = !DILocation(line: 343, column: 25, scope: !8263)
!8271 = !DILocation(line: 343, column: 19, scope: !8263)
!8272 = distinct !{!8272, !8265, !8273}
!8273 = !DILocation(line: 346, column: 5, scope: !8264)
!8274 = !DILocation(line: 347, column: 16, scope: !8233)
!8275 = !DILocation(line: 348, column: 16, scope: !8233)
!8276 = !DILocation(line: 348, column: 15, scope: !8233)
!8277 = !DILocation(line: 339, column: 17, scope: !8233)
!8278 = !DILocation(line: 339, column: 52, scope: !8233)
!8279 = !DILocation(line: 339, column: 45, scope: !8233)
!8280 = !DILocation(line: 348, column: 13, scope: !8233)
!8281 = !DILocation(line: 349, column: 38, scope: !8233)
!8282 = !DILocation(line: 351, column: 1, scope: !8233)
!8283 = !DILocation(line: 350, column: 5, scope: !8233)
!8284 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1117, file: !1117, line: 367, type: !8285, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8287)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{null, !61, !88, !1092}
!8287 = !{!8288, !8289, !8290, !8291, !8292, !8293}
!8288 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !8284, file: !1117, line: 367, type: !61)
!8289 = !DILocalVariable(name: "buff", arg: 2, scope: !8284, file: !1117, line: 367, type: !88)
!8290 = !DILocalVariable(name: "length", arg: 3, scope: !8284, file: !1117, line: 367, type: !1092)
!8291 = !DILocalVariable(name: "i", scope: !8284, file: !1117, line: 369, type: !61)
!8292 = !DILocalVariable(name: "p_data", scope: !8284, file: !1117, line: 370, type: !762)
!8293 = !DILocalVariable(name: "tmp", scope: !8284, file: !1117, line: 371, type: !8243)
!8294 = !DILocation(line: 0, scope: !8284)
!8295 = !DILocation(line: 371, column: 5, scope: !8284)
!8296 = !DILocation(line: 371, column: 13, scope: !8284)
!8297 = !DILocation(line: 373, column: 18, scope: !8284)
!8298 = !DILocation(line: 376, column: 15, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8284, file: !1117, line: 376, column: 9)
!8300 = !DILocation(line: 376, column: 30, scope: !8299)
!8301 = !DILocation(line: 376, column: 11, scope: !8299)
!8302 = !DILocation(line: 376, column: 9, scope: !8284)
!8303 = !DILocation(line: 377, column: 23, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !1117, line: 377, column: 9)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !1117, line: 377, column: 9)
!8306 = distinct !DILexicalBlock(scope: !8299, file: !1117, line: 376, column: 41)
!8307 = !DILocation(line: 377, column: 9, scope: !8305)
!8308 = !DILocation(line: 378, column: 13, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8304, file: !1117, line: 377, column: 80)
!8310 = !DILocation(line: 377, column: 41, scope: !8304)
!8311 = !DILocation(line: 377, column: 54, scope: !8304)
!8312 = !DILocation(line: 377, column: 67, scope: !8304)
!8313 = distinct !{!8313, !8307, !8314}
!8314 = !DILocation(line: 379, column: 9, scope: !8305)
!8315 = !DILocation(line: 382, column: 37, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8299, file: !1117, line: 382, column: 14)
!8317 = !DILocation(line: 382, column: 16, scope: !8316)
!8318 = !DILocation(line: 0, scope: !8316)
!8319 = !DILocation(line: 382, column: 14, scope: !8299)
!8320 = !DILocation(line: 391, column: 9, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !1117, line: 391, column: 9)
!8322 = distinct !DILexicalBlock(scope: !8316, file: !1117, line: 390, column: 13)
!8323 = !DILocation(line: 383, column: 9, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !1117, line: 383, column: 9)
!8325 = distinct !DILexicalBlock(scope: !8316, file: !1117, line: 382, column: 49)
!8326 = !DILocation(line: 384, column: 26, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !1117, line: 383, column: 80)
!8328 = distinct !DILexicalBlock(scope: !8324, file: !1117, line: 383, column: 9)
!8329 = !DILocation(line: 384, column: 24, scope: !8327)
!8330 = !DILocation(line: 385, column: 47, scope: !8327)
!8331 = !DILocation(line: 385, column: 26, scope: !8327)
!8332 = !DILocation(line: 385, column: 24, scope: !8327)
!8333 = !DILocation(line: 386, column: 13, scope: !8327)
!8334 = !DILocation(line: 383, column: 41, scope: !8328)
!8335 = !DILocation(line: 383, column: 54, scope: !8328)
!8336 = !DILocation(line: 383, column: 67, scope: !8328)
!8337 = !DILocation(line: 383, column: 23, scope: !8328)
!8338 = distinct !{!8338, !8323, !8339}
!8339 = !DILocation(line: 387, column: 9, scope: !8324)
!8340 = !DILocation(line: 392, column: 13, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !1117, line: 392, column: 13)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !1117, line: 391, column: 61)
!8343 = distinct !DILexicalBlock(scope: !8321, file: !1117, line: 391, column: 9)
!8344 = !DILocation(line: 393, column: 36, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !1117, line: 392, column: 51)
!8346 = distinct !DILexicalBlock(scope: !8341, file: !1117, line: 392, column: 13)
!8347 = !DILocation(line: 393, column: 29, scope: !8345)
!8348 = !DILocation(line: 393, column: 17, scope: !8345)
!8349 = !DILocation(line: 393, column: 27, scope: !8345)
!8350 = !DILocation(line: 392, column: 47, scope: !8346)
!8351 = !DILocation(line: 392, column: 27, scope: !8346)
!8352 = !DILocation(line: 392, column: 31, scope: !8346)
!8353 = distinct !{!8353, !8340, !8354}
!8354 = !DILocation(line: 394, column: 13, scope: !8341)
!8355 = !DILocation(line: 395, column: 13, scope: !8342)
!8356 = !DILocation(line: 391, column: 41, scope: !8343)
!8357 = !DILocation(line: 391, column: 54, scope: !8343)
!8358 = !DILocation(line: 391, column: 23, scope: !8343)
!8359 = distinct !{!8359, !8320, !8360}
!8360 = !DILocation(line: 396, column: 9, scope: !8321)
!8361 = !DILocation(line: 398, column: 1, scope: !8284)
!8362 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1117, file: !1117, line: 414, type: !8363, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8365)
!8363 = !DISubroutineType(types: !8364)
!8364 = !{null, !974, !5047, !762, !974, !974}
!8365 = !{!8366, !8367, !8368, !8369, !8370, !8371, !8372, !8373, !8374, !8375}
!8366 = !DILocalVariable(name: "CS", arg: 1, scope: !8362, file: !1117, line: 414, type: !974)
!8367 = !DILocalVariable(name: "cmd", arg: 2, scope: !8362, file: !1117, line: 414, type: !5047)
!8368 = !DILocalVariable(name: "data", arg: 3, scope: !8362, file: !1117, line: 414, type: !762)
!8369 = !DILocalVariable(name: "outl", arg: 4, scope: !8362, file: !1117, line: 414, type: !974)
!8370 = !DILocalVariable(name: "inl", arg: 5, scope: !8362, file: !1117, line: 414, type: !974)
!8371 = !DILocalVariable(name: "tmp", scope: !8362, file: !1117, line: 416, type: !61)
!8372 = !DILocalVariable(name: "i", scope: !8362, file: !1117, line: 417, type: !61)
!8373 = !DILocalVariable(name: "j", scope: !8362, file: !1117, line: 417, type: !61)
!8374 = !DILocalVariable(name: "p_data", scope: !8362, file: !1117, line: 418, type: !762)
!8375 = !DILocalVariable(name: "p_tmp", scope: !8362, file: !1117, line: 418, type: !762)
!8376 = !DILocation(line: 0, scope: !8362)
!8377 = !DILocation(line: 416, column: 5, scope: !8362)
!8378 = !DILocation(line: 422, column: 60, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !1117, line: 422, column: 5)
!8380 = distinct !DILexicalBlock(scope: !8362, file: !1117, line: 422, column: 5)
!8381 = !DILocation(line: 422, column: 5, scope: !8380)
!8382 = !DILocation(line: 423, column: 25, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !1117, line: 423, column: 9)
!8384 = distinct !DILexicalBlock(scope: !8379, file: !1117, line: 422, column: 83)
!8385 = !DILocation(line: 423, column: 32, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8383, file: !1117, line: 423, column: 9)
!8387 = !DILocation(line: 423, column: 9, scope: !8383)
!8388 = !DILocation(line: 424, column: 24, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8386, file: !1117, line: 423, column: 59)
!8390 = !DILocation(line: 424, column: 13, scope: !8389)
!8391 = !DILocation(line: 424, column: 22, scope: !8389)
!8392 = !DILocation(line: 423, column: 50, scope: !8386)
!8393 = !DILocation(line: 423, column: 55, scope: !8386)
!8394 = !DILocation(line: 423, column: 39, scope: !8386)
!8395 = distinct !{!8395, !8387, !8396}
!8396 = !DILocation(line: 425, column: 9, scope: !8383)
!8397 = !DILocation(line: 426, column: 9, scope: !8384)
!8398 = !DILocation(line: 0, scope: !8380)
!8399 = !DILocation(line: 422, column: 75, scope: !8379)
!8400 = distinct !{!8400, !8381, !8401}
!8401 = !DILocation(line: 427, column: 5, scope: !8380)
!8402 = !DILocation(line: 428, column: 25, scope: !8362)
!8403 = !DILocation(line: 429, column: 26, scope: !8362)
!8404 = !DILocation(line: 429, column: 24, scope: !8362)
!8405 = !DILocation(line: 430, column: 5, scope: !8362)
!8406 = !DILocation(line: 431, column: 5, scope: !8362)
!8407 = !DILocation(line: 433, column: 67, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !1117, line: 433, column: 5)
!8409 = distinct !DILexicalBlock(scope: !8362, file: !1117, line: 433, column: 5)
!8410 = !DILocation(line: 433, column: 5, scope: !8409)
!8411 = !DILocation(line: 433, column: 56, scope: !8409)
!8412 = !DILocation(line: 434, column: 17, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !1117, line: 433, column: 100)
!8414 = !DILocation(line: 434, column: 15, scope: !8413)
!8415 = !DILocation(line: 433, column: 74, scope: !8408)
!8416 = !DILocation(line: 433, column: 79, scope: !8408)
!8417 = !DILocation(line: 433, column: 87, scope: !8408)
!8418 = distinct !{!8418, !8410, !8419}
!8419 = !DILocation(line: 435, column: 5, scope: !8409)
!8420 = !DILocation(line: 437, column: 1, scope: !8362)
!8421 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1117, file: !1117, line: 462, type: !8422, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8424)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{null, !974, !5047}
!8424 = !{!8425, !8426, !8427, !8428, !8429}
!8425 = !DILocalVariable(name: "CS", arg: 1, scope: !8421, file: !1117, line: 462, type: !974)
!8426 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !8421, file: !1117, line: 462, type: !5047)
!8427 = !DILocalVariable(name: "i", scope: !8421, file: !1117, line: 464, type: !61)
!8428 = !DILocalVariable(name: "val", scope: !8421, file: !1117, line: 465, type: !61)
!8429 = !DILocalVariable(name: "status", scope: !8430, file: !1117, line: 492, type: !460)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !1117, line: 491, column: 47)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !1117, line: 491, column: 13)
!8432 = distinct !DILexicalBlock(scope: !8421, file: !1117, line: 477, column: 17)
!8433 = !DILocation(line: 0, scope: !8421)
!8434 = !DILocation(line: 467, column: 17, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8421, file: !1117, line: 467, column: 9)
!8436 = !DILocation(line: 467, column: 9, scope: !8421)
!8437 = !DILocation(line: 474, column: 11, scope: !8421)
!8438 = !DILocation(line: 477, column: 5, scope: !8421)
!8439 = !DILocation(line: 478, column: 17, scope: !8432)
!8440 = !DILocation(line: 478, column: 9, scope: !8432)
!8441 = !DILocation(line: 481, column: 17, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !1117, line: 481, column: 17)
!8443 = distinct !DILexicalBlock(scope: !8432, file: !1117, line: 478, column: 29)
!8444 = !DILocation(line: 481, column: 17, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !1117, line: 481, column: 17)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !1117, line: 481, column: 17)
!8447 = distinct !DILexicalBlock(scope: !8442, file: !1117, line: 481, column: 17)
!8448 = !DILocation(line: 481, column: 17, scope: !8446)
!8449 = !DILocation(line: 481, column: 17, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !1117, line: 481, column: 17)
!8451 = distinct !DILexicalBlock(scope: !8447, file: !1117, line: 481, column: 17)
!8452 = !DILocation(line: 484, column: 17, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8443, file: !1117, line: 484, column: 17)
!8454 = !DILocation(line: 484, column: 17, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !1117, line: 484, column: 17)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 484, column: 17)
!8457 = distinct !DILexicalBlock(scope: !8453, file: !1117, line: 484, column: 17)
!8458 = !DILocation(line: 484, column: 17, scope: !8456)
!8459 = !DILocation(line: 484, column: 17, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !1117, line: 484, column: 17)
!8461 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 484, column: 17)
!8462 = !DILocation(line: 0, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !1117, line: 487, column: 17)
!8464 = distinct !DILexicalBlock(scope: !8443, file: !1117, line: 487, column: 17)
!8465 = !DILocation(line: 487, column: 17, scope: !8464)
!8466 = !DILocation(line: 487, column: 17, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !1117, line: 487, column: 17)
!8468 = distinct !DILexicalBlock(scope: !8463, file: !1117, line: 487, column: 17)
!8469 = !DILocation(line: 487, column: 17, scope: !8468)
!8470 = !DILocation(line: 487, column: 17, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !1117, line: 487, column: 17)
!8472 = distinct !DILexicalBlock(scope: !8463, file: !1117, line: 487, column: 17)
!8473 = !DILocation(line: 487, column: 17, scope: !8472)
!8474 = !DILocation(line: 491, column: 23, scope: !8431)
!8475 = !DILocation(line: 491, column: 13, scope: !8431)
!8476 = !DILocation(line: 491, column: 28, scope: !8431)
!8477 = !DILocation(line: 491, column: 13, scope: !8432)
!8478 = !DILocation(line: 492, column: 13, scope: !8430)
!8479 = !DILocation(line: 494, column: 13, scope: !8430)
!8480 = !DILocation(line: 0, scope: !8430)
!8481 = !DILocation(line: 495, column: 17, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8430, file: !1117, line: 494, column: 16)
!8483 = !DILocation(line: 496, column: 22, scope: !8430)
!8484 = !DILocation(line: 496, column: 31, scope: !8430)
!8485 = !DILocation(line: 496, column: 29, scope: !8430)
!8486 = !DILocation(line: 496, column: 13, scope: !8482)
!8487 = distinct !{!8487, !8479, !8488}
!8488 = !DILocation(line: 496, column: 45, scope: !8430)
!8489 = !DILocation(line: 497, column: 9, scope: !8431)
!8490 = !DILocation(line: 503, column: 25, scope: !8432)
!8491 = !DILocation(line: 497, column: 9, scope: !8430)
!8492 = !DILocation(line: 500, column: 70, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8431, file: !1117, line: 499, column: 14)
!8494 = !DILocation(line: 500, column: 60, scope: !8493)
!8495 = !DILocation(line: 500, column: 13, scope: !8493)
!8496 = !DILocation(line: 503, column: 15, scope: !8432)
!8497 = !DILocation(line: 503, column: 11, scope: !8432)
!8498 = distinct !{!8498, !8438, !8499}
!8499 = !DILocation(line: 504, column: 5, scope: !8421)
!8500 = !DILocation(line: 505, column: 1, scope: !8421)
!8501 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1117, file: !1117, line: 514, type: !8502, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8504)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{null, !974, !762, !460}
!8504 = !{!8505, !8506, !8507}
!8505 = !DILocalVariable(name: "CS", arg: 1, scope: !8501, file: !1117, line: 514, type: !974)
!8506 = !DILocalVariable(name: "id", arg: 2, scope: !8501, file: !1117, line: 514, type: !762)
!8507 = !DILocalVariable(name: "cmd", arg: 3, scope: !8501, file: !1117, line: 514, type: !460)
!8508 = !DILocation(line: 0, scope: !8501)
!8509 = !DILocation(line: 517, column: 5, scope: !8501)
!8510 = !DILocation(line: 518, column: 1, scope: !8501)
!8511 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1117, file: !1117, line: 521, type: !8512, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8514)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{null, !974, !762}
!8514 = !{!8515, !8516}
!8515 = !DILocalVariable(name: "CS", arg: 1, scope: !8511, file: !1117, line: 521, type: !974)
!8516 = !DILocalVariable(name: "id", arg: 2, scope: !8511, file: !1117, line: 521, type: !762)
!8517 = !DILocation(line: 0, scope: !8511)
!8518 = !DILocation(line: 523, column: 5, scope: !8511)
!8519 = !DILocation(line: 524, column: 1, scope: !8511)
!8520 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1117, file: !1117, line: 536, type: !8521, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!8523}
!8523 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1120, line: 57, baseType: !1119)
!8524 = !DILocation(line: 540, column: 5, scope: !8520)
!8525 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1117, file: !1117, line: 561, type: !8526, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8526 = !DISubroutineType(types: !8527)
!8527 = !{!8528}
!8528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1120, line: 66, baseType: !1127)
!8529 = !DILocation(line: 564, column: 15, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8525, file: !1117, line: 564, column: 9)
!8531 = !DILocation(line: 564, column: 31, scope: !8530)
!8532 = !DILocation(line: 564, column: 45, scope: !8530)
!8533 = !DILocation(line: 0, scope: !8530)
!8534 = !DILocation(line: 569, column: 1, scope: !8525)
!8535 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1117, file: !1117, line: 580, type: !8536, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8538)
!8536 = !DISubroutineType(types: !8537)
!8537 = !{!91, !762}
!8538 = !{!8539, !8540}
!8539 = !DILocalVariable(name: "buffer", arg: 1, scope: !8535, file: !1117, line: 580, type: !762)
!8540 = !DILocalVariable(name: "i", scope: !8535, file: !1117, line: 582, type: !7)
!8541 = !DILocation(line: 0, scope: !8535)
!8542 = !DILocation(line: 583, column: 5, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8535, file: !1117, line: 583, column: 5)
!8544 = !DILocation(line: 584, column: 9, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !1117, line: 583, column: 29)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !1117, line: 583, column: 5)
!8547 = !DILocation(line: 584, column: 19, scope: !8545)
!8548 = !DILocation(line: 583, column: 25, scope: !8546)
!8549 = !DILocation(line: 583, column: 19, scope: !8546)
!8550 = distinct !{!8550, !8542, !8551}
!8551 = !DILocation(line: 585, column: 5, scope: !8543)
!8552 = !DILocation(line: 586, column: 5, scope: !8535)
!8553 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1117, file: !1117, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8554)
!8554 = !{!8555}
!8555 = !DILocalVariable(name: "D", scope: !8553, file: !1117, line: 615, type: !7930)
!8556 = !DILocation(line: 0, scope: !8553)
!8557 = !DILocation(line: 616, column: 32, scope: !8553)
!8558 = !DILocation(line: 616, column: 37, scope: !8553)
!8559 = !DILocation(line: 616, column: 27, scope: !8553)
!8560 = !DILocation(line: 617, column: 44, scope: !8553)
!8561 = !DILocation(line: 617, column: 31, scope: !8553)
!8562 = !DILocation(line: 617, column: 28, scope: !8553)
!8563 = !DILocation(line: 618, column: 32, scope: !8553)
!8564 = !DILocation(line: 618, column: 31, scope: !8553)
!8565 = !DILocation(line: 618, column: 29, scope: !8553)
!8566 = !DILocation(line: 621, column: 31, scope: !8553)
!8567 = !DILocation(line: 621, column: 24, scope: !8553)
!8568 = !DILocation(line: 622, column: 34, scope: !8553)
!8569 = !DILocation(line: 622, column: 27, scope: !8553)
!8570 = !DILocation(line: 623, column: 32, scope: !8553)
!8571 = !DILocation(line: 623, column: 25, scope: !8553)
!8572 = !DILocation(line: 624, column: 33, scope: !8553)
!8573 = !DILocation(line: 624, column: 26, scope: !8553)
!8574 = !DILocation(line: 625, column: 33, scope: !8553)
!8575 = !DILocation(line: 625, column: 26, scope: !8553)
!8576 = !DILocation(line: 629, column: 32, scope: !8553)
!8577 = !DILocation(line: 629, column: 47, scope: !8553)
!8578 = !DILocation(line: 629, column: 25, scope: !8553)
!8579 = !DILocation(line: 630, column: 32, scope: !8553)
!8580 = !DILocation(line: 630, column: 47, scope: !8553)
!8581 = !DILocation(line: 630, column: 25, scope: !8553)
!8582 = !DILocation(line: 633, column: 24, scope: !8553)
!8583 = !DILocation(line: 633, column: 31, scope: !8553)
!8584 = !DILocation(line: 633, column: 36, scope: !8553)
!8585 = !DILocation(line: 633, column: 28, scope: !8553)
!8586 = !DILocation(line: 633, column: 5, scope: !8553)
!8587 = !DILocation(line: 635, column: 5, scope: !8553)
!8588 = !DILocation(line: 636, column: 1, scope: !8553)
!8589 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1117, file: !1117, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8590 = !DILocation(line: 644, column: 26, scope: !8589)
!8591 = !DILocation(line: 644, column: 24, scope: !8589)
!8592 = !DILocation(line: 645, column: 29, scope: !8589)
!8593 = !DILocation(line: 645, column: 27, scope: !8589)
!8594 = !DILocation(line: 646, column: 27, scope: !8589)
!8595 = !DILocation(line: 646, column: 25, scope: !8589)
!8596 = !DILocation(line: 647, column: 28, scope: !8589)
!8597 = !DILocation(line: 647, column: 26, scope: !8589)
!8598 = !DILocation(line: 648, column: 27, scope: !8589)
!8599 = !DILocation(line: 648, column: 25, scope: !8589)
!8600 = !DILocation(line: 652, column: 32, scope: !8589)
!8601 = !DILocation(line: 652, column: 47, scope: !8589)
!8602 = !DILocation(line: 652, column: 25, scope: !8589)
!8603 = !DILocation(line: 655, column: 24, scope: !8589)
!8604 = !DILocation(line: 655, column: 5, scope: !8589)
!8605 = !DILocation(line: 657, column: 5, scope: !8589)
!8606 = !DILocation(line: 660, column: 9, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8589, file: !1117, line: 660, column: 9)
!8608 = !DILocation(line: 660, column: 59, scope: !8607)
!8609 = !DILocation(line: 660, column: 38, scope: !8607)
!8610 = !DILocation(line: 660, column: 37, scope: !8607)
!8611 = !DILocation(line: 660, column: 33, scope: !8607)
!8612 = !DILocation(line: 660, column: 9, scope: !8589)
!8613 = !DILocation(line: 661, column: 9, scope: !8607)
!8614 = distinct !{!8614, !8613, !8615}
!8615 = !DILocation(line: 661, column: 18, scope: !8607)
!8616 = !DILocation(line: 662, column: 1, scope: !8589)
!8617 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1117, file: !1117, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8618 = !DILocation(line: 671, column: 9, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8617, file: !1117, line: 671, column: 9)
!8620 = !DILocation(line: 671, column: 40, scope: !8619)
!8621 = !DILocation(line: 671, column: 9, scope: !8617)
!8622 = !DILocation(line: 672, column: 47, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8619, file: !1117, line: 671, column: 46)
!8624 = !DILocation(line: 672, column: 40, scope: !8623)
!8625 = !DILocation(line: 673, column: 5, scope: !8623)
!8626 = !DILocation(line: 674, column: 9, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8617, file: !1117, line: 674, column: 9)
!8628 = !DILocation(line: 674, column: 41, scope: !8627)
!8629 = !DILocation(line: 674, column: 9, scope: !8617)
!8630 = !DILocation(line: 675, column: 48, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !1117, line: 674, column: 47)
!8632 = !DILocation(line: 675, column: 41, scope: !8631)
!8633 = !DILocation(line: 676, column: 5, scope: !8631)
!8634 = !DILocation(line: 679, column: 33, scope: !8617)
!8635 = !DILocation(line: 679, column: 48, scope: !8617)
!8636 = !DILocation(line: 679, column: 25, scope: !8617)
!8637 = !DILocation(line: 680, column: 25, scope: !8617)
!8638 = !DILocation(line: 686, column: 5, scope: !8617)
!8639 = !DILocation(line: 688, column: 1, scope: !8617)
!8640 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1117, file: !1117, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8641 = !DILocation(line: 692, column: 9, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8640, file: !1117, line: 692, column: 9)
!8643 = !DILocation(line: 692, column: 40, scope: !8642)
!8644 = !DILocation(line: 692, column: 9, scope: !8640)
!8645 = !DILocation(line: 693, column: 29, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8642, file: !1117, line: 692, column: 46)
!8647 = !DILocation(line: 694, column: 5, scope: !8646)
!8648 = !DILocation(line: 695, column: 9, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8640, file: !1117, line: 695, column: 9)
!8650 = !DILocation(line: 695, column: 41, scope: !8649)
!8651 = !DILocation(line: 695, column: 9, scope: !8640)
!8652 = !DILocation(line: 696, column: 29, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8649, file: !1117, line: 695, column: 47)
!8654 = !DILocation(line: 697, column: 5, scope: !8653)
!8655 = !DILocation(line: 698, column: 5, scope: !8640)
!8656 = !DILocation(line: 699, column: 1, scope: !8640)
!8657 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1212, file: !1212, line: 91, type: !3917, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8658)
!8658 = !{!8659}
!8659 = !DILocalVariable(name: "counter", scope: !8657, file: !1212, line: 102, type: !61)
!8660 = !DILocation(line: 0, scope: !8657)
!8661 = !DILocation(line: 110, column: 5, scope: !8657)
!8662 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1212, file: !1212, line: 114, type: !3917, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8663)
!8663 = !{!8664}
!8664 = !DILocalVariable(name: "counter", scope: !8662, file: !1212, line: 125, type: !61)
!8665 = !DILocation(line: 0, scope: !8662)
!8666 = !DILocation(line: 133, column: 5, scope: !8662)
!8667 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1212, file: !1212, line: 137, type: !7793, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8668)
!8668 = !{!8669}
!8669 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8667, file: !1212, line: 137, type: !61)
!8670 = !DILocation(line: 0, scope: !8667)
!8671 = !DILocation(line: 142, column: 5, scope: !8667)
!8672 = !DILocation(line: 144, column: 1, scope: !8667)
!8673 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1212, file: !1212, line: 163, type: !3917, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8674)
!8674 = !{!8675}
!8675 = !DILocalVariable(name: "mask", scope: !8673, file: !1212, line: 165, type: !61)
!8676 = !DILocation(line: 166, column: 12, scope: !8673)
!8677 = !DILocation(line: 0, scope: !8673)
!8678 = !DILocation(line: 167, column: 5, scope: !8673)
!8679 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1212, file: !1212, line: 171, type: !7793, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8680)
!8680 = !{!8681}
!8681 = !DILocalVariable(name: "mask", arg: 1, scope: !8679, file: !1212, line: 171, type: !61)
!8682 = !DILocation(line: 0, scope: !8679)
!8683 = !DILocation(line: 173, column: 5, scope: !8679)
!8684 = !DILocation(line: 174, column: 1, scope: !8679)
!8685 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1212, file: !1212, line: 199, type: !1484, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8686)
!8686 = !{!8687}
!8687 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8685, file: !1212, line: 199, type: !88)
!8688 = !DILocation(line: 0, scope: !8685)
!8689 = !DILocation(line: 201, column: 5, scope: !8685)
!8690 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1212, file: !1212, line: 388, type: !8691, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !293)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!1092}
!8693 = !DILocation(line: 390, column: 5, scope: !8690)
!8694 = distinct !DISubprogram(name: "CompareData", scope: !1212, file: !1212, line: 872, type: !8695, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8697)
!8695 = !DISubroutineType(types: !8696)
!8696 = !{!91, !88, !88, !61}
!8697 = !{!8698, !8699, !8700, !8701, !8702, !8705, !8706, !8709, !8710, !8712}
!8698 = !DILocalVariable(name: "Address", arg: 1, scope: !8694, file: !1212, line: 872, type: !88)
!8699 = !DILocalVariable(name: "Data", arg: 2, scope: !8694, file: !1212, line: 872, type: !88)
!8700 = !DILocalVariable(name: "Length", arg: 3, scope: !8694, file: !1212, line: 872, type: !61)
!8701 = !DILocalVariable(name: "i", scope: !8694, file: !1212, line: 874, type: !61)
!8702 = !DILocalVariable(name: "Source", scope: !8703, file: !1212, line: 877, type: !1154)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !1212, line: 876, column: 74)
!8704 = distinct !DILexicalBlock(scope: !8694, file: !1212, line: 876, column: 9)
!8705 = !DILocalVariable(name: "Dest", scope: !8703, file: !1212, line: 878, type: !1154)
!8706 = !DILocalVariable(name: "Source", scope: !8707, file: !1212, line: 885, type: !1185)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !1212, line: 884, column: 79)
!8708 = distinct !DILexicalBlock(scope: !8704, file: !1212, line: 884, column: 16)
!8709 = !DILocalVariable(name: "Dest", scope: !8707, file: !1212, line: 886, type: !1185)
!8710 = !DILocalVariable(name: "Source", scope: !8711, file: !1212, line: 893, type: !762)
!8711 = distinct !DILexicalBlock(scope: !8708, file: !1212, line: 892, column: 12)
!8712 = !DILocalVariable(name: "Dest", scope: !8711, file: !1212, line: 894, type: !762)
!8713 = !DILocation(line: 0, scope: !8694)
!8714 = !DILocation(line: 876, column: 11, scope: !8704)
!8715 = !DILocation(line: 876, column: 42, scope: !8704)
!8716 = !DILocation(line: 877, column: 28, scope: !8703)
!8717 = !DILocation(line: 0, scope: !8703)
!8718 = !DILocation(line: 878, column: 26, scope: !8703)
!8719 = !DILocation(line: 879, column: 23, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !1212, line: 879, column: 9)
!8721 = distinct !DILexicalBlock(scope: !8703, file: !1212, line: 879, column: 9)
!8722 = !DILocation(line: 879, column: 9, scope: !8721)
!8723 = !DILocation(line: 880, column: 17, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !1212, line: 880, column: 17)
!8725 = distinct !DILexicalBlock(scope: !8720, file: !1212, line: 879, column: 68)
!8726 = !DILocation(line: 880, column: 30, scope: !8724)
!8727 = !DILocation(line: 880, column: 27, scope: !8724)
!8728 = !DILocation(line: 879, column: 64, scope: !8720)
!8729 = !DILocation(line: 880, column: 17, scope: !8725)
!8730 = distinct !{!8730, !8722, !8731}
!8731 = !DILocation(line: 883, column: 9, scope: !8721)
!8732 = !DILocation(line: 884, column: 47, scope: !8708)
!8733 = !DILocation(line: 895, column: 23, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !1212, line: 895, column: 9)
!8735 = distinct !DILexicalBlock(scope: !8711, file: !1212, line: 895, column: 9)
!8736 = !DILocation(line: 895, column: 9, scope: !8735)
!8737 = !DILocation(line: 885, column: 28, scope: !8707)
!8738 = !DILocation(line: 0, scope: !8707)
!8739 = !DILocation(line: 886, column: 26, scope: !8707)
!8740 = !DILocation(line: 887, column: 23, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !1212, line: 887, column: 9)
!8742 = distinct !DILexicalBlock(scope: !8707, file: !1212, line: 887, column: 9)
!8743 = !DILocation(line: 887, column: 9, scope: !8742)
!8744 = !DILocation(line: 888, column: 17, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !1212, line: 888, column: 17)
!8746 = distinct !DILexicalBlock(scope: !8741, file: !1212, line: 887, column: 68)
!8747 = !DILocation(line: 888, column: 30, scope: !8745)
!8748 = !DILocation(line: 888, column: 27, scope: !8745)
!8749 = !DILocation(line: 887, column: 64, scope: !8741)
!8750 = !DILocation(line: 888, column: 17, scope: !8746)
!8751 = distinct !{!8751, !8743, !8752}
!8752 = !DILocation(line: 891, column: 9, scope: !8742)
!8753 = !DILocation(line: 896, column: 17, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !1212, line: 896, column: 17)
!8755 = distinct !DILexicalBlock(scope: !8734, file: !1212, line: 895, column: 38)
!8756 = !DILocation(line: 896, column: 30, scope: !8754)
!8757 = !DILocation(line: 896, column: 27, scope: !8754)
!8758 = !DILocation(line: 895, column: 34, scope: !8734)
!8759 = !DILocation(line: 896, column: 17, scope: !8755)
!8760 = distinct !{!8760, !8736, !8761}
!8761 = !DILocation(line: 899, column: 9, scope: !8735)
!8762 = !DILocation(line: 902, column: 1, scope: !8694)
!8763 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1212, file: !1212, line: 919, type: !8764, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8766)
!8764 = !DISubroutineType(types: !8765)
!8765 = !{null, !88, !88, !61}
!8766 = !{!8767, !8768, !8769, !8770, !8771, !8772, !8773, !8774, !8775, !8776, !8777}
!8767 = !DILocalVariable(name: "Target", arg: 1, scope: !8763, file: !1212, line: 919, type: !88)
!8768 = !DILocalVariable(name: "Data", arg: 2, scope: !8763, file: !1212, line: 919, type: !88)
!8769 = !DILocalVariable(name: "Size", arg: 3, scope: !8763, file: !1212, line: 919, type: !61)
!8770 = !DILocalVariable(name: "D", scope: !8763, file: !1212, line: 921, type: !1382)
!8771 = !DILocalVariable(name: "address", scope: !8763, file: !1212, line: 922, type: !61)
!8772 = !DILocalVariable(name: "p_data", scope: !8763, file: !1212, line: 923, type: !762)
!8773 = !DILocalVariable(name: "cmd1", scope: !8763, file: !1212, line: 924, type: !61)
!8774 = !DILocalVariable(name: "length", scope: !8763, file: !1212, line: 924, type: !61)
!8775 = !DILocalVariable(name: "written", scope: !8763, file: !1212, line: 924, type: !61)
!8776 = !DILocalVariable(name: "status", scope: !8763, file: !1212, line: 925, type: !1434)
!8777 = !DILocalVariable(name: "savedMask", scope: !8763, file: !1212, line: 926, type: !61)
!8778 = !DILocation(line: 0, scope: !8763)
!8779 = !DILocation(line: 921, column: 60, scope: !8763)
!8780 = !DILocation(line: 923, column: 5, scope: !8763)
!8781 = !DILocation(line: 923, column: 19, scope: !8763)
!8782 = !DILocation(line: 924, column: 5, scope: !8763)
!8783 = !DILocation(line: 932, column: 9, scope: !8763)
!8784 = !DILocation(line: 933, column: 8, scope: !8763)
!8785 = !DILocation(line: 933, column: 21, scope: !8763)
!8786 = !DILocation(line: 935, column: 14, scope: !8763)
!8787 = !DILocation(line: 935, column: 5, scope: !8763)
!8788 = !DILocation(line: 922, column: 29, scope: !8763)
!8789 = !DILocation(line: 937, column: 18, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8763, file: !1212, line: 935, column: 23)
!8791 = !DILocation(line: 937, column: 35, scope: !8790)
!8792 = !DILocation(line: 937, column: 74, scope: !8790)
!8793 = !DILocation(line: 937, column: 50, scope: !8790)
!8794 = !DILocation(line: 937, column: 39, scope: !8790)
!8795 = !DILocation(line: 940, column: 35, scope: !8790)
!8796 = !DILocation(line: 940, column: 29, scope: !8790)
!8797 = !DILocation(line: 940, column: 16, scope: !8790)
!8798 = !DILocation(line: 942, column: 18, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8790, file: !1212, line: 942, column: 13)
!8800 = !DILocation(line: 942, column: 29, scope: !8799)
!8801 = !DILocation(line: 942, column: 13, scope: !8790)
!8802 = !DILocation(line: 943, column: 13, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8799, file: !1212, line: 942, column: 55)
!8804 = !DILocation(line: 944, column: 9, scope: !8803)
!8805 = !DILocation(line: 947, column: 16, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8790, file: !1212, line: 947, column: 13)
!8807 = !DILocation(line: 947, column: 29, scope: !8806)
!8808 = !DILocation(line: 0, scope: !8806)
!8809 = !DILocation(line: 947, column: 13, scope: !8790)
!8810 = !DILocation(line: 948, column: 20, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8806, file: !1212, line: 947, column: 35)
!8812 = !DILocation(line: 949, column: 32, scope: !8811)
!8813 = !DILocation(line: 949, column: 40, scope: !8811)
!8814 = !DILocation(line: 949, column: 13, scope: !8811)
!8815 = !DILocation(line: 950, column: 9, scope: !8811)
!8816 = !DILocation(line: 953, column: 20, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8806, file: !1212, line: 952, column: 9)
!8818 = !DILocation(line: 954, column: 32, scope: !8817)
!8819 = !DILocation(line: 954, column: 40, scope: !8817)
!8820 = !DILocation(line: 954, column: 13, scope: !8817)
!8821 = !DILocation(line: 957, column: 21, scope: !8790)
!8822 = !DILocation(line: 963, column: 45, scope: !8790)
!8823 = !DILocation(line: 963, column: 42, scope: !8790)
!8824 = !DILocation(line: 963, column: 40, scope: !8790)
!8825 = !DILocation(line: 963, column: 58, scope: !8790)
!8826 = !DILocation(line: 963, column: 29, scope: !8790)
!8827 = !DILocation(line: 964, column: 28, scope: !8790)
!8828 = !DILocation(line: 965, column: 37, scope: !8790)
!8829 = !DILocation(line: 966, column: 9, scope: !8790)
!8830 = !DILocation(line: 967, column: 26, scope: !8790)
!8831 = !DILocation(line: 967, column: 9, scope: !8790)
!8832 = !DILocation(line: 968, column: 29, scope: !8790)
!8833 = !DILocation(line: 968, column: 9, scope: !8790)
!8834 = !DILocation(line: 972, column: 9, scope: !8790)
!8835 = !DILocation(line: 978, column: 9, scope: !8790)
!8836 = !DILocation(line: 979, column: 50, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8790, file: !1212, line: 978, column: 22)
!8838 = !DILocation(line: 979, column: 55, scope: !8837)
!8839 = !DILocation(line: 979, column: 22, scope: !8837)
!8840 = !DILocation(line: 980, column: 35, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8837, file: !1212, line: 980, column: 17)
!8842 = !DILocation(line: 980, column: 32, scope: !8841)
!8843 = !DILocation(line: 980, column: 30, scope: !8841)
!8844 = !DILocation(line: 980, column: 19, scope: !8841)
!8845 = !DILocation(line: 980, column: 17, scope: !8837)
!8846 = distinct !{!8846, !8835, !8847}
!8847 = !DILocation(line: 983, column: 9, scope: !8790)
!8848 = !DILocation(line: 991, column: 9, scope: !8790)
!8849 = !DILocation(line: 993, column: 19, scope: !8790)
!8850 = !DILocation(line: 993, column: 16, scope: !8790)
!8851 = !DILocation(line: 994, column: 14, scope: !8790)
!8852 = !DILocation(line: 995, column: 17, scope: !8790)
!8853 = distinct !{!8853, !8787, !8854}
!8854 = !DILocation(line: 996, column: 5, scope: !8763)
!8855 = !DILocation(line: 998, column: 21, scope: !8763)
!8856 = !DILocation(line: 1005, column: 9, scope: !8763)
!8857 = !DILocation(line: 1008, column: 1, scope: !8763)
!8858 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1212, file: !1212, line: 1427, type: !8859, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8861)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{null, !1382}
!8861 = !{!8862, !8863}
!8862 = !DILocalVariable(name: "D", arg: 1, scope: !8858, file: !1212, line: 1427, type: !1382)
!8863 = !DILocalVariable(name: "Result", scope: !8858, file: !1212, line: 1429, type: !2050)
!8864 = !DILocation(line: 0, scope: !8858)
!8865 = !DILocation(line: 1430, column: 5, scope: !8858)
!8866 = !DILocation(line: 1431, column: 18, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8858, file: !1212, line: 1430, column: 8)
!8868 = !DILocation(line: 1432, column: 21, scope: !8858)
!8869 = !DILocation(line: 1432, column: 5, scope: !8867)
!8870 = distinct !{!8870, !8865, !8871}
!8871 = !DILocation(line: 1432, column: 43, scope: !8858)
!8872 = !DILocation(line: 1433, column: 1, scope: !8858)
!8873 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1212, file: !1212, line: 3478, type: !8859, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8874)
!8874 = !{!8875}
!8875 = !DILocalVariable(name: "D", arg: 1, scope: !8873, file: !1212, line: 3478, type: !1382)
!8876 = !DILocation(line: 0, scope: !8873)
!8877 = !DILocation(line: 3480, column: 30, scope: !8873)
!8878 = !DILocation(line: 3480, column: 35, scope: !8873)
!8879 = !DILocation(line: 3480, column: 27, scope: !8873)
!8880 = !DILocation(line: 3480, column: 5, scope: !8873)
!8881 = !DILocation(line: 3481, column: 1, scope: !8873)
!8882 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1212, file: !1212, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8883)
!8883 = !{!8884}
!8884 = !DILocalVariable(name: "savedMask", scope: !8882, file: !1212, line: 2384, type: !61)
!8885 = !DILocation(line: 2385, column: 17, scope: !8882)
!8886 = !DILocation(line: 0, scope: !8882)
!8887 = !DILocation(line: 2390, column: 20, scope: !8882)
!8888 = !DILocation(line: 2391, column: 5, scope: !8882)
!8889 = !DILocation(line: 2392, column: 1, scope: !8882)
!8890 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1212, file: !1212, line: 3536, type: !8891, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{!61, !1382, !460}
!8893 = !{!8894, !8895, !8896, !8897}
!8894 = !DILocalVariable(name: "D", arg: 1, scope: !8890, file: !1212, line: 3536, type: !1382)
!8895 = !DILocalVariable(name: "cmd", arg: 2, scope: !8890, file: !1212, line: 3536, type: !460)
!8896 = !DILocalVariable(name: "savedMask", scope: !8890, file: !1212, line: 3538, type: !61)
!8897 = !DILocalVariable(name: "result", scope: !8890, file: !1212, line: 3539, type: !61)
!8898 = !DILocation(line: 0, scope: !8890)
!8899 = !DILocation(line: 3541, column: 17, scope: !8890)
!8900 = !DILocation(line: 3542, column: 22, scope: !8890)
!8901 = !DILocation(line: 3542, column: 5, scope: !8890)
!8902 = !DILocation(line: 3543, column: 35, scope: !8890)
!8903 = !DILocation(line: 3543, column: 33, scope: !8890)
!8904 = !DILocation(line: 3544, column: 25, scope: !8890)
!8905 = !DILocation(line: 3545, column: 24, scope: !8890)
!8906 = !DILocation(line: 3546, column: 25, scope: !8890)
!8907 = !DILocation(line: 3546, column: 5, scope: !8890)
!8908 = !DILocation(line: 3547, column: 42, scope: !8890)
!8909 = !DILocation(line: 3547, column: 60, scope: !8890)
!8910 = !DILocation(line: 3547, column: 14, scope: !8890)
!8911 = !DILocation(line: 3548, column: 5, scope: !8890)
!8912 = !DILocation(line: 3550, column: 5, scope: !8890)
!8913 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1212, file: !1212, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8914)
!8914 = !{!8915}
!8915 = !DILocalVariable(name: "savedMask", scope: !8913, file: !1212, line: 2395, type: !61)
!8916 = !DILocation(line: 2396, column: 17, scope: !8913)
!8917 = !DILocation(line: 0, scope: !8913)
!8918 = !DILocation(line: 2401, column: 20, scope: !8913)
!8919 = !DILocation(line: 2402, column: 5, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !1212, line: 2402, column: 5)
!8921 = distinct !DILexicalBlock(scope: !8913, file: !1212, line: 2402, column: 5)
!8922 = !DILocation(line: 2403, column: 5, scope: !8913)
!8923 = !DILocation(line: 2404, column: 1, scope: !8913)
!8924 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1212, file: !1212, line: 1440, type: !8859, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8925)
!8925 = !{!8926, !8927}
!8926 = !DILocalVariable(name: "D", arg: 1, scope: !8924, file: !1212, line: 1440, type: !1382)
!8927 = !DILocalVariable(name: "savedMask", scope: !8924, file: !1212, line: 1442, type: !1092)
!8928 = !DILocation(line: 0, scope: !8924)
!8929 = !DILocation(line: 1443, column: 17, scope: !8924)
!8930 = !DILocation(line: 1444, column: 9, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8924, file: !1212, line: 1444, column: 9)
!8932 = !DILocation(line: 1444, column: 9, scope: !8924)
!8933 = !DILocation(line: 1445, column: 17, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8931, file: !1212, line: 1444, column: 24)
!8935 = !DILocation(line: 1446, column: 9, scope: !8934)
!8936 = !DILocation(line: 1451, column: 1, scope: !8924)
!8937 = !DILocation(line: 1448, column: 9, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8931, file: !1212, line: 1447, column: 12)
!8939 = !DILocation(line: 1449, column: 9, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8941, file: !1212, line: 1449, column: 9)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !1212, line: 1449, column: 9)
!8942 = distinct !DILexicalBlock(scope: !8938, file: !1212, line: 1449, column: 9)
!8943 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1212, file: !1212, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8944)
!8944 = !{!8945, !8946, !8947, !8948}
!8945 = !DILocalVariable(name: "D", scope: !8943, file: !1212, line: 1029, type: !1382)
!8946 = !DILocalVariable(name: "status", scope: !8943, file: !1212, line: 1030, type: !1434)
!8947 = !DILocalVariable(name: "savedMask", scope: !8943, file: !1212, line: 1031, type: !61)
!8948 = !DILocalVariable(name: "duration", scope: !8949, file: !1212, line: 1231, type: !61)
!8949 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1230, column: 5)
!8950 = !DILocation(line: 0, scope: !8943)
!8951 = !DILocation(line: 1033, column: 17, scope: !8943)
!8952 = !DILocation(line: 1034, column: 8, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1034, column: 8)
!8954 = !DILocation(line: 1034, column: 30, scope: !8953)
!8955 = !DILocation(line: 1034, column: 8, scope: !8943)
!8956 = !DILocation(line: 1039, column: 27, scope: !8943)
!8957 = !DILocation(line: 1058, column: 48, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1055, column: 5)
!8959 = !DILocation(line: 1069, column: 5, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !1212, line: 1069, column: 5)
!8961 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1069, column: 5)
!8962 = !DILocation(line: 1069, column: 5, scope: !8961)
!8963 = !DILocation(line: 1069, column: 5, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8960, file: !1212, line: 1069, column: 5)
!8965 = !DILocation(line: 1075, column: 10, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1075, column: 9)
!8967 = !DILocation(line: 1075, column: 27, scope: !8966)
!8968 = !DILocation(line: 1075, column: 33, scope: !8966)
!8969 = !DILocation(line: 1075, column: 40, scope: !8966)
!8970 = !DILocation(line: 1075, column: 53, scope: !8966)
!8971 = !DILocation(line: 1075, column: 9, scope: !8943)
!8972 = !DILocation(line: 1084, column: 9, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8966, file: !1212, line: 1083, column: 11)
!8974 = !DILocation(line: 1085, column: 50, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8973, file: !1212, line: 1084, column: 21)
!8976 = !DILocation(line: 1085, column: 55, scope: !8975)
!8977 = !DILocation(line: 1085, column: 22, scope: !8975)
!8978 = !DILocation(line: 1086, column: 35, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8975, file: !1212, line: 1086, column: 17)
!8980 = !DILocation(line: 1086, column: 32, scope: !8979)
!8981 = !DILocation(line: 1086, column: 30, scope: !8979)
!8982 = !DILocation(line: 1086, column: 19, scope: !8979)
!8983 = !DILocation(line: 1086, column: 17, scope: !8975)
!8984 = distinct !{!8984, !8972, !8985}
!8985 = !DILocation(line: 1089, column: 9, scope: !8973)
!8986 = !DILocation(line: 1107, column: 11, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1107, column: 9)
!8988 = !DILocation(line: 1107, column: 30, scope: !8987)
!8989 = !DILocation(line: 1117, column: 46, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8987, file: !1212, line: 1107, column: 53)
!8991 = !DILocation(line: 1117, column: 51, scope: !8990)
!8992 = !DILocation(line: 1117, column: 18, scope: !8990)
!8993 = !DILocation(line: 1120, column: 31, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8990, file: !1212, line: 1120, column: 13)
!8995 = !DILocation(line: 1120, column: 28, scope: !8994)
!8996 = !DILocation(line: 1120, column: 26, scope: !8994)
!8997 = !DILocation(line: 1120, column: 15, scope: !8994)
!8998 = !DILocation(line: 1120, column: 13, scope: !8990)
!8999 = !DILocation(line: 1128, column: 13, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8994, file: !1212, line: 1120, column: 55)
!9001 = !DILocation(line: 1131, column: 13, scope: !9000)
!9002 = !DILocation(line: 1132, column: 54, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !9000, file: !1212, line: 1131, column: 23)
!9004 = !DILocation(line: 1132, column: 59, scope: !9003)
!9005 = !DILocation(line: 1132, column: 26, scope: !9003)
!9006 = !DILocation(line: 1133, column: 39, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9003, file: !1212, line: 1133, column: 21)
!9008 = !DILocation(line: 1133, column: 36, scope: !9007)
!9009 = !DILocation(line: 1133, column: 34, scope: !9007)
!9010 = !DILocation(line: 1133, column: 23, scope: !9007)
!9011 = !DILocation(line: 1133, column: 21, scope: !9003)
!9012 = distinct !{!9012, !9001, !9013}
!9013 = !DILocation(line: 1158, column: 13, scope: !9000)
!9014 = !DILocation(line: 1162, column: 21, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9000, file: !1212, line: 1162, column: 17)
!9016 = !DILocation(line: 1162, column: 32, scope: !9015)
!9017 = !DILocation(line: 1162, column: 51, scope: !9015)
!9018 = !DILocation(line: 1162, column: 58, scope: !9015)
!9019 = !DILocation(line: 1162, column: 71, scope: !9015)
!9020 = !DILocation(line: 1162, column: 17, scope: !9000)
!9021 = !DILocation(line: 1164, column: 45, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9015, file: !1212, line: 1162, column: 91)
!9023 = !DILocation(line: 1165, column: 36, scope: !9022)
!9024 = !DILocation(line: 1166, column: 37, scope: !9022)
!9025 = !DILocation(line: 1167, column: 34, scope: !9022)
!9026 = !DILocation(line: 1167, column: 17, scope: !9022)
!9027 = !DILocation(line: 1168, column: 37, scope: !9022)
!9028 = !DILocation(line: 1168, column: 17, scope: !9022)
!9029 = !DILocation(line: 1171, column: 50, scope: !9022)
!9030 = !DILocation(line: 1172, column: 37, scope: !9022)
!9031 = !DILocation(line: 1173, column: 45, scope: !9022)
!9032 = !DILocation(line: 1174, column: 34, scope: !9022)
!9033 = !DILocation(line: 1174, column: 17, scope: !9022)
!9034 = !DILocation(line: 1175, column: 37, scope: !9022)
!9035 = !DILocation(line: 1175, column: 17, scope: !9022)
!9036 = !DILocation(line: 1178, column: 17, scope: !9022)
!9037 = !DILocation(line: 1179, column: 49, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9022, file: !1212, line: 1178, column: 20)
!9039 = !DILocation(line: 1180, column: 40, scope: !9038)
!9040 = !DILocation(line: 1181, column: 41, scope: !9038)
!9041 = !DILocation(line: 1182, column: 38, scope: !9038)
!9042 = !DILocation(line: 1182, column: 21, scope: !9038)
!9043 = !DILocation(line: 1183, column: 41, scope: !9038)
!9044 = !DILocation(line: 1183, column: 21, scope: !9038)
!9045 = !DILocation(line: 1184, column: 43, scope: !9038)
!9046 = !DILocation(line: 1185, column: 17, scope: !9038)
!9047 = distinct !{!9047, !9036, !9048}
!9048 = !DILocation(line: 1185, column: 32, scope: !9022)
!9049 = !DILocation(line: 1194, column: 13, scope: !9000)
!9050 = !DILocation(line: 1195, column: 9, scope: !9000)
!9051 = !DILocation(line: 1197, column: 21, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !1212, line: 1197, column: 17)
!9053 = distinct !DILexicalBlock(scope: !8994, file: !1212, line: 1195, column: 16)
!9054 = !DILocation(line: 1197, column: 32, scope: !9052)
!9055 = !DILocation(line: 1197, column: 53, scope: !9052)
!9056 = !DILocation(line: 1197, column: 60, scope: !9052)
!9057 = !DILocation(line: 1197, column: 76, scope: !9052)
!9058 = !DILocation(line: 1197, column: 17, scope: !9053)
!9059 = !DILocation(line: 1198, column: 54, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9052, file: !1212, line: 1197, column: 98)
!9061 = !DILocation(line: 1198, column: 59, scope: !9060)
!9062 = !DILocation(line: 1198, column: 26, scope: !9060)
!9063 = !DILocation(line: 1199, column: 40, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9060, file: !1212, line: 1199, column: 21)
!9065 = !DILocation(line: 1199, column: 37, scope: !9064)
!9066 = !DILocation(line: 1199, column: 35, scope: !9064)
!9067 = !DILocation(line: 1199, column: 24, scope: !9064)
!9068 = !DILocation(line: 1199, column: 63, scope: !9064)
!9069 = !DILocation(line: 1200, column: 41, scope: !9064)
!9070 = !DILocation(line: 1200, column: 39, scope: !9064)
!9071 = !DILocation(line: 1200, column: 28, scope: !9064)
!9072 = !DILocation(line: 1199, column: 21, scope: !9060)
!9073 = !DILocation(line: 1201, column: 40, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9064, file: !1212, line: 1200, column: 68)
!9075 = !DILocation(line: 1201, column: 21, scope: !9074)
!9076 = !DILocation(line: 1202, column: 40, scope: !9074)
!9077 = !DILocation(line: 1202, column: 21, scope: !9074)
!9078 = !DILocation(line: 1203, column: 17, scope: !9074)
!9079 = !DILocation(line: 1206, column: 13, scope: !9053)
!9080 = !DILocation(line: 1228, column: 25, scope: !8943)
!9081 = !DILocation(line: 1231, column: 29, scope: !8949)
!9082 = !DILocation(line: 0, scope: !8949)
!9083 = !DILocation(line: 1232, column: 13, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !8949, file: !1212, line: 1232, column: 13)
!9085 = !DILocation(line: 1232, column: 43, scope: !9084)
!9086 = !DILocation(line: 1232, column: 13, scope: !8949)
!9087 = !DILocation(line: 1233, column: 43, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9084, file: !1212, line: 1232, column: 55)
!9089 = !DILocation(line: 1234, column: 9, scope: !9088)
!9090 = !DILocation(line: 1237, column: 5, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !1212, line: 1237, column: 5)
!9092 = distinct !DILexicalBlock(scope: !8943, file: !1212, line: 1237, column: 5)
!9093 = !DILocation(line: 1240, column: 5, scope: !8943)
!9094 = !DILocation(line: 1241, column: 1, scope: !8943)
!9095 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1212, file: !1212, line: 3421, type: !8859, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9096)
!9096 = !{!9097, !9098, !9099, !9100}
!9097 = !DILocalVariable(name: "D", arg: 1, scope: !9095, file: !1212, line: 3421, type: !1382)
!9098 = !DILocalVariable(name: "savedMask", scope: !9095, file: !1212, line: 3423, type: !61)
!9099 = !DILocalVariable(name: "currtime", scope: !9095, file: !1212, line: 3424, type: !61)
!9100 = !DILocalVariable(name: "difftime", scope: !9095, file: !1212, line: 3424, type: !61)
!9101 = !DILocation(line: 0, scope: !9095)
!9102 = !DILocation(line: 3427, column: 9, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9095, file: !1212, line: 3427, column: 9)
!9104 = !DILocation(line: 3427, column: 28, scope: !9103)
!9105 = !DILocation(line: 3427, column: 9, scope: !9095)
!9106 = !DILocation(line: 3429, column: 20, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9103, file: !1212, line: 3427, column: 59)
!9108 = !DILocation(line: 3430, column: 27, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9107, file: !1212, line: 3430, column: 13)
!9110 = !DILocation(line: 3430, column: 24, scope: !9109)
!9111 = !DILocation(line: 3430, column: 22, scope: !9109)
!9112 = !DILocation(line: 3430, column: 13, scope: !9107)
!9113 = !DILocation(line: 3431, column: 47, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9109, file: !1212, line: 3430, column: 46)
!9115 = !DILocation(line: 3431, column: 13, scope: !9114)
!9116 = !DILocation(line: 3432, column: 9, scope: !9114)
!9117 = !DILocation(line: 3435, column: 17, scope: !9095)
!9118 = !DILocation(line: 3436, column: 24, scope: !9095)
!9119 = !DILocation(line: 3436, column: 31, scope: !9095)
!9120 = !DILocation(line: 3436, column: 36, scope: !9095)
!9121 = !DILocation(line: 3436, column: 28, scope: !9095)
!9122 = !DILocation(line: 3436, column: 5, scope: !9095)
!9123 = !DILocation(line: 3442, column: 5, scope: !9095)
!9124 = !DILocation(line: 3443, column: 1, scope: !9095)
!9125 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1212, file: !1212, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9126)
!9126 = !{!9127}
!9127 = !DILocalVariable(name: "savedMask", scope: !9125, file: !1212, line: 2407, type: !61)
!9128 = !DILocation(line: 2408, column: 17, scope: !9125)
!9129 = !DILocation(line: 0, scope: !9125)
!9130 = !DILocation(line: 2413, column: 25, scope: !9125)
!9131 = !DILocation(line: 2414, column: 5, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9133, file: !1212, line: 2414, column: 5)
!9133 = distinct !DILexicalBlock(scope: !9125, file: !1212, line: 2414, column: 5)
!9134 = !DILocation(line: 2415, column: 5, scope: !9125)
!9135 = !DILocation(line: 2416, column: 1, scope: !9125)
!9136 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1212, file: !1212, line: 3561, type: !9137, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{null, !1382, !772, !460}
!9139 = !{!9140, !9141, !9142, !9143}
!9140 = !DILocalVariable(name: "D", arg: 1, scope: !9136, file: !1212, line: 3561, type: !1382)
!9141 = !DILocalVariable(name: "cmd", arg: 2, scope: !9136, file: !1212, line: 3561, type: !772)
!9142 = !DILocalVariable(name: "outlen", arg: 3, scope: !9136, file: !1212, line: 3561, type: !460)
!9143 = !DILocalVariable(name: "savedMask", scope: !9136, file: !1212, line: 3563, type: !61)
!9144 = !DILocation(line: 0, scope: !9136)
!9145 = !DILocation(line: 3565, column: 17, scope: !9136)
!9146 = !DILocation(line: 3566, column: 22, scope: !9136)
!9147 = !DILocation(line: 3566, column: 5, scope: !9136)
!9148 = !DILocation(line: 3567, column: 33, scope: !9136)
!9149 = !DILocation(line: 3568, column: 27, scope: !9136)
!9150 = !DILocation(line: 3568, column: 25, scope: !9136)
!9151 = !DILocation(line: 3569, column: 24, scope: !9136)
!9152 = !DILocation(line: 3570, column: 25, scope: !9136)
!9153 = !DILocation(line: 3570, column: 5, scope: !9136)
!9154 = !DILocation(line: 3571, column: 5, scope: !9136)
!9155 = !DILocation(line: 3573, column: 1, scope: !9136)
!9156 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1212, file: !1212, line: 1410, type: !9157, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!2050}
!9159 = !{!9160}
!9160 = !DILocalVariable(name: "savedMask", scope: !9156, file: !1212, line: 1412, type: !1092)
!9161 = !DILocation(line: 1413, column: 17, scope: !9156)
!9162 = !DILocation(line: 0, scope: !9156)
!9163 = !DILocation(line: 1414, column: 9, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9156, file: !1212, line: 1414, column: 9)
!9165 = !DILocation(line: 1414, column: 9, scope: !9156)
!9166 = !DILocation(line: 1415, column: 17, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9164, file: !1212, line: 1414, column: 24)
!9168 = !DILocation(line: 1417, column: 9, scope: !9167)
!9169 = !DILocation(line: 0, scope: !9164)
!9170 = !DILocation(line: 1425, column: 1, scope: !9156)
!9171 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1212, file: !1212, line: 1257, type: !9172, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9174)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{!91}
!9174 = !{!9175, !9176, !9177}
!9175 = !DILocalVariable(name: "D", scope: !9171, file: !1212, line: 1259, type: !1382)
!9176 = !DILocalVariable(name: "status", scope: !9171, file: !1212, line: 1260, type: !1434)
!9177 = !DILocalVariable(name: "result", scope: !9171, file: !1212, line: 1261, type: !91)
!9178 = !DILocation(line: 1259, column: 57, scope: !9171)
!9179 = !DILocation(line: 0, scope: !9171)
!9180 = !DILocation(line: 1263, column: 5, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !1212, line: 1263, column: 5)
!9182 = distinct !DILexicalBlock(scope: !9171, file: !1212, line: 1263, column: 5)
!9183 = !DILocation(line: 1263, column: 5, scope: !9182)
!9184 = !DILocation(line: 1263, column: 5, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9181, file: !1212, line: 1263, column: 5)
!9186 = !DILocation(line: 1265, column: 5, scope: !9171)
!9187 = !DILocation(line: 1267, column: 42, scope: !9171)
!9188 = !DILocation(line: 1267, column: 47, scope: !9171)
!9189 = !DILocation(line: 1267, column: 14, scope: !9171)
!9190 = !DILocation(line: 1269, column: 27, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9171, file: !1212, line: 1269, column: 9)
!9192 = !DILocation(line: 1269, column: 24, scope: !9191)
!9193 = !DILocation(line: 1269, column: 22, scope: !9191)
!9194 = !DILocation(line: 1269, column: 11, scope: !9191)
!9195 = !DILocation(line: 1269, column: 9, scope: !9171)
!9196 = !DILocation(line: 1270, column: 9, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9191, file: !1212, line: 1269, column: 51)
!9198 = !DILocation(line: 1272, column: 5, scope: !9197)
!9199 = !DILocation(line: 1274, column: 5, scope: !9171)
!9200 = !DILocation(line: 1276, column: 5, scope: !9171)
!9201 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1212, file: !1212, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9202)
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "D", scope: !9201, file: !1212, line: 1291, type: !1382)
!9204 = !DILocation(line: 0, scope: !9201)
!9205 = !DILocation(line: 1293, column: 5, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !1212, line: 1293, column: 5)
!9207 = distinct !DILexicalBlock(scope: !9201, file: !1212, line: 1293, column: 5)
!9208 = !DILocation(line: 1293, column: 5, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9206, file: !1212, line: 1293, column: 5)
!9210 = !DILocation(line: 1293, column: 5, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !1212, line: 1293, column: 5)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !1212, line: 1293, column: 5)
!9213 = distinct !DILexicalBlock(scope: !9209, file: !1212, line: 1293, column: 5)
!9214 = !DILocation(line: 1291, column: 60, scope: !9201)
!9215 = !DILocation(line: 1295, column: 5, scope: !9201)
!9216 = !DILocation(line: 1296, column: 1, scope: !9201)
!9217 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1212, file: !1212, line: 3452, type: !8859, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9218)
!9218 = !{!9219, !9220}
!9219 = !DILocalVariable(name: "D", arg: 1, scope: !9217, file: !1212, line: 3452, type: !1382)
!9220 = !DILocalVariable(name: "savedMask", scope: !9217, file: !1212, line: 3454, type: !61)
!9221 = !DILocation(line: 0, scope: !9217)
!9222 = !DILocation(line: 3456, column: 17, scope: !9217)
!9223 = !DILocation(line: 3462, column: 24, scope: !9217)
!9224 = !DILocation(line: 3462, column: 31, scope: !9217)
!9225 = !DILocation(line: 3462, column: 36, scope: !9217)
!9226 = !DILocation(line: 3462, column: 28, scope: !9217)
!9227 = !DILocation(line: 3462, column: 5, scope: !9217)
!9228 = !DILocation(line: 3463, column: 12, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9217, file: !1212, line: 3463, column: 9)
!9230 = !DILocation(line: 3463, column: 27, scope: !9229)
!9231 = !DILocation(line: 3463, column: 9, scope: !9217)
!9232 = !DILocation(line: 3464, column: 28, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !1212, line: 3463, column: 33)
!9234 = !DILocation(line: 3465, column: 5, scope: !9233)
!9235 = !DILocation(line: 3467, column: 5, scope: !9217)
!9236 = !DILocation(line: 3468, column: 5, scope: !9217)
!9237 = !DILocation(line: 3469, column: 1, scope: !9217)
!9238 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1212, file: !1212, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9239)
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "savedMask", scope: !9238, file: !1212, line: 2419, type: !61)
!9241 = !DILocation(line: 2420, column: 17, scope: !9238)
!9242 = !DILocation(line: 0, scope: !9238)
!9243 = !DILocation(line: 2425, column: 25, scope: !9238)
!9244 = !DILocation(line: 2426, column: 5, scope: !9238)
!9245 = !DILocation(line: 2427, column: 1, scope: !9238)
!9246 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1212, file: !1212, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9247)
!9247 = !{!9248, !9249}
!9248 = !DILocalVariable(name: "D", scope: !9246, file: !1212, line: 1310, type: !1382)
!9249 = !DILocalVariable(name: "status", scope: !9246, file: !1212, line: 1311, type: !1434)
!9250 = !DILocation(line: 1310, column: 60, scope: !9246)
!9251 = !DILocation(line: 0, scope: !9246)
!9252 = !DILocation(line: 1313, column: 5, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !1212, line: 1313, column: 5)
!9254 = distinct !DILexicalBlock(scope: !9246, file: !1212, line: 1313, column: 5)
!9255 = !DILocation(line: 1313, column: 5, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9253, file: !1212, line: 1313, column: 5)
!9257 = !DILocation(line: 1313, column: 5, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !1212, line: 1313, column: 5)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !1212, line: 1313, column: 5)
!9260 = distinct !DILexicalBlock(scope: !9256, file: !1212, line: 1313, column: 5)
!9261 = !DILocation(line: 1315, column: 5, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !1212, line: 1315, column: 5)
!9263 = distinct !DILexicalBlock(scope: !9246, file: !1212, line: 1315, column: 5)
!9264 = !DILocation(line: 1315, column: 5, scope: !9263)
!9265 = !DILocation(line: 1315, column: 5, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !1212, line: 1315, column: 5)
!9267 = !DILocation(line: 1317, column: 5, scope: !9246)
!9268 = !DILocation(line: 1319, column: 5, scope: !9246)
!9269 = !DILocation(line: 1320, column: 46, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9246, file: !1212, line: 1319, column: 15)
!9271 = !DILocation(line: 1320, column: 51, scope: !9270)
!9272 = !DILocation(line: 1320, column: 18, scope: !9270)
!9273 = !DILocation(line: 1322, column: 31, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9270, file: !1212, line: 1322, column: 13)
!9275 = !DILocation(line: 1322, column: 28, scope: !9274)
!9276 = !DILocation(line: 1322, column: 26, scope: !9274)
!9277 = !DILocation(line: 1322, column: 15, scope: !9274)
!9278 = !DILocation(line: 1322, column: 13, scope: !9270)
!9279 = distinct !{!9279, !9268, !9280}
!9280 = !DILocation(line: 1325, column: 5, scope: !9246)
!9281 = !DILocation(line: 1327, column: 5, scope: !9246)
!9282 = !DILocation(line: 1328, column: 1, scope: !9246)
!9283 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1212, file: !1212, line: 1394, type: !8859, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9284)
!9284 = !{!9285}
!9285 = !DILocalVariable(name: "D", arg: 1, scope: !9283, file: !1212, line: 1394, type: !1382)
!9286 = !DILocation(line: 0, scope: !9283)
!9287 = !DILocation(line: 1401, column: 1, scope: !9283)
!9288 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1212, file: !1212, line: 1556, type: !9289, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9310)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{!1092, !9291, !1382}
!9291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9292, size: 32)
!9292 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !9293)
!9293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !9294)
!9294 = !{!9295, !9296, !9297, !9298, !9299, !9300, !9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309}
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9293, file: !1408, line: 106, baseType: !1682, size: 32)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9293, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9293, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9293, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9293, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9293, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9293, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9293, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9293, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9293, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9293, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9293, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9293, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9293, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9293, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!9310 = !{!9311, !9312, !9313}
!9311 = !DILocalVariable(name: "driver", arg: 1, scope: !9288, file: !1212, line: 1556, type: !9291)
!9312 = !DILocalVariable(name: "D", arg: 2, scope: !9288, file: !1212, line: 1556, type: !1382)
!9313 = !DILocalVariable(name: "smap", scope: !9288, file: !1212, line: 1558, type: !1433)
!9314 = !DILocation(line: 0, scope: !9288)
!9315 = !DILocation(line: 1561, column: 15, scope: !9288)
!9316 = !DILocation(line: 1562, column: 22, scope: !9288)
!9317 = !DILocation(line: 1563, column: 5, scope: !9288)
!9318 = !DILocation(line: 1563, column: 22, scope: !9288)
!9319 = !DILocation(line: 1565, column: 5, scope: !9288)
!9320 = !DILocation(line: 1565, column: 22, scope: !9288)
!9321 = !DILocation(line: 1566, column: 5, scope: !9288)
!9322 = !DILocation(line: 1566, column: 22, scope: !9288)
!9323 = !DILocation(line: 1568, column: 5, scope: !9288)
!9324 = !DILocation(line: 1568, column: 22, scope: !9288)
!9325 = !DILocation(line: 1569, column: 5, scope: !9288)
!9326 = !DILocation(line: 1569, column: 22, scope: !9288)
!9327 = !DILocation(line: 1570, column: 5, scope: !9288)
!9328 = !DILocation(line: 1570, column: 22, scope: !9288)
!9329 = !DILocation(line: 1573, column: 8, scope: !9288)
!9330 = !DILocation(line: 1573, column: 13, scope: !9288)
!9331 = !DILocation(line: 1573, column: 28, scope: !9288)
!9332 = !DILocation(line: 1574, column: 8, scope: !9288)
!9333 = !DILocation(line: 1574, column: 13, scope: !9288)
!9334 = !DILocation(line: 1574, column: 29, scope: !9288)
!9335 = !DILocation(line: 1575, column: 8, scope: !9288)
!9336 = !DILocation(line: 1575, column: 13, scope: !9288)
!9337 = !DILocation(line: 1575, column: 30, scope: !9288)
!9338 = !DILocation(line: 1576, column: 8, scope: !9288)
!9339 = !DILocation(line: 1576, column: 13, scope: !9288)
!9340 = !DILocation(line: 1576, column: 23, scope: !9288)
!9341 = !DILocation(line: 1577, column: 8, scope: !9288)
!9342 = !DILocation(line: 1577, column: 13, scope: !9288)
!9343 = !DILocation(line: 1577, column: 24, scope: !9288)
!9344 = !DILocation(line: 1578, column: 8, scope: !9288)
!9345 = !DILocation(line: 1578, column: 13, scope: !9288)
!9346 = !DILocation(line: 1578, column: 25, scope: !9288)
!9347 = !DILocation(line: 1579, column: 8, scope: !9288)
!9348 = !DILocation(line: 1579, column: 23, scope: !9288)
!9349 = !DILocation(line: 1583, column: 10, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9288, file: !1212, line: 1583, column: 9)
!9351 = !DILocation(line: 1583, column: 24, scope: !9350)
!9352 = !DILocation(line: 1583, column: 32, scope: !9350)
!9353 = !DILocation(line: 1583, column: 35, scope: !9350)
!9354 = !DILocation(line: 1583, column: 49, scope: !9350)
!9355 = !DILocation(line: 1583, column: 9, scope: !9288)
!9356 = !DILocation(line: 1586, column: 12, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9350, file: !1212, line: 1583, column: 59)
!9358 = !DILocation(line: 1586, column: 17, scope: !9357)
!9359 = !DILocation(line: 1586, column: 25, scope: !9357)
!9360 = !DILocation(line: 1587, column: 12, scope: !9357)
!9361 = !DILocation(line: 1587, column: 17, scope: !9357)
!9362 = !DILocation(line: 1587, column: 24, scope: !9357)
!9363 = !DILocation(line: 1591, column: 10, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9288, file: !1212, line: 1591, column: 9)
!9365 = !DILocation(line: 1589, column: 5, scope: !9357)
!9366 = !DILocation(line: 1600, column: 32, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9288, file: !1212, line: 1600, column: 9)
!9368 = !DILocation(line: 1600, column: 35, scope: !9367)
!9369 = !DILocation(line: 1600, column: 49, scope: !9367)
!9370 = !DILocation(line: 1600, column: 9, scope: !9288)
!9371 = !DILocation(line: 1601, column: 12, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9367, file: !1212, line: 1600, column: 59)
!9373 = !DILocation(line: 1601, column: 17, scope: !9372)
!9374 = !DILocation(line: 1601, column: 25, scope: !9372)
!9375 = !DILocation(line: 1602, column: 12, scope: !9372)
!9376 = !DILocation(line: 1602, column: 17, scope: !9372)
!9377 = !DILocation(line: 1602, column: 24, scope: !9372)
!9378 = !DILocation(line: 1603, column: 5, scope: !9372)
!9379 = !DILocation(line: 1607, column: 8, scope: !9288)
!9380 = !DILocation(line: 1607, column: 20, scope: !9288)
!9381 = !DILocation(line: 1622, column: 5, scope: !9288)
!9382 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1212, file: !1212, line: 4553, type: !1484, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9383)
!9383 = !{!9384, !9385, !9386, !9387}
!9384 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9382, file: !1212, line: 4553, type: !88)
!9385 = !DILocalVariable(name: "D", scope: !9382, file: !1212, line: 4555, type: !1382)
!9386 = !DILocalVariable(name: "unlock", scope: !9382, file: !1212, line: 4556, type: !61)
!9387 = !DILocalVariable(name: "cmd", scope: !9382, file: !1212, line: 4557, type: !460)
!9388 = !DILocation(line: 0, scope: !9382)
!9389 = !DILocation(line: 4555, column: 24, scope: !9382)
!9390 = !DILocation(line: 4557, column: 5, scope: !9382)
!9391 = !DILocation(line: 4558, column: 12, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9382, file: !1212, line: 4558, column: 9)
!9393 = !DILocation(line: 4558, column: 9, scope: !9392)
!9394 = !DILocation(line: 4558, column: 23, scope: !9392)
!9395 = !DILocation(line: 4558, column: 31, scope: !9392)
!9396 = !DILocation(line: 4558, column: 34, scope: !9392)
!9397 = !DILocation(line: 4558, column: 48, scope: !9392)
!9398 = !DILocation(line: 4558, column: 56, scope: !9392)
!9399 = !DILocation(line: 4558, column: 59, scope: !9392)
!9400 = !DILocation(line: 4558, column: 73, scope: !9392)
!9401 = !DILocation(line: 4558, column: 9, scope: !9382)
!9402 = !DILocation(line: 4563, column: 24, scope: !9382)
!9403 = !DILocation(line: 4563, column: 31, scope: !9382)
!9404 = !DILocation(line: 4563, column: 36, scope: !9382)
!9405 = !DILocation(line: 4563, column: 28, scope: !9382)
!9406 = !DILocation(line: 4563, column: 5, scope: !9382)
!9407 = !DILocation(line: 4564, column: 5, scope: !9382)
!9408 = !DILocation(line: 4567, column: 28, scope: !9382)
!9409 = !DILocation(line: 4567, column: 36, scope: !9382)
!9410 = !DILocation(line: 4567, column: 41, scope: !9382)
!9411 = !DILocation(line: 4567, column: 5, scope: !9382)
!9412 = !DILocation(line: 4568, column: 17, scope: !9382)
!9413 = !DILocation(line: 4568, column: 22, scope: !9382)
!9414 = !DILocation(line: 4568, column: 14, scope: !9382)
!9415 = !DILocation(line: 4569, column: 22, scope: !9382)
!9416 = !DILocation(line: 4569, column: 54, scope: !9382)
!9417 = !DILocation(line: 4569, column: 65, scope: !9382)
!9418 = !DILocation(line: 4569, column: 62, scope: !9382)
!9419 = !DILocation(line: 4569, column: 87, scope: !9382)
!9420 = !DILocation(line: 4569, column: 85, scope: !9382)
!9421 = !DILocation(line: 4569, column: 60, scope: !9382)
!9422 = !DILocation(line: 4569, column: 58, scope: !9382)
!9423 = !DILocation(line: 4569, column: 51, scope: !9382)
!9424 = !DILocation(line: 4572, column: 24, scope: !9382)
!9425 = !DILocation(line: 4572, column: 5, scope: !9382)
!9426 = !DILocation(line: 4573, column: 5, scope: !9382)
!9427 = !DILocation(line: 4575, column: 5, scope: !9382)
!9428 = !DILocation(line: 4576, column: 1, scope: !9382)
!9429 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1212, file: !1212, line: 4488, type: !8859, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9430)
!9430 = !{!9431, !9432}
!9431 = !DILocalVariable(name: "D", arg: 1, scope: !9429, file: !1212, line: 4488, type: !1382)
!9432 = !DILocalVariable(name: "status", scope: !9429, file: !1212, line: 4490, type: !1434)
!9433 = !DILocation(line: 0, scope: !9429)
!9434 = !DILocation(line: 4490, column: 5, scope: !9429)
!9435 = !DILocation(line: 4491, column: 5, scope: !9429)
!9436 = !DILocation(line: 4492, column: 32, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9429, file: !1212, line: 4491, column: 10)
!9438 = !DILocation(line: 4492, column: 40, scope: !9437)
!9439 = !DILocation(line: 4492, column: 45, scope: !9437)
!9440 = !DILocation(line: 4492, column: 9, scope: !9437)
!9441 = !DILocation(line: 4493, column: 20, scope: !9429)
!9442 = !DILocation(line: 4493, column: 32, scope: !9429)
!9443 = !DILocation(line: 4493, column: 29, scope: !9429)
!9444 = !DILocation(line: 4493, column: 27, scope: !9429)
!9445 = !DILocation(line: 4493, column: 16, scope: !9429)
!9446 = !DILocation(line: 4493, column: 5, scope: !9437)
!9447 = distinct !{!9447, !9435, !9448}
!9448 = !DILocation(line: 4493, column: 54, scope: !9429)
!9449 = !DILocation(line: 4494, column: 1, scope: !9429)
!9450 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1212, file: !1212, line: 1742, type: !9289, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9451)
!9451 = !{!9452, !9453, !9454}
!9452 = !DILocalVariable(name: "driver", arg: 1, scope: !9450, file: !1212, line: 1742, type: !9291)
!9453 = !DILocalVariable(name: "D", arg: 2, scope: !9450, file: !1212, line: 1742, type: !1382)
!9454 = !DILocalVariable(name: "smap", scope: !9450, file: !1212, line: 1744, type: !1433)
!9455 = !DILocation(line: 0, scope: !9450)
!9456 = !DILocation(line: 1747, column: 15, scope: !9450)
!9457 = !DILocation(line: 1748, column: 22, scope: !9450)
!9458 = !DILocation(line: 1749, column: 5, scope: !9450)
!9459 = !DILocation(line: 1749, column: 22, scope: !9450)
!9460 = !DILocation(line: 1750, column: 5, scope: !9450)
!9461 = !DILocation(line: 1750, column: 22, scope: !9450)
!9462 = !DILocation(line: 1751, column: 5, scope: !9450)
!9463 = !DILocation(line: 1751, column: 22, scope: !9450)
!9464 = !DILocation(line: 1752, column: 5, scope: !9450)
!9465 = !DILocation(line: 1752, column: 22, scope: !9450)
!9466 = !DILocation(line: 1753, column: 5, scope: !9450)
!9467 = !DILocation(line: 1753, column: 22, scope: !9450)
!9468 = !DILocation(line: 1756, column: 8, scope: !9450)
!9469 = !DILocation(line: 1756, column: 13, scope: !9450)
!9470 = !DILocation(line: 1756, column: 24, scope: !9450)
!9471 = !DILocation(line: 1758, column: 8, scope: !9450)
!9472 = !DILocation(line: 1758, column: 13, scope: !9450)
!9473 = !DILocation(line: 1758, column: 28, scope: !9450)
!9474 = !DILocation(line: 1759, column: 8, scope: !9450)
!9475 = !DILocation(line: 1759, column: 13, scope: !9450)
!9476 = !DILocation(line: 1759, column: 29, scope: !9450)
!9477 = !DILocation(line: 1760, column: 8, scope: !9450)
!9478 = !DILocation(line: 1760, column: 13, scope: !9450)
!9479 = !DILocation(line: 1760, column: 23, scope: !9450)
!9480 = !DILocation(line: 1761, column: 8, scope: !9450)
!9481 = !DILocation(line: 1761, column: 13, scope: !9450)
!9482 = !DILocation(line: 1761, column: 24, scope: !9450)
!9483 = !DILocation(line: 1762, column: 8, scope: !9450)
!9484 = !DILocation(line: 1762, column: 13, scope: !9450)
!9485 = !DILocation(line: 1762, column: 21, scope: !9450)
!9486 = !DILocation(line: 1763, column: 8, scope: !9450)
!9487 = !DILocation(line: 1763, column: 13, scope: !9450)
!9488 = !DILocation(line: 1763, column: 20, scope: !9450)
!9489 = !DILocation(line: 1764, column: 8, scope: !9450)
!9490 = !DILocation(line: 1764, column: 23, scope: !9450)
!9491 = !DILocation(line: 1768, column: 8, scope: !9450)
!9492 = !DILocation(line: 1768, column: 20, scope: !9450)
!9493 = !DILocation(line: 1770, column: 5, scope: !9450)
!9494 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1212, file: !1212, line: 1775, type: !9289, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9495)
!9495 = !{!9496, !9497}
!9496 = !DILocalVariable(name: "driver", arg: 1, scope: !9494, file: !1212, line: 1775, type: !9291)
!9497 = !DILocalVariable(name: "D", arg: 2, scope: !9494, file: !1212, line: 1775, type: !1382)
!9498 = !DILocation(line: 0, scope: !9494)
!9499 = !DILocation(line: 1793, column: 5, scope: !9494)
!9500 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1212, file: !1212, line: 1932, type: !9289, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9501)
!9501 = !{!9502, !9503}
!9502 = !DILocalVariable(name: "driver", arg: 1, scope: !9500, file: !1212, line: 1932, type: !9291)
!9503 = !DILocalVariable(name: "D", arg: 2, scope: !9500, file: !1212, line: 1932, type: !1382)
!9504 = !DILocation(line: 0, scope: !9500)
!9505 = !DILocation(line: 1935, column: 13, scope: !9500)
!9506 = !DILocation(line: 1935, column: 25, scope: !9500)
!9507 = !DILocation(line: 1936, column: 13, scope: !9500)
!9508 = !DILocation(line: 1936, column: 22, scope: !9500)
!9509 = !DILocation(line: 1937, column: 13, scope: !9500)
!9510 = !DILocation(line: 1937, column: 23, scope: !9500)
!9511 = !DILocation(line: 1939, column: 13, scope: !9500)
!9512 = !DILocation(line: 1939, column: 24, scope: !9500)
!9513 = !DILocation(line: 1940, column: 13, scope: !9500)
!9514 = !DILocation(line: 1940, column: 25, scope: !9500)
!9515 = !DILocation(line: 1945, column: 13, scope: !9500)
!9516 = !DILocation(line: 1945, column: 32, scope: !9500)
!9517 = !DILocation(line: 1946, column: 13, scope: !9500)
!9518 = !DILocation(line: 1946, column: 30, scope: !9500)
!9519 = !DILocation(line: 1947, column: 13, scope: !9500)
!9520 = !DILocation(line: 1947, column: 26, scope: !9500)
!9521 = !DILocation(line: 1948, column: 13, scope: !9500)
!9522 = !DILocation(line: 1948, column: 25, scope: !9500)
!9523 = !DILocation(line: 1949, column: 13, scope: !9500)
!9524 = !DILocation(line: 1949, column: 24, scope: !9500)
!9525 = !DILocation(line: 1956, column: 13, scope: !9500)
!9526 = !DILocation(line: 1956, column: 23, scope: !9500)
!9527 = !DILocation(line: 1957, column: 13, scope: !9500)
!9528 = !DILocation(line: 1957, column: 28, scope: !9500)
!9529 = !DILocation(line: 1960, column: 13, scope: !9500)
!9530 = !DILocation(line: 1960, column: 30, scope: !9500)
!9531 = !DILocation(line: 1961, column: 13, scope: !9500)
!9532 = !DILocation(line: 1961, column: 30, scope: !9500)
!9533 = !DILocation(line: 1962, column: 13, scope: !9500)
!9534 = !DILocation(line: 1962, column: 20, scope: !9500)
!9535 = !DILocation(line: 1968, column: 9, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9500, file: !1212, line: 1968, column: 9)
!9537 = !DILocation(line: 1968, column: 36, scope: !9536)
!9538 = !DILocation(line: 1968, column: 9, scope: !9500)
!9539 = !DILocation(line: 1971, column: 12, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9536, file: !1212, line: 1970, column: 5)
!9541 = !DILocation(line: 1971, column: 25, scope: !9540)
!9542 = !DILocation(line: 1979, column: 8, scope: !9500)
!9543 = !DILocation(line: 1979, column: 13, scope: !9500)
!9544 = !DILocation(line: 1979, column: 25, scope: !9500)
!9545 = !DILocation(line: 1980, column: 8, scope: !9500)
!9546 = !DILocation(line: 1980, column: 13, scope: !9500)
!9547 = !DILocation(line: 1980, column: 24, scope: !9500)
!9548 = !DILocation(line: 1981, column: 8, scope: !9500)
!9549 = !DILocation(line: 1981, column: 13, scope: !9500)
!9550 = !DILocation(line: 1981, column: 24, scope: !9500)
!9551 = !DILocation(line: 1982, column: 8, scope: !9500)
!9552 = !DILocation(line: 1982, column: 13, scope: !9500)
!9553 = !DILocation(line: 1982, column: 22, scope: !9500)
!9554 = !DILocation(line: 1983, column: 8, scope: !9500)
!9555 = !DILocation(line: 1983, column: 13, scope: !9500)
!9556 = !DILocation(line: 1983, column: 21, scope: !9500)
!9557 = !DILocation(line: 1984, column: 8, scope: !9500)
!9558 = !DILocation(line: 1984, column: 13, scope: !9500)
!9559 = !DILocation(line: 1984, column: 22, scope: !9500)
!9560 = !DILocation(line: 1985, column: 8, scope: !9500)
!9561 = !DILocation(line: 1985, column: 13, scope: !9500)
!9562 = !DILocation(line: 1985, column: 22, scope: !9500)
!9563 = !DILocation(line: 1986, column: 8, scope: !9500)
!9564 = !DILocation(line: 1986, column: 13, scope: !9500)
!9565 = !DILocation(line: 1986, column: 21, scope: !9500)
!9566 = !DILocation(line: 1987, column: 8, scope: !9500)
!9567 = !DILocation(line: 1987, column: 13, scope: !9500)
!9568 = !DILocation(line: 1987, column: 20, scope: !9500)
!9569 = !DILocation(line: 1988, column: 8, scope: !9500)
!9570 = !DILocation(line: 1988, column: 13, scope: !9500)
!9571 = !DILocation(line: 1988, column: 25, scope: !9500)
!9572 = !DILocation(line: 1989, column: 8, scope: !9500)
!9573 = !DILocation(line: 1989, column: 13, scope: !9500)
!9574 = !DILocation(line: 1989, column: 22, scope: !9500)
!9575 = !DILocation(line: 1990, column: 8, scope: !9500)
!9576 = !DILocation(line: 1990, column: 13, scope: !9500)
!9577 = !DILocation(line: 1990, column: 22, scope: !9500)
!9578 = !DILocation(line: 1993, column: 8, scope: !9500)
!9579 = !DILocation(line: 1993, column: 13, scope: !9500)
!9580 = !DILocation(line: 1993, column: 26, scope: !9500)
!9581 = !DILocation(line: 1996, column: 8, scope: !9500)
!9582 = !DILocation(line: 1996, column: 20, scope: !9500)
!9583 = !DILocation(line: 1999, column: 8, scope: !9500)
!9584 = !DILocation(line: 1999, column: 24, scope: !9500)
!9585 = !DILocation(line: 2000, column: 8, scope: !9500)
!9586 = !DILocation(line: 2000, column: 19, scope: !9500)
!9587 = !DILocation(line: 2001, column: 8, scope: !9500)
!9588 = !DILocation(line: 2001, column: 24, scope: !9500)
!9589 = !DILocation(line: 2002, column: 8, scope: !9500)
!9590 = !DILocation(line: 2002, column: 23, scope: !9500)
!9591 = !DILocation(line: 2004, column: 5, scope: !9500)
!9592 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1212, file: !1212, line: 2160, type: !1683, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9593)
!9593 = !{!9594, !9595, !9596, !9609, !9610, !9611}
!9594 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9592, file: !1212, line: 2160, type: !88)
!9595 = !DILocalVariable(name: "Info", arg: 2, scope: !9592, file: !1212, line: 2160, type: !88)
!9596 = !DILocalVariable(name: "FlashInfo", scope: !9592, file: !1212, line: 2162, type: !9597)
!9597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9598, size: 32)
!9598 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !9599)
!9599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !9600)
!9600 = !{!9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608}
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9599, file: !1408, line: 91, baseType: !61, size: 32)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9599, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9599, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9599, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9599, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9599, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9599, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9599, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!9609 = !DILocalVariable(name: "D", scope: !9592, file: !1212, line: 2163, type: !1382)
!9610 = !DILocalVariable(name: "i", scope: !9592, file: !1212, line: 2164, type: !61)
!9611 = !DILocalVariable(name: "result", scope: !9592, file: !1212, line: 2166, type: !1092)
!9612 = !DILocation(line: 0, scope: !9592)
!9613 = !DILocation(line: 2163, column: 37, scope: !9592)
!9614 = !DILocation(line: 2202, column: 16, scope: !9592)
!9615 = !DILocation(line: 2202, column: 28, scope: !9592)
!9616 = !DILocation(line: 2204, column: 15, scope: !9592)
!9617 = !DILocation(line: 2204, column: 29, scope: !9592)
!9618 = !DILocation(line: 2204, column: 39, scope: !9592)
!9619 = !DILocation(line: 2204, column: 5, scope: !9592)
!9620 = !DILocation(line: 2205, column: 9, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9592, file: !1212, line: 2204, column: 45)
!9622 = !DILocation(line: 2205, column: 33, scope: !9621)
!9623 = !DILocation(line: 2206, column: 41, scope: !9621)
!9624 = !DILocation(line: 2206, column: 55, scope: !9621)
!9625 = !DILocation(line: 2206, column: 9, scope: !9621)
!9626 = !DILocation(line: 2206, column: 36, scope: !9621)
!9627 = !DILocation(line: 2207, column: 38, scope: !9621)
!9628 = !DILocation(line: 2207, column: 52, scope: !9621)
!9629 = !DILocation(line: 2207, column: 32, scope: !9621)
!9630 = !DILocation(line: 2209, column: 10, scope: !9621)
!9631 = distinct !{!9631, !9619, !9632}
!9632 = !DILocation(line: 2210, column: 5, scope: !9592)
!9633 = !DILocation(line: 2212, column: 16, scope: !9592)
!9634 = !DILocation(line: 2212, column: 32, scope: !9592)
!9635 = !DILocation(line: 2213, column: 16, scope: !9592)
!9636 = !DILocation(line: 2213, column: 25, scope: !9592)
!9637 = !DILocation(line: 2236, column: 5, scope: !9592)
!9638 = !DILocation(line: 2238, column: 5, scope: !9592)
!9639 = !DILocation(line: 2239, column: 18, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9592, file: !1212, line: 2238, column: 10)
!9641 = !DILocation(line: 2240, column: 34, scope: !9592)
!9642 = !DILocation(line: 2240, column: 5, scope: !9640)
!9643 = distinct !{!9643, !9638, !9644}
!9644 = !DILocation(line: 2240, column: 43, scope: !9592)
!9645 = !DILocation(line: 2259, column: 5, scope: !9592)
!9646 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1212, file: !1212, line: 2275, type: !1484, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9647)
!9647 = !{!9648, !9649, !9650, !9651}
!9648 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9646, file: !1212, line: 2275, type: !88)
!9649 = !DILocalVariable(name: "D", scope: !9646, file: !1212, line: 2278, type: !1382)
!9650 = !DILocalVariable(name: "status", scope: !9646, file: !1212, line: 2279, type: !1434)
!9651 = !DILocalVariable(name: "saved_mask", scope: !9646, file: !1212, line: 2280, type: !61)
!9652 = !DILocation(line: 0, scope: !9646)
!9653 = !DILocation(line: 2278, column: 33, scope: !9646)
!9654 = !DILocation(line: 2286, column: 5, scope: !9646)
!9655 = !DILocation(line: 2293, column: 9, scope: !9646)
!9656 = !DILocation(line: 2294, column: 26, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9646, file: !1212, line: 2293, column: 19)
!9658 = !DILocation(line: 2297, column: 17, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9657, file: !1212, line: 2297, column: 17)
!9660 = !DILocation(line: 2297, column: 17, scope: !9657)
!9661 = !DILocation(line: 2298, column: 17, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9659, file: !1212, line: 2297, column: 36)
!9663 = !DILocation(line: 2299, column: 37, scope: !9662)
!9664 = !DILocation(line: 2300, column: 13, scope: !9662)
!9665 = !DILocation(line: 2303, column: 50, scope: !9657)
!9666 = !DILocation(line: 2303, column: 55, scope: !9657)
!9667 = !DILocation(line: 2303, column: 22, scope: !9657)
!9668 = !DILocation(line: 2306, column: 35, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9657, file: !1212, line: 2306, column: 17)
!9670 = !DILocation(line: 2306, column: 32, scope: !9669)
!9671 = !DILocation(line: 2306, column: 30, scope: !9669)
!9672 = !DILocation(line: 2306, column: 19, scope: !9669)
!9673 = !DILocation(line: 2306, column: 17, scope: !9657)
!9674 = !DILocation(line: 2307, column: 17, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !1212, line: 2306, column: 59)
!9676 = !DILocation(line: 2308, column: 17, scope: !9675)
!9677 = !DILocation(line: 2315, column: 12, scope: !9646)
!9678 = !DILocation(line: 2315, column: 21, scope: !9646)
!9679 = !DILocation(line: 2325, column: 9, scope: !9646)
!9680 = !DILocation(line: 2326, column: 5, scope: !9646)
!9681 = !DILocation(line: 2311, column: 17, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9669, file: !1212, line: 2310, column: 20)
!9683 = distinct !{!9683, !9655, !9684}
!9684 = !DILocation(line: 2313, column: 9, scope: !9646)
!9685 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1212, file: !1212, line: 2819, type: !1692, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9686)
!9686 = !{!9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9699, !9700}
!9687 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9685, file: !1212, line: 2819, type: !88)
!9688 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9685, file: !1212, line: 2819, type: !61)
!9689 = !DILocalVariable(name: "result", scope: !9685, file: !1212, line: 2821, type: !1092)
!9690 = !DILocalVariable(name: "blocksize", scope: !9685, file: !1212, line: 2822, type: !61)
!9691 = !DILocalVariable(name: "eraseunit", scope: !9685, file: !1212, line: 2823, type: !61)
!9692 = !DILocalVariable(name: "eraseaddr", scope: !9685, file: !1212, line: 2824, type: !61)
!9693 = !DILocalVariable(name: "iteration", scope: !9685, file: !1212, line: 2825, type: !61)
!9694 = !DILocalVariable(name: "D", scope: !9685, file: !1212, line: 2826, type: !1382)
!9695 = !DILocalVariable(name: "erase_block", scope: !9685, file: !1212, line: 2827, type: !61)
!9696 = !DILocalVariable(name: "a", scope: !9697, file: !1212, line: 2853, type: !61)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !1212, line: 2852, column: 56)
!9698 = distinct !DILexicalBlock(scope: !9685, file: !1212, line: 2852, column: 9)
!9699 = !DILocalVariable(name: "b", scope: !9697, file: !1212, line: 2853, type: !61)
!9700 = !DILocalVariable(name: "c", scope: !9697, file: !1212, line: 2853, type: !61)
!9701 = !DILocation(line: 0, scope: !9685)
!9702 = !DILocation(line: 2826, column: 30, scope: !9685)
!9703 = !DILocation(line: 2829, column: 5, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !1212, line: 2829, column: 5)
!9705 = distinct !DILexicalBlock(scope: !9685, file: !1212, line: 2829, column: 5)
!9706 = !DILocation(line: 2829, column: 5, scope: !9705)
!9707 = !DILocation(line: 2829, column: 5, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !1212, line: 2829, column: 5)
!9709 = !DILocation(line: 2836, column: 9, scope: !9685)
!9710 = !DILocation(line: 2838, column: 8, scope: !9685)
!9711 = !DILocation(line: 2838, column: 21, scope: !9685)
!9712 = !DILocation(line: 2847, column: 5, scope: !9685)
!9713 = !DILocation(line: 2848, column: 18, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9685, file: !1212, line: 2847, column: 10)
!9715 = !DILocation(line: 2850, column: 34, scope: !9685)
!9716 = !DILocation(line: 2850, column: 5, scope: !9714)
!9717 = distinct !{!9717, !9712, !9718}
!9718 = !DILocation(line: 2850, column: 43, scope: !9685)
!9719 = !DILocation(line: 2839, column: 32, scope: !9685)
!9720 = !DILocation(line: 2861, column: 53, scope: !9697)
!9721 = !DILocation(line: 2861, column: 40, scope: !9697)
!9722 = !DILocation(line: 2861, column: 25, scope: !9697)
!9723 = !DILocation(line: 2874, column: 16, scope: !9697)
!9724 = !DILocation(line: 2874, column: 13, scope: !9697)
!9725 = !DILocation(line: 0, scope: !9697)
!9726 = !DILocation(line: 2875, column: 24, scope: !9697)
!9727 = !DILocation(line: 2877, column: 21, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9697, file: !1212, line: 2877, column: 13)
!9729 = !DILocation(line: 2877, column: 13, scope: !9697)
!9730 = !DILocation(line: 2879, column: 23, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !1212, line: 2879, column: 21)
!9732 = distinct !DILexicalBlock(scope: !9733, file: !1212, line: 2878, column: 120)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !1212, line: 2878, column: 13)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1212, line: 2878, column: 13)
!9735 = distinct !DILexicalBlock(scope: !9728, file: !1212, line: 2877, column: 27)
!9736 = !DILocation(line: 2879, column: 21, scope: !9732)
!9737 = !DILocation(line: 2878, column: 48, scope: !9733)
!9738 = !DILocation(line: 2878, column: 83, scope: !9733)
!9739 = !DILocation(line: 2878, column: 113, scope: !9733)
!9740 = !DILocation(line: 2878, column: 35, scope: !9733)
!9741 = !DILocation(line: 2878, column: 13, scope: !9734)
!9742 = distinct !{!9742, !9741, !9743}
!9743 = !DILocation(line: 2883, column: 13, scope: !9734)
!9744 = !DILocation(line: 2863, column: 19, scope: !9697)
!9745 = !DILocation(line: 2825, column: 24, scope: !9685)
!9746 = !DILocation(line: 2886, column: 9, scope: !9697)
!9747 = !DILocation(line: 2888, column: 36, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9697, file: !1212, line: 2886, column: 31)
!9749 = !DILocation(line: 2888, column: 41, scope: !9748)
!9750 = !DILocation(line: 2889, column: 17, scope: !9748)
!9751 = !DILocation(line: 2891, column: 36, scope: !9748)
!9752 = !DILocation(line: 2891, column: 41, scope: !9748)
!9753 = !DILocation(line: 2892, column: 17, scope: !9748)
!9754 = !DILocation(line: 2894, column: 36, scope: !9748)
!9755 = !DILocation(line: 2894, column: 41, scope: !9748)
!9756 = !DILocation(line: 2895, column: 17, scope: !9748)
!9757 = !DILocation(line: 2897, column: 17, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !1212, line: 2897, column: 17)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !1212, line: 2897, column: 17)
!9760 = distinct !DILexicalBlock(scope: !9748, file: !1212, line: 2897, column: 17)
!9761 = !DILocation(line: 0, scope: !9748)
!9762 = !DILocation(line: 2906, column: 5, scope: !9685)
!9763 = !DILocation(line: 2908, column: 32, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9685, file: !1212, line: 2906, column: 27)
!9765 = !DILocation(line: 2908, column: 37, scope: !9764)
!9766 = !DILocation(line: 2909, column: 13, scope: !9764)
!9767 = !DILocation(line: 2911, column: 32, scope: !9764)
!9768 = !DILocation(line: 2911, column: 37, scope: !9764)
!9769 = !DILocation(line: 2912, column: 13, scope: !9764)
!9770 = !DILocation(line: 2914, column: 32, scope: !9764)
!9771 = !DILocation(line: 2914, column: 37, scope: !9764)
!9772 = !DILocation(line: 2915, column: 13, scope: !9764)
!9773 = !DILocation(line: 0, scope: !9764)
!9774 = !DILocation(line: 2921, column: 56, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !1212, line: 2921, column: 5)
!9776 = distinct !DILexicalBlock(scope: !9685, file: !1212, line: 2921, column: 5)
!9777 = !DILocation(line: 2921, column: 5, scope: !9776)
!9778 = !DILocation(line: 2921, column: 35, scope: !9776)
!9779 = !DILocation(line: 2921, column: 22, scope: !9776)
!9780 = !DILocation(line: 2922, column: 9, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9775, file: !1212, line: 2921, column: 99)
!9782 = !DILocation(line: 2929, column: 9, scope: !9781)
!9783 = !DILocation(line: 2938, column: 26, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9781, file: !1212, line: 2929, column: 26)
!9785 = !DILocation(line: 2939, column: 37, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9784, file: !1212, line: 2939, column: 17)
!9787 = !DILocation(line: 2939, column: 17, scope: !9784)
!9788 = distinct !{!9788, !9782, !9789}
!9789 = !DILocation(line: 2943, column: 9, scope: !9781)
!9790 = !DILocation(line: 2921, column: 71, scope: !9775)
!9791 = !DILocation(line: 2921, column: 85, scope: !9775)
!9792 = distinct !{!9792, !9777, !9793}
!9793 = !DILocation(line: 2983, column: 5, scope: !9776)
!9794 = !DILocation(line: 2985, column: 21, scope: !9685)
!9795 = !DILocation(line: 2992, column: 9, scope: !9685)
!9796 = !DILocation(line: 3000, column: 5, scope: !9685)
!9797 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1212, file: !1212, line: 2533, type: !1696, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9798)
!9798 = !{!9799, !9800, !9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812}
!9799 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9797, file: !1212, line: 2533, type: !88)
!9800 = !DILocalVariable(name: "Address", arg: 2, scope: !9797, file: !1212, line: 2533, type: !88)
!9801 = !DILocalVariable(name: "Data", arg: 3, scope: !9797, file: !1212, line: 2533, type: !88)
!9802 = !DILocalVariable(name: "Length", arg: 4, scope: !9797, file: !1212, line: 2533, type: !61)
!9803 = !DILocalVariable(name: "D", scope: !9797, file: !1212, line: 2535, type: !1382)
!9804 = !DILocalVariable(name: "savedMask", scope: !9797, file: !1212, line: 2536, type: !61)
!9805 = !DILocalVariable(name: "address", scope: !9797, file: !1212, line: 2537, type: !61)
!9806 = !DILocalVariable(name: "p_data", scope: !9797, file: !1212, line: 2538, type: !762)
!9807 = !DILocalVariable(name: "p_data_first", scope: !9797, file: !1212, line: 2539, type: !762)
!9808 = !DILocalVariable(name: "result", scope: !9797, file: !1212, line: 2540, type: !1092)
!9809 = !DILocalVariable(name: "written", scope: !9797, file: !1212, line: 2541, type: !61)
!9810 = !DILocalVariable(name: "length", scope: !9797, file: !1212, line: 2542, type: !61)
!9811 = !DILocalVariable(name: "cmd1", scope: !9797, file: !1212, line: 2543, type: !61)
!9812 = !DILocalVariable(name: "j", scope: !9813, file: !1212, line: 2599, type: !61)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !1212, line: 2597, column: 61)
!9814 = distinct !DILexicalBlock(scope: !9815, file: !1212, line: 2597, column: 13)
!9815 = distinct !DILexicalBlock(scope: !9797, file: !1212, line: 2583, column: 25)
!9816 = !DILocation(line: 0, scope: !9797)
!9817 = !DILocation(line: 2535, column: 26, scope: !9797)
!9818 = !DILocation(line: 2537, column: 37, scope: !9797)
!9819 = !DILocation(line: 2538, column: 5, scope: !9797)
!9820 = !DILocation(line: 2538, column: 19, scope: !9797)
!9821 = !DILocation(line: 2542, column: 5, scope: !9797)
!9822 = !DILocation(line: 2545, column: 5, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !1212, line: 2545, column: 5)
!9824 = distinct !DILexicalBlock(scope: !9797, file: !1212, line: 2545, column: 5)
!9825 = !DILocation(line: 2545, column: 5, scope: !9824)
!9826 = !DILocation(line: 2545, column: 5, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9823, file: !1212, line: 2545, column: 5)
!9828 = !DILocation(line: 2567, column: 9, scope: !9797)
!9829 = !DILocation(line: 2569, column: 8, scope: !9797)
!9830 = !DILocation(line: 2569, column: 21, scope: !9797)
!9831 = !DILocation(line: 2576, column: 5, scope: !9797)
!9832 = !DILocation(line: 2577, column: 18, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9797, file: !1212, line: 2576, column: 10)
!9834 = !DILocation(line: 2579, column: 34, scope: !9797)
!9835 = !DILocation(line: 2579, column: 5, scope: !9833)
!9836 = distinct !{!9836, !9831, !9837}
!9837 = !DILocation(line: 2579, column: 43, scope: !9797)
!9838 = !DILocation(line: 2583, column: 14, scope: !9797)
!9839 = !DILocation(line: 2583, column: 5, scope: !9797)
!9840 = !DILocation(line: 2584, column: 27, scope: !9815)
!9841 = !DILocation(line: 2592, column: 18, scope: !9815)
!9842 = !DILocation(line: 2592, column: 35, scope: !9815)
!9843 = !DILocation(line: 2592, column: 74, scope: !9815)
!9844 = !DILocation(line: 2592, column: 50, scope: !9815)
!9845 = !DILocation(line: 2592, column: 39, scope: !9815)
!9846 = !DILocation(line: 2595, column: 37, scope: !9815)
!9847 = !DILocation(line: 2595, column: 29, scope: !9815)
!9848 = !DILocation(line: 2595, column: 16, scope: !9815)
!9849 = !DILocation(line: 2597, column: 13, scope: !9814)
!9850 = !DILocation(line: 2597, column: 30, scope: !9814)
!9851 = !DILocation(line: 2597, column: 13, scope: !9815)
!9852 = !DILocation(line: 0, scope: !9813)
!9853 = !DILocation(line: 2600, column: 27, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9855, file: !1212, line: 2600, column: 13)
!9855 = distinct !DILexicalBlock(scope: !9813, file: !1212, line: 2600, column: 13)
!9856 = !DILocation(line: 2600, column: 13, scope: !9855)
!9857 = !DILocation(line: 2601, column: 38, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9854, file: !1212, line: 2600, column: 42)
!9859 = !DILocation(line: 2601, column: 17, scope: !9858)
!9860 = !DILocation(line: 2601, column: 36, scope: !9858)
!9861 = !DILocation(line: 2600, column: 38, scope: !9854)
!9862 = distinct !{!9862, !9856, !9863}
!9863 = !DILocation(line: 2602, column: 13, scope: !9855)
!9864 = !DILocation(line: 0, scope: !9815)
!9865 = !DILocation(line: 2606, column: 18, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9815, file: !1212, line: 2606, column: 13)
!9867 = !DILocation(line: 2606, column: 29, scope: !9866)
!9868 = !DILocation(line: 2606, column: 13, scope: !9815)
!9869 = !DILocation(line: 2607, column: 13, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9866, file: !1212, line: 2606, column: 55)
!9871 = !DILocation(line: 2608, column: 9, scope: !9870)
!9872 = !DILocation(line: 2613, column: 16, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9815, file: !1212, line: 2613, column: 13)
!9874 = !DILocation(line: 2613, column: 29, scope: !9873)
!9875 = !DILocation(line: 0, scope: !9873)
!9876 = !DILocation(line: 2613, column: 13, scope: !9815)
!9877 = !DILocation(line: 2614, column: 20, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9873, file: !1212, line: 2613, column: 35)
!9879 = !DILocation(line: 2615, column: 32, scope: !9878)
!9880 = !DILocation(line: 2615, column: 40, scope: !9878)
!9881 = !DILocation(line: 2615, column: 13, scope: !9878)
!9882 = !DILocation(line: 2616, column: 9, scope: !9878)
!9883 = !DILocation(line: 2619, column: 20, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9873, file: !1212, line: 2618, column: 9)
!9885 = !DILocation(line: 2620, column: 32, scope: !9884)
!9886 = !DILocation(line: 2620, column: 40, scope: !9884)
!9887 = !DILocation(line: 2620, column: 13, scope: !9884)
!9888 = !DILocation(line: 2626, column: 21, scope: !9815)
!9889 = !DILocation(line: 2633, column: 37, scope: !9815)
!9890 = !DILocation(line: 2634, column: 45, scope: !9815)
!9891 = !DILocation(line: 2634, column: 42, scope: !9815)
!9892 = !DILocation(line: 2634, column: 40, scope: !9815)
!9893 = !DILocation(line: 2634, column: 58, scope: !9815)
!9894 = !DILocation(line: 2634, column: 29, scope: !9815)
!9895 = !DILocation(line: 2635, column: 28, scope: !9815)
!9896 = !DILocation(line: 2636, column: 9, scope: !9815)
!9897 = !DILocation(line: 2638, column: 26, scope: !9815)
!9898 = !DILocation(line: 2638, column: 9, scope: !9815)
!9899 = !DILocation(line: 2639, column: 29, scope: !9815)
!9900 = !DILocation(line: 2639, column: 9, scope: !9815)
!9901 = !DILocation(line: 2662, column: 9, scope: !9815)
!9902 = !DILocation(line: 2670, column: 9, scope: !9815)
!9903 = !DILocation(line: 2676, column: 89, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9815, file: !1212, line: 2670, column: 13)
!9905 = !DILocation(line: 2676, column: 26, scope: !9904)
!9906 = !DILocation(line: 2678, column: 36, scope: !9815)
!9907 = !DILocation(line: 2678, column: 9, scope: !9904)
!9908 = distinct !{!9908, !9902, !9909}
!9909 = !DILocation(line: 2678, column: 45, scope: !9815)
!9910 = !DILocation(line: 2718, column: 19, scope: !9815)
!9911 = !DILocation(line: 2718, column: 16, scope: !9815)
!9912 = !DILocation(line: 2719, column: 16, scope: !9815)
!9913 = !DILocation(line: 2722, column: 31, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9815, file: !1212, line: 2722, column: 13)
!9915 = !DILocation(line: 2722, column: 13, scope: !9815)
!9916 = distinct !{!9916, !9839, !9917}
!9917 = !DILocation(line: 2725, column: 5, scope: !9797)
!9918 = !DILocation(line: 2748, column: 21, scope: !9797)
!9919 = !DILocation(line: 2755, column: 9, scope: !9797)
!9920 = !DILocation(line: 2757, column: 16, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9797, file: !1212, line: 2757, column: 9)
!9922 = !DILocation(line: 2761, column: 1, scope: !9797)
!9923 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1212, file: !1212, line: 3019, type: !1692, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9924)
!9924 = !{!9925, !9926}
!9925 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9923, file: !1212, line: 3019, type: !88)
!9926 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9923, file: !1212, line: 3019, type: !61)
!9927 = !DILocation(line: 0, scope: !9923)
!9928 = !DILocation(line: 3021, column: 5, scope: !9923)
!9929 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1212, file: !1212, line: 3124, type: !1701, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9930)
!9930 = !{!9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938}
!9931 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9929, file: !1212, line: 3124, type: !88)
!9932 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9929, file: !1212, line: 3124, type: !61)
!9933 = !DILocalVariable(name: "result", scope: !9929, file: !1212, line: 3126, type: !1092)
!9934 = !DILocalVariable(name: "savedMask", scope: !9929, file: !1212, line: 3127, type: !61)
!9935 = !DILocalVariable(name: "D", scope: !9929, file: !1212, line: 3128, type: !1382)
!9936 = !DILocalVariable(name: "status_busy", scope: !9929, file: !1212, line: 3129, type: !1434)
!9937 = !DILocalVariable(name: "status_suspend", scope: !9929, file: !1212, line: 3129, type: !1434)
!9938 = !DILocalVariable(name: "check_status", scope: !9939, file: !1212, line: 3141, type: !1434)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !1212, line: 3140, column: 56)
!9940 = distinct !DILexicalBlock(scope: !9929, file: !1212, line: 3140, column: 9)
!9941 = !DILocation(line: 0, scope: !9929)
!9942 = !DILocation(line: 3128, column: 47, scope: !9929)
!9943 = !DILocation(line: 3131, column: 5, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !1212, line: 3131, column: 5)
!9945 = distinct !DILexicalBlock(scope: !9929, file: !1212, line: 3131, column: 5)
!9946 = !DILocation(line: 3131, column: 5, scope: !9945)
!9947 = !DILocation(line: 3131, column: 5, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9944, file: !1212, line: 3131, column: 5)
!9949 = !DILocation(line: 3134, column: 50, scope: !9929)
!9950 = !DILocation(line: 3134, column: 55, scope: !9929)
!9951 = !DILocation(line: 3134, column: 22, scope: !9929)
!9952 = !DILocation(line: 3135, column: 50, scope: !9929)
!9953 = !DILocation(line: 3135, column: 55, scope: !9929)
!9954 = !DILocation(line: 3135, column: 22, scope: !9929)
!9955 = !DILocation(line: 3138, column: 17, scope: !9929)
!9956 = !DILocation(line: 3140, column: 32, scope: !9940)
!9957 = !DILocation(line: 3140, column: 29, scope: !9940)
!9958 = !DILocation(line: 3140, column: 27, scope: !9940)
!9959 = !DILocation(line: 3140, column: 11, scope: !9940)
!9960 = !DILocation(line: 3140, column: 9, scope: !9929)
!9961 = !DILocation(line: 3141, column: 34, scope: !9939)
!9962 = !DILocation(line: 3141, column: 60, scope: !9939)
!9963 = !DILocation(line: 3141, column: 58, scope: !9939)
!9964 = !DILocation(line: 0, scope: !9939)
!9965 = !DILocation(line: 3144, column: 37, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9939, file: !1212, line: 3144, column: 13)
!9967 = !DILocation(line: 3144, column: 35, scope: !9966)
!9968 = !DILocation(line: 3144, column: 16, scope: !9966)
!9969 = !DILocation(line: 3144, column: 52, scope: !9966)
!9970 = !DILocation(line: 3145, column: 21, scope: !9966)
!9971 = !DILocation(line: 3145, column: 38, scope: !9966)
!9972 = !DILocation(line: 3147, column: 13, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !1212, line: 3147, column: 13)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !1212, line: 3147, column: 13)
!9975 = distinct !DILexicalBlock(scope: !9966, file: !1212, line: 3145, column: 61)
!9976 = !DILocation(line: 3147, column: 13, scope: !9974)
!9977 = !DILocation(line: 3147, column: 13, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9973, file: !1212, line: 3147, column: 13)
!9979 = !DILocation(line: 3150, column: 13, scope: !9975)
!9980 = !DILocation(line: 3151, column: 33, scope: !9975)
!9981 = !DILocation(line: 3153, column: 9, scope: !9975)
!9982 = !DILocation(line: 3155, column: 20, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !1212, line: 3155, column: 17)
!9984 = distinct !DILexicalBlock(scope: !9966, file: !1212, line: 3153, column: 16)
!9985 = !DILocation(line: 3155, column: 31, scope: !9983)
!9986 = !DILocation(line: 3155, column: 17, scope: !9984)
!9987 = !DILocation(line: 3156, column: 36, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9983, file: !1212, line: 3155, column: 54)
!9989 = !DILocation(line: 3156, column: 17, scope: !9988)
!9990 = !DILocation(line: 3157, column: 36, scope: !9988)
!9991 = !DILocation(line: 3157, column: 17, scope: !9988)
!9992 = !DILocation(line: 3158, column: 13, scope: !9988)
!9993 = !DILocation(line: 3191, column: 5, scope: !9929)
!9994 = !DILocation(line: 3193, column: 9, scope: !9929)
!9995 = !DILocation(line: 3160, column: 13, scope: !9984)
!9996 = !DILocation(line: 3173, column: 13, scope: !9984)
!9997 = !DILocation(line: 3194, column: 18, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !1212, line: 3193, column: 32)
!9999 = distinct !DILexicalBlock(scope: !9929, file: !1212, line: 3193, column: 9)
!10000 = !DILocation(line: 3195, column: 5, scope: !9998)
!10001 = !DILocation(line: 3197, column: 5, scope: !9929)
!10002 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1212, file: !1212, line: 3225, type: !1692, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10003)
!10003 = !{!10004, !10005, !10006, !10007, !10008}
!10004 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10002, file: !1212, line: 3225, type: !88)
!10005 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10002, file: !1212, line: 3225, type: !61)
!10006 = !DILocalVariable(name: "D", scope: !10002, file: !1212, line: 3227, type: !1382)
!10007 = !DILocalVariable(name: "status", scope: !10002, file: !1212, line: 3228, type: !1434)
!10008 = !DILocalVariable(name: "savedMask", scope: !10002, file: !1212, line: 3229, type: !61)
!10009 = !DILocation(line: 0, scope: !10002)
!10010 = !DILocation(line: 3227, column: 30, scope: !10002)
!10011 = !DILocation(line: 3231, column: 17, scope: !10002)
!10012 = !DILocation(line: 3234, column: 5, scope: !10002)
!10013 = !DILocation(line: 3238, column: 5, scope: !10002)
!10014 = !DILocation(line: 3239, column: 46, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10002, file: !1212, line: 3238, column: 15)
!10016 = !DILocation(line: 3239, column: 51, scope: !10015)
!10017 = !DILocation(line: 3239, column: 18, scope: !10015)
!10018 = !DILocation(line: 3241, column: 31, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10015, file: !1212, line: 3241, column: 13)
!10020 = !DILocation(line: 3241, column: 28, scope: !10019)
!10021 = !DILocation(line: 3241, column: 26, scope: !10019)
!10022 = !DILocation(line: 3241, column: 15, scope: !10019)
!10023 = !DILocation(line: 3241, column: 13, scope: !10015)
!10024 = distinct !{!10024, !10013, !10025}
!10025 = !DILocation(line: 3244, column: 5, scope: !10002)
!10026 = !DILocation(line: 3246, column: 5, scope: !10002)
!10027 = !DILocation(line: 3248, column: 5, scope: !10002)
!10028 = !DILocation(line: 3250, column: 5, scope: !10002)
!10029 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1212, file: !1212, line: 3277, type: !1692, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10030)
!10030 = !{!10031, !10032, !10033}
!10031 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10029, file: !1212, line: 3277, type: !88)
!10032 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10029, file: !1212, line: 3277, type: !61)
!10033 = !DILocalVariable(name: "D", scope: !10029, file: !1212, line: 3279, type: !1382)
!10034 = !DILocation(line: 0, scope: !10029)
!10035 = !DILocation(line: 3279, column: 29, scope: !10029)
!10036 = !DILocation(line: 3281, column: 5, scope: !10029)
!10037 = !DILocation(line: 3282, column: 5, scope: !10029)
!10038 = !DILocation(line: 3283, column: 5, scope: !10029)
!10039 = !DILocation(line: 3285, column: 5, scope: !10029)
!10040 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1212, file: !1212, line: 3332, type: !1718, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10041)
!10041 = !{!10042, !10043, !10044}
!10042 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10040, file: !1212, line: 3332, type: !88)
!10043 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !10040, file: !1212, line: 3332, type: !88)
!10044 = !DILocalVariable(name: "ACTION", arg: 3, scope: !10040, file: !1212, line: 3332, type: !61)
!10045 = !DILocation(line: 0, scope: !10040)
!10046 = !DILocation(line: 3334, column: 5, scope: !10040)
!10047 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1212, file: !1212, line: 2350, type: !1726, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10048)
!10048 = !{!10049, !10050, !10051, !10052}
!10049 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10047, file: !1212, line: 2350, type: !88)
!10050 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !10047, file: !1212, line: 2350, type: !61)
!10051 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !10047, file: !1212, line: 2350, type: !88)
!10052 = !DILocalVariable(name: "D", scope: !10047, file: !1212, line: 2352, type: !1382)
!10053 = !DILocation(line: 0, scope: !10047)
!10054 = !DILocation(line: 2353, column: 9, scope: !10047)
!10055 = !DILocation(line: 2354, column: 12, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10057, file: !1212, line: 2353, column: 51)
!10057 = distinct !DILexicalBlock(scope: !10047, file: !1212, line: 2353, column: 9)
!10058 = !DILocation(line: 2354, column: 9, scope: !10056)
!10059 = !DILocation(line: 2355, column: 5, scope: !10056)
!10060 = !DILocation(line: 2356, column: 17, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !1212, line: 2356, column: 13)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !1212, line: 2355, column: 71)
!10063 = distinct !DILexicalBlock(scope: !10057, file: !1212, line: 2355, column: 16)
!10064 = !DILocation(line: 2356, column: 14, scope: !10061)
!10065 = !DILocation(line: 2356, column: 28, scope: !10061)
!10066 = !DILocation(line: 2356, column: 49, scope: !10061)
!10067 = !DILocation(line: 2356, column: 56, scope: !10061)
!10068 = !DILocation(line: 2356, column: 70, scope: !10061)
!10069 = !DILocation(line: 2356, column: 80, scope: !10061)
!10070 = !DILocation(line: 2356, column: 13, scope: !10062)
!10071 = !DILocation(line: 2361, column: 9, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !1212, line: 2361, column: 9)
!10073 = distinct !DILexicalBlock(scope: !10074, file: !1212, line: 2361, column: 9)
!10074 = distinct !DILexicalBlock(scope: !10075, file: !1212, line: 2361, column: 9)
!10075 = distinct !DILexicalBlock(scope: !10063, file: !1212, line: 2359, column: 12)
!10076 = !DILocation(line: 2363, column: 5, scope: !10047)
!10077 = !DILocation(line: 2364, column: 1, scope: !10047)
!10078 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1212, file: !1212, line: 3355, type: !1484, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10079)
!10079 = !{!10080, !10081, !10082}
!10080 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10078, file: !1212, line: 3355, type: !88)
!10081 = !DILocalVariable(name: "D", scope: !10078, file: !1212, line: 3357, type: !1382)
!10082 = !DILocalVariable(name: "status", scope: !10078, file: !1212, line: 3358, type: !975)
!10083 = !DILocation(line: 0, scope: !10078)
!10084 = !DILocation(line: 3366, column: 12, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10078, file: !1212, line: 3366, column: 9)
!10086 = !DILocation(line: 3366, column: 17, scope: !10085)
!10087 = !DILocation(line: 3366, column: 9, scope: !10085)
!10088 = !DILocation(line: 3366, column: 9, scope: !10078)
!10089 = !DILocation(line: 3357, column: 25, scope: !10078)
!10090 = !DILocation(line: 3367, column: 18, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10085, file: !1212, line: 3366, column: 33)
!10092 = !DILocation(line: 3368, column: 25, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10091, file: !1212, line: 3368, column: 13)
!10094 = !DILocation(line: 3368, column: 22, scope: !10093)
!10095 = !DILocation(line: 3368, column: 20, scope: !10093)
!10096 = !DILocation(line: 3368, column: 13, scope: !10091)
!10097 = !DILocation(line: 3373, column: 5, scope: !10078)
!10098 = !DILocation(line: 3374, column: 1, scope: !10078)
!10099 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1212, file: !1212, line: 3044, type: !10100, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10102)
!10100 = !DISubroutineType(types: !10101)
!10101 = !{!1092, !88, !61, !460}
!10102 = !{!10103, !10104, !10105, !10106, !10107, !10108, !10109, !10110}
!10103 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10099, file: !1212, line: 3044, type: !88)
!10104 = !DILocalVariable(name: "addr", arg: 2, scope: !10099, file: !1212, line: 3044, type: !61)
!10105 = !DILocalVariable(name: "data", arg: 3, scope: !10099, file: !1212, line: 3044, type: !460)
!10106 = !DILocalVariable(name: "savedMask", scope: !10099, file: !1212, line: 3046, type: !61)
!10107 = !DILocalVariable(name: "D", scope: !10099, file: !1212, line: 3047, type: !1382)
!10108 = !DILocalVariable(name: "result", scope: !10099, file: !1212, line: 3048, type: !1092)
!10109 = !DILocalVariable(name: "check_data", scope: !10099, file: !1212, line: 3049, type: !460)
!10110 = !DILocalVariable(name: "status_busy", scope: !10099, file: !1212, line: 3050, type: !975)
!10111 = !DILocation(line: 0, scope: !10099)
!10112 = !DILocation(line: 3047, column: 43, scope: !10099)
!10113 = !DILocation(line: 3053, column: 47, scope: !10099)
!10114 = !DILocation(line: 3053, column: 52, scope: !10099)
!10115 = !DILocation(line: 3053, column: 19, scope: !10099)
!10116 = !DILocation(line: 3056, column: 9, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10099, file: !1212, line: 3056, column: 9)
!10118 = !DILocation(line: 3056, column: 9, scope: !10099)
!10119 = !DILocation(line: 3058, column: 9, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !1212, line: 3058, column: 9)
!10121 = distinct !DILexicalBlock(scope: !10122, file: !1212, line: 3058, column: 9)
!10122 = distinct !DILexicalBlock(scope: !10117, file: !1212, line: 3056, column: 28)
!10123 = !DILocation(line: 3058, column: 9, scope: !10121)
!10124 = !DILocation(line: 3058, column: 9, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10120, file: !1212, line: 3058, column: 9)
!10126 = !DILocation(line: 3060, column: 9, scope: !10122)
!10127 = !DILocation(line: 3062, column: 29, scope: !10122)
!10128 = !DILocation(line: 3063, column: 5, scope: !10122)
!10129 = !DILocation(line: 3065, column: 38, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10117, file: !1212, line: 3065, column: 15)
!10131 = !DILocation(line: 3065, column: 35, scope: !10130)
!10132 = !DILocation(line: 3065, column: 33, scope: !10130)
!10133 = !DILocation(line: 3065, column: 17, scope: !10130)
!10134 = !DILocation(line: 3065, column: 15, scope: !10117)
!10135 = !DILocation(line: 3066, column: 21, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10130, file: !1212, line: 3065, column: 62)
!10137 = !DILocation(line: 3068, column: 9, scope: !10136)
!10138 = !DILocation(line: 3071, column: 23, scope: !10136)
!10139 = !DILocation(line: 3071, column: 22, scope: !10136)
!10140 = !DILocation(line: 3073, column: 24, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10136, file: !1212, line: 3073, column: 13)
!10142 = !DILocation(line: 3073, column: 13, scope: !10136)
!10143 = !DILocation(line: 3078, column: 16, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !1212, line: 3078, column: 16)
!10145 = distinct !DILexicalBlock(scope: !10141, file: !1212, line: 3075, column: 16)
!10146 = !DILocation(line: 3078, column: 16, scope: !10145)
!10147 = !DILocation(line: 3081, column: 58, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10144, file: !1212, line: 3078, column: 46)
!10149 = !DILocation(line: 3081, column: 17, scope: !10148)
!10150 = !DILocation(line: 3082, column: 22, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10148, file: !1212, line: 3082, column: 21)
!10152 = !DILocation(line: 3082, column: 49, scope: !10151)
!10153 = !DILocation(line: 3082, column: 21, scope: !10148)
!10154 = !DILocation(line: 3088, column: 9, scope: !10136)
!10155 = !DILocation(line: 3091, column: 9, scope: !10099)
!10156 = !DILocation(line: 3092, column: 13, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10158, file: !1212, line: 3092, column: 13)
!10158 = distinct !DILexicalBlock(scope: !10099, file: !1212, line: 3091, column: 9)
!10159 = !DILocation(line: 3092, column: 33, scope: !10157)
!10160 = !DILocation(line: 3092, column: 13, scope: !10158)
!10161 = !DILocation(line: 3106, column: 5, scope: !10099)
!10162 = !DILocation(line: 3107, column: 1, scope: !10099)
!10163 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1212, file: !1212, line: 3497, type: !10164, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{null, !1382, !61}
!10166 = !{!10167, !10168, !10169}
!10167 = !DILocalVariable(name: "D", arg: 1, scope: !10163, file: !1212, line: 3497, type: !1382)
!10168 = !DILocalVariable(name: "addr", arg: 2, scope: !10163, file: !1212, line: 3497, type: !61)
!10169 = !DILocalVariable(name: "savedMask", scope: !10163, file: !1212, line: 3499, type: !61)
!10170 = !DILocation(line: 0, scope: !10163)
!10171 = !DILocation(line: 3501, column: 14, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10163, file: !1212, line: 3501, column: 9)
!10173 = !DILocation(line: 3501, column: 25, scope: !10172)
!10174 = !DILocation(line: 3501, column: 9, scope: !10163)
!10175 = !DILocation(line: 3502, column: 9, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10172, file: !1212, line: 3501, column: 51)
!10177 = !DILocation(line: 3503, column: 5, scope: !10176)
!10178 = !DILocation(line: 3507, column: 17, scope: !10163)
!10179 = !DILocation(line: 3516, column: 5, scope: !10163)
!10180 = !DILocation(line: 3517, column: 31, scope: !10163)
!10181 = !DILocation(line: 3517, column: 38, scope: !10163)
!10182 = !DILocation(line: 3517, column: 43, scope: !10163)
!10183 = !DILocation(line: 3517, column: 59, scope: !10163)
!10184 = !DILocation(line: 3517, column: 56, scope: !10163)
!10185 = !DILocation(line: 3517, column: 5, scope: !10163)
!10186 = !DILocation(line: 3523, column: 5, scope: !10163)
!10187 = !DILocation(line: 3524, column: 1, scope: !10163)
!10188 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1212, file: !1212, line: 2018, type: !9289, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10189)
!10189 = !{!10190, !10191, !10192}
!10190 = !DILocalVariable(name: "driver", arg: 1, scope: !10188, file: !1212, line: 2018, type: !9291)
!10191 = !DILocalVariable(name: "D", arg: 2, scope: !10188, file: !1212, line: 2018, type: !1382)
!10192 = !DILocalVariable(name: "result", scope: !10188, file: !1212, line: 2020, type: !1092)
!10193 = !DILocation(line: 0, scope: !10188)
!10194 = !DILocation(line: 2022, column: 13, scope: !10188)
!10195 = !DILocation(line: 2022, column: 5, scope: !10188)
!10196 = !DILocation(line: 2031, column: 16, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10188, file: !1212, line: 2022, column: 31)
!10198 = !DILocation(line: 2031, column: 27, scope: !10197)
!10199 = !DILocation(line: 2033, column: 22, scope: !10197)
!10200 = !DILocation(line: 2034, column: 13, scope: !10197)
!10201 = !DILocation(line: 2049, column: 16, scope: !10197)
!10202 = !DILocation(line: 2049, column: 27, scope: !10197)
!10203 = !DILocation(line: 2051, column: 23, scope: !10197)
!10204 = !DILocation(line: 2053, column: 13, scope: !10197)
!10205 = !DILocation(line: 2058, column: 22, scope: !10197)
!10206 = !DILocation(line: 2059, column: 13, scope: !10197)
!10207 = !DILocation(line: 2079, column: 13, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !1212, line: 2079, column: 13)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !1212, line: 2079, column: 13)
!10210 = distinct !DILexicalBlock(scope: !10197, file: !1212, line: 2079, column: 13)
!10211 = !DILocation(line: 2083, column: 5, scope: !10188)
!10212 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1212, file: !1212, line: 2100, type: !10213, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10215)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!1092, !9291, !1382, !61, !61}
!10215 = !{!10216, !10217, !10218, !10219, !10220}
!10216 = !DILocalVariable(name: "driver", arg: 1, scope: !10212, file: !1212, line: 2100, type: !9291)
!10217 = !DILocalVariable(name: "D", arg: 2, scope: !10212, file: !1212, line: 2100, type: !1382)
!10218 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !10212, file: !1212, line: 2100, type: !61)
!10219 = !DILocalVariable(name: "parameter", arg: 4, scope: !10212, file: !1212, line: 2100, type: !61)
!10220 = !DILocalVariable(name: "result", scope: !10212, file: !1212, line: 2102, type: !1092)
!10221 = !DILocation(line: 0, scope: !10212)
!10222 = !DILocation(line: 2105, column: 16, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10212, file: !1212, line: 2105, column: 9)
!10224 = !DILocation(line: 2105, column: 24, scope: !10223)
!10225 = !DILocation(line: 2109, column: 12, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10212, file: !1212, line: 2109, column: 9)
!10227 = !DILocation(line: 2109, column: 16, scope: !10226)
!10228 = !DILocation(line: 2109, column: 24, scope: !10226)
!10229 = !DILocation(line: 2109, column: 30, scope: !10226)
!10230 = !DILocation(line: 2109, column: 40, scope: !10226)
!10231 = !DILocation(line: 2109, column: 9, scope: !10212)
!10232 = !DILocation(line: 2118, column: 19, scope: !10212)
!10233 = !DILocation(line: 2118, column: 8, scope: !10212)
!10234 = !DILocation(line: 2118, column: 17, scope: !10212)
!10235 = !DILocation(line: 2119, column: 23, scope: !10212)
!10236 = !DILocation(line: 2119, column: 8, scope: !10212)
!10237 = !DILocation(line: 2119, column: 21, scope: !10212)
!10238 = !DILocation(line: 2122, column: 5, scope: !10212)
!10239 = !DILocation(line: 2125, column: 8, scope: !10212)
!10240 = !DILocation(line: 2125, column: 13, scope: !10212)
!10241 = !DILocation(line: 2125, column: 24, scope: !10212)
!10242 = !DILocation(line: 2126, column: 26, scope: !10212)
!10243 = !DILocation(line: 2126, column: 5, scope: !10212)
!10244 = !DILocation(line: 2128, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10212, file: !1212, line: 2128, column: 9)
!10246 = !DILocation(line: 2128, column: 31, scope: !10245)
!10247 = !DILocation(line: 2128, column: 60, scope: !10245)
!10248 = !DILocation(line: 2128, column: 9, scope: !10212)
!10249 = !DILocation(line: 2129, column: 12, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10245, file: !1212, line: 2128, column: 110)
!10251 = !DILocation(line: 2129, column: 17, scope: !10250)
!10252 = !DILocation(line: 2129, column: 28, scope: !10250)
!10253 = !DILocation(line: 2130, column: 9, scope: !10250)
!10254 = !DILocation(line: 2131, column: 5, scope: !10250)
!10255 = !DILocation(line: 2134, column: 14, scope: !10212)
!10256 = !DILocation(line: 2136, column: 5, scope: !10212)
!10257 = !DILocation(line: 2137, column: 1, scope: !10212)
!10258 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1212, file: !1212, line: 3387, type: !10259, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10261)
!10259 = !DISubroutineType(types: !10260)
!10260 = !{null, !1382, !762}
!10261 = !{!10262, !10263, !10264}
!10262 = !DILocalVariable(name: "D", arg: 1, scope: !10258, file: !1212, line: 3387, type: !1382)
!10263 = !DILocalVariable(name: "id", arg: 2, scope: !10258, file: !1212, line: 3387, type: !762)
!10264 = !DILocalVariable(name: "cmd", scope: !10258, file: !1212, line: 3389, type: !460)
!10265 = !DILocation(line: 0, scope: !10258)
!10266 = !DILocation(line: 3389, column: 5, scope: !10258)
!10267 = !DILocation(line: 3405, column: 9, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10258, file: !1212, line: 3405, column: 9)
!10269 = !DILocation(line: 3405, column: 21, scope: !10268)
!10270 = !DILocation(line: 0, scope: !10268)
!10271 = !DILocation(line: 3405, column: 9, scope: !10258)
!10272 = !DILocation(line: 3411, column: 31, scope: !10258)
!10273 = !DILocation(line: 3411, column: 5, scope: !10258)
!10274 = !DILocation(line: 3412, column: 1, scope: !10258)
!10275 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1212, file: !1212, line: 3585, type: !10276, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10278)
!10276 = !DISubroutineType(types: !10277)
!10277 = !{null, !974, !762, !762, !974, !974}
!10278 = !{!10279, !10280, !10281, !10282, !10283, !10284}
!10279 = !DILocalVariable(name: "CS", arg: 1, scope: !10275, file: !1212, line: 3585, type: !974)
!10280 = !DILocalVariable(name: "cmd", arg: 2, scope: !10275, file: !1212, line: 3585, type: !762)
!10281 = !DILocalVariable(name: "data", arg: 3, scope: !10275, file: !1212, line: 3585, type: !762)
!10282 = !DILocalVariable(name: "outl", arg: 4, scope: !10275, file: !1212, line: 3585, type: !974)
!10283 = !DILocalVariable(name: "inl", arg: 5, scope: !10275, file: !1212, line: 3585, type: !974)
!10284 = !DILocalVariable(name: "savedMask", scope: !10275, file: !1212, line: 3587, type: !61)
!10285 = !DILocation(line: 0, scope: !10275)
!10286 = !DILocation(line: 3589, column: 17, scope: !10275)
!10287 = !DILocation(line: 3590, column: 5, scope: !10275)
!10288 = !DILocation(line: 3591, column: 5, scope: !10275)
!10289 = !DILocation(line: 3593, column: 1, scope: !10275)
!10290 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1537, file: !1537, line: 110, type: !8536, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10291)
!10291 = !{!10292, !10293, !10294, !10295}
!10292 = !DILocalVariable(name: "id", arg: 1, scope: !10290, file: !1537, line: 110, type: !762)
!10293 = !DILocalVariable(name: "i", scope: !10290, file: !1537, line: 114, type: !1092)
!10294 = !DILocalVariable(name: "j", scope: !10290, file: !1537, line: 114, type: !1092)
!10295 = !DILocalVariable(name: "id_list", scope: !10290, file: !1537, line: 115, type: !10296)
!10296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10297, size: 32)
!10297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!10298 = !DILocation(line: 0, scope: !10290)
!10299 = !DILocation(line: 119, column: 5, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10290, file: !1537, line: 119, column: 5)
!10301 = !DILocation(line: 119, column: 46, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10300, file: !1537, line: 119, column: 5)
!10303 = !DILocation(line: 119, column: 19, scope: !10302)
!10304 = distinct !{!10304, !10299, !10305}
!10305 = !DILocation(line: 131, column: 5, scope: !10300)
!10306 = !DILocation(line: 121, column: 23, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !1537, line: 121, column: 9)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !1537, line: 121, column: 9)
!10309 = distinct !DILexicalBlock(scope: !10302, file: !1537, line: 119, column: 50)
!10310 = !DILocation(line: 121, column: 9, scope: !10308)
!10311 = !DILocation(line: 122, column: 17, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !1537, line: 122, column: 17)
!10313 = distinct !DILexicalBlock(scope: !10307, file: !1537, line: 121, column: 51)
!10314 = !DILocation(line: 122, column: 37, scope: !10312)
!10315 = !DILocation(line: 122, column: 34, scope: !10312)
!10316 = !DILocation(line: 122, column: 17, scope: !10313)
!10317 = !DILocation(line: 121, column: 47, scope: !10307)
!10318 = distinct !{!10318, !10310, !10319}
!10319 = !DILocation(line: 125, column: 9, scope: !10308)
!10320 = !DILocation(line: 0, scope: !10308)
!10321 = !DILocation(line: 127, column: 15, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10309, file: !1537, line: 127, column: 13)
!10323 = !DILocation(line: 127, column: 13, scope: !10309)
!10324 = !DILocation(line: 134, column: 1, scope: !10290)
!10325 = distinct !DISubprogram(name: "CMEM_Index", scope: !1537, file: !1537, line: 153, type: !8691, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10326)
!10326 = !{!10327, !10328, !10329, !10335}
!10327 = !DILocalVariable(name: "i", scope: !10325, file: !1537, line: 156, type: !1092)
!10328 = !DILocalVariable(name: "j", scope: !10325, file: !1537, line: 156, type: !1092)
!10329 = !DILocalVariable(name: "id", scope: !10325, file: !1537, line: 157, type: !10330)
!10330 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1608, line: 89, baseType: !10331)
!10331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1608, line: 86, size: 64, elements: !10332)
!10332 = !{!10333, !10334}
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10331, file: !1608, line: 87, baseType: !1621, size: 64)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10331, file: !1608, line: 88, baseType: !994, size: 64)
!10335 = !DILocalVariable(name: "id_list", scope: !10325, file: !1537, line: 158, type: !10296)
!10336 = !DILocation(line: 157, column: 5, scope: !10325)
!10337 = !DILocation(line: 157, column: 17, scope: !10325)
!10338 = !DILocation(line: 0, scope: !10325)
!10339 = !DILocation(line: 161, column: 9, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10325, file: !1537, line: 161, column: 9)
!10341 = !DILocation(line: 161, column: 20, scope: !10340)
!10342 = !DILocation(line: 161, column: 9, scope: !10325)
!10343 = !DILocation(line: 172, column: 58, scope: !10325)
!10344 = !DILocation(line: 172, column: 5, scope: !10325)
!10345 = !DILocation(line: 178, column: 5, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10325, file: !1537, line: 178, column: 5)
!10347 = !DILocation(line: 180, column: 23, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !1537, line: 180, column: 9)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !1537, line: 180, column: 9)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !1537, line: 178, column: 53)
!10351 = distinct !DILexicalBlock(scope: !10346, file: !1537, line: 178, column: 5)
!10352 = !DILocation(line: 180, column: 9, scope: !10349)
!10353 = !DILocation(line: 181, column: 17, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !1537, line: 181, column: 17)
!10355 = distinct !DILexicalBlock(scope: !10348, file: !1537, line: 180, column: 51)
!10356 = !DILocation(line: 181, column: 37, scope: !10354)
!10357 = !DILocation(line: 181, column: 34, scope: !10354)
!10358 = !DILocation(line: 181, column: 17, scope: !10355)
!10359 = !DILocation(line: 180, column: 47, scope: !10348)
!10360 = distinct !{!10360, !10352, !10361}
!10361 = !DILocation(line: 184, column: 9, scope: !10349)
!10362 = !DILocation(line: 0, scope: !10349)
!10363 = !DILocation(line: 186, column: 15, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10350, file: !1537, line: 186, column: 13)
!10365 = !DILocation(line: 186, column: 13, scope: !10350)
!10366 = !DILocation(line: 188, column: 26, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10364, file: !1537, line: 186, column: 41)
!10368 = !DILocation(line: 188, column: 24, scope: !10367)
!10369 = !DILocation(line: 189, column: 13, scope: !10367)
!10370 = !DILocation(line: 178, column: 46, scope: !10351)
!10371 = !DILocation(line: 178, column: 19, scope: !10351)
!10372 = distinct !{!10372, !10345, !10373}
!10373 = !DILocation(line: 191, column: 5, scope: !10346)
!10374 = !DILocation(line: 222, column: 12, scope: !10325)
!10375 = !DILocation(line: 223, column: 1, scope: !10325)
!10376 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1537, file: !1537, line: 240, type: !10377, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10379)
!10377 = !DISubroutineType(types: !10378)
!10378 = !{!10296, !61}
!10379 = !{!10380}
!10380 = !DILocalVariable(name: "index", arg: 1, scope: !10376, file: !1537, line: 240, type: !61)
!10381 = !DILocation(line: 0, scope: !10376)
!10382 = !DILocation(line: 242, column: 13, scope: !10376)
!10383 = !DILocation(line: 242, column: 5, scope: !10376)
!10384 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1537, file: !1537, line: 254, type: !10385, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10387)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{null, !974, !88, !1185}
!10387 = !{!10388, !10389, !10390, !10391, !10393, !10394}
!10388 = !DILocalVariable(name: "CS", arg: 1, scope: !10384, file: !1537, line: 254, type: !974)
!10389 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10384, file: !1537, line: 254, type: !88)
!10390 = !DILocalVariable(name: "flashid", arg: 3, scope: !10384, file: !1537, line: 254, type: !1185)
!10391 = !DILocalVariable(name: "cmd", scope: !10392, file: !1537, line: 258, type: !460)
!10392 = distinct !DILexicalBlock(scope: !10384, file: !1537, line: 257, column: 5)
!10393 = !DILocalVariable(name: "id", scope: !10392, file: !1537, line: 258, type: !1472)
!10394 = !DILocalVariable(name: "i", scope: !10392, file: !1537, line: 258, type: !460)
!10395 = !DILocation(line: 0, scope: !10384)
!10396 = !DILocation(line: 258, column: 9, scope: !10392)
!10397 = !DILocation(line: 258, column: 22, scope: !10392)
!10398 = !DILocation(line: 0, scope: !10392)
!10399 = !DILocation(line: 260, column: 13, scope: !10392)
!10400 = !DILocation(line: 261, column: 9, scope: !10392)
!10401 = !DILocation(line: 263, column: 13, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10392, file: !1537, line: 263, column: 13)
!10403 = !DILocation(line: 263, column: 27, scope: !10402)
!10404 = !DILocation(line: 263, column: 48, scope: !10402)
!10405 = !DILocation(line: 263, column: 13, scope: !10392)
!10406 = !DILocation(line: 264, column: 17, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10402, file: !1537, line: 263, column: 95)
!10408 = !DILocation(line: 265, column: 13, scope: !10407)
!10409 = !DILocation(line: 266, column: 9, scope: !10407)
!10410 = !DILocation(line: 268, column: 9, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10392, file: !1537, line: 268, column: 9)
!10412 = !DILocation(line: 269, column: 26, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !1537, line: 268, column: 50)
!10414 = distinct !DILexicalBlock(scope: !10411, file: !1537, line: 268, column: 9)
!10415 = !DILocation(line: 269, column: 13, scope: !10413)
!10416 = !DILocation(line: 269, column: 24, scope: !10413)
!10417 = !DILocation(line: 268, column: 46, scope: !10414)
!10418 = !DILocation(line: 268, column: 23, scope: !10414)
!10419 = distinct !{!10419, !10410, !10420}
!10420 = !DILocation(line: 270, column: 9, scope: !10411)
!10421 = !DILocation(line: 271, column: 5, scope: !10384)
!10422 = !DILocation(line: 272, column: 5, scope: !10384)
!10423 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1537, file: !1537, line: 285, type: !8536, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10424)
!10424 = !{!10425, !10426, !10427, !10428}
!10425 = !DILocalVariable(name: "id", arg: 1, scope: !10423, file: !1537, line: 285, type: !762)
!10426 = !DILocalVariable(name: "i", scope: !10423, file: !1537, line: 289, type: !1092)
!10427 = !DILocalVariable(name: "j", scope: !10423, file: !1537, line: 289, type: !1092)
!10428 = !DILocalVariable(name: "id_list", scope: !10423, file: !1537, line: 290, type: !10296)
!10429 = !DILocation(line: 0, scope: !10423)
!10430 = !DILocation(line: 294, column: 5, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10423, file: !1537, line: 294, column: 5)
!10432 = !DILocation(line: 294, column: 46, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10431, file: !1537, line: 294, column: 5)
!10434 = !DILocation(line: 294, column: 19, scope: !10433)
!10435 = distinct !{!10435, !10430, !10436}
!10436 = !DILocation(line: 306, column: 5, scope: !10431)
!10437 = !DILocation(line: 296, column: 23, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !1537, line: 296, column: 9)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !1537, line: 296, column: 9)
!10440 = distinct !DILexicalBlock(scope: !10433, file: !1537, line: 294, column: 53)
!10441 = !DILocation(line: 296, column: 9, scope: !10439)
!10442 = !DILocation(line: 297, column: 17, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !1537, line: 297, column: 17)
!10444 = distinct !DILexicalBlock(scope: !10438, file: !1537, line: 296, column: 51)
!10445 = !DILocation(line: 297, column: 37, scope: !10443)
!10446 = !DILocation(line: 297, column: 34, scope: !10443)
!10447 = !DILocation(line: 297, column: 17, scope: !10444)
!10448 = !DILocation(line: 296, column: 47, scope: !10438)
!10449 = distinct !{!10449, !10441, !10450}
!10450 = !DILocation(line: 300, column: 9, scope: !10439)
!10451 = !DILocation(line: 0, scope: !10439)
!10452 = !DILocation(line: 302, column: 15, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10440, file: !1537, line: 302, column: 13)
!10454 = !DILocation(line: 302, column: 13, scope: !10440)
!10455 = !DILocation(line: 310, column: 1, scope: !10423)
!10456 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1537, file: !1537, line: 328, type: !8691, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10457)
!10457 = !{!10458, !10459, !10460, !10461}
!10458 = !DILocalVariable(name: "i", scope: !10456, file: !1537, line: 331, type: !1092)
!10459 = !DILocalVariable(name: "j", scope: !10456, file: !1537, line: 331, type: !1092)
!10460 = !DILocalVariable(name: "id", scope: !10456, file: !1537, line: 332, type: !10330)
!10461 = !DILocalVariable(name: "id_list", scope: !10456, file: !1537, line: 333, type: !10296)
!10462 = !DILocation(line: 332, column: 5, scope: !10456)
!10463 = !DILocation(line: 332, column: 17, scope: !10456)
!10464 = !DILocation(line: 0, scope: !10456)
!10465 = !DILocation(line: 336, column: 9, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10456, file: !1537, line: 336, column: 9)
!10467 = !DILocation(line: 336, column: 28, scope: !10466)
!10468 = !DILocation(line: 336, column: 9, scope: !10456)
!10469 = !DILocation(line: 344, column: 60, scope: !10456)
!10470 = !DILocation(line: 344, column: 5, scope: !10456)
!10471 = !DILocation(line: 350, column: 5, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10456, file: !1537, line: 350, column: 5)
!10473 = !DILocation(line: 352, column: 23, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !1537, line: 352, column: 9)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1537, line: 352, column: 9)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !1537, line: 350, column: 53)
!10477 = distinct !DILexicalBlock(scope: !10472, file: !1537, line: 350, column: 5)
!10478 = !DILocation(line: 352, column: 9, scope: !10475)
!10479 = !DILocation(line: 353, column: 17, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !1537, line: 353, column: 17)
!10481 = distinct !DILexicalBlock(scope: !10474, file: !1537, line: 352, column: 51)
!10482 = !DILocation(line: 353, column: 37, scope: !10480)
!10483 = !DILocation(line: 353, column: 34, scope: !10480)
!10484 = !DILocation(line: 353, column: 17, scope: !10481)
!10485 = !DILocation(line: 352, column: 47, scope: !10474)
!10486 = distinct !{!10486, !10478, !10487}
!10487 = !DILocation(line: 356, column: 9, scope: !10475)
!10488 = !DILocation(line: 0, scope: !10475)
!10489 = !DILocation(line: 358, column: 15, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10476, file: !1537, line: 358, column: 13)
!10491 = !DILocation(line: 358, column: 13, scope: !10476)
!10492 = !DILocation(line: 360, column: 34, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10490, file: !1537, line: 358, column: 41)
!10494 = !DILocation(line: 360, column: 32, scope: !10493)
!10495 = !DILocation(line: 361, column: 13, scope: !10493)
!10496 = !DILocation(line: 350, column: 46, scope: !10477)
!10497 = !DILocation(line: 350, column: 19, scope: !10477)
!10498 = distinct !{!10498, !10471, !10499}
!10499 = !DILocation(line: 363, column: 5, scope: !10472)
!10500 = !DILocation(line: 364, column: 12, scope: !10456)
!10501 = !DILocation(line: 365, column: 1, scope: !10456)
!10502 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2714, file: !2714, line: 64, type: !10503, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10509)
!10503 = !DISubroutineType(types: !10504)
!10504 = !{null, !974, !10505, !1185}
!10505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10506, size: 32)
!10506 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10507)
!10507 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10508, line: 158, baseType: !975)
!10508 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!10509 = !{!10510, !10511, !10512, !10513, !10514, !10516, !10517}
!10510 = !DILocalVariable(name: "CS", arg: 1, scope: !10502, file: !2714, line: 64, type: !974)
!10511 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10502, file: !2714, line: 64, type: !10505)
!10512 = !DILocalVariable(name: "flashid", arg: 3, scope: !10502, file: !2714, line: 64, type: !1185)
!10513 = !DILocalVariable(name: "savedMask", scope: !10502, file: !2714, line: 66, type: !61)
!10514 = !DILocalVariable(name: "cmd", scope: !10515, file: !2714, line: 70, type: !460)
!10515 = distinct !DILexicalBlock(scope: !10502, file: !2714, line: 69, column: 5)
!10516 = !DILocalVariable(name: "id", scope: !10515, file: !2714, line: 70, type: !1472)
!10517 = !DILocalVariable(name: "i", scope: !10515, file: !2714, line: 70, type: !460)
!10518 = !DILocation(line: 0, scope: !10502)
!10519 = !DILocation(line: 70, column: 9, scope: !10515)
!10520 = !DILocation(line: 70, column: 22, scope: !10515)
!10521 = !DILocation(line: 0, scope: !10515)
!10522 = !DILocation(line: 72, column: 13, scope: !10515)
!10523 = !DILocation(line: 73, column: 21, scope: !10515)
!10524 = !DILocation(line: 74, column: 9, scope: !10515)
!10525 = !DILocation(line: 75, column: 9, scope: !10515)
!10526 = !DILocation(line: 77, column: 13, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10515, file: !2714, line: 77, column: 13)
!10528 = !DILocation(line: 77, column: 27, scope: !10527)
!10529 = !DILocation(line: 77, column: 48, scope: !10527)
!10530 = !DILocation(line: 77, column: 13, scope: !10515)
!10531 = !DILocation(line: 78, column: 17, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10527, file: !2714, line: 77, column: 87)
!10533 = !DILocation(line: 79, column: 25, scope: !10532)
!10534 = !DILocation(line: 80, column: 13, scope: !10532)
!10535 = !DILocation(line: 81, column: 13, scope: !10532)
!10536 = !DILocation(line: 82, column: 9, scope: !10532)
!10537 = !DILocation(line: 84, column: 9, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10515, file: !2714, line: 84, column: 9)
!10539 = !DILocation(line: 85, column: 26, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !2714, line: 84, column: 50)
!10541 = distinct !DILexicalBlock(scope: !10538, file: !2714, line: 84, column: 9)
!10542 = !DILocation(line: 85, column: 13, scope: !10540)
!10543 = !DILocation(line: 85, column: 24, scope: !10540)
!10544 = !DILocation(line: 84, column: 46, scope: !10541)
!10545 = !DILocation(line: 84, column: 23, scope: !10541)
!10546 = distinct !{!10546, !10537, !10547}
!10547 = !DILocation(line: 86, column: 9, scope: !10538)
!10548 = !DILocation(line: 87, column: 5, scope: !10502)
!10549 = !DILocation(line: 89, column: 1, scope: !10502)
!10550 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1625, file: !1625, line: 248, type: !3917, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10551 = !DILocation(line: 250, column: 5, scope: !10550)
!10552 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1625, file: !1625, line: 270, type: !3917, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10553 = !DILocation(line: 272, column: 5, scope: !10552)
!10554 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1625, file: !1625, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10555 = !DILocation(line: 296, column: 5, scope: !10554)
!10556 = !DILocation(line: 297, column: 5, scope: !10554)
!10557 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1625, file: !1625, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10558 = !DILocation(line: 309, column: 5, scope: !10557)
!10559 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1625, file: !1625, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10560 = !DILocation(line: 317, column: 5, scope: !10559)
!10561 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1625, file: !1625, line: 334, type: !3917, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10562 = !DILocation(line: 336, column: 5, scope: !10561)
!10563 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1625, file: !1625, line: 353, type: !3917, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10564 = !DILocation(line: 355, column: 5, scope: !10563)
!10565 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1625, file: !1625, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10566 = !DILocation(line: 376, column: 5, scope: !10565)
!10567 = !DILocation(line: 377, column: 1, scope: !10565)
!10568 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1625, file: !1625, line: 395, type: !3917, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10569 = !DILocation(line: 397, column: 5, scope: !10568)
!10570 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1625, file: !1625, line: 416, type: !3917, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10571 = !DILocation(line: 418, column: 5, scope: !10570)
!10572 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1636, file: !1636, line: 254, type: !3917, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10573 = !DILocation(line: 256, column: 32, scope: !10572)
!10574 = !DILocation(line: 257, column: 5, scope: !10572)
!10575 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1636, file: !1636, line: 269, type: !8691, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10576 = !DILocation(line: 275, column: 24, scope: !10575)
!10577 = !DILocation(line: 278, column: 24, scope: !10575)
!10578 = !DILocation(line: 278, column: 33, scope: !10575)
!10579 = !DILocation(line: 278, column: 49, scope: !10575)
!10580 = !DILocation(line: 278, column: 22, scope: !10575)
!10581 = !DILocation(line: 281, column: 5, scope: !10575)
!10582 = !DILocation(line: 283, column: 34, scope: !10575)
!10583 = !DILocation(line: 283, column: 23, scope: !10575)
!10584 = !DILocation(line: 286, column: 25, scope: !10575)
!10585 = !DILocation(line: 321, column: 5, scope: !10575)
!10586 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1636, file: !1636, line: 332, type: !8691, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10587)
!10587 = !{!10588}
!10588 = !DILocalVariable(name: "result", scope: !10586, file: !1636, line: 334, type: !1092)
!10589 = !DILocation(line: 340, column: 30, scope: !10586)
!10590 = !DILocation(line: 343, column: 24, scope: !10586)
!10591 = !DILocation(line: 344, column: 18, scope: !10586)
!10592 = !DILocation(line: 348, column: 17, scope: !10586)
!10593 = !DILocation(line: 353, column: 19, scope: !10586)
!10594 = !DILocation(line: 354, column: 18, scope: !10586)
!10595 = !DILocation(line: 354, column: 27, scope: !10586)
!10596 = !DILocation(line: 354, column: 43, scope: !10586)
!10597 = !DILocation(line: 350, column: 14, scope: !10586)
!10598 = !DILocation(line: 0, scope: !10586)
!10599 = !DILocation(line: 356, column: 16, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10586, file: !1636, line: 356, column: 9)
!10601 = !DILocation(line: 395, column: 1, scope: !10586)
!10602 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1636, file: !1636, line: 406, type: !10603, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10603 = !DISubroutineType(types: !2666)
!10604 = !DILocation(line: 408, column: 5, scope: !10602)
!10605 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1636, file: !1636, line: 420, type: !10606, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!61, !460}
!10608 = !{!10609, !10610, !10611}
!10609 = !DILocalVariable(name: "CS", arg: 1, scope: !10605, file: !1636, line: 420, type: !460)
!10610 = !DILocalVariable(name: "index", scope: !10605, file: !1636, line: 422, type: !61)
!10611 = !DILocalVariable(name: "list", scope: !10605, file: !1636, line: 423, type: !1953)
!10612 = !DILocation(line: 0, scope: !10605)
!10613 = !DILocation(line: 427, column: 13, scope: !10605)
!10614 = !DILocation(line: 430, column: 34, scope: !10605)
!10615 = !DILocation(line: 430, column: 5, scope: !10605)
!10616 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1636, file: !1636, line: 442, type: !10617, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!61, !61, !1825}
!10619 = !{!10620, !10621, !10622}
!10620 = !DILocalVariable(name: "address", arg: 1, scope: !10616, file: !1636, line: 442, type: !61)
!10621 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !10616, file: !1636, line: 442, type: !1825)
!10622 = !DILocalVariable(name: "i", scope: !10616, file: !1636, line: 444, type: !975)
!10623 = !DILocation(line: 0, scope: !10616)
!10624 = !DILocation(line: 446, column: 23, scope: !10616)
!10625 = !DILocation(line: 448, column: 36, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !1636, line: 448, column: 5)
!10627 = distinct !DILexicalBlock(scope: !10616, file: !1636, line: 448, column: 5)
!10628 = !DILocation(line: 448, column: 41, scope: !10626)
!10629 = !DILocation(line: 448, column: 5, scope: !10627)
!10630 = !DILocation(line: 449, column: 39, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10632, file: !1636, line: 449, column: 13)
!10632 = distinct !DILexicalBlock(scope: !10626, file: !1636, line: 448, column: 54)
!10633 = !DILocation(line: 449, column: 21, scope: !10631)
!10634 = !DILocation(line: 449, column: 46, scope: !10631)
!10635 = !DILocation(line: 450, column: 46, scope: !10631)
!10636 = !DILocation(line: 450, column: 25, scope: !10631)
!10637 = !DILocation(line: 449, column: 13, scope: !10632)
!10638 = !DILocation(line: 448, column: 48, scope: !10626)
!10639 = !DILocation(line: 448, column: 29, scope: !10626)
!10640 = !DILocation(line: 448, column: 31, scope: !10626)
!10641 = distinct !{!10641, !10629, !10642}
!10642 = !DILocation(line: 453, column: 5, scope: !10627)
!10643 = !DILocation(line: 454, column: 27, scope: !10616)
!10644 = !DILocation(line: 454, column: 5, scope: !10616)
!10645 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1636, file: !1636, line: 462, type: !3665, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10646)
!10646 = !{!10647}
!10647 = !DILocalVariable(name: "address", arg: 1, scope: !10645, file: !1636, line: 462, type: !61)
!10648 = !DILocation(line: 0, scope: !10645)
!10649 = !DILocation(line: 464, column: 45, scope: !10645)
!10650 = !DILocation(line: 464, column: 12, scope: !10645)
!10651 = !DILocation(line: 464, column: 5, scope: !10645)
!10652 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1636, file: !1636, line: 487, type: !3665, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10653)
!10653 = !{!10654, !10655, !10656}
!10654 = !DILocalVariable(name: "address", arg: 1, scope: !10652, file: !1636, line: 487, type: !61)
!10655 = !DILocalVariable(name: "index", scope: !10652, file: !1636, line: 490, type: !61)
!10656 = !DILocalVariable(name: "list", scope: !10652, file: !1636, line: 491, type: !1953)
!10657 = !DILocation(line: 0, scope: !10652)
!10658 = !DILocation(line: 490, column: 22, scope: !10652)
!10659 = !DILocation(line: 495, column: 45, scope: !10652)
!10660 = !DILocation(line: 495, column: 12, scope: !10652)
!10661 = !DILocation(line: 495, column: 5, scope: !10652)
!10662 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1636, file: !1636, line: 517, type: !10663, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10667)
!10663 = !DISubroutineType(types: !10664)
!10664 = !{!1092, !10665}
!10665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10666, size: 32)
!10666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!10667 = !{!10668, !10669, !10670}
!10668 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10662, file: !1636, line: 517, type: !10665)
!10669 = !DILocalVariable(name: "result", scope: !10662, file: !1636, line: 519, type: !61)
!10670 = !DILocalVariable(name: "i", scope: !10662, file: !1636, line: 519, type: !61)
!10671 = !DILocation(line: 0, scope: !10662)
!10672 = !DILocation(line: 522, column: 29, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10674, file: !1636, line: 522, column: 5)
!10674 = distinct !DILexicalBlock(scope: !10662, file: !1636, line: 522, column: 5)
!10675 = !DILocation(line: 522, column: 38, scope: !10673)
!10676 = !DILocation(line: 522, column: 5, scope: !10674)
!10677 = !DILocation(line: 523, column: 31, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10673, file: !1636, line: 522, column: 51)
!10679 = !DILocation(line: 523, column: 37, scope: !10678)
!10680 = !DILocation(line: 523, column: 16, scope: !10678)
!10681 = !DILocation(line: 522, column: 45, scope: !10673)
!10682 = distinct !{!10682, !10676, !10683}
!10683 = !DILocation(line: 524, column: 5, scope: !10674)
!10684 = !DILocation(line: 525, column: 5, scope: !10662)
!10685 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1636, file: !1636, line: 535, type: !10686, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10688)
!10686 = !DISubroutineType(types: !10687)
!10687 = !{!61, !61, !61, !1651, !1825}
!10688 = !{!10689, !10690, !10691, !10692, !10693, !10694, !10695, !10696, !10697}
!10689 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10685, file: !1636, line: 536, type: !61)
!10690 = !DILocalVariable(name: "length", arg: 2, scope: !10685, file: !1636, line: 537, type: !61)
!10691 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10685, file: !1636, line: 538, type: !1651)
!10692 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10685, file: !1636, line: 539, type: !1825)
!10693 = !DILocalVariable(name: "addr", scope: !10685, file: !1636, line: 541, type: !61)
!10694 = !DILocalVariable(name: "ptr", scope: !10685, file: !1636, line: 541, type: !61)
!10695 = !DILocalVariable(name: "blksize", scope: !10685, file: !1636, line: 541, type: !61)
!10696 = !DILocalVariable(name: "total_blocks", scope: !10685, file: !1636, line: 541, type: !61)
!10697 = !DILocalVariable(name: "endaddr", scope: !10685, file: !1636, line: 542, type: !61)
!10698 = !DILocation(line: 0, scope: !10685)
!10699 = !DILocation(line: 542, column: 33, scope: !10685)
!10700 = !DILocation(line: 557, column: 59, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !1636, line: 557, column: 5)
!10702 = distinct !DILexicalBlock(scope: !10685, file: !1636, line: 557, column: 5)
!10703 = !DILocation(line: 557, column: 5, scope: !10702)
!10704 = !DILocation(line: 560, column: 19, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10701, file: !1636, line: 559, column: 5)
!10706 = !DILocation(line: 562, column: 26, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10705, file: !1636, line: 562, column: 13)
!10708 = !DILocation(line: 0, scope: !10707)
!10709 = !DILocation(line: 562, column: 13, scope: !10705)
!10710 = !DILocation(line: 563, column: 39, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10707, file: !1636, line: 562, column: 34)
!10712 = !DILocation(line: 564, column: 29, scope: !10711)
!10713 = !DILocation(line: 564, column: 42, scope: !10711)
!10714 = !DILocation(line: 565, column: 9, scope: !10711)
!10715 = !DILocation(line: 567, column: 45, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10707, file: !1636, line: 567, column: 18)
!10717 = !DILocation(line: 567, column: 26, scope: !10716)
!10718 = !DILocation(line: 567, column: 18, scope: !10707)
!10719 = !DILocation(line: 568, column: 29, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10716, file: !1636, line: 567, column: 59)
!10721 = !DILocation(line: 568, column: 41, scope: !10720)
!10722 = !DILocation(line: 569, column: 9, scope: !10720)
!10723 = !DILocation(line: 572, column: 16, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10716, file: !1636, line: 571, column: 14)
!10725 = !DILocation(line: 573, column: 21, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10724, file: !1636, line: 573, column: 17)
!10727 = !DILocation(line: 573, column: 17, scope: !10724)
!10728 = !DILocation(line: 576, column: 29, scope: !10724)
!10729 = !DILocation(line: 576, column: 39, scope: !10724)
!10730 = !DILocation(line: 577, column: 29, scope: !10724)
!10731 = !DILocation(line: 577, column: 42, scope: !10724)
!10732 = !DILocation(line: 0, scope: !10702)
!10733 = !DILocation(line: 579, column: 14, scope: !10705)
!10734 = !DILocation(line: 580, column: 21, scope: !10705)
!10735 = distinct !{!10735, !10703, !10736}
!10736 = !DILocation(line: 581, column: 5, scope: !10702)
!10737 = !DILocation(line: 586, column: 1, scope: !10685)
!10738 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1636, file: !1636, line: 593, type: !10739, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10741)
!10739 = !DISubroutineType(types: !10740)
!10740 = !{!1092, !61, !61, !1651}
!10741 = !{!10742, !10743, !10744}
!10742 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10738, file: !1636, line: 593, type: !61)
!10743 = !DILocalVariable(name: "length", arg: 2, scope: !10738, file: !1636, line: 593, type: !61)
!10744 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10738, file: !1636, line: 593, type: !1651)
!10745 = !DILocation(line: 0, scope: !10738)
!10746 = !DILocation(line: 595, column: 12, scope: !10738)
!10747 = !DILocation(line: 595, column: 5, scope: !10738)
!10748 = !DILocation(line: 597, column: 81, scope: !10738)
!10749 = !DILocation(line: 597, column: 12, scope: !10738)
!10750 = !DILocation(line: 597, column: 5, scope: !10738)
!10751 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1636, file: !1636, line: 606, type: !10739, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10752)
!10752 = !{!10753, !10754, !10755}
!10753 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10751, file: !1636, line: 606, type: !61)
!10754 = !DILocalVariable(name: "length", arg: 2, scope: !10751, file: !1636, line: 606, type: !61)
!10755 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10751, file: !1636, line: 606, type: !1651)
!10756 = !DILocation(line: 0, scope: !10751)
!10757 = !DILocation(line: 624, column: 5, scope: !10751)
!10758 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1636, file: !1636, line: 637, type: !10739, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10759)
!10759 = !{!10760, !10761, !10762, !10763, !10764}
!10760 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10758, file: !1636, line: 637, type: !61)
!10761 = !DILocalVariable(name: "length", arg: 2, scope: !10758, file: !1636, line: 637, type: !61)
!10762 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10758, file: !1636, line: 637, type: !1651)
!10763 = !DILocalVariable(name: "index", scope: !10758, file: !1636, line: 642, type: !61)
!10764 = !DILocalVariable(name: "list", scope: !10758, file: !1636, line: 644, type: !1953)
!10765 = !DILocation(line: 0, scope: !10758)
!10766 = !DILocation(line: 642, column: 22, scope: !10758)
!10767 = !DILocation(line: 648, column: 81, scope: !10758)
!10768 = !DILocation(line: 648, column: 12, scope: !10758)
!10769 = !DILocation(line: 648, column: 5, scope: !10758)
!10770 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1636, file: !1636, line: 658, type: !10739, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10771)
!10771 = !{!10772, !10773, !10774}
!10772 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10770, file: !1636, line: 658, type: !61)
!10773 = !DILocalVariable(name: "length", arg: 2, scope: !10770, file: !1636, line: 658, type: !61)
!10774 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10770, file: !1636, line: 658, type: !1651)
!10775 = !DILocation(line: 0, scope: !10770)
!10776 = !DILocation(line: 688, column: 5, scope: !10770)
!10777 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1636, file: !1636, line: 700, type: !8125, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10778)
!10778 = !{!10779, !10780, !10781}
!10779 = !DILocalVariable(name: "CS", arg: 1, scope: !10777, file: !1636, line: 700, type: !974)
!10780 = !DILocalVariable(name: "index", scope: !10777, file: !1636, line: 705, type: !61)
!10781 = !DILocalVariable(name: "list", scope: !10777, file: !1636, line: 707, type: !1953)
!10782 = !DILocation(line: 0, scope: !10777)
!10783 = !DILocation(line: 705, column: 22, scope: !10777)
!10784 = !DILocation(line: 711, column: 24, scope: !10777)
!10785 = !DILocation(line: 711, column: 5, scope: !10777)
!10786 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1636, file: !1636, line: 721, type: !10787, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10789)
!10787 = !DISubroutineType(types: !10788)
!10788 = !{null, !1871, !1154, !61}
!10789 = !{!10790, !10791, !10792}
!10790 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10786, file: !1636, line: 721, type: !1871)
!10791 = !DILocalVariable(name: "index", arg: 2, scope: !10786, file: !1636, line: 721, type: !1154)
!10792 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10786, file: !1636, line: 721, type: !61)
!10793 = !DILocation(line: 0, scope: !10786)
!10794 = !DILocation(line: 723, column: 18, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10786, file: !1636, line: 723, column: 9)
!10796 = !DILocation(line: 723, column: 26, scope: !10795)
!10797 = !DILocation(line: 723, column: 35, scope: !10795)
!10798 = !DILocation(line: 723, column: 9, scope: !10786)
!10799 = !DILocation(line: 724, column: 26, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10795, file: !1636, line: 723, column: 48)
!10801 = !DILocation(line: 724, column: 32, scope: !10800)
!10802 = !DILocation(line: 725, column: 5, scope: !10800)
!10803 = !DILocation(line: 726, column: 18, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10795, file: !1636, line: 725, column: 12)
!10805 = !DILocation(line: 727, column: 26, scope: !10804)
!10806 = !DILocation(line: 727, column: 32, scope: !10804)
!10807 = !DILocation(line: 728, column: 18, scope: !10804)
!10808 = !DILocation(line: 728, column: 26, scope: !10804)
!10809 = !DILocation(line: 728, column: 35, scope: !10804)
!10810 = !DILocation(line: 731, column: 1, scope: !10786)
!10811 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1636, file: !1636, line: 739, type: !10812, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10814)
!10812 = !DISubroutineType(types: !10813)
!10813 = !{!61, !61, !61, !1871, !10665}
!10814 = !{!10815, !10816, !10817, !10818, !10819, !10820, !10821, !10822, !10823}
!10815 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10811, file: !1636, line: 740, type: !61)
!10816 = !DILocalVariable(name: "length", arg: 2, scope: !10811, file: !1636, line: 741, type: !61)
!10817 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10811, file: !1636, line: 742, type: !1871)
!10818 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10811, file: !1636, line: 743, type: !10665)
!10819 = !DILocalVariable(name: "Partition", scope: !10811, file: !1636, line: 745, type: !61)
!10820 = !DILocalVariable(name: "Index", scope: !10811, file: !1636, line: 746, type: !1092)
!10821 = !DILocalVariable(name: "bankSize", scope: !10811, file: !1636, line: 747, type: !61)
!10822 = !DILocalVariable(name: "NextBankAddr", scope: !10811, file: !1636, line: 748, type: !61)
!10823 = !DILocalVariable(name: "srcBankIdx", scope: !10811, file: !1636, line: 748, type: !61)
!10824 = !DILocation(line: 0, scope: !10811)
!10825 = !DILocation(line: 750, column: 12, scope: !10811)
!10826 = !DILocation(line: 750, column: 5, scope: !10811)
!10827 = !DILocation(line: 752, column: 51, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !1636, line: 752, column: 5)
!10829 = distinct !DILexicalBlock(scope: !10811, file: !1636, line: 752, column: 5)
!10830 = !DILocation(line: 752, column: 5, scope: !10829)
!10831 = !DILocation(line: 753, column: 51, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !1636, line: 753, column: 13)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !1636, line: 752, column: 70)
!10834 = !DILocation(line: 753, column: 24, scope: !10832)
!10835 = !DILocation(line: 753, column: 13, scope: !10833)
!10836 = !DILocation(line: 758, column: 49, scope: !10833)
!10837 = !DILocation(line: 758, column: 22, scope: !10833)
!10838 = !DILocation(line: 760, column: 22, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10833, file: !1636, line: 760, column: 13)
!10840 = !DILocation(line: 760, column: 13, scope: !10833)
!10841 = !DILocation(line: 761, column: 37, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !1636, line: 760, column: 39)
!10843 = !DILocation(line: 762, column: 24, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10842, file: !1636, line: 762, column: 17)
!10845 = !DILocation(line: 762, column: 17, scope: !10842)
!10846 = !DILocation(line: 767, column: 33, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10842, file: !1636, line: 767, column: 17)
!10848 = !DILocation(line: 767, column: 42, scope: !10847)
!10849 = !DILocation(line: 767, column: 17, scope: !10842)
!10850 = !DILocation(line: 768, column: 33, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10847, file: !1636, line: 767, column: 55)
!10852 = !DILocation(line: 768, column: 39, scope: !10851)
!10853 = !DILocation(line: 769, column: 13, scope: !10851)
!10854 = !DILocation(line: 770, column: 46, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !1636, line: 770, column: 21)
!10856 = distinct !DILexicalBlock(scope: !10847, file: !1636, line: 769, column: 20)
!10857 = !DILocation(line: 770, column: 21, scope: !10856)
!10858 = !DILocation(line: 773, column: 33, scope: !10856)
!10859 = !DILocation(line: 773, column: 39, scope: !10856)
!10860 = !DILocation(line: 774, column: 33, scope: !10856)
!10861 = !DILocation(line: 774, column: 42, scope: !10856)
!10862 = !DILocation(line: 777, column: 22, scope: !10842)
!10863 = !DILocation(line: 778, column: 20, scope: !10842)
!10864 = !DILocation(line: 779, column: 9, scope: !10842)
!10865 = !DILocation(line: 746, column: 13, scope: !10811)
!10866 = !DILocation(line: 752, column: 66, scope: !10828)
!10867 = distinct !{!10867, !10830, !10868}
!10868 = !DILocation(line: 781, column: 5, scope: !10829)
!10869 = !DILocation(line: 784, column: 5, scope: !10811)
!10870 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1636, file: !1636, line: 796, type: !8691, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10871)
!10871 = !{!10872, !10873}
!10872 = !DILocalVariable(name: "result", scope: !10870, file: !1636, line: 798, type: !1092)
!10873 = !DILocalVariable(name: "i", scope: !10870, file: !1636, line: 799, type: !1092)
!10874 = !DILocation(line: 803, column: 19, scope: !10870)
!10875 = !DILocation(line: 803, column: 28, scope: !10870)
!10876 = !DILocation(line: 803, column: 17, scope: !10870)
!10877 = !DILocation(line: 822, column: 33, scope: !10870)
!10878 = !DILocation(line: 822, column: 56, scope: !10870)
!10879 = !DILocation(line: 822, column: 88, scope: !10870)
!10880 = !DILocation(line: 822, column: 97, scope: !10870)
!10881 = !DILocation(line: 822, column: 5, scope: !10870)
!10882 = !DILocation(line: 829, column: 39, scope: !10870)
!10883 = !DILocation(line: 829, column: 62, scope: !10870)
!10884 = !DILocation(line: 829, column: 14, scope: !10870)
!10885 = !DILocation(line: 0, scope: !10870)
!10886 = !DILocation(line: 834, column: 16, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10870, file: !1636, line: 834, column: 9)
!10888 = !DILocation(line: 834, column: 9, scope: !10870)
!10889 = !DILocation(line: 838, column: 30, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10870, file: !1636, line: 838, column: 5)
!10891 = !DILocation(line: 838, column: 58, scope: !10890)
!10892 = !DILocation(line: 838, column: 78, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10890, file: !1636, line: 838, column: 5)
!10894 = !DILocation(line: 838, column: 88, scope: !10893)
!10895 = !DILocation(line: 838, column: 5, scope: !10890)
!10896 = !DILocation(line: 839, column: 39, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10893, file: !1636, line: 838, column: 102)
!10898 = !DILocation(line: 839, column: 22, scope: !10897)
!10899 = !DILocation(line: 840, column: 37, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10897, file: !1636, line: 840, column: 13)
!10901 = !DILocation(line: 840, column: 13, scope: !10897)
!10902 = !DILocation(line: 841, column: 36, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10900, file: !1636, line: 840, column: 63)
!10904 = !DILocation(line: 842, column: 9, scope: !10903)
!10905 = !DILocation(line: 838, column: 95, scope: !10893)
!10906 = distinct !{!10906, !10895, !10907}
!10907 = !DILocation(line: 843, column: 5, scope: !10890)
!10908 = !DILocation(line: 871, column: 49, scope: !10870)
!10909 = !DILocation(line: 871, column: 72, scope: !10870)
!10910 = !DILocation(line: 871, column: 47, scope: !10870)
!10911 = !DILocation(line: 871, column: 97, scope: !10870)
!10912 = !DILocation(line: 871, column: 19, scope: !10870)
!10913 = !DILocation(line: 882, column: 14, scope: !10870)
!10914 = !DILocation(line: 887, column: 13, scope: !10870)
!10915 = !DILocation(line: 887, column: 22, scope: !10870)
!10916 = !DILocation(line: 887, column: 5, scope: !10870)
!10917 = !DILocation(line: 889, column: 22, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10870, file: !1636, line: 887, column: 34)
!10919 = !DILocation(line: 890, column: 13, scope: !10918)
!10920 = !DILocation(line: 902, column: 1, scope: !10870)
!10921 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1636, file: !1636, line: 912, type: !10922, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10924)
!10922 = !DISubroutineType(types: !10923)
!10923 = !{null, !772}
!10924 = !{!10925}
!10925 = !DILocalVariable(name: "CS", arg: 1, scope: !10921, file: !1636, line: 912, type: !772)
!10926 = !DILocation(line: 0, scope: !10921)
!10927 = !DILocation(line: 914, column: 12, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10921, file: !1636, line: 914, column: 9)
!10929 = !DILocation(line: 914, column: 9, scope: !10921)
!10930 = !DILocation(line: 918, column: 26, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10928, file: !1636, line: 914, column: 18)
!10932 = !DILocation(line: 918, column: 24, scope: !10931)
!10933 = !DILocation(line: 920, column: 28, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10931, file: !1636, line: 920, column: 13)
!10935 = !DILocation(line: 920, column: 13, scope: !10931)
!10936 = !DILocation(line: 921, column: 13, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10938, file: !1636, line: 921, column: 13)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !1636, line: 921, column: 13)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1636, line: 921, column: 13)
!10940 = distinct !DILexicalBlock(scope: !10934, file: !1636, line: 920, column: 33)
!10941 = !DILocation(line: 923, column: 19, scope: !10931)
!10942 = !DILocation(line: 923, column: 17, scope: !10931)
!10943 = !DILocation(line: 924, column: 5, scope: !10931)
!10944 = !DILocation(line: 935, column: 14, scope: !10921)
!10945 = !DILocation(line: 936, column: 1, scope: !10921)
!10946 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1636, file: !1636, line: 952, type: !8691, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10947 = !DILocation(line: 955, column: 5, scope: !10946)
!10948 = !DILocation(line: 956, column: 12, scope: !10946)
!10949 = !DILocation(line: 956, column: 5, scope: !10946)
!10950 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1636, file: !1636, line: 974, type: !8691, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10951)
!10951 = !{!10952}
!10952 = !DILocalVariable(name: "result", scope: !10950, file: !1636, line: 976, type: !1092)
!10953 = !DILocation(line: 981, column: 5, scope: !10950)
!10954 = !DILocation(line: 986, column: 24, scope: !10950)
!10955 = !DILocation(line: 986, column: 33, scope: !10950)
!10956 = !DILocation(line: 986, column: 49, scope: !10950)
!10957 = !DILocation(line: 986, column: 22, scope: !10950)
!10958 = !DILocation(line: 1002, column: 19, scope: !10950)
!10959 = !DILocation(line: 1002, column: 17, scope: !10950)
!10960 = !DILocation(line: 1014, column: 22, scope: !10950)
!10961 = !DILocation(line: 1014, column: 5, scope: !10950)
!10962 = !DILocation(line: 1024, column: 33, scope: !10950)
!10963 = !DILocation(line: 1026, column: 27, scope: !10950)
!10964 = !DILocation(line: 1027, column: 26, scope: !10950)
!10965 = !DILocation(line: 1042, column: 33, scope: !10950)
!10966 = !DILocation(line: 1044, column: 32, scope: !10950)
!10967 = !DILocation(line: 1052, column: 18, scope: !10950)
!10968 = !DILocation(line: 1052, column: 27, scope: !10950)
!10969 = !DILocation(line: 1052, column: 43, scope: !10950)
!10970 = !DILocation(line: 1048, column: 14, scope: !10950)
!10971 = !DILocation(line: 0, scope: !10950)
!10972 = !DILocation(line: 1063, column: 5, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !1636, line: 1063, column: 5)
!10974 = distinct !DILexicalBlock(scope: !10950, file: !1636, line: 1063, column: 5)
!10975 = !DILocation(line: 1063, column: 5, scope: !10974)
!10976 = !DILocation(line: 1063, column: 5, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10973, file: !1636, line: 1063, column: 5)
!10978 = !DILocation(line: 1096, column: 36, scope: !10950)
!10979 = !DILocation(line: 1096, column: 34, scope: !10950)
!10980 = !DILocation(line: 1101, column: 5, scope: !10950)
!10981 = !DILocation(line: 1103, column: 34, scope: !10950)
!10982 = !DILocation(line: 1109, column: 35, scope: !10950)
!10983 = !DILocation(line: 1110, column: 33, scope: !10950)
!10984 = !DILocation(line: 1111, column: 34, scope: !10950)
!10985 = !DILocation(line: 1113, column: 5, scope: !10950)
!10986 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1994, file: !1994, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10987 = !DILocation(line: 86, column: 1, scope: !10986)
!10988 = distinct !DISubprogram(name: "GetFDMLock", scope: !1994, file: !1994, line: 87, type: !9157, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10989)
!10989 = !{!10990}
!10990 = !DILocalVariable(name: "savedMask", scope: !10988, file: !1994, line: 89, type: !1092)
!10991 = !DILocation(line: 90, column: 17, scope: !10988)
!10992 = !DILocation(line: 0, scope: !10988)
!10993 = !DILocation(line: 91, column: 9, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10988, file: !1994, line: 91, column: 9)
!10995 = !DILocation(line: 91, column: 9, scope: !10988)
!10996 = !DILocation(line: 92, column: 17, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10994, file: !1994, line: 91, column: 24)
!10998 = !DILocation(line: 94, column: 9, scope: !10997)
!10999 = !DILocation(line: 0, scope: !10994)
!11000 = !DILocation(line: 102, column: 1, scope: !10988)
!11001 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1994, file: !1994, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11002)
!11002 = !{!11003}
!11003 = !DILocalVariable(name: "savedMask", scope: !11001, file: !1994, line: 105, type: !1092)
!11004 = !DILocation(line: 106, column: 17, scope: !11001)
!11005 = !DILocation(line: 0, scope: !11001)
!11006 = !DILocation(line: 107, column: 9, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11001, file: !1994, line: 107, column: 9)
!11008 = !DILocation(line: 107, column: 9, scope: !11001)
!11009 = !DILocation(line: 108, column: 17, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11007, file: !1994, line: 107, column: 24)
!11011 = !DILocation(line: 109, column: 9, scope: !11010)
!11012 = !DILocation(line: 114, column: 1, scope: !11001)
!11013 = !DILocation(line: 111, column: 9, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11007, file: !1994, line: 110, column: 12)
!11015 = !DILocation(line: 112, column: 9, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !1994, line: 112, column: 9)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !1994, line: 112, column: 9)
!11018 = distinct !DILexicalBlock(scope: !11014, file: !1994, line: 112, column: 9)
!11019 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1994, file: !1994, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11020 = !DILocation(line: 123, column: 1, scope: !11019)
!11021 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1994, file: !1994, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11022)
!11022 = !{!11023}
!11023 = !DILocalVariable(name: "Result", scope: !11021, file: !1994, line: 132, type: !2050)
!11024 = !DILocation(line: 133, column: 5, scope: !11021)
!11025 = !DILocation(line: 134, column: 18, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11021, file: !1994, line: 133, column: 8)
!11027 = !DILocation(line: 0, scope: !11021)
!11028 = !DILocation(line: 135, column: 21, scope: !11021)
!11029 = !DILocation(line: 135, column: 5, scope: !11026)
!11030 = distinct !{!11030, !11024, !11031}
!11031 = !DILocation(line: 135, column: 43, scope: !11021)
!11032 = !DILocation(line: 136, column: 1, scope: !11021)
!11033 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1994, file: !1994, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11034 = !DILocation(line: 147, column: 5, scope: !11033)
!11035 = !DILocation(line: 148, column: 1, scope: !11033)
!11036 = distinct !DISubprogram(name: "readRawDiskData", scope: !1994, file: !1994, line: 216, type: !11037, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11078)
!11037 = !DISubroutineType(types: !11038)
!11038 = !{!1092, !11039, !61, !762, !61}
!11039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11040, size: 32)
!11040 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1941, line: 93, baseType: !11041)
!11041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1941, line: 83, size: 1056, elements: !11042)
!11042 = !{!11043, !11044, !11064, !11065, !11077}
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !11041, file: !1941, line: 84, baseType: !61, size: 32)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !11041, file: !1941, line: 85, baseType: !11045, size: 32, offset: 32)
!11045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11046, size: 32)
!11046 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !11047)
!11047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !11048)
!11048 = !{!11049, !11050, !11051, !11052, !11053, !11054, !11055, !11056, !11057, !11058, !11059, !11060, !11061, !11062, !11063}
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !11047, file: !1408, line: 106, baseType: !1682, size: 32)
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !11047, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!11051 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !11047, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !11047, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !11047, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !11047, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !11047, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !11047, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !11047, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !11047, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !11047, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !11047, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !11047, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !11047, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !11047, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !11041, file: !1941, line: 86, baseType: !88, size: 32, offset: 64)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !11041, file: !1941, line: 87, baseType: !11066, size: 928, offset: 96)
!11066 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !11067)
!11067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !11068)
!11068 = !{!11069, !11070, !11071, !11072, !11073, !11074, !11075, !11076}
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !11067, file: !1408, line: 91, baseType: !61, size: 32)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !11067, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !11067, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !11067, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !11067, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !11067, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !11067, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !11067, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !11041, file: !1941, line: 92, baseType: !91, size: 8, offset: 1024)
!11078 = !{!11079, !11080, !11081, !11082, !11083, !11084}
!11079 = !DILocalVariable(name: "D", arg: 1, scope: !11036, file: !1994, line: 216, type: !11039)
!11080 = !DILocalVariable(name: "addr", arg: 2, scope: !11036, file: !1994, line: 216, type: !61)
!11081 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11036, file: !1994, line: 216, type: !762)
!11082 = !DILocalVariable(name: "len", arg: 4, scope: !11036, file: !1994, line: 216, type: !61)
!11083 = !DILocalVariable(name: "phyAddr", scope: !11036, file: !1994, line: 219, type: !61)
!11084 = !DILocalVariable(name: "diskSize", scope: !11036, file: !1994, line: 220, type: !61)
!11085 = !DILocation(line: 0, scope: !11036)
!11086 = !DILocation(line: 220, column: 28, scope: !11036)
!11087 = !DILocation(line: 222, column: 14, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11036, file: !1994, line: 222, column: 9)
!11089 = !DILocation(line: 222, column: 26, scope: !11088)
!11090 = !DILocation(line: 225, column: 51, scope: !11036)
!11091 = !DILocation(line: 225, column: 61, scope: !11036)
!11092 = !DILocation(line: 225, column: 15, scope: !11036)
!11093 = !DILocation(line: 225, column: 70, scope: !11036)
!11094 = !DILocation(line: 227, column: 13, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11036, file: !1994, line: 227, column: 9)
!11096 = !DILocation(line: 227, column: 9, scope: !11036)
!11097 = !DILocation(line: 228, column: 9, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11095, file: !1994, line: 227, column: 23)
!11099 = !DILocation(line: 229, column: 5, scope: !11098)
!11100 = !DILocation(line: 231, column: 5, scope: !11036)
!11101 = !DILocation(line: 233, column: 22, scope: !11036)
!11102 = !DILocation(line: 233, column: 5, scope: !11036)
!11103 = !DILocation(line: 235, column: 5, scope: !11036)
!11104 = !DILocation(line: 237, column: 5, scope: !11036)
!11105 = !DILocation(line: 238, column: 1, scope: !11036)
!11106 = distinct !DISubprogram(name: "MountDevice", scope: !1994, file: !1994, line: 165, type: !11107, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11109)
!11107 = !DISubroutineType(types: !11108)
!11108 = !{null, !11039}
!11109 = !{!11110, !11111}
!11110 = !DILocalVariable(name: "D", arg: 1, scope: !11106, file: !1994, line: 165, type: !11039)
!11111 = !DILocalVariable(name: "Result", scope: !11106, file: !1994, line: 167, type: !1092)
!11112 = !DILocation(line: 0, scope: !11106)
!11113 = !DILocation(line: 171, column: 12, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11106, file: !1994, line: 171, column: 9)
!11115 = !DILocation(line: 171, column: 9, scope: !11106)
!11116 = !DILocation(line: 176, column: 5, scope: !11106)
!11117 = !DILocation(line: 186, column: 17, scope: !11106)
!11118 = !DILocation(line: 186, column: 28, scope: !11106)
!11119 = !DILocation(line: 186, column: 43, scope: !11106)
!11120 = !DILocation(line: 186, column: 64, scope: !11106)
!11121 = !DILocation(line: 186, column: 52, scope: !11106)
!11122 = !DILocation(line: 186, column: 14, scope: !11106)
!11123 = !DILocation(line: 188, column: 5, scope: !11106)
!11124 = !DILocation(line: 190, column: 16, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11106, file: !1994, line: 190, column: 9)
!11126 = !DILocation(line: 190, column: 9, scope: !11106)
!11127 = !DILocation(line: 191, column: 9, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !1994, line: 191, column: 9)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !1994, line: 191, column: 9)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !1994, line: 191, column: 9)
!11131 = distinct !DILexicalBlock(scope: !11125, file: !1994, line: 190, column: 31)
!11132 = !DILocation(line: 194, column: 17, scope: !11106)
!11133 = !DILocation(line: 195, column: 1, scope: !11106)
!11134 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1994, file: !1994, line: 277, type: !11037, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11135)
!11135 = !{!11136, !11137, !11138, !11139, !11140, !11141, !11142, !11143, !11144, !11145, !11149, !11150, !11151, !11156}
!11136 = !DILocalVariable(name: "D", arg: 1, scope: !11134, file: !1994, line: 277, type: !11039)
!11137 = !DILocalVariable(name: "addr", arg: 2, scope: !11134, file: !1994, line: 277, type: !61)
!11138 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11134, file: !1994, line: 277, type: !762)
!11139 = !DILocalVariable(name: "len", arg: 4, scope: !11134, file: !1994, line: 277, type: !61)
!11140 = !DILocalVariable(name: "dest", scope: !11134, file: !1994, line: 279, type: !61)
!11141 = !DILocalVariable(name: "src", scope: !11134, file: !1994, line: 279, type: !61)
!11142 = !DILocalVariable(name: "diskSize", scope: !11134, file: !1994, line: 280, type: !61)
!11143 = !DILocalVariable(name: "result", scope: !11134, file: !1994, line: 281, type: !1092)
!11144 = !DILocalVariable(name: "DoneLength", scope: !11134, file: !1994, line: 282, type: !61)
!11145 = !DILocalVariable(name: "blockSize", scope: !11146, file: !1994, line: 313, type: !61)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !1994, line: 312, column: 14)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !1994, line: 305, column: 13)
!11148 = distinct !DILexicalBlock(scope: !11134, file: !1994, line: 298, column: 30)
!11149 = !DILocalVariable(name: "programBytes", scope: !11146, file: !1994, line: 314, type: !61)
!11150 = !DILocalVariable(name: "nextBlkAddr", scope: !11146, file: !1994, line: 316, type: !61)
!11151 = !DILocalVariable(name: "Cell", scope: !11152, file: !1994, line: 346, type: !11154)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !1994, line: 345, column: 83)
!11153 = distinct !DILexicalBlock(scope: !11146, file: !1994, line: 345, column: 17)
!11154 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11155, line: 76, baseType: !975)
!11155 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_polling/GCC")
!11156 = !DILocalVariable(name: "b", scope: !11152, file: !1994, line: 347, type: !762)
!11157 = !DILocation(line: 0, scope: !11134)
!11158 = !DILocation(line: 280, column: 28, scope: !11134)
!11159 = !DILocation(line: 284, column: 14, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11134, file: !1994, line: 284, column: 9)
!11161 = !DILocation(line: 284, column: 9, scope: !11134)
!11162 = !DILocation(line: 288, column: 14, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11134, file: !1994, line: 288, column: 9)
!11164 = !DILocation(line: 288, column: 20, scope: !11163)
!11165 = !DILocation(line: 288, column: 9, scope: !11134)
!11166 = !DILocation(line: 292, column: 13, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11134, file: !1994, line: 292, column: 9)
!11168 = !DILocation(line: 292, column: 9, scope: !11134)
!11169 = !DILocation(line: 293, column: 9, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11167, file: !1994, line: 292, column: 23)
!11171 = !DILocation(line: 294, column: 5, scope: !11170)
!11172 = !DILocation(line: 296, column: 5, scope: !11134)
!11173 = !DILocation(line: 346, column: 17, scope: !11152)
!11174 = !DILocation(line: 298, column: 23, scope: !11134)
!11175 = !DILocation(line: 298, column: 5, scope: !11134)
!11176 = !DILocation(line: 299, column: 52, scope: !11148)
!11177 = !DILocation(line: 299, column: 62, scope: !11148)
!11178 = !DILocation(line: 299, column: 16, scope: !11148)
!11179 = !DILocation(line: 299, column: 71, scope: !11148)
!11180 = !DILocation(line: 299, column: 78, scope: !11148)
!11181 = !DILocation(line: 300, column: 34, scope: !11148)
!11182 = !DILocation(line: 302, column: 12, scope: !11148)
!11183 = !DILocation(line: 302, column: 23, scope: !11148)
!11184 = !DILocation(line: 302, column: 81, scope: !11148)
!11185 = !DILocation(line: 302, column: 45, scope: !11148)
!11186 = !DILocation(line: 302, column: 9, scope: !11148)
!11187 = !DILocation(line: 305, column: 29, scope: !11147)
!11188 = !DILocation(line: 305, column: 57, scope: !11147)
!11189 = !DILocation(line: 305, column: 66, scope: !11147)
!11190 = !DILocation(line: 305, column: 80, scope: !11147)
!11191 = !DILocation(line: 305, column: 13, scope: !11148)
!11192 = !DILocation(line: 306, column: 25, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11147, file: !1994, line: 305, column: 87)
!11194 = !DILocation(line: 306, column: 36, scope: !11193)
!11195 = !DILocation(line: 306, column: 51, scope: !11193)
!11196 = !DILocation(line: 306, column: 60, scope: !11193)
!11197 = !DILocation(line: 306, column: 74, scope: !11193)
!11198 = !DILocation(line: 306, column: 22, scope: !11193)
!11199 = !DILocation(line: 307, column: 24, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11193, file: !1994, line: 307, column: 17)
!11201 = !DILocation(line: 307, column: 17, scope: !11193)
!11202 = !DILocation(line: 310, column: 23, scope: !11193)
!11203 = !DILocation(line: 311, column: 9, scope: !11193)
!11204 = !DILocation(line: 313, column: 47, scope: !11146)
!11205 = !DILocation(line: 313, column: 56, scope: !11146)
!11206 = !DILocation(line: 313, column: 34, scope: !11146)
!11207 = !DILocation(line: 0, scope: !11146)
!11208 = !DILocation(line: 316, column: 42, scope: !11146)
!11209 = !DILocation(line: 316, column: 58, scope: !11146)
!11210 = !DILocation(line: 316, column: 55, scope: !11146)
!11211 = !DILocation(line: 326, column: 22, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11146, file: !1994, line: 326, column: 17)
!11213 = !DILocation(line: 326, column: 37, scope: !11212)
!11214 = !DILocation(line: 326, column: 17, scope: !11146)
!11215 = !DILocation(line: 332, column: 43, scope: !11146)
!11216 = !DILocation(line: 345, column: 30, scope: !11153)
!11217 = !DILocation(line: 345, column: 52, scope: !11153)
!11218 = !DILocation(line: 0, scope: !11152)
!11219 = !DILocation(line: 348, column: 26, scope: !11152)
!11220 = !DILocation(line: 348, column: 24, scope: !11152)
!11221 = !DILocation(line: 348, column: 22, scope: !11152)
!11222 = !DILocation(line: 349, column: 41, scope: !11152)
!11223 = !DILocation(line: 349, column: 24, scope: !11152)
!11224 = !DILocation(line: 349, column: 22, scope: !11152)
!11225 = !DILocation(line: 350, column: 29, scope: !11152)
!11226 = !DILocation(line: 350, column: 40, scope: !11152)
!11227 = !DILocation(line: 350, column: 55, scope: !11152)
!11228 = !DILocation(line: 350, column: 64, scope: !11152)
!11229 = !DILocation(line: 350, column: 26, scope: !11152)
!11230 = !DILocation(line: 351, column: 28, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11152, file: !1994, line: 351, column: 21)
!11232 = !DILocation(line: 354, column: 13, scope: !11153)
!11233 = !DILocation(line: 362, column: 33, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11235, file: !1994, line: 361, column: 24)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !1994, line: 355, column: 21)
!11236 = distinct !DILexicalBlock(scope: !11153, file: !1994, line: 354, column: 20)
!11237 = !DILocation(line: 362, column: 44, scope: !11234)
!11238 = !DILocation(line: 362, column: 59, scope: !11234)
!11239 = !DILocation(line: 362, column: 68, scope: !11234)
!11240 = !DILocation(line: 362, column: 82, scope: !11234)
!11241 = !DILocation(line: 362, column: 30, scope: !11234)
!11242 = !DILocation(line: 364, column: 28, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11236, file: !1994, line: 364, column: 21)
!11244 = !DILocation(line: 364, column: 21, scope: !11236)
!11245 = !DILocation(line: 368, column: 24, scope: !11146)
!11246 = !DILocation(line: 0, scope: !11147)
!11247 = distinct !{!11247, !11175, !11248}
!11248 = !DILocation(line: 370, column: 5, scope: !11134)
!11249 = !DILocation(line: 372, column: 5, scope: !11134)
!11250 = !DILocation(line: 379, column: 1, scope: !11134)
!11251 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1994, file: !1994, line: 398, type: !11252, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11254)
!11252 = !DISubroutineType(types: !11253)
!11253 = !{!1092, !11039, !61}
!11254 = !{!11255, !11256, !11257, !11258}
!11255 = !DILocalVariable(name: "D", arg: 1, scope: !11251, file: !1994, line: 398, type: !11039)
!11256 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !11251, file: !1994, line: 398, type: !61)
!11257 = !DILocalVariable(name: "result", scope: !11251, file: !1994, line: 401, type: !1092)
!11258 = !DILocalVariable(name: "block_index", scope: !11251, file: !1994, line: 402, type: !61)
!11259 = !DILocation(line: 0, scope: !11251)
!11260 = !DILocation(line: 402, column: 36, scope: !11251)
!11261 = !DILocation(line: 403, column: 13, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11251, file: !1994, line: 403, column: 9)
!11263 = !DILocation(line: 403, column: 9, scope: !11251)
!11264 = !DILocation(line: 404, column: 9, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11262, file: !1994, line: 403, column: 23)
!11266 = !DILocation(line: 405, column: 5, scope: !11265)
!11267 = !DILocation(line: 407, column: 37, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11251, file: !1994, line: 407, column: 9)
!11269 = !DILocation(line: 407, column: 21, scope: !11268)
!11270 = !DILocation(line: 407, column: 9, scope: !11251)
!11271 = !DILocation(line: 412, column: 5, scope: !11251)
!11272 = !DILocation(line: 414, column: 8, scope: !11251)
!11273 = !DILocation(line: 414, column: 19, scope: !11251)
!11274 = !DILocation(line: 414, column: 32, scope: !11251)
!11275 = !DILocation(line: 414, column: 5, scope: !11251)
!11276 = !DILocation(line: 416, column: 17, scope: !11251)
!11277 = !DILocation(line: 416, column: 28, scope: !11251)
!11278 = !DILocation(line: 416, column: 42, scope: !11251)
!11279 = !DILocation(line: 416, column: 14, scope: !11251)
!11280 = !DILocation(line: 418, column: 5, scope: !11251)
!11281 = !DILocation(line: 420, column: 16, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11251, file: !1994, line: 420, column: 9)
!11283 = !DILocation(line: 424, column: 1, scope: !11251)
!11284 = distinct !DISubprogram(name: "NOR_init", scope: !1994, file: !1994, line: 433, type: !8691, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11285 = !DILocation(line: 436, column: 9, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11284, file: !1994, line: 436, column: 9)
!11287 = !DILocation(line: 436, column: 9, scope: !11284)
!11288 = !DILocation(line: 437, column: 9, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11286, file: !1994, line: 436, column: 62)
!11290 = !DILocation(line: 438, column: 9, scope: !11289)
!11291 = !DILocation(line: 439, column: 27, scope: !11289)
!11292 = !DILocation(line: 440, column: 5, scope: !11289)
!11293 = !DILocation(line: 441, column: 5, scope: !11284)
!11294 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1994, file: !1994, line: 444, type: !9157, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11295 = !DILocation(line: 446, column: 12, scope: !11294)
!11296 = !DILocation(line: 446, column: 5, scope: !11294)
!11297 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1994, file: !1994, line: 449, type: !11298, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11300)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{!1092, !61, !61, !762}
!11300 = !{!11301, !11302, !11303, !11304, !11305, !11306, !11307}
!11301 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11297, file: !1994, line: 449, type: !61)
!11302 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11297, file: !1994, line: 449, type: !61)
!11303 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11297, file: !1994, line: 449, type: !762)
!11304 = !DILocalVariable(name: "D", scope: !11297, file: !1994, line: 451, type: !11039)
!11305 = !DILocalVariable(name: "mtdData", scope: !11297, file: !1994, line: 452, type: !2002)
!11306 = !DILocalVariable(name: "result", scope: !11297, file: !1994, line: 453, type: !1092)
!11307 = !DILocalVariable(name: "addr", scope: !11297, file: !1994, line: 455, type: !61)
!11308 = !DILocation(line: 0, scope: !11297)
!11309 = !DILocation(line: 452, column: 60, scope: !11297)
!11310 = !DILocation(line: 455, column: 32, scope: !11297)
!11311 = !DILocation(line: 455, column: 22, scope: !11297)
!11312 = !DILocation(line: 455, column: 95, scope: !11297)
!11313 = !DILocation(line: 455, column: 76, scope: !11297)
!11314 = !DILocation(line: 455, column: 118, scope: !11297)
!11315 = !DILocation(line: 455, column: 74, scope: !11297)
!11316 = !DILocation(line: 455, column: 106, scope: !11297)
!11317 = !DILocation(line: 457, column: 14, scope: !11297)
!11318 = !DILocation(line: 459, column: 16, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11297, file: !1994, line: 459, column: 9)
!11320 = !DILocation(line: 463, column: 1, scope: !11297)
!11321 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1994, file: !1994, line: 466, type: !11298, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11322)
!11322 = !{!11323, !11324, !11325, !11326, !11327, !11328, !11329}
!11323 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11321, file: !1994, line: 466, type: !61)
!11324 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11321, file: !1994, line: 466, type: !61)
!11325 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11321, file: !1994, line: 466, type: !762)
!11326 = !DILocalVariable(name: "D", scope: !11321, file: !1994, line: 468, type: !11039)
!11327 = !DILocalVariable(name: "mtdData", scope: !11321, file: !1994, line: 469, type: !2002)
!11328 = !DILocalVariable(name: "result", scope: !11321, file: !1994, line: 470, type: !1092)
!11329 = !DILocalVariable(name: "addr", scope: !11321, file: !1994, line: 472, type: !61)
!11330 = !DILocation(line: 0, scope: !11321)
!11331 = !DILocation(line: 469, column: 60, scope: !11321)
!11332 = !DILocation(line: 472, column: 32, scope: !11321)
!11333 = !DILocation(line: 472, column: 22, scope: !11321)
!11334 = !DILocation(line: 472, column: 95, scope: !11321)
!11335 = !DILocation(line: 472, column: 76, scope: !11321)
!11336 = !DILocation(line: 472, column: 118, scope: !11321)
!11337 = !DILocation(line: 472, column: 74, scope: !11321)
!11338 = !DILocation(line: 472, column: 106, scope: !11321)
!11339 = !DILocation(line: 474, column: 14, scope: !11321)
!11340 = !DILocation(line: 475, column: 16, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11321, file: !1994, line: 475, column: 9)
!11342 = !DILocation(line: 479, column: 1, scope: !11321)
!11343 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1994, file: !1994, line: 481, type: !11344, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11346)
!11344 = !DISubroutineType(types: !11345)
!11345 = !{!1092, !61}
!11346 = !{!11347, !11348}
!11347 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11343, file: !1994, line: 481, type: !61)
!11348 = !DILocalVariable(name: "result", scope: !11343, file: !1994, line: 483, type: !1092)
!11349 = !DILocation(line: 0, scope: !11343)
!11350 = !DILocation(line: 484, column: 14, scope: !11343)
!11351 = !DILocation(line: 485, column: 16, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11343, file: !1994, line: 485, column: 9)
!11353 = !DILocation(line: 489, column: 1, scope: !11343)
!11354 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1994, file: !1994, line: 492, type: !3665, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11355)
!11355 = !{!11356, !11357, !11358}
!11356 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11354, file: !1994, line: 492, type: !61)
!11357 = !DILocalVariable(name: "D", scope: !11354, file: !1994, line: 494, type: !11039)
!11358 = !DILocalVariable(name: "mtdData", scope: !11354, file: !1994, line: 495, type: !2002)
!11359 = !DILocation(line: 0, scope: !11354)
!11360 = !DILocation(line: 495, column: 60, scope: !11354)
!11361 = !DILocation(line: 496, column: 12, scope: !11354)
!11362 = !DILocation(line: 496, column: 5, scope: !11354)
!11363 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1994, file: !1994, line: 499, type: !3665, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11364)
!11364 = !{!11365, !11366, !11367}
!11365 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11363, file: !1994, line: 499, type: !61)
!11366 = !DILocalVariable(name: "D", scope: !11363, file: !1994, line: 501, type: !11039)
!11367 = !DILocalVariable(name: "mtdData", scope: !11363, file: !1994, line: 502, type: !2002)
!11368 = !DILocation(line: 0, scope: !11363)
!11369 = !DILocation(line: 502, column: 60, scope: !11363)
!11370 = !DILocation(line: 504, column: 12, scope: !11363)
!11371 = !DILocation(line: 504, column: 5, scope: !11363)
!11372 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1994, file: !1994, line: 510, type: !11373, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11375)
!11373 = !DISubroutineType(types: !11374)
!11374 = !{!1092, !61, !1154, !1154}
!11375 = !{!11376, !11377, !11378, !11379, !11380}
!11376 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11372, file: !1994, line: 510, type: !61)
!11377 = !DILocalVariable(name: "block_index", arg: 2, scope: !11372, file: !1994, line: 510, type: !1154)
!11378 = !DILocalVariable(name: "offset", arg: 3, scope: !11372, file: !1994, line: 510, type: !1154)
!11379 = !DILocalVariable(name: "D", scope: !11372, file: !1994, line: 512, type: !11039)
!11380 = !DILocalVariable(name: "mtdData", scope: !11372, file: !1994, line: 513, type: !2002)
!11381 = !DILocation(line: 0, scope: !11372)
!11382 = !DILocation(line: 513, column: 60, scope: !11372)
!11383 = !DILocation(line: 519, column: 20, scope: !11372)
!11384 = !DILocation(line: 519, column: 18, scope: !11372)
!11385 = !DILocation(line: 520, column: 22, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11372, file: !1994, line: 520, column: 9)
!11387 = !DILocation(line: 520, column: 9, scope: !11372)
!11388 = !DILocation(line: 524, column: 28, scope: !11372)
!11389 = !DILocation(line: 524, column: 26, scope: !11372)
!11390 = !DILocation(line: 524, column: 13, scope: !11372)
!11391 = !DILocation(line: 526, column: 5, scope: !11372)
!11392 = !DILocation(line: 527, column: 1, scope: !11372)
!11393 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1994, file: !1994, line: 532, type: !11394, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11396)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!1092, !61, !61, !1154}
!11396 = !{!11397, !11398, !11399, !11400, !11401}
!11397 = !DILocalVariable(name: "block_index", arg: 1, scope: !11393, file: !1994, line: 532, type: !61)
!11398 = !DILocalVariable(name: "offset", arg: 2, scope: !11393, file: !1994, line: 532, type: !61)
!11399 = !DILocalVariable(name: "addr", arg: 3, scope: !11393, file: !1994, line: 532, type: !1154)
!11400 = !DILocalVariable(name: "D", scope: !11393, file: !1994, line: 534, type: !11039)
!11401 = !DILocalVariable(name: "mtdData", scope: !11393, file: !1994, line: 535, type: !2002)
!11402 = !DILocation(line: 0, scope: !11393)
!11403 = !DILocation(line: 535, column: 60, scope: !11393)
!11404 = !DILocation(line: 537, column: 23, scope: !11393)
!11405 = !DILocation(line: 537, column: 13, scope: !11393)
!11406 = !DILocation(line: 537, column: 79, scope: !11393)
!11407 = !DILocation(line: 537, column: 60, scope: !11393)
!11408 = !DILocation(line: 537, column: 58, scope: !11393)
!11409 = !DILocation(line: 537, column: 88, scope: !11393)
!11410 = !DILocation(line: 537, column: 11, scope: !11393)
!11411 = !DILocation(line: 539, column: 5, scope: !11393)
!11412 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1994, file: !1994, line: 545, type: !11413, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11415)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!2050, !1092}
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !11412, file: !1994, line: 545, type: !1092)
!11417 = !DILocation(line: 0, scope: !11412)
!11418 = !DILocation(line: 547, column: 9, scope: !11412)
!11419 = !DILocation(line: 558, column: 9, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11421, file: !1994, line: 558, column: 9)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !1994, line: 558, column: 9)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !1994, line: 558, column: 9)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !1994, line: 557, column: 12)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !1994, line: 555, column: 16)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !1994, line: 553, column: 16)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !1994, line: 551, column: 16)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !1994, line: 549, column: 16)
!11428 = distinct !DILexicalBlock(scope: !11412, file: !1994, line: 547, column: 9)
!11429 = !DILocation(line: 560, column: 1, scope: !11412)
!11430 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1994, file: !1994, line: 561, type: !11431, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11434)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{!11433, !61}
!11433 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1331, line: 127, baseType: !1996)
!11434 = !{!11435, !11436, !11437}
!11435 = !DILocalVariable(name: "address", arg: 1, scope: !11430, file: !1994, line: 561, type: !61)
!11436 = !DILocalVariable(name: "block_size", scope: !11430, file: !1994, line: 563, type: !61)
!11437 = !DILocalVariable(name: "block_index", scope: !11430, file: !1994, line: 564, type: !61)
!11438 = !DILocation(line: 0, scope: !11430)
!11439 = !DILocation(line: 566, column: 19, scope: !11430)
!11440 = !DILocation(line: 567, column: 21, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11430, file: !1994, line: 567, column: 9)
!11442 = !DILocation(line: 567, column: 9, scope: !11430)
!11443 = !DILocation(line: 568, column: 9, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11445, file: !1994, line: 568, column: 9)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !1994, line: 568, column: 9)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !1994, line: 568, column: 9)
!11447 = distinct !DILexicalBlock(scope: !11441, file: !1994, line: 567, column: 45)
!11448 = !DILocation(line: 570, column: 18, scope: !11430)
!11449 = !DILocation(line: 571, column: 9, scope: !11430)
!11450 = !DILocation(line: 574, column: 9, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !1994, line: 573, column: 38)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !1994, line: 573, column: 16)
!11453 = distinct !DILexicalBlock(scope: !11430, file: !1994, line: 571, column: 9)
!11454 = !DILocation(line: 576, column: 9, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !1994, line: 575, column: 39)
!11456 = distinct !DILexicalBlock(scope: !11452, file: !1994, line: 575, column: 16)
!11457 = !DILocation(line: 578, column: 9, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !1994, line: 578, column: 9)
!11459 = distinct !DILexicalBlock(scope: !11460, file: !1994, line: 578, column: 9)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !1994, line: 578, column: 9)
!11461 = distinct !DILexicalBlock(scope: !11456, file: !1994, line: 577, column: 12)
!11462 = !DILocation(line: 0, scope: !11453)
!11463 = !DILocation(line: 580, column: 1, scope: !11430)
!11464 = distinct !DISubprogram(name: "hal_flash_init", scope: !1994, file: !1994, line: 583, type: !9157, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11465 = !DILocation(line: 585, column: 5, scope: !11464)
!11466 = !DILocation(line: 586, column: 5, scope: !11464)
!11467 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1994, file: !1994, line: 589, type: !9157, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11468 = !DILocation(line: 591, column: 5, scope: !11467)
!11469 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1994, file: !1994, line: 595, type: !11470, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11472)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{!2050, !61, !11433}
!11472 = !{!11473, !11474, !11475, !11476, !11477}
!11473 = !DILocalVariable(name: "start_address", arg: 1, scope: !11469, file: !1994, line: 595, type: !61)
!11474 = !DILocalVariable(name: "block", arg: 2, scope: !11469, file: !1994, line: 595, type: !11433)
!11475 = !DILocalVariable(name: "result", scope: !11469, file: !1994, line: 597, type: !1092)
!11476 = !DILocalVariable(name: "block_index", scope: !11469, file: !1994, line: 598, type: !61)
!11477 = !DILocalVariable(name: "erase_type", scope: !11469, file: !1994, line: 599, type: !61)
!11478 = !DILocation(line: 0, scope: !11469)
!11479 = !DILocation(line: 601, column: 9, scope: !11469)
!11480 = !DILocation(line: 602, column: 28, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !1994, line: 602, column: 13)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !1994, line: 601, column: 38)
!11483 = distinct !DILexicalBlock(scope: !11469, file: !1994, line: 601, column: 9)
!11484 = !DILocation(line: 602, column: 37, scope: !11481)
!11485 = !DILocation(line: 602, column: 13, scope: !11482)
!11486 = !DILocation(line: 607, column: 28, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11488, file: !1994, line: 607, column: 13)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !1994, line: 606, column: 46)
!11489 = distinct !DILexicalBlock(scope: !11483, file: !1994, line: 606, column: 16)
!11490 = !DILocation(line: 607, column: 38, scope: !11487)
!11491 = !DILocation(line: 607, column: 13, scope: !11488)
!11492 = !DILocation(line: 612, column: 28, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !1994, line: 612, column: 13)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !1994, line: 611, column: 46)
!11495 = distinct !DILexicalBlock(scope: !11489, file: !1994, line: 611, column: 16)
!11496 = !DILocation(line: 612, column: 38, scope: !11493)
!11497 = !DILocation(line: 612, column: 13, scope: !11494)
!11498 = !DILocation(line: 0, scope: !11483)
!11499 = !DILocation(line: 621, column: 19, scope: !11469)
!11500 = !DILocation(line: 622, column: 21, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11469, file: !1994, line: 622, column: 9)
!11502 = !DILocation(line: 622, column: 9, scope: !11469)
!11503 = !DILocation(line: 626, column: 17, scope: !11469)
!11504 = !DILocation(line: 627, column: 14, scope: !11469)
!11505 = !DILocation(line: 628, column: 16, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11469, file: !1994, line: 628, column: 9)
!11507 = !DILocation(line: 628, column: 9, scope: !11469)
!11508 = !DILocation(line: 629, column: 16, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11506, file: !1994, line: 628, column: 38)
!11510 = !DILocation(line: 629, column: 9, scope: !11509)
!11511 = !DILocation(line: 632, column: 1, scope: !11469)
!11512 = distinct !DISubprogram(name: "hal_flash_read", scope: !1994, file: !1994, line: 634, type: !11513, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11515)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{!2050, !61, !762, !61}
!11515 = !{!11516, !11517, !11518, !11519, !11520}
!11516 = !DILocalVariable(name: "start_address", arg: 1, scope: !11512, file: !1994, line: 634, type: !61)
!11517 = !DILocalVariable(name: "buffer", arg: 2, scope: !11512, file: !1994, line: 634, type: !762)
!11518 = !DILocalVariable(name: "length", arg: 3, scope: !11512, file: !1994, line: 634, type: !61)
!11519 = !DILocalVariable(name: "D", scope: !11512, file: !1994, line: 636, type: !11039)
!11520 = !DILocalVariable(name: "result", scope: !11512, file: !1994, line: 637, type: !1092)
!11521 = !DILocation(line: 0, scope: !11512)
!11522 = !DILocation(line: 639, column: 14, scope: !11512)
!11523 = !DILocation(line: 641, column: 16, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11512, file: !1994, line: 641, column: 9)
!11525 = !DILocation(line: 641, column: 9, scope: !11512)
!11526 = !DILocation(line: 642, column: 16, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11524, file: !1994, line: 641, column: 38)
!11528 = !DILocation(line: 642, column: 9, scope: !11527)
!11529 = !DILocation(line: 645, column: 1, scope: !11512)
!11530 = distinct !DISubprogram(name: "hal_flash_write", scope: !1994, file: !1994, line: 647, type: !11531, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11533)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{!2050, !61, !5047, !61}
!11533 = !{!11534, !11535, !11536, !11537, !11538, !11539}
!11534 = !DILocalVariable(name: "address", arg: 1, scope: !11530, file: !1994, line: 647, type: !61)
!11535 = !DILocalVariable(name: "data", arg: 2, scope: !11530, file: !1994, line: 647, type: !5047)
!11536 = !DILocalVariable(name: "length", arg: 3, scope: !11530, file: !1994, line: 647, type: !61)
!11537 = !DILocalVariable(name: "D", scope: !11530, file: !1994, line: 649, type: !11039)
!11538 = !DILocalVariable(name: "result", scope: !11530, file: !1994, line: 650, type: !1092)
!11539 = !DILocalVariable(name: "addr", scope: !11540, file: !1994, line: 660, type: !61)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !1994, line: 659, column: 40)
!11541 = distinct !DILexicalBlock(scope: !11530, file: !1994, line: 659, column: 8)
!11542 = !DILocation(line: 0, scope: !11530)
!11543 = !DILocation(line: 652, column: 14, scope: !11530)
!11544 = !DILocation(line: 653, column: 16, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11530, file: !1994, line: 653, column: 9)
!11546 = !DILocation(line: 653, column: 9, scope: !11530)
!11547 = !DILocation(line: 654, column: 16, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11545, file: !1994, line: 653, column: 38)
!11549 = !DILocation(line: 654, column: 9, scope: !11548)
!11550 = !DILocation(line: 659, column: 8, scope: !11541)
!11551 = !DILocation(line: 659, column: 8, scope: !11530)
!11552 = !DILocation(line: 661, column: 25, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11540, file: !1994, line: 661, column: 8)
!11554 = !DILocation(line: 0, scope: !11540)
!11555 = !DILocation(line: 661, column: 58, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11553, file: !1994, line: 661, column: 8)
!11557 = !DILocation(line: 661, column: 8, scope: !11553)
!11558 = !DILocation(line: 662, column: 13, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11556, file: !1994, line: 661, column: 147)
!11560 = !DILocation(line: 661, column: 128, scope: !11556)
!11561 = distinct !{!11561, !11557, !11562}
!11562 = !DILocation(line: 663, column: 8, scope: !11553)
!11563 = !DILocation(line: 668, column: 1, scope: !11530)
!11564 = distinct !DISubprogram(name: "BlockAddress", scope: !2055, file: !2055, line: 111, type: !11565, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11567)
!11565 = !DISubroutineType(types: !11566)
!11566 = !{!88, !88, !61}
!11567 = !{!11568, !11569, !11570, !11571, !11572, !11573}
!11568 = !DILocalVariable(name: "DriverData", arg: 1, scope: !11564, file: !2055, line: 111, type: !88)
!11569 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11564, file: !2055, line: 111, type: !61)
!11570 = !DILocalVariable(name: "D", scope: !11564, file: !2055, line: 113, type: !2083)
!11571 = !DILocalVariable(name: "addr", scope: !11564, file: !2055, line: 114, type: !61)
!11572 = !DILocalVariable(name: "region", scope: !11564, file: !2055, line: 115, type: !61)
!11573 = !DILocalVariable(name: "BlockUpperBound", scope: !11564, file: !2055, line: 115, type: !61)
!11574 = !DILocation(line: 0, scope: !11564)
!11575 = !DILocation(line: 117, column: 26, scope: !11564)
!11576 = !DILocation(line: 117, column: 40, scope: !11564)
!11577 = !DILocation(line: 118, column: 28, scope: !11564)
!11578 = !DILocation(line: 118, column: 5, scope: !11564)
!11579 = !DILocation(line: 119, column: 39, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11564, file: !2055, line: 118, column: 43)
!11581 = !DILocation(line: 119, column: 76, scope: !11580)
!11582 = !DILocation(line: 119, column: 52, scope: !11580)
!11583 = !DILocation(line: 119, column: 14, scope: !11580)
!11584 = !DILocation(line: 120, column: 15, scope: !11580)
!11585 = !DILocation(line: 121, column: 50, scope: !11580)
!11586 = !DILocation(line: 121, column: 25, scope: !11580)
!11587 = distinct !{!11587, !11578, !11588}
!11588 = !DILocation(line: 122, column: 5, scope: !11564)
!11589 = !DILocation(line: 123, column: 68, scope: !11564)
!11590 = !DILocation(line: 123, column: 44, scope: !11564)
!11591 = !DILocation(line: 123, column: 25, scope: !11564)
!11592 = !DILocation(line: 123, column: 107, scope: !11564)
!11593 = !DILocation(line: 123, column: 83, scope: !11564)
!11594 = !DILocation(line: 123, column: 10, scope: !11564)
!11595 = !DILocation(line: 125, column: 16, scope: !11564)
!11596 = !DILocation(line: 125, column: 25, scope: !11564)
!11597 = !DILocation(line: 125, column: 5, scope: !11564)
!11598 = distinct !DISubprogram(name: "MapWindow", scope: !2055, file: !2055, line: 180, type: !1688, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11599)
!11599 = !{!11600, !11601, !11602, !11603}
!11600 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11598, file: !2055, line: 180, type: !88)
!11601 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11598, file: !2055, line: 180, type: !61)
!11602 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !11598, file: !2055, line: 180, type: !61)
!11603 = !DILocalVariable(name: "D", scope: !11598, file: !2055, line: 182, type: !2083)
!11604 = !DILocation(line: 0, scope: !11598)
!11605 = !DILocation(line: 185, column: 5, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !2055, line: 185, column: 5)
!11607 = distinct !DILexicalBlock(scope: !11598, file: !2055, line: 185, column: 5)
!11608 = !DILocation(line: 185, column: 5, scope: !11607)
!11609 = !DILocation(line: 185, column: 5, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11606, file: !2055, line: 185, column: 5)
!11611 = !DILocation(line: 186, column: 27, scope: !11598)
!11612 = !DILocation(line: 186, column: 19, scope: !11598)
!11613 = !DILocation(line: 186, column: 8, scope: !11598)
!11614 = !DILocation(line: 186, column: 17, scope: !11598)
!11615 = !DILocation(line: 188, column: 5, scope: !11598)
!11616 = !DILocation(line: 0, scope: !2076)
!11617 = !DILocation(line: 142, column: 12, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !2076, file: !2055, line: 142, column: 9)
!11619 = !DILocation(line: 142, column: 34, scope: !11618)
!11620 = !DILocation(line: 142, column: 64, scope: !11618)
!11621 = !DILocation(line: 142, column: 75, scope: !11618)
!11622 = !DILocation(line: 142, column: 9, scope: !2076)
!11623 = !DILocation(line: 143, column: 79, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !2055, line: 143, column: 13)
!11625 = distinct !DILexicalBlock(scope: !11618, file: !2055, line: 142, column: 99)
!11626 = !DILocation(line: 143, column: 13, scope: !11625)
!11627 = !DILocation(line: 144, column: 72, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !2055, line: 144, column: 17)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !2055, line: 143, column: 94)
!11630 = !DILocation(line: 144, column: 83, scope: !11628)
!11631 = !DILocation(line: 144, column: 17, scope: !11629)
!11632 = !DILocation(line: 145, column: 87, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !2055, line: 145, column: 21)
!11634 = distinct !DILexicalBlock(scope: !11628, file: !2055, line: 144, column: 107)
!11635 = !DILocation(line: 145, column: 21, scope: !11634)
!11636 = !DILocation(line: 146, column: 33, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11633, file: !2055, line: 145, column: 102)
!11638 = !DILocation(line: 147, column: 25, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11637, file: !2055, line: 147, column: 25)
!11640 = !DILocation(line: 147, column: 62, scope: !11639)
!11641 = !DILocation(line: 147, column: 34, scope: !11639)
!11642 = !DILocation(line: 147, column: 25, scope: !11637)
!11643 = !DILocation(line: 148, column: 91, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11639, file: !2055, line: 147, column: 106)
!11645 = !DILocation(line: 149, column: 111, scope: !11644)
!11646 = !DILocation(line: 149, column: 101, scope: !11644)
!11647 = !DILocation(line: 149, column: 87, scope: !11644)
!11648 = !DILocation(line: 149, column: 99, scope: !11644)
!11649 = !DILocation(line: 150, column: 37, scope: !11644)
!11650 = !DILocation(line: 150, column: 34, scope: !11644)
!11651 = !DILocation(line: 151, column: 21, scope: !11644)
!11652 = !DILocation(line: 152, column: 91, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11639, file: !2055, line: 151, column: 28)
!11654 = !DILocation(line: 153, column: 111, scope: !11653)
!11655 = !DILocation(line: 153, column: 101, scope: !11653)
!11656 = !DILocation(line: 153, column: 87, scope: !11653)
!11657 = !DILocation(line: 153, column: 99, scope: !11653)
!11658 = !DILocation(line: 154, column: 34, scope: !11653)
!11659 = !DILocation(line: 157, column: 32, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11633, file: !2055, line: 156, column: 24)
!11661 = !DILocation(line: 158, column: 83, scope: !11660)
!11662 = !DILocation(line: 159, column: 60, scope: !11660)
!11663 = !DILocation(line: 159, column: 33, scope: !11660)
!11664 = !DILocation(line: 159, column: 30, scope: !11660)
!11665 = !DILocation(line: 162, column: 29, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11628, file: !2055, line: 161, column: 20)
!11667 = !DILocation(line: 163, column: 83, scope: !11666)
!11668 = !DILocation(line: 164, column: 103, scope: !11666)
!11669 = !DILocation(line: 164, column: 93, scope: !11666)
!11670 = !DILocation(line: 164, column: 79, scope: !11666)
!11671 = !DILocation(line: 164, column: 91, scope: !11666)
!11672 = !DILocation(line: 165, column: 56, scope: !11666)
!11673 = !DILocation(line: 165, column: 29, scope: !11666)
!11674 = !DILocation(line: 165, column: 26, scope: !11666)
!11675 = !DILocation(line: 168, column: 24, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11624, file: !2055, line: 167, column: 16)
!11677 = !DILocation(line: 169, column: 75, scope: !11676)
!11678 = !DILocation(line: 170, column: 50, scope: !11676)
!11679 = !DILocation(line: 170, column: 22, scope: !11676)
!11680 = !DILocation(line: 173, column: 21, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11618, file: !2055, line: 172, column: 12)
!11682 = !DILocation(line: 174, column: 75, scope: !11681)
!11683 = !DILocation(line: 175, column: 95, scope: !11681)
!11684 = !DILocation(line: 175, column: 85, scope: !11681)
!11685 = !DILocation(line: 175, column: 71, scope: !11681)
!11686 = !DILocation(line: 175, column: 83, scope: !11681)
!11687 = !DILocation(line: 176, column: 46, scope: !11681)
!11688 = !DILocation(line: 176, column: 18, scope: !11681)
!11689 = !DILocation(line: 0, scope: !11618)
!11690 = !DILocation(line: 178, column: 5, scope: !2076)
!11691 = distinct !DISubprogram(name: "BlockSize", scope: !2055, file: !2055, line: 191, type: !2077, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11692)
!11692 = !{!11693, !11694, !11695, !11696, !11697}
!11693 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11691, file: !2055, line: 191, type: !88)
!11694 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11691, file: !2055, line: 191, type: !61)
!11695 = !DILocalVariable(name: "D", scope: !11691, file: !2055, line: 193, type: !2083)
!11696 = !DILocalVariable(name: "region", scope: !11691, file: !2055, line: 194, type: !61)
!11697 = !DILocalVariable(name: "BlockUpperBound", scope: !11691, file: !2055, line: 194, type: !61)
!11698 = !DILocation(line: 0, scope: !11691)
!11699 = !DILocation(line: 196, column: 26, scope: !11691)
!11700 = !DILocation(line: 196, column: 45, scope: !11691)
!11701 = !DILocation(line: 197, column: 28, scope: !11691)
!11702 = !DILocation(line: 197, column: 5, scope: !11691)
!11703 = !DILocation(line: 198, column: 15, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11691, file: !2055, line: 197, column: 43)
!11705 = !DILocation(line: 199, column: 50, scope: !11704)
!11706 = !DILocation(line: 199, column: 25, scope: !11704)
!11707 = distinct !{!11707, !11702, !11708}
!11708 = !DILocation(line: 200, column: 5, scope: !11691)
!11709 = !DILocation(line: 202, column: 35, scope: !11691)
!11710 = !DILocation(line: 202, column: 5, scope: !11691)
!11711 = distinct !DISubprogram(name: "BlockIndex", scope: !2055, file: !2055, line: 205, type: !2077, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11712)
!11712 = !{!11713, !11714, !11715, !11716, !11717, !11718}
!11713 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11711, file: !2055, line: 205, type: !88)
!11714 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11711, file: !2055, line: 205, type: !61)
!11715 = !DILocalVariable(name: "D", scope: !11711, file: !2055, line: 207, type: !2083)
!11716 = !DILocalVariable(name: "region", scope: !11711, file: !2055, line: 208, type: !61)
!11717 = !DILocalVariable(name: "BlockUpperAddr", scope: !11711, file: !2055, line: 208, type: !61)
!11718 = !DILocalVariable(name: "blk_idx", scope: !11711, file: !2055, line: 209, type: !61)
!11719 = !DILocation(line: 0, scope: !11711)
!11720 = !DILocation(line: 211, column: 25, scope: !11711)
!11721 = !DILocation(line: 211, column: 44, scope: !11711)
!11722 = !DILocation(line: 211, column: 81, scope: !11711)
!11723 = !DILocation(line: 211, column: 57, scope: !11711)
!11724 = !DILocation(line: 213, column: 28, scope: !11711)
!11725 = !DILocation(line: 213, column: 40, scope: !11711)
!11726 = !DILocation(line: 213, column: 66, scope: !11711)
!11727 = !DILocation(line: 213, column: 5, scope: !11711)
!11728 = !DILocation(line: 214, column: 17, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11711, file: !2055, line: 213, column: 78)
!11730 = !DILocation(line: 215, column: 18, scope: !11729)
!11731 = !DILocation(line: 216, column: 15, scope: !11729)
!11732 = !DILocation(line: 217, column: 48, scope: !11729)
!11733 = !DILocation(line: 217, column: 85, scope: !11729)
!11734 = !DILocation(line: 217, column: 61, scope: !11729)
!11735 = distinct !{!11735, !11727, !11736}
!11736 = !DILocation(line: 218, column: 5, scope: !11711)
!11737 = !DILocation(line: 221, column: 53, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !2055, line: 220, column: 37)
!11739 = distinct !DILexicalBlock(scope: !11711, file: !2055, line: 220, column: 9)
!11740 = !DILocation(line: 221, column: 29, scope: !11738)
!11741 = !DILocation(line: 221, column: 17, scope: !11738)
!11742 = !DILocation(line: 222, column: 5, scope: !11738)
!11743 = !DILocation(line: 0, scope: !11739)
!11744 = !DILocation(line: 225, column: 5, scope: !11711)
!11745 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2055, file: !2055, line: 232, type: !3917, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11746 = !DILocation(line: 238, column: 5, scope: !11745)
!11747 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2055, file: !2055, line: 243, type: !3917, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11748 = !DILocation(line: 245, column: 5, scope: !11747)
!11749 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2055, file: !2055, line: 249, type: !3917, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11750 = !DILocation(line: 254, column: 5, scope: !11749)
!11751 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2055, file: !2055, line: 259, type: !3917, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11752 = !DILocation(line: 261, column: 5, scope: !11751)
!11753 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2055, file: !2055, line: 271, type: !7793, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11754)
!11754 = !{!11755, !11756}
!11755 = !DILocalVariable(name: "delay", arg: 1, scope: !11753, file: !2055, line: 271, type: !61)
!11756 = !DILocalVariable(name: "ret", scope: !11753, file: !2055, line: 276, type: !3084)
!11757 = !DILocation(line: 0, scope: !11753)
!11758 = !DILocation(line: 277, column: 11, scope: !11753)
!11759 = !DILocation(line: 278, column: 13, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11753, file: !2055, line: 278, column: 9)
!11761 = !DILocation(line: 278, column: 9, scope: !11753)
!11762 = !DILocation(line: 279, column: 9, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11764, file: !2055, line: 279, column: 9)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !2055, line: 279, column: 9)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !2055, line: 279, column: 9)
!11766 = distinct !DILexicalBlock(scope: !11760, file: !2055, line: 278, column: 35)
!11767 = !DILocation(line: 282, column: 1, scope: !11753)
!11768 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2716, file: !2716, line: 58, type: !11769, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11771)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{null, !2350, !7, !2350, null}
!11771 = !{!11772, !11773, !11774, !11775, !11784}
!11772 = !DILocalVariable(name: "func", arg: 1, scope: !11768, file: !2716, line: 58, type: !2350)
!11773 = !DILocalVariable(name: "line", arg: 2, scope: !11768, file: !2716, line: 58, type: !7)
!11774 = !DILocalVariable(name: "message", arg: 3, scope: !11768, file: !2716, line: 58, type: !2350)
!11775 = !DILocalVariable(name: "ap", scope: !11768, file: !2716, line: 60, type: !11776)
!11776 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !11777, line: 46, baseType: !11778)
!11777 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!11778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !11779, line: 32, baseType: !11780)
!11779 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!11780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2716, baseType: !11781)
!11781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11782)
!11782 = !{!11783}
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11781, file: !2716, line: 60, baseType: !88, size: 32)
!11784 = !DILocalVariable(name: "mask", scope: !11768, file: !2716, line: 62, type: !61)
!11785 = !DILocation(line: 0, scope: !11768)
!11786 = !DILocation(line: 60, column: 5, scope: !11768)
!11787 = !DILocation(line: 60, column: 13, scope: !11768)
!11788 = !DILocation(line: 62, column: 5, scope: !11768)
!11789 = !DILocation(line: 63, column: 5, scope: !11768)
!11790 = !DILocation(line: 65, column: 5, scope: !11768)
!11791 = !DILocation(line: 66, column: 5, scope: !11768)
!11792 = !DILocation(line: 67, column: 5, scope: !11768)
!11793 = !DILocation(line: 69, column: 37, scope: !11768)
!11794 = !DILocation(line: 69, column: 5, scope: !11768)
!11795 = !DILocation(line: 71, column: 1, scope: !11768)
!11796 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2716, file: !2716, line: 72, type: !11769, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11797)
!11797 = !{!11798, !11799, !11800, !11801, !11802}
!11798 = !DILocalVariable(name: "func", arg: 1, scope: !11796, file: !2716, line: 72, type: !2350)
!11799 = !DILocalVariable(name: "line", arg: 2, scope: !11796, file: !2716, line: 72, type: !7)
!11800 = !DILocalVariable(name: "message", arg: 3, scope: !11796, file: !2716, line: 72, type: !2350)
!11801 = !DILocalVariable(name: "ap", scope: !11796, file: !2716, line: 74, type: !11776)
!11802 = !DILocalVariable(name: "mask", scope: !11796, file: !2716, line: 76, type: !61)
!11803 = !DILocation(line: 0, scope: !11796)
!11804 = !DILocation(line: 74, column: 5, scope: !11796)
!11805 = !DILocation(line: 74, column: 13, scope: !11796)
!11806 = !DILocation(line: 76, column: 5, scope: !11796)
!11807 = !DILocation(line: 77, column: 5, scope: !11796)
!11808 = !DILocation(line: 79, column: 5, scope: !11796)
!11809 = !DILocation(line: 80, column: 5, scope: !11796)
!11810 = !DILocation(line: 81, column: 5, scope: !11796)
!11811 = !DILocation(line: 83, column: 37, scope: !11796)
!11812 = !DILocation(line: 83, column: 5, scope: !11796)
!11813 = !DILocation(line: 85, column: 1, scope: !11796)
!11814 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2716, file: !2716, line: 86, type: !11769, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11815)
!11815 = !{!11816, !11817, !11818, !11819, !11820}
!11816 = !DILocalVariable(name: "func", arg: 1, scope: !11814, file: !2716, line: 86, type: !2350)
!11817 = !DILocalVariable(name: "line", arg: 2, scope: !11814, file: !2716, line: 86, type: !7)
!11818 = !DILocalVariable(name: "message", arg: 3, scope: !11814, file: !2716, line: 86, type: !2350)
!11819 = !DILocalVariable(name: "ap", scope: !11814, file: !2716, line: 88, type: !11776)
!11820 = !DILocalVariable(name: "mask", scope: !11814, file: !2716, line: 90, type: !61)
!11821 = !DILocation(line: 0, scope: !11814)
!11822 = !DILocation(line: 88, column: 5, scope: !11814)
!11823 = !DILocation(line: 88, column: 13, scope: !11814)
!11824 = !DILocation(line: 90, column: 5, scope: !11814)
!11825 = !DILocation(line: 91, column: 5, scope: !11814)
!11826 = !DILocation(line: 93, column: 5, scope: !11814)
!11827 = !DILocation(line: 94, column: 5, scope: !11814)
!11828 = !DILocation(line: 95, column: 5, scope: !11814)
!11829 = !DILocation(line: 97, column: 37, scope: !11814)
!11830 = !DILocation(line: 97, column: 5, scope: !11814)
!11831 = !DILocation(line: 99, column: 1, scope: !11814)
!11832 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2716, file: !2716, line: 101, type: !11833, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11837)
!11833 = !DISubroutineType(types: !11834)
!11834 = !{null, !2350, !7, !2350, !11835, !7, null}
!11835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11836, size: 32)
!11836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11837 = !{!11838, !11839, !11840, !11841, !11842}
!11838 = !DILocalVariable(name: "func", arg: 1, scope: !11832, file: !2716, line: 101, type: !2350)
!11839 = !DILocalVariable(name: "line", arg: 2, scope: !11832, file: !2716, line: 101, type: !7)
!11840 = !DILocalVariable(name: "message", arg: 3, scope: !11832, file: !2716, line: 101, type: !2350)
!11841 = !DILocalVariable(name: "data", arg: 4, scope: !11832, file: !2716, line: 101, type: !11835)
!11842 = !DILocalVariable(name: "length", arg: 5, scope: !11832, file: !2716, line: 101, type: !7)
!11843 = !DILocation(line: 0, scope: !11832)
!11844 = !DILocation(line: 103, column: 1, scope: !11832)
!11845 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2135, file: !2135, line: 87, type: !3665, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11846)
!11846 = !{!11847, !11848}
!11847 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11845, file: !2135, line: 87, type: !61)
!11848 = !DILocalVariable(name: "value", scope: !11845, file: !2135, line: 89, type: !61)
!11849 = !DILocation(line: 0, scope: !11845)
!11850 = !DILocation(line: 91, column: 41, scope: !11845)
!11851 = !DILocation(line: 91, column: 5, scope: !11845)
!11852 = !DILocation(line: 91, column: 19, scope: !11845)
!11853 = !DILocation(line: 91, column: 31, scope: !11845)
!11854 = !DILocation(line: 92, column: 77, scope: !11845)
!11855 = !DILocation(line: 92, column: 60, scope: !11845)
!11856 = !DILocation(line: 92, column: 31, scope: !11845)
!11857 = !DILocation(line: 94, column: 5, scope: !11845)
!11858 = !DILocation(line: 94, column: 27, scope: !11845)
!11859 = !DILocation(line: 94, column: 39, scope: !11845)
!11860 = !DILocation(line: 94, column: 65, scope: !11845)
!11861 = distinct !{!11861, !11857, !11862}
!11862 = !DILocation(line: 94, column: 70, scope: !11845)
!11863 = !DILocation(line: 96, column: 29, scope: !11845)
!11864 = !DILocation(line: 96, column: 64, scope: !11845)
!11865 = !DILocation(line: 98, column: 5, scope: !11845)
!11866 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2135, file: !2135, line: 102, type: !11867, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11869)
!11867 = !DISubroutineType(types: !11868)
!11868 = !{null, !61, !61}
!11869 = !{!11870, !11871}
!11870 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11866, file: !2135, line: 102, type: !61)
!11871 = !DILocalVariable(name: "value", arg: 2, scope: !11866, file: !2135, line: 102, type: !61)
!11872 = !DILocation(line: 0, scope: !11866)
!11873 = !DILocation(line: 106, column: 40, scope: !11866)
!11874 = !DILocation(line: 106, column: 77, scope: !11866)
!11875 = !DILocation(line: 106, column: 102, scope: !11866)
!11876 = !DILocation(line: 106, column: 5, scope: !11866)
!11877 = !DILocation(line: 106, column: 19, scope: !11866)
!11878 = !DILocation(line: 106, column: 31, scope: !11866)
!11879 = !DILocation(line: 107, column: 77, scope: !11866)
!11880 = !DILocation(line: 107, column: 60, scope: !11866)
!11881 = !DILocation(line: 107, column: 31, scope: !11866)
!11882 = !DILocation(line: 109, column: 5, scope: !11866)
!11883 = !DILocation(line: 109, column: 27, scope: !11866)
!11884 = !DILocation(line: 109, column: 39, scope: !11866)
!11885 = !DILocation(line: 109, column: 65, scope: !11866)
!11886 = distinct !{!11886, !11882, !11887}
!11887 = !DILocation(line: 109, column: 70, scope: !11866)
!11888 = !DILocation(line: 111, column: 5, scope: !11866)
!11889 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2135, file: !2135, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11890 = !DILocation(line: 117, column: 36, scope: !11889)
!11891 = !DILocation(line: 117, column: 18, scope: !11889)
!11892 = !DILocation(line: 118, column: 37, scope: !11889)
!11893 = !DILocation(line: 118, column: 18, scope: !11889)
!11894 = !DILocation(line: 119, column: 37, scope: !11889)
!11895 = !DILocation(line: 119, column: 19, scope: !11889)
!11896 = !DILocation(line: 120, column: 37, scope: !11889)
!11897 = !DILocation(line: 120, column: 19, scope: !11889)
!11898 = !DILocation(line: 121, column: 37, scope: !11889)
!11899 = !DILocation(line: 121, column: 19, scope: !11889)
!11900 = !DILocation(line: 122, column: 37, scope: !11889)
!11901 = !DILocation(line: 122, column: 19, scope: !11889)
!11902 = !DILocation(line: 123, column: 37, scope: !11889)
!11903 = !DILocation(line: 123, column: 19, scope: !11889)
!11904 = !DILocation(line: 125, column: 37, scope: !11889)
!11905 = !DILocation(line: 125, column: 19, scope: !11889)
!11906 = !DILocation(line: 126, column: 37, scope: !11889)
!11907 = !DILocation(line: 126, column: 19, scope: !11889)
!11908 = !DILocation(line: 127, column: 37, scope: !11889)
!11909 = !DILocation(line: 127, column: 19, scope: !11889)
!11910 = !DILocation(line: 128, column: 37, scope: !11889)
!11911 = !DILocation(line: 128, column: 19, scope: !11889)
!11912 = !DILocation(line: 130, column: 36, scope: !11889)
!11913 = !DILocation(line: 130, column: 18, scope: !11889)
!11914 = !DILocation(line: 131, column: 36, scope: !11889)
!11915 = !DILocation(line: 131, column: 18, scope: !11889)
!11916 = !DILocation(line: 133, column: 5, scope: !11889)
!11917 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2135, file: !2135, line: 140, type: !11918, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!7}
!11920 = !DILocation(line: 144, column: 5, scope: !11917)
!11921 = !DILocation(line: 144, column: 19, scope: !11917)
!11922 = !DILocation(line: 144, column: 28, scope: !11917)
!11923 = !DILocation(line: 147, column: 19, scope: !11917)
!11924 = !DILocation(line: 147, column: 28, scope: !11917)
!11925 = !DILocation(line: 150, column: 19, scope: !11917)
!11926 = !DILocation(line: 150, column: 28, scope: !11917)
!11927 = !DILocation(line: 152, column: 5, scope: !11917)
!11928 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2135, file: !2135, line: 157, type: !8691, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11929)
!11929 = !{!11930, !11931, !11932, !11933, !11934, !11935}
!11930 = !DILocalVariable(name: "mbist_src", scope: !11928, file: !2135, line: 159, type: !61)
!11931 = !DILocalVariable(name: "mbist_len", scope: !11928, file: !2135, line: 159, type: !61)
!11932 = !DILocalVariable(name: "mbist_data", scope: !11928, file: !2135, line: 159, type: !3638)
!11933 = !DILocalVariable(name: "i", scope: !11928, file: !2135, line: 160, type: !61)
!11934 = !DILocalVariable(name: "bist_data_inv", scope: !11928, file: !2135, line: 160, type: !61)
!11935 = !DILocalVariable(name: "bist_data_random", scope: !11928, file: !2135, line: 160, type: !61)
!11936 = !DILocation(line: 159, column: 36, scope: !11928)
!11937 = !DILocation(line: 0, scope: !11928)
!11938 = !DILocation(line: 165, column: 5, scope: !11928)
!11939 = !DILocation(line: 165, column: 19, scope: !11928)
!11940 = !DILocation(line: 165, column: 30, scope: !11928)
!11941 = !DILocation(line: 166, column: 5, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11928, file: !2135, line: 166, column: 5)
!11943 = !DILocation(line: 167, column: 9, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !2135, line: 167, column: 9)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !2135, line: 166, column: 66)
!11946 = distinct !DILexicalBlock(scope: !11942, file: !2135, line: 166, column: 5)
!11947 = !DILocation(line: 168, column: 13, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !2135, line: 168, column: 13)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !2135, line: 167, column: 34)
!11950 = distinct !DILexicalBlock(scope: !11944, file: !2135, line: 167, column: 9)
!11951 = !DILocation(line: 168, column: 57, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11948, file: !2135, line: 168, column: 13)
!11953 = distinct !{!11953, !11947, !11954}
!11954 = !DILocation(line: 183, column: 13, scope: !11948)
!11955 = !DILocation(line: 170, column: 42, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11952, file: !2135, line: 168, column: 83)
!11957 = !DILocation(line: 172, column: 42, scope: !11956)
!11958 = !DILocation(line: 174, column: 45, scope: !11956)
!11959 = !DILocation(line: 174, column: 59, scope: !11956)
!11960 = !DILocation(line: 174, column: 154, scope: !11956)
!11961 = !DILocation(line: 174, column: 87, scope: !11956)
!11962 = !DILocation(line: 174, column: 134, scope: !11956)
!11963 = !DILocation(line: 174, column: 42, scope: !11956)
!11964 = !DILocation(line: 175, column: 42, scope: !11956)
!11965 = !DILocation(line: 177, column: 17, scope: !11956)
!11966 = !DILocation(line: 177, column: 39, scope: !11956)
!11967 = !DILocation(line: 177, column: 50, scope: !11956)
!11968 = !DILocation(line: 177, column: 71, scope: !11956)
!11969 = distinct !{!11969, !11965, !11970}
!11970 = !DILocation(line: 177, column: 78, scope: !11956)
!11971 = !DILocation(line: 179, column: 36, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11956, file: !2135, line: 179, column: 21)
!11973 = !DILocation(line: 179, column: 47, scope: !11972)
!11974 = !DILocation(line: 179, column: 69, scope: !11972)
!11975 = !DILocation(line: 168, column: 79, scope: !11952)
!11976 = !DILocation(line: 179, column: 21, scope: !11956)
!11977 = !DILocation(line: 167, column: 30, scope: !11950)
!11978 = !DILocation(line: 167, column: 23, scope: !11950)
!11979 = distinct !{!11979, !11943, !11980}
!11980 = !DILocation(line: 184, column: 9, scope: !11944)
!11981 = !DILocation(line: 166, column: 62, scope: !11946)
!11982 = !DILocation(line: 166, column: 43, scope: !11946)
!11983 = distinct !{!11983, !11941, !11984}
!11984 = !DILocation(line: 185, column: 5, scope: !11942)
!11985 = !DILocation(line: 189, column: 1, scope: !11928)
!11986 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2135, file: !2135, line: 190, type: !8691, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11987 = !DILocation(line: 192, column: 9, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11986, file: !2135, line: 192, column: 9)
!11989 = !DILocation(line: 192, column: 26, scope: !11988)
!11990 = !DILocation(line: 0, scope: !11986)
!11991 = !DILocation(line: 197, column: 1, scope: !11986)
!11992 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2135, file: !2135, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11993)
!11993 = !{!11994, !11995}
!11994 = !DILocalVariable(name: "dqy_in_del", scope: !11992, file: !2135, line: 203, type: !1092)
!11995 = !DILocalVariable(name: "dqs_in_del", scope: !11992, file: !2135, line: 204, type: !1092)
!11996 = !DILocation(line: 0, scope: !11992)
!11997 = !DILocation(line: 206, column: 5, scope: !11992)
!11998 = !DILocation(line: 206, column: 19, scope: !11992)
!11999 = !DILocation(line: 206, column: 28, scope: !11992)
!12000 = !DILocation(line: 207, column: 19, scope: !11992)
!12001 = !DILocation(line: 207, column: 28, scope: !11992)
!12002 = !DILocation(line: 208, column: 19, scope: !11992)
!12003 = !DILocation(line: 208, column: 28, scope: !11992)
!12004 = !DILocation(line: 209, column: 19, scope: !11992)
!12005 = !DILocation(line: 209, column: 28, scope: !11992)
!12006 = !DILocation(line: 212, column: 23, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !2135, line: 211, column: 78)
!12008 = distinct !DILexicalBlock(scope: !12009, file: !2135, line: 211, column: 5)
!12009 = distinct !DILexicalBlock(scope: !11992, file: !2135, line: 211, column: 5)
!12010 = !DILocation(line: 212, column: 32, scope: !12007)
!12011 = !DILocation(line: 213, column: 23, scope: !12007)
!12012 = !DILocation(line: 213, column: 32, scope: !12007)
!12013 = !DILocation(line: 215, column: 19, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12007, file: !2135, line: 215, column: 13)
!12015 = !DILocation(line: 215, column: 15, scope: !12014)
!12016 = !DILocation(line: 215, column: 13, scope: !12007)
!12017 = !DILocation(line: 211, column: 40, scope: !12008)
!12018 = !DILocation(line: 211, column: 5, scope: !12009)
!12019 = distinct !{!12019, !12018, !12020}
!12020 = !DILocation(line: 218, column: 5, scope: !12009)
!12021 = !DILocation(line: 211, column: 57, scope: !12008)
!12022 = !DILocation(line: 212, column: 9, scope: !12007)
!12023 = !DILocation(line: 212, column: 45, scope: !12007)
!12024 = !DILocation(line: 212, column: 83, scope: !12007)
!12025 = !DILocation(line: 212, column: 121, scope: !12007)
!12026 = !DILocation(line: 212, column: 70, scope: !12007)
!12027 = !DILocation(line: 212, column: 108, scope: !12007)
!12028 = !DILocation(line: 212, column: 146, scope: !12007)
!12029 = !DILocation(line: 222, column: 49, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12031, file: !2135, line: 221, column: 84)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !2135, line: 221, column: 9)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !2135, line: 221, column: 9)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !2135, line: 220, column: 25)
!12034 = distinct !DILexicalBlock(scope: !11992, file: !2135, line: 220, column: 9)
!12035 = !DILocation(line: 222, column: 13, scope: !12030)
!12036 = !DILocation(line: 222, column: 27, scope: !12030)
!12037 = !DILocation(line: 222, column: 36, scope: !12030)
!12038 = !DILocation(line: 224, column: 23, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12030, file: !2135, line: 224, column: 17)
!12040 = !DILocation(line: 224, column: 19, scope: !12039)
!12041 = !DILocation(line: 224, column: 17, scope: !12030)
!12042 = distinct !{!12042, !12043, !12044}
!12043 = !DILocation(line: 221, column: 9, scope: !12032)
!12044 = !DILocation(line: 227, column: 9, scope: !12032)
!12045 = !DILocation(line: 230, column: 1, scope: !11992)
!12046 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2135, file: !2135, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12047 = !DILocation(line: 257, column: 26, scope: !12046)
!12048 = !DILocation(line: 259, column: 5, scope: !12046)
!12049 = !DILocation(line: 259, column: 19, scope: !12046)
!12050 = !DILocation(line: 259, column: 29, scope: !12046)
!12051 = !DILocation(line: 260, column: 5, scope: !12046)
!12052 = !DILocation(line: 260, column: 27, scope: !12046)
!12053 = !DILocation(line: 260, column: 93, scope: !12046)
!12054 = distinct !{!12054, !12051, !12055}
!12055 = !DILocation(line: 260, column: 98, scope: !12046)
!12056 = !DILocation(line: 261, column: 29, scope: !12046)
!12057 = !DILocation(line: 262, column: 5, scope: !12046)
!12058 = !DILocation(line: 262, column: 27, scope: !12046)
!12059 = !DILocation(line: 262, column: 93, scope: !12046)
!12060 = distinct !{!12060, !12057, !12061}
!12061 = !DILocation(line: 262, column: 98, scope: !12046)
!12062 = !DILocation(line: 264, column: 42, scope: !12046)
!12063 = !DILocation(line: 265, column: 48, scope: !12046)
!12064 = !DILocation(line: 267, column: 5, scope: !12046)
!12065 = !DILocation(line: 267, column: 27, scope: !12046)
!12066 = !DILocation(line: 267, column: 39, scope: !12046)
!12067 = !DILocation(line: 267, column: 65, scope: !12046)
!12068 = distinct !{!12068, !12064, !12069}
!12069 = !DILocation(line: 267, column: 70, scope: !12046)
!12070 = !DILocation(line: 269, column: 5, scope: !12046)
!12071 = !DILocation(line: 273, column: 8, scope: !12046)
!12072 = !DILocation(line: 275, column: 5, scope: !12046)
!12073 = !DILocation(line: 275, column: 27, scope: !12046)
!12074 = !DILocation(line: 275, column: 39, scope: !12046)
!12075 = !DILocation(line: 275, column: 65, scope: !12046)
!12076 = distinct !{!12076, !12072, !12077}
!12077 = !DILocation(line: 275, column: 70, scope: !12046)
!12078 = !DILocation(line: 278, column: 9, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12046, file: !2135, line: 278, column: 9)
!12080 = !DILocation(line: 278, column: 44, scope: !12079)
!12081 = !DILocation(line: 278, column: 9, scope: !12046)
!12082 = !DILocation(line: 279, column: 13, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !2135, line: 279, column: 12)
!12084 = distinct !DILexicalBlock(scope: !12079, file: !2135, line: 278, column: 55)
!12085 = !DILocation(line: 279, column: 48, scope: !12083)
!12086 = !DILocation(line: 279, column: 56, scope: !12083)
!12087 = !DILocation(line: 0, scope: !12083)
!12088 = !DILocation(line: 288, column: 1, scope: !12046)
!12089 = distinct !DISubprogram(name: "custom_setEMI", scope: !2135, file: !2135, line: 294, type: !12090, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12090 = !DISubroutineType(types: !12091)
!12091 = !{!1402}
!12092 = !DILocation(line: 298, column: 5, scope: !12089)
!12093 = !DILocation(line: 300, column: 5, scope: !12089)
!12094 = !DILocation(line: 302, column: 20, scope: !12089)
!12095 = !DILocation(line: 302, column: 18, scope: !12089)
!12096 = !DILocation(line: 303, column: 20, scope: !12089)
!12097 = !DILocation(line: 303, column: 18, scope: !12089)
!12098 = !DILocation(line: 304, column: 20, scope: !12089)
!12099 = !DILocation(line: 304, column: 18, scope: !12089)
!12100 = !DILocation(line: 307, column: 5, scope: !12089)
!12101 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2135, file: !2135, line: 312, type: !12090, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12102 = !DILocation(line: 319, column: 29, scope: !12101)
!12103 = !DILocation(line: 319, column: 5, scope: !12101)
!12104 = !DILocation(line: 319, column: 19, scope: !12101)
!12105 = !DILocation(line: 319, column: 27, scope: !12101)
!12106 = !DILocation(line: 320, column: 29, scope: !12101)
!12107 = !DILocation(line: 320, column: 19, scope: !12101)
!12108 = !DILocation(line: 320, column: 27, scope: !12101)
!12109 = !DILocation(line: 322, column: 30, scope: !12101)
!12110 = !DILocation(line: 322, column: 19, scope: !12101)
!12111 = !DILocation(line: 322, column: 28, scope: !12101)
!12112 = !DILocation(line: 324, column: 30, scope: !12101)
!12113 = !DILocation(line: 324, column: 19, scope: !12101)
!12114 = !DILocation(line: 324, column: 28, scope: !12101)
!12115 = !DILocation(line: 326, column: 31, scope: !12101)
!12116 = !DILocation(line: 326, column: 19, scope: !12101)
!12117 = !DILocation(line: 326, column: 29, scope: !12101)
!12118 = !DILocation(line: 327, column: 31, scope: !12101)
!12119 = !DILocation(line: 327, column: 19, scope: !12101)
!12120 = !DILocation(line: 327, column: 29, scope: !12101)
!12121 = !DILocation(line: 332, column: 30, scope: !12101)
!12122 = !DILocation(line: 332, column: 19, scope: !12101)
!12123 = !DILocation(line: 332, column: 28, scope: !12101)
!12124 = !DILocation(line: 333, column: 30, scope: !12101)
!12125 = !DILocation(line: 333, column: 19, scope: !12101)
!12126 = !DILocation(line: 333, column: 28, scope: !12101)
!12127 = !DILocation(line: 334, column: 30, scope: !12101)
!12128 = !DILocation(line: 334, column: 19, scope: !12101)
!12129 = !DILocation(line: 334, column: 28, scope: !12101)
!12130 = !DILocation(line: 336, column: 30, scope: !12101)
!12131 = !DILocation(line: 336, column: 19, scope: !12101)
!12132 = !DILocation(line: 336, column: 28, scope: !12101)
!12133 = !DILocation(line: 337, column: 30, scope: !12101)
!12134 = !DILocation(line: 337, column: 19, scope: !12101)
!12135 = !DILocation(line: 337, column: 28, scope: !12101)
!12136 = !DILocation(line: 338, column: 30, scope: !12101)
!12137 = !DILocation(line: 338, column: 19, scope: !12101)
!12138 = !DILocation(line: 338, column: 28, scope: !12101)
!12139 = !DILocation(line: 339, column: 30, scope: !12101)
!12140 = !DILocation(line: 339, column: 19, scope: !12101)
!12141 = !DILocation(line: 339, column: 28, scope: !12101)
!12142 = !DILocation(line: 341, column: 5, scope: !12101)
!12143 = !DILocation(line: 345, column: 5, scope: !12101)
!12144 = !DILocation(line: 345, column: 19, scope: !12101)
!12145 = !DILocation(line: 345, column: 28, scope: !12101)
!12146 = !DILocation(line: 346, column: 5, scope: !12101)
!12147 = !DILocation(line: 346, column: 28, scope: !12101)
!12148 = !DILocation(line: 346, column: 82, scope: !12101)
!12149 = distinct !{!12149, !12146, !12150}
!12150 = !DILocation(line: 346, column: 87, scope: !12101)
!12151 = !DILocation(line: 347, column: 28, scope: !12101)
!12152 = !DILocation(line: 348, column: 5, scope: !12101)
!12153 = !DILocation(line: 348, column: 28, scope: !12101)
!12154 = !DILocation(line: 348, column: 82, scope: !12101)
!12155 = distinct !{!12155, !12152, !12156}
!12156 = !DILocation(line: 348, column: 87, scope: !12101)
!12157 = !DILocation(line: 349, column: 28, scope: !12101)
!12158 = !DILocation(line: 351, column: 5, scope: !12101)
!12159 = !DILocation(line: 353, column: 5, scope: !12101)
!12160 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2135, file: !2135, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12161 = !DILocation(line: 361, column: 36, scope: !12160)
!12162 = !DILocation(line: 361, column: 50, scope: !12160)
!12163 = !DILocation(line: 361, column: 34, scope: !12160)
!12164 = !DILocation(line: 362, column: 50, scope: !12160)
!12165 = !DILocation(line: 362, column: 34, scope: !12160)
!12166 = !DILocation(line: 363, column: 50, scope: !12160)
!12167 = !DILocation(line: 363, column: 34, scope: !12160)
!12168 = !DILocation(line: 364, column: 50, scope: !12160)
!12169 = !DILocation(line: 364, column: 34, scope: !12160)
!12170 = !DILocation(line: 365, column: 50, scope: !12160)
!12171 = !DILocation(line: 365, column: 34, scope: !12160)
!12172 = !DILocation(line: 366, column: 50, scope: !12160)
!12173 = !DILocation(line: 366, column: 34, scope: !12160)
!12174 = !DILocation(line: 367, column: 50, scope: !12160)
!12175 = !DILocation(line: 367, column: 34, scope: !12160)
!12176 = !DILocation(line: 368, column: 50, scope: !12160)
!12177 = !DILocation(line: 368, column: 34, scope: !12160)
!12178 = !DILocation(line: 369, column: 50, scope: !12160)
!12179 = !DILocation(line: 369, column: 34, scope: !12160)
!12180 = !DILocation(line: 370, column: 50, scope: !12160)
!12181 = !DILocation(line: 370, column: 34, scope: !12160)
!12182 = !DILocation(line: 371, column: 50, scope: !12160)
!12183 = !DILocation(line: 371, column: 34, scope: !12160)
!12184 = !DILocation(line: 372, column: 50, scope: !12160)
!12185 = !DILocation(line: 372, column: 34, scope: !12160)
!12186 = !DILocation(line: 373, column: 51, scope: !12160)
!12187 = !DILocation(line: 373, column: 35, scope: !12160)
!12188 = !DILocation(line: 374, column: 51, scope: !12160)
!12189 = !DILocation(line: 374, column: 35, scope: !12160)
!12190 = !DILocation(line: 375, column: 50, scope: !12160)
!12191 = !DILocation(line: 375, column: 34, scope: !12160)
!12192 = !DILocation(line: 376, column: 50, scope: !12160)
!12193 = !DILocation(line: 376, column: 34, scope: !12160)
!12194 = !DILocation(line: 377, column: 50, scope: !12160)
!12195 = !DILocation(line: 377, column: 34, scope: !12160)
!12196 = !DILocation(line: 378, column: 50, scope: !12160)
!12197 = !DILocation(line: 378, column: 34, scope: !12160)
!12198 = !DILocation(line: 379, column: 50, scope: !12160)
!12199 = !DILocation(line: 379, column: 34, scope: !12160)
!12200 = !DILocation(line: 380, column: 50, scope: !12160)
!12201 = !DILocation(line: 380, column: 34, scope: !12160)
!12202 = !DILocation(line: 382, column: 1, scope: !12160)
!12203 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2135, file: !2135, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12204 = !DILocation(line: 387, column: 5, scope: !12203)
!12205 = !DILocation(line: 387, column: 27, scope: !12203)
!12206 = !DILocation(line: 387, column: 36, scope: !12203)
!12207 = !DILocation(line: 387, column: 76, scope: !12203)
!12208 = distinct !{!12208, !12204, !12209}
!12209 = !DILocation(line: 387, column: 84, scope: !12203)
!12210 = !DILocation(line: 388, column: 50, scope: !12203)
!12211 = !DILocation(line: 388, column: 19, scope: !12203)
!12212 = !DILocation(line: 388, column: 28, scope: !12203)
!12213 = !DILocation(line: 389, column: 50, scope: !12203)
!12214 = !DILocation(line: 389, column: 19, scope: !12203)
!12215 = !DILocation(line: 389, column: 28, scope: !12203)
!12216 = !DILocation(line: 390, column: 50, scope: !12203)
!12217 = !DILocation(line: 390, column: 19, scope: !12203)
!12218 = !DILocation(line: 390, column: 28, scope: !12203)
!12219 = !DILocation(line: 391, column: 50, scope: !12203)
!12220 = !DILocation(line: 391, column: 19, scope: !12203)
!12221 = !DILocation(line: 391, column: 28, scope: !12203)
!12222 = !DILocation(line: 392, column: 50, scope: !12203)
!12223 = !DILocation(line: 392, column: 19, scope: !12203)
!12224 = !DILocation(line: 392, column: 28, scope: !12203)
!12225 = !DILocation(line: 393, column: 50, scope: !12203)
!12226 = !DILocation(line: 393, column: 19, scope: !12203)
!12227 = !DILocation(line: 393, column: 28, scope: !12203)
!12228 = !DILocation(line: 394, column: 51, scope: !12203)
!12229 = !DILocation(line: 394, column: 19, scope: !12203)
!12230 = !DILocation(line: 394, column: 29, scope: !12203)
!12231 = !DILocation(line: 395, column: 51, scope: !12203)
!12232 = !DILocation(line: 395, column: 19, scope: !12203)
!12233 = !DILocation(line: 395, column: 29, scope: !12203)
!12234 = !DILocation(line: 396, column: 50, scope: !12203)
!12235 = !DILocation(line: 396, column: 19, scope: !12203)
!12236 = !DILocation(line: 396, column: 28, scope: !12203)
!12237 = !DILocation(line: 397, column: 50, scope: !12203)
!12238 = !DILocation(line: 397, column: 19, scope: !12203)
!12239 = !DILocation(line: 397, column: 28, scope: !12203)
!12240 = !DILocation(line: 398, column: 50, scope: !12203)
!12241 = !DILocation(line: 398, column: 19, scope: !12203)
!12242 = !DILocation(line: 398, column: 28, scope: !12203)
!12243 = !DILocation(line: 399, column: 50, scope: !12203)
!12244 = !DILocation(line: 399, column: 19, scope: !12203)
!12245 = !DILocation(line: 399, column: 28, scope: !12203)
!12246 = !DILocation(line: 400, column: 50, scope: !12203)
!12247 = !DILocation(line: 400, column: 19, scope: !12203)
!12248 = !DILocation(line: 400, column: 28, scope: !12203)
!12249 = !DILocation(line: 401, column: 50, scope: !12203)
!12250 = !DILocation(line: 401, column: 19, scope: !12203)
!12251 = !DILocation(line: 401, column: 28, scope: !12203)
!12252 = !DILocation(line: 402, column: 50, scope: !12203)
!12253 = !DILocation(line: 402, column: 19, scope: !12203)
!12254 = !DILocation(line: 402, column: 28, scope: !12203)
!12255 = !DILocation(line: 403, column: 50, scope: !12203)
!12256 = !DILocation(line: 403, column: 19, scope: !12203)
!12257 = !DILocation(line: 403, column: 28, scope: !12203)
!12258 = !DILocation(line: 404, column: 50, scope: !12203)
!12259 = !DILocation(line: 404, column: 19, scope: !12203)
!12260 = !DILocation(line: 404, column: 28, scope: !12203)
!12261 = !DILocation(line: 405, column: 50, scope: !12203)
!12262 = !DILocation(line: 405, column: 19, scope: !12203)
!12263 = !DILocation(line: 405, column: 28, scope: !12203)
!12264 = !DILocation(line: 406, column: 50, scope: !12203)
!12265 = !DILocation(line: 406, column: 19, scope: !12203)
!12266 = !DILocation(line: 406, column: 28, scope: !12203)
!12267 = !DILocation(line: 408, column: 1, scope: !12203)
!12268 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2135, file: !2135, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12269 = !DILocation(line: 413, column: 29, scope: !12268)
!12270 = !DILocation(line: 413, column: 43, scope: !12268)
!12271 = !DILocation(line: 413, column: 51, scope: !12268)
!12272 = !DILocation(line: 413, column: 27, scope: !12268)
!12273 = !DILocation(line: 416, column: 19, scope: !12268)
!12274 = !DILocation(line: 416, column: 29, scope: !12268)
!12275 = !DILocation(line: 417, column: 5, scope: !12268)
!12276 = !DILocation(line: 417, column: 27, scope: !12268)
!12277 = !DILocation(line: 417, column: 93, scope: !12268)
!12278 = distinct !{!12278, !12275, !12279}
!12279 = !DILocation(line: 417, column: 98, scope: !12268)
!12280 = !DILocation(line: 418, column: 29, scope: !12268)
!12281 = !DILocation(line: 419, column: 5, scope: !12268)
!12282 = !DILocation(line: 419, column: 27, scope: !12268)
!12283 = !DILocation(line: 419, column: 93, scope: !12268)
!12284 = distinct !{!12284, !12281, !12285}
!12285 = !DILocation(line: 419, column: 98, scope: !12268)
!12286 = !DILocation(line: 421, column: 5, scope: !12268)
!12287 = !DILocation(line: 422, column: 5, scope: !12268)
!12288 = !DILocation(line: 422, column: 19, scope: !12268)
!12289 = !DILocation(line: 422, column: 28, scope: !12268)
!12290 = !DILocation(line: 423, column: 5, scope: !12268)
!12291 = !DILocation(line: 423, column: 28, scope: !12268)
!12292 = !DILocation(line: 423, column: 82, scope: !12268)
!12293 = distinct !{!12293, !12290, !12294}
!12294 = !DILocation(line: 423, column: 87, scope: !12268)
!12295 = !DILocation(line: 424, column: 28, scope: !12268)
!12296 = !DILocation(line: 425, column: 5, scope: !12268)
!12297 = !DILocation(line: 425, column: 28, scope: !12268)
!12298 = !DILocation(line: 425, column: 82, scope: !12268)
!12299 = distinct !{!12299, !12296, !12300}
!12300 = !DILocation(line: 425, column: 87, scope: !12268)
!12301 = !DILocation(line: 426, column: 28, scope: !12268)
!12302 = !DILocation(line: 428, column: 50, scope: !12268)
!12303 = !DILocation(line: 428, column: 19, scope: !12268)
!12304 = !DILocation(line: 428, column: 28, scope: !12268)
!12305 = !DILocation(line: 432, column: 1, scope: !12268)
!12306 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2135, file: !2135, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12307 = !DILocation(line: 437, column: 5, scope: !12306)
!12308 = !DILocation(line: 440, column: 5, scope: !12306)
!12309 = !DILocation(line: 440, column: 27, scope: !12306)
!12310 = !DILocation(line: 440, column: 36, scope: !12306)
!12311 = !DILocation(line: 440, column: 76, scope: !12306)
!12312 = distinct !{!12312, !12308, !12313}
!12313 = !DILocation(line: 440, column: 84, scope: !12306)
!12314 = !DILocation(line: 441, column: 45, scope: !12306)
!12315 = !DILocation(line: 441, column: 54, scope: !12306)
!12316 = !DILocation(line: 441, column: 28, scope: !12306)
!12317 = !DILocation(line: 442, column: 19, scope: !12306)
!12318 = !DILocation(line: 442, column: 31, scope: !12306)
!12319 = !DILocation(line: 443, column: 5, scope: !12306)
!12320 = !DILocation(line: 443, column: 27, scope: !12306)
!12321 = !DILocation(line: 443, column: 39, scope: !12306)
!12322 = !DILocation(line: 443, column: 65, scope: !12306)
!12323 = distinct !{!12323, !12319, !12324}
!12324 = !DILocation(line: 443, column: 70, scope: !12306)
!12325 = !DILocation(line: 444, column: 19, scope: !12306)
!12326 = !DILocation(line: 444, column: 28, scope: !12306)
!12327 = !DILocation(line: 445, column: 5, scope: !12306)
!12328 = !DILocation(line: 445, column: 27, scope: !12306)
!12329 = !DILocation(line: 445, column: 91, scope: !12306)
!12330 = distinct !{!12330, !12327, !12331}
!12331 = !DILocation(line: 445, column: 96, scope: !12306)
!12332 = !DILocation(line: 447, column: 43, scope: !12306)
!12333 = !DILocation(line: 447, column: 51, scope: !12306)
!12334 = !DILocation(line: 447, column: 27, scope: !12306)
!12335 = !DILocation(line: 450, column: 1, scope: !12306)
!12336 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2135, file: !2135, line: 452, type: !12337, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !12340)
!12337 = !DISubroutineType(types: !12338)
!12338 = !{!1092, !12339}
!12339 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2138, line: 43, baseType: !2137)
!12340 = !{!12341, !12342}
!12341 = !DILocalVariable(name: "clock", arg: 1, scope: !12336, file: !2135, line: 452, type: !12339)
!12342 = !DILocalVariable(name: "delay", scope: !12336, file: !2135, line: 457, type: !60)
!12343 = !DILocation(line: 0, scope: !12336)
!12344 = !DILocation(line: 457, column: 5, scope: !12336)
!12345 = !DILocation(line: 457, column: 23, scope: !12336)
!12346 = !DILocation(line: 458, column: 9, scope: !12336)
!12347 = !DILocation(line: 465, column: 9, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !2135, line: 458, column: 39)
!12349 = distinct !DILexicalBlock(scope: !12336, file: !2135, line: 458, column: 9)
!12350 = !DILocation(line: 465, column: 23, scope: !12348)
!12351 = !DILocation(line: 465, column: 32, scope: !12348)
!12352 = !DILocation(line: 466, column: 32, scope: !12348)
!12353 = !DILocation(line: 467, column: 9, scope: !12348)
!12354 = !DILocation(line: 467, column: 32, scope: !12348)
!12355 = !DILocation(line: 467, column: 86, scope: !12348)
!12356 = distinct !{!12356, !12353, !12357}
!12357 = !DILocation(line: 467, column: 91, scope: !12348)
!12358 = !DILocation(line: 468, column: 32, scope: !12348)
!12359 = !DILocation(line: 469, column: 9, scope: !12348)
!12360 = !DILocation(line: 469, column: 32, scope: !12348)
!12361 = !DILocation(line: 469, column: 86, scope: !12348)
!12362 = distinct !{!12362, !12359, !12363}
!12363 = !DILocation(line: 469, column: 91, scope: !12348)
!12364 = !DILocation(line: 470, column: 32, scope: !12348)
!12365 = !DILocation(line: 472, column: 20, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12348, file: !2135, line: 472, column: 9)
!12367 = !DILocation(line: 472, column: 25, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12366, file: !2135, line: 472, column: 9)
!12369 = !DILocation(line: 472, column: 31, scope: !12368)
!12370 = !DILocation(line: 472, column: 9, scope: !12366)
!12371 = !DILocation(line: 472, column: 44, scope: !12368)
!12372 = distinct !{!12372, !12370, !12373}
!12373 = !DILocation(line: 472, column: 47, scope: !12366)
!12374 = !DILocation(line: 478, column: 9, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !2135, line: 477, column: 12)
!12376 = distinct !DILexicalBlock(scope: !12349, file: !2135, line: 475, column: 16)
!12377 = !DILocation(line: 483, column: 1, scope: !12336)
!12378 = distinct !DISubprogram(name: "emi_mask_master", scope: !2135, file: !2135, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12379 = !DILocation(line: 490, column: 30, scope: !12378)
!12380 = !DILocation(line: 490, column: 44, scope: !12378)
!12381 = !DILocation(line: 490, column: 53, scope: !12378)
!12382 = !DILocation(line: 490, column: 28, scope: !12378)
!12383 = !DILocation(line: 492, column: 1, scope: !12378)
!12384 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2135, file: !2135, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12385 = !DILocation(line: 497, column: 30, scope: !12384)
!12386 = !DILocation(line: 497, column: 44, scope: !12384)
!12387 = !DILocation(line: 497, column: 53, scope: !12384)
!12388 = !DILocation(line: 497, column: 28, scope: !12384)
!12389 = !DILocation(line: 500, column: 1, scope: !12384)
!12390 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2300, file: !2300, line: 56, type: !9172, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12391 = !DILocation(line: 61, column: 5, scope: !12390)
!12392 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2300, file: !2300, line: 65, type: !9172, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12393 = !DILocation(line: 70, column: 5, scope: !12392)
!12394 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2300, file: !2300, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12395 = !DILocation(line: 79, column: 9, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !2300, line: 78, column: 12)
!12397 = distinct !DILexicalBlock(scope: !12394, file: !2300, line: 76, column: 9)
!12398 = !DILocation(line: 81, column: 1, scope: !12394)
!12399 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2300, file: !2300, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12400 = !DILocation(line: 88, column: 9, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12402, file: !2300, line: 87, column: 12)
!12402 = distinct !DILexicalBlock(scope: !12399, file: !2300, line: 85, column: 9)
!12403 = !DILocation(line: 90, column: 1, scope: !12399)
!12404 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2300, file: !2300, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12405 = !DILocation(line: 97, column: 9, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !2300, line: 96, column: 12)
!12407 = distinct !DILexicalBlock(scope: !12404, file: !2300, line: 94, column: 9)
!12408 = !DILocation(line: 99, column: 1, scope: !12404)
!12409 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2300, file: !2300, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12410 = !DILocation(line: 106, column: 9, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !2300, line: 105, column: 12)
!12412 = distinct !DILexicalBlock(scope: !12409, file: !2300, line: 103, column: 9)
!12413 = !DILocation(line: 108, column: 1, scope: !12409)
!12414 = distinct !DISubprogram(name: "__io_putchar", scope: !2718, file: !2718, line: 60, type: !12415, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !12417)
!12415 = !DISubroutineType(types: !12416)
!12416 = !{!7, !7}
!12417 = !{!12418}
!12418 = !DILocalVariable(name: "ch", arg: 1, scope: !12414, file: !2718, line: 60, type: !7)
!12419 = !DILocation(line: 0, scope: !12414)
!12420 = !DILocation(line: 67, column: 35, scope: !12414)
!12421 = !DILocation(line: 67, column: 5, scope: !12414)
!12422 = !DILocation(line: 68, column: 5, scope: !12414)
!12423 = distinct !DISubprogram(name: "main", scope: !2718, file: !2718, line: 172, type: !11918, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !293)
!12424 = !DILocation(line: 175, column: 5, scope: !12423)
!12425 = !DILocation(line: 177, column: 5, scope: !12423)
!12426 = !DILocation(line: 180, column: 5, scope: !12423)
!12427 = !DILocation(line: 319, column: 3, scope: !12428, inlinedAt: !12429)
!12428 = distinct !DISubprogram(name: "__enable_irq", scope: !7784, file: !7784, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !293)
!12429 = distinct !DILocation(line: 183, column: 5, scope: !12423)
!12430 = !{i64 660434}
!12431 = !DILocation(line: 496, column: 3, scope: !12432, inlinedAt: !12433)
!12432 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !7784, file: !7784, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !293)
!12433 = distinct !DILocation(line: 184, column: 5, scope: !12423)
!12434 = !{i64 664709}
!12435 = !DILocation(line: 187, column: 5, scope: !12423)
!12436 = !DILocation(line: 189, column: 5, scope: !12423)
!12437 = !DILocation(line: 190, column: 5, scope: !12423)
!12438 = !DILocation(line: 193, column: 5, scope: !12423)
!12439 = !DILocation(line: 195, column: 5, scope: !12423)
!12440 = distinct !{!12440, !12439, !12441}
!12441 = !DILocation(line: 195, column: 14, scope: !12423)
!12442 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2718, file: !2718, line: 99, type: !291, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !293)
!12443 = !DILocation(line: 101, column: 5, scope: !12442)
!12444 = !DILocation(line: 102, column: 1, scope: !12442)
!12445 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2718, file: !2718, line: 109, type: !291, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !293)
!12446 = !DILocation(line: 112, column: 5, scope: !12445)
!12447 = !DILocation(line: 113, column: 5, scope: !12445)
!12448 = !DILocation(line: 114, column: 5, scope: !12445)
!12449 = !DILocation(line: 115, column: 1, scope: !12445)
!12450 = distinct !DISubprogram(name: "spim_send_data_polling_example", scope: !2718, file: !2718, line: 122, type: !291, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !12451)
!12451 = !{!12452, !12454}
!12452 = !DILocalVariable(name: "send_data", scope: !12450, file: !2718, line: 124, type: !12453)
!12453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 16, elements: !465)
!12454 = !DILocalVariable(name: "spi_config", scope: !12450, file: !2718, line: 125, type: !12455)
!12455 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !872, line: 580, baseType: !12456)
!12456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 574, size: 160, elements: !12457)
!12457 = !{!12458, !12459, !12460, !12461, !12462}
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !12456, file: !872, line: 575, baseType: !61, size: 32)
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !12456, file: !872, line: 576, baseType: !6127, size: 32, offset: 32)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !12456, file: !872, line: 577, baseType: !6129, size: 32, offset: 64)
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !12456, file: !872, line: 578, baseType: !6131, size: 32, offset: 96)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !12456, file: !872, line: 579, baseType: !6133, size: 32, offset: 128)
!12463 = !DILocation(line: 124, column: 5, scope: !12450)
!12464 = !DILocation(line: 0, scope: !12450)
!12465 = !DILocation(line: 124, column: 13, scope: !12450)
!12466 = !DILocation(line: 125, column: 5, scope: !12450)
!12467 = !DILocation(line: 125, column: 29, scope: !12450)
!12468 = !DILocation(line: 127, column: 5, scope: !12450)
!12469 = !DILocation(line: 130, column: 5, scope: !12450)
!12470 = !DILocation(line: 131, column: 5, scope: !12450)
!12471 = !DILocation(line: 132, column: 5, scope: !12450)
!12472 = !DILocation(line: 133, column: 5, scope: !12450)
!12473 = !DILocation(line: 134, column: 5, scope: !12450)
!12474 = !DILocation(line: 135, column: 5, scope: !12450)
!12475 = !DILocation(line: 136, column: 5, scope: !12450)
!12476 = !DILocation(line: 137, column: 5, scope: !12450)
!12477 = !DILocation(line: 138, column: 5, scope: !12450)
!12478 = !DILocation(line: 141, column: 5, scope: !12450)
!12479 = !DILocation(line: 142, column: 16, scope: !12450)
!12480 = !DILocation(line: 142, column: 26, scope: !12450)
!12481 = !DILocation(line: 143, column: 16, scope: !12450)
!12482 = !DILocation(line: 143, column: 32, scope: !12450)
!12483 = !DILocation(line: 144, column: 16, scope: !12450)
!12484 = !DILocation(line: 144, column: 22, scope: !12450)
!12485 = !DILocation(line: 145, column: 16, scope: !12450)
!12486 = !DILocation(line: 145, column: 25, scope: !12450)
!12487 = !DILocation(line: 146, column: 16, scope: !12450)
!12488 = !DILocation(line: 146, column: 27, scope: !12450)
!12489 = !DILocation(line: 147, column: 37, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12450, file: !2718, line: 147, column: 9)
!12491 = !DILocation(line: 147, column: 34, scope: !12490)
!12492 = !DILocation(line: 147, column: 9, scope: !12450)
!12493 = !DILocation(line: 153, column: 37, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12450, file: !2718, line: 153, column: 9)
!12495 = !DILocation(line: 153, column: 34, scope: !12494)
!12496 = !DILocation(line: 153, column: 9, scope: !12450)
!12497 = !DILocation(line: 159, column: 5, scope: !12450)
!12498 = !DILocation(line: 160, column: 37, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12450, file: !2718, line: 160, column: 9)
!12500 = !DILocation(line: 160, column: 34, scope: !12499)
!12501 = !DILocation(line: 160, column: 9, scope: !12450)
!12502 = !DILocation(line: 164, column: 5, scope: !12450)
!12503 = !DILocation(line: 165, column: 5, scope: !12450)
!12504 = !DILocation(line: 166, column: 5, scope: !12450)
!12505 = !DILocation(line: 167, column: 5, scope: !12450)
!12506 = !DILocation(line: 170, column: 1, scope: !12450)
!12507 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2718, file: !2718, line: 76, type: !291, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !12508)
!12508 = !{!12509}
!12509 = !DILocalVariable(name: "uart_config", scope: !12507, file: !2718, line: 78, type: !12510)
!12510 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !12511)
!12511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !12512)
!12512 = !{!12513, !12514, !12515, !12516}
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !12511, file: !654, line: 374, baseType: !4769, size: 32)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !12511, file: !654, line: 375, baseType: !4819, size: 32, offset: 32)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !12511, file: !654, line: 376, baseType: !4821, size: 32, offset: 64)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12511, file: !654, line: 377, baseType: !4823, size: 32, offset: 96)
!12517 = !DILocation(line: 78, column: 5, scope: !12507)
!12518 = !DILocation(line: 78, column: 23, scope: !12507)
!12519 = !DILocation(line: 81, column: 5, scope: !12507)
!12520 = !DILocation(line: 82, column: 5, scope: !12507)
!12521 = !DILocation(line: 83, column: 5, scope: !12507)
!12522 = !DILocation(line: 84, column: 5, scope: !12507)
!12523 = !DILocation(line: 87, column: 17, scope: !12507)
!12524 = !DILocation(line: 87, column: 26, scope: !12507)
!12525 = !DILocation(line: 88, column: 17, scope: !12507)
!12526 = !DILocation(line: 88, column: 29, scope: !12507)
!12527 = !DILocation(line: 89, column: 17, scope: !12507)
!12528 = !DILocation(line: 89, column: 26, scope: !12507)
!12529 = !DILocation(line: 90, column: 17, scope: !12507)
!12530 = !DILocation(line: 90, column: 24, scope: !12507)
!12531 = !DILocation(line: 91, column: 5, scope: !12507)
!12532 = !DILocation(line: 92, column: 1, scope: !12507)
!12533 = distinct !DISubprogram(name: "_close", scope: !2312, file: !2312, line: 5, type: !12415, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12534)
!12534 = !{!12535}
!12535 = !DILocalVariable(name: "file", arg: 1, scope: !12533, file: !2312, line: 5, type: !7)
!12536 = !DILocation(line: 0, scope: !12533)
!12537 = !DILocation(line: 7, column: 5, scope: !12533)
!12538 = distinct !DISubprogram(name: "_fstat", scope: !2312, file: !2312, line: 10, type: !12539, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12587)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{!7, !7, !12541}
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12542, size: 32)
!12542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !12543, line: 27, size: 704, elements: !12544)
!12543 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!12544 = !{!12545, !12548, !12551, !12554, !12557, !12560, !12563, !12564, !12567, !12577, !12578, !12579, !12582, !12585}
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12542, file: !12543, line: 29, baseType: !12546, size: 16)
!12546 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2316, line: 161, baseType: !12547)
!12547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2356, line: 56, baseType: !1588)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12542, file: !12543, line: 30, baseType: !12549, size: 16, offset: 16)
!12549 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2316, line: 139, baseType: !12550)
!12550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2356, line: 75, baseType: !977)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12542, file: !12543, line: 31, baseType: !12552, size: 32, offset: 32)
!12552 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2316, line: 189, baseType: !12553)
!12553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2356, line: 90, baseType: !63)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12542, file: !12543, line: 32, baseType: !12555, size: 16, offset: 64)
!12555 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2316, line: 194, baseType: !12556)
!12556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2356, line: 209, baseType: !977)
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12542, file: !12543, line: 33, baseType: !12558, size: 16, offset: 80)
!12558 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2316, line: 165, baseType: !12559)
!12559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2356, line: 60, baseType: !977)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12542, file: !12543, line: 34, baseType: !12561, size: 16, offset: 96)
!12561 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2316, line: 169, baseType: !12562)
!12562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2356, line: 63, baseType: !977)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12542, file: !12543, line: 35, baseType: !12546, size: 16, offset: 112)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12542, file: !12543, line: 36, baseType: !12565, size: 32, offset: 128)
!12565 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2316, line: 157, baseType: !12566)
!12566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2356, line: 102, baseType: !2372)
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12542, file: !12543, line: 42, baseType: !12568, size: 128, offset: 192)
!12568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !12569, line: 47, size: 128, elements: !12570)
!12569 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!12570 = !{!12571, !12576}
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12568, file: !12569, line: 48, baseType: !12572, size: 64)
!12572 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !12573, line: 42, baseType: !12574)
!12573 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!12574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !12575)
!12575 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12568, file: !12569, line: 49, baseType: !2357, size: 32, offset: 64)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12542, file: !12543, line: 43, baseType: !12568, size: 128, offset: 320)
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12542, file: !12543, line: 44, baseType: !12568, size: 128, offset: 448)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12542, file: !12543, line: 45, baseType: !12580, size: 32, offset: 576)
!12580 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2316, line: 102, baseType: !12581)
!12581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2356, line: 34, baseType: !2357)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12542, file: !12543, line: 46, baseType: !12583, size: 32, offset: 608)
!12583 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2316, line: 97, baseType: !12584)
!12584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2356, line: 30, baseType: !2357)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !12542, file: !12543, line: 48, baseType: !12586, size: 64, offset: 640)
!12586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2357, size: 64, elements: !465)
!12587 = !{!12588, !12589}
!12588 = !DILocalVariable(name: "file", arg: 1, scope: !12538, file: !2312, line: 10, type: !7)
!12589 = !DILocalVariable(name: "st", arg: 2, scope: !12538, file: !2312, line: 10, type: !12541)
!12590 = !DILocation(line: 0, scope: !12538)
!12591 = !DILocation(line: 12, column: 5, scope: !12538)
!12592 = distinct !DISubprogram(name: "_isatty", scope: !2312, file: !2312, line: 15, type: !12415, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12593)
!12593 = !{!12594}
!12594 = !DILocalVariable(name: "file", arg: 1, scope: !12592, file: !2312, line: 15, type: !7)
!12595 = !DILocation(line: 0, scope: !12592)
!12596 = !DILocation(line: 17, column: 5, scope: !12592)
!12597 = distinct !DISubprogram(name: "_lseek", scope: !2312, file: !2312, line: 20, type: !12598, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!7, !7, !7, !7}
!12600 = !{!12601, !12602, !12603}
!12601 = !DILocalVariable(name: "file", arg: 1, scope: !12597, file: !2312, line: 20, type: !7)
!12602 = !DILocalVariable(name: "ptr", arg: 2, scope: !12597, file: !2312, line: 20, type: !7)
!12603 = !DILocalVariable(name: "dir", arg: 3, scope: !12597, file: !2312, line: 20, type: !7)
!12604 = !DILocation(line: 0, scope: !12597)
!12605 = !DILocation(line: 22, column: 5, scope: !12597)
!12606 = distinct !DISubprogram(name: "_open", scope: !2312, file: !2312, line: 25, type: !12607, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12609)
!12607 = !DISubroutineType(types: !12608)
!12608 = !{!7, !2350, !7, !7}
!12609 = !{!12610, !12611, !12612}
!12610 = !DILocalVariable(name: "name", arg: 1, scope: !12606, file: !2312, line: 25, type: !2350)
!12611 = !DILocalVariable(name: "flags", arg: 2, scope: !12606, file: !2312, line: 25, type: !7)
!12612 = !DILocalVariable(name: "mode", arg: 3, scope: !12606, file: !2312, line: 25, type: !7)
!12613 = !DILocation(line: 0, scope: !12606)
!12614 = !DILocation(line: 27, column: 5, scope: !12606)
!12615 = distinct !DISubprogram(name: "_read", scope: !2312, file: !2312, line: 30, type: !12616, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12618)
!12616 = !DISubroutineType(types: !12617)
!12617 = !{!7, !7, !2317, !7}
!12618 = !{!12619, !12620, !12621}
!12619 = !DILocalVariable(name: "file", arg: 1, scope: !12615, file: !2312, line: 30, type: !7)
!12620 = !DILocalVariable(name: "ptr", arg: 2, scope: !12615, file: !2312, line: 30, type: !2317)
!12621 = !DILocalVariable(name: "len", arg: 3, scope: !12615, file: !2312, line: 30, type: !7)
!12622 = !DILocation(line: 0, scope: !12615)
!12623 = !DILocation(line: 32, column: 5, scope: !12615)
!12624 = distinct !DISubprogram(name: "_getpid", scope: !2312, file: !2312, line: 48, type: !11918, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !293)
!12625 = !DILocation(line: 50, column: 5, scope: !12624)
!12626 = distinct !DISubprogram(name: "_kill", scope: !2312, file: !2312, line: 56, type: !12627, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12629)
!12627 = !DISubroutineType(types: !12628)
!12628 = !{!7, !7, !7}
!12629 = !{!12630, !12631}
!12630 = !DILocalVariable(name: "pid", arg: 1, scope: !12626, file: !2312, line: 56, type: !7)
!12631 = !DILocalVariable(name: "sig", arg: 2, scope: !12626, file: !2312, line: 56, type: !7)
!12632 = !DILocation(line: 0, scope: !12626)
!12633 = !DILocation(line: 58, column: 5, scope: !12626)
!12634 = distinct !DISubprogram(name: "_exit", scope: !2312, file: !2312, line: 61, type: !12415, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12635)
!12635 = !{!12636}
!12636 = !DILocalVariable(name: "val", arg: 1, scope: !12634, file: !2312, line: 61, type: !7)
!12637 = !DILocation(line: 0, scope: !12634)
!12638 = !DILocation(line: 63, column: 5, scope: !12634)
!12639 = !DILocation(line: 0, scope: !2311)
!12640 = !DILocation(line: 73, column: 5, scope: !2311)
!12641 = !{i64 1127}
!12642 = !DILocation(line: 75, column: 14, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !2311, file: !2312, line: 75, column: 9)
!12644 = !DILocation(line: 75, column: 11, scope: !12643)
!12645 = !DILocation(line: 75, column: 9, scope: !2311)
!12646 = !DILocation(line: 81, column: 32, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !2311, file: !2312, line: 81, column: 9)
!12648 = !DILocation(line: 81, column: 15, scope: !12647)
!12649 = !DILocation(line: 92, column: 1, scope: !2311)
!12650 = !DILocation(line: 81, column: 9, scope: !2311)
!12651 = distinct !DISubprogram(name: "_write", scope: !2312, file: !2312, line: 94, type: !12616, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !12652)
!12652 = !{!12653, !12654, !12655, !12656}
!12653 = !DILocalVariable(name: "file", arg: 1, scope: !12651, file: !2312, line: 94, type: !7)
!12654 = !DILocalVariable(name: "ptr", arg: 2, scope: !12651, file: !2312, line: 94, type: !2317)
!12655 = !DILocalVariable(name: "len", arg: 3, scope: !12651, file: !2312, line: 94, type: !7)
!12656 = !DILocalVariable(name: "DataIdx", scope: !12651, file: !2312, line: 96, type: !7)
!12657 = !DILocation(line: 0, scope: !12651)
!12658 = !DILocation(line: 98, column: 31, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !2312, line: 98, column: 5)
!12660 = distinct !DILexicalBlock(scope: !12651, file: !2312, line: 98, column: 5)
!12661 = !DILocation(line: 98, column: 5, scope: !12660)
!12662 = !DILocation(line: 99, column: 26, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12659, file: !2312, line: 98, column: 49)
!12664 = !DILocation(line: 99, column: 22, scope: !12663)
!12665 = !DILocation(line: 99, column: 9, scope: !12663)
!12666 = !DILocation(line: 98, column: 45, scope: !12659)
!12667 = distinct !{!12667, !12661, !12668}
!12668 = !DILocation(line: 100, column: 5, scope: !12660)
!12669 = !DILocation(line: 101, column: 5, scope: !12651)
!12670 = distinct !DISubprogram(name: "SysTick_Set", scope: !2516, file: !2516, line: 62, type: !3665, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !12671)
!12671 = !{!12672, !12673}
!12672 = !DILocalVariable(name: "ticks", arg: 1, scope: !12670, file: !2516, line: 62, type: !61)
!12673 = !DILocalVariable(name: "val", scope: !12670, file: !2516, line: 64, type: !61)
!12674 = !DILocation(line: 0, scope: !12670)
!12675 = !DILocation(line: 67, column: 16, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12670, file: !2516, line: 67, column: 9)
!12677 = !DILocation(line: 67, column: 21, scope: !12676)
!12678 = !DILocation(line: 67, column: 9, scope: !12670)
!12679 = !DILocation(line: 72, column: 20, scope: !12670)
!12680 = !DILocation(line: 75, column: 19, scope: !12670)
!12681 = !DILocation(line: 79, column: 20, scope: !12670)
!12682 = !DILocation(line: 80, column: 20, scope: !12670)
!12683 = !DILocation(line: 83, column: 19, scope: !12670)
!12684 = !DILocation(line: 85, column: 5, scope: !12670)
!12685 = !DILocation(line: 86, column: 1, scope: !12670)
!12686 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2516, file: !2516, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !293)
!12687 = !DILocation(line: 97, column: 28, scope: !12686)
!12688 = !DILocation(line: 98, column: 1, scope: !12686)
!12689 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2516, file: !2516, line: 107, type: !3917, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !293)
!12690 = !DILocation(line: 109, column: 12, scope: !12689)
!12691 = !DILocation(line: 109, column: 5, scope: !12689)
!12692 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2516, file: !2516, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !12693)
!12693 = !{!12694}
!12694 = !DILocalVariable(name: "cm_mux_sel", scope: !12692, file: !2516, line: 121, type: !460)
!12695 = !DILocation(line: 121, column: 38, scope: !12692)
!12696 = !DILocation(line: 121, column: 26, scope: !12692)
!12697 = !DILocation(line: 0, scope: !12692)
!12698 = !DILocation(line: 123, column: 5, scope: !12692)
!12699 = !DILocation(line: 132, column: 13, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12692, file: !2516, line: 123, column: 25)
!12701 = !DILocation(line: 140, column: 13, scope: !12700)
!12702 = !DILocation(line: 0, scope: !12700)
!12703 = !DILocation(line: 146, column: 26, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12692, file: !2516, line: 146, column: 9)
!12705 = !DILocation(line: 146, column: 50, scope: !12704)
!12706 = !DILocation(line: 146, column: 41, scope: !12704)
!12707 = !DILocation(line: 148, column: 25, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !2516, line: 147, column: 52)
!12709 = !DILocation(line: 149, column: 5, scope: !12708)
!12710 = !DILocation(line: 150, column: 1, scope: !12692)
!12711 = distinct !DISubprogram(name: "SystemInit", scope: !2516, file: !2516, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !293)
!12712 = !DILocation(line: 162, column: 16, scope: !12711)
!12713 = !DILocation(line: 166, column: 16, scope: !12711)
!12714 = !DILocation(line: 169, column: 16, scope: !12711)
!12715 = !DILocation(line: 172, column: 1, scope: !12711)
!12716 = distinct !DISubprogram(name: "CachePreInit", scope: !2516, file: !2516, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !293)
!12717 = !DILocation(line: 183, column: 22, scope: !12716)
!12718 = !DILocation(line: 186, column: 21, scope: !12716)
!12719 = !DILocation(line: 189, column: 21, scope: !12716)
!12720 = !DILocation(line: 192, column: 29, scope: !12716)
!12721 = !DILocation(line: 193, column: 33, scope: !12716)
!12722 = !DILocation(line: 195, column: 28, scope: !12716)
!12723 = !DILocation(line: 200, column: 30, scope: !12716)
!12724 = !DILocation(line: 214, column: 1, scope: !12716)
