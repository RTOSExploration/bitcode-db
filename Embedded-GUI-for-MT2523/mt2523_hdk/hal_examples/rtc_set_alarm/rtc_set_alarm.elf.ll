; ModuleID = './build/rtc_set_alarm.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.uart_sw_flowcontrol_config_t = type { i8, i8, i8 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.EINT_REGISTER_T = type { i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, [15 x i32], [64 x %struct.EINT_CON_REGISTER_T] }
%struct.EINT_CON_REGISTER_T = type { %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.RTC_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.ABIST_FQMTR_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.rtc_spare_register_information = type { i16*, i16, i16 }
%struct.hal_rtc_time_t = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.12 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.12*, %struct.anon.12*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.pmu_function_t = type { void (i8, i8*)*, i8*, i8, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.i2c_transaction_size_t = type { i32, i32, i32, i32, i32 }
%struct.pmic_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.12*, %struct.anon.12*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gpt_lock_sleep_name = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 4, !dbg !92
@gpt_lock_sleep_handle = internal unnamed_addr global [6 x i8] zeroinitializer, align 1, !dbg !156
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"[GPT%d][init]:get sleep handle failed\0D\0A\00", align 1
@.str.1.3 = private unnamed_addr constant [5 x i8] c"GPT0\00", align 1
@.str.2.4 = private unnamed_addr constant [5 x i8] c"GPT1\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"GPT2\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"GPT3\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"GPT4\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"GPT5\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !168
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !331
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !388
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !385
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !346
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !362
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !389
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !669
@.str.39 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.40 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !824
@g_uart_dma_config = internal global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !842
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !786
@g_uart_send_lock_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !791
@g_uart_sleep_handler = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !793
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_flowcontrol_status = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !795
@g_uart_irq_pending_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !822
@g_uart_restore_init = internal unnamed_addr global i1 false, align 1, !dbg !867
@g_uart_config = internal global [4 x %struct.hal_uart_config_t] zeroinitializer, align 4, !dbg !808
@g_uart_sw_flowcontrol_config = internal unnamed_addr global [4 x %struct.uart_sw_flowcontrol_config_t] zeroinitializer, align 1, !dbg !799
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !856
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !868
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !837
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !869
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !941
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !946
@.str.83 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.84 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@.str.2.85 = private unnamed_addr constant [6 x i8] c"uart2\00", align 1
@.str.3.86 = private unnamed_addr constant [6 x i8] c"uart3\00", align 1
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.85, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.86, i32 0, i32 0)], align 4, !dbg !952
@.str.4.95 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.5.96 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.6 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !958
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !1072
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !1079
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !1077
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !1008
@__FUNCTION__.pmic_i2c_send_polling = private unnamed_addr constant [22 x i8] c"pmic_i2c_send_polling\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"i2c pmic send error:%d\0D\0A\00", align 1
@__FUNCTION__.pmic_i2c_send_to_receive_polling = private unnamed_addr constant [33 x i8] c"pmic_i2c_send_to_receive_polling\00", align 1
@.str.1.98 = private unnamed_addr constant [33 x i8] c"i2c pmic send_to_read error:%d\0D\0A\00", align 1
@EINT_REGISTER = dso_local local_unnamed_addr global %struct.EINT_REGISTER_T* inttoptr (i32 -1576860928 to %struct.EINT_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !1082
@hal_eint_init.ini_state = internal unnamed_addr global i1 false, align 4, !dbg !1245
@eint_function_table = internal unnamed_addr global [32 x %struct.gpt_callback_context_t] zeroinitializer, align 4, !dbg !1167
@__FUNCTION__.hal_eint_isr = private unnamed_addr constant [13 x i8] c"hal_eint_isr\00", align 1
@.str.99 = private unnamed_addr constant [35 x i8] c"ERROR: no EINT interrupt handler!\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1246
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1332
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1324
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@rtc_register = dso_local local_unnamed_addr global %struct.RTC_REGISTER_T* inttoptr (i32 -1575092224 to %struct.RTC_REGISTER_T*), align 4, !dbg !1337
@abist_fqmtr_register = dso_local local_unnamed_addr global %struct.ABIST_FQMTR_REGISTER_T* inttoptr (i32 -1576795136 to %struct.ABIST_FQMTR_REGISTER_T*), align 4, !dbg !1443
@pmu_k_eosc_con0 = dso_local local_unnamed_addr global i16* inttoptr (i32 -1575354304 to i16*), align 4, !dbg !1459
@hw_version_code = dso_local local_unnamed_addr global i16* inttoptr (i32 -1577058304 to i16*), align 4, !dbg !1462
@rtc_init_done = internal unnamed_addr global i1 false, align 1, !dbg !1500
@.str.116 = private unnamed_addr constant [20 x i8] c"Just After Power On\00", align 1
@.str.1.117 = private unnamed_addr constant [18 x i8] c"hal_rtc_init done\00", align 1
@__FUNCTION__.hal_rtc_deinit = private unnamed_addr constant [15 x i8] c"hal_rtc_deinit\00", align 1
@.str.2.118 = private unnamed_addr constant [20 x i8] c"Use 32k crystal, %x\00", align 1
@.str.3.119 = private unnamed_addr constant [19 x i8] c"No 32k crystal, %x\00", align 1
@.str.4.120 = private unnamed_addr constant [20 x i8] c"hal_rtc_deinit done\00", align 1
@rtc_time_callback_function = internal unnamed_addr global void (i8*)* null, align 4, !dbg !1473
@rtc_time_user_data = internal unnamed_addr global i8* null, align 4, !dbg !1476
@rtc_alarm_callback_function = internal unnamed_addr global void (i8*)* null, align 4, !dbg !1478
@rtc_alarm_user_data = internal unnamed_addr global i8* null, align 4, !dbg !1481
@__FUNCTION__.rtc_set_data = private unnamed_addr constant [13 x i8] c"rtc_set_data\00", align 1
@.str.5.122 = private unnamed_addr constant [51 x i8] c"Invalid parameter, offset = %d, len = %d, buf = %p\00", align 1
@rtc_spare_register_table = internal unnamed_addr constant [13 x %struct.rtc_spare_register_information] [%struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092168 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092164 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092160 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092156 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092152 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092136 to i16*), i16 255, i16 0 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092136 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092132 to i16*), i16 255, i16 0 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092132 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092128 to i16*), i16 255, i16 0 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092128 to i16*), i16 -256, i16 8 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092124 to i16*), i16 255, i16 0 }, %struct.rtc_spare_register_information { i16* inttoptr (i32 -1575092124 to i16*), i16 -256, i16 8 }], align 4, !dbg !1490
@rtc_spare_register_backup = internal global [13 x i8] zeroinitializer, align 1, !dbg !1483
@rtc_in_test = internal unnamed_addr global i8 0, align 1, !dbg !1498
@__FUNCTION__.hal_rtc_set_data = private unnamed_addr constant [17 x i8] c"hal_rtc_set_data\00", align 1
@.str.6.123 = private unnamed_addr constant [22 x i8] c"%s: in rtc test mode.\00", align 1
@__FUNCTION__.rtc_get_data = private unnamed_addr constant [13 x i8] c"rtc_get_data\00", align 1
@__FUNCTION__.hal_rtc_get_data = private unnamed_addr constant [17 x i8] c"hal_rtc_get_data\00", align 1
@__FUNCTION__.hal_rtc_clear_data = private unnamed_addr constant [19 x i8] c"hal_rtc_clear_data\00", align 1
@__FUNCTION__.rtc_set_register = private unnamed_addr constant [17 x i8] c"rtc_set_register\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Invalid address\00", align 1
@__FUNCTION__.rtc_get_register = private unnamed_addr constant [17 x i8] c"rtc_get_register\00", align 1
@rtc_alarm_power_on_test.alarm_power_on_time = internal global %struct.hal_rtc_time_t zeroinitializer, align 1, !dbg !1464
@__FUNCTION__.rtc_alarm_power_on_test = private unnamed_addr constant [24 x i8] c"rtc_alarm_power_on_test\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"target alarm time: 20%d,%d,%d (%d) %d:%d:%d\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"get alarm time: 20%d,%d,%d (%d) %d:%d:%d\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"set alarm time: 20%d,%d,%d (%d) %d:%d:%d\00", align 1
@__FUNCTION__.rtc_enter_test = private unnamed_addr constant [15 x i8] c"rtc_enter_test\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"%s: %d\00", align 1
@rtc_irq_sta = dso_local local_unnamed_addr global i16 0, align 2, !dbg !1486
@__FUNCTION__.rtc_wait_busy = private unnamed_addr constant [14 x i8] c"rtc_wait_busy\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"rtc_wait_busy timeout, RTC_BBPU = %x!\00", align 1
@.str.13 = private unnamed_addr constant [69 x i8] c"rtc_wait_busy timeout, RTC_32K = %u, EOSC = %u, DCXO = %u, XOSC = %u\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"reopen PMU_32K\00", align 1
@__FUNCTION__.rtc_dump_register = private unnamed_addr constant [18 x i8] c"rtc_dump_register\00", align 1
@.str.15 = private unnamed_addr constant [91 x i8] c"rtc_dump_register[%s], RTC_POWERKEY1 = %x, RTC_POWERKEY2 = %x, RTC_DIFF = %x, RTC_CON = %x\00", align 1
@.str.16 = private unnamed_addr constant [98 x i8] c"RTC_BBPU = %x, RTC_AL_SEC = %x, RTC_CON32CON = %x, RTC_CON32CON1 = %x, RTC_CON32CON2 = %x, %d, %d\00", align 1
@__FUNCTION__.f32k_osc32_Init = private unnamed_addr constant [16 x i8] c"f32k_osc32_Init\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"PORSTB occurred.\00", align 1
@.str.18 = private unnamed_addr constant [57 x i8] c"LPD occurred, rtc_diff: %x, rtc_con: %x, rtc_al_sec = %x\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"RTC_SCXO\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"xosc frequency = %u, RTC_CALI = %x\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"f32k_osc32_Init done\00", align 1
@.str.22 = private unnamed_addr constant [46 x i8] c"RTC_32K = %u, EOSC = %u, DCXO = %u, XOSC = %u\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"Before Set Power Key\00", align 1
@__FUNCTION__.rtc_set_power_key = private unnamed_addr constant [18 x i8] c"rtc_set_power_key\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"rtc_set_power_key fail : rtc_diff = %x!\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"After Set Power Key\00", align 1
@__FUNCTION__.rtc_lpd_init = private unnamed_addr constant [13 x i8] c"rtc_lpd_init\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"rtc_lpd_init fail : RTC_CON = %x, RTC_AL_SEC = %x!\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"rtc_lpd_init fail\00", align 1
@__FUNCTION__.f32k_eosc32_calibration = private unnamed_addr constant [24 x i8] c"f32k_eosc32_calibration\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"high_frequency <= 32768, frequency = %u, xosccali = %d\00", align 1
@.str.29 = private unnamed_addr constant [54 x i8] c"low_frequency >= 32768, frequency = %u, xosccali = %d\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"xosccali = %d\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"frequency = %u, xosccali = %d\00", align 1
@__FUNCTION__.rtc_check_alarm_power_on = private unnamed_addr constant [25 x i8] c"rtc_check_alarm_power_on\00", align 1
@.str.32 = private unnamed_addr constant [25 x i8] c"time : %d/%d/%d %d:%d:%d\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"alarm : %d/%d/%d %d:%d:%d\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"Alarm power on, %x\00", align 1
@__FUNCTION__.rtc_enable_2sec_reboot = private unnamed_addr constant [23 x i8] c"rtc_enable_2sec_reboot\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"2sec reboot happened\00", align 1
@__FUNCTION__.rtc_init_eint = private unnamed_addr constant [14 x i8] c"rtc_init_eint\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"hal_eint_init fail: %d\00", align 1
@.str.37 = private unnamed_addr constant [36 x i8] c"hal_eint_register_callback fail: %d\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"hal_eint_unmask fail: %d\00", align 1
@__FUNCTION__.rtc_is_time_valid = private unnamed_addr constant [18 x i8] c"rtc_is_time_valid\00", align 1
@.str.39.121 = private unnamed_addr constant [18 x i8] c"Invalid year : %d\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"Invalid month : %d\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"Invalid day of week : %d\00", align 1
@.str.42 = private unnamed_addr constant [26 x i8] c"Invalid day of month : %d\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"Invalid hour : %d\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"Invalid minute : %d\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"Invalid second : %d\00", align 1
@__const.rtc_forward_time.days_in_month = private unnamed_addr constant [13 x i32] [i32 0, i32 31, i32 28, i32 31, i32 30, i32 31, i32 30, i32 31, i32 31, i32 30, i32 31, i32 30, i32 31], align 4
@__FUNCTION__.test_rtc_alarm_callback = private unnamed_addr constant [24 x i8] c"test_rtc_alarm_callback\00", align 1
@switch.table.hal_rtc_set_time_notification_period = private unnamed_addr constant [10 x i16] [i16 0, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2], align 2
@switch.table.hal_rtc_set_time_notification_period.46 = private unnamed_addr constant [10 x i16] [i16 0, i16 1, i16 2, i16 4, i16 8, i16 32, i16 64, i16 128, i16 256, i16 512], align 2
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1501
@.str.124 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.125 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1576
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1578
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1580
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1582
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1584
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1586
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1588
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1590
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1592
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1594
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1596
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1907
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1909
@.str.128 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.129 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1918
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1911
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1919
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1971
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1973
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !2006
@nor_egid = dso_local local_unnamed_addr global %struct.anon.12* null, align 4, !dbg !2015
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2331
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2202
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2230
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !2333
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !2040
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2226
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !2228
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !2052
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !2313
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !2316
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !2346
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !2205
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2218
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2189
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2193
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2191
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !2042
@.str.144 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.145 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2318
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !2197
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2214
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2216
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2373
@.str.150 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.151 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2433
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !2320
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2434
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2441
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2443
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2445
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2447
@.str.166 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.167 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2449
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2503
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2505
@pmu_init_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !2507
@__FUNCTION__.pmu_init_mt6385 = private unnamed_addr constant [16 x i8] c"pmu_init_mt6385\00", align 1
@.str.174 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E1\0A\0D\00", align 1
@.str.1.175 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E2\0A\0D\00", align 1
@pmu_power_mode_init_setting_E1 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\06\06", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\04\04", [8 x i8] c"\00\00\00\02\02\00\03\03", [8 x i8] c"\01\00\00\02\02\00\02\02", [8 x i8] c"\01\00\00\02\02\01\01\01"], align 1, !dbg !2652
@pmu_power_mode_init_setting_E2 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\00\00", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\01\01", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00"], align 1, !dbg !2657
@pmu_eint_handler.index = internal unnamed_addr global i32 0, align 4, !dbg !2628
@pmu_eint_handler.int_sts = internal unnamed_addr global [7 x i32] zeroinitializer, align 4, !dbg !2634
@pmu_function_table = dso_local local_unnamed_addr global [32 x %struct.pmu_function_t] zeroinitializer, align 4, !dbg !2639
@__FUNCTION__.pmu_init = private unnamed_addr constant [9 x i8] c"pmu_init\00", align 1
@.str.176 = private unnamed_addr constant [23 x i8] c"\0A\0Duse internal pmic \0A\0D\00", align 1
@__FUNCTION__.internal_pmu_ctrl_power = private unnamed_addr constant [24 x i8] c"internal_pmu_ctrl_power\00", align 1
@.str.1.181 = private unnamed_addr constant [48 x i8] c"EXTERNAL PMU ERROR: No matching Power Control!\0A\00", align 1
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2667
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2679
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2681
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2683
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2685
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2788
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2790
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2792
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2794
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2796
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2798
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2800
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2802
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2804
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2806
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2808
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2810
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2812
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2814
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2786
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2833
@test_rtc_callback = dso_local global i8 0, align 1, !dbg !2845
@.str.190 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.191 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.192 = private unnamed_addr constant [26 x i8] c"---RTC example begin---\0D\0A\00", align 1
@param = internal global [7 x i8] c"\0F\0B\06\05\0F\1A\0F", align 1, !dbg !2851
@.str.3.193 = private unnamed_addr constant [40 x i8] c"Set RTC time: 20%d,%d,%d (%d) %d:%d:%d\0A\00", align 1
@alarm_param = internal global [7 x i8] c"\0F\0B\06\05\0F\1A\19", align 1, !dbg !2854
@.str.4.194 = private unnamed_addr constant [46 x i8] c"Set RTC alarm time: 20%d,%d,%d (%d) %d:%d:%d\0A\00", align 1
@.str.5.195 = private unnamed_addr constant [19 x i8] c"RTC alarm enabled\0A\00", align 1
@.str.6.197 = private unnamed_addr constant [18 x i8] c"RTC alarm fired \0A\00", align 1
@.str.7.198 = private unnamed_addr constant [44 x i8] c"RTC current time: 20%d,%d,%d (%d) %d:%d:%d\0A\00", align 1
@.str.8.199 = private unnamed_addr constant [24 x i8] c"---RTC example end---\0D\0A\00", align 1
@.str.9.200 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2856
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !3058
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !3166
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:12 GMT +00:00\00", align 1, !dbg !3168
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !3173
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !3179

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !3314 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3322
  call void @llvm.dbg.value(metadata i32 %1, metadata !3321, metadata !DIExpression()), !dbg !3323
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !3324, !range !3326
  %3 = icmp eq i8 %2, 0, !dbg !3324
  br i1 %3, label %5, label %4, !dbg !3327

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3328
  br label %15, !dbg !3330

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !3331
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3333
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3334
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3335
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3336
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3337
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !3338
  call void @llvm.dbg.value(metadata i32 0, metadata !3319, metadata !DIExpression()), !dbg !3323
  br label %7, !dbg !3339

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !3319, metadata !DIExpression()), !dbg !3323
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !3341
  store volatile i32 0, i32* %9, align 4, !dbg !3344
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !3345
  store volatile i32 0, i32* %10, align 4, !dbg !3346
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !3347
  store i32 0, i32* %11, align 4, !dbg !3348
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !3349
  store i32 0, i32* %12, align 4, !dbg !3350
  %13 = add nuw nsw i32 %8, 1, !dbg !3351
  call void @llvm.dbg.value(metadata i32 %13, metadata !3319, metadata !DIExpression()), !dbg !3323
  %14 = icmp eq i32 %13, 16, !dbg !3352
  br i1 %14, label %15, label %7, !dbg !3339, !llvm.loop !3353

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !3323
  ret i32 %16, !dbg !3355
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3356 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %1, metadata !3358, metadata !DIExpression()), !dbg !3360
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3361
  %3 = and i32 %2, -31, !dbg !3361
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3361
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3362
  %5 = or i32 %4, 19, !dbg !3362
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3362
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3363
  %7 = and i32 %6, -31, !dbg !3363
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3363
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3364
  %9 = or i32 %8, 3, !dbg !3364
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3364
  tail call void asm sideeffect "isb", ""() #22, !dbg !3365, !srcloc !3369
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3370
  ret i32 0, !dbg !3371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !3372 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3375
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3376
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3377
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3378
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !3379
  call void @llvm.dbg.value(metadata i32 0, metadata !3374, metadata !DIExpression()), !dbg !3380
  br label %2, !dbg !3381

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3374, metadata !DIExpression()), !dbg !3380
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !3383
  store volatile i32 0, i32* %4, align 4, !dbg !3386
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !3387
  store volatile i32 0, i32* %5, align 4, !dbg !3388
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !3389
  store i32 0, i32* %6, align 4, !dbg !3390
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !3391
  store i32 0, i32* %7, align 4, !dbg !3392
  %8 = add nuw nsw i32 %3, 1, !dbg !3393
  call void @llvm.dbg.value(metadata i32 %8, metadata !3374, metadata !DIExpression()), !dbg !3380
  %9 = icmp eq i32 %8, 16, !dbg !3394
  br i1 %9, label %10, label %2, !dbg !3381, !llvm.loop !3395

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !3397
  ret i32 0, !dbg !3398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !3399 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3400
  %2 = and i32 %1, 768, !dbg !3402
  %3 = icmp eq i32 %2, 0, !dbg !3402
  br i1 %3, label %8, label %4, !dbg !3403

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3404
  %6 = or i32 %5, 13, !dbg !3404
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3404
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3405
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3406
  br label %8, !dbg !3407

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !3408
  ret i32 %9, !dbg !3409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !3410 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %1, metadata !3412, metadata !DIExpression()), !dbg !3414
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3415
  %3 = and i32 %2, 1, !dbg !3417
  %4 = icmp eq i32 %3, 0, !dbg !3417
  br i1 %4, label %7, label %5, !dbg !3418

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3419
  br label %7, !dbg !3421

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3422
  %9 = and i32 %8, -2, !dbg !3422
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3422
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3423
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3424
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3425
  ret i32 0, !dbg !3426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !3427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3431, metadata !DIExpression()), !dbg !3432
  %2 = icmp ugt i32 %0, 15, !dbg !3433
  br i1 %2, label %13, label %3, !dbg !3435

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3436
  %5 = load volatile i32, i32* %4, align 4, !dbg !3436
  %6 = and i32 %5, 256, !dbg !3438
  %7 = icmp eq i32 %6, 0, !dbg !3438
  br i1 %7, label %13, label %8, !dbg !3439

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !3440
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3442
  %11 = or i32 %10, %9, !dbg !3442
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3442
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3443
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !3444
  br label %13, !dbg !3445

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !3432
  ret i32 %14, !dbg !3446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !3447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3449, metadata !DIExpression()), !dbg !3450
  %2 = icmp ugt i32 %0, 15, !dbg !3451
  br i1 %2, label %11, label %3, !dbg !3453

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !3454
  %5 = xor i32 %4, -1, !dbg !3455
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3456
  %7 = and i32 %6, %5, !dbg !3456
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3456
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3457
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !3458
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3459
  store i32 0, i32* %9, align 4, !dbg !3460
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3461
  store i32 0, i32* %10, align 4, !dbg !3462
  br label %11, !dbg !3463

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !3450
  ret i32 %12, !dbg !3464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !3465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3470, metadata !DIExpression()), !dbg !3471
  %2 = icmp ugt i32 %0, 3, !dbg !3472
  br i1 %2, label %13, label %3, !dbg !3474

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3475
  %5 = and i32 %4, -769, !dbg !3475
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3475
  %6 = shl nuw nsw i32 %0, 8, !dbg !3476
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3477
  %8 = or i32 %7, %6, !dbg !3477
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3477
  %9 = icmp eq i32 %0, 0, !dbg !3478
  br i1 %9, label %10, label %11, !dbg !3480

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3481
  br label %11, !dbg !3483

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3484
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3485
  br label %13, !dbg !3486

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !3471
  ret i32 %14, !dbg !3487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !3488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3499, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !3500, metadata !DIExpression()), !dbg !3501
  %3 = icmp ugt i32 %0, 15, !dbg !3502
  br i1 %3, label %30, label %4, !dbg !3504

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !3505
  br i1 %5, label %30, label %6, !dbg !3507

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !3508
  %8 = load i32, i32* %7, align 4, !dbg !3508
  %9 = and i32 %8, 4095, !dbg !3510
  %10 = icmp eq i32 %9, 0, !dbg !3510
  br i1 %10, label %12, label %11, !dbg !3511

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3512
  unreachable, !dbg !3512

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !3514
  %14 = load i32, i32* %13, align 4, !dbg !3514
  %15 = and i32 %14, 4095, !dbg !3516
  %16 = icmp eq i32 %15, 0, !dbg !3516
  br i1 %16, label %18, label %17, !dbg !3517

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3518
  unreachable, !dbg !3518

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3520
  store volatile i32 %8, i32* %19, align 4, !dbg !3521
  %20 = load i32, i32* %7, align 4, !dbg !3522
  %21 = load i32, i32* %13, align 4, !dbg !3523
  %22 = add i32 %21, %20, !dbg !3524
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !3525
  store volatile i32 %22, i32* %23, align 4, !dbg !3526
  %24 = load volatile i32, i32* %19, align 4, !dbg !3527
  %25 = or i32 %24, 256, !dbg !3527
  store volatile i32 %25, i32* %19, align 4, !dbg !3527
  %26 = load volatile i32, i32* %19, align 4, !dbg !3528
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3529
  store i32 %26, i32* %27, align 4, !dbg !3530
  %28 = load volatile i32, i32* %23, align 4, !dbg !3531
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3532
  store i32 %28, i32* %29, align 4, !dbg !3533
  br label %30, !dbg !3534

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !3501
  ret i32 %31, !dbg !3535
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3540, metadata !DIExpression()), !dbg !3542
  %2 = and i32 %0, 31, !dbg !3543
  %3 = icmp eq i32 %2, 0, !dbg !3543
  br i1 %3, label %4, label %9, !dbg !3545

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %5, metadata !3541, metadata !DIExpression()), !dbg !3542
  %6 = and i32 %0, -32, !dbg !3547
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3548
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3549
  %8 = or i32 %7, 5, !dbg !3549
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3549
  tail call void asm sideeffect "isb", ""() #22, !dbg !3550, !srcloc !3369
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3552
  br label %9, !dbg !3553

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3542
  ret i32 %10, !dbg !3554
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3559, metadata !DIExpression()), !dbg !3563
  call void @llvm.dbg.value(metadata i32 %1, metadata !3560, metadata !DIExpression()), !dbg !3563
  %3 = add i32 %1, %0, !dbg !3564
  call void @llvm.dbg.value(metadata i32 %3, metadata !3562, metadata !DIExpression()), !dbg !3563
  %4 = or i32 %1, %0, !dbg !3565
  %5 = and i32 %4, 31, !dbg !3565
  %6 = icmp eq i32 %5, 0, !dbg !3565
  br i1 %6, label %7, label %16, !dbg !3565

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %8, metadata !3561, metadata !DIExpression()), !dbg !3563
  call void @llvm.dbg.value(metadata i32 %0, metadata !3559, metadata !DIExpression()), !dbg !3563
  %9 = icmp ugt i32 %3, %0, !dbg !3568
  br i1 %9, label %10, label %15, !dbg !3569

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3559, metadata !DIExpression()), !dbg !3563
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3570
  %13 = add i32 %11, 32, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %13, metadata !3559, metadata !DIExpression()), !dbg !3563
  %14 = icmp ult i32 %13, %3, !dbg !3568
  br i1 %14, label %10, label %15, !dbg !3569, !llvm.loop !3573

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3575, !srcloc !3369
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3577
  br label %16, !dbg !3578

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3563
  ret i32 %17, !dbg !3579
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3582, metadata !DIExpression()), !dbg !3584
  %2 = and i32 %0, 31, !dbg !3585
  %3 = icmp eq i32 %2, 0, !dbg !3585
  br i1 %3, label %4, label %9, !dbg !3587

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %5, metadata !3583, metadata !DIExpression()), !dbg !3584
  %6 = and i32 %0, -32, !dbg !3589
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3590
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3591
  %8 = or i32 %7, 21, !dbg !3591
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3591
  tail call void asm sideeffect "isb", ""() #22, !dbg !3592, !srcloc !3369
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3594
  br label %9, !dbg !3595

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3584
  ret i32 %10, !dbg !3596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3599, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i32 %1, metadata !3600, metadata !DIExpression()), !dbg !3603
  %3 = add i32 %1, %0, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %3, metadata !3602, metadata !DIExpression()), !dbg !3603
  %4 = or i32 %1, %0, !dbg !3605
  %5 = and i32 %4, 31, !dbg !3605
  %6 = icmp eq i32 %5, 0, !dbg !3605
  br i1 %6, label %7, label %16, !dbg !3605

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %8, metadata !3601, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i32 %0, metadata !3599, metadata !DIExpression()), !dbg !3603
  %9 = icmp ugt i32 %3, %0, !dbg !3608
  br i1 %9, label %10, label %15, !dbg !3609

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3599, metadata !DIExpression()), !dbg !3603
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3610
  %13 = add i32 %11, 32, !dbg !3612
  call void @llvm.dbg.value(metadata i32 %13, metadata !3599, metadata !DIExpression()), !dbg !3603
  %14 = icmp ult i32 %13, %3, !dbg !3608
  br i1 %14, label %10, label %15, !dbg !3609, !llvm.loop !3613

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3615, !srcloc !3369
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3617
  br label %16, !dbg !3618

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3603
  ret i32 %17, !dbg !3619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3620 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3623
  call void @llvm.dbg.value(metadata i32 %1, metadata !3622, metadata !DIExpression()), !dbg !3624
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3625
  %3 = and i32 %2, -31, !dbg !3625
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3625
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3626
  %5 = or i32 %4, 19, !dbg !3626
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3626
  tail call void asm sideeffect "isb", ""() #22, !dbg !3627, !srcloc !3369
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3629
  ret i32 0, !dbg !3630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3635, metadata !DIExpression()), !dbg !3637
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3638
  %3 = and i32 %2, 8, !dbg !3640
  %4 = icmp eq i32 %3, 0, !dbg !3640
  br i1 %4, label %23, label %5, !dbg !3641

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3636, metadata !DIExpression()), !dbg !3637
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3642
  %8 = shl nuw nsw i32 1, %6, !dbg !3647
  %9 = and i32 %7, %8, !dbg !3648
  %10 = icmp eq i32 %9, 0, !dbg !3648
  br i1 %10, label %20, label %11, !dbg !3649

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3650
  %13 = load volatile i32, i32* %12, align 4, !dbg !3650
  %14 = and i32 %13, -257, !dbg !3653
  %15 = icmp ugt i32 %14, %0, !dbg !3654
  br i1 %15, label %20, label %16, !dbg !3655

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3656
  %18 = load volatile i32, i32* %17, align 4, !dbg !3656
  %19 = icmp ugt i32 %18, %0, !dbg !3657
  br i1 %19, label %23, label %20, !dbg !3658

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %21, metadata !3636, metadata !DIExpression()), !dbg !3637
  %22 = icmp eq i32 %21, 16, !dbg !3660
  br i1 %22, label %23, label %5, !dbg !3661, !llvm.loop !3662

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3637
  ret i1 %24, !dbg !3664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3671, metadata !DIExpression()), !dbg !3672
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3673
  br i1 %2, label %3, label %32, !dbg !3675

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3676
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3678
  %6 = load i32, i32* %5, align 4, !dbg !3678
  %7 = icmp eq i32 %6, 1, !dbg !3679
  br i1 %7, label %32, label %8, !dbg !3680

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3681
  %10 = load i8, i8* %9, align 4, !dbg !3681, !range !3326
  %11 = icmp eq i8 %10, 0, !dbg !3681
  br i1 %11, label %12, label %32, !dbg !3682

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3683
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3684
  tail call void @gpt_open_clock_source() #20, !dbg !3685
  store i8 1, i8* %9, align 4, !dbg !3686
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3687
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3687
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3688
  %18 = load volatile i32, i32* %17, align 4, !dbg !3689
  %19 = and i32 %18, -2, !dbg !3689
  store volatile i32 %19, i32* %17, align 4, !dbg !3689
  %20 = shl nuw i32 1, %0, !dbg !3690
  %21 = xor i32 %20, -1, !dbg !3691
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3692
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3693
  %24 = load volatile i32, i32* %23, align 4, !dbg !3694
  %25 = and i32 %24, %21, !dbg !3694
  store volatile i32 %25, i32* %23, align 4, !dbg !3694
  %26 = getelementptr inbounds [6 x i8*], [6 x i8*]* @gpt_lock_sleep_name, i32 0, i32 %0, !dbg !3695
  %27 = load i8*, i8** %26, align 4, !dbg !3695
  %28 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %27) #20, !dbg !3695
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3695
  store i8 %28, i8* %29, align 1, !dbg !3695
  %30 = icmp eq i8 %28, -1, !dbg !3697
  br i1 %30, label %31, label %32, !dbg !3695

31:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 123, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0), i32 noundef %0) #20, !dbg !3699
  br label %32, !dbg !3699

32:                                               ; preds = %12, %3, %8, %1, %31
  %33 = phi i32 [ -3, %31 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], [ 0, %12 ], !dbg !3672
  ret i32 %33, !dbg !3701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3706, metadata !DIExpression()), !dbg !3707
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3708, !range !3326
  %3 = icmp ne i8 %2, 0, !dbg !3710
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3711
  %7 = and i1 %5, %6, !dbg !3711
  ret i1 %7, !dbg !3712
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3715, metadata !DIExpression()), !dbg !3716
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3717
  br i1 %2, label %3, label %17, !dbg !3719

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3720
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3722
  %6 = load i32, i32* %5, align 4, !dbg !3722
  %7 = icmp eq i32 %6, 1, !dbg !3723
  br i1 %7, label %17, label %8, !dbg !3724

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3725
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3726
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3727
  store i8 0, i8* %11, align 4, !dbg !3728
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3729
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3729
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3730
  %14 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3731
  %15 = load i8, i8* %14, align 1, !dbg !3731
  %16 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %15) #20, !dbg !3731
  br label %17, !dbg !3733

17:                                               ; preds = %3, %1, %8
  %18 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3716
  ret i32 %18, !dbg !3734
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3740, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata i32* %1, metadata !3741, metadata !DIExpression()), !dbg !3742
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3743

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3744
  %5 = icmp eq i32 %4, 1, !dbg !3748
  br i1 %5, label %8, label %6, !dbg !3749

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3750
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3752
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3753
  br label %8, !dbg !3754

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3755
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3756
  br label %20, !dbg !3757

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3758
  %13 = icmp eq i32 %12, 1, !dbg !3762
  br i1 %13, label %16, label %14, !dbg !3763

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3764
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3766
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3767
  br label %16, !dbg !3768

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3769
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3770
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3771
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3772
  store i32 %21, i32* %1, align 4, !dbg !3772
  br label %22, !dbg !3773

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3742
  ret i32 %23, !dbg !3774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3779, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i32 %1, metadata !3780, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i32* %2, metadata !3781, metadata !DIExpression()), !dbg !3782
  %4 = icmp eq i32* %2, null, !dbg !3783
  br i1 %4, label %7, label %5, !dbg !3785

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3786
  store i32 %6, i32* %2, align 4, !dbg !3786
  br label %7, !dbg !3788

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3782
  ret i32 %8, !dbg !3789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3795, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32* %1, metadata !3796, metadata !DIExpression()), !dbg !3797
  %3 = icmp ugt i32 %0, 5, !dbg !3798
  br i1 %3, label %7, label %4, !dbg !3800

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3801
  %6 = load i32, i32* %5, align 4, !dbg !3801
  store i32 %6, i32* %1, align 4, !dbg !3802
  br label %7, !dbg !3803

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3797
  ret i32 %8, !dbg !3804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3809, metadata !DIExpression()), !dbg !3812
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3810, metadata !DIExpression()), !dbg !3812
  call void @llvm.dbg.value(metadata i8* %2, metadata !3811, metadata !DIExpression()), !dbg !3812
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3813
  br i1 %4, label %5, label %18, !dbg !3815

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3816
  %7 = load i32, i32* %6, align 4, !dbg !3816
  %8 = icmp eq i32 %7, 1, !dbg !3818
  br i1 %8, label %18, label %9, !dbg !3819

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3820
  %11 = load i8, i8* %10, align 4, !dbg !3820, !range !3326
  %12 = icmp eq i8 %11, 1, !dbg !3821
  br i1 %12, label %13, label %18, !dbg !3822

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3823
  br i1 %14, label %18, label %15, !dbg !3825

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3826
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3827
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3828
  store i8* %2, i8** %17, align 4, !dbg !3829
  tail call void @gpt_nvic_register() #20, !dbg !3830
  br label %18, !dbg !3831

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3812
  ret i32 %19, !dbg !3832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3833 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3838, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i32 %1, metadata !3839, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i32 %2, metadata !3840, metadata !DIExpression()), !dbg !3842
  %5 = bitcast i32* %4 to i8*, !dbg !3843
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3843
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3841, metadata !DIExpression()), !dbg !3844
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3845
  br i1 %6, label %7, label %51, !dbg !3847

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3848
  %9 = load i32, i32* %8, align 4, !dbg !3848
  %10 = icmp eq i32 %9, 1, !dbg !3850
  br i1 %10, label %51, label %11, !dbg !3851

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3852
  %13 = load i8, i8* %12, align 4, !dbg !3852, !range !3326
  %14 = icmp eq i8 %13, 1, !dbg !3853
  br i1 %14, label %15, label %51, !dbg !3854

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3855
  br i1 %16, label %51, label %17, !dbg !3857

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3858
  store volatile i32 %18, i32* %4, align 4, !dbg !3859
  tail call void @gpt_open_clock_source() #20, !dbg !3860
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3861
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3861
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3862
  %22 = load volatile i32, i32* %21, align 4, !dbg !3863
  %23 = and i32 %22, -2, !dbg !3863
  store volatile i32 %23, i32* %21, align 4, !dbg !3863
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3864
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3865
  %26 = load volatile i32, i32* %25, align 4, !dbg !3866
  %27 = and i32 %26, -2, !dbg !3866
  store volatile i32 %27, i32* %25, align 4, !dbg !3866
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3867
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3868
  store volatile i32 16, i32* %29, align 4, !dbg !3869
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3870
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3871
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3872
  store volatile i32 %30, i32* %32, align 4, !dbg !3873
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3874
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3875
  store volatile i32 1, i32* %34, align 4, !dbg !3876
  %35 = shl i32 %2, 4, !dbg !3877
  %36 = or i32 %35, 2, !dbg !3878
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3879
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3880
  store volatile i32 %36, i32* %38, align 4, !dbg !3881
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3882

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3883
  %43 = icmp eq i32 %42, 0, !dbg !3882
  br i1 %43, label %44, label %41, !dbg !3882, !llvm.loop !3884

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3886
  %46 = load volatile i32, i32* %45, align 4, !dbg !3887
  %47 = or i32 %46, 1, !dbg !3887
  store volatile i32 %47, i32* %45, align 4, !dbg !3887
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3888
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3889
  store volatile i32 1, i32* %49, align 4, !dbg !3890
  store i32 1, i32* %8, align 4, !dbg !3891
  %50 = load volatile i32, i32* %4, align 4, !dbg !3892
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3893
  br label %51, !dbg !3894

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3842
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3895
  ret i32 %52, !dbg !3895
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3900, metadata !DIExpression()), !dbg !3901
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3902
  %3 = icmp eq i32 %2, 1, !dbg !3904
  br i1 %3, label %6, label %4, !dbg !3905

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3906
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3908
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3909
  br label %6, !dbg !3910

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3911
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3912
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3913
  ret i32 0, !dbg !3914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3915 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3917, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %1, metadata !3918, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %2, metadata !3919, metadata !DIExpression()), !dbg !3921
  %5 = bitcast i32* %4 to i8*, !dbg !3922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3920, metadata !DIExpression()), !dbg !3923
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3924
  br i1 %6, label %7, label %53, !dbg !3926

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3927
  %9 = load i32, i32* %8, align 4, !dbg !3927
  %10 = icmp eq i32 %9, 1, !dbg !3929
  br i1 %10, label %53, label %11, !dbg !3930

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3931
  %13 = load i8, i8* %12, align 4, !dbg !3931, !range !3326
  %14 = icmp eq i8 %13, 1, !dbg !3932
  br i1 %14, label %15, label %53, !dbg !3933

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3934
  %17 = load i8, i8* %16, align 1, !dbg !3934
  %18 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %17) #20, !dbg !3934
  %19 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3936
  store i8 1, i8* %19, align 1, !dbg !3937
  %20 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3938
  store volatile i32 %20, i32* %4, align 4, !dbg !3939
  tail call void @gpt_open_clock_source() #20, !dbg !3940
  %21 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3941
  %22 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3941
  %23 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %22, i32 0, i32 2, !dbg !3942
  %24 = load volatile i32, i32* %23, align 4, !dbg !3943
  %25 = and i32 %24, -2, !dbg !3943
  store volatile i32 %25, i32* %23, align 4, !dbg !3943
  %26 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3944
  %27 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %26, i32 0, i32 0, !dbg !3945
  %28 = load volatile i32, i32* %27, align 4, !dbg !3946
  %29 = and i32 %28, -2, !dbg !3946
  store volatile i32 %29, i32* %27, align 4, !dbg !3946
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3947
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 1, !dbg !3948
  store volatile i32 12, i32* %31, align 4, !dbg !3949
  %32 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3950
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3951
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 6, !dbg !3952
  store volatile i32 %32, i32* %34, align 4, !dbg !3953
  %35 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3954
  %36 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %35, i32 0, i32 4, !dbg !3955
  store volatile i32 1, i32* %36, align 4, !dbg !3956
  %37 = shl i32 %2, 4, !dbg !3957
  %38 = or i32 %37, 2, !dbg !3958
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3959
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3960
  store volatile i32 %38, i32* %40, align 4, !dbg !3961
  %41 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4
  %42 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 5
  br label %43, !dbg !3962

43:                                               ; preds = %43, %15
  %44 = load volatile i32, i32* %42, align 4, !dbg !3963
  %45 = icmp eq i32 %44, 0, !dbg !3962
  br i1 %45, label %46, label %43, !dbg !3962, !llvm.loop !3964

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 0, !dbg !3966
  %48 = load volatile i32, i32* %47, align 4, !dbg !3967
  %49 = or i32 %48, 1, !dbg !3967
  store volatile i32 %49, i32* %47, align 4, !dbg !3967
  %50 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3968
  %51 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %50, i32 0, i32 2, !dbg !3969
  store volatile i32 1, i32* %51, align 4, !dbg !3970
  %52 = load volatile i32, i32* %4, align 4, !dbg !3971
  tail call void @restore_interrupt_mask(i32 noundef %52) #20, !dbg !3972
  store i32 1, i32* %8, align 4, !dbg !3973
  br label %53, !dbg !3974

53:                                               ; preds = %7, %11, %3, %46
  %54 = phi i32 [ 0, %46 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3921
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3975
  ret i32 %54, !dbg !3975
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3978, metadata !DIExpression()), !dbg !3979
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3980
  %3 = icmp eq i32 %2, 1, !dbg !3982
  br i1 %3, label %6, label %4, !dbg !3983

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3984
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3986
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3987
  br label %6, !dbg !3988

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3989
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3990
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3991
  ret i32 0, !dbg !3992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3993 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3995, metadata !DIExpression()), !dbg !3997
  %3 = bitcast i32* %2 to i8*, !dbg !3998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3998
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3996, metadata !DIExpression()), !dbg !3999
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !4000
  br i1 %4, label %5, label %27, !dbg !4002

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4003
  store volatile i32 %6, i32* %2, align 4, !dbg !4004
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !4005
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !4005
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !4006
  %10 = load volatile i32, i32* %9, align 4, !dbg !4007
  %11 = and i32 %10, -2, !dbg !4007
  store volatile i32 %11, i32* %9, align 4, !dbg !4007
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !4008
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !4009
  %14 = load volatile i32, i32* %13, align 4, !dbg !4010
  %15 = and i32 %14, -2, !dbg !4010
  store volatile i32 %15, i32* %13, align 4, !dbg !4010
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !4011
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !4012
  store volatile i32 1, i32* %17, align 4, !dbg !4013
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !4014
  store i32 0, i32* %18, align 4, !dbg !4015
  %19 = load volatile i32, i32* %2, align 4, !dbg !4016
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !4017
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !4018
  %21 = load i8, i8* %20, align 1, !dbg !4018, !range !3326
  %22 = icmp eq i8 %21, 0, !dbg !4018
  br i1 %22, label %27, label %23, !dbg !4020

23:                                               ; preds = %5
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !4021
  %25 = load i8, i8* %24, align 1, !dbg !4021
  %26 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %25) #20, !dbg !4021
  store i8 0, i8* %20, align 1, !dbg !4024
  br label %27, !dbg !4025

27:                                               ; preds = %5, %23, %1
  %28 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3997
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4026
  ret i32 %28, !dbg !4026
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !4027 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4031, metadata !DIExpression()), !dbg !4034
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4035
  %3 = icmp ugt i32 %2, 31, !dbg !4037
  br i1 %3, label %13, label %4, !dbg !4038

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !4039
  br i1 %5, label %13, label %6, !dbg !4041

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %7, metadata !4033, metadata !DIExpression()), !dbg !4034
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %8, metadata !4032, metadata !DIExpression()), !dbg !4034
  %9 = or i32 %8, -559087616, !dbg !4044
  store i32 %9, i32* %0, align 4, !dbg !4045
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !4046
  store i8 1, i8* %10, align 4, !dbg !4047
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4048
  %12 = add i32 %11, 1, !dbg !4048
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4048
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4049
  br label %13, !dbg !4050

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !4034
  ret i32 %14, !dbg !4051
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !4052 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()), !dbg !4056
  %3 = bitcast i32* %2 to i8*, !dbg !4057
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4057
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4055, metadata !DIExpression()), !dbg !4058
  %4 = and i32 %0, -559087616, !dbg !4059
  %5 = icmp eq i32 %4, -559087616, !dbg !4061
  br i1 %5, label %6, label %24, !dbg !4062

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !4063
  store volatile i32 %7, i32* %2, align 4, !dbg !4064
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4065
  %9 = icmp eq i32 %8, 0, !dbg !4067
  br i1 %9, label %24, label %10, !dbg !4068

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !4069
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !4071
  %13 = load i8, i8* %12, align 1, !dbg !4071, !range !3326
  %14 = icmp eq i8 %13, 0, !dbg !4071
  br i1 %14, label %15, label %24, !dbg !4072

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !4073
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !4075
  %18 = load i8, i8* %17, align 4, !dbg !4075, !range !3326
  %19 = icmp eq i8 %18, 1, !dbg !4076
  br i1 %19, label %20, label %24, !dbg !4077

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !4078
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !4079
  store i8 0, i8* %22, align 4, !dbg !4080
  %23 = add i32 %8, -1, !dbg !4081
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4081
  br label %24, !dbg !4082

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !4056
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4083
  ret i32 %25, !dbg !4083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !4084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4088, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.value(metadata i32 %1, metadata !4089, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !4090, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.value(metadata i8* %3, metadata !4091, metadata !DIExpression()), !dbg !4095
  %5 = and i32 %0, -559087616, !dbg !4096
  %6 = icmp ne i32 %5, -559087616, !dbg !4098
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %0, metadata !4094, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4095
  br i1 %8, label %44, label %9, !dbg !4099

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %10, metadata !4094, metadata !DIExpression()), !dbg !4095
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !4101
  %12 = load i8, i8* %11, align 1, !dbg !4101, !range !3326
  %13 = icmp eq i8 %12, 0, !dbg !4101
  br i1 %13, label %14, label %44, !dbg !4103

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !4104
  %16 = load i8, i8* %15, align 4, !dbg !4104, !range !3326
  %17 = icmp eq i8 %16, 1, !dbg !4106
  br i1 %17, label %18, label %44, !dbg !4107

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !4108
  br i1 %19, label %44, label %20, !dbg !4110

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %21, metadata !4093, metadata !DIExpression()), !dbg !4095
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4112
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !4113, !range !3326
  %23 = icmp eq i8 %22, 0, !dbg !4115
  br i1 %23, label %24, label %27, !dbg !4116

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !4117
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !4119
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !4120
  br label %27, !dbg !4121

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !4122
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4123, !range !3326
  %30 = icmp eq i8 %29, 0, !dbg !4125
  br i1 %30, label %31, label %34, !dbg !4126

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4127
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %33, metadata !4092, metadata !DIExpression()), !dbg !4095
  br label %34, !dbg !4130

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !4131
  call void @llvm.dbg.value(metadata i32 %35, metadata !4092, metadata !DIExpression()), !dbg !4095
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4132
  %37 = add i32 %36, %35, !dbg !4132
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4132
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4133
  %39 = add i32 %38, 1, !dbg !4133
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4133
  store i8 1, i8* %11, align 1, !dbg !4134
  %40 = add i32 %37, %1, !dbg !4135
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !4136
  store i32 %40, i32* %41, align 4, !dbg !4137
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !4138
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !4139
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !4140
  store i8* %3, i8** %43, align 4, !dbg !4141
  tail call void @gpt_sw_start_timer() #20, !dbg !4142
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4143
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !4144
  br label %44, !dbg !4145

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !4095
  ret i32 %45, !dbg !4146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !4147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4149, metadata !DIExpression()), !dbg !4153
  %2 = and i32 %0, -559087616, !dbg !4154
  %3 = icmp eq i32 %2, -559087616, !dbg !4156
  br i1 %3, label %4, label %31, !dbg !4157

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !4158
  call void @llvm.dbg.value(metadata i32 %5, metadata !4152, metadata !DIExpression()), !dbg !4153
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !4159
  %7 = load i8, i8* %6, align 1, !dbg !4159, !range !3326
  %8 = icmp eq i8 %7, 1, !dbg !4161
  br i1 %8, label %9, label %31, !dbg !4162

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !4163
  %11 = load i8, i8* %10, align 4, !dbg !4163, !range !3326
  %12 = icmp eq i8 %11, 1, !dbg !4165
  br i1 %12, label %13, label %31, !dbg !4166

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %14, metadata !4151, metadata !DIExpression()), !dbg !4153
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4168
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !4169
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4170
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4171, !range !3326
  %17 = icmp eq i8 %16, 0, !dbg !4173
  br i1 %17, label %18, label %21, !dbg !4174

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4175
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %20, metadata !4150, metadata !DIExpression()), !dbg !4153
  br label %21, !dbg !4178

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !4179
  call void @llvm.dbg.value(metadata i32 %22, metadata !4150, metadata !DIExpression()), !dbg !4153
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4180
  %24 = add i32 %23, %22, !dbg !4180
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4180
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4181
  %26 = add i32 %25, -1, !dbg !4181
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4181
  store i8 0, i8* %6, align 1, !dbg !4182
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4183
  %28 = icmp eq i32 %27, 0, !dbg !4185
  br i1 %28, label %30, label %29, !dbg !4186

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !4187
  br label %30, !dbg !4189

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4190
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !4191
  br label %31, !dbg !4192

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !4153
  ret i32 %32, !dbg !4193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !4194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4198, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i32* %1, metadata !4199, metadata !DIExpression()), !dbg !4203
  %3 = and i32 %0, -559087616, !dbg !4204
  %4 = icmp eq i32 %3, -559087616, !dbg !4206
  br i1 %4, label %5, label %20, !dbg !4207

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %6, metadata !4202, metadata !DIExpression()), !dbg !4203
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !4209
  %8 = load i8, i8* %7, align 4, !dbg !4209, !range !3326
  %9 = icmp eq i8 %8, 1, !dbg !4211
  br i1 %9, label %10, label %20, !dbg !4212

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %11, metadata !4201, metadata !DIExpression()), !dbg !4203
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4214
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4215
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !4216
  %15 = load volatile i32, i32* %14, align 4, !dbg !4216
  %16 = add i32 %15, %12, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %16, metadata !4200, metadata !DIExpression()), !dbg !4203
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !4218
  %18 = load i32, i32* %17, align 4, !dbg !4218
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !4220
  store i32 %19, i32* %1, align 4, !dbg !4221
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4222
  br label %20, !dbg !4223

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !4203
  ret i32 %21, !dbg !4224
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !4225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4229, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %1, metadata !4230, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %2, metadata !4231, metadata !DIExpression()), !dbg !4236
  %4 = and i32 %0, 65535, !dbg !4237
  %5 = mul i32 %4, %1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %5, metadata !4232, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4236
  %6 = lshr i32 %0, 16, !dbg !4239
  %7 = mul i32 %6, %1, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %7, metadata !4232, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4236
  %8 = and i32 %5, 65535, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %8, metadata !4234, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4236
  %9 = lshr i32 %5, 16, !dbg !4242
  %10 = add i32 %9, %7, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %10, metadata !4234, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4236
  %11 = udiv i32 %10, %2, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %11, metadata !4235, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4236
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !4245
  %15 = or i32 %14, %8, !dbg !4246
  %16 = udiv i32 %15, %2, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %16, metadata !4235, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4236
  %17 = shl i32 %11, 16, !dbg !4248
  %18 = add i32 %16, %17, !dbg !4249
  ret i32 %18, !dbg !4250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !4251 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4255, metadata !DIExpression()), !dbg !4256
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !4257
  %3 = load volatile i32, i32* %2, align 4, !dbg !4257
  ret i32 %3, !dbg !4258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !4259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4263, metadata !DIExpression()), !dbg !4264
  %2 = shl i32 %0, 5, !dbg !4265
  %3 = mul i32 %0, 7, !dbg !4266
  %4 = udiv i32 %3, 10, !dbg !4267
  %5 = add i32 %4, %2, !dbg !4268
  %6 = mul i32 %0, 6, !dbg !4269
  %7 = udiv i32 %6, 100, !dbg !4270
  %8 = add i32 %5, %7, !dbg !4271
  %9 = shl i32 %0, 3, !dbg !4272
  %10 = udiv i32 %9, 1000, !dbg !4273
  %11 = add i32 %8, %10, !dbg !4274
  ret i32 %11, !dbg !4275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !342 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !4276
  br i1 %1, label %10, label %2, !dbg !4278

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !4279
  br i1 %3, label %4, label %6, !dbg !4282

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !4283
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !4285
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !4286

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !4288
  br label %8, !dbg !4288

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !4288
  br label %10, !dbg !4289

10:                                               ; preds = %8, %0
  ret void, !dbg !4289
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !4290 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !4291
  br i1 %1, label %4, label %2, !dbg !4293

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !4294
  br label %4, !dbg !4296

4:                                                ; preds = %2, %0
  ret void, !dbg !4297
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !4298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4300, metadata !DIExpression()), !dbg !4301
  tail call void @gpt_get_lfosc_clock() #21, !dbg !4302
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !4303
  br i1 %2, label %3, label %6, !dbg !4305

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !4306
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !4308
  br label %6, !dbg !4309

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !4310
  ret i32 %7, !dbg !4311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !4312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4314, metadata !DIExpression()), !dbg !4315
  tail call void @gpt_get_lfosc_clock() #21, !dbg !4316
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !4317
  br i1 %2, label %3, label %6, !dbg !4319

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !4320
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !4322
  br label %6, !dbg !4323

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !4324
  ret i32 %7, !dbg !4325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !4326 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4330, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 %1, metadata !4331, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 %2, metadata !4332, metadata !DIExpression()), !dbg !4333
  tail call void @gpt_open_clock_source() #21, !dbg !4334
  %4 = or i32 %2, %1, !dbg !4335
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !4336
  store volatile i32 %4, i32* %5, align 4, !dbg !4337
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !4338
  store volatile i32 49, i32* %6, align 4, !dbg !4339
  ret void, !dbg !4340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !4341 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4345, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i32 %1, metadata !4346, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i32 0, metadata !4347, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i32 0, metadata !4348, metadata !DIExpression()), !dbg !4349
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %3, metadata !4348, metadata !DIExpression()), !dbg !4349
  %4 = add i32 %1, 1, !dbg !4351
  %5 = add i32 %4, %3, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %5, metadata !4347, metadata !DIExpression()), !dbg !4349
  %6 = icmp ugt i32 %5, %3, !dbg !4353
  br i1 %6, label %7, label %10, !dbg !4355

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4356
  %9 = icmp ult i32 %8, %5, !dbg !4358
  br i1 %9, label %7, label %16, !dbg !4359, !llvm.loop !4360

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4362
  %12 = icmp ult i32 %11, %3, !dbg !4364
  br i1 %12, label %13, label %10, !dbg !4365, !llvm.loop !4366

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4368
  %15 = icmp ult i32 %14, %5, !dbg !4369
  br i1 %15, label %13, label %16, !dbg !4370, !llvm.loop !4371

16:                                               ; preds = %13, %7
  ret void, !dbg !4373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !4374 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4378, metadata !DIExpression()), !dbg !4379
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4380
  store volatile i32 0, i32* %2, align 4, !dbg !4381
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !4382
  store volatile i32 0, i32* %3, align 4, !dbg !4383
  %4 = load volatile i32, i32* %3, align 4, !dbg !4384
  %5 = or i32 %4, 2, !dbg !4384
  store volatile i32 %5, i32* %3, align 4, !dbg !4384
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !4385

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !4386
  %9 = icmp eq i32 %8, 0, !dbg !4385
  br i1 %9, label %10, label %7, !dbg !4385, !llvm.loop !4387

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !4389
  store volatile i32 16, i32* %11, align 4, !dbg !4390
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !4391
  store volatile i32 1, i32* %12, align 4, !dbg !4392
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !4393
  store volatile i32 -1, i32* %13, align 4, !dbg !4394
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !4395
  br i1 %14, label %15, label %16, !dbg !4397

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !4398
  br label %16, !dbg !4400

16:                                               ; preds = %15, %10
  ret void, !dbg !4401
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !4402 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4404, metadata !DIExpression()), !dbg !4406
  %3 = bitcast i32* %2 to i8*, !dbg !4407
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4407
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4405, metadata !DIExpression()), !dbg !4408
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4409
  %5 = load volatile i32, i32* %4, align 4, !dbg !4409
  store volatile i32 %5, i32* %2, align 4, !dbg !4410
  %6 = load volatile i32, i32* %4, align 4, !dbg !4411
  %7 = and i32 %6, -2, !dbg !4411
  store volatile i32 %7, i32* %4, align 4, !dbg !4411
  %8 = load volatile i32, i32* %2, align 4, !dbg !4412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4413
  ret i32 %8, !dbg !4414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4415 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4419, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %1, metadata !4420, metadata !DIExpression()), !dbg !4421
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4422
  store volatile i32 %1, i32* %3, align 4, !dbg !4423
  ret void, !dbg !4424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !4425 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4432
  %5 = bitcast i32* %2 to i8*, !dbg !4433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4433
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4429, metadata !DIExpression()), !dbg !4434
  %6 = bitcast i32* %3 to i8*, !dbg !4435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4430, metadata !DIExpression()), !dbg !4436
  %7 = bitcast i32* %4 to i8*, !dbg !4437
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !4437
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4431, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 0, metadata !4428, metadata !DIExpression()), !dbg !4432
  br label %8, !dbg !4439

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4428, metadata !DIExpression()), !dbg !4432
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !4441
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4441
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !4444
  %13 = load volatile i32, i32* %12, align 4, !dbg !4444
  store volatile i32 %13, i32* %3, align 4, !dbg !4445
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !4446
  %15 = load volatile i32, i32* %14, align 4, !dbg !4446
  store volatile i32 %15, i32* %4, align 4, !dbg !4447
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !4448
  store volatile i32 %16, i32* %2, align 4, !dbg !4449
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4450
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !4451
  store volatile i32 1, i32* %18, align 4, !dbg !4452
  %19 = load volatile i32, i32* %3, align 4, !dbg !4453
  %20 = and i32 %19, 1, !dbg !4455
  %21 = icmp eq i32 %20, 0, !dbg !4455
  br i1 %21, label %33, label %22, !dbg !4456

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !4457
  %24 = and i32 %23, 1, !dbg !4458
  %25 = icmp eq i32 %24, 0, !dbg !4458
  br i1 %25, label %33, label %26, !dbg !4459

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !4460
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4460
  %29 = icmp eq void (i8*)* %28, null, !dbg !4463
  br i1 %29, label %33, label %30, !dbg !4464

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !4465
  %32 = load i8*, i8** %31, align 4, !dbg !4465
  tail call void %28(i8* noundef %32) #20, !dbg !4467
  br label %33, !dbg !4468

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4469
  %35 = load volatile i32, i32* %2, align 4, !dbg !4470
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !4471
  %36 = add nuw nsw i32 %9, 1, !dbg !4472
  call void @llvm.dbg.value(metadata i32 %36, metadata !4428, metadata !DIExpression()), !dbg !4432
  %37 = icmp eq i32 %36, 6, !dbg !4473
  br i1 %37, label %38, label %8, !dbg !4439, !llvm.loop !4474

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !4476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !4476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4476
  ret void, !dbg !4476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !4477 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !4478
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !4479
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !4480
  ret void, !dbg !4481
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !4482 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4484, metadata !DIExpression()), !dbg !4489
  %3 = bitcast i32* %2 to i8*, !dbg !4490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4490
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4485, metadata !DIExpression()), !dbg !4491
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %4, metadata !4486, metadata !DIExpression()), !dbg !4489
  %5 = lshr i32 %4, 15, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %5, metadata !4487, metadata !DIExpression()), !dbg !4489
  %6 = and i32 %4, 32767, !dbg !4494
  %7 = mul nuw nsw i32 %6, 1000, !dbg !4495
  %8 = add nuw nsw i32 %7, 16384, !dbg !4496
  %9 = lshr i32 %8, 15, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %9, metadata !4488, metadata !DIExpression()), !dbg !4489
  %10 = mul nuw nsw i32 %5, 1000, !dbg !4498
  %11 = add nuw nsw i32 %9, %10, !dbg !4499
  store volatile i32 %11, i32* %2, align 4, !dbg !4500
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4501
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !4502
  %14 = load volatile i32, i32* %13, align 4, !dbg !4503
  %15 = or i32 %14, 2, !dbg !4503
  store volatile i32 %15, i32* %13, align 4, !dbg !4503
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !4504

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !4505
  %20 = icmp eq i32 %19, 0, !dbg !4504
  br i1 %20, label %21, label %18, !dbg !4504, !llvm.loop !4506

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !4508
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4509
  ret i32 %22, !dbg !4510
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !4511 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4515, metadata !DIExpression()), !dbg !4516
  br label %1, !dbg !4517

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4515, metadata !DIExpression()), !dbg !4516
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !4519
  %4 = load i8, i8* %3, align 4, !dbg !4519, !range !3326
  %5 = icmp eq i8 %4, 1, !dbg !4523
  br i1 %5, label %6, label %9, !dbg !4524

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !4525
  call void @llvm.dbg.value(metadata i32 %7, metadata !4515, metadata !DIExpression()), !dbg !4516
  %8 = icmp eq i32 %7, 32, !dbg !4526
  br i1 %8, label %9, label %1, !dbg !4517, !llvm.loop !4527

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !4516
  ret i32 %10, !dbg !4529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4530 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4534
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4534
  %4 = bitcast i32* %2 to i8*, !dbg !4534
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4534
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4535, !range !3326
  %6 = icmp eq i8 %5, 0, !dbg !4535
  br i1 %6, label %7, label %11, !dbg !4537

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4532, metadata !DIExpression(DW_OP_deref)), !dbg !4538
  call void @llvm.dbg.value(metadata i32* %2, metadata !4533, metadata !DIExpression(DW_OP_deref)), !dbg !4538
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !4539
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4540
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4541
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4542
  %9 = load i32, i32* %1, align 4, !dbg !4543
  call void @llvm.dbg.value(metadata i32 %9, metadata !4532, metadata !DIExpression()), !dbg !4538
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !4544
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4545
  br label %11, !dbg !4546

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4546
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4546
  ret void, !dbg !4546
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !4547 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4551, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32* %1, metadata !4552, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 -1, metadata !4554, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4553, metadata !DIExpression()), !dbg !4556
  br label %3, !dbg !4557

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4553, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %5, metadata !4554, metadata !DIExpression()), !dbg !4556
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4559
  %7 = load i8, i8* %6, align 1, !dbg !4559, !range !3326
  %8 = icmp eq i8 %7, 0, !dbg !4559
  br i1 %8, label %13, label %9, !dbg !4563

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %10, metadata !4555, metadata !DIExpression()), !dbg !4556
  %11 = icmp ult i32 %10, %5, !dbg !4566
  br i1 %11, label %12, label %13, !dbg !4568

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4554, metadata !DIExpression()), !dbg !4556
  store i32 %4, i32* %1, align 4, !dbg !4569
  br label %13, !dbg !4571

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %14, metadata !4554, metadata !DIExpression()), !dbg !4556
  %15 = add nuw nsw i32 %4, 1, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %15, metadata !4553, metadata !DIExpression()), !dbg !4556
  %16 = icmp eq i32 %15, 32, !dbg !4573
  br i1 %16, label %17, label %3, !dbg !4557, !llvm.loop !4574

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4576
  ret void, !dbg !4577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4580, metadata !DIExpression()), !dbg !4584
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4585
  %3 = load i32, i32* %2, align 4, !dbg !4585
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4585
  %5 = sub i32 %3, %4, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %5, metadata !4581, metadata !DIExpression()), !dbg !4584
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4586
  %7 = sub i32 %6, %4, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %7, metadata !4582, metadata !DIExpression()), !dbg !4584
  %8 = icmp ugt i32 %5, %7, !dbg !4587
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %10, metadata !4583, metadata !DIExpression()), !dbg !4584
  ret i32 %10, !dbg !4590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4591 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4593, metadata !DIExpression()), !dbg !4597
  %4 = bitcast i32* %2 to i8*, !dbg !4598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4598
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4595, metadata !DIExpression()), !dbg !4599
  %5 = bitcast i32* %3 to i8*, !dbg !4600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4600
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4596, metadata !DIExpression()), !dbg !4601
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4602
  %7 = icmp eq i32 %6, 0, !dbg !4604
  br i1 %7, label %38, label %8, !dbg !4605

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4606
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4608
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4609
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4610
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4611
  store volatile i32 %11, i32* %2, align 4, !dbg !4612
  %12 = load volatile i32, i32* %2, align 4, !dbg !4613
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4614
  %14 = add i32 %13, %12, !dbg !4614
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4614
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4615
  call void @llvm.dbg.value(metadata i32 0, metadata !4594, metadata !DIExpression()), !dbg !4597
  br label %15, !dbg !4616

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4594, metadata !DIExpression()), !dbg !4597
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4618
  %18 = load i8, i8* %17, align 1, !dbg !4618, !range !3326
  %19 = icmp eq i8 %18, 0, !dbg !4618
  br i1 %19, label %31, label %20, !dbg !4622

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4623
  store volatile i32 %21, i32* %3, align 4, !dbg !4625
  %22 = load volatile i32, i32* %3, align 4, !dbg !4626
  %23 = icmp eq i32 %22, 0, !dbg !4628
  br i1 %23, label %24, label %31, !dbg !4629

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4630
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4632
  %26 = add i32 %25, -1, !dbg !4632
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4632
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4633
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4633
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4634
  %30 = load i8*, i8** %29, align 4, !dbg !4634
  tail call void %28(i8* noundef %30) #20, !dbg !4635
  br label %31, !dbg !4636

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %32, metadata !4594, metadata !DIExpression()), !dbg !4597
  %33 = icmp eq i32 %32, 32, !dbg !4638
  br i1 %33, label %34, label %15, !dbg !4616, !llvm.loop !4639

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4641
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4642
  %36 = icmp eq i32 %35, 0, !dbg !4644
  br i1 %36, label %38, label %37, !dbg !4645

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4646
  br label %38, !dbg !4648

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4649
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4649
  ret void, !dbg !4649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4655, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4657, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 0, metadata !4656, metadata !DIExpression()), !dbg !4658
  br label %5, !dbg !4660

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %3, metadata !4656, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i32 %6, metadata !4656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4658
  %4 = icmp eq i32 %3, 5, !dbg !4664
  br i1 %4, label %10, label %5, !dbg !4660, !llvm.loop !4665

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4656, metadata !DIExpression()), !dbg !4658
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4667
  %8 = load i32, i32* %7, align 4, !dbg !4667
  %9 = icmp eq i32 %8, %0, !dbg !4670
  call void @llvm.dbg.value(metadata i32 %6, metadata !4656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4658
  br i1 %9, label %10, label %2, !dbg !4671

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4658
  ret i32 %11, !dbg !4672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4678, metadata !DIExpression()), !dbg !4679
  ret i32 0, !dbg !4680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4683, metadata !DIExpression()), !dbg !4684
  ret i32 0, !dbg !4685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4690, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.value(metadata i32 %1, metadata !4691, metadata !DIExpression()), !dbg !4694
  %3 = icmp ugt i32 %0, 48, !dbg !4695
  br i1 %3, label %13, label %4, !dbg !4697

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4698
  call void @llvm.dbg.value(metadata i32 %5, metadata !4692, metadata !DIExpression()), !dbg !4694
  %6 = and i32 %0, 31, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %6, metadata !4693, metadata !DIExpression()), !dbg !4694
  %7 = icmp eq i32 %1, 0, !dbg !4700
  %8 = shl nuw i32 1, %6, !dbg !4702
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4702
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4703
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4703
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4703
  store volatile i32 %8, i32* %12, align 4, !dbg !4702
  br label %13, !dbg !4704

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4694
  ret i32 %14, !dbg !4704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4710, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32* %1, metadata !4711, metadata !DIExpression()), !dbg !4715
  %3 = icmp ugt i32 %0, 48, !dbg !4716
  br i1 %3, label %15, label %4, !dbg !4718

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4719
  br i1 %5, label %15, label %6, !dbg !4721

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %7, metadata !4712, metadata !DIExpression()), !dbg !4715
  %8 = and i32 %0, 31, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %8, metadata !4713, metadata !DIExpression()), !dbg !4715
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4724
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4725
  %11 = load volatile i32, i32* %10, align 4, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %11, metadata !4714, metadata !DIExpression()), !dbg !4715
  %12 = shl nuw i32 1, %8, !dbg !4726
  %13 = and i32 %11, %12, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %13, metadata !4714, metadata !DIExpression()), !dbg !4715
  %14 = lshr i32 %13, %8, !dbg !4728
  store i32 %14, i32* %1, align 4, !dbg !4729
  br label %15, !dbg !4730

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4715
  ret i32 %16, !dbg !4731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4737, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i8 %1, metadata !4738, metadata !DIExpression()), !dbg !4742
  %3 = icmp ugt i32 %0, 48, !dbg !4743
  br i1 %3, label %18, label %4, !dbg !4745

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4746
  br i1 %5, label %18, label %6, !dbg !4748

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4749
  %8 = lshr i32 %0, 3, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %8, metadata !4739, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.value(metadata i32 %0, metadata !4740, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4742
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4751
  call void @llvm.dbg.value(metadata i32 %9, metadata !4741, metadata !DIExpression()), !dbg !4742
  %10 = shl nuw nsw i32 %0, 2, !dbg !4752
  %11 = and i32 %10, 28, !dbg !4752
  %12 = shl nuw i32 15, %11, !dbg !4753
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4754
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4755
  store volatile i32 %12, i32* %14, align 4, !dbg !4756
  %15 = shl nuw i32 %7, %11, !dbg !4757
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4758
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4759
  store volatile i32 %15, i32* %17, align 4, !dbg !4760
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4761
  br label %18, !dbg !4762

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4742
  ret i32 %19, !dbg !4763
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4769, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32* %1, metadata !4770, metadata !DIExpression()), !dbg !4774
  %3 = icmp ugt i32 %0, 48, !dbg !4775
  br i1 %3, label %15, label %4, !dbg !4777

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4778
  br i1 %5, label %15, label %6, !dbg !4780

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %7, metadata !4771, metadata !DIExpression()), !dbg !4774
  %8 = and i32 %0, 31, !dbg !4782
  call void @llvm.dbg.value(metadata i32 %8, metadata !4772, metadata !DIExpression()), !dbg !4774
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4783
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4784
  %11 = load volatile i32, i32* %10, align 4, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %11, metadata !4773, metadata !DIExpression()), !dbg !4774
  %12 = shl nuw i32 1, %8, !dbg !4785
  %13 = and i32 %11, %12, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %13, metadata !4773, metadata !DIExpression()), !dbg !4774
  %14 = lshr i32 %13, %8, !dbg !4787
  store i32 %14, i32* %1, align 4, !dbg !4788
  br label %15, !dbg !4789

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4774
  ret i32 %16, !dbg !4790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4795, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i32 %1, metadata !4796, metadata !DIExpression()), !dbg !4799
  %3 = icmp ugt i32 %0, 48, !dbg !4800
  br i1 %3, label %13, label %4, !dbg !4802

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %5, metadata !4797, metadata !DIExpression()), !dbg !4799
  %6 = and i32 %0, 31, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %6, metadata !4798, metadata !DIExpression()), !dbg !4799
  %7 = icmp eq i32 %1, 0, !dbg !4805
  %8 = shl nuw i32 1, %6, !dbg !4807
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4807
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4808
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4808
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4808
  store volatile i32 %8, i32* %12, align 4, !dbg !4807
  br label %13, !dbg !4809

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4799
  ret i32 %14, !dbg !4809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4812, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.value(metadata i32* %1, metadata !4813, metadata !DIExpression()), !dbg !4817
  %3 = icmp ugt i32 %0, 48, !dbg !4818
  br i1 %3, label %15, label %4, !dbg !4820

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4821
  br i1 %5, label %15, label %6, !dbg !4823

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %7, metadata !4814, metadata !DIExpression()), !dbg !4817
  %8 = and i32 %0, 31, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %8, metadata !4815, metadata !DIExpression()), !dbg !4817
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4826
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4827
  %11 = load volatile i32, i32* %10, align 4, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %11, metadata !4816, metadata !DIExpression()), !dbg !4817
  %12 = shl nuw i32 1, %8, !dbg !4828
  %13 = and i32 %11, %12, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %13, metadata !4816, metadata !DIExpression()), !dbg !4817
  %14 = lshr i32 %13, %8, !dbg !4830
  store i32 %14, i32* %1, align 4, !dbg !4831
  br label %15, !dbg !4832

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4817
  ret i32 %16, !dbg !4833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4836, metadata !DIExpression()), !dbg !4840
  %2 = icmp ugt i32 %0, 48, !dbg !4841
  br i1 %2, label %16, label %3, !dbg !4843

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %4, metadata !4837, metadata !DIExpression()), !dbg !4840
  %5 = and i32 %0, 31, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %5, metadata !4838, metadata !DIExpression()), !dbg !4840
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4846
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4847
  %8 = load volatile i32, i32* %7, align 4, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %8, metadata !4839, metadata !DIExpression()), !dbg !4840
  %9 = shl nuw i32 1, %5, !dbg !4848
  %10 = and i32 %8, %9, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %10, metadata !4839, metadata !DIExpression()), !dbg !4840
  %11 = lshr i32 %10, %5, !dbg !4850
  %12 = icmp eq i32 %11, 0, !dbg !4850
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4852
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4852
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4852
  store volatile i32 %9, i32* %15, align 4, !dbg !4853
  br label %16, !dbg !4854

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4840
  ret i32 %17, !dbg !4854
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4857, metadata !DIExpression()), !dbg !4860
  %2 = icmp ugt i32 %0, 48, !dbg !4861
  br i1 %2, label %9, label %3, !dbg !4863

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %4, metadata !4858, metadata !DIExpression()), !dbg !4860
  %5 = and i32 %0, 31, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %5, metadata !4859, metadata !DIExpression()), !dbg !4860
  %6 = shl nuw i32 1, %5, !dbg !4866
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4867
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4868
  store volatile i32 %6, i32* %8, align 4, !dbg !4869
  br label %9, !dbg !4870

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4860
  ret i32 %10, !dbg !4871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4874, metadata !DIExpression()), !dbg !4877
  %2 = icmp ugt i32 %0, 48, !dbg !4878
  br i1 %2, label %9, label %3, !dbg !4880

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %4, metadata !4875, metadata !DIExpression()), !dbg !4877
  %5 = and i32 %0, 31, !dbg !4882
  call void @llvm.dbg.value(metadata i32 %5, metadata !4876, metadata !DIExpression()), !dbg !4877
  %6 = shl nuw i32 1, %5, !dbg !4883
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4884
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4885
  store volatile i32 %6, i32* %8, align 4, !dbg !4886
  br label %9, !dbg !4887

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4877
  ret i32 %10, !dbg !4888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4891, metadata !DIExpression()), !dbg !4894
  %2 = icmp ugt i32 %0, 48, !dbg !4895
  br i1 %2, label %14, label %3, !dbg !4897

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4898
  %5 = icmp eq i32 %4, 0, !dbg !4898
  br i1 %5, label %14, label %6, !dbg !4899

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %7, metadata !4892, metadata !DIExpression()), !dbg !4894
  %8 = and i32 %0, 31, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %8, metadata !4893, metadata !DIExpression()), !dbg !4894
  %9 = shl nuw i32 1, %8, !dbg !4902
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4903
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4904
  store volatile i32 %9, i32* %11, align 4, !dbg !4905
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4906
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4907
  store volatile i32 %9, i32* %13, align 4, !dbg !4908
  br label %14, !dbg !4909

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4894
  ret i32 %15, !dbg !4910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4913, metadata !DIExpression()), !dbg !4916
  %2 = icmp ugt i32 %0, 48, !dbg !4917
  br i1 %2, label %14, label %3, !dbg !4919

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4920
  %5 = icmp eq i32 %4, 0, !dbg !4920
  br i1 %5, label %14, label %6, !dbg !4921

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %7, metadata !4914, metadata !DIExpression()), !dbg !4916
  %8 = and i32 %0, 31, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %8, metadata !4915, metadata !DIExpression()), !dbg !4916
  %9 = shl nuw i32 1, %8, !dbg !4924
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4925
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4926
  store volatile i32 %9, i32* %11, align 4, !dbg !4927
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4928
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4929
  store volatile i32 %9, i32* %13, align 4, !dbg !4930
  br label %14, !dbg !4931

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4916
  ret i32 %15, !dbg !4932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4935, metadata !DIExpression()), !dbg !4938
  %2 = icmp ugt i32 %0, 48, !dbg !4939
  br i1 %2, label %12, label %3, !dbg !4941

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4942
  %5 = icmp eq i32 %4, 0, !dbg !4942
  br i1 %5, label %12, label %6, !dbg !4943

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %7, metadata !4936, metadata !DIExpression()), !dbg !4938
  %8 = and i32 %0, 31, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %8, metadata !4937, metadata !DIExpression()), !dbg !4938
  %9 = shl nuw i32 1, %8, !dbg !4946
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4947
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4948
  store volatile i32 %9, i32* %11, align 4, !dbg !4949
  br label %12, !dbg !4950

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4938
  ret i32 %13, !dbg !4951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4958, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i32 %1, metadata !4959, metadata !DIExpression()), !dbg !4960
  %3 = icmp ugt i32 %0, 5, !dbg !4961
  br i1 %3, label %7, label %4, !dbg !4963

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4964
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4965
  store volatile i32 %1, i32* %6, align 4, !dbg !4966
  br label %7, !dbg !4967

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4960
  ret i32 %8, !dbg !4968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4973, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8 %1, metadata !4974, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8 %2, metadata !4975, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8 %3, metadata !4976, metadata !DIExpression()), !dbg !4979
  %5 = icmp ugt i32 %0, 48, !dbg !4980
  br i1 %5, label %30, label %6, !dbg !4982

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4983
  %8 = icmp eq i32 %7, 0, !dbg !4983
  br i1 %8, label %9, label %30, !dbg !4984

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %10, metadata !4977, metadata !DIExpression()), !dbg !4979
  %11 = and i32 %0, 31, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %11, metadata !4978, metadata !DIExpression()), !dbg !4979
  %12 = icmp eq i8 %1, 0, !dbg !4987
  %13 = shl nuw i32 1, %11, !dbg !4989
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4989
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4990
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4990
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4990
  store volatile i32 %13, i32* %17, align 4, !dbg !4989
  %18 = icmp eq i8 %2, 0, !dbg !4991
  %19 = shl nuw i32 1, %11, !dbg !4993
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4993
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4994
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4994
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4994
  store volatile i32 %19, i32* %23, align 4, !dbg !4993
  %24 = icmp eq i8 %3, 0, !dbg !4995
  %25 = shl nuw i32 1, %11, !dbg !4997
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4997
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4998
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4998
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4998
  store volatile i32 %25, i32* %29, align 4, !dbg !4997
  br label %30, !dbg !4999

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4979
  ret i32 %31, !dbg !4999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5002, metadata !DIExpression()), !dbg !5009
  %2 = icmp ugt i32 %0, 48, !dbg !5010
  br i1 %2, label %40, label %3, !dbg !5012

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %4, metadata !5003, metadata !DIExpression()), !dbg !5009
  %5 = and i32 %0, 31, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %5, metadata !5006, metadata !DIExpression()), !dbg !5009
  %6 = lshr i32 %0, 4, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %6, metadata !5004, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 %0, metadata !5007, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5009
  %7 = lshr i32 %0, 3, !dbg !5016
  call void @llvm.dbg.value(metadata i32 %7, metadata !5005, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 %0, metadata !5008, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5009
  %8 = shl nuw nsw i32 %0, 2, !dbg !5017
  %9 = and i32 %8, 28, !dbg !5017
  %10 = shl nuw i32 15, %9, !dbg !5018
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5019
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !5020
  store volatile i32 %10, i32* %12, align 4, !dbg !5021
  %13 = shl nuw i32 1, %5, !dbg !5022
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5023
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !5024
  store volatile i32 %13, i32* %15, align 4, !dbg !5025
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5026
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !5027
  store volatile i32 %13, i32* %17, align 4, !dbg !5028
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5029
  %19 = icmp eq i32 %18, 0, !dbg !5029
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5031
  br i1 %19, label %23, label %21, !dbg !5032

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !5033
  br label %29, !dbg !5035

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !5036
  store volatile i32 %13, i32* %24, align 4, !dbg !5038
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5039
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !5040
  store volatile i32 %13, i32* %26, align 4, !dbg !5041
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5042
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !5043
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !5031
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5044
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !5045
  store volatile i32 %13, i32* %32, align 4, !dbg !5046
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5047
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !5048
  store volatile i32 %13, i32* %34, align 4, !dbg !5049
  %35 = shl nuw nsw i32 %0, 1, !dbg !5050
  %36 = and i32 %35, 30, !dbg !5050
  %37 = shl nuw i32 3, %36, !dbg !5051
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5052
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !5053
  store volatile i32 %37, i32* %39, align 4, !dbg !5054
  br label %40, !dbg !5055

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !5009
  ret i32 %41, !dbg !5056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5059, metadata !DIExpression()), !dbg !5064
  %2 = icmp ugt i32 %0, 48, !dbg !5065
  br i1 %2, label %34, label %3, !dbg !5067

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5068
  call void @llvm.dbg.value(metadata i32 %4, metadata !5060, metadata !DIExpression()), !dbg !5064
  %5 = and i32 %0, 31, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %5, metadata !5062, metadata !DIExpression()), !dbg !5064
  %6 = lshr i32 %0, 3, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %6, metadata !5061, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i32 %0, metadata !5063, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5064
  %7 = shl nuw nsw i32 %0, 2, !dbg !5071
  %8 = and i32 %7, 28, !dbg !5071
  %9 = shl nuw i32 15, %8, !dbg !5072
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5073
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !5074
  store volatile i32 %9, i32* %11, align 4, !dbg !5075
  %12 = shl nuw i32 1, %5, !dbg !5076
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5077
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !5078
  store volatile i32 %12, i32* %14, align 4, !dbg !5079
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5080
  %16 = icmp eq i32 %15, 0, !dbg !5080
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5082
  br i1 %16, label %22, label %18, !dbg !5083

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !5084
  store volatile i32 %12, i32* %19, align 4, !dbg !5086
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5087
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !5088
  br label %28, !dbg !5089

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !5090
  store volatile i32 %12, i32* %23, align 4, !dbg !5092
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5093
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !5094
  store volatile i32 %12, i32* %25, align 4, !dbg !5095
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5096
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !5097
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !5082
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5098
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !5099
  store volatile i32 %12, i32* %31, align 4, !dbg !5100
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5101
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !5102
  store volatile i32 %12, i32* %33, align 4, !dbg !5103
  br label %34, !dbg !5104

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !5064
  ret i32 %35, !dbg !5105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5110, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %1, metadata !5111, metadata !DIExpression()), !dbg !5114
  %3 = icmp ugt i32 %0, 48, !dbg !5115
  br i1 %3, label %14, label %4, !dbg !5117

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !5118
  call void @llvm.dbg.value(metadata i32 %5, metadata !5112, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %0, metadata !5113, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5114
  %6 = shl nuw nsw i32 %0, 1, !dbg !5119
  %7 = and i32 %6, 30, !dbg !5119
  %8 = shl nuw i32 3, %7, !dbg !5120
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5121
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !5122
  store volatile i32 %8, i32* %10, align 4, !dbg !5123
  %11 = shl i32 %1, %7, !dbg !5124
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5125
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !5126
  store volatile i32 %11, i32* %13, align 4, !dbg !5127
  br label %14, !dbg !5128

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !5114
  ret i32 %15, !dbg !5129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5135, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i32* %1, metadata !5136, metadata !DIExpression()), !dbg !5140
  %3 = icmp ugt i32 %0, 48, !dbg !5141
  br i1 %3, label %18, label %4, !dbg !5143

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5144
  br i1 %5, label %18, label %6, !dbg !5146

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %7, metadata !5137, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i32 %0, metadata !5138, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5140
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5148
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !5149
  %10 = load volatile i32, i32* %9, align 4, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %10, metadata !5139, metadata !DIExpression()), !dbg !5140
  %11 = shl nuw nsw i32 %0, 1, !dbg !5150
  %12 = and i32 %11, 30, !dbg !5150
  %13 = shl nuw i32 3, %12, !dbg !5151
  %14 = and i32 %10, %13, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %14, metadata !5139, metadata !DIExpression()), !dbg !5140
  %15 = lshr i32 %14, %12, !dbg !5153
  call void @llvm.dbg.value(metadata i32 %15, metadata !5139, metadata !DIExpression()), !dbg !5140
  %16 = shl i32 %15, 2, !dbg !5154
  %17 = add i32 %16, 4, !dbg !5154
  store i32 %17, i32* %1, align 4, !dbg !5155
  br label %18, !dbg !5156

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5140
  ret i32 %19, !dbg !5157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5158 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5162, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i1 %1, metadata !5163, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5227
  %4 = bitcast i32* %3 to i8*, !dbg !5228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5228
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5229
  %6 = load volatile i32, i32* %5, align 4, !dbg !5229
  %7 = icmp eq i32 %6, 2, !dbg !5231
  br i1 %7, label %9, label %8, !dbg !5232

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5233
  unreachable, !dbg !5233

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5235
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !5235
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !5169, metadata !DIExpression()), !dbg !5227
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %12, metadata !5164, metadata !DIExpression()), !dbg !5227
  br i1 %1, label %13, label %14, !dbg !5237

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !5238
  br label %14, !dbg !5241

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !5166, metadata !DIExpression(DW_OP_deref)), !dbg !5227
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !5242
  call void @llvm.dbg.value(metadata i32 %15, metadata !5225, metadata !DIExpression()), !dbg !5227
  %16 = icmp eq i32 %15, 0, !dbg !5243
  br i1 %16, label %18, label %17, !dbg !5245

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5246
  unreachable, !dbg !5246

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %19, metadata !5166, metadata !DIExpression()), !dbg !5227
  %20 = icmp eq i32 %19, 0, !dbg !5250
  br i1 %20, label %43, label %21, !dbg !5251

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5252
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !5252
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !5167, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i8* undef, metadata !5168, metadata !DIExpression()), !dbg !5227
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !5253
  br i1 %24, label %25, label %26, !dbg !5255

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5256
  unreachable, !dbg !5256

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5258
  %28 = load i8*, i8** %27, align 4, !dbg !5258
  call void @llvm.dbg.value(metadata i8* %28, metadata !5168, metadata !DIExpression()), !dbg !5227
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !5259
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !5260
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !5261
  call void @llvm.dbg.value(metadata i32* %3, metadata !5166, metadata !DIExpression(DW_OP_deref)), !dbg !5227
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !5262
  call void @llvm.dbg.value(metadata i32 %31, metadata !5225, metadata !DIExpression()), !dbg !5227
  %32 = icmp eq i32 %31, 0, !dbg !5263
  br i1 %32, label %34, label %33, !dbg !5265

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5266
  unreachable, !dbg !5266

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !5268
  call void @llvm.dbg.value(metadata i32 %35, metadata !5166, metadata !DIExpression()), !dbg !5227
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5270
  %37 = load i32, i32* %36, align 4, !dbg !5270
  %38 = icmp ult i32 %35, %37, !dbg !5271
  br i1 %38, label %43, label %39, !dbg !5272

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !5273
  call void @llvm.dbg.value(metadata i32 %40, metadata !5225, metadata !DIExpression()), !dbg !5227
  %41 = icmp eq i32 %40, 0, !dbg !5275
  br i1 %41, label %43, label %42, !dbg !5277

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5278
  unreachable, !dbg !5278

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5280
  ret void, !dbg !5280
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5281 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5283, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i1 %1, metadata !5284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5292
  %4 = bitcast i32* %3 to i8*, !dbg !5293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5293
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5294
  %6 = load volatile i32, i32* %5, align 4, !dbg !5294
  %7 = icmp eq i32 %6, 2, !dbg !5296
  br i1 %7, label %9, label %8, !dbg !5297

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5298
  unreachable, !dbg !5298

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5300
  call void @llvm.dbg.value(metadata i32 %10, metadata !5285, metadata !DIExpression()), !dbg !5292
  br i1 %1, label %11, label %39, !dbg !5301

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5302
  %13 = load i8, i8* %12, align 1, !dbg !5302, !range !3326
  %14 = icmp eq i8 %13, 0, !dbg !5306
  br i1 %14, label %15, label %38, !dbg !5307

15:                                               ; preds = %11
  %16 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5308
  call void @llvm.dbg.value(metadata i32 %16, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i32* %3, metadata !5288, metadata !DIExpression(DW_OP_deref)), !dbg !5292
  %17 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %17, metadata !5286, metadata !DIExpression()), !dbg !5292
  %18 = icmp eq i32 %17, 0, !dbg !5311
  br i1 %18, label %20, label %19, !dbg !5313

19:                                               ; preds = %15
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 234, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5314
  unreachable, !dbg !5314

20:                                               ; preds = %15
  %21 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5316
  %22 = load i32, i32* %21, align 4, !dbg !5316
  %23 = load i32, i32* %3, align 4, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %23, metadata !5288, metadata !DIExpression()), !dbg !5292
  %24 = icmp eq i32 %22, %23, !dbg !5319
  br i1 %24, label %25, label %37, !dbg !5320

25:                                               ; preds = %20
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !5321
  %27 = load i8, i8* %26, align 1, !dbg !5321, !range !3326
  %28 = icmp eq i8 %27, 0, !dbg !5321
  br i1 %28, label %37, label %29, !dbg !5324

29:                                               ; preds = %25
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5325
  %31 = load i8, i8* %30, align 1, !dbg !5325
  %32 = call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %31) #20, !dbg !5328
  br i1 %32, label %33, label %36, !dbg !5329

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1, !dbg !5330
  %35 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %34) #20, !dbg !5332
  br label %36, !dbg !5333

36:                                               ; preds = %33, %29
  store i8 0, i8* %26, align 1, !dbg !5334
  br label %37, !dbg !5335

37:                                               ; preds = %25, %36, %20
  call void @restore_interrupt_mask(i32 noundef %16) #20, !dbg !5336
  br label %64, !dbg !5337

38:                                               ; preds = %11
  store i8 0, i8* %12, align 1, !dbg !5338
  br label %64

39:                                               ; preds = %9
  %40 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5340
  %41 = load void (i32, i8*)*, void (i32, i8*)** %40, align 4, !dbg !5340
  call void @llvm.dbg.value(metadata void (i32, i8*)* %41, metadata !5289, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8* undef, metadata !5290, metadata !DIExpression()), !dbg !5292
  %42 = icmp eq void (i32, i8*)* %41, null, !dbg !5342
  br i1 %42, label %43, label %44, !dbg !5344

43:                                               ; preds = %39
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5345
  unreachable, !dbg !5345

44:                                               ; preds = %39
  %45 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5347
  %46 = load i8*, i8** %45, align 4, !dbg !5347
  call void @llvm.dbg.value(metadata i8* %46, metadata !5290, metadata !DIExpression()), !dbg !5292
  %47 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !5348
  tail call void %41(i32 noundef 2, i8* noundef %46) #20, !dbg !5349
  %48 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !5350
  call void @llvm.dbg.value(metadata i32* %3, metadata !5288, metadata !DIExpression(DW_OP_deref)), !dbg !5292
  %49 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !5351
  call void @llvm.dbg.value(metadata i32 %49, metadata !5286, metadata !DIExpression()), !dbg !5292
  %50 = icmp eq i32 %49, 0, !dbg !5352
  br i1 %50, label %52, label %51, !dbg !5354

51:                                               ; preds = %44
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5355
  unreachable, !dbg !5355

52:                                               ; preds = %44
  %53 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5357
  %54 = load i32, i32* %53, align 4, !dbg !5357
  %55 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5358
  %56 = load i32, i32* %55, align 4, !dbg !5358
  %57 = sub i32 %54, %56, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %57, metadata !5287, metadata !DIExpression()), !dbg !5292
  %58 = load i32, i32* %3, align 4, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %58, metadata !5288, metadata !DIExpression()), !dbg !5292
  %59 = icmp ult i32 %58, %57, !dbg !5362
  br i1 %59, label %64, label %60, !dbg !5363

60:                                               ; preds = %52
  %61 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %61, metadata !5286, metadata !DIExpression()), !dbg !5292
  %62 = icmp eq i32 %61, 0, !dbg !5366
  br i1 %62, label %64, label %63, !dbg !5368

63:                                               ; preds = %60
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5369
  unreachable, !dbg !5369

64:                                               ; preds = %60, %52, %37, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5371
  ret void, !dbg !5371
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !5372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5376, metadata !DIExpression()), !dbg !5380
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5381
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5381
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5377, metadata !DIExpression()), !dbg !5380
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5382
  %5 = icmp eq i32 %4, 0, !dbg !5382
  br i1 %5, label %6, label %14, !dbg !5384

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !5385
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !5387
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5388
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5388
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !5378, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata i8* undef, metadata !5379, metadata !DIExpression()), !dbg !5380
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5389
  br i1 %9, label %10, label %11, !dbg !5391

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5392
  unreachable, !dbg !5392

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5394
  %13 = load i8*, i8** %12, align 4, !dbg !5394
  call void @llvm.dbg.value(metadata i8* %13, metadata !5379, metadata !DIExpression()), !dbg !5380
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !5395
  br label %14, !dbg !5396

14:                                               ; preds = %11, %1
  ret void, !dbg !5397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_backup_all_registers() local_unnamed_addr #0 !dbg !5398 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5400, metadata !DIExpression()), !dbg !5405
  br label %1, !dbg !5406

1:                                                ; preds = %0, %21
  %2 = phi i32 [ 0, %0 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5400, metadata !DIExpression()), !dbg !5405
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !5408
  %4 = load volatile i32, i32* %3, align 4, !dbg !5408
  %5 = icmp eq i32 %4, 0, !dbg !5412
  br i1 %5, label %21, label %6, !dbg !5413

6:                                                ; preds = %1
  %7 = load volatile i32, i32* %3, align 4, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %7, metadata !5401, metadata !DIExpression()), !dbg !5405
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !5416
  %9 = load i32, i32* %8, align 4, !dbg !5416
  call void @llvm.dbg.value(metadata i32 %9, metadata !5402, metadata !DIExpression()), !dbg !5405
  %10 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !5417
  %11 = load void (i32, i8*)*, void (i32, i8*)** %10, align 4, !dbg !5417
  call void @llvm.dbg.value(metadata void (i32, i8*)* %11, metadata !5403, metadata !DIExpression()), !dbg !5405
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !5418
  %13 = load i8*, i8** %12, align 4, !dbg !5418
  call void @llvm.dbg.value(metadata i8* %13, metadata !5404, metadata !DIExpression()), !dbg !5405
  %14 = tail call i32 @hal_uart_deinit(i32 noundef %2) #21, !dbg !5419
  store volatile i32 %7, i32* %3, align 4, !dbg !5420
  store i32 %9, i32* %8, align 4, !dbg !5421
  store void (i32, i8*)* %11, void (i32, i8*)** %10, align 4, !dbg !5422
  store i8* %13, i8** %12, align 4, !dbg !5423
  %15 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %2, !dbg !5424
  %16 = load i32, i32* %15, align 4, !dbg !5424
  %17 = tail call i32 @hal_nvic_get_pending_irq(i32 noundef %16) #20, !dbg !5425
  %18 = icmp ne i32 %17, 0, !dbg !5425
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !5426
  %20 = zext i1 %18 to i8, !dbg !5427
  store i8 %20, i8* %19, align 1, !dbg !5427
  br label %21, !dbg !5428

21:                                               ; preds = %1, %6
  %22 = add nuw nsw i32 %2, 1, !dbg !5429
  call void @llvm.dbg.value(metadata i32 %22, metadata !5400, metadata !DIExpression()), !dbg !5405
  %23 = icmp eq i32 %22, 4, !dbg !5430
  br i1 %23, label %24, label %1, !dbg !5406, !llvm.loop !5431

24:                                               ; preds = %21
  ret void, !dbg !5433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5439, metadata !DIExpression()), !dbg !5447
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5448
  br i1 %2, label %3, label %56, !dbg !5450

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %4, metadata !5443, metadata !DIExpression()), !dbg !5447
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5452
  %6 = load volatile i32, i32* %5, align 4, !dbg !5452
  %7 = icmp eq i32 %6, 0, !dbg !5454
  br i1 %7, label %54, label %8, !dbg !5455

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5456
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5456
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5440, metadata !DIExpression()), !dbg !5447
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5457
  %11 = load volatile i32, i32* %5, align 4, !dbg !5458
  %12 = icmp eq i32 %11, 2, !dbg !5460
  br i1 %12, label %13, label %43, !dbg !5461

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %14, metadata !5441, metadata !DIExpression()), !dbg !5447
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %15, metadata !5442, metadata !DIExpression()), !dbg !5447
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %16, metadata !5444, metadata !DIExpression()), !dbg !5447
  %17 = icmp eq i32 %16, 0, !dbg !5466
  br i1 %17, label %19, label %18, !dbg !5468

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5469
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5471
  unreachable, !dbg !5471

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %20, metadata !5444, metadata !DIExpression()), !dbg !5447
  %21 = icmp eq i32 %20, 0, !dbg !5473
  br i1 %21, label %23, label %22, !dbg !5475

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5476
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5478
  unreachable, !dbg !5478

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !5479
  call void @llvm.dbg.value(metadata i32 %24, metadata !5444, metadata !DIExpression()), !dbg !5447
  %25 = icmp eq i32 %24, 0, !dbg !5480
  br i1 %25, label %27, label %26, !dbg !5482

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5483
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5485
  unreachable, !dbg !5485

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !5486
  call void @llvm.dbg.value(metadata i32 %28, metadata !5444, metadata !DIExpression()), !dbg !5447
  %29 = icmp eq i32 %28, 0, !dbg !5487
  br i1 %29, label %31, label %30, !dbg !5489

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5490
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5492
  unreachable, !dbg !5492

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !5493
  call void @llvm.dbg.value(metadata i32 %32, metadata !5444, metadata !DIExpression()), !dbg !5447
  %33 = icmp eq i32 %32, 0, !dbg !5494
  br i1 %33, label %35, label %34, !dbg !5496

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5497
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5499
  unreachable, !dbg !5499

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %36, metadata !5444, metadata !DIExpression()), !dbg !5447
  %37 = icmp eq i32 %36, 0, !dbg !5501
  br i1 %37, label %39, label %38, !dbg !5503

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5504
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5506
  unreachable, !dbg !5506

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5507
  %41 = load i32, i32* %40, align 4, !dbg !5507
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5508
  br label %43, !dbg !5509

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5510
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5511
  %45 = load i32, i32* %44, align 4, !dbg !5511
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %46, metadata !5445, metadata !DIExpression()), !dbg !5447
  %47 = icmp eq i32 %46, 0, !dbg !5513
  br i1 %47, label %49, label %48, !dbg !5515

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5516
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5518
  unreachable, !dbg !5518

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5519
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5520
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5521
  store i8* null, i8** %51, align 4, !dbg !5522
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5523
  store i8 0, i8* %52, align 1, !dbg !5524
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5525
  store i32 0, i32* %53, align 4, !dbg !5526
  store volatile i32 0, i32* %5, align 4, !dbg !5527
  br label %54, !dbg !5528

54:                                               ; preds = %3, %49
  %55 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5447
  br label %56, !dbg !5529

56:                                               ; preds = %54, %1
  %57 = phi i32 [ -4, %1 ], [ %55, %54 ], !dbg !5447
  ret i32 %57, !dbg !5529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !5530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5534, metadata !DIExpression()), !dbg !5535
  %2 = icmp ult i32 %0, 4, !dbg !5536
  ret i1 %2, !dbg !5537
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_restore_all_registers() local_unnamed_addr #0 !dbg !5538 {
  store i1 true, i1* @g_uart_restore_init, align 1, !dbg !5545
  call void @llvm.dbg.value(metadata i32 0, metadata !5541, metadata !DIExpression()), !dbg !5546
  br label %1, !dbg !5547

1:                                                ; preds = %0, %51
  %2 = phi i32 [ 0, %0 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5541, metadata !DIExpression()), !dbg !5546
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !5549
  %4 = load volatile i32, i32* %3, align 4, !dbg !5549
  call void @llvm.dbg.value(metadata i32 %4, metadata !5543, metadata !DIExpression()), !dbg !5546
  %5 = icmp eq i32 %4, 0, !dbg !5552
  br i1 %5, label %9, label %6, !dbg !5554

6:                                                ; preds = %1
  store volatile i32 0, i32* %3, align 4, !dbg !5555
  %7 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, !dbg !5557
  %8 = tail call i32 @hal_uart_init(i32 noundef %2, %struct.hal_uart_config_t* noundef nonnull %7) #21, !dbg !5558
  br label %9, !dbg !5559

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !5560
  %11 = load i32, i32* %10, align 4, !dbg !5560
  switch i32 %11, label %30 [
    i32 1, label %12
    i32 2, label %28
  ], !dbg !5562

12:                                               ; preds = %9
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %2, !dbg !5563
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !5563
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !5542, metadata !DIExpression()), !dbg !5546
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 0, !dbg !5565
  %16 = load i8, i8* %15, align 1, !dbg !5565
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %14, i8 noundef zeroext %16) #20, !dbg !5566
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, i32 0, !dbg !5567
  %18 = load i32, i32* %17, align 4, !dbg !5567
  %19 = udiv i32 12000000, %18, !dbg !5568
  %20 = add nuw nsw i32 %19, 1, !dbg !5569
  call void @llvm.dbg.value(metadata i32 %20, metadata !5540, metadata !DIExpression()), !dbg !5546
  %21 = tail call i32 @hal_gpt_delay_us(i32 noundef %20) #20, !dbg !5570
  %22 = load i8, i8* %15, align 1, !dbg !5571
  %23 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 1, !dbg !5572
  %24 = load i8, i8* %23, align 1, !dbg !5572
  %25 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 2, !dbg !5573
  %26 = load i8, i8* %25, align 1, !dbg !5573
  %27 = tail call i32 @hal_uart_set_software_flowcontrol(i32 noundef %2, i8 noundef zeroext %22, i8 noundef zeroext %24, i8 noundef zeroext %26) #21, !dbg !5574
  br label %30, !dbg !5575

28:                                               ; preds = %9
  %29 = tail call i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %2) #21, !dbg !5576
  br label %30, !dbg !5579

30:                                               ; preds = %9, %28, %12
  %31 = icmp eq i32 %4, 2, !dbg !5580
  br i1 %31, label %32, label %40, !dbg !5582

32:                                               ; preds = %30
  %33 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %2, !dbg !5583
  %34 = tail call i32 @hal_uart_set_dma(i32 noundef %2, %struct.hal_uart_dma_config_t* noundef nonnull %33) #21, !dbg !5585
  %35 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !5586
  %36 = load void (i32, i8*)*, void (i32, i8*)** %35, align 4, !dbg !5586
  %37 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !5587
  %38 = load i8*, i8** %37, align 4, !dbg !5587
  %39 = tail call i32 @hal_uart_register_callback(i32 noundef %2, void (i32, i8*)* noundef %36, i8* noundef %38) #21, !dbg !5588
  br label %40, !dbg !5589

40:                                               ; preds = %32, %30
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %2, !dbg !5590
  %42 = load i8, i8* %41, align 1, !dbg !5590
  %43 = tail call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %42) #20, !dbg !5591
  call void @llvm.dbg.value(metadata i1 %43, metadata !5544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5546
  br i1 %43, label %44, label %51, !dbg !5592

44:                                               ; preds = %40
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !5594
  %46 = load i8, i8* %45, align 1, !dbg !5594, !range !3326
  %47 = icmp eq i8 %46, 0, !dbg !5594
  br i1 %47, label %51, label %48, !dbg !5595

48:                                               ; preds = %44
  %49 = load i8, i8* %41, align 1, !dbg !5596
  %50 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %49) #20, !dbg !5598
  br label %51, !dbg !5599

51:                                               ; preds = %40, %44, %48
  %52 = add nuw nsw i32 %2, 1, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %52, metadata !5541, metadata !DIExpression()), !dbg !5546
  %53 = icmp eq i32 %52, 4, !dbg !5601
  br i1 %53, label %54, label %1, !dbg !5547, !llvm.loop !5602

54:                                               ; preds = %51
  store i1 false, i1* @g_uart_restore_init, align 1, !dbg !5604
  ret void, !dbg !5605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5611, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5612, metadata !DIExpression()), !dbg !5618
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5619
  br i1 %3, label %4, label %59, !dbg !5621

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !5622
  br i1 %5, label %6, label %59, !dbg !5623

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5624
  call void @llvm.dbg.value(metadata i32 %7, metadata !5616, metadata !DIExpression()), !dbg !5618
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5625
  %9 = load volatile i32, i32* %8, align 4, !dbg !5625
  %10 = icmp eq i32 %9, 0, !dbg !5627
  br i1 %10, label %12, label %11, !dbg !5628

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5629
  br label %59, !dbg !5631

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_restore_init, align 1, !dbg !5632
  br i1 %13, label %19, label %14, !dbg !5634

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !5635
  %16 = load i8*, i8** %15, align 4, !dbg !5635
  %17 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %16) #20, !dbg !5637
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5638
  store i8 %17, i8* %18, align 1, !dbg !5639
  br label %19, !dbg !5640

19:                                               ; preds = %14, %12
  %20 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !5641
  br i1 %20, label %32, label %21, !dbg !5643

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %29, %21 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !5614, metadata !DIExpression()), !dbg !5618
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %22, !dbg !5644
  store volatile i32 0, i32* %23, align 4, !dbg !5649
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %22, !dbg !5650
  store i32 0, i32* %24, align 4, !dbg !5651
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %22, !dbg !5652
  store i8 0, i8* %25, align 1, !dbg !5653
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %22, !dbg !5654
  store i8 0, i8* %26, align 1, !dbg !5655
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 1, !dbg !5656
  store i8* null, i8** %27, align 4, !dbg !5657
  %28 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 0, !dbg !5658
  store void (i32, i8*)* null, void (i32, i8*)** %28, align 4, !dbg !5659
  %29 = add nuw nsw i32 %22, 1, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %29, metadata !5614, metadata !DIExpression()), !dbg !5618
  %30 = icmp eq i32 %29, 4, !dbg !5661
  br i1 %30, label %31, label %21, !dbg !5662, !llvm.loop !5663

31:                                               ; preds = %21
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !5665
  br label %32, !dbg !5666

32:                                               ; preds = %31, %19
  %33 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5667
  %34 = load i32, i32* %33, align 4, !dbg !5667
  %35 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !5668
  store i32 %34, i32* %35, align 4, !dbg !5669
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5670
  %37 = load i32, i32* %36, align 4, !dbg !5670
  %38 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !5671
  store i32 %37, i32* %38, align 4, !dbg !5672
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5673
  %40 = load i32, i32* %39, align 4, !dbg !5673
  %41 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !5674
  store i32 %40, i32* %41, align 4, !dbg !5675
  %42 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5676
  %43 = load i32, i32* %42, align 4, !dbg !5676
  %44 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !5677
  store i32 %43, i32* %44, align 4, !dbg !5678
  store volatile i32 1, i32* %8, align 4, !dbg !5679
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5680
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5681
  %46 = load i32, i32* %45, align 4, !dbg !5681
  %47 = tail call i32 @hal_clock_enable(i32 noundef %46) #20, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %47, metadata !5617, metadata !DIExpression()), !dbg !5618
  %48 = icmp eq i32 %47, 0, !dbg !5683
  br i1 %48, label %50, label %49, !dbg !5685

49:                                               ; preds = %32
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5686
  unreachable, !dbg !5686

50:                                               ; preds = %32
  %51 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5688
  %52 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %51, align 4, !dbg !5688
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %52, metadata !5613, metadata !DIExpression()), !dbg !5618
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %52) #20, !dbg !5689
  %53 = load i32, i32* %33, align 4, !dbg !5690
  %54 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %53, !dbg !5691
  %55 = load i32, i32* %54, align 4, !dbg !5691
  call void @llvm.dbg.value(metadata i32 %55, metadata !5615, metadata !DIExpression()), !dbg !5618
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %52, i32 noundef %55) #20, !dbg !5692
  %56 = load i32, i32* %36, align 4, !dbg !5693
  %57 = load i32, i32* %39, align 4, !dbg !5694
  %58 = load i32, i32* %42, align 4, !dbg !5695
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %52, i32 noundef %56, i32 noundef %57, i32 noundef %58) #20, !dbg !5696
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %52) #20, !dbg !5697
  tail call void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %52) #20, !dbg !5698
  br label %59, !dbg !5699

59:                                               ; preds = %2, %4, %50, %11
  %60 = phi i32 [ -3, %11 ], [ 0, %50 ], [ -4, %4 ], [ -4, %2 ], !dbg !5618
  ret i32 %60, !dbg !5700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5705, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata i8 %1, metadata !5706, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata i8 %2, metadata !5707, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata i8 %3, metadata !5708, metadata !DIExpression()), !dbg !5710
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5711
  br i1 %5, label %6, label %17, !dbg !5713

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5714
  %8 = load volatile i32, i32* %7, align 4, !dbg !5714
  %9 = icmp eq i32 %8, 0, !dbg !5716
  br i1 %9, label %17, label %10, !dbg !5717

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5718
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5718
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5709, metadata !DIExpression()), !dbg !5710
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5719
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5720
  store i32 1, i32* %13, align 4, !dbg !5721
  %14 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 0, !dbg !5722
  store i8 %1, i8* %14, align 1, !dbg !5723
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 1, !dbg !5724
  store i8 %2, i8* %15, align 1, !dbg !5725
  %16 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 2, !dbg !5726
  store i8 %3, i8* %16, align 1, !dbg !5727
  br label %17, !dbg !5728

17:                                               ; preds = %6, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5710
  ret i32 %18, !dbg !5729
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5732, metadata !DIExpression()), !dbg !5734
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5735
  br i1 %2, label %3, label %11, !dbg !5737

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5738
  %5 = load volatile i32, i32* %4, align 4, !dbg !5738
  %6 = icmp eq i32 %5, 0, !dbg !5740
  br i1 %6, label %11, label %7, !dbg !5741

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5742
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5742
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5733, metadata !DIExpression()), !dbg !5734
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5743
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5744
  store i32 2, i32* %10, align 4, !dbg !5745
  br label %11, !dbg !5746

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5734
  ret i32 %12, !dbg !5747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5748 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5754, metadata !DIExpression()), !dbg !5766
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5755, metadata !DIExpression()), !dbg !5766
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5767
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5767
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5757, metadata !DIExpression()), !dbg !5768
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5769
  br i1 %5, label %6, label %101, !dbg !5771

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5772
  %8 = load i8*, i8** %7, align 4, !dbg !5772
  %9 = icmp eq i8* %8, null, !dbg !5774
  br i1 %9, label %101, label %10, !dbg !5775

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5776
  %12 = load i8*, i8** %11, align 4, !dbg !5776
  %13 = icmp eq i8* %12, null, !dbg !5777
  br i1 %13, label %101, label %14, !dbg !5778

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5779
  %16 = load i32, i32* %15, align 4, !dbg !5779
  %17 = icmp ugt i32 %16, 131071, !dbg !5781
  br i1 %17, label %101, label %18, !dbg !5782

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5783
  %20 = load i32, i32* %19, align 4, !dbg !5783
  %21 = icmp ugt i32 %20, 131071, !dbg !5784
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5785
  br i1 %23, label %101, label %24, !dbg !5785

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5786
  %26 = load i32, i32* %25, align 4, !dbg !5786
  %27 = icmp ugt i32 %26, 131071, !dbg !5788
  br i1 %27, label %101, label %28, !dbg !5789

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5790
  %30 = load i32, i32* %29, align 4, !dbg !5790
  %31 = icmp ugt i32 %30, 131071, !dbg !5791
  br i1 %31, label %101, label %32, !dbg !5792

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5793
  %34 = load i32, i32* %33, align 4, !dbg !5793
  %35 = icmp ugt i32 %34, 131071, !dbg !5794
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5795
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5795
  br i1 %39, label %101, label %40, !dbg !5795

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5796
  %42 = load volatile i32, i32* %41, align 4, !dbg !5796
  %43 = icmp eq i32 %42, 1, !dbg !5798
  br i1 %43, label %44, label %101, !dbg !5799

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5800
  call void @llvm.dbg.value(metadata i32 %45, metadata !5763, metadata !DIExpression()), !dbg !5766
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %46, metadata !5764, metadata !DIExpression()), !dbg !5766
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %47, metadata !5765, metadata !DIExpression()), !dbg !5766
  %48 = icmp eq i32 %47, 0, !dbg !5803
  br i1 %48, label %50, label %49, !dbg !5805

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5806
  unreachable, !dbg !5806

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5808
  %52 = ptrtoint i8* %51 to i32, !dbg !5809
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5810
  store i32 %52, i32* %53, align 4, !dbg !5811
  %54 = load i32, i32* %15, align 4, !dbg !5812
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5813
  store i32 %54, i32* %55, align 4, !dbg !5814
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5815
  call void @llvm.dbg.value(metadata i32 %56, metadata !5765, metadata !DIExpression()), !dbg !5766
  %57 = icmp eq i32 %56, 0, !dbg !5816
  br i1 %57, label %59, label %58, !dbg !5818

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5819
  unreachable, !dbg !5819

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5821
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5822
  call void @llvm.dbg.value(metadata i32 %61, metadata !5765, metadata !DIExpression()), !dbg !5766
  %62 = icmp eq i32 %61, 0, !dbg !5823
  br i1 %62, label %64, label %63, !dbg !5825

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5826
  unreachable, !dbg !5826

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %65, metadata !5765, metadata !DIExpression()), !dbg !5766
  %66 = icmp eq i32 %65, 0, !dbg !5829
  br i1 %66, label %68, label %67, !dbg !5831

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5832
  unreachable, !dbg !5832

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5834
  %70 = ptrtoint i8* %69 to i32, !dbg !5835
  store i32 %70, i32* %53, align 4, !dbg !5836
  %71 = load i32, i32* %25, align 4, !dbg !5837
  store i32 %71, i32* %55, align 4, !dbg !5838
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %72, metadata !5765, metadata !DIExpression()), !dbg !5766
  %73 = icmp eq i32 %72, 0, !dbg !5840
  br i1 %73, label %75, label %74, !dbg !5842

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5843
  unreachable, !dbg !5843

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5845
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %77, metadata !5765, metadata !DIExpression()), !dbg !5766
  %78 = icmp eq i32 %77, 0, !dbg !5847
  br i1 %78, label %80, label %79, !dbg !5849

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5850
  unreachable, !dbg !5850

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5852
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %82, metadata !5765, metadata !DIExpression()), !dbg !5766
  %83 = icmp eq i32 %82, 0, !dbg !5854
  br i1 %83, label %85, label %84, !dbg !5856

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5857
  unreachable, !dbg !5857

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5859
  call void @llvm.dbg.value(metadata i32 %86, metadata !5756, metadata !DIExpression()), !dbg !5766
  %87 = load i8*, i8** %7, align 4, !dbg !5860
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5861
  store i8* %87, i8** %88, align 4, !dbg !5862
  %89 = load i32, i32* %15, align 4, !dbg !5863
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5864
  store i32 %89, i32* %90, align 4, !dbg !5865
  %91 = load i32, i32* %19, align 4, !dbg !5866
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5867
  store i32 %91, i32* %92, align 4, !dbg !5868
  %93 = load i32, i32* %33, align 4, !dbg !5869
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5870
  store i32 %93, i32* %94, align 4, !dbg !5871
  %95 = load i8*, i8** %11, align 4, !dbg !5872
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5873
  store i8* %95, i8** %96, align 4, !dbg !5874
  %97 = load i32, i32* %25, align 4, !dbg !5875
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5876
  store i32 %97, i32* %98, align 4, !dbg !5877
  %99 = load i32, i32* %29, align 4, !dbg !5878
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5879
  store i32 %99, i32* %100, align 4, !dbg !5880
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5881
  br label %101, !dbg !5882

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5766
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5883
  ret i32 %102, !dbg !5883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5888, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5889, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i8* %2, metadata !5890, metadata !DIExpression()), !dbg !5896
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5897
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5899
  br i1 %6, label %7, label %39, !dbg !5899

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %8, metadata !5893, metadata !DIExpression()), !dbg !5896
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5901
  %10 = load volatile i32, i32* %9, align 4, !dbg !5901
  %11 = icmp eq i32 %10, 1, !dbg !5903
  br i1 %11, label %12, label %37, !dbg !5904

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %13, metadata !5891, metadata !DIExpression()), !dbg !5896
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %14, metadata !5892, metadata !DIExpression()), !dbg !5896
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5907
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5908
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5909
  store i8* %2, i8** %16, align 4, !dbg !5910
  %17 = shl i32 %0, 1, !dbg !5911
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5912
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5913
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5914
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5915
  call void @llvm.dbg.value(metadata i32 %20, metadata !5894, metadata !DIExpression()), !dbg !5896
  %21 = icmp eq i32 %20, 0, !dbg !5916
  br i1 %21, label %23, label %22, !dbg !5918

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5919
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5921
  unreachable, !dbg !5921

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5922
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5923
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5924
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5925
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %27, metadata !5894, metadata !DIExpression()), !dbg !5896
  %28 = icmp eq i32 %27, 0, !dbg !5927
  br i1 %28, label %30, label %29, !dbg !5929

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5930
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5932
  unreachable, !dbg !5932

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5933
  %32 = load i32, i32* %31, align 4, !dbg !5933
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %33, metadata !5895, metadata !DIExpression()), !dbg !5896
  %34 = icmp eq i32 %33, 0, !dbg !5935
  br i1 %34, label %36, label %35, !dbg !5937

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5938
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5940
  unreachable, !dbg !5940

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5941
  store volatile i32 2, i32* %9, align 4, !dbg !5942
  br label %37, !dbg !5943

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5896
  br label %39, !dbg !5944

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5896
  ret i32 %40, !dbg !5944
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5950, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8* %1, metadata !5951, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8* %1, metadata !5952, metadata !DIExpression()), !dbg !5953
  %3 = load i8, i8* %1, align 4, !dbg !5954, !range !3326
  %4 = icmp eq i8 %3, 0, !dbg !5954
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5956
  %6 = bitcast i8* %5 to i32*, !dbg !5956
  %7 = load i32, i32* %6, align 4, !dbg !5956
  br i1 %4, label %9, label %8, !dbg !5957

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5952, metadata !DIExpression()), !dbg !5953
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5958
  br label %10, !dbg !5960

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5961
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5963
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5966, metadata !DIExpression()), !dbg !5971
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5972
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5972
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5967, metadata !DIExpression()), !dbg !5971
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5973
  call void @llvm.dbg.value(metadata i32 %4, metadata !5968, metadata !DIExpression()), !dbg !5971
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5974
  call void @llvm.dbg.value(metadata i32 %5, metadata !5969, metadata !DIExpression()), !dbg !5971
  tail call void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5975
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5976
  store i8 1, i8* %6, align 1, !dbg !5977
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5978
  %7 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5979
  %8 = load i32, i32* %7, align 4, !dbg !5979
  %9 = tail call i32 @hal_nvic_enable_irq(i32 noundef %8) #20, !dbg !5980
  %10 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %10, metadata !5970, metadata !DIExpression()), !dbg !5971
  %11 = icmp eq i32 %10, 0, !dbg !5982
  br i1 %11, label %13, label %12, !dbg !5984

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5985
  unreachable, !dbg !5985

13:                                               ; preds = %1
  %14 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %14, metadata !5970, metadata !DIExpression()), !dbg !5971
  %15 = icmp eq i32 %14, 0, !dbg !5988
  br i1 %15, label %17, label %16, !dbg !5990

16:                                               ; preds = %13
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5991
  unreachable, !dbg !5991

17:                                               ; preds = %13
  %18 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5993
  call void @llvm.dbg.value(metadata i32 %18, metadata !5970, metadata !DIExpression()), !dbg !5971
  %19 = icmp eq i32 %18, 0, !dbg !5994
  br i1 %19, label %21, label %20, !dbg !5996

20:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5997
  unreachable, !dbg !5997

21:                                               ; preds = %17
  %22 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %22, metadata !5970, metadata !DIExpression()), !dbg !5971
  %23 = icmp eq i32 %22, 0, !dbg !6000
  br i1 %23, label %25, label %24, !dbg !6002

24:                                               ; preds = %21
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6003
  unreachable, !dbg !6003

25:                                               ; preds = %21
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6005
  ret void, !dbg !6006
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6007 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6013, metadata !DIExpression()), !dbg !6014
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !6015
  %3 = load i32, i32* %2, align 4, !dbg !6015
  %4 = icmp ult i32 %3, 13, !dbg !6016
  br i1 %4, label %5, label %17, !dbg !6017

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6018
  %7 = load i32, i32* %6, align 4, !dbg !6018
  %8 = icmp ult i32 %7, 4, !dbg !6019
  br i1 %8, label %9, label %17, !dbg !6020

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6021
  %11 = load i32, i32* %10, align 4, !dbg !6021
  %12 = icmp ult i32 %11, 2, !dbg !6022
  br i1 %12, label %13, label %17, !dbg !6023

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6024
  %15 = load i32, i32* %14, align 4, !dbg !6024
  %16 = icmp ult i32 %15, 3, !dbg !6025
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !6014
  ret i1 %18, !dbg !6026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6031, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata i32 %1, metadata !6032, metadata !DIExpression()), !dbg !6036
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6037
  br i1 %3, label %4, label %17, !dbg !6039

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !6040
  br i1 %5, label %6, label %17, !dbg !6041

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6042
  %8 = load volatile i32, i32* %7, align 4, !dbg !6042
  %9 = icmp eq i32 %8, 0, !dbg !6044
  br i1 %9, label %17, label %10, !dbg !6045

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6046
  call void @llvm.dbg.value(metadata i32 %11, metadata !6034, metadata !DIExpression()), !dbg !6036
  %12 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !6047
  store i32 %1, i32* %12, align 4, !dbg !6048
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !6049
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6050
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !6050
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !6035, metadata !DIExpression()), !dbg !6036
  %15 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !6051
  %16 = load i32, i32* %15, align 4, !dbg !6051
  call void @llvm.dbg.value(metadata i32 %16, metadata !6033, metadata !DIExpression()), !dbg !6036
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %14, i32 noundef %16) #20, !dbg !6052
  br label %17, !dbg !6053

17:                                               ; preds = %6, %2, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6036
  ret i32 %18, !dbg !6054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !6055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6059, metadata !DIExpression()), !dbg !6060
  %2 = icmp ult i32 %0, 13, !dbg !6061
  ret i1 %2, !dbg !6062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6067, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6068, metadata !DIExpression()), !dbg !6071
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6072
  br i1 %3, label %4, label %31, !dbg !6074

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6075
  br i1 %5, label %6, label %31, !dbg !6076

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6077
  %8 = load volatile i32, i32* %7, align 4, !dbg !6077
  %9 = icmp eq i32 %8, 0, !dbg !6079
  br i1 %9, label %31, label %10, !dbg !6080

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %11, metadata !6069, metadata !DIExpression()), !dbg !6071
  %12 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6082
  %13 = load i32, i32* %12, align 4, !dbg !6082
  %14 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !6083
  store i32 %13, i32* %14, align 4, !dbg !6084
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6085
  %16 = load i32, i32* %15, align 4, !dbg !6085
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !6086
  store i32 %16, i32* %17, align 4, !dbg !6087
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6088
  %19 = load i32, i32* %18, align 4, !dbg !6088
  %20 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !6089
  store i32 %19, i32* %20, align 4, !dbg !6090
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6091
  %22 = load i32, i32* %21, align 4, !dbg !6091
  %23 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !6092
  store i32 %22, i32* %23, align 4, !dbg !6093
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !6094
  %24 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6095
  %25 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %24, align 4, !dbg !6095
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %25, metadata !6070, metadata !DIExpression()), !dbg !6071
  %26 = load i32, i32* %12, align 4, !dbg !6096
  %27 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %26) #21, !dbg !6097
  %28 = load i32, i32* %15, align 4, !dbg !6098
  %29 = load i32, i32* %18, align 4, !dbg !6099
  %30 = load i32, i32* %21, align 4, !dbg !6100
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %25, i32 noundef %28, i32 noundef %29, i32 noundef %30) #20, !dbg !6101
  br label %31, !dbg !6102

31:                                               ; preds = %6, %2, %4, %10
  %32 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6071
  ret i32 %32, !dbg !6103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8 %1, metadata !6109, metadata !DIExpression()), !dbg !6111
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6112
  br i1 %3, label %4, label %11, !dbg !6114

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6115
  %6 = load volatile i32, i32* %5, align 4, !dbg !6115
  %7 = icmp eq i32 %6, 1, !dbg !6117
  br i1 %7, label %8, label %11, !dbg !6118

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6119
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6119
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6110, metadata !DIExpression()), !dbg !6111
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !6120
  br label %11, !dbg !6121

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !6121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6128, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %1, metadata !6129, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i32 %2, metadata !6130, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i32 0, metadata !6131, metadata !DIExpression()), !dbg !6132
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6133
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6135
  br i1 %6, label %7, label %20, !dbg !6135

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6136
  %9 = load volatile i32, i32* %8, align 4, !dbg !6136
  %10 = icmp ne i32 %9, 1, !dbg !6138
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6139
  call void @llvm.dbg.value(metadata i32 0, metadata !6131, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %1, metadata !6129, metadata !DIExpression()), !dbg !6132
  br i1 %12, label %20, label %13, !dbg !6139

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6131, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %15, metadata !6129, metadata !DIExpression()), !dbg !6132
  %16 = load i8, i8* %15, align 1, !dbg !6140
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !6144
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !6145
  call void @llvm.dbg.value(metadata i8* %17, metadata !6129, metadata !DIExpression()), !dbg !6132
  %18 = add nuw i32 %14, 1, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %18, metadata !6131, metadata !DIExpression()), !dbg !6132
  %19 = icmp eq i32 %18, %2, !dbg !6147
  br i1 %19, label %20, label %13, !dbg !6148, !llvm.loop !6149

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6132
  ret i32 %21, !dbg !6151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6152 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %1, metadata !6155, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %2, metadata !6156, metadata !DIExpression()), !dbg !6163
  %5 = bitcast i32* %4 to i8*, !dbg !6164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6164
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6165
  %7 = xor i1 %6, true, !dbg !6167
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6167
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6167
  br i1 %11, label %54, label %12, !dbg !6167

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6168
  %14 = load volatile i32, i32* %13, align 4, !dbg !6168
  %15 = icmp eq i32 %14, 2, !dbg !6170
  br i1 %15, label %16, label %54, !dbg !6171

16:                                               ; preds = %12
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6172
  call void @llvm.dbg.value(metadata i32 %17, metadata !6162, metadata !DIExpression()), !dbg !6163
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6173
  %19 = load i8, i8* %18, align 1, !dbg !6173, !range !3326
  %20 = icmp eq i8 %19, 0, !dbg !6175
  br i1 %20, label %21, label %25, !dbg !6176

21:                                               ; preds = %16
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6177
  %23 = load i8, i8* %22, align 1, !dbg !6177
  %24 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %23) #20, !dbg !6179
  store i8 1, i8* %18, align 1, !dbg !6180
  br label %25, !dbg !6181

25:                                               ; preds = %21, %16
  tail call void @restore_interrupt_mask(i32 noundef %17) #20, !dbg !6182
  %26 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %26, metadata !6157, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32* %4, metadata !6160, metadata !DIExpression(DW_OP_deref)), !dbg !6163
  %27 = call i32 @vdma_get_available_send_space(i32 noundef %26, i32* noundef nonnull %4) #20, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %27, metadata !6161, metadata !DIExpression()), !dbg !6163
  %28 = icmp eq i32 %27, 0, !dbg !6185
  br i1 %28, label %30, label %29, !dbg !6187

29:                                               ; preds = %25
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6188
  unreachable, !dbg !6188

30:                                               ; preds = %25
  %31 = load i32, i32* %4, align 4, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %31, metadata !6160, metadata !DIExpression()), !dbg !6163
  %32 = icmp ult i32 %31, %2, !dbg !6192
  %33 = select i1 %32, i32 %31, i32 %2
  call void @llvm.dbg.value(metadata i32 %33, metadata !6159, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 0, metadata !6158, metadata !DIExpression()), !dbg !6163
  %34 = icmp eq i32 %33, 0, !dbg !6193
  br i1 %34, label %47, label %37, !dbg !6196

35:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %43, metadata !6158, metadata !DIExpression()), !dbg !6163
  %36 = icmp eq i32 %43, %33, !dbg !6193
  br i1 %36, label %45, label %37, !dbg !6196, !llvm.loop !6197

37:                                               ; preds = %30, %35
  %38 = phi i32 [ %43, %35 ], [ 0, %30 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !6158, metadata !DIExpression()), !dbg !6163
  %39 = getelementptr inbounds i8, i8* %1, i32 %38, !dbg !6199
  %40 = load i8, i8* %39, align 1, !dbg !6199
  %41 = call i32 @vdma_push_data(i32 noundef %26, i8 noundef zeroext %40) #20, !dbg !6201
  call void @llvm.dbg.value(metadata i32 %41, metadata !6161, metadata !DIExpression()), !dbg !6163
  %42 = icmp eq i32 %41, 0, !dbg !6202
  %43 = add nuw i32 %38, 1, !dbg !6204
  call void @llvm.dbg.value(metadata i32 %43, metadata !6158, metadata !DIExpression()), !dbg !6163
  br i1 %42, label %35, label %44, !dbg !6205

44:                                               ; preds = %37
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6206
  unreachable, !dbg !6206

45:                                               ; preds = %35
  %46 = load i32, i32* %4, align 4, !dbg !6208
  br label %47, !dbg !6208

47:                                               ; preds = %45, %30
  %48 = phi i32 [ %46, %45 ], [ %31, %30 ], !dbg !6208
  call void @llvm.dbg.value(metadata i32 %48, metadata !6160, metadata !DIExpression()), !dbg !6163
  %49 = icmp eq i32 %33, %48, !dbg !6210
  br i1 %49, label %50, label %54, !dbg !6211

50:                                               ; preds = %47
  %51 = call i32 @vdma_enable_interrupt(i32 noundef %26) #20, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %51, metadata !6161, metadata !DIExpression()), !dbg !6163
  %52 = icmp eq i32 %51, 0, !dbg !6214
  br i1 %52, label %54, label %53, !dbg !6216

53:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6217
  unreachable, !dbg !6217

54:                                               ; preds = %47, %50, %12, %3
  %55 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %33, %50 ], [ %33, %47 ], !dbg !6163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6219
  ret i32 %55, !dbg !6219
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6224, metadata !DIExpression()), !dbg !6227
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6228
  br i1 %2, label %3, label %11, !dbg !6230

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6231
  %5 = load volatile i32, i32* %4, align 4, !dbg !6231
  %6 = icmp eq i32 %5, 1, !dbg !6233
  br i1 %6, label %7, label %11, !dbg !6234

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6235
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6235
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6226, metadata !DIExpression()), !dbg !6227
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6236
  call void @llvm.dbg.value(metadata i8 %10, metadata !6225, metadata !DIExpression()), !dbg !6227
  br label %11, !dbg !6237

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6227
  ret i8 %12, !dbg !6238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6243, metadata !DIExpression()), !dbg !6246
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6247
  br i1 %2, label %3, label %11, !dbg !6249

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6250
  %5 = load volatile i32, i32* %4, align 4, !dbg !6250
  %6 = icmp eq i32 %5, 1, !dbg !6252
  br i1 %6, label %7, label %11, !dbg !6253

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6254
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6254
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6245, metadata !DIExpression()), !dbg !6246
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %10, metadata !6244, metadata !DIExpression()), !dbg !6246
  br label %11, !dbg !6256

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6246
  ret i32 %12, !dbg !6257
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6262, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata i8* %1, metadata !6263, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata i32 %2, metadata !6264, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata i8* %1, metadata !6266, metadata !DIExpression()), !dbg !6267
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6268
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6270
  br i1 %6, label %7, label %19, !dbg !6270

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6271
  %9 = load volatile i32, i32* %8, align 4, !dbg !6271
  %10 = icmp ne i32 %9, 1, !dbg !6273
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6274
  call void @llvm.dbg.value(metadata i32 0, metadata !6265, metadata !DIExpression()), !dbg !6267
  br i1 %12, label %19, label %13, !dbg !6274

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6265, metadata !DIExpression()), !dbg !6267
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !6275
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6279
  store i8 %15, i8* %16, align 1, !dbg !6280
  %17 = add nuw i32 %14, 1, !dbg !6281
  call void @llvm.dbg.value(metadata i32 %17, metadata !6265, metadata !DIExpression()), !dbg !6267
  %18 = icmp eq i32 %17, %2, !dbg !6282
  br i1 %18, label %19, label %13, !dbg !6283, !llvm.loop !6284

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6267
  ret i32 %20, !dbg !6286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6287 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6289, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %1, metadata !6290, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 %2, metadata !6291, metadata !DIExpression()), !dbg !6297
  %5 = bitcast i32* %4 to i8*, !dbg !6298
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6298
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6299
  %7 = xor i1 %6, true, !dbg !6301
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6301
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6301
  br i1 %11, label %44, label %12, !dbg !6301

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6302
  %14 = load volatile i32, i32* %13, align 4, !dbg !6302
  %15 = icmp eq i32 %14, 2, !dbg !6304
  br i1 %15, label %16, label %44, !dbg !6305

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6306
  call void @llvm.dbg.value(metadata i32 %17, metadata !6292, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32* %4, metadata !6294, metadata !DIExpression(DW_OP_deref)), !dbg !6297
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6307
  call void @llvm.dbg.value(metadata i32 %18, metadata !6296, metadata !DIExpression()), !dbg !6297
  %19 = icmp eq i32 %18, 0, !dbg !6308
  br i1 %19, label %21, label %20, !dbg !6310

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6311
  unreachable, !dbg !6311

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %22, metadata !6294, metadata !DIExpression()), !dbg !6297
  %23 = icmp ult i32 %22, %2, !dbg !6315
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6293, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 0, metadata !6295, metadata !DIExpression()), !dbg !6297
  %25 = icmp eq i32 %24, 0, !dbg !6316
  br i1 %25, label %37, label %28, !dbg !6319

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !6295, metadata !DIExpression()), !dbg !6297
  %27 = icmp eq i32 %33, %24, !dbg !6316
  br i1 %27, label %35, label %28, !dbg !6319, !llvm.loop !6320

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6295, metadata !DIExpression()), !dbg !6297
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6322
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %31, metadata !6296, metadata !DIExpression()), !dbg !6297
  %32 = icmp eq i32 %31, 0, !dbg !6325
  %33 = add nuw i32 %29, 1, !dbg !6327
  call void @llvm.dbg.value(metadata i32 %33, metadata !6295, metadata !DIExpression()), !dbg !6297
  br i1 %32, label %26, label %34, !dbg !6328

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6329
  unreachable, !dbg !6329

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !6331
  br label %37, !dbg !6331

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !6331
  call void @llvm.dbg.value(metadata i32 %38, metadata !6294, metadata !DIExpression()), !dbg !6297
  %39 = icmp eq i32 %24, %38, !dbg !6333
  br i1 %39, label %40, label %44, !dbg !6334

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6335
  call void @llvm.dbg.value(metadata i32 %41, metadata !6296, metadata !DIExpression()), !dbg !6297
  %42 = icmp eq i32 %41, 0, !dbg !6337
  br i1 %42, label %44, label %43, !dbg !6339

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6340
  unreachable, !dbg !6340

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !6297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6342
  ret i32 %45, !dbg !6342
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6343 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6345, metadata !DIExpression()), !dbg !6349
  %3 = bitcast i32* %2 to i8*, !dbg !6350
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6350
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6351
  br i1 %4, label %5, label %16, !dbg !6353

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6354
  %7 = load volatile i32, i32* %6, align 4, !dbg !6354
  %8 = icmp eq i32 %7, 2, !dbg !6356
  br i1 %8, label %9, label %16, !dbg !6357

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %10, metadata !6346, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32* %2, metadata !6347, metadata !DIExpression(DW_OP_deref)), !dbg !6349
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6359
  call void @llvm.dbg.value(metadata i32 %11, metadata !6348, metadata !DIExpression()), !dbg !6349
  %12 = icmp eq i32 %11, 0, !dbg !6360
  br i1 %12, label %14, label %13, !dbg !6362

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6363
  unreachable, !dbg !6363

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6365
  call void @llvm.dbg.value(metadata i32 %15, metadata !6347, metadata !DIExpression()), !dbg !6349
  br label %16, !dbg !6366

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6367
  ret i32 %17, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6368 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6370, metadata !DIExpression()), !dbg !6374
  %3 = bitcast i32* %2 to i8*, !dbg !6375
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6375
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6376
  br i1 %4, label %5, label %16, !dbg !6378

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6379
  %7 = load volatile i32, i32* %6, align 4, !dbg !6379
  %8 = icmp eq i32 %7, 2, !dbg !6381
  br i1 %8, label %9, label %16, !dbg !6382

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %10, metadata !6371, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.value(metadata i32* %2, metadata !6372, metadata !DIExpression(DW_OP_deref)), !dbg !6374
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6384
  call void @llvm.dbg.value(metadata i32 %11, metadata !6373, metadata !DIExpression()), !dbg !6374
  %12 = icmp eq i32 %11, 0, !dbg !6385
  br i1 %12, label %14, label %13, !dbg !6387

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !6388
  unreachable, !dbg !6388

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %15, metadata !6372, metadata !DIExpression()), !dbg !6374
  br label %16, !dbg !6391

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6392
  ret i32 %17, !dbg !6392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6395, metadata !DIExpression()), !dbg !6397
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6398
  br i1 %2, label %3, label %11, !dbg !6400

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6401
  %5 = load volatile i32, i32* %4, align 4, !dbg !6401
  %6 = icmp eq i32 %5, 0, !dbg !6403
  br i1 %6, label %11, label %7, !dbg !6404

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6405
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6405
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6396, metadata !DIExpression()), !dbg !6397
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6406
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !6407
  store i32 0, i32* %10, align 4, !dbg !6408
  br label %11, !dbg !6409

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6397
  ret i32 %12, !dbg !6410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6411 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6470, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 %1, metadata !6471, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !6480, metadata !DIExpression()), !dbg !6485
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !6486
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6486
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !6483, metadata !DIExpression()), !dbg !6487
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !6487
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !6487
  store i32 1, i32* %5, align 4, !dbg !6487
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !6487
  store i32 1, i32* %6, align 4, !dbg !6487
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !6487
  store i32 1, i32* %7, align 4, !dbg !6487
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !6487
  store i32 1, i32* %8, align 4, !dbg !6487
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !6487
  store i32 1, i32* %9, align 4, !dbg !6487
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6488
  store volatile i32 0, i32* %10, align 4, !dbg !6489
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6490
  store volatile i32 0, i32* %11, align 4, !dbg !6491
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6492
  store volatile i32 0, i32* %12, align 4, !dbg !6493
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !6494
  br i1 %13, label %14, label %17, !dbg !6496

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !6497
  %16 = mul i32 %15, 1000, !dbg !6499
  call void @llvm.dbg.value(metadata i32 %16, metadata !6472, metadata !DIExpression()), !dbg !6484
  br label %17, !dbg !6500

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !6501
  call void @llvm.dbg.value(metadata i32 %18, metadata !6472, metadata !DIExpression()), !dbg !6484
  %19 = shl i32 %1, 8, !dbg !6502
  %20 = udiv i32 %18, %19, !dbg !6503
  call void @llvm.dbg.value(metadata i32 %20, metadata !6473, metadata !DIExpression()), !dbg !6484
  %21 = mul i32 %18, 10, !dbg !6504
  %22 = udiv i32 %21, %19, !dbg !6505
  %23 = urem i32 %22, 10, !dbg !6506
  call void @llvm.dbg.value(metadata i32 %23, metadata !6474, metadata !DIExpression()), !dbg !6484
  %24 = icmp ne i32 %23, 0, !dbg !6507
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !6509
  %27 = zext i1 %26 to i32, !dbg !6509
  %28 = add i32 %20, %27, !dbg !6509
  call void @llvm.dbg.value(metadata i32 %28, metadata !6473, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 %28, metadata !6476, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 undef, metadata !6477, metadata !DIExpression()), !dbg !6484
  br label %29, !dbg !6510

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !6484
  %31 = mul i32 %30, %1, !dbg !6484
  %32 = udiv i32 %18, %31, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %32, metadata !6477, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 %30, metadata !6476, metadata !DIExpression()), !dbg !6484
  %33 = icmp ugt i32 %32, 256, !dbg !6511
  %34 = add i32 %30, 1, !dbg !6512
  call void @llvm.dbg.value(metadata i32 %34, metadata !6476, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 undef, metadata !6477, metadata !DIExpression()), !dbg !6484
  br i1 %33, label %29, label %35, !dbg !6510, !llvm.loop !6514

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !6516
  %37 = urem i32 %36, 10, !dbg !6517
  call void @llvm.dbg.value(metadata i32 %37, metadata !6475, metadata !DIExpression()), !dbg !6484
  %38 = add nsw i32 %32, -1, !dbg !6518
  call void @llvm.dbg.value(metadata i32 %38, metadata !6477, metadata !DIExpression()), !dbg !6484
  %39 = add nsw i32 %32, -2, !dbg !6519
  %40 = lshr i32 %39, 1, !dbg !6520
  call void @llvm.dbg.value(metadata i32 %40, metadata !6478, metadata !DIExpression()), !dbg !6484
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6521
  store volatile i32 3, i32* %41, align 4, !dbg !6522
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6523
  %43 = load volatile i32, i32* %42, align 4, !dbg !6523
  call void @llvm.dbg.value(metadata i32 %43, metadata !6479, metadata !DIExpression()), !dbg !6484
  %44 = or i32 %43, 128, !dbg !6524
  store volatile i32 %44, i32* %42, align 4, !dbg !6525
  %45 = and i32 %30, 255, !dbg !6526
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6527
  store volatile i32 %45, i32* %46, align 4, !dbg !6528
  %47 = lshr i32 %30, 8, !dbg !6529
  %48 = and i32 %47, 255, !dbg !6530
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6531
  store volatile i32 %48, i32* %49, align 4, !dbg !6532
  store volatile i32 %43, i32* %42, align 4, !dbg !6533
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6534
  store volatile i32 %38, i32* %50, align 4, !dbg !6535
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6536
  store volatile i32 %40, i32* %51, align 4, !dbg !6537
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !6538
  %53 = load i32, i32* %52, align 4, !dbg !6538
  store volatile i32 %53, i32* %11, align 4, !dbg !6539
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !6540
  %55 = load i32, i32* %54, align 4, !dbg !6540
  store volatile i32 %55, i32* %12, align 4, !dbg !6541
  %56 = icmp ugt i32 %1, 2999999, !dbg !6542
  br i1 %56, label %57, label %59, !dbg !6544

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6545
  store volatile i32 18, i32* %58, align 4, !dbg !6547
  br label %59, !dbg !6548

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6549
  ret void, !dbg !6549
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !6550 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6554, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %1, metadata !6555, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %2, metadata !6556, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %3, metadata !6557, metadata !DIExpression()), !dbg !6559
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6560
  %6 = load volatile i32, i32* %5, align 4, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %6, metadata !6558, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6559
  store volatile i32 128, i32* %5, align 4, !dbg !6561
  %7 = trunc i32 %6 to i16, !dbg !6562
  %8 = and i16 %7, -4, !dbg !6562
  call void @llvm.dbg.value(metadata i16 %7, metadata !6558, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !6559
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !6563

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !6564
  call void @llvm.dbg.value(metadata i16 %10, metadata !6558, metadata !DIExpression()), !dbg !6559
  br label %15, !dbg !6566

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !6567
  call void @llvm.dbg.value(metadata i16 %12, metadata !6558, metadata !DIExpression()), !dbg !6559
  br label %15, !dbg !6568

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !6569
  call void @llvm.dbg.value(metadata i16 %14, metadata !6558, metadata !DIExpression()), !dbg !6559
  br label %15, !dbg !6570

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !6559
  call void @llvm.dbg.value(metadata i16 %16, metadata !6558, metadata !DIExpression()), !dbg !6559
  %17 = and i16 %16, -61, !dbg !6571
  call void @llvm.dbg.value(metadata i16 %16, metadata !6558, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !6559
  %18 = icmp eq i32 %2, 1, !dbg !6572
  %19 = select i1 %18, i16 4, i16 0, !dbg !6572
  %20 = or i16 %17, %19, !dbg !6572
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !6558, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6559
  call void @llvm.dbg.value(metadata i16 %20, metadata !6558, metadata !DIExpression()), !dbg !6559
  %21 = icmp eq i32 %3, 2, !dbg !6573
  %22 = or i16 %20, 16, !dbg !6573
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !6573
  call void @llvm.dbg.value(metadata i16 %23, metadata !6558, metadata !DIExpression()), !dbg !6559
  %24 = zext i16 %23 to i32, !dbg !6574
  store volatile i32 %24, i32* %5, align 4, !dbg !6575
  ret void, !dbg !6576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !6577 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6581, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.value(metadata i8 %1, metadata !6582, metadata !DIExpression()), !dbg !6584
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !6585

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !6586
  call void @llvm.dbg.value(metadata i32 %5, metadata !6583, metadata !DIExpression()), !dbg !6584
  %6 = and i32 %5, 32, !dbg !6588
  %7 = icmp eq i32 %6, 0, !dbg !6588
  br i1 %7, label %4, label %8, !dbg !6590, !llvm.loop !6591

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !6593
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6595
  store volatile i32 %9, i32* %10, align 4, !dbg !6596
  ret void, !dbg !6597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6598 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6602, metadata !DIExpression()), !dbg !6605
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6606

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %4, metadata !6603, metadata !DIExpression()), !dbg !6605
  %5 = and i32 %4, 1, !dbg !6609
  %6 = icmp eq i32 %5, 0, !dbg !6609
  br i1 %6, label %3, label %7, !dbg !6611, !llvm.loop !6612

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6614
  %9 = load volatile i32, i32* %8, align 4, !dbg !6614
  %10 = trunc i32 %9 to i8, !dbg !6616
  call void @llvm.dbg.value(metadata i8 %10, metadata !6604, metadata !DIExpression()), !dbg !6605
  ret i8 %10, !dbg !6617
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6618 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6622, metadata !DIExpression()), !dbg !6625
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6626
  %3 = load volatile i32, i32* %2, align 4, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %3, metadata !6623, metadata !DIExpression()), !dbg !6625
  %4 = and i32 %3, 1, !dbg !6627
  %5 = icmp eq i32 %4, 0, !dbg !6627
  br i1 %5, label %9, label %6, !dbg !6629

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6630
  %8 = load volatile i32, i32* %7, align 4, !dbg !6630
  call void @llvm.dbg.value(metadata i32 %8, metadata !6624, metadata !DIExpression()), !dbg !6625
  br label %9, !dbg !6632

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !6633
  call void @llvm.dbg.value(metadata i32 %10, metadata !6624, metadata !DIExpression()), !dbg !6625
  ret i32 %10, !dbg !6634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6635 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6639, metadata !DIExpression()), !dbg !6642
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6643
  %3 = load volatile i32, i32* %2, align 4, !dbg !6643
  call void @llvm.dbg.value(metadata i32 %3, metadata !6641, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6642
  store volatile i32 191, i32* %2, align 4, !dbg !6644
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6645
  %5 = load volatile i32, i32* %4, align 4, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %5, metadata !6640, metadata !DIExpression()), !dbg !6642
  %6 = and i32 %5, 65343, !dbg !6646
  %7 = or i32 %6, 192, !dbg !6646
  call void @llvm.dbg.value(metadata i32 %5, metadata !6640, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !6642
  store volatile i32 %7, i32* %4, align 4, !dbg !6647
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6648
  store volatile i32 0, i32* %8, align 4, !dbg !6649
  store volatile i32 0, i32* %2, align 4, !dbg !6650
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6651
  store volatile i32 2, i32* %9, align 4, !dbg !6652
  %10 = and i32 %3, 65535, !dbg !6653
  store volatile i32 %10, i32* %2, align 4, !dbg !6654
  ret void, !dbg !6655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !6656 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6660, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i8 %1, metadata !6661, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i8 %2, metadata !6662, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i8 %3, metadata !6663, metadata !DIExpression()), !dbg !6666
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6667
  %6 = load volatile i32, i32* %5, align 4, !dbg !6667
  call void @llvm.dbg.value(metadata i32 %6, metadata !6665, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6666
  store volatile i32 191, i32* %5, align 4, !dbg !6668
  %7 = zext i8 %1 to i32, !dbg !6669
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6670
  store volatile i32 %7, i32* %8, align 4, !dbg !6671
  %9 = zext i8 %2 to i32, !dbg !6672
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6673
  store volatile i32 %9, i32* %10, align 4, !dbg !6674
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6675
  %12 = load volatile i32, i32* %11, align 4, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %12, metadata !6664, metadata !DIExpression()), !dbg !6666
  %13 = and i32 %12, 65509, !dbg !6676
  %14 = or i32 %13, 26, !dbg !6676
  call void @llvm.dbg.value(metadata i32 %12, metadata !6664, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !6666
  store volatile i32 %14, i32* %11, align 4, !dbg !6677
  %15 = zext i8 %3 to i32, !dbg !6678
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6679
  store volatile i32 %15, i32* %16, align 4, !dbg !6680
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6681
  store volatile i32 1, i32* %17, align 4, !dbg !6682
  %18 = and i32 %6, 65535, !dbg !6683
  store volatile i32 %18, i32* %5, align 4, !dbg !6684
  ret void, !dbg !6685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6686 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6688, metadata !DIExpression()), !dbg !6690
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6691
  %3 = load volatile i32, i32* %2, align 4, !dbg !6691
  call void @llvm.dbg.value(metadata i32 %3, metadata !6689, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6690
  store volatile i32 191, i32* %2, align 4, !dbg !6692
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6693
  store volatile i32 0, i32* %4, align 4, !dbg !6694
  store volatile i32 0, i32* %2, align 4, !dbg !6695
  %5 = and i32 %3, 65535, !dbg !6696
  store volatile i32 %5, i32* %2, align 4, !dbg !6697
  ret void, !dbg !6698
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6699 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6701, metadata !DIExpression()), !dbg !6704
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6705
  %3 = load volatile i32, i32* %2, align 4, !dbg !6705
  call void @llvm.dbg.value(metadata i32 %3, metadata !6703, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6704
  store volatile i32 191, i32* %2, align 4, !dbg !6706
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6707
  %5 = load volatile i32, i32* %4, align 4, !dbg !6707
  call void @llvm.dbg.value(metadata i32 %5, metadata !6702, metadata !DIExpression()), !dbg !6704
  %6 = and i32 %5, 65519, !dbg !6708
  %7 = or i32 %6, 16, !dbg !6708
  call void @llvm.dbg.value(metadata i32 %5, metadata !6702, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !6704
  store volatile i32 %7, i32* %4, align 4, !dbg !6709
  store volatile i32 0, i32* %2, align 4, !dbg !6710
  store volatile i32 135, i32* %4, align 4, !dbg !6711
  %8 = and i32 %3, 65535, !dbg !6712
  store volatile i32 %8, i32* %2, align 4, !dbg !6713
  ret void, !dbg !6714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6715 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6717, metadata !DIExpression()), !dbg !6718
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6719
  store volatile i32 1, i32* %2, align 4, !dbg !6720
  ret void, !dbg !6721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6722 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6724, metadata !DIExpression()), !dbg !6727
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6728
  %3 = load volatile i32, i32* %2, align 4, !dbg !6728
  call void @llvm.dbg.value(metadata i32 %3, metadata !6726, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6727
  %4 = load volatile i32, i32* %2, align 4, !dbg !6729
  %5 = and i32 %4, -129, !dbg !6729
  store volatile i32 %5, i32* %2, align 4, !dbg !6729
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6730
  %7 = load volatile i32, i32* %6, align 4, !dbg !6730
  call void @llvm.dbg.value(metadata i32 %7, metadata !6725, metadata !DIExpression()), !dbg !6727
  %8 = and i32 %7, 65533, !dbg !6731
  %9 = or i32 %8, 2, !dbg !6731
  call void @llvm.dbg.value(metadata i32 %7, metadata !6725, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !6727
  store volatile i32 %9, i32* %6, align 4, !dbg !6732
  %10 = and i32 %3, 65535, !dbg !6733
  %11 = load volatile i32, i32* %2, align 4, !dbg !6734
  %12 = and i32 %10, %11, !dbg !6734
  store volatile i32 %12, i32* %2, align 4, !dbg !6734
  ret void, !dbg !6735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6736 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6738, metadata !DIExpression()), !dbg !6741
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6742
  %3 = load volatile i32, i32* %2, align 4, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %3, metadata !6740, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6741
  %4 = load volatile i32, i32* %2, align 4, !dbg !6743
  %5 = and i32 %4, -129, !dbg !6743
  store volatile i32 %5, i32* %2, align 4, !dbg !6743
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6744
  %7 = load volatile i32, i32* %6, align 4, !dbg !6744
  call void @llvm.dbg.value(metadata i32 %7, metadata !6739, metadata !DIExpression()), !dbg !6741
  %8 = and i32 %7, 65530, !dbg !6745
  %9 = or i32 %8, 5, !dbg !6745
  call void @llvm.dbg.value(metadata i32 %7, metadata !6739, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !6741
  store volatile i32 %9, i32* %6, align 4, !dbg !6746
  %10 = and i32 %3, 65535, !dbg !6747
  %11 = load volatile i32, i32* %2, align 4, !dbg !6748
  %12 = and i32 %10, %11, !dbg !6748
  store volatile i32 %12, i32* %2, align 4, !dbg !6748
  ret void, !dbg !6749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6750 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6754, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 %1, metadata !6755, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i16 145, metadata !6756, metadata !DIExpression()), !dbg !6757
  %3 = icmp eq i32 %1, 0, !dbg !6758
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !6756, metadata !DIExpression()), !dbg !6757
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6760
  store volatile i32 %4, i32* %5, align 4, !dbg !6761
  ret void, !dbg !6762
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6763 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6768, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.value(metadata i32 0, metadata !6771, metadata !DIExpression()), !dbg !6772
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6773
  %3 = load volatile i32, i32* %2, align 4, !dbg !6773
  call void @llvm.dbg.value(metadata i32 %3, metadata !6769, metadata !DIExpression()), !dbg !6772
  %4 = and i32 %3, 1, !dbg !6774
  %5 = icmp eq i32 %4, 0, !dbg !6774
  br i1 %5, label %6, label %16, !dbg !6776

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !6777
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !6778

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !6771, metadata !DIExpression()), !dbg !6772
  br label %16, !dbg !6779

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6781
  %11 = load volatile i32, i32* %10, align 4, !dbg !6781
  call void @llvm.dbg.value(metadata i32 %11, metadata !6770, metadata !DIExpression()), !dbg !6772
  %12 = and i32 %11, 16, !dbg !6782
  %13 = icmp eq i32 %12, 0, !dbg !6782
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !6771, metadata !DIExpression()), !dbg !6772
  br label %16, !dbg !6784

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !6772
  ret i32 %17, !dbg !6785
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6786 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6790, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32 0, metadata !6792, metadata !DIExpression()), !dbg !6793
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6794
  %3 = load volatile i32, i32* %2, align 4, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %3, metadata !6791, metadata !DIExpression()), !dbg !6793
  %4 = and i32 %3, 14, !dbg !6795
  %5 = icmp eq i32 %4, 0, !dbg !6795
  %6 = sext i1 %5 to i32, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %6, metadata !6792, metadata !DIExpression()), !dbg !6793
  ret i32 %6, !dbg !6798
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6799 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6801, metadata !DIExpression()), !dbg !6803
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6804
  %3 = load volatile i32, i32* %2, align 4, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %3, metadata !6802, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6803
  call void @llvm.dbg.value(metadata i32 %3, metadata !6802, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6803
  ret void, !dbg !6805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6806 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6808, metadata !DIExpression()), !dbg !6809
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6810
  store volatile i32 191, i32* %2, align 4, !dbg !6811
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6812
  store volatile i32 16, i32* %3, align 4, !dbg !6813
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6814
  store volatile i32 0, i32* %4, align 4, !dbg !6815
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6816
  store volatile i32 0, i32* %5, align 4, !dbg !6817
  store volatile i32 128, i32* %2, align 4, !dbg !6818
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6819
  store volatile i32 0, i32* %6, align 4, !dbg !6820
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6821
  store volatile i32 0, i32* %7, align 4, !dbg !6822
  store volatile i32 0, i32* %2, align 4, !dbg !6823
  store volatile i32 0, i32* %7, align 4, !dbg !6824
  store volatile i32 0, i32* %3, align 4, !dbg !6825
  store volatile i32 191, i32* %2, align 4, !dbg !6826
  store volatile i32 0, i32* %3, align 4, !dbg !6827
  store volatile i32 0, i32* %2, align 4, !dbg !6828
  store volatile i32 0, i32* %4, align 4, !dbg !6829
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6830
  store volatile i32 0, i32* %8, align 4, !dbg !6831
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6832
  store volatile i32 0, i32* %9, align 4, !dbg !6833
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6834
  store volatile i32 0, i32* %10, align 4, !dbg !6835
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6836
  store volatile i32 0, i32* %11, align 4, !dbg !6837
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6838
  store volatile i32 0, i32* %12, align 4, !dbg !6839
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6840
  store volatile i32 0, i32* %13, align 4, !dbg !6841
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6842
  store volatile i32 0, i32* %14, align 4, !dbg !6843
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6844
  store volatile i32 0, i32* %15, align 4, !dbg !6845
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6846
  store volatile i32 0, i32* %16, align 4, !dbg !6847
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6848
  store volatile i32 0, i32* %17, align 4, !dbg !6849
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6850
  store volatile i32 0, i32* %18, align 4, !dbg !6851
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6852
  store volatile i32 0, i32* %19, align 4, !dbg !6853
  store volatile i32 0, i32* %13, align 4, !dbg !6854
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6855
  store volatile i32 0, i32* %20, align 4, !dbg !6856
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6857
  store volatile i32 0, i32* %21, align 4, !dbg !6858
  ret void, !dbg !6859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6860 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6862, metadata !DIExpression()), !dbg !6863
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6864

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6865
  %5 = and i32 %4, 64, !dbg !6866
  %6 = icmp eq i32 %5, 0, !dbg !6867
  br i1 %6, label %3, label %7, !dbg !6864, !llvm.loop !6868

7:                                                ; preds = %3
  ret void, !dbg !6870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6875, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata i32 %1, metadata !6876, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata i32 15, metadata !6877, metadata !DIExpression()), !dbg !6878
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6879

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6880
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6883
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6885
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6887
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6878
  call void @llvm.dbg.value(metadata i32 %16, metadata !6877, metadata !DIExpression()), !dbg !6878
  ret i32 %16, !dbg !6889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6900, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6901, metadata !DIExpression()), !dbg !6902
  %3 = add i32 %0, -8, !dbg !6903
  %4 = icmp ult i32 %3, 8, !dbg !6903
  br i1 %4, label %5, label %12, !dbg !6903

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6903
  %7 = load i8, i8* %6, align 1, !dbg !6903
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.6, i32 0, i32 %3, !dbg !6903
  %9 = load i32, i32* %8, align 4, !dbg !6903
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6904
  store i8 %7, i8* %10, align 4, !dbg !6904
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6904
  store i32 %9, i32* %11, align 4, !dbg !6904
  br label %12, !dbg !6906

12:                                               ; preds = %2, %5
  ret void, !dbg !6906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6907 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6911, metadata !DIExpression()), !dbg !6912
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6913
  store volatile i32 3, i32* %2, align 4, !dbg !6914
  ret void, !dbg !6915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6918, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6921, metadata !DIExpression()), !dbg !6922
  %2 = add i32 %0, -30, !dbg !6923
  %3 = icmp ult i32 %2, 3, !dbg !6923
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6923
  call void @llvm.dbg.value(metadata i32 %5, metadata !6919, metadata !DIExpression()), !dbg !6922
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6924
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6924
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6921, metadata !DIExpression()), !dbg !6922
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6925
  call void @llvm.dbg.value(metadata i32 %8, metadata !6920, metadata !DIExpression()), !dbg !6922
  switch i32 %8, label %13 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %14
    i32 0, label %14
    i32 3, label %11
    i32 5, label %12
  ], !dbg !6926

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6927
  br label %14, !dbg !6929

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6930
  br label %14, !dbg !6931

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6932
  br label %14, !dbg !6933

12:                                               ; preds = %1
  tail call void @uart_send_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6934
  br label %14, !dbg !6935

13:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4.95, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.96, i32 0, i32 0)) #23, !dbg !6936
  unreachable, !dbg !6936

14:                                               ; preds = %12, %11, %1, %1, %10, %9
  ret void, !dbg !6937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6942, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 %1, metadata !6943, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 0, metadata !6944, metadata !DIExpression()), !dbg !6950
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !6951
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !6951
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !6952
  store volatile i16 0, i16* %5, align 2, !dbg !6953
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !6954

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !6955
  call void @llvm.dbg.value(metadata i32 100, metadata !6944, metadata !DIExpression()), !dbg !6950
  br label %13, !dbg !6957

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !6944, metadata !DIExpression()), !dbg !6950
  br label %13, !dbg !6958

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !6944, metadata !DIExpression()), !dbg !6950
  br label %13, !dbg !6959

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !6944, metadata !DIExpression()), !dbg !6950
  br label %13, !dbg !6960

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !6944, metadata !DIExpression()), !dbg !6950
  br label %13, !dbg !6961

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !6944, metadata !DIExpression()), !dbg !6950
  %12 = shl i32 %1, 1, !dbg !6962
  br label %13, !dbg !6962

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6944, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 1, metadata !6946, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 undef, metadata !6945, metadata !DIExpression()), !dbg !6950
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !6963

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !6946, metadata !DIExpression()), !dbg !6950
  %19 = mul i32 %18, %14, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %19, metadata !6949, metadata !DIExpression()), !dbg !6950
  %20 = add i32 %19, -1, !dbg !6968
  %21 = add i32 %20, %16, !dbg !6969
  %22 = udiv i32 %21, %19, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %22, metadata !6945, metadata !DIExpression()), !dbg !6950
  %23 = icmp ult i32 %22, 65, !dbg !6971
  br i1 %23, label %27, label %24, !dbg !6973

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !6974
  call void @llvm.dbg.value(metadata i32 %22, metadata !6945, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 %25, metadata !6946, metadata !DIExpression()), !dbg !6950
  %26 = icmp eq i32 %25, 9, !dbg !6975
  br i1 %26, label %27, label %17, !dbg !6963, !llvm.loop !6976

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !6978
  call void @llvm.dbg.value(metadata i32 %22, metadata !6945, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 %28, metadata !6946, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !6950
  %29 = add i32 %22, 63, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %22, metadata !6945, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !6950
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !6980
  %31 = load volatile i16, i16* %30, align 2, !dbg !6980
  %32 = and i16 %31, -1856, !dbg !6981
  call void @llvm.dbg.value(metadata i16 %32, metadata !6947, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6950
  %33 = shl i32 %28, 8, !dbg !6982
  %34 = add i32 %33, 1792, !dbg !6982
  %35 = and i32 %34, 1792, !dbg !6983
  %36 = and i32 %29, 63, !dbg !6984
  %37 = or i32 %36, %35, !dbg !6985
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !6948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !6950
  %38 = trunc i32 %37 to i16, !dbg !6986
  %39 = or i16 %32, %38, !dbg !6986
  store volatile i16 %39, i16* %30, align 2, !dbg !6987
  ret void, !dbg !6988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.i2c_transaction_size_t* nocapture noundef readonly %3) local_unnamed_addr #2 !dbg !6989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7003, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i32 %1, metadata !7004, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i8 %2, metadata !7005, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata %struct.i2c_transaction_size_t* %3, metadata !7006, metadata !DIExpression()), !dbg !7007
  %5 = zext i8 %2 to i16, !dbg !7008
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7009
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !7009
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !7010
  store volatile i16 %5, i16* %8, align 2, !dbg !7011
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !7012
  store volatile i16 1, i16* %9, align 2, !dbg !7012
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !7013
  store volatile i16 31, i16* %10, align 2, !dbg !7013
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !7014

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7015
  store volatile i16 %13, i16* %14, align 2, !dbg !7015
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7015
  store volatile i16 32, i16* %15, align 2, !dbg !7015
  %16 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7018
  %17 = load i32, i32* %16, align 4, !dbg !7018
  %18 = trunc i32 %17 to i16, !dbg !7019
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7020
  store volatile i16 %18, i16* %19, align 2, !dbg !7021
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7022
  store volatile i16 1, i16* %20, align 2, !dbg !7023
  br label %114, !dbg !7024

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7025
  store volatile i16 %23, i16* %24, align 2, !dbg !7025
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7025
  store volatile i16 36, i16* %25, align 2, !dbg !7025
  %26 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7027
  %27 = load i32, i32* %26, align 4, !dbg !7027
  %28 = trunc i32 %27 to i16, !dbg !7028
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7029
  store volatile i16 %28, i16* %29, align 2, !dbg !7030
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7031
  store volatile i16 1, i16* %30, align 2, !dbg !7032
  br label %114, !dbg !7033

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7034
  store volatile i16 %33, i16* %34, align 2, !dbg !7034
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7034
  store volatile i16 32, i16* %35, align 2, !dbg !7034
  %36 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7036
  %37 = load i32, i32* %36, align 4, !dbg !7036
  %38 = trunc i32 %37 to i16, !dbg !7037
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7038
  store volatile i16 %38, i16* %39, align 2, !dbg !7039
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7040
  store volatile i16 1, i16* %40, align 2, !dbg !7041
  br label %114, !dbg !7042

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7043
  store volatile i16 %43, i16* %44, align 2, !dbg !7043
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7043
  store volatile i16 36, i16* %45, align 2, !dbg !7043
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7045
  store volatile i16 1, i16* %46, align 2, !dbg !7046
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7047
  %48 = load i32, i32* %47, align 4, !dbg !7047
  %49 = trunc i32 %48 to i16, !dbg !7048
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7049
  store volatile i16 %49, i16* %50, align 2, !dbg !7050
  br label %114, !dbg !7051

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7052
  store volatile i16 %53, i16* %54, align 2, !dbg !7052
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7052
  store volatile i16 114, i16* %55, align 2, !dbg !7052
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7054
  %57 = load i32, i32* %56, align 4, !dbg !7054
  %58 = trunc i32 %57 to i16, !dbg !7055
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7056
  store volatile i16 %58, i16* %59, align 2, !dbg !7057
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7058
  store volatile i16 2, i16* %60, align 2, !dbg !7059
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7060
  %62 = load i32, i32* %61, align 4, !dbg !7060
  %63 = trunc i32 %62 to i16, !dbg !7061
  br label %114, !dbg !7062

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7063
  store volatile i16 %66, i16* %67, align 2, !dbg !7063
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7063
  store volatile i16 118, i16* %68, align 2, !dbg !7063
  %69 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7065
  %70 = load i32, i32* %69, align 4, !dbg !7065
  %71 = trunc i32 %70 to i16, !dbg !7066
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7067
  store volatile i16 %71, i16* %72, align 2, !dbg !7068
  %73 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7069
  %74 = load i32, i32* %73, align 4, !dbg !7069
  %75 = trunc i32 %74 to i16, !dbg !7070
  %76 = add i16 %75, 1, !dbg !7070
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7071
  store volatile i16 %76, i16* %77, align 2, !dbg !7072
  br label %114, !dbg !7073

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7074
  store volatile i16 3, i16* %79, align 2, !dbg !7075
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7076
  store volatile i16 38, i16* %80, align 2, !dbg !7077
  %81 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7078
  %82 = load i32, i32* %81, align 4, !dbg !7078
  %83 = trunc i32 %82 to i16, !dbg !7079
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7080
  store volatile i16 %83, i16* %84, align 2, !dbg !7081
  %85 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7082
  %86 = load i32, i32* %85, align 4, !dbg !7082
  %87 = trunc i32 %86 to i16, !dbg !7083
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7084
  store volatile i16 %87, i16* %88, align 2, !dbg !7085
  br label %114, !dbg !7086

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7087
  store volatile i16 3, i16* %90, align 2, !dbg !7088
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7089
  store volatile i16 38, i16* %91, align 2, !dbg !7090
  %92 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7091
  %93 = load i32, i32* %92, align 4, !dbg !7091
  %94 = trunc i32 %93 to i16, !dbg !7092
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7093
  store volatile i16 %94, i16* %95, align 2, !dbg !7094
  %96 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7095
  %97 = load i32, i32* %96, align 4, !dbg !7095
  %98 = trunc i32 %97 to i16, !dbg !7096
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7097
  store volatile i16 %98, i16* %99, align 2, !dbg !7098
  br label %114, !dbg !7099

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7100
  store volatile i16 3, i16* %101, align 2, !dbg !7101
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7102
  store volatile i16 118, i16* %102, align 2, !dbg !7103
  %103 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7104
  %104 = load i32, i32* %103, align 4, !dbg !7104
  %105 = trunc i32 %104 to i16, !dbg !7105
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7106
  store volatile i16 %105, i16* %106, align 2, !dbg !7107
  %107 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7108
  %108 = load i32, i32* %107, align 4, !dbg !7108
  %109 = trunc i32 %108 to i16, !dbg !7109
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7110
  store volatile i16 %109, i16* %110, align 2, !dbg !7111
  %111 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !7112
  %112 = load i32, i32* %111, align 4, !dbg !7112
  %113 = trunc i32 %112 to i16, !dbg !7113
  br label %114, !dbg !7114

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !7115
  store volatile i16 %115, i16* %116, align 2, !dbg !7115
  br label %117, !dbg !7116

117:                                              ; preds = %114, %4
  ret void, !dbg !7116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !7117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7121, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i8* %1, metadata !7122, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %2, metadata !7123, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 0, metadata !7124, metadata !DIExpression()), !dbg !7125
  %4 = icmp eq i32 %2, 0, !dbg !7126
  br i1 %4, label %16, label %5, !dbg !7129

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !7129

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7124, metadata !DIExpression()), !dbg !7125
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !7130
  %12 = load i8, i8* %11, align 1, !dbg !7132
  %13 = zext i8 %12 to i16, !dbg !7132
  store volatile i16 %13, i16* %8, align 2, !dbg !7133
  %14 = add nuw i32 %10, 1, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %14, metadata !7124, metadata !DIExpression()), !dbg !7125
  %15 = icmp eq i32 %14, %2, !dbg !7126
  br i1 %15, label %16, label %9, !dbg !7129, !llvm.loop !7135

16:                                               ; preds = %9, %3
  ret void, !dbg !7137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !7138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7142, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i8* %1, metadata !7143, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i32 %2, metadata !7144, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7146
  %4 = icmp eq i32 %2, 0, !dbg !7147
  br i1 %4, label %16, label %5, !dbg !7150

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !7150

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7145, metadata !DIExpression()), !dbg !7146
  %11 = load volatile i16, i16* %8, align 2, !dbg !7151
  %12 = trunc i16 %11 to i8, !dbg !7153
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !7154
  store i8 %12, i8* %13, align 1, !dbg !7155
  %14 = add nuw i32 %10, 1, !dbg !7156
  call void @llvm.dbg.value(metadata i32 %14, metadata !7145, metadata !DIExpression()), !dbg !7146
  %15 = icmp eq i32 %14, %2, !dbg !7147
  br i1 %15, label %16, label %9, !dbg !7150, !llvm.loop !7157

16:                                               ; preds = %9, %3
  ret void, !dbg !7159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #2 !dbg !7160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7165, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i32 -4, metadata !7167, metadata !DIExpression()), !dbg !7168
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7169
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !7169
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !7170
  %5 = load volatile i16, i16* %4, align 2, !dbg !7170
  call void @llvm.dbg.value(metadata i16 %5, metadata !7166, metadata !DIExpression()), !dbg !7168
  %6 = zext i16 %5 to i32, !dbg !7171
  %7 = and i32 %6, 2, !dbg !7173
  %8 = icmp eq i32 %7, 0, !dbg !7174
  br i1 %8, label %9, label %18, !dbg !7175

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !7176
  %11 = icmp eq i32 %10, 0, !dbg !7178
  br i1 %11, label %12, label %18, !dbg !7179

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !7180
  %14 = icmp eq i32 %13, 0, !dbg !7182
  br i1 %14, label %15, label %18, !dbg !7183

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !7184
  %17 = select i1 %16, i32 0, i32 -4, !dbg !7186
  br label %18, !dbg !7186

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !7168
  call void @llvm.dbg.value(metadata i32 %19, metadata !7167, metadata !DIExpression()), !dbg !7168
  store volatile i16 31, i16* %4, align 2, !dbg !7187
  ret i32 %19, !dbg !7188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_init(i32 noundef %0, %struct.anon* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7200, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata %struct.anon* %1, metadata !7201, metadata !DIExpression()), !dbg !7202
  %3 = icmp eq i32 %0, 0, !dbg !7203
  br i1 %3, label %4, label %11, !dbg !7205

4:                                                ; preds = %2
  %5 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7206
  %6 = tail call i32 @hal_clock_enable(i32 noundef %5) #20, !dbg !7207
  %7 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !7208
  %8 = load i32, i32* %7, align 4, !dbg !7208
  tail call void @i2c_set_frequency(i32 noundef 3, i32 noundef %8) #20, !dbg !7209
  %9 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7210
  %10 = tail call i32 @hal_clock_disable(i32 noundef %9) #20, !dbg !7211
  br label %11, !dbg !7212

11:                                               ; preds = %2, %4
  %12 = phi i32 [ 0, %4 ], [ -102, %2 ], !dbg !7202
  ret i32 %12, !dbg !7213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7214 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7218, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8 %1, metadata !7219, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %2, metadata !7220, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %3, metadata !7221, metadata !DIExpression()), !dbg !7232
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7233
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7233
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7223, metadata !DIExpression()), !dbg !7234
  %7 = icmp eq i32 %0, 0, !dbg !7235
  br i1 %7, label %8, label %32, !dbg !7237

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7238
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7240
  br i1 %11, label %32, label %12, !dbg !7240

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7241
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #20, !dbg !7242
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7243
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !7243
  store volatile i16 0, i16* %16, align 2, !dbg !7243
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7244
  store i32 %3, i32* %17, align 4, !dbg !7245
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7246
  store i32 0, i32* %18, align 4, !dbg !7247
  %19 = shl i8 %1, 1, !dbg !7248
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 0, i8 noundef zeroext %19, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !7249
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !7250
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7251
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !7251
  store volatile i16 1, i16* %21, align 2, !dbg !7251
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 6
  br label %23, !dbg !7252

23:                                               ; preds = %23, %12
  %24 = load volatile i16, i16* %22, align 2, !dbg !7253
  %25 = icmp eq i16 %24, 0, !dbg !7254
  br i1 %25, label %23, label %26, !dbg !7252, !llvm.loop !7255

26:                                               ; preds = %23
  %27 = call i32 @i2c_get_transaction_status(i32 noundef 3) #20, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %27, metadata !7222, metadata !DIExpression()), !dbg !7232
  %28 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7258
  %29 = call i32 @hal_clock_disable(i32 noundef %28) #20, !dbg !7259
  %30 = icmp eq i32 %27, 0, !dbg !7260
  br i1 %30, label %32, label %31, !dbg !7262

31:                                               ; preds = %26
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.pmic_i2c_send_polling, i32 0, i32 0), i32 noundef 126, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i32 0, i32 0), i32 noundef %27) #20, !dbg !7263
  br label %32, !dbg !7265

32:                                               ; preds = %26, %8, %4, %31
  %33 = phi i32 [ %27, %31 ], [ -102, %4 ], [ -101, %8 ], [ 0, %26 ], !dbg !7232
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7266
  ret i32 %33, !dbg !7266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7267 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7271, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8 %1, metadata !7272, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8* %2, metadata !7273, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i32 %3, metadata !7274, metadata !DIExpression()), !dbg !7277
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7278
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7278
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7276, metadata !DIExpression()), !dbg !7279
  %7 = icmp eq i32 %0, 0, !dbg !7280
  br i1 %7, label %8, label %35, !dbg !7282

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7283
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7285
  br i1 %11, label %35, label %12, !dbg !7285

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7286
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #20, !dbg !7287
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7288
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !7288
  store volatile i16 0, i16* %16, align 2, !dbg !7288
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7289
  store i32 0, i32* %17, align 4, !dbg !7290
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7291
  store i32 %3, i32* %18, align 4, !dbg !7292
  %19 = shl i8 %1, 1, !dbg !7293
  %20 = or i8 %19, 1, !dbg !7293
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 2, i8 noundef zeroext %20, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !7294
  %21 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7295
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 18, !dbg !7295
  store volatile i16 1, i16* %22, align 2, !dbg !7295
  %23 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 6
  br label %24, !dbg !7296

24:                                               ; preds = %24, %12
  %25 = load volatile i16, i16* %23, align 2, !dbg !7297
  %26 = icmp eq i16 %25, 0, !dbg !7298
  br i1 %26, label %24, label %27, !dbg !7296, !llvm.loop !7299

27:                                               ; preds = %24
  %28 = call i32 @i2c_get_transaction_status(i32 noundef 3) #20, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %28, metadata !7275, metadata !DIExpression()), !dbg !7277
  %29 = icmp eq i32 %28, 0, !dbg !7302
  br i1 %29, label %30, label %31, !dbg !7304

30:                                               ; preds = %27
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %2, i32 noundef %3) #20, !dbg !7305
  br label %31, !dbg !7307

31:                                               ; preds = %27, %30
  %32 = phi i32 [ 0, %30 ], [ %28, %27 ]
  %33 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7308
  %34 = call i32 @hal_clock_disable(i32 noundef %33) #20, !dbg !7308
  br label %35, !dbg !7309

35:                                               ; preds = %31, %8, %4
  %36 = phi i32 [ -102, %4 ], [ -101, %8 ], [ %32, %31 ], !dbg !7277
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7309
  ret i32 %36, !dbg !7309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_to_receive_polling(i32 noundef %0, %struct.pmic_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7310 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7323, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata %struct.pmic_i2c_send_to_receive_config_t* %1, metadata !7324, metadata !DIExpression()), !dbg !7327
  %4 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !7328
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !7328
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !7326, metadata !DIExpression()), !dbg !7329
  %5 = icmp eq i32 %0, 0, !dbg !7330
  br i1 %5, label %6, label %53, !dbg !7332

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !7333
  %8 = load i8*, i8** %7, align 4, !dbg !7333
  %9 = icmp eq i8* %8, null, !dbg !7335
  br i1 %9, label %53, label %10, !dbg !7336

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !7337
  %12 = load i8*, i8** %11, align 4, !dbg !7337
  %13 = icmp eq i8* %12, null, !dbg !7338
  br i1 %13, label %53, label %14, !dbg !7339

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !7340
  %16 = load i32, i32* %15, align 4, !dbg !7340
  %17 = icmp ugt i32 %16, 8, !dbg !7342
  br i1 %17, label %53, label %18, !dbg !7343

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !7344
  %20 = load i32, i32* %19, align 4, !dbg !7344
  %21 = icmp ugt i32 %20, 8, !dbg !7345
  br i1 %21, label %53, label %22, !dbg !7346

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7347
  %24 = tail call i32 @hal_clock_enable(i32 noundef %23) #20, !dbg !7348
  %25 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7349
  %26 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %25, i32 0, i32 4, !dbg !7349
  store volatile i16 0, i16* %26, align 2, !dbg !7349
  %27 = load i32, i32* %15, align 4, !dbg !7350
  %28 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7351
  store i32 %27, i32* %28, align 4, !dbg !7352
  %29 = load i32, i32* %19, align 4, !dbg !7353
  %30 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7354
  store i32 %29, i32* %30, align 4, !dbg !7355
  %31 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !7356
  %32 = load i8, i8* %31, align 4, !dbg !7356
  %33 = shl i8 %32, 1, !dbg !7356
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 4, i8 noundef zeroext %33, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !7357
  %34 = load i8*, i8** %7, align 4, !dbg !7358
  %35 = load i32, i32* %15, align 4, !dbg !7359
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef %34, i32 noundef %35) #20, !dbg !7360
  %36 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7361
  %37 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 18, !dbg !7361
  store volatile i16 1, i16* %37, align 2, !dbg !7361
  %38 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 6
  br label %39, !dbg !7362

39:                                               ; preds = %39, %22
  %40 = load volatile i16, i16* %38, align 2, !dbg !7363
  %41 = icmp eq i16 %40, 0, !dbg !7364
  br i1 %41, label %39, label %42, !dbg !7362, !llvm.loop !7365

42:                                               ; preds = %39
  %43 = call i32 @i2c_get_transaction_status(i32 noundef 3) #20, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %43, metadata !7325, metadata !DIExpression()), !dbg !7327
  %44 = icmp eq i32 %43, 0, !dbg !7368
  br i1 %44, label %46, label %45, !dbg !7370

45:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.pmic_i2c_send_to_receive_polling, i32 0, i32 0), i32 noundef 227, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef %43) #20, !dbg !7371
  br label %49, !dbg !7373

46:                                               ; preds = %42
  %47 = load i8*, i8** %11, align 4, !dbg !7374
  %48 = load i32, i32* %19, align 4, !dbg !7376
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %47, i32 noundef %48) #20, !dbg !7377
  br label %49, !dbg !7378

49:                                               ; preds = %45, %46
  %50 = phi i32 [ 0, %46 ], [ %43, %45 ]
  %51 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7379
  %52 = call i32 @hal_clock_disable(i32 noundef %51) #20, !dbg !7379
  br label %53, !dbg !7380

53:                                               ; preds = %49, %14, %18, %6, %10, %2
  %54 = phi i32 [ -102, %2 ], [ -101, %10 ], [ -101, %6 ], [ -101, %18 ], [ -101, %14 ], [ %50, %49 ], !dbg !7327
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !7380
  ret i32 %54, !dbg !7380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @eint_ack_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !7381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7385, metadata !DIExpression()), !dbg !7386
  %2 = shl nuw i32 1, %0, !dbg !7387
  %3 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7388
  %4 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %3, i32 0, i32 2, !dbg !7389
  store volatile i32 %2, i32* %4, align 4, !dbg !7390
  ret void, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_init(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !1150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1163, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !1164, metadata !DIExpression()), !dbg !7392
  %3 = load i1, i1* @hal_eint_init.ini_state, align 4, !dbg !7393
  br i1 %3, label %7, label %4, !dbg !7395

4:                                                ; preds = %2
  %5 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 12, void (i32)* noundef nonnull @hal_eint_isr) #20, !dbg !7396
  %6 = tail call i32 @hal_nvic_enable_irq(i32 noundef 12) #20, !dbg !7398
  store i1 true, i1* @hal_eint_init.ini_state, align 4, !dbg !7399
  br label %7, !dbg !7400

7:                                                ; preds = %4, %2
  %8 = icmp ugt i32 %0, 31, !dbg !7401
  %9 = icmp eq %struct.hal_cache_region_config_t* %1, null
  %10 = or i1 %8, %9, !dbg !7403
  br i1 %10, label %22, label %11, !dbg !7403

11:                                               ; preds = %7
  %12 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %12, metadata !1166, metadata !DIExpression()), !dbg !7392
  %13 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 0, !dbg !7405
  store void (i8*)* null, void (i8*)** %13, align 4, !dbg !7406
  %14 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 1, !dbg !7407
  store i8* null, i8** %14, align 4, !dbg !7408
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !7409
  %16 = load i32, i32* %15, align 4, !dbg !7409
  %17 = tail call i32 @hal_eint_set_trigger_mode(i32 noundef %0, i32 noundef %16) #21, !dbg !7410
  call void @llvm.dbg.value(metadata i32 %17, metadata !1165, metadata !DIExpression()), !dbg !7392
  %18 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !7411
  %19 = load i32, i32* %18, align 4, !dbg !7411
  %20 = tail call i32 @hal_eint_set_debounce_time(i32 noundef %0, i32 noundef %19) #21, !dbg !7412
  %21 = or i32 %20, %17, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %21, metadata !1165, metadata !DIExpression()), !dbg !7392
  tail call void @eint_ack_interrupt(i32 noundef %0) #21, !dbg !7414
  tail call fastcc void @eint_enable_domain(i32 noundef %0) #21, !dbg !7415
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !7416
  br label %22, !dbg !7417

22:                                               ; preds = %7, %11
  %23 = phi i32 [ %21, %11 ], [ -2, %7 ], !dbg !7392
  ret i32 %23, !dbg !7418
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_eint_isr(i32 noundef %0) #0 !dbg !7419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7424
  %2 = tail call fastcc i32 @eint_get_status() #21, !dbg !7425
  call void @llvm.dbg.value(metadata i32 %2, metadata !7422, metadata !DIExpression()), !dbg !7424
  %3 = icmp eq i32 %2, 0, !dbg !7426
  br i1 %3, label %21, label %4, !dbg !7428

4:                                                ; preds = %1, %18
  %5 = phi i32 [ %19, %18 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7423, metadata !DIExpression()), !dbg !7424
  %6 = shl nuw i32 1, %5, !dbg !7429
  %7 = and i32 %6, %2, !dbg !7434
  %8 = icmp eq i32 %7, 0, !dbg !7434
  br i1 %8, label %18, label %9, !dbg !7435

9:                                                ; preds = %4
  %10 = tail call i32 @hal_eint_mask(i32 noundef %5) #21, !dbg !7436
  tail call void @eint_ack_interrupt(i32 noundef %5) #21, !dbg !7438
  %11 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %5, i32 0, !dbg !7439
  %12 = load void (i8*)*, void (i8*)** %11, align 4, !dbg !7439
  %13 = icmp eq void (i8*)* %12, null, !dbg !7441
  br i1 %13, label %17, label %14, !dbg !7442

14:                                               ; preds = %9
  %15 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %5, i32 1, !dbg !7443
  %16 = load i8*, i8** %15, align 4, !dbg !7443
  tail call void %12(i8* noundef %16) #20, !dbg !7445
  br label %18, !dbg !7446

17:                                               ; preds = %9
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_eint_isr, i32 0, i32 0), i32 noundef 421, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i32 0, i32 0)) #20, !dbg !7447
  br label %18

18:                                               ; preds = %4, %17, %14
  %19 = add nuw nsw i32 %5, 1, !dbg !7449
  call void @llvm.dbg.value(metadata i32 %19, metadata !7423, metadata !DIExpression()), !dbg !7424
  %20 = icmp eq i32 %19, 32, !dbg !7450
  br i1 %20, label %21, label %4, !dbg !7451, !llvm.loop !7452

21:                                               ; preds = %18, %1
  ret void, !dbg !7454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_trigger_mode(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7459, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.value(metadata i32 %1, metadata !7460, metadata !DIExpression()), !dbg !7462
  %3 = icmp ugt i32 %0, 31, !dbg !7463
  br i1 %3, label %53, label %4, !dbg !7465

4:                                                ; preds = %2
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %5, metadata !7461, metadata !DIExpression()), !dbg !7462
  switch i32 %1, label %51 [
    i32 0, label %6
    i32 1, label %15
    i32 2, label %24
    i32 3, label %33
    i32 4, label %42
  ], !dbg !7467

6:                                                ; preds = %4
  %7 = shl nuw i32 1, %0, !dbg !7468
  %8 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7471
  %9 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %8, i32 0, i32 20, !dbg !7472
  %10 = load volatile i32, i32* %9, align 4, !dbg !7473
  %11 = or i32 %10, %7, !dbg !7473
  store volatile i32 %11, i32* %9, align 4, !dbg !7473
  %12 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %8, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7474
  %13 = load volatile i32, i32* %12, align 4, !dbg !7475
  %14 = and i32 %13, -2049, !dbg !7475
  store volatile i32 %14, i32* %12, align 4, !dbg !7475
  br label %51, !dbg !7476

15:                                               ; preds = %4
  %16 = shl nuw i32 1, %0, !dbg !7477
  %17 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7480
  %18 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %17, i32 0, i32 20, !dbg !7481
  %19 = load volatile i32, i32* %18, align 4, !dbg !7482
  %20 = or i32 %19, %16, !dbg !7482
  store volatile i32 %20, i32* %18, align 4, !dbg !7482
  %21 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %17, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7483
  %22 = load volatile i32, i32* %21, align 4, !dbg !7484
  %23 = or i32 %22, 2048, !dbg !7484
  store volatile i32 %23, i32* %21, align 4, !dbg !7484
  br label %51, !dbg !7485

24:                                               ; preds = %4
  %25 = shl nuw i32 1, %0, !dbg !7486
  %26 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7489
  %27 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %26, i32 0, i32 22, !dbg !7490
  %28 = load volatile i32, i32* %27, align 4, !dbg !7491
  %29 = or i32 %28, %25, !dbg !7491
  store volatile i32 %29, i32* %27, align 4, !dbg !7491
  %30 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %26, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7492
  %31 = load volatile i32, i32* %30, align 4, !dbg !7493
  %32 = and i32 %31, -2049, !dbg !7493
  store volatile i32 %32, i32* %30, align 4, !dbg !7493
  br label %51, !dbg !7494

33:                                               ; preds = %4
  %34 = shl nuw i32 1, %0, !dbg !7495
  %35 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7498
  %36 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %35, i32 0, i32 22, !dbg !7499
  %37 = load volatile i32, i32* %36, align 4, !dbg !7500
  %38 = or i32 %37, %34, !dbg !7500
  store volatile i32 %38, i32* %36, align 4, !dbg !7500
  %39 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %35, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7501
  %40 = load volatile i32, i32* %39, align 4, !dbg !7502
  %41 = or i32 %40, 2048, !dbg !7502
  store volatile i32 %41, i32* %39, align 4, !dbg !7502
  br label %51, !dbg !7503

42:                                               ; preds = %4
  %43 = shl nuw i32 1, %0, !dbg !7504
  %44 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7507
  %45 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %44, i32 0, i32 22, !dbg !7508
  %46 = load volatile i32, i32* %45, align 4, !dbg !7509
  %47 = or i32 %46, %43, !dbg !7509
  store volatile i32 %47, i32* %45, align 4, !dbg !7509
  %48 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %44, i32 0, i32 26, !dbg !7510
  %49 = load volatile i32, i32* %48, align 4, !dbg !7511
  %50 = or i32 %49, %43, !dbg !7511
  store volatile i32 %50, i32* %48, align 4, !dbg !7511
  br label %51

51:                                               ; preds = %6, %24, %42, %33, %15, %4
  %52 = phi i32 [ -2, %4 ], [ 0, %15 ], [ 0, %33 ], [ 0, %42 ], [ 0, %24 ], [ 0, %6 ]
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !7462
  br label %53, !dbg !7512

53:                                               ; preds = %51, %2
  %54 = phi i32 [ -2, %2 ], [ %52, %51 ], !dbg !7462
  ret i32 %54, !dbg !7512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_debounce_time(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7517, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i32 %1, metadata !7518, metadata !DIExpression()), !dbg !7522
  %3 = icmp ugt i32 %0, 31, !dbg !7523
  br i1 %3, label %25, label %4, !dbg !7525

4:                                                ; preds = %2
  %5 = tail call fastcc i32 @eint_caculate_debounce_time(i32 noundef %1) #21, !dbg !7526
  call void @llvm.dbg.value(metadata i32 %5, metadata !7520, metadata !DIExpression()), !dbg !7522
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7527
  call void @llvm.dbg.value(metadata i32 %6, metadata !7519, metadata !DIExpression()), !dbg !7522
  %7 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7528
  %8 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %7, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7529
  %9 = load volatile i32, i32* %8, align 4, !dbg !7529
  call void @llvm.dbg.value(metadata i32 %9, metadata !7521, metadata !DIExpression()), !dbg !7522
  %10 = and i32 %9, -2048, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %10, metadata !7521, metadata !DIExpression()), !dbg !7522
  %11 = or i32 %10, %5, !dbg !7531
  call void @llvm.dbg.value(metadata i32 %11, metadata !7521, metadata !DIExpression()), !dbg !7522
  %12 = icmp eq i32 %1, 0, !dbg !7532
  br i1 %12, label %13, label %15, !dbg !7534

13:                                               ; preds = %4
  %14 = and i32 %11, -32769, !dbg !7535
  call void @llvm.dbg.value(metadata i32 %14, metadata !7521, metadata !DIExpression()), !dbg !7522
  store volatile i32 %14, i32* %8, align 4, !dbg !7537
  br label %24, !dbg !7538

15:                                               ; preds = %4
  %16 = and i32 %11, -2048, !dbg !7539
  store volatile i32 %16, i32* %8, align 4, !dbg !7541
  %17 = tail call i32 @hal_gpt_delay_us(i32 noundef 125) #20, !dbg !7542
  %18 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7543
  %19 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %18, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7544
  store volatile i32 %11, i32* %19, align 4, !dbg !7545
  %20 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7546
  %21 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %20, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7547
  %22 = load volatile i32, i32* %21, align 4, !dbg !7548
  %23 = or i32 %22, -2147483648, !dbg !7548
  store volatile i32 %23, i32* %21, align 4, !dbg !7548
  br label %24

24:                                               ; preds = %15, %13
  tail call void @restore_interrupt_mask(i32 noundef %6) #20, !dbg !7549
  br label %25, !dbg !7550

25:                                               ; preds = %2, %24
  %26 = phi i32 [ 0, %24 ], [ -2, %2 ], !dbg !7522
  ret i32 %26, !dbg !7551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @eint_enable_domain(i32 noundef %0) unnamed_addr #2 !dbg !7552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7557, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32 1, metadata !7558, metadata !DIExpression()), !dbg !7559
  %2 = shl nuw i32 1, %0, !dbg !7560
  %3 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7563
  %4 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %3, i32 0, i32 36, !dbg !7564
  %5 = load volatile i32, i32* %4, align 4, !dbg !7565
  %6 = or i32 %5, %2, !dbg !7565
  store volatile i32 %6, i32* %4, align 4, !dbg !7565
  ret void, !dbg !7566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @eint_caculate_debounce_time(i32 noundef %0) unnamed_addr #10 !dbg !7567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7569, metadata !DIExpression()), !dbg !7572
  %2 = icmp eq i32 %0, 0, !dbg !7573
  br i1 %2, label %47, label %3, !dbg !7575

3:                                                ; preds = %1
  %4 = icmp ult i32 %0, 63, !dbg !7576
  br i1 %4, label %5, label %7, !dbg !7578

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7570, metadata !DIExpression()), !dbg !7572
  %6 = mul nuw nsw i32 %0, 33, !dbg !7579
  call void @llvm.dbg.value(metadata i32 %6, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %47, !dbg !7581

7:                                                ; preds = %3
  %8 = icmp ult i32 %0, 126, !dbg !7582
  br i1 %8, label %9, label %12, !dbg !7584

9:                                                ; preds = %7
  call void @llvm.dbg.value(metadata i32 1, metadata !7570, metadata !DIExpression()), !dbg !7572
  %10 = shl nuw nsw i32 %0, 4, !dbg !7585
  %11 = lshr i32 %0, 1, !dbg !7587
  call void @llvm.dbg.value(metadata i32 undef, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7588

12:                                               ; preds = %7
  %13 = icmp ult i32 %0, 251, !dbg !7589
  br i1 %13, label %14, label %17, !dbg !7591

14:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 2, metadata !7570, metadata !DIExpression()), !dbg !7572
  %15 = shl nuw nsw i32 %0, 3, !dbg !7592
  %16 = lshr i32 %0, 2, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %45, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7595

17:                                               ; preds = %12
  %18 = icmp ult i32 %0, 501, !dbg !7596
  br i1 %18, label %19, label %22, !dbg !7598

19:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 3, metadata !7570, metadata !DIExpression()), !dbg !7572
  %20 = shl nuw nsw i32 %0, 2, !dbg !7599
  %21 = lshr i32 %0, 3, !dbg !7601
  call void @llvm.dbg.value(metadata i32 undef, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7602

22:                                               ; preds = %17
  %23 = icmp ult i32 %0, 1001, !dbg !7603
  br i1 %23, label %24, label %27, !dbg !7605

24:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 4, metadata !7570, metadata !DIExpression()), !dbg !7572
  %25 = shl nuw nsw i32 %0, 1, !dbg !7606
  %26 = lshr i32 %0, 4, !dbg !7608
  call void @llvm.dbg.value(metadata i32 undef, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7609

27:                                               ; preds = %22
  %28 = icmp ult i32 %0, 2001, !dbg !7610
  br i1 %28, label %29, label %31, !dbg !7612

29:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 5, metadata !7570, metadata !DIExpression()), !dbg !7572
  %30 = lshr i32 %0, 5, !dbg !7613
  call void @llvm.dbg.value(metadata i32 undef, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7615

31:                                               ; preds = %27
  %32 = icmp ult i32 %0, 4001, !dbg !7616
  br i1 %32, label %33, label %36, !dbg !7618

33:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i32 6, metadata !7570, metadata !DIExpression()), !dbg !7572
  %34 = lshr i32 %0, 1, !dbg !7619
  %35 = lshr i32 %0, 6, !dbg !7621
  call void @llvm.dbg.value(metadata i32 undef, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7622

36:                                               ; preds = %31
  %37 = icmp ult i32 %0, 8001, !dbg !7623
  br i1 %37, label %38, label %50, !dbg !7625

38:                                               ; preds = %36
  call void @llvm.dbg.value(metadata i32 7, metadata !7570, metadata !DIExpression()), !dbg !7572
  %39 = lshr i32 %0, 2, !dbg !7626
  %40 = lshr i32 %0, 7, !dbg !7628
  call void @llvm.dbg.value(metadata i32 undef, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %41, !dbg !7629

41:                                               ; preds = %14, %24, %33, %38, %29, %19, %9
  %42 = phi i32 [ %16, %14 ], [ %26, %24 ], [ %35, %33 ], [ %40, %38 ], [ %0, %29 ], [ %21, %19 ], [ %11, %9 ]
  %43 = phi i32 [ %15, %14 ], [ %25, %24 ], [ %34, %33 ], [ %39, %38 ], [ %30, %29 ], [ %20, %19 ], [ %10, %9 ]
  %44 = phi i32 [ 8192, %14 ], [ 16384, %24 ], [ 24576, %33 ], [ 28672, %38 ], [ 20480, %29 ], [ 12288, %19 ], [ 4096, %9 ], !dbg !7630
  %45 = add nuw nsw i32 %43, %42, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %45, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 %44, metadata !7570, metadata !DIExpression()), !dbg !7572
  %46 = icmp ult i32 %45, 2047, !dbg !7632
  br i1 %46, label %47, label %50, !dbg !7632

47:                                               ; preds = %1, %5, %41
  %48 = phi i32 [ %45, %41 ], [ 0, %1 ], [ %6, %5 ]
  %49 = phi i32 [ %44, %41 ], [ 0, %1 ], [ 0, %5 ]
  br label %50, !dbg !7632

50:                                               ; preds = %36, %41, %47
  %51 = phi i32 [ %49, %47 ], [ %44, %41 ], [ 28672, %36 ]
  %52 = phi i32 [ %48, %47 ], [ 2047, %41 ], [ 2047, %36 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !7571, metadata !DIExpression()), !dbg !7572
  %53 = or i32 %51, %52, !dbg !7633
  %54 = or i32 %53, 32768, !dbg !7633
  call void @llvm.dbg.value(metadata i32 %54, metadata !7571, metadata !DIExpression()), !dbg !7572
  ret i32 %54, !dbg !7634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @eint_get_status() unnamed_addr #11 !dbg !7635 {
  %1 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7636
  %2 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %1, i32 0, i32 0, !dbg !7637
  %3 = load volatile i32, i32* %2, align 4, !dbg !7637
  ret i32 %3, !dbg !7638
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7643, metadata !DIExpression()), !dbg !7645
  %2 = icmp ugt i32 %0, 31, !dbg !7646
  br i1 %2, label %11, label %3, !dbg !7648

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %4, metadata !7644, metadata !DIExpression()), !dbg !7645
  %5 = shl nuw i32 1, %0, !dbg !7650
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7651
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 8, !dbg !7652
  %8 = load volatile i32, i32* %7, align 4, !dbg !7653
  %9 = or i32 %8, %5, !dbg !7653
  store volatile i32 %9, i32* %7, align 4, !dbg !7653
  %10 = tail call i32 @eint_mask_wakeup_source(i32 noundef %0) #21, !dbg !7654
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7655
  br label %11, !dbg !7656

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7645
  ret i32 %12, !dbg !7657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_mask_wakeup_source(i32 noundef %0) local_unnamed_addr #0 !dbg !7658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7660, metadata !DIExpression()), !dbg !7662
  %2 = icmp ugt i32 %0, 31, !dbg !7663
  br i1 %2, label %10, label %3, !dbg !7665

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %4, metadata !7661, metadata !DIExpression()), !dbg !7662
  %5 = shl nuw i32 1, %0, !dbg !7667
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7668
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 14, !dbg !7669
  %8 = load volatile i32, i32* %7, align 4, !dbg !7670
  %9 = or i32 %8, %5, !dbg !7670
  store volatile i32 %9, i32* %7, align 4, !dbg !7670
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7671
  br label %10, !dbg !7672

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7662
  ret i32 %11, !dbg !7673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !7674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7676, metadata !DIExpression()), !dbg !7678
  %2 = icmp ugt i32 %0, 31, !dbg !7679
  br i1 %2, label %8, label %3, !dbg !7681

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %4, metadata !7677, metadata !DIExpression()), !dbg !7678
  %5 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 0, !dbg !7683
  store void (i8*)* null, void (i8*)** %5, align 4, !dbg !7684
  %6 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 1, !dbg !7685
  store i8* null, i8** %6, align 4, !dbg !7686
  tail call void @eint_ack_interrupt(i32 noundef %0) #21, !dbg !7687
  %7 = tail call i32 @hal_eint_mask(i32 noundef %0) #21, !dbg !7688
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7689
  br label %8, !dbg !7690

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7678
  ret i32 %9, !dbg !7691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !7692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7697, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !7698, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %2, metadata !7699, metadata !DIExpression()), !dbg !7701
  %4 = icmp ugt i32 %0, 31, !dbg !7702
  %5 = icmp eq void (i8*)* %1, null
  %6 = or i1 %4, %5, !dbg !7704
  br i1 %6, label %11, label %7, !dbg !7704

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %8, metadata !7700, metadata !DIExpression()), !dbg !7701
  %9 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 0, !dbg !7706
  store void (i8*)* %1, void (i8*)** %9, align 4, !dbg !7707
  %10 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 1, !dbg !7708
  store i8* %2, i8** %10, align 4, !dbg !7709
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !7710
  br label %11, !dbg !7711

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %3 ], !dbg !7701
  ret i32 %12, !dbg !7712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_debounce_count(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7715, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32 %1, metadata !7716, metadata !DIExpression()), !dbg !7720
  %3 = icmp ult i32 %0, 32, !dbg !7721
  %4 = icmp ult i32 %1, 2048
  %5 = and i1 %3, %4, !dbg !7723
  br i1 %5, label %6, label %31, !dbg !7723

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !7719, metadata !DIExpression()), !dbg !7720
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %7, metadata !7717, metadata !DIExpression()), !dbg !7720
  %8 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7725
  %9 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %8, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7726
  %10 = load volatile i32, i32* %9, align 4, !dbg !7726
  call void @llvm.dbg.value(metadata i32 %10, metadata !7718, metadata !DIExpression()), !dbg !7720
  %11 = and i32 %10, -2048, !dbg !7727
  call void @llvm.dbg.value(metadata i32 %11, metadata !7718, metadata !DIExpression()), !dbg !7720
  %12 = or i32 %11, %1, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %12, metadata !7718, metadata !DIExpression()), !dbg !7720
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !7729
  %13 = icmp eq i32 %1, 0, !dbg !7730
  br i1 %13, label %14, label %18, !dbg !7732

14:                                               ; preds = %6
  %15 = and i32 %12, -32769, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %15, metadata !7718, metadata !DIExpression()), !dbg !7720
  %16 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7735
  %17 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %16, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7736
  store volatile i32 %15, i32* %17, align 4, !dbg !7737
  br label %31, !dbg !7738

18:                                               ; preds = %6
  %19 = and i32 %12, -2048, !dbg !7739
  %20 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7741
  %21 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %20, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7742
  store volatile i32 %19, i32* %21, align 4, !dbg !7743
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 125) #20, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %12, metadata !7718, metadata !DIExpression(DW_OP_constu, 32768, DW_OP_or, DW_OP_stack_value)), !dbg !7720
  %23 = and i32 %12, -61441, !dbg !7745
  %24 = or i32 %23, 32768, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %24, metadata !7718, metadata !DIExpression()), !dbg !7720
  %25 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7746
  %26 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %25, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7747
  store volatile i32 %24, i32* %26, align 4, !dbg !7748
  %27 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7749
  %28 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %27, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7750
  %29 = load volatile i32, i32* %28, align 4, !dbg !7751
  %30 = or i32 %29, -2147483648, !dbg !7751
  store volatile i32 %30, i32* %28, align 4, !dbg !7751
  br label %31

31:                                               ; preds = %14, %18, %2
  %32 = phi i32 [ -2, %2 ], [ 0, %18 ], [ 0, %14 ], !dbg !7720
  ret i32 %32, !dbg !7752
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7755, metadata !DIExpression()), !dbg !7757
  %2 = icmp ugt i32 %0, 31, !dbg !7758
  br i1 %2, label %10, label %3, !dbg !7760

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7761
  call void @llvm.dbg.value(metadata i32 %4, metadata !7756, metadata !DIExpression()), !dbg !7757
  %5 = shl nuw i32 1, %0, !dbg !7762
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7763
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 32, !dbg !7764
  %8 = load volatile i32, i32* %7, align 4, !dbg !7765
  %9 = or i32 %8, %5, !dbg !7765
  store volatile i32 %9, i32* %7, align 4, !dbg !7765
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7766
  br label %10, !dbg !7767

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7757
  ret i32 %11, !dbg !7768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_clear_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7771, metadata !DIExpression()), !dbg !7773
  %2 = icmp ugt i32 %0, 31, !dbg !7774
  br i1 %2, label %10, label %3, !dbg !7776

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7777
  call void @llvm.dbg.value(metadata i32 %4, metadata !7772, metadata !DIExpression()), !dbg !7773
  %5 = shl nuw i32 1, %0, !dbg !7778
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7779
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 34, !dbg !7780
  %8 = load volatile i32, i32* %7, align 4, !dbg !7781
  %9 = or i32 %8, %5, !dbg !7781
  store volatile i32 %9, i32* %7, align 4, !dbg !7781
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7782
  br label %10, !dbg !7783

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !7773
  ret i32 %11, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_unmask_wakeup_source(i32 noundef %0) local_unnamed_addr #0 !dbg !7785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7787, metadata !DIExpression()), !dbg !7789
  %2 = icmp ugt i32 %0, 31, !dbg !7790
  br i1 %2, label %10, label %3, !dbg !7792

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7793
  call void @llvm.dbg.value(metadata i32 %4, metadata !7788, metadata !DIExpression()), !dbg !7789
  %5 = shl nuw i32 1, %0, !dbg !7794
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7795
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 16, !dbg !7796
  %8 = load volatile i32, i32* %7, align 4, !dbg !7797
  %9 = or i32 %8, %5, !dbg !7797
  store volatile i32 %9, i32* %7, align 4, !dbg !7797
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7798
  br label %10, !dbg !7799

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7789
  ret i32 %11, !dbg !7800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_unmask(i32 noundef %0) local_unnamed_addr #0 !dbg !7801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7803, metadata !DIExpression()), !dbg !7805
  %2 = icmp ugt i32 %0, 31, !dbg !7806
  br i1 %2, label %11, label %3, !dbg !7808

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %4, metadata !7804, metadata !DIExpression()), !dbg !7805
  %5 = shl nuw i32 1, %0, !dbg !7810
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7811
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 10, !dbg !7812
  %8 = load volatile i32, i32* %7, align 4, !dbg !7813
  %9 = or i32 %8, %5, !dbg !7813
  store volatile i32 %9, i32* %7, align 4, !dbg !7813
  %10 = tail call i32 @eint_unmask_wakeup_source(i32 noundef %0) #21, !dbg !7814
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !7815
  br label %11, !dbg !7816

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7805
  ret i32 %12, !dbg !7817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1248 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !7818
  br i1 %1, label %9, label %2, !dbg !7820

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1336, metadata !DIExpression()), !dbg !7821
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !7822
  %5 = load i32, i32* %4, align 4, !dbg !7822
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !7827
  %6 = add nuw nsw i32 %3, 1, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %6, metadata !1336, metadata !DIExpression()), !dbg !7821
  %7 = icmp eq i32 %6, 64, !dbg !7829
  br i1 %7, label %8, label %2, !dbg !7830, !llvm.loop !7831

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !7833
  br label %9, !dbg !7834

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !7835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !7836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7840, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i32 %1, metadata !7841, metadata !DIExpression()), !dbg !7842
  %3 = trunc i32 %1 to i8, !dbg !7843
  %4 = shl i8 %3, 2, !dbg !7843
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7846
  store volatile i8 %4, i8* %5, align 1, !dbg !7847
  ret void, !dbg !7848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 -1, metadata !7854, metadata !DIExpression()), !dbg !7855
  %2 = icmp ugt i32 %0, 63, !dbg !7856
  br i1 %2, label %4, label %3, !dbg !7856

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !7858
  call void @llvm.dbg.value(metadata i32 0, metadata !7854, metadata !DIExpression()), !dbg !7855
  br label %4, !dbg !7860

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7855
  ret i32 %5, !dbg !7861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7866, metadata !DIExpression()), !dbg !7867
  %2 = and i32 %0, 31, !dbg !7868
  %3 = shl nuw i32 1, %2, !dbg !7869
  %4 = lshr i32 %0, 5, !dbg !7870
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7871
  store volatile i32 %3, i32* %5, align 4, !dbg !7872
  ret void, !dbg !7873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7876, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 -1, metadata !7877, metadata !DIExpression()), !dbg !7878
  %2 = icmp ugt i32 %0, 63, !dbg !7879
  br i1 %2, label %4, label %3, !dbg !7879

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !7881
  call void @llvm.dbg.value(metadata i32 0, metadata !7877, metadata !DIExpression()), !dbg !7878
  br label %4, !dbg !7883

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7878
  ret i32 %5, !dbg !7884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7887, metadata !DIExpression()), !dbg !7888
  %2 = and i32 %0, 31, !dbg !7889
  %3 = shl nuw i32 1, %2, !dbg !7890
  %4 = lshr i32 %0, 5, !dbg !7891
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7892
  store volatile i32 %3, i32* %5, align 4, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !7895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32 255, metadata !7900, metadata !DIExpression()), !dbg !7901
  %2 = icmp ugt i32 %0, 63, !dbg !7902
  br i1 %2, label %5, label %3, !dbg !7902

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %4, metadata !7900, metadata !DIExpression()), !dbg !7901
  br label %5, !dbg !7906

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7901
  ret i32 %6, !dbg !7907
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !7908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7912, metadata !DIExpression()), !dbg !7913
  %2 = lshr i32 %0, 5, !dbg !7914
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7915
  %4 = load volatile i32, i32* %3, align 4, !dbg !7915
  %5 = and i32 %0, 31, !dbg !7916
  %6 = lshr i32 %4, %5, !dbg !7917
  %7 = and i32 %6, 1, !dbg !7917
  ret i32 %7, !dbg !7918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7921, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 -1, metadata !7922, metadata !DIExpression()), !dbg !7923
  %2 = icmp ugt i32 %0, 63, !dbg !7924
  br i1 %2, label %4, label %3, !dbg !7924

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !7926
  call void @llvm.dbg.value(metadata i32 0, metadata !7922, metadata !DIExpression()), !dbg !7923
  br label %4, !dbg !7928

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7923
  ret i32 %5, !dbg !7929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7932, metadata !DIExpression()), !dbg !7933
  %2 = and i32 %0, 31, !dbg !7934
  %3 = shl nuw i32 1, %2, !dbg !7935
  %4 = lshr i32 %0, 5, !dbg !7936
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7937
  store volatile i32 %3, i32* %5, align 4, !dbg !7938
  ret void, !dbg !7939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7942, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i32 -1, metadata !7943, metadata !DIExpression()), !dbg !7944
  %2 = icmp ugt i32 %0, 63, !dbg !7945
  br i1 %2, label %4, label %3, !dbg !7945

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7947
  call void @llvm.dbg.value(metadata i32 0, metadata !7943, metadata !DIExpression()), !dbg !7944
  br label %4, !dbg !7949

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7944
  ret i32 %5, !dbg !7950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7953, metadata !DIExpression()), !dbg !7954
  %2 = and i32 %0, 31, !dbg !7955
  %3 = shl nuw i32 1, %2, !dbg !7956
  %4 = lshr i32 %0, 5, !dbg !7957
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7958
  store volatile i32 %3, i32* %5, align 4, !dbg !7959
  ret void, !dbg !7960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7965, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i32 %1, metadata !7966, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i32 -1, metadata !7967, metadata !DIExpression()), !dbg !7968
  %3 = icmp ugt i32 %0, 63, !dbg !7969
  br i1 %3, label %5, label %4, !dbg !7969

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !7971
  call void @llvm.dbg.value(metadata i32 0, metadata !7967, metadata !DIExpression()), !dbg !7968
  br label %5, !dbg !7973

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7968
  ret i32 %6, !dbg !7974
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !7975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7977, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i32 68, metadata !7978, metadata !DIExpression()), !dbg !7979
  %2 = icmp ugt i32 %0, 63, !dbg !7980
  br i1 %2, label %5, label %3, !dbg !7980

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %4, metadata !7978, metadata !DIExpression()), !dbg !7979
  br label %5, !dbg !7984

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7979
  ret i32 %6, !dbg !7985
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !7986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7988, metadata !DIExpression()), !dbg !7989
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7990
  %3 = load volatile i8, i8* %2, align 1, !dbg !7990
  %4 = lshr i8 %3, 2, !dbg !7993
  %5 = zext i8 %4 to i32, !dbg !7993
  ret i32 %5, !dbg !7994
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7995 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7997, metadata !DIExpression()), !dbg !7999
  tail call void @Flash_ReturnReady() #20, !dbg !8000
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %1, metadata !7998, metadata !DIExpression()), !dbg !7999
  %2 = icmp ugt i32 %1, 63, !dbg !8002
  br i1 %2, label %12, label %3, !dbg !8002

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !8004
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !8004
  %6 = icmp eq void (i32)* %5, null, !dbg !8006
  br i1 %6, label %7, label %8, !dbg !8007

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7997, metadata !DIExpression()), !dbg !7999
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i32 0, i32 0)) #20, !dbg !8008
  br label %12, !dbg !8010

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !8011
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !8013
  store i32 %9, i32* %10, align 4, !dbg !8014
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !8015
  tail call void %11(i32 noundef %1) #20, !dbg !8016
  call void @llvm.dbg.value(metadata i32 0, metadata !7997, metadata !DIExpression()), !dbg !7999
  br label %12, !dbg !8017

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7999
  ret i32 %13, !dbg !8018
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !8019 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8022
  %2 = and i32 %1, 511, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %2, metadata !8021, metadata !DIExpression()), !dbg !8024
  %3 = add nsw i32 %2, -16, !dbg !8025
  ret i32 %3, !dbg !8026
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !8027 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8028
  %2 = lshr i32 %1, 22, !dbg !8029
  %3 = and i32 %2, 1, !dbg !8029
  ret i32 %3, !dbg !8030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !8031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8035, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !8036, metadata !DIExpression()), !dbg !8038
  %3 = icmp ugt i32 %0, 63, !dbg !8039
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !8039
  br i1 %5, label %10, label %6, !dbg !8039

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8041
  call void @llvm.dbg.value(metadata i32 %7, metadata !8037, metadata !DIExpression()), !dbg !8038
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !8042
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !8043
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !8044
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !8045
  store i32 0, i32* %9, align 4, !dbg !8046
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !8047
  br label %10, !dbg !8048

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !8038
  ret i32 %11, !dbg !8049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !8050 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8054, metadata !DIExpression()), !dbg !8055
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8056
  store i32 %2, i32* %0, align 4, !dbg !8057
  ret i32 0, !dbg !8058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !8059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8063, metadata !DIExpression()), !dbg !8064
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8065
  ret i32 0, !dbg !8066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !8067 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !8071, !srcloc !8077
  call void @llvm.dbg.value(metadata i32 %1, metadata !8075, metadata !DIExpression()) #22, !dbg !8078
  call void @llvm.dbg.value(metadata i32 %1, metadata !8069, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.value(metadata i32 1, metadata !8070, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.value(metadata i32 4, metadata !8080, metadata !DIExpression()) #22, !dbg !8083
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !8085, !srcloc !8086
  tail call void asm sideeffect "dmb", ""() #22, !dbg !8087, !srcloc !8090
  tail call void asm sideeffect "isb", ""() #22, !dbg !8091, !srcloc !8094
  ret i32 %1, !dbg !8095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8098, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata i32 %0, metadata !8080, metadata !DIExpression()) #22, !dbg !8100
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !8102, !srcloc !8086
  tail call void asm sideeffect "dmb", ""() #22, !dbg !8103, !srcloc !8090
  tail call void asm sideeffect "isb", ""() #22, !dbg !8105, !srcloc !8094
  ret void, !dbg !8107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !8108 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %1, metadata !8111, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 0, metadata !8110, metadata !DIExpression()), !dbg !8113
  br label %2, !dbg !8114

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8110, metadata !DIExpression()), !dbg !8113
  tail call fastcc void @NVIC_DisableIRQ.113(i32 noundef %3) #21, !dbg !8116
  %4 = add nuw nsw i32 %3, 1, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %4, metadata !8110, metadata !DIExpression()), !dbg !8113
  %5 = icmp eq i32 %4, 64, !dbg !8120
  br i1 %5, label %6, label %2, !dbg !8114, !llvm.loop !8121

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !8123
  ret void, !dbg !8124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.113(i32 noundef %0) unnamed_addr #2 !dbg !8125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8127, metadata !DIExpression()), !dbg !8128
  %2 = and i32 %0, 31, !dbg !8129
  %3 = shl nuw i32 1, %2, !dbg !8130
  %4 = lshr i32 %0, 5, !dbg !8131
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !8132
  store volatile i32 %3, i32* %5, align 4, !dbg !8133
  ret void, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !8135 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8139
  call void @llvm.dbg.value(metadata i32 %1, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 0, metadata !8137, metadata !DIExpression()), !dbg !8140
  br label %2, !dbg !8141

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8137, metadata !DIExpression()), !dbg !8140
  tail call fastcc void @NVIC_EnableIRQ.114(i32 noundef %3) #21, !dbg !8143
  %4 = add nuw nsw i32 %3, 1, !dbg !8146
  call void @llvm.dbg.value(metadata i32 %4, metadata !8137, metadata !DIExpression()), !dbg !8140
  %5 = icmp eq i32 %4, 64, !dbg !8147
  br i1 %5, label %6, label %2, !dbg !8141, !llvm.loop !8148

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.114(i32 noundef %0) unnamed_addr #2 !dbg !8152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8154, metadata !DIExpression()), !dbg !8155
  %2 = and i32 %0, 31, !dbg !8156
  %3 = shl nuw i32 1, %2, !dbg !8157
  %4 = lshr i32 %0, 5, !dbg !8158
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !8159
  store volatile i32 %3, i32* %5, align 4, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !8162 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8164, metadata !DIExpression()), !dbg !8165
  br label %1, !dbg !8166

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8164, metadata !DIExpression()), !dbg !8165
  tail call fastcc void @NVIC_ClearPendingIRQ.115(i32 noundef %2) #21, !dbg !8168
  %3 = add nuw nsw i32 %2, 1, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %3, metadata !8164, metadata !DIExpression()), !dbg !8165
  %4 = icmp eq i32 %3, 64, !dbg !8172
  br i1 %4, label %5, label %1, !dbg !8166, !llvm.loop !8173

5:                                                ; preds = %1
  ret void, !dbg !8175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.115(i32 noundef %0) unnamed_addr #2 !dbg !8176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8178, metadata !DIExpression()), !dbg !8179
  %2 = and i32 %0, 31, !dbg !8180
  %3 = shl nuw i32 1, %2, !dbg !8181
  %4 = lshr i32 %0, 5, !dbg !8182
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !8183
  store volatile i32 %3, i32* %5, align 4, !dbg !8184
  ret void, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !8186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8188, metadata !DIExpression()), !dbg !8189
  %2 = icmp ugt i32 %0, 63, !dbg !8190
  br i1 %2, label %4, label %3, !dbg !8190

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !8192
  br label %4, !dbg !8193

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8189
  ret i32 %5, !dbg !8194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !8195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8197, metadata !DIExpression()), !dbg !8198
  %2 = and i32 %0, 511, !dbg !8199
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !8200
  tail call void asm sideeffect "dsb", ""() #22, !dbg !8201, !srcloc !8204
  ret void, !dbg !8205
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !8206 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8207
  %2 = and i32 %1, 511, !dbg !8208
  ret i32 %2, !dbg !8209
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i16 @rtc_read_osc32con() local_unnamed_addr #0 !dbg !8210 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8215
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 26, !dbg !8216
  %3 = load volatile i16, i16* %2, align 2, !dbg !8216
  call void @llvm.dbg.value(metadata i16 %3, metadata !8214, metadata !DIExpression()), !dbg !8217
  %4 = and i16 %3, -769, !dbg !8218
  call void @llvm.dbg.value(metadata i16 %4, metadata !8214, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata i16 %4, metadata !8214, metadata !DIExpression()), !dbg !8217
  store volatile i16 %4, i16* %2, align 2, !dbg !8219
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8220
  tail call fastcc void @rtc_reload() #21, !dbg !8221
  %5 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8222
  %6 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %5, i32 0, i32 38, !dbg !8223
  %7 = load volatile i16, i16* %6, align 2, !dbg !8223
  ret i16 %7, !dbg !8224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_write_trigger_wait() unnamed_addr #0 !dbg !8225 {
  tail call fastcc void @rtc_write_trigger() #21, !dbg !8226
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8227
  ret void, !dbg !8228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_reload() unnamed_addr #0 !dbg !8229 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8232
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 0, !dbg !8233
  %3 = load volatile i16, i16* %2, align 2, !dbg !8233
  call void @llvm.dbg.value(metadata i16 %3, metadata !8231, metadata !DIExpression()), !dbg !8234
  %4 = and i16 %3, -17189, !dbg !8235
  call void @llvm.dbg.value(metadata i16 %3, metadata !8231, metadata !DIExpression(DW_OP_constu, 18446744073709534427, DW_OP_and, DW_OP_stack_value)), !dbg !8234
  %5 = or i16 %4, 17184, !dbg !8236
  call void @llvm.dbg.value(metadata i16 %5, metadata !8231, metadata !DIExpression()), !dbg !8234
  store volatile i16 %5, i16* %2, align 2, !dbg !8237
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8238
  ret void, !dbg !8239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @rtc_write_trigger() unnamed_addr #2 !dbg !8240 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8241
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 58, !dbg !8242
  %3 = load volatile i16, i16* %2, align 2, !dbg !8242
  %4 = or i16 %3, 1, !dbg !8243
  store volatile i16 %4, i16* %2, align 2, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_wait_busy() unnamed_addr #0 !dbg !8246 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8248, metadata !DIExpression()), !dbg !8249
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8248, metadata !DIExpression()), !dbg !8249
  br label %6, !dbg !8250

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !8251
  call void @llvm.dbg.value(metadata i32 %4, metadata !8248, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32 %7, metadata !8248, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8249
  %5 = icmp eq i32 %4, 7270126, !dbg !8253
  br i1 %5, label %11, label %6, !dbg !8250, !llvm.loop !8254

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8248, metadata !DIExpression()), !dbg !8249
  %8 = load volatile i16, i16* %2, align 2, !dbg !8256
  %9 = and i16 %8, 64, !dbg !8258
  %10 = icmp eq i16 %9, 0, !dbg !8259
  call void @llvm.dbg.value(metadata i32 %7, metadata !8248, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8249
  br i1 %10, label %19, label %3, !dbg !8260

11:                                               ; preds = %3
  %12 = load volatile i16, i16* %2, align 2, !dbg !8261
  %13 = zext i16 %12 to i32, !dbg !8261
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.rtc_wait_busy, i32 0, i32 0), i32 noundef 143, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i32 0, i32 0), i32 noundef %13) #20, !dbg !8261
  %14 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8264
  %15 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 4, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8264
  %16 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 5, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8264
  %17 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 6, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8264
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.rtc_wait_busy, i32 0, i32 0), i32 noundef 148, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.13, i32 0, i32 0), i32 noundef %14, i32 noundef %15, i32 noundef %16, i32 noundef %17) #20, !dbg !8264
  %18 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 116, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 0) #20, !dbg !8265
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0)) #21, !dbg !8266
  br label %19, !dbg !8267

19:                                               ; preds = %6, %11
  ret void, !dbg !8268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f32k_measure_clock(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !8269 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8273, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i16 %1, metadata !8274, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i16 %2, metadata !8275, metadata !DIExpression()), !dbg !8279
  %4 = load %struct.ABIST_FQMTR_REGISTER_T*, %struct.ABIST_FQMTR_REGISTER_T** @abist_fqmtr_register, align 4, !dbg !8280
  %5 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %4, i32 0, i32 0, !dbg !8281
  %6 = load volatile i16, i16* %5, align 2, !dbg !8282
  %7 = or i16 %6, -16384, !dbg !8282
  store volatile i16 %7, i16* %5, align 2, !dbg !8282
  %8 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8283
  %9 = load %struct.ABIST_FQMTR_REGISTER_T*, %struct.ABIST_FQMTR_REGISTER_T** @abist_fqmtr_register, align 4
  %10 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %9, i32 0, i32 2
  br label %11, !dbg !8284

11:                                               ; preds = %11, %3
  %12 = load volatile i16, i16* %10, align 2, !dbg !8285
  %13 = icmp sgt i16 %12, -1, !dbg !8286
  br i1 %13, label %14, label %11, !dbg !8284, !llvm.loop !8287

14:                                               ; preds = %11
  store volatile i16 0, i16* %10, align 2, !dbg !8289
  %15 = shl i16 %0, 8, !dbg !8290
  %16 = or i16 %15, %1, !dbg !8291
  store volatile i16 %16, i16* %10, align 2, !dbg !8292
  %17 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %9, i32 0, i32 4, !dbg !8293
  store volatile i16 0, i16* %17, align 2, !dbg !8294
  %18 = or i16 %2, -32768, !dbg !8295
  %19 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %9, i32 0, i32 0, !dbg !8296
  store volatile i16 %18, i16* %19, align 2, !dbg !8297
  %20 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8298
  %21 = load %struct.ABIST_FQMTR_REGISTER_T*, %struct.ABIST_FQMTR_REGISTER_T** @abist_fqmtr_register, align 4
  %22 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %21, i32 0, i32 2
  br label %23, !dbg !8299

23:                                               ; preds = %23, %14
  %24 = load volatile i16, i16* %22, align 2, !dbg !8300
  %25 = icmp sgt i16 %24, -1, !dbg !8301
  br i1 %25, label %26, label %23, !dbg !8299, !llvm.loop !8302

26:                                               ; preds = %23
  %27 = zext i16 %2 to i32, !dbg !8304
  %28 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %21, i32 0, i32 8, !dbg !8305
  %29 = load volatile i16, i16* %28, align 2, !dbg !8305
  call void @llvm.dbg.value(metadata i16 %29, metadata !8278, metadata !DIExpression()), !dbg !8279
  %30 = zext i16 %29 to i32, !dbg !8306
  %31 = shl nuw i32 %30, 16, !dbg !8307
  %32 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %21, i32 0, i32 6, !dbg !8308
  %33 = load volatile i16, i16* %32, align 2, !dbg !8308
  %34 = zext i16 %33 to i32, !dbg !8309
  %35 = or i32 %31, %34, !dbg !8310
  call void @llvm.dbg.value(metadata i32 %35, metadata !8276, metadata !DIExpression()), !dbg !8279
  %36 = mul i32 %27, 26000000, !dbg !8311
  %37 = add i32 %36, 26000000, !dbg !8311
  %38 = udiv i32 %37, %35, !dbg !8312
  call void @llvm.dbg.value(metadata i32 %38, metadata !8277, metadata !DIExpression()), !dbg !8279
  ret i32 %38, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_dump_register(i8* noundef %0) unnamed_addr #0 !dbg !8314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8318, metadata !DIExpression()), !dbg !8325
  tail call fastcc void @rtc_reload() #21, !dbg !8326
  %2 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8327
  %3 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 40, !dbg !8328
  %4 = load volatile i16, i16* %3, align 2, !dbg !8328
  call void @llvm.dbg.value(metadata i16 %4, metadata !8319, metadata !DIExpression()), !dbg !8325
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 42, !dbg !8329
  %6 = load volatile i16, i16* %5, align 2, !dbg !8329
  call void @llvm.dbg.value(metadata i16 %6, metadata !8320, metadata !DIExpression()), !dbg !8325
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 54, !dbg !8330
  %8 = load volatile i16, i16* %7, align 2, !dbg !8330
  call void @llvm.dbg.value(metadata i16 %8, metadata !8321, metadata !DIExpression()), !dbg !8325
  %9 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 60, !dbg !8331
  %10 = load volatile i16, i16* %9, align 2, !dbg !8331
  call void @llvm.dbg.value(metadata i16 %10, metadata !8322, metadata !DIExpression()), !dbg !8325
  %11 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 0, !dbg !8332
  %12 = load volatile i16, i16* %11, align 2, !dbg !8332
  call void @llvm.dbg.value(metadata i16 %12, metadata !8323, metadata !DIExpression()), !dbg !8325
  %13 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 24, !dbg !8333
  %14 = load volatile i16, i16* %13, align 2, !dbg !8333
  call void @llvm.dbg.value(metadata i16 %14, metadata !8324, metadata !DIExpression()), !dbg !8325
  %15 = zext i16 %4 to i32, !dbg !8334
  %16 = zext i16 %6 to i32, !dbg !8334
  %17 = zext i16 %8 to i32, !dbg !8334
  %18 = zext i16 %10 to i32, !dbg !8334
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_dump_register, i32 0, i32 0), i32 noundef 555, i8* noundef getelementptr inbounds ([91 x i8], [91 x i8]* @.str.15, i32 0, i32 0), i8* noundef %0, i32 noundef %15, i32 noundef %16, i32 noundef %17, i32 noundef %18) #20, !dbg !8334
  %19 = zext i16 %12 to i32, !dbg !8335
  %20 = zext i16 %14 to i32, !dbg !8335
  %21 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8335
  %22 = zext i16 %21 to i32, !dbg !8335
  %23 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !8335
  %24 = zext i16 %23 to i32, !dbg !8335
  %25 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8335
  %26 = zext i16 %25 to i32, !dbg !8335
  %27 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 210, i16 noundef zeroext 1, i16 noundef zeroext 0) #20, !dbg !8335
  %28 = zext i8 %27 to i32, !dbg !8335
  %29 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 210, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8335
  %30 = zext i8 %29 to i32, !dbg !8335
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_dump_register, i32 0, i32 0), i32 noundef 559, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.16, i32 0, i32 0), i32 noundef %19, i32 noundef %20, i32 noundef %22, i32 noundef %24, i32 noundef %26, i32 noundef %28, i32 noundef %30) #20, !dbg !8335
  ret void, !dbg !8336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i16 @rtc_read_osc32con1() unnamed_addr #0 !dbg !8337 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8340
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 26, !dbg !8341
  %3 = load volatile i16, i16* %2, align 2, !dbg !8341
  call void @llvm.dbg.value(metadata i16 %3, metadata !8339, metadata !DIExpression()), !dbg !8342
  %4 = and i16 %3, -769, !dbg !8343
  call void @llvm.dbg.value(metadata i16 %4, metadata !8339, metadata !DIExpression()), !dbg !8342
  %5 = or i16 %4, 256, !dbg !8344
  call void @llvm.dbg.value(metadata i16 %5, metadata !8339, metadata !DIExpression()), !dbg !8342
  store volatile i16 %5, i16* %2, align 2, !dbg !8345
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8346
  tail call fastcc void @rtc_reload() #21, !dbg !8347
  %6 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8348
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %6, i32 0, i32 38, !dbg !8349
  %8 = load volatile i16, i16* %7, align 2, !dbg !8349
  ret i16 %8, !dbg !8350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i16 @rtc_read_osc32con2() unnamed_addr #0 !dbg !8351 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8354
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 26, !dbg !8355
  %3 = load volatile i16, i16* %2, align 2, !dbg !8355
  call void @llvm.dbg.value(metadata i16 %3, metadata !8353, metadata !DIExpression()), !dbg !8356
  %4 = and i16 %3, -769, !dbg !8357
  call void @llvm.dbg.value(metadata i16 %4, metadata !8353, metadata !DIExpression()), !dbg !8356
  %5 = or i16 %4, 512, !dbg !8358
  call void @llvm.dbg.value(metadata i16 %5, metadata !8353, metadata !DIExpression()), !dbg !8356
  store volatile i16 %5, i16* %2, align 2, !dbg !8359
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8360
  tail call fastcc void @rtc_reload() #21, !dbg !8361
  %6 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8362
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %6, i32 0, i32 38, !dbg !8363
  %8 = load volatile i16, i16* %7, align 2, !dbg !8363
  ret i16 %8, !dbg !8364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f32k_measure_count(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !8365 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8367, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i16 %1, metadata !8368, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i16 %2, metadata !8369, metadata !DIExpression()), !dbg !8372
  %4 = load %struct.ABIST_FQMTR_REGISTER_T*, %struct.ABIST_FQMTR_REGISTER_T** @abist_fqmtr_register, align 4, !dbg !8373
  %5 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %4, i32 0, i32 0, !dbg !8374
  %6 = load volatile i16, i16* %5, align 2, !dbg !8375
  %7 = or i16 %6, -16384, !dbg !8375
  store volatile i16 %7, i16* %5, align 2, !dbg !8375
  %8 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8376
  %9 = load %struct.ABIST_FQMTR_REGISTER_T*, %struct.ABIST_FQMTR_REGISTER_T** @abist_fqmtr_register, align 4
  %10 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %9, i32 0, i32 2
  br label %11, !dbg !8377

11:                                               ; preds = %11, %3
  %12 = load volatile i16, i16* %10, align 2, !dbg !8378
  %13 = icmp sgt i16 %12, -1, !dbg !8379
  br i1 %13, label %14, label %11, !dbg !8377, !llvm.loop !8380

14:                                               ; preds = %11
  store volatile i16 0, i16* %10, align 2, !dbg !8382
  %15 = shl i16 %0, 8, !dbg !8383
  %16 = or i16 %15, %1, !dbg !8384
  store volatile i16 %16, i16* %10, align 2, !dbg !8385
  %17 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %9, i32 0, i32 4, !dbg !8386
  store volatile i16 0, i16* %17, align 2, !dbg !8387
  %18 = or i16 %2, -32768, !dbg !8388
  %19 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %9, i32 0, i32 0, !dbg !8389
  store volatile i16 %18, i16* %19, align 2, !dbg !8390
  %20 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8391
  %21 = load %struct.ABIST_FQMTR_REGISTER_T*, %struct.ABIST_FQMTR_REGISTER_T** @abist_fqmtr_register, align 4
  %22 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %21, i32 0, i32 2
  br label %23, !dbg !8392

23:                                               ; preds = %23, %14
  %24 = load volatile i16, i16* %22, align 2, !dbg !8393
  %25 = icmp sgt i16 %24, -1, !dbg !8394
  br i1 %25, label %26, label %23, !dbg !8392, !llvm.loop !8395

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %21, i32 0, i32 8, !dbg !8397
  %28 = load volatile i16, i16* %27, align 2, !dbg !8397
  call void @llvm.dbg.value(metadata i16 %28, metadata !8371, metadata !DIExpression()), !dbg !8372
  %29 = zext i16 %28 to i32, !dbg !8398
  %30 = shl nuw i32 %29, 16, !dbg !8399
  %31 = getelementptr inbounds %struct.ABIST_FQMTR_REGISTER_T, %struct.ABIST_FQMTR_REGISTER_T* %21, i32 0, i32 6, !dbg !8400
  %32 = load volatile i16, i16* %31, align 2, !dbg !8400
  %33 = zext i16 %32 to i32, !dbg !8401
  %34 = or i32 %30, %33, !dbg !8402
  call void @llvm.dbg.value(metadata i32 %34, metadata !8370, metadata !DIExpression()), !dbg !8372
  ret i32 %34, !dbg !8403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_init() local_unnamed_addr #0 !dbg !8404 {
  %1 = load i1, i1* @rtc_init_done, align 1, !dbg !8407
  br i1 %1, label %3, label %2, !dbg !8409

2:                                                ; preds = %0
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8410
  tail call fastcc void @rtc_unlock_PROT() #21, !dbg !8411
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.116, i32 0, i32 0)) #21, !dbg !8412
  tail call fastcc void @f32k_osc32_Init() #21, !dbg !8413
  tail call fastcc void @rtc_check_alarm_power_on() #21, !dbg !8414
  tail call fastcc void @rtc_enable_2sec_reboot() #21, !dbg !8415
  tail call fastcc void @rtc_init_eint() #21, !dbg !8416
  store i1 true, i1* @rtc_init_done, align 1, !dbg !8417
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.117, i32 0, i32 0)) #21, !dbg !8418
  br label %3, !dbg !8419

3:                                                ; preds = %0, %2
  ret i32 0, !dbg !8420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_unlock_PROT() unnamed_addr #0 !dbg !8421 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8422
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 52, !dbg !8423
  store volatile i16 22634, i16* %2, align 2, !dbg !8424
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8425
  %3 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8426
  %4 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 52, !dbg !8427
  store volatile i16 -28362, i16* %4, align 2, !dbg !8428
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8429
  ret void, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @f32k_osc32_Init() unnamed_addr #0 !dbg !8431 {
  call void @llvm.dbg.value(metadata i8 0, metadata !8435, metadata !DIExpression()), !dbg !8439
  %1 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8440
  %2 = and i16 %1, 32, !dbg !8442
  %3 = icmp eq i16 %2, 0, !dbg !8443
  %4 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8444
  %5 = zext i16 %4 to i32, !dbg !8444
  br i1 %3, label %6, label %7, !dbg !8445

6:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 696, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef %5) #20, !dbg !8446
  call void @llvm.dbg.value(metadata i8 1, metadata !8435, metadata !DIExpression()), !dbg !8439
  br label %9, !dbg !8448

7:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 699, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.119, i32 0, i32 0), i32 noundef %5) #20, !dbg !8449
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 210, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext 0) #20, !dbg !8451
  br label %9

9:                                                ; preds = %7, %6
  call void @llvm.dbg.value(metadata i8 poison, metadata !8435, metadata !DIExpression()), !dbg !8439
  %10 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8452
  %11 = and i16 %10, 4096, !dbg !8454
  %12 = icmp eq i16 %11, 0, !dbg !8455
  br i1 %12, label %13, label %100, !dbg !8456

13:                                               ; preds = %9
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 706, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i32 0, i32 0)) #20, !dbg !8457
  %14 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8459
  %15 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %14, i32 0, i32 54, !dbg !8461
  %16 = load volatile i16, i16* %15, align 2, !dbg !8461
  %17 = and i16 %16, 4096, !dbg !8462
  %18 = icmp eq i16 %17, 0, !dbg !8463
  br i1 %18, label %23, label %19, !dbg !8464

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %14, i32 0, i32 60, !dbg !8465
  %21 = load volatile i16, i16* %20, align 2, !dbg !8465
  %22 = icmp sgt i16 %21, -1, !dbg !8466
  br i1 %22, label %26, label %23, !dbg !8467

23:                                               ; preds = %19, %13
  %24 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !8468
  call void @llvm.dbg.value(metadata i16 %24, metadata !8433, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i16 384, metadata !8433, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext 384) #21, !dbg !8470
  %25 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8471
  call void @llvm.dbg.value(metadata i16 %25, metadata !8433, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i16 556, metadata !8433, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @rtc_write_osc32con2(i16 noundef zeroext 556) #21, !dbg !8472
  br label %26, !dbg !8473

26:                                               ; preds = %23, %19
  %27 = xor i1 %3, true
  %28 = zext i1 %27 to i16
  %29 = select i1 %3, i16 28671, i16 28223
  %30 = select i1 %3, i16 4096, i16 -28608
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 210, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %28) #20, !dbg !8474
  %32 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8474
  %33 = and i16 %32, %29, !dbg !8474
  %34 = or i16 %33, %30, !dbg !8474
  tail call fastcc void @rtc_write_osc32con(i16 noundef zeroext %34) #21, !dbg !8474
  %35 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8476
  %36 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %35, i32 0, i32 54, !dbg !8478
  %37 = load volatile i16, i16* %36, align 2, !dbg !8478
  %38 = and i16 %37, 4096, !dbg !8479
  %39 = icmp eq i16 %38, 0, !dbg !8480
  br i1 %39, label %44, label %40, !dbg !8481

40:                                               ; preds = %26
  %41 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %35, i32 0, i32 60, !dbg !8482
  %42 = load volatile i16, i16* %41, align 2, !dbg !8482
  %43 = icmp sgt i16 %42, -1, !dbg !8483
  br i1 %43, label %100, label %44, !dbg !8484

44:                                               ; preds = %40, %26
  %45 = load volatile i16, i16* %36, align 2, !dbg !8485
  call void @llvm.dbg.value(metadata i16 %45, metadata !8437, metadata !DIExpression()), !dbg !8439
  %46 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %35, i32 0, i32 60, !dbg !8487
  %47 = load volatile i16, i16* %46, align 2, !dbg !8487
  call void @llvm.dbg.value(metadata i16 %47, metadata !8438, metadata !DIExpression()), !dbg !8439
  %48 = zext i16 %45 to i32, !dbg !8488
  %49 = zext i16 %47 to i32, !dbg !8488
  %50 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %35, i32 0, i32 24, !dbg !8488
  %51 = load volatile i16, i16* %50, align 2, !dbg !8488
  %52 = zext i16 %51 to i32, !dbg !8488
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 757, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.18, i32 0, i32 0), i32 noundef %48, i32 noundef %49, i32 noundef %52) #20, !dbg !8488
  tail call fastcc void @rtc_register_init() #21, !dbg !8489
  %53 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8490
  %54 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %53, i32 0, i32 24, !dbg !8490
  %55 = load volatile i16, i16* %54, align 2, !dbg !8490
  call void @llvm.dbg.value(metadata i16 %55, metadata !8433, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i16 %55, metadata !8433, metadata !DIExpression()), !dbg !8439
  %56 = and i16 %55, -12289, !dbg !8490
  call void @llvm.dbg.value(metadata i16 %56, metadata !8433, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i16 %56, metadata !8433, metadata !DIExpression()), !dbg !8439
  %57 = or i16 %56, 8192, !dbg !8490
  call void @llvm.dbg.value(metadata i16 %57, metadata !8433, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i16 %57, metadata !8433, metadata !DIExpression()), !dbg !8439
  store volatile i16 %57, i16* %54, align 2, !dbg !8490
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8490
  tail call fastcc void @rtc_set_power_key() #21, !dbg !8490
  br i1 %3, label %58, label %92, !dbg !8492

58:                                               ; preds = %44
  %59 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8493
  %60 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %59, i32 0, i32 60, !dbg !8495
  %61 = load volatile i16, i16* %60, align 2, !dbg !8495
  call void @llvm.dbg.value(metadata i16 %61, metadata !8433, metadata !DIExpression()), !dbg !8439
  %62 = and i16 %61, -3, !dbg !8496
  call void @llvm.dbg.value(metadata i16 %62, metadata !8433, metadata !DIExpression()), !dbg !8439
  store volatile i16 %62, i16* %60, align 2, !dbg !8497
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8498
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 784, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0)) #20, !dbg !8499
  tail call fastcc void @rtc_set_scxo_mode() #21, !dbg !8500
  %63 = tail call i32 @hal_gpt_delay_us(i32 noundef 50000) #20, !dbg !8501
  %64 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 6, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8502
  call void @llvm.dbg.value(metadata i32 %64, metadata !8434, metadata !DIExpression()), !dbg !8439
  %65 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8503
  %66 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %65, i32 0, i32 56, !dbg !8504
  %67 = load volatile i16, i16* %66, align 2, !dbg !8504
  call void @llvm.dbg.value(metadata i16 %67, metadata !8433, metadata !DIExpression()), !dbg !8439
  %68 = and i16 %67, -16384, !dbg !8505
  call void @llvm.dbg.value(metadata i16 %68, metadata !8433, metadata !DIExpression()), !dbg !8439
  %69 = trunc i32 %64 to i16, !dbg !8506
  %70 = mul i16 %69, -8, !dbg !8506
  call void @llvm.dbg.value(metadata i16 %70, metadata !8436, metadata !DIExpression()), !dbg !8439
  %71 = load i16*, i16** @hw_version_code, align 4, !dbg !8507
  %72 = load volatile i16, i16* %71, align 2, !dbg !8509
  %73 = icmp eq i16 %72, 0, !dbg !8510
  br i1 %73, label %74, label %79, !dbg !8511

74:                                               ; preds = %58
  %75 = icmp sgt i16 %70, 63, !dbg !8512
  br i1 %75, label %84, label %76, !dbg !8515

76:                                               ; preds = %74
  %77 = icmp sgt i16 %70, -64, !dbg !8516
  %78 = select i1 %77, i16 %70, i16 -64, !dbg !8516
  call void @llvm.dbg.value(metadata i16 %78, metadata !8436, metadata !DIExpression()), !dbg !8439
  br label %84

79:                                               ; preds = %58
  %80 = icmp sgt i16 %70, 8191, !dbg !8517
  br i1 %80, label %84, label %81, !dbg !8520

81:                                               ; preds = %79
  %82 = icmp sgt i16 %70, -8192, !dbg !8521
  %83 = select i1 %82, i16 %70, i16 -8192, !dbg !8521
  call void @llvm.dbg.value(metadata i16 %83, metadata !8436, metadata !DIExpression()), !dbg !8439
  br label %84

84:                                               ; preds = %76, %81, %74, %79
  %85 = phi i16 [ %78, %76 ], [ %83, %81 ], [ 63, %74 ], [ 8191, %79 ], !dbg !8522
  call void @llvm.dbg.value(metadata i16 %85, metadata !8436, metadata !DIExpression()), !dbg !8439
  %86 = and i16 %85, 16383, !dbg !8523
  %87 = or i16 %86, %68, !dbg !8524
  call void @llvm.dbg.value(metadata i16 %87, metadata !8433, metadata !DIExpression()), !dbg !8439
  store volatile i16 %87, i16* %66, align 2, !dbg !8525
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8526
  %88 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8527
  %89 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %88, i32 0, i32 56, !dbg !8527
  %90 = load volatile i16, i16* %89, align 2, !dbg !8527
  %91 = zext i16 %90 to i32, !dbg !8527
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 842, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0), i32 noundef %64, i32 noundef %91) #20, !dbg !8527
  br label %107, !dbg !8528

92:                                               ; preds = %44
  %93 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !8529
  call void @llvm.dbg.value(metadata i16 %93, metadata !8433, metadata !DIExpression(DW_OP_constu, 18446744073709551583, DW_OP_and, DW_OP_stack_value)), !dbg !8439
  %94 = or i16 %93, 32, !dbg !8531
  call void @llvm.dbg.value(metadata i16 %94, metadata !8433, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %94) #21, !dbg !8532
  tail call fastcc void @rtc_lpd_init() #21, !dbg !8533
  %95 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8534
  %96 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %95, i32 0, i32 24, !dbg !8535
  %97 = load volatile i16, i16* %96, align 2, !dbg !8535
  call void @llvm.dbg.value(metadata i16 %97, metadata !8433, metadata !DIExpression()), !dbg !8439
  %98 = and i16 %97, -12289, !dbg !8536
  call void @llvm.dbg.value(metadata i16 %98, metadata !8433, metadata !DIExpression()), !dbg !8439
  store volatile i16 %98, i16* %96, align 2, !dbg !8537
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8538
  %99 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 116, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #20, !dbg !8539
  br label %101, !dbg !8528

100:                                              ; preds = %40, %9
  br i1 %3, label %107, label %101, !dbg !8528

101:                                              ; preds = %92, %100
  tail call fastcc void @f32k_eosc32_calibration() #21, !dbg !8540
  %102 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8543
  call void @llvm.dbg.value(metadata i16 %102, metadata !8433, metadata !DIExpression()), !dbg !8439
  %103 = and i16 %102, -449, !dbg !8544
  call void @llvm.dbg.value(metadata i16 %103, metadata !8433, metadata !DIExpression()), !dbg !8439
  %104 = or i16 %103, 64, !dbg !8545
  call void @llvm.dbg.value(metadata i16 %104, metadata !8433, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @rtc_write_osc32con(i16 noundef zeroext %104) #21, !dbg !8546
  %105 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8547
  call void @llvm.dbg.value(metadata i16 %105, metadata !8433, metadata !DIExpression(DW_OP_constu, 18446744073709551103, DW_OP_and, DW_OP_stack_value)), !dbg !8439
  %106 = or i16 %105, 512, !dbg !8548
  call void @llvm.dbg.value(metadata i16 %106, metadata !8433, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @rtc_write_osc32con(i16 noundef zeroext %106) #21, !dbg !8549
  br label %107, !dbg !8550

107:                                              ; preds = %84, %101, %100
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0)) #21, !dbg !8551
  %108 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8552
  %109 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 4, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8552
  %110 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 5, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8552
  %111 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 6, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8552
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.f32k_osc32_Init, i32 0, i32 0), i32 noundef 935, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.22, i32 0, i32 0), i32 noundef %108, i32 noundef %109, i32 noundef %110, i32 noundef %111) #20, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_check_alarm_power_on() unnamed_addr #0 !dbg !8554 {
  %1 = alloca %struct.hal_rtc_time_t, align 1
  %2 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 0, !dbg !8557
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %2) #22, !dbg !8557
  call void @llvm.dbg.declare(metadata %struct.hal_rtc_time_t* %1, metadata !8556, metadata !DIExpression()), !dbg !8558
  %3 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8559
  %4 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 0, !dbg !8561
  %5 = load volatile i16, i16* %4, align 2, !dbg !8561
  %6 = and i16 %5, 4, !dbg !8562
  %7 = icmp eq i16 %6, 0, !dbg !8563
  br i1 %7, label %46, label %8, !dbg !8564

8:                                                ; preds = %0
  %9 = call i32 @hal_rtc_get_time(%struct.hal_rtc_time_t* noundef nonnull %1) #21, !dbg !8565
  %10 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 6, !dbg !8567
  %11 = load i8, i8* %10, align 1, !dbg !8567
  %12 = zext i8 %11 to i32, !dbg !8567
  %13 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 4, !dbg !8567
  %14 = load i8, i8* %13, align 1, !dbg !8567
  %15 = zext i8 %14 to i32, !dbg !8567
  %16 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 3, !dbg !8567
  %17 = load i8, i8* %16, align 1, !dbg !8567
  %18 = zext i8 %17 to i32, !dbg !8567
  %19 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 2, !dbg !8567
  %20 = load i8, i8* %19, align 1, !dbg !8567
  %21 = zext i8 %20 to i32, !dbg !8567
  %22 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 1, !dbg !8567
  %23 = load i8, i8* %22, align 1, !dbg !8567
  %24 = zext i8 %23 to i32, !dbg !8567
  %25 = load i8, i8* %2, align 1, !dbg !8567
  %26 = zext i8 %25 to i32, !dbg !8567
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.rtc_check_alarm_power_on, i32 0, i32 0), i32 noundef 569, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32, i32 0, i32 0), i32 noundef %12, i32 noundef %15, i32 noundef %18, i32 noundef %21, i32 noundef %24, i32 noundef %26) #20, !dbg !8567
  %27 = call i32 @hal_rtc_get_alarm(%struct.hal_rtc_time_t* noundef nonnull %1) #21, !dbg !8568
  %28 = load i8, i8* %10, align 1, !dbg !8569
  %29 = zext i8 %28 to i32, !dbg !8569
  %30 = load i8, i8* %13, align 1, !dbg !8569
  %31 = zext i8 %30 to i32, !dbg !8569
  %32 = load i8, i8* %16, align 1, !dbg !8569
  %33 = zext i8 %32 to i32, !dbg !8569
  %34 = load i8, i8* %19, align 1, !dbg !8569
  %35 = zext i8 %34 to i32, !dbg !8569
  %36 = load i8, i8* %22, align 1, !dbg !8569
  %37 = zext i8 %36 to i32, !dbg !8569
  %38 = load i8, i8* %2, align 1, !dbg !8569
  %39 = zext i8 %38 to i32, !dbg !8569
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.rtc_check_alarm_power_on, i32 0, i32 0), i32 noundef 572, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i32 0, i32 0), i32 noundef %29, i32 noundef %31, i32 noundef %33, i32 noundef %35, i32 noundef %37, i32 noundef %39) #20, !dbg !8569
  %40 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8570
  %41 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %40, i32 0, i32 0, !dbg !8570
  %42 = load volatile i16, i16* %41, align 2, !dbg !8570
  %43 = zext i16 %42 to i32, !dbg !8570
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.rtc_check_alarm_power_on, i32 0, i32 0), i32 noundef 573, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0), i32 noundef %43) #20, !dbg !8570
  %44 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8571
  %45 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %44, i32 0, i32 0, !dbg !8572
  store volatile i16 17156, i16* %45, align 2, !dbg !8573
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8574
  br label %46, !dbg !8575

46:                                               ; preds = %8, %0
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %2) #22, !dbg !8576
  ret void, !dbg !8576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_enable_2sec_reboot() unnamed_addr #0 !dbg !8577 {
  %1 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 209, i16 noundef zeroext 1, i16 noundef zeroext 4) #20, !dbg !8580
  call void @llvm.dbg.value(metadata i8 %1, metadata !8579, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8581
  %2 = icmp eq i8 %1, 0, !dbg !8582
  br i1 %2, label %6, label %3, !dbg !8584

3:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.rtc_enable_2sec_reboot, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i32 0, i32 0)) #20, !dbg !8585
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 209, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #20, !dbg !8587
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 209, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 0) #20, !dbg !8588
  br label %6, !dbg !8589

6:                                                ; preds = %3, %0
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 209, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext 2) #20, !dbg !8590
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 209, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !8591
  %9 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !8592
  call void @llvm.dbg.value(metadata i16 %9, metadata !8579, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i16 %9, metadata !8579, metadata !DIExpression(DW_OP_constu, 18446744073709551607, DW_OP_and, DW_OP_stack_value)), !dbg !8581
  %10 = or i16 %9, 8, !dbg !8593
  call void @llvm.dbg.value(metadata i16 %10, metadata !8579, metadata !DIExpression()), !dbg !8581
  tail call fastcc void @rtc_write_osc32con(i16 noundef zeroext %10) #21, !dbg !8594
  ret void, !dbg !8595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_init_eint() unnamed_addr #0 !dbg !8596 {
  %1 = alloca %struct.hal_cache_region_config_t, align 4
  %2 = bitcast %struct.hal_cache_region_config_t* %1 to i8*, !dbg !8605
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8605
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %1, metadata !8598, metadata !DIExpression()), !dbg !8606
  %3 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !8607
  store i32 0, i32* %3, align 4, !dbg !8608
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !8609
  store i32 0, i32* %4, align 4, !dbg !8610
  %5 = call i32 @hal_eint_init(i32 noundef 29, %struct.hal_cache_region_config_t* noundef nonnull %1) #20, !dbg !8611
  call void @llvm.dbg.value(metadata i32 %5, metadata !8604, metadata !DIExpression()), !dbg !8612
  %6 = icmp eq i32 %5, 0, !dbg !8613
  br i1 %6, label %8, label %7, !dbg !8615

7:                                                ; preds = %0
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.rtc_init_eint, i32 0, i32 0), i32 noundef 527, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i32 0, i32 0), i32 noundef %5) #20, !dbg !8616
  br label %16, !dbg !8618

8:                                                ; preds = %0
  %9 = call i32 @hal_eint_register_callback(i32 noundef 29, void (i8*)* noundef nonnull @rtc_eint_callback, i8* noundef null) #20, !dbg !8619
  call void @llvm.dbg.value(metadata i32 %9, metadata !8604, metadata !DIExpression()), !dbg !8612
  %10 = icmp eq i32 %9, 0, !dbg !8620
  br i1 %10, label %12, label %11, !dbg !8622

11:                                               ; preds = %8
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.rtc_init_eint, i32 0, i32 0), i32 noundef 533, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.37, i32 0, i32 0), i32 noundef %9) #20, !dbg !8623
  br label %16, !dbg !8625

12:                                               ; preds = %8
  %13 = call i32 @hal_eint_unmask(i32 noundef 29) #20, !dbg !8626
  call void @llvm.dbg.value(metadata i32 %13, metadata !8604, metadata !DIExpression()), !dbg !8612
  %14 = icmp eq i32 %13, 0, !dbg !8627
  br i1 %14, label %16, label %15, !dbg !8629

15:                                               ; preds = %12
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.rtc_init_eint, i32 0, i32 0), i32 noundef 539, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), i32 noundef %13) #20, !dbg !8630
  br label %16, !dbg !8632

16:                                               ; preds = %12, %15, %11, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8633
  ret void, !dbg !8633
}

; Function Attrs: noinline nounwind optsize
define internal void @rtc_eint_callback(i8* nocapture noundef readnone %0) #0 !dbg !8634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8636, metadata !DIExpression()), !dbg !8638
  %2 = tail call i32 @hal_eint_mask(i32 noundef 29) #20, !dbg !8639
  %3 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8640
  %4 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 2, !dbg !8641
  %5 = load volatile i16, i16* %4, align 2, !dbg !8641
  call void @llvm.dbg.value(metadata i16 %5, metadata !8637, metadata !DIExpression()), !dbg !8638
  %6 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 0, !dbg !8642
  store volatile i16 17156, i16* %6, align 2, !dbg !8643
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8644
  %7 = zext i16 %5 to i32, !dbg !8645
  %8 = and i32 %7, 1, !dbg !8647
  %9 = icmp eq i32 %8, 0, !dbg !8648
  br i1 %9, label %19, label %10, !dbg !8649

10:                                               ; preds = %1
  %11 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8650
  %12 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %11, i32 0, i32 4, !dbg !8652
  %13 = load volatile i16, i16* %12, align 2, !dbg !8652
  %14 = and i16 %13, -2, !dbg !8653
  store volatile i16 %14, i16* %12, align 2, !dbg !8654
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8655
  %15 = load void (i8*)*, void (i8*)** @rtc_alarm_callback_function, align 4, !dbg !8656
  %16 = icmp eq void (i8*)* %15, null, !dbg !8658
  br i1 %16, label %19, label %17, !dbg !8659

17:                                               ; preds = %10
  %18 = load i8*, i8** @rtc_alarm_user_data, align 4, !dbg !8660
  tail call void %15(i8* noundef %18) #20, !dbg !8662
  br label %19, !dbg !8663

19:                                               ; preds = %10, %17, %1
  %20 = and i32 %7, 2, !dbg !8664
  %21 = icmp ne i32 %20, 0, !dbg !8666
  %22 = load void (i8*)*, void (i8*)** @rtc_time_callback_function, align 4
  %23 = icmp ne void (i8*)* %22, null
  %24 = select i1 %21, i1 %23, i1 false, !dbg !8667
  br i1 %24, label %25, label %27, !dbg !8667

25:                                               ; preds = %19
  %26 = load i8*, i8** @rtc_time_user_data, align 4, !dbg !8668
  tail call void %22(i8* noundef %26) #20, !dbg !8672
  br label %27, !dbg !8673

27:                                               ; preds = %25, %19
  %28 = tail call i32 @hal_eint_unmask(i32 noundef 29) #20, !dbg !8674
  ret void, !dbg !8675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_write_osc32con(i16 noundef zeroext %0) unnamed_addr #0 !dbg !8676 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8682
  %3 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 38, !dbg !8683
  store volatile i16 6743, i16* %3, align 2, !dbg !8684
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8685
  %4 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8686
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 38, !dbg !8687
  store volatile i16 11112, i16* %5, align 2, !dbg !8688
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8689
  %6 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8690
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %6, i32 0, i32 38, !dbg !8691
  store volatile i16 %0, i16* %7, align 2, !dbg !8692
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_rtc_get_time(%struct.hal_rtc_time_t* nocapture noundef writeonly %0) local_unnamed_addr #2 !dbg !8695 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !8697, metadata !DIExpression()), !dbg !8700
  %2 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6
  %3 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4
  %4 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5
  %5 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3
  %6 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2
  %7 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1
  %8 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8701
  br label %9, !dbg !8703

9:                                                ; preds = %9, %1
  %10 = phi %struct.RTC_REGISTER_T* [ %40, %9 ], [ %8, %1 ], !dbg !8701
  %11 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %10, i32 0, i32 10, !dbg !8704
  %12 = load volatile i16, i16* %11, align 2, !dbg !8704
  call void @llvm.dbg.value(metadata i16 %12, metadata !8698, metadata !DIExpression(DW_OP_constu, 63, DW_OP_and, DW_OP_stack_value)), !dbg !8700
  %13 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %10, i32 0, i32 22, !dbg !8705
  %14 = load volatile i16, i16* %13, align 2, !dbg !8705
  %15 = trunc i16 %14 to i8, !dbg !8706
  %16 = and i8 %15, 127, !dbg !8706
  store i8 %16, i8* %2, align 1, !dbg !8707
  %17 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %10, i32 0, i32 20, !dbg !8708
  %18 = load volatile i16, i16* %17, align 2, !dbg !8708
  %19 = trunc i16 %18 to i8, !dbg !8709
  %20 = and i8 %19, 15, !dbg !8709
  store i8 %20, i8* %3, align 1, !dbg !8710
  %21 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %10, i32 0, i32 18, !dbg !8711
  %22 = load volatile i16, i16* %21, align 2, !dbg !8711
  %23 = trunc i16 %22 to i8, !dbg !8712
  %24 = and i8 %23, 7, !dbg !8712
  %25 = add nsw i8 %24, -1, !dbg !8713
  store i8 %25, i8* %4, align 1, !dbg !8714
  %26 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %10, i32 0, i32 16, !dbg !8715
  %27 = load volatile i16, i16* %26, align 2, !dbg !8715
  %28 = trunc i16 %27 to i8, !dbg !8716
  %29 = and i8 %28, 31, !dbg !8716
  store i8 %29, i8* %5, align 1, !dbg !8717
  %30 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8718
  %31 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %30, i32 0, i32 14, !dbg !8719
  %32 = load volatile i16, i16* %31, align 2, !dbg !8719
  %33 = trunc i16 %32 to i8, !dbg !8720
  %34 = and i8 %33, 31, !dbg !8720
  store i8 %34, i8* %6, align 1, !dbg !8721
  %35 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8722
  %36 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %35, i32 0, i32 12, !dbg !8723
  %37 = load volatile i16, i16* %36, align 2, !dbg !8723
  %38 = trunc i16 %37 to i8, !dbg !8724
  %39 = and i8 %38, 63, !dbg !8724
  store i8 %39, i8* %7, align 1, !dbg !8725
  %40 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8726
  %41 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %40, i32 0, i32 10, !dbg !8727
  %42 = load volatile i16, i16* %41, align 2, !dbg !8727
  call void @llvm.dbg.value(metadata i16 %42, metadata !8699, metadata !DIExpression(DW_OP_constu, 63, DW_OP_and, DW_OP_stack_value)), !dbg !8700
  %43 = xor i16 %42, %12, !dbg !8728
  %44 = and i16 %43, 63, !dbg !8728
  %45 = icmp eq i16 %44, 0, !dbg !8728
  br i1 %45, label %46, label %9, !dbg !8729, !llvm.loop !8730

46:                                               ; preds = %9
  %47 = trunc i16 %42 to i8, !dbg !8732
  %48 = and i8 %47, 63, !dbg !8732
  %49 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !8733
  store i8 %48, i8* %49, align 1, !dbg !8734
  ret i32 0, !dbg !8735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_rtc_get_alarm(%struct.hal_rtc_time_t* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !8736 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !8738, metadata !DIExpression()), !dbg !8739
  %2 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8740
  %3 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 36, !dbg !8741
  %4 = load volatile i16, i16* %3, align 2, !dbg !8741
  %5 = trunc i16 %4 to i8, !dbg !8742
  %6 = and i8 %5, 127, !dbg !8742
  %7 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !8743
  store i8 %6, i8* %7, align 1, !dbg !8744
  %8 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 34, !dbg !8745
  %9 = load volatile i16, i16* %8, align 2, !dbg !8745
  %10 = trunc i16 %9 to i8, !dbg !8746
  %11 = and i8 %10, 15, !dbg !8746
  %12 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !8747
  store i8 %11, i8* %12, align 1, !dbg !8748
  %13 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 32, !dbg !8749
  %14 = load volatile i16, i16* %13, align 2, !dbg !8749
  %15 = trunc i16 %14 to i8, !dbg !8750
  %16 = and i8 %15, 7, !dbg !8750
  %17 = add nsw i8 %16, -1, !dbg !8751
  %18 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !8752
  store i8 %17, i8* %18, align 1, !dbg !8753
  %19 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 30, !dbg !8754
  %20 = load volatile i16, i16* %19, align 2, !dbg !8754
  %21 = trunc i16 %20 to i8, !dbg !8755
  %22 = and i8 %21, 31, !dbg !8755
  %23 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !8756
  store i8 %22, i8* %23, align 1, !dbg !8757
  %24 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8758
  %25 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %24, i32 0, i32 28, !dbg !8759
  %26 = load volatile i16, i16* %25, align 2, !dbg !8759
  %27 = trunc i16 %26 to i8, !dbg !8760
  %28 = and i8 %27, 31, !dbg !8760
  %29 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !8761
  store i8 %28, i8* %29, align 1, !dbg !8762
  %30 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8763
  %31 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %30, i32 0, i32 26, !dbg !8764
  %32 = load volatile i16, i16* %31, align 2, !dbg !8764
  %33 = trunc i16 %32 to i8, !dbg !8765
  %34 = and i8 %33, 63, !dbg !8765
  %35 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !8766
  store i8 %34, i8* %35, align 1, !dbg !8767
  %36 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8768
  %37 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %36, i32 0, i32 24, !dbg !8769
  %38 = load volatile i16, i16* %37, align 2, !dbg !8769
  %39 = trunc i16 %38 to i8, !dbg !8770
  %40 = and i8 %39, 63, !dbg !8770
  %41 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !8771
  store i8 %40, i8* %41, align 1, !dbg !8772
  ret i32 0, !dbg !8773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_write_osc32con1(i16 noundef zeroext %0) unnamed_addr #0 !dbg !8774 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %2 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8778
  %3 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 38, !dbg !8779
  store volatile i16 6789, i16* %3, align 2, !dbg !8780
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8781
  %4 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8782
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 38, !dbg !8783
  store volatile i16 -6193, i16* %5, align 2, !dbg !8784
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8785
  %6 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8786
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %6, i32 0, i32 38, !dbg !8787
  store volatile i16 %0, i16* %7, align 2, !dbg !8788
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_write_osc32con2(i16 noundef zeroext %0) unnamed_addr #0 !dbg !8791 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8793, metadata !DIExpression()), !dbg !8794
  %2 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8795
  %3 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %2, i32 0, i32 38, !dbg !8796
  store volatile i16 5715, i16* %3, align 2, !dbg !8797
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8798
  %4 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8799
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 38, !dbg !8800
  store volatile i16 -30440, i16* %5, align 2, !dbg !8801
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8802
  %6 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8803
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %6, i32 0, i32 38, !dbg !8804
  store volatile i16 %0, i16* %7, align 2, !dbg !8805
  tail call fastcc void @rtc_wait_busy() #21, !dbg !8806
  ret void, !dbg !8807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_register_init() unnamed_addr #0 !dbg !8808 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8809
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 0, !dbg !8810
  store volatile i16 17156, i16* %2, align 2, !dbg !8811
  %3 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8812
  %4 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 2, !dbg !8813
  %5 = load volatile i16, i16* %4, align 2, !dbg !8813
  store i16 %5, i16* @rtc_irq_sta, align 2, !dbg !8814
  %6 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 4, !dbg !8815
  store volatile i16 0, i16* %6, align 2, !dbg !8816
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 8, !dbg !8817
  store volatile i16 16, i16* %7, align 2, !dbg !8818
  %8 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 10, !dbg !8819
  store volatile i16 0, i16* %8, align 2, !dbg !8820
  %9 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 12, !dbg !8821
  store volatile i16 0, i16* %9, align 2, !dbg !8822
  %10 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 14, !dbg !8823
  store volatile i16 0, i16* %10, align 2, !dbg !8824
  %11 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 16, !dbg !8825
  store volatile i16 1, i16* %11, align 2, !dbg !8826
  %12 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 18, !dbg !8827
  store volatile i16 1, i16* %12, align 2, !dbg !8828
  %13 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 20, !dbg !8829
  store volatile i16 1, i16* %13, align 2, !dbg !8830
  %14 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 22, !dbg !8831
  store volatile i16 0, i16* %14, align 2, !dbg !8832
  %15 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 24, !dbg !8833
  store volatile i16 0, i16* %15, align 2, !dbg !8834
  %16 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 26, !dbg !8835
  store volatile i16 0, i16* %16, align 2, !dbg !8836
  %17 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 28, !dbg !8837
  store volatile i16 0, i16* %17, align 2, !dbg !8838
  %18 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 30, !dbg !8839
  store volatile i16 1, i16* %18, align 2, !dbg !8840
  %19 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 32, !dbg !8841
  store volatile i16 1, i16* %19, align 2, !dbg !8842
  %20 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 34, !dbg !8843
  store volatile i16 1, i16* %20, align 2, !dbg !8844
  %21 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 36, !dbg !8845
  store volatile i16 0, i16* %21, align 2, !dbg !8846
  %22 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 44, !dbg !8847
  store volatile i16 0, i16* %22, align 2, !dbg !8848
  %23 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 46, !dbg !8849
  store volatile i16 0, i16* %23, align 2, !dbg !8850
  %24 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 48, !dbg !8851
  store volatile i16 0, i16* %24, align 2, !dbg !8852
  %25 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 50, !dbg !8853
  store volatile i16 0, i16* %25, align 2, !dbg !8854
  %26 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 54, !dbg !8855
  store volatile i16 0, i16* %26, align 2, !dbg !8856
  %27 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %3, i32 0, i32 56, !dbg !8857
  store volatile i16 0, i16* %27, align 2, !dbg !8858
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8859
  %28 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8860
  %29 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %28, i32 0, i32 56, !dbg !8861
  store volatile i16 16384, i16* %29, align 2, !dbg !8862
  %30 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %28, i32 0, i32 60, !dbg !8863
  store volatile i16 5120, i16* %30, align 2, !dbg !8864
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_set_power_key() unnamed_addr #0 !dbg !8867 {
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0)) #21, !dbg !8870
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8871
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 40, !dbg !8872
  store volatile i16 -23721, i16* %2, align 2, !dbg !8873
  %3 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 42, !dbg !8874
  store volatile i16 26578, i16* %3, align 2, !dbg !8875
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8876
  tail call fastcc void @rtc_lpd_init() #21, !dbg !8877
  %4 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8878
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 40, !dbg !8879
  store volatile i16 -23721, i16* %5, align 2, !dbg !8880
  %6 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 42, !dbg !8881
  store volatile i16 26578, i16* %6, align 2, !dbg !8882
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8883
  tail call fastcc void @rtc_reload() #21, !dbg !8884
  %7 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8885
  %8 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %7, i32 0, i32 54, !dbg !8887
  %9 = load volatile i16, i16* %8, align 2, !dbg !8887
  %10 = and i16 %9, 4096, !dbg !8888
  %11 = icmp eq i16 %10, 0, !dbg !8889
  br i1 %11, label %12, label %15, !dbg !8890

12:                                               ; preds = %0
  %13 = load volatile i16, i16* %8, align 2, !dbg !8891
  %14 = zext i16 %13 to i32, !dbg !8891
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_set_power_key, i32 0, i32 0), i32 noundef 317, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i32 0, i32 0), i32 noundef %14) #20, !dbg !8891
  br label %15, !dbg !8893

15:                                               ; preds = %12, %0
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0)) #21, !dbg !8894
  %16 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8895
  %17 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %16, i32 0, i32 6, !dbg !8896
  store volatile i16 0, i16* %17, align 2, !dbg !8897
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8898
  %18 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8899
  %19 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %18, i32 0, i32 60, !dbg !8900
  %20 = load volatile i16, i16* %19, align 2, !dbg !8900
  call void @llvm.dbg.value(metadata i16 %20, metadata !8869, metadata !DIExpression()), !dbg !8901
  %21 = or i16 %20, 256, !dbg !8902
  call void @llvm.dbg.value(metadata i16 %21, metadata !8869, metadata !DIExpression()), !dbg !8901
  store volatile i16 %21, i16* %19, align 2, !dbg !8903
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8904
  ret void, !dbg !8905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_set_scxo_mode() unnamed_addr #0 !dbg !8906 {
  %1 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !8909
  call void @llvm.dbg.value(metadata i16 %1, metadata !8908, metadata !DIExpression()), !dbg !8910
  %2 = and i16 %1, -128, !dbg !8911
  call void @llvm.dbg.value(metadata i16 %2, metadata !8908, metadata !DIExpression()), !dbg !8910
  %3 = or i16 %2, 103, !dbg !8912
  call void @llvm.dbg.value(metadata i16 %3, metadata !8908, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %3) #21, !dbg !8913
  %4 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8914
  call void @llvm.dbg.value(metadata i16 %4, metadata !8908, metadata !DIExpression()), !dbg !8910
  %5 = and i16 %4, -1639, !dbg !8915
  call void @llvm.dbg.value(metadata i16 %5, metadata !8908, metadata !DIExpression()), !dbg !8910
  %6 = or i16 %5, 1634, !dbg !8916
  call void @llvm.dbg.value(metadata i16 %6, metadata !8908, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @rtc_write_osc32con2(i16 noundef zeroext %6) #21, !dbg !8917
  %7 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8918
  %8 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8919
  call void @llvm.dbg.value(metadata i16 %8, metadata !8908, metadata !DIExpression()), !dbg !8910
  %9 = and i16 %8, -9, !dbg !8920
  call void @llvm.dbg.value(metadata i16 %9, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i16 %9, metadata !8908, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @rtc_write_osc32con2(i16 noundef zeroext %9) #21, !dbg !8921
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8922
  %11 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8923
  call void @llvm.dbg.value(metadata i16 %11, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i16 %11, metadata !8908, metadata !DIExpression(DW_OP_constu, 18446744073709551614, DW_OP_and, DW_OP_stack_value)), !dbg !8910
  %12 = or i16 %11, 1, !dbg !8924
  call void @llvm.dbg.value(metadata i16 %12, metadata !8908, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @rtc_write_osc32con2(i16 noundef zeroext %12) #21, !dbg !8925
  br label %13, !dbg !8926

13:                                               ; preds = %13, %0
  %14 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8927
  %15 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8929
  call void @llvm.dbg.value(metadata i16 %15, metadata !8908, metadata !DIExpression()), !dbg !8910
  %16 = and i16 %15, 1, !dbg !8930
  %17 = icmp eq i16 %16, 0, !dbg !8931
  br i1 %17, label %13, label %18, !dbg !8932, !llvm.loop !8933

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i16 %15, metadata !8908, metadata !DIExpression(DW_OP_constu, 18446744073709549567, DW_OP_and, DW_OP_stack_value)), !dbg !8910
  %19 = or i16 %15, 2048, !dbg !8935
  call void @llvm.dbg.value(metadata i16 %19, metadata !8908, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @rtc_write_osc32con2(i16 noundef zeroext %19) #21, !dbg !8936
  %20 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8937
  %21 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8938
  call void @llvm.dbg.value(metadata i16 %21, metadata !8908, metadata !DIExpression()), !dbg !8910
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 1000) #20, !dbg !8939
  %23 = tail call fastcc zeroext i16 @rtc_read_osc32con2() #21, !dbg !8940
  call void @llvm.dbg.value(metadata i16 %23, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i16 %23, metadata !8908, metadata !DIExpression(DW_OP_constu, 18446744073709551359, DW_OP_and, DW_OP_stack_value)), !dbg !8910
  %24 = or i16 %23, 256, !dbg !8941
  call void @llvm.dbg.value(metadata i16 %24, metadata !8908, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @rtc_write_osc32con2(i16 noundef zeroext %24) #21, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_lpd_init() unnamed_addr #0 !dbg !8944 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8948
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 60, !dbg !8949
  %3 = load volatile i16, i16* %2, align 2, !dbg !8949
  call void @llvm.dbg.value(metadata i16 %3, metadata !8946, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i16 %3, metadata !8946, metadata !DIExpression(DW_OP_constu, 6, DW_OP_or, DW_OP_stack_value)), !dbg !8950
  %4 = and i16 %3, -15, !dbg !8951
  %5 = or i16 %4, 6, !dbg !8951
  call void @llvm.dbg.value(metadata i16 %5, metadata !8946, metadata !DIExpression()), !dbg !8950
  store volatile i16 %5, i16* %2, align 2, !dbg !8952
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8953
  %6 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8954
  %7 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %6, i32 0, i32 60, !dbg !8955
  %8 = load volatile i16, i16* %7, align 2, !dbg !8955
  call void @llvm.dbg.value(metadata i16 %8, metadata !8946, metadata !DIExpression()), !dbg !8950
  %9 = or i16 %8, 8, !dbg !8956
  call void @llvm.dbg.value(metadata i16 %9, metadata !8946, metadata !DIExpression()), !dbg !8950
  store volatile i16 %9, i16* %7, align 2, !dbg !8957
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8958
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 10000) #20, !dbg !8959
  %11 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8960
  %12 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %11, i32 0, i32 60, !dbg !8961
  %13 = load volatile i16, i16* %12, align 2, !dbg !8961
  call void @llvm.dbg.value(metadata i16 %13, metadata !8946, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i16 %13, metadata !8946, metadata !DIExpression(DW_OP_constu, 6, DW_OP_or, DW_OP_stack_value)), !dbg !8950
  %14 = and i16 %13, -15, !dbg !8962
  %15 = or i16 %14, 6, !dbg !8962
  call void @llvm.dbg.value(metadata i16 %15, metadata !8946, metadata !DIExpression()), !dbg !8950
  store volatile i16 %15, i16* %12, align 2, !dbg !8963
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !8964
  %16 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !8965
  %17 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %16, i32 0, i32 60, !dbg !8967
  %18 = load volatile i16, i16* %17, align 2, !dbg !8967
  %19 = icmp sgt i16 %18, -1, !dbg !8968
  br i1 %19, label %30, label %20, !dbg !8969

20:                                               ; preds = %0
  %21 = load volatile i16, i16* %17, align 2, !dbg !8970
  call void @llvm.dbg.value(metadata i16 %21, metadata !8946, metadata !DIExpression()), !dbg !8950
  %22 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %16, i32 0, i32 24, !dbg !8972
  %23 = load volatile i16, i16* %22, align 2, !dbg !8972
  call void @llvm.dbg.value(metadata i16 %23, metadata !8947, metadata !DIExpression()), !dbg !8950
  %24 = zext i16 %21 to i32, !dbg !8973
  %25 = zext i16 %23 to i32, !dbg !8973
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.rtc_lpd_init, i32 0, i32 0), i32 noundef 287, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i32 0, i32 0), i32 noundef %24, i32 noundef %25) #20, !dbg !8973
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i32 0, i32 0)) #21, !dbg !8974
  %26 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8975
  %27 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 4, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8975
  %28 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 5, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8975
  %29 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 6, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8975
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.rtc_lpd_init, i32 0, i32 0), i32 noundef 293, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.22, i32 0, i32 0), i32 noundef %26, i32 noundef %27, i32 noundef %28, i32 noundef %29) #20, !dbg !8975
  br label %30, !dbg !8976

30:                                               ; preds = %20, %0
  ret void, !dbg !8977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @f32k_eosc32_calibration() unnamed_addr #0 !dbg !8978 {
  call void @llvm.dbg.value(metadata i16 0, metadata !8981, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 31, metadata !8982, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 0, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 0, metadata !8985, metadata !DIExpression()), !dbg !8987
  %1 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !8988
  call void @llvm.dbg.value(metadata i16 %1, metadata !8980, metadata !DIExpression()), !dbg !8987
  %2 = and i16 %1, -32, !dbg !8989
  call void @llvm.dbg.value(metadata i16 %2, metadata !8980, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %2, metadata !8980, metadata !DIExpression()), !dbg !8987
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %2) #21, !dbg !8990
  %3 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 4, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %3, metadata !8985, metadata !DIExpression()), !dbg !8987
  %4 = icmp ult i32 %3, 32769, !dbg !8992
  br i1 %4, label %5, label %6, !dbg !8994

5:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.f32k_eosc32_calibration, i32 0, i32 0), i32 noundef 622, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i32 0, i32 0), i32 noundef %3, i32 noundef 0) #20, !dbg !8995
  br label %49, !dbg !8997

6:                                                ; preds = %0
  %7 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !8998
  call void @llvm.dbg.value(metadata i16 %7, metadata !8980, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %7, metadata !8980, metadata !DIExpression(DW_OP_constu, 18446744073709551584, DW_OP_and, DW_OP_stack_value)), !dbg !8987
  %8 = or i16 %7, 31, !dbg !8999
  call void @llvm.dbg.value(metadata i16 %8, metadata !8980, metadata !DIExpression()), !dbg !8987
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %8) #21, !dbg !9000
  %9 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 4, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %9, metadata !8984, metadata !DIExpression()), !dbg !8987
  %10 = icmp ugt i32 %9, 32767, !dbg !9002
  br i1 %10, label %11, label %12, !dbg !9004

11:                                               ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.f32k_eosc32_calibration, i32 0, i32 0), i32 noundef 632, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.29, i32 0, i32 0), i32 noundef %9, i32 noundef 31) #20, !dbg !9005
  br label %49, !dbg !9007

12:                                               ; preds = %6, %30
  %13 = phi i32 [ %36, %30 ], [ 0, %6 ]
  %14 = phi i32 [ %35, %30 ], [ 31, %6 ]
  %15 = phi i32 [ %34, %30 ], [ %3, %6 ]
  %16 = phi i32 [ %33, %30 ], [ %9, %6 ]
  %17 = phi i16 [ %32, %30 ], [ 0, %6 ]
  %18 = phi i16 [ %31, %30 ], [ 31, %6 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8985, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %16, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %17, metadata !8981, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %18, metadata !8982, metadata !DIExpression()), !dbg !8987
  %19 = add nuw nsw i32 %13, %14, !dbg !9008
  %20 = lshr i32 %19, 1, !dbg !9010
  %21 = trunc i32 %20 to i16, !dbg !9011
  call void @llvm.dbg.value(metadata i16 %21, metadata !8983, metadata !DIExpression()), !dbg !8987
  %22 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !9012
  call void @llvm.dbg.value(metadata i16 %22, metadata !8980, metadata !DIExpression()), !dbg !8987
  %23 = and i16 %22, -32, !dbg !9013
  call void @llvm.dbg.value(metadata i16 %23, metadata !8980, metadata !DIExpression()), !dbg !8987
  %24 = or i16 %23, %21, !dbg !9014
  call void @llvm.dbg.value(metadata i16 %24, metadata !8980, metadata !DIExpression()), !dbg !8987
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %24) #21, !dbg !9015
  %25 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 4, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %25, metadata !8986, metadata !DIExpression()), !dbg !8987
  %26 = icmp ugt i32 %25, 32768, !dbg !9017
  br i1 %26, label %30, label %27, !dbg !9019

27:                                               ; preds = %12
  %28 = icmp eq i32 %25, 32768, !dbg !9020
  br i1 %28, label %29, label %30, !dbg !9022

29:                                               ; preds = %27
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.f32k_eosc32_calibration, i32 0, i32 0), i32 noundef 650, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0), i32 noundef %20) #20, !dbg !9023
  br label %49, !dbg !9025

30:                                               ; preds = %27, %12
  %31 = phi i16 [ %18, %12 ], [ %21, %27 ], !dbg !8987
  %32 = phi i16 [ %21, %12 ], [ %17, %27 ], !dbg !8987
  %33 = phi i32 [ %16, %12 ], [ %25, %27 ], !dbg !8987
  %34 = phi i32 [ %25, %12 ], [ %15, %27 ], !dbg !8987
  call void @llvm.dbg.value(metadata i32 %34, metadata !8985, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %33, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %32, metadata !8981, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %31, metadata !8982, metadata !DIExpression()), !dbg !8987
  %35 = zext i16 %31 to i32, !dbg !9026
  %36 = zext i16 %32 to i32, !dbg !9027
  %37 = sub nsw i32 %35, %36, !dbg !9028
  %38 = icmp sgt i32 %37, 1, !dbg !9029
  br i1 %38, label %12, label %39, !dbg !9030, !llvm.loop !9031

39:                                               ; preds = %30
  %40 = sub i32 32768, %33, !dbg !9033
  %41 = add i32 %34, -32768, !dbg !9035
  %42 = icmp ult i32 %40, %41, !dbg !9036
  %43 = tail call fastcc zeroext i16 @rtc_read_osc32con1() #21, !dbg !9037
  call void @llvm.dbg.value(metadata i16 %43, metadata !8980, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %43, metadata !8980, metadata !DIExpression()), !dbg !8987
  %44 = and i16 %43, -32, !dbg !9037
  call void @llvm.dbg.value(metadata i16 %44, metadata !8980, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i16 %44, metadata !8980, metadata !DIExpression()), !dbg !8987
  br i1 %42, label %45, label %47, !dbg !9038

45:                                               ; preds = %39
  %46 = or i16 %44, %31, !dbg !9039
  call void @llvm.dbg.value(metadata i16 %46, metadata !8980, metadata !DIExpression()), !dbg !8987
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %46) #21, !dbg !9041
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.f32k_eosc32_calibration, i32 0, i32 0), i32 noundef 660, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i32 noundef %33, i32 noundef %35) #20, !dbg !9042
  br label %49, !dbg !9043

47:                                               ; preds = %39
  %48 = or i16 %44, %32, !dbg !9044
  call void @llvm.dbg.value(metadata i16 %48, metadata !8980, metadata !DIExpression()), !dbg !8987
  tail call fastcc void @rtc_write_osc32con1(i16 noundef zeroext %48) #21, !dbg !9046
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.f32k_eosc32_calibration, i32 0, i32 0), i32 noundef 666, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i32 noundef %34, i32 noundef %36) #20, !dbg !9047
  br label %49

49:                                               ; preds = %45, %47, %29, %11, %5
  ret void, !dbg !9048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_deinit() local_unnamed_addr #0 !dbg !9049 {
  call void @llvm.dbg.value(metadata i8 0, metadata !9051, metadata !DIExpression()), !dbg !9053
  %1 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !9054
  %2 = and i16 %1, 32, !dbg !9056
  %3 = icmp eq i16 %2, 0, !dbg !9057
  %4 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !9058
  %5 = zext i16 %4 to i32, !dbg !9058
  br i1 %3, label %6, label %7, !dbg !9059

6:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_rtc_deinit, i32 0, i32 0), i32 noundef 1041, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef %5) #20, !dbg !9060
  call void @llvm.dbg.value(metadata i8 poison, metadata !9051, metadata !DIExpression()), !dbg !9053
  br label %16, !dbg !9062

7:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_rtc_deinit, i32 0, i32 0), i32 noundef 1044, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.119, i32 0, i32 0), i32 noundef %5) #20, !dbg !9063
  call void @llvm.dbg.value(metadata i8 poison, metadata !9051, metadata !DIExpression()), !dbg !9053
  %8 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !9065
  %9 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %8, i32 0, i32 54, !dbg !9068
  %10 = load volatile i16, i16* %9, align 2, !dbg !9068
  call void @llvm.dbg.value(metadata i16 %10, metadata !9052, metadata !DIExpression()), !dbg !9053
  %11 = or i16 %10, -32768, !dbg !9069
  call void @llvm.dbg.value(metadata i16 %11, metadata !9052, metadata !DIExpression()), !dbg !9053
  store volatile i16 %11, i16* %9, align 2, !dbg !9070
  %12 = load i16*, i16** @pmu_k_eosc_con0, align 4, !dbg !9071
  store volatile i16 -8192, i16* %12, align 2, !dbg !9072
  %13 = tail call zeroext i16 @rtc_read_osc32con() #21, !dbg !9073
  call void @llvm.dbg.value(metadata i16 %13, metadata !9052, metadata !DIExpression(DW_OP_constu, 18446744073709551359, DW_OP_and, DW_OP_stack_value)), !dbg !9053
  %14 = or i16 %13, 256, !dbg !9074
  call void @llvm.dbg.value(metadata i16 %14, metadata !9052, metadata !DIExpression()), !dbg !9053
  tail call fastcc void @rtc_write_osc32con(i16 noundef zeroext %14) #21, !dbg !9075
  %15 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 210, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9076
  br label %16, !dbg !9077

16:                                               ; preds = %6, %7
  tail call fastcc void @rtc_dump_register(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.120, i32 0, i32 0)) #21, !dbg !9078
  ret i32 0, !dbg !9079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_set_time(%struct.hal_rtc_time_t* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !9080 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !9086, metadata !DIExpression()), !dbg !9088
  %2 = tail call fastcc zeroext i1 @rtc_is_time_valid(%struct.hal_rtc_time_t* noundef %0) #21, !dbg !9089
  br i1 %2, label %3, label %57, !dbg !9091

3:                                                ; preds = %1
  %4 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !9092
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 22, !dbg !9093
  %6 = load volatile i16, i16* %5, align 2, !dbg !9093
  call void @llvm.dbg.value(metadata i16 %6, metadata !9087, metadata !DIExpression()), !dbg !9088
  %7 = and i16 %6, -128, !dbg !9094
  call void @llvm.dbg.value(metadata i16 %7, metadata !9087, metadata !DIExpression()), !dbg !9088
  %8 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !9095
  %9 = load i8, i8* %8, align 1, !dbg !9095
  %10 = zext i8 %9 to i16, !dbg !9096
  %11 = or i16 %7, %10, !dbg !9097
  call void @llvm.dbg.value(metadata i16 %11, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %11, i16* %5, align 2, !dbg !9098
  %12 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 20, !dbg !9099
  %13 = load volatile i16, i16* %12, align 2, !dbg !9099
  call void @llvm.dbg.value(metadata i16 %13, metadata !9087, metadata !DIExpression()), !dbg !9088
  %14 = and i16 %13, -16, !dbg !9100
  call void @llvm.dbg.value(metadata i16 %14, metadata !9087, metadata !DIExpression()), !dbg !9088
  %15 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !9101
  %16 = load i8, i8* %15, align 1, !dbg !9101
  %17 = zext i8 %16 to i16, !dbg !9102
  %18 = or i16 %14, %17, !dbg !9103
  call void @llvm.dbg.value(metadata i16 %18, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %18, i16* %12, align 2, !dbg !9104
  %19 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 18, !dbg !9105
  %20 = load volatile i16, i16* %19, align 2, !dbg !9105
  call void @llvm.dbg.value(metadata i16 %20, metadata !9087, metadata !DIExpression()), !dbg !9088
  %21 = and i16 %20, -8, !dbg !9106
  call void @llvm.dbg.value(metadata i16 %21, metadata !9087, metadata !DIExpression()), !dbg !9088
  %22 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !9107
  %23 = load i8, i8* %22, align 1, !dbg !9107
  %24 = icmp ugt i8 %23, 6, !dbg !9108
  %25 = zext i8 %23 to i16, !dbg !9109
  %26 = add nuw nsw i16 %25, 1, !dbg !9109
  %27 = select i1 %24, i16 7, i16 %26, !dbg !9109
  %28 = or i16 %27, %21, !dbg !9110
  call void @llvm.dbg.value(metadata i16 %28, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %28, i16* %19, align 2, !dbg !9111
  %29 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 16, !dbg !9112
  %30 = load volatile i16, i16* %29, align 2, !dbg !9112
  call void @llvm.dbg.value(metadata i16 %30, metadata !9087, metadata !DIExpression()), !dbg !9088
  %31 = and i16 %30, -32, !dbg !9113
  call void @llvm.dbg.value(metadata i16 %31, metadata !9087, metadata !DIExpression()), !dbg !9088
  %32 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !9114
  %33 = load i8, i8* %32, align 1, !dbg !9114
  %34 = zext i8 %33 to i16, !dbg !9115
  %35 = or i16 %31, %34, !dbg !9116
  call void @llvm.dbg.value(metadata i16 %35, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %35, i16* %29, align 2, !dbg !9117
  %36 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 14, !dbg !9118
  %37 = load volatile i16, i16* %36, align 2, !dbg !9118
  call void @llvm.dbg.value(metadata i16 %37, metadata !9087, metadata !DIExpression()), !dbg !9088
  %38 = and i16 %37, -32, !dbg !9119
  call void @llvm.dbg.value(metadata i16 %38, metadata !9087, metadata !DIExpression()), !dbg !9088
  %39 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !9120
  %40 = load i8, i8* %39, align 1, !dbg !9120
  %41 = zext i8 %40 to i16, !dbg !9121
  %42 = or i16 %38, %41, !dbg !9122
  call void @llvm.dbg.value(metadata i16 %42, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %42, i16* %36, align 2, !dbg !9123
  %43 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 12, !dbg !9124
  %44 = load volatile i16, i16* %43, align 2, !dbg !9124
  call void @llvm.dbg.value(metadata i16 %44, metadata !9087, metadata !DIExpression()), !dbg !9088
  %45 = and i16 %44, -64, !dbg !9125
  call void @llvm.dbg.value(metadata i16 %45, metadata !9087, metadata !DIExpression()), !dbg !9088
  %46 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !9126
  %47 = load i8, i8* %46, align 1, !dbg !9126
  %48 = zext i8 %47 to i16, !dbg !9127
  %49 = or i16 %45, %48, !dbg !9128
  call void @llvm.dbg.value(metadata i16 %49, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %49, i16* %43, align 2, !dbg !9129
  %50 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 10, !dbg !9130
  %51 = load volatile i16, i16* %50, align 2, !dbg !9130
  call void @llvm.dbg.value(metadata i16 %51, metadata !9087, metadata !DIExpression()), !dbg !9088
  %52 = and i16 %51, -64, !dbg !9131
  call void @llvm.dbg.value(metadata i16 %52, metadata !9087, metadata !DIExpression()), !dbg !9088
  %53 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !9132
  %54 = load i8, i8* %53, align 1, !dbg !9132
  %55 = zext i8 %54 to i16, !dbg !9133
  %56 = or i16 %52, %55, !dbg !9134
  call void @llvm.dbg.value(metadata i16 %56, metadata !9087, metadata !DIExpression()), !dbg !9088
  store volatile i16 %56, i16* %50, align 2, !dbg !9135
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !9136
  br label %57, !dbg !9137

57:                                               ; preds = %1, %3
  %58 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !9088
  ret i32 %58, !dbg !9138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @rtc_is_time_valid(%struct.hal_rtc_time_t* nocapture noundef readonly %0) unnamed_addr #0 !dbg !9139 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8 1, metadata !9144, metadata !DIExpression()), !dbg !9145
  %2 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !9146
  %3 = load i8, i8* %2, align 1, !dbg !9146
  %4 = icmp slt i8 %3, 0, !dbg !9148
  br i1 %4, label %5, label %7, !dbg !9149

5:                                                ; preds = %1
  %6 = zext i8 %3 to i32, !dbg !9150
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 413, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39.121, i32 0, i32 0), i32 noundef %6) #20, !dbg !9151
  call void @llvm.dbg.value(metadata i8 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  br label %7, !dbg !9153

7:                                                ; preds = %5, %1
  call void @llvm.dbg.value(metadata i8 poison, metadata !9144, metadata !DIExpression()), !dbg !9145
  %8 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !9154
  %9 = load i8, i8* %8, align 1, !dbg !9154
  %10 = xor i1 %4, true
  %11 = add i8 %9, -13, !dbg !9156
  %12 = icmp ult i8 %11, -12, !dbg !9156
  br i1 %12, label %13, label %15, !dbg !9156

13:                                               ; preds = %7
  %14 = zext i8 %9 to i32, !dbg !9157
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 418, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i32 0, i32 0), i32 noundef %14) #20, !dbg !9157
  call void @llvm.dbg.value(metadata i8 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  br label %15, !dbg !9159

15:                                               ; preds = %7, %13
  %16 = phi i1 [ false, %13 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9144, metadata !DIExpression()), !dbg !9145
  %17 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !9160
  %18 = load i8, i8* %17, align 1, !dbg !9160
  %19 = icmp ugt i8 %18, 6, !dbg !9162
  br i1 %19, label %20, label %22, !dbg !9163

20:                                               ; preds = %15
  %21 = zext i8 %18 to i32, !dbg !9164
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 423, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i32 0, i32 0), i32 noundef %21) #20, !dbg !9165
  br label %22, !dbg !9167

22:                                               ; preds = %20, %15
  %23 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !9168
  %24 = load i8, i8* %23, align 1, !dbg !9168
  %25 = add i8 %24, -32, !dbg !9170
  %26 = icmp ult i8 %25, -31, !dbg !9170
  br i1 %26, label %27, label %29, !dbg !9170

27:                                               ; preds = %22
  %28 = zext i8 %24 to i32, !dbg !9171
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 427, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42, i32 0, i32 0), i32 noundef %28) #20, !dbg !9171
  call void @llvm.dbg.value(metadata i8 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  br label %29, !dbg !9173

29:                                               ; preds = %22, %27
  %30 = phi i1 [ false, %27 ], [ %16, %22 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9144, metadata !DIExpression()), !dbg !9145
  %31 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !9174
  %32 = load i8, i8* %31, align 1, !dbg !9174
  %33 = icmp ugt i8 %32, 23, !dbg !9176
  br i1 %33, label %34, label %36, !dbg !9177

34:                                               ; preds = %29
  %35 = zext i8 %32 to i32, !dbg !9178
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 432, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i32 0, i32 0), i32 noundef %35) #20, !dbg !9179
  call void @llvm.dbg.value(metadata i8 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  br label %36, !dbg !9181

36:                                               ; preds = %34, %29
  %37 = phi i1 [ false, %34 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9144, metadata !DIExpression()), !dbg !9145
  %38 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !9182
  %39 = load i8, i8* %38, align 1, !dbg !9182
  %40 = icmp ugt i8 %39, 59, !dbg !9184
  br i1 %40, label %41, label %43, !dbg !9185

41:                                               ; preds = %36
  %42 = zext i8 %39 to i32, !dbg !9186
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 437, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 noundef %42) #20, !dbg !9187
  call void @llvm.dbg.value(metadata i8 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  br label %43, !dbg !9189

43:                                               ; preds = %41, %36
  %44 = phi i1 [ false, %41 ], [ %37, %36 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9144, metadata !DIExpression()), !dbg !9145
  %45 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !9190
  %46 = load i8, i8* %45, align 1, !dbg !9190
  %47 = icmp ugt i8 %46, 59, !dbg !9192
  br i1 %47, label %48, label %50, !dbg !9193

48:                                               ; preds = %43
  %49 = zext i8 %46 to i32, !dbg !9194
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.rtc_is_time_valid, i32 0, i32 0), i32 noundef 442, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), i32 noundef %49) #20, !dbg !9195
  call void @llvm.dbg.value(metadata i8 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  br label %50, !dbg !9197

50:                                               ; preds = %48, %43
  %51 = phi i1 [ false, %48 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9144, metadata !DIExpression()), !dbg !9145
  ret i1 %51, !dbg !9198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_set_time_notification_period(i32 noundef %0) local_unnamed_addr #0 !dbg !9199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9204, metadata !DIExpression()), !dbg !9208
  %2 = icmp ult i32 %0, 10, !dbg !9209
  br i1 %2, label %3, label %14, !dbg !9209

3:                                                ; preds = %1
  %4 = getelementptr inbounds [10 x i16], [10 x i16]* @switch.table.hal_rtc_set_time_notification_period, i32 0, i32 %0, !dbg !9209
  %5 = load i16, i16* %4, align 2, !dbg !9209
  %6 = getelementptr inbounds [10 x i16], [10 x i16]* @switch.table.hal_rtc_set_time_notification_period.46, i32 0, i32 %0, !dbg !9209
  %7 = load i16, i16* %6, align 2, !dbg !9209
  call void @llvm.dbg.value(metadata i16 %7, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i16 undef, metadata !9206, metadata !DIExpression()), !dbg !9208
  %8 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !9210
  %9 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %8, i32 0, i32 4, !dbg !9211
  %10 = load volatile i16, i16* %9, align 2, !dbg !9211
  call void @llvm.dbg.value(metadata i16 %10, metadata !9205, metadata !DIExpression()), !dbg !9208
  %11 = and i16 %10, -3, !dbg !9212
  call void @llvm.dbg.value(metadata i16 %11, metadata !9205, metadata !DIExpression()), !dbg !9208
  %12 = or i16 %11, %5, !dbg !9213
  call void @llvm.dbg.value(metadata i16 %12, metadata !9205, metadata !DIExpression()), !dbg !9208
  store volatile i16 %12, i16* %9, align 2, !dbg !9214
  %13 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %8, i32 0, i32 6, !dbg !9215
  store volatile i16 %7, i16* %13, align 2, !dbg !9216
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !9217
  br label %14, !dbg !9218

14:                                               ; preds = %1, %3
  %15 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !9208
  ret i32 %15, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_set_alarm(%struct.hal_rtc_time_t* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !9220 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !9222, metadata !DIExpression()), !dbg !9224
  %2 = tail call fastcc zeroext i1 @rtc_is_time_valid(%struct.hal_rtc_time_t* noundef %0) #21, !dbg !9225
  br i1 %2, label %3, label %57, !dbg !9227

3:                                                ; preds = %1
  %4 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !9228
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 36, !dbg !9229
  %6 = load volatile i16, i16* %5, align 2, !dbg !9229
  call void @llvm.dbg.value(metadata i16 %6, metadata !9223, metadata !DIExpression()), !dbg !9224
  %7 = and i16 %6, -128, !dbg !9230
  call void @llvm.dbg.value(metadata i16 %7, metadata !9223, metadata !DIExpression()), !dbg !9224
  %8 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !9231
  %9 = load i8, i8* %8, align 1, !dbg !9231
  %10 = zext i8 %9 to i16, !dbg !9232
  %11 = or i16 %7, %10, !dbg !9233
  call void @llvm.dbg.value(metadata i16 %11, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %11, i16* %5, align 2, !dbg !9234
  %12 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 34, !dbg !9235
  %13 = load volatile i16, i16* %12, align 2, !dbg !9235
  call void @llvm.dbg.value(metadata i16 %13, metadata !9223, metadata !DIExpression()), !dbg !9224
  %14 = and i16 %13, -16, !dbg !9236
  call void @llvm.dbg.value(metadata i16 %14, metadata !9223, metadata !DIExpression()), !dbg !9224
  %15 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !9237
  %16 = load i8, i8* %15, align 1, !dbg !9237
  %17 = zext i8 %16 to i16, !dbg !9238
  %18 = or i16 %14, %17, !dbg !9239
  call void @llvm.dbg.value(metadata i16 %18, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %18, i16* %12, align 2, !dbg !9240
  %19 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 30, !dbg !9241
  %20 = load volatile i16, i16* %19, align 2, !dbg !9241
  call void @llvm.dbg.value(metadata i16 %20, metadata !9223, metadata !DIExpression()), !dbg !9224
  %21 = and i16 %20, -32, !dbg !9242
  call void @llvm.dbg.value(metadata i16 %21, metadata !9223, metadata !DIExpression()), !dbg !9224
  %22 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !9243
  %23 = load i8, i8* %22, align 1, !dbg !9243
  %24 = zext i8 %23 to i16, !dbg !9244
  %25 = or i16 %21, %24, !dbg !9245
  call void @llvm.dbg.value(metadata i16 %25, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %25, i16* %19, align 2, !dbg !9246
  %26 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 32, !dbg !9247
  %27 = load volatile i16, i16* %26, align 2, !dbg !9247
  call void @llvm.dbg.value(metadata i16 %27, metadata !9223, metadata !DIExpression()), !dbg !9224
  %28 = and i16 %27, -8, !dbg !9248
  call void @llvm.dbg.value(metadata i16 %28, metadata !9223, metadata !DIExpression()), !dbg !9224
  %29 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !9249
  %30 = load i8, i8* %29, align 1, !dbg !9249
  %31 = icmp ugt i8 %30, 6, !dbg !9250
  %32 = zext i8 %30 to i16, !dbg !9251
  %33 = add nuw nsw i16 %32, 1, !dbg !9251
  %34 = select i1 %31, i16 7, i16 %33, !dbg !9251
  %35 = or i16 %34, %28, !dbg !9252
  call void @llvm.dbg.value(metadata i16 %35, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %35, i16* %26, align 2, !dbg !9253
  %36 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 28, !dbg !9254
  %37 = load volatile i16, i16* %36, align 2, !dbg !9254
  call void @llvm.dbg.value(metadata i16 %37, metadata !9223, metadata !DIExpression()), !dbg !9224
  %38 = and i16 %37, -32, !dbg !9255
  call void @llvm.dbg.value(metadata i16 %38, metadata !9223, metadata !DIExpression()), !dbg !9224
  %39 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !9256
  %40 = load i8, i8* %39, align 1, !dbg !9256
  %41 = zext i8 %40 to i16, !dbg !9257
  %42 = or i16 %38, %41, !dbg !9258
  call void @llvm.dbg.value(metadata i16 %42, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %42, i16* %36, align 2, !dbg !9259
  %43 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 26, !dbg !9260
  %44 = load volatile i16, i16* %43, align 2, !dbg !9260
  call void @llvm.dbg.value(metadata i16 %44, metadata !9223, metadata !DIExpression()), !dbg !9224
  %45 = and i16 %44, -64, !dbg !9261
  call void @llvm.dbg.value(metadata i16 %45, metadata !9223, metadata !DIExpression()), !dbg !9224
  %46 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !9262
  %47 = load i8, i8* %46, align 1, !dbg !9262
  %48 = zext i8 %47 to i16, !dbg !9263
  %49 = or i16 %45, %48, !dbg !9264
  call void @llvm.dbg.value(metadata i16 %49, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %49, i16* %43, align 2, !dbg !9265
  %50 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %4, i32 0, i32 24, !dbg !9266
  %51 = load volatile i16, i16* %50, align 2, !dbg !9266
  call void @llvm.dbg.value(metadata i16 %51, metadata !9223, metadata !DIExpression()), !dbg !9224
  %52 = and i16 %51, -64, !dbg !9267
  call void @llvm.dbg.value(metadata i16 %52, metadata !9223, metadata !DIExpression()), !dbg !9224
  %53 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !9268
  %54 = load i8, i8* %53, align 1, !dbg !9268
  %55 = zext i8 %54 to i16, !dbg !9269
  %56 = or i16 %52, %55, !dbg !9270
  call void @llvm.dbg.value(metadata i16 %56, metadata !9223, metadata !DIExpression()), !dbg !9224
  store volatile i16 %56, i16* %50, align 2, !dbg !9271
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !9272
  br label %57, !dbg !9273

57:                                               ; preds = %1, %3
  %58 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !9224
  ret i32 %58, !dbg !9274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_enable_alarm() local_unnamed_addr #0 !dbg !9275 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !9278
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 4, !dbg !9279
  %3 = load volatile i16, i16* %2, align 2, !dbg !9279
  call void @llvm.dbg.value(metadata i16 %3, metadata !9277, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i16 %3, metadata !9277, metadata !DIExpression(DW_OP_constu, 18446744073709551614, DW_OP_and, DW_OP_stack_value)), !dbg !9280
  %4 = or i16 %3, 1, !dbg !9281
  call void @llvm.dbg.value(metadata i16 %4, metadata !9277, metadata !DIExpression()), !dbg !9280
  store volatile i16 %4, i16* %2, align 2, !dbg !9282
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 0, !dbg !9283
  %6 = load volatile i16, i16* %5, align 2, !dbg !9283
  call void @llvm.dbg.value(metadata i16 %6, metadata !9277, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i16 %6, metadata !9277, metadata !DIExpression(DW_OP_constu, 18446744073709551614, DW_OP_and, DW_OP_stack_value)), !dbg !9280
  %7 = or i16 %6, 17153, !dbg !9284
  call void @llvm.dbg.value(metadata i16 %7, metadata !9277, metadata !DIExpression()), !dbg !9280
  store volatile i16 %7, i16* %5, align 2, !dbg !9285
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !9286
  ret i32 0, !dbg !9287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_disable_alarm() local_unnamed_addr #0 !dbg !9288 {
  %1 = load %struct.RTC_REGISTER_T*, %struct.RTC_REGISTER_T** @rtc_register, align 4, !dbg !9291
  %2 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 4, !dbg !9292
  %3 = load volatile i16, i16* %2, align 2, !dbg !9292
  call void @llvm.dbg.value(metadata i16 %3, metadata !9290, metadata !DIExpression()), !dbg !9293
  %4 = and i16 %3, -2, !dbg !9294
  call void @llvm.dbg.value(metadata i16 %4, metadata !9290, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i16 %4, metadata !9290, metadata !DIExpression()), !dbg !9293
  store volatile i16 %4, i16* %2, align 2, !dbg !9295
  %5 = getelementptr inbounds %struct.RTC_REGISTER_T, %struct.RTC_REGISTER_T* %1, i32 0, i32 0, !dbg !9296
  %6 = load volatile i16, i16* %5, align 2, !dbg !9296
  call void @llvm.dbg.value(metadata i16 %6, metadata !9290, metadata !DIExpression()), !dbg !9293
  %7 = and i16 %6, -17154, !dbg !9297
  call void @llvm.dbg.value(metadata i16 %6, metadata !9290, metadata !DIExpression(DW_OP_constu, 18446744073709534462, DW_OP_and, DW_OP_stack_value)), !dbg !9293
  %8 = or i16 %7, 17152, !dbg !9298
  call void @llvm.dbg.value(metadata i16 %8, metadata !9290, metadata !DIExpression()), !dbg !9293
  store volatile i16 %8, i16* %5, align 2, !dbg !9299
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !9300
  ret i32 0, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_rtc_set_time_callback(void (i8*)* noundef %0, i8* noundef %1) local_unnamed_addr #6 !dbg !9302 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !9306, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata i8* %1, metadata !9307, metadata !DIExpression()), !dbg !9308
  store void (i8*)* %0, void (i8*)** @rtc_time_callback_function, align 4, !dbg !9309
  store i8* %1, i8** @rtc_time_user_data, align 4, !dbg !9310
  ret i32 0, !dbg !9311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_rtc_set_alarm_callback(void (i8*)* noundef %0, i8* noundef %1) local_unnamed_addr #6 !dbg !9312 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i8* %1, metadata !9318, metadata !DIExpression()), !dbg !9319
  store void (i8*)* %0, void (i8*)** @rtc_alarm_callback_function, align 4, !dbg !9320
  store i8* %1, i8** @rtc_alarm_user_data, align 4, !dbg !9321
  ret i32 0, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_get_f32k_frequency(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !9323 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9327, metadata !DIExpression()), !dbg !9328
  %2 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 99) #21, !dbg !9329
  store i32 %2, i32* %0, align 4, !dbg !9330
  ret i32 0, !dbg !9331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtc_set_data(i16 noundef zeroext %0, i8* noundef %1, i16 noundef zeroext %2, i1 noundef zeroext %3) local_unnamed_addr #0 !dbg !9332 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9336, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %1, metadata !9337, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i16 %2, metadata !9338, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i1 %3, metadata !9339, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9342
  call void @llvm.dbg.value(metadata i32 0, metadata !9340, metadata !DIExpression()), !dbg !9342
  %5 = zext i16 %0 to i32, !dbg !9343
  %6 = icmp ugt i16 %0, 12, !dbg !9345
  %7 = zext i16 %2 to i32, !dbg !9346
  br i1 %6, label %15, label %8, !dbg !9347

8:                                                ; preds = %4
  %9 = add nuw nsw i32 %7, %5, !dbg !9348
  %10 = icmp ugt i32 %9, 13, !dbg !9349
  %11 = icmp eq i8* %1, null
  %12 = or i1 %11, %10, !dbg !9350
  br i1 %12, label %15, label %13, !dbg !9350

13:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !9340, metadata !DIExpression()), !dbg !9342
  %14 = icmp eq i16 %2, 0, !dbg !9351
  br i1 %14, label %45, label %16, !dbg !9354

15:                                               ; preds = %4, %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.rtc_set_data, i32 0, i32 0), i32 noundef 1374, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i8* noundef %1) #20, !dbg !9355
  br label %45, !dbg !9357

16:                                               ; preds = %13, %42
  %17 = phi i32 [ %43, %42 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9340, metadata !DIExpression()), !dbg !9342
  br i1 %3, label %18, label %37, !dbg !9358

18:                                               ; preds = %16
  %19 = add nuw nsw i32 %17, %5, !dbg !9360
  %20 = getelementptr inbounds [13 x %struct.rtc_spare_register_information], [13 x %struct.rtc_spare_register_information]* @rtc_spare_register_table, i32 0, i32 %19, i32 0, !dbg !9363
  %21 = load i16*, i16** %20, align 4, !dbg !9363
  %22 = load i16, i16* %21, align 2, !dbg !9364
  call void @llvm.dbg.value(metadata i16 %22, metadata !9341, metadata !DIExpression()), !dbg !9342
  %23 = getelementptr inbounds [13 x %struct.rtc_spare_register_information], [13 x %struct.rtc_spare_register_information]* @rtc_spare_register_table, i32 0, i32 %19, i32 1, !dbg !9365
  %24 = load i16, i16* %23, align 4, !dbg !9365
  %25 = xor i16 %24, -1, !dbg !9366
  %26 = and i16 %22, %25, !dbg !9367
  call void @llvm.dbg.value(metadata i16 %26, metadata !9341, metadata !DIExpression()), !dbg !9342
  %27 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !9368
  %28 = load i8, i8* %27, align 1, !dbg !9369
  %29 = zext i8 %28 to i32, !dbg !9369
  %30 = getelementptr inbounds [13 x %struct.rtc_spare_register_information], [13 x %struct.rtc_spare_register_information]* @rtc_spare_register_table, i32 0, i32 %19, i32 2, !dbg !9370
  %31 = load i16, i16* %30, align 2, !dbg !9370
  %32 = zext i16 %31 to i32, !dbg !9371
  %33 = shl i32 %29, %32, !dbg !9372
  %34 = trunc i32 %33 to i16, !dbg !9373
  %35 = and i16 %24, %34, !dbg !9373
  %36 = or i16 %35, %26, !dbg !9373
  call void @llvm.dbg.value(metadata i16 %36, metadata !9341, metadata !DIExpression()), !dbg !9342
  store i16 %36, i16* %21, align 2, !dbg !9374
  tail call fastcc void @rtc_write_trigger_wait() #21, !dbg !9375
  br label %42, !dbg !9376

37:                                               ; preds = %16
  %38 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !9377
  %39 = load i8, i8* %38, align 1, !dbg !9379
  %40 = add nuw nsw i32 %17, %5, !dbg !9380
  %41 = getelementptr inbounds [13 x i8], [13 x i8]* @rtc_spare_register_backup, i32 0, i32 %40, !dbg !9381
  store i8 %39, i8* %41, align 1, !dbg !9382
  br label %42

42:                                               ; preds = %18, %37
  %43 = add nuw nsw i32 %17, 1, !dbg !9383
  call void @llvm.dbg.value(metadata i32 %43, metadata !9340, metadata !DIExpression()), !dbg !9342
  %44 = icmp eq i32 %43, %7, !dbg !9351
  br i1 %44, label %45, label %16, !dbg !9354, !llvm.loop !9384

45:                                               ; preds = %42, %13, %15
  %46 = phi i32 [ -1, %15 ], [ 0, %13 ], [ 0, %42 ], !dbg !9342
  ret i32 %46, !dbg !9386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_set_data(i16 noundef zeroext %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !9387 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9391, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i8* %1, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i16 %2, metadata !9393, metadata !DIExpression()), !dbg !9394
  %4 = load i8, i8* @rtc_in_test, align 1, !dbg !9395, !range !3326
  %5 = icmp eq i8 %4, 0, !dbg !9395
  br i1 %5, label %9, label %6, !dbg !9397

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_rtc_set_data, i32 0, i32 0), i32 noundef 1397, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_rtc_set_data, i32 0, i32 0)) #20, !dbg !9398
  %7 = load i8, i8* @rtc_in_test, align 1, !dbg !9400, !range !3326
  %8 = icmp eq i8 %7, 0, !dbg !9401
  br label %9, !dbg !9401

9:                                                ; preds = %6, %3
  %10 = phi i1 [ %8, %6 ], [ true, %3 ]
  %11 = tail call i32 @rtc_set_data(i16 noundef zeroext %0, i8* noundef %1, i16 noundef zeroext %2, i1 noundef zeroext %10) #21, !dbg !9402
  ret i32 0, !dbg !9403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtc_get_data(i16 noundef zeroext %0, i8* noundef %1, i16 noundef zeroext %2, i1 noundef zeroext %3) local_unnamed_addr #0 !dbg !9404 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9408, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i8* %1, metadata !9409, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i16 %2, metadata !9410, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i1 %3, metadata !9411, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9413
  call void @llvm.dbg.value(metadata i32 0, metadata !9412, metadata !DIExpression()), !dbg !9413
  %5 = zext i16 %0 to i32, !dbg !9414
  %6 = icmp ugt i16 %0, 12, !dbg !9416
  %7 = zext i16 %2 to i32, !dbg !9417
  br i1 %6, label %15, label %8, !dbg !9418

8:                                                ; preds = %4
  %9 = add nuw nsw i32 %7, %5, !dbg !9419
  %10 = icmp ugt i32 %9, 13, !dbg !9420
  %11 = icmp eq i8* %1, null
  %12 = or i1 %11, %10, !dbg !9421
  br i1 %12, label %15, label %13, !dbg !9421

13:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !9412, metadata !DIExpression()), !dbg !9413
  %14 = icmp eq i16 %2, 0, !dbg !9422
  br i1 %14, label %40, label %16, !dbg !9425

15:                                               ; preds = %4, %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.rtc_get_data, i32 0, i32 0), i32 noundef 1411, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i8* noundef %1) #20, !dbg !9426
  br label %40, !dbg !9428

16:                                               ; preds = %13, %35
  %17 = phi i32 [ %38, %35 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9412, metadata !DIExpression()), !dbg !9413
  %18 = add nuw nsw i32 %17, %5, !dbg !9429
  br i1 %3, label %19, label %32, !dbg !9432

19:                                               ; preds = %16
  %20 = getelementptr inbounds [13 x %struct.rtc_spare_register_information], [13 x %struct.rtc_spare_register_information]* @rtc_spare_register_table, i32 0, i32 %18, i32 0, !dbg !9433
  %21 = load i16*, i16** %20, align 4, !dbg !9433
  %22 = load i16, i16* %21, align 2, !dbg !9435
  %23 = getelementptr inbounds [13 x %struct.rtc_spare_register_information], [13 x %struct.rtc_spare_register_information]* @rtc_spare_register_table, i32 0, i32 %18, i32 1, !dbg !9436
  %24 = load i16, i16* %23, align 4, !dbg !9436
  %25 = and i16 %24, %22, !dbg !9437
  %26 = zext i16 %25 to i32, !dbg !9437
  %27 = getelementptr inbounds [13 x %struct.rtc_spare_register_information], [13 x %struct.rtc_spare_register_information]* @rtc_spare_register_table, i32 0, i32 %18, i32 2, !dbg !9438
  %28 = load i16, i16* %27, align 2, !dbg !9438
  %29 = zext i16 %28 to i32, !dbg !9439
  %30 = lshr i32 %26, %29, !dbg !9440
  %31 = trunc i32 %30 to i8, !dbg !9441
  br label %35, !dbg !9442

32:                                               ; preds = %16
  %33 = getelementptr inbounds [13 x i8], [13 x i8]* @rtc_spare_register_backup, i32 0, i32 %18, !dbg !9443
  %34 = load i8, i8* %33, align 1, !dbg !9443
  br label %35

35:                                               ; preds = %19, %32
  %36 = phi i8 [ %31, %19 ], [ %34, %32 ], !dbg !9429
  %37 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !9445
  store i8 %36, i8* %37, align 1, !dbg !9446
  %38 = add nuw nsw i32 %17, 1, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %38, metadata !9412, metadata !DIExpression()), !dbg !9413
  %39 = icmp eq i32 %38, %7, !dbg !9422
  br i1 %39, label %40, label %16, !dbg !9425, !llvm.loop !9448

40:                                               ; preds = %35, %13, %15
  %41 = phi i32 [ -1, %15 ], [ 0, %13 ], [ 0, %35 ], !dbg !9413
  ret i32 %41, !dbg !9450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_get_data(i16 noundef zeroext %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !9451 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9455, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i8* %1, metadata !9456, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i16 %2, metadata !9457, metadata !DIExpression()), !dbg !9458
  %4 = load i8, i8* @rtc_in_test, align 1, !dbg !9459, !range !3326
  %5 = icmp eq i8 %4, 0, !dbg !9459
  br i1 %5, label %9, label %6, !dbg !9461

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_rtc_get_data, i32 0, i32 0), i32 noundef 1430, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_rtc_get_data, i32 0, i32 0)) #20, !dbg !9462
  %7 = load i8, i8* @rtc_in_test, align 1, !dbg !9464, !range !3326
  %8 = icmp eq i8 %7, 0, !dbg !9465
  br label %9, !dbg !9465

9:                                                ; preds = %6, %3
  %10 = phi i1 [ %8, %6 ], [ true, %3 ]
  %11 = tail call i32 @rtc_get_data(i16 noundef zeroext %0, i8* noundef %1, i16 noundef zeroext %2, i1 noundef zeroext %10) #21, !dbg !9466
  ret i32 0, !dbg !9467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtc_clear_data(i16 noundef zeroext %0, i16 noundef zeroext %1) local_unnamed_addr #0 !dbg !9468 {
  %3 = alloca [13 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i16 %1, metadata !9473, metadata !DIExpression()), !dbg !9475
  %4 = getelementptr inbounds [13 x i8], [13 x i8]* %3, i32 0, i32 0, !dbg !9476
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %4) #22, !dbg !9476
  call void @llvm.dbg.declare(metadata [13 x i8]* %3, metadata !9474, metadata !DIExpression()), !dbg !9477
  %5 = call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 13) #20, !dbg !9478
  %6 = call i32 @rtc_set_data(i16 noundef zeroext %0, i8* noundef nonnull %4, i16 noundef zeroext %1, i1 noundef zeroext true) #21, !dbg !9479
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %4) #22, !dbg !9480
  ret i32 0, !dbg !9481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_rtc_clear_data(i16 noundef zeroext %0, i16 noundef zeroext %1) local_unnamed_addr #0 !dbg !9482 {
  %3 = alloca [13 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9484, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.value(metadata i16 %1, metadata !9485, metadata !DIExpression()), !dbg !9487
  %4 = getelementptr inbounds [13 x i8], [13 x i8]* %3, i32 0, i32 0, !dbg !9488
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %4) #22, !dbg !9488
  call void @llvm.dbg.declare(metadata [13 x i8]* %3, metadata !9486, metadata !DIExpression()), !dbg !9489
  %5 = load i8, i8* @rtc_in_test, align 1, !dbg !9490, !range !3326
  %6 = icmp eq i8 %5, 0, !dbg !9490
  br i1 %6, label %8, label %7, !dbg !9492

7:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_rtc_clear_data, i32 0, i32 0), i32 noundef 1454, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_rtc_clear_data, i32 0, i32 0)) #20, !dbg !9493
  br label %8, !dbg !9495

8:                                                ; preds = %7, %2
  %9 = call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 13) #20, !dbg !9496
  %10 = load i8, i8* @rtc_in_test, align 1, !dbg !9497, !range !3326
  %11 = icmp eq i8 %10, 0, !dbg !9497
  %12 = call i32 @rtc_set_data(i16 noundef zeroext %0, i8* noundef nonnull %4, i16 noundef zeroext %1, i1 noundef zeroext %11) #21, !dbg !9498
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %4) #22, !dbg !9499
  ret i32 0, !dbg !9500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtc_set_register(i16 noundef zeroext %0, i16 noundef zeroext %1) local_unnamed_addr #0 !dbg !9501 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9505, metadata !DIExpression()), !dbg !9507
  call void @llvm.dbg.value(metadata i16 %1, metadata !9506, metadata !DIExpression()), !dbg !9507
  %3 = icmp ugt i16 %0, 120, !dbg !9508
  br i1 %3, label %4, label %5, !dbg !9510

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.rtc_set_register, i32 0, i32 0), i32 noundef 1467, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #20, !dbg !9511
  br label %5, !dbg !9513

5:                                                ; preds = %4, %2
  %6 = zext i16 %0 to i32, !dbg !9514
  %7 = load i8*, i8** bitcast (%struct.RTC_REGISTER_T** @rtc_register to i8**), align 4, !dbg !9515
  %8 = getelementptr inbounds i8, i8* %7, i32 %6, !dbg !9516
  %9 = bitcast i8* %8 to i16*, !dbg !9517
  store i16 %1, i16* %9, align 2, !dbg !9518
  ret void, !dbg !9519
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i16 @rtc_get_register(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9520 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9524, metadata !DIExpression()), !dbg !9525
  %2 = icmp ugt i16 %0, 120, !dbg !9526
  br i1 %2, label %3, label %4, !dbg !9528

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.rtc_get_register, i32 0, i32 0), i32 noundef 1476, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #20, !dbg !9529
  br label %4, !dbg !9531

4:                                                ; preds = %3, %1
  %5 = zext i16 %0 to i32, !dbg !9532
  %6 = load i8*, i8** bitcast (%struct.RTC_REGISTER_T** @rtc_register to i8**), align 4, !dbg !9533
  %7 = getelementptr inbounds i8, i8* %6, i32 %5, !dbg !9534
  %8 = bitcast i8* %7 to i16*, !dbg !9535
  %9 = load i16, i16* %8, align 2, !dbg !9535
  ret i16 %9, !dbg !9536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtc_alarm_power_on_test(%struct.hal_rtc_time_t* noundef %0) local_unnamed_addr #0 !dbg !1466 {
  %2 = alloca %struct.hal_rtc_time_t, align 1
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !1471, metadata !DIExpression()), !dbg !9537
  %3 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 0, !dbg !9538
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %3) #22, !dbg !9538
  call void @llvm.dbg.declare(metadata %struct.hal_rtc_time_t* %2, metadata !1472, metadata !DIExpression()), !dbg !9539
  %4 = getelementptr %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !9540
  %5 = tail call i8* @memcpy(i8* noundef getelementptr inbounds (%struct.hal_rtc_time_t, %struct.hal_rtc_time_t* @rtc_alarm_power_on_test.alarm_power_on_time, i32 0, i32 0), i8* noundef %4, i32 noundef 7) #20, !dbg !9541
  %6 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !9542
  %7 = load i8, i8* %6, align 1, !dbg !9542
  %8 = zext i8 %7 to i32, !dbg !9542
  %9 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !9542
  %10 = load i8, i8* %9, align 1, !dbg !9542
  %11 = zext i8 %10 to i32, !dbg !9542
  %12 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !9542
  %13 = load i8, i8* %12, align 1, !dbg !9542
  %14 = zext i8 %13 to i32, !dbg !9542
  %15 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !9542
  %16 = load i8, i8* %15, align 1, !dbg !9542
  %17 = zext i8 %16 to i32, !dbg !9542
  %18 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !9542
  %19 = load i8, i8* %18, align 1, !dbg !9542
  %20 = zext i8 %19 to i32, !dbg !9542
  %21 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !9542
  %22 = load i8, i8* %21, align 1, !dbg !9542
  %23 = zext i8 %22 to i32, !dbg !9542
  %24 = load i8, i8* %4, align 1, !dbg !9542
  %25 = zext i8 %24 to i32, !dbg !9542
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.rtc_alarm_power_on_test, i32 0, i32 0), i32 noundef 1573, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i32 0, i32 0), i32 noundef %8, i32 noundef %11, i32 noundef %14, i32 noundef %17, i32 noundef %20, i32 noundef %23, i32 noundef %25) #20, !dbg !9542
  %26 = call i32 @hal_rtc_get_time(%struct.hal_rtc_time_t* noundef nonnull %2) #21, !dbg !9543
  %27 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 6, !dbg !9544
  %28 = load i8, i8* %27, align 1, !dbg !9544
  %29 = zext i8 %28 to i32, !dbg !9544
  %30 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 4, !dbg !9544
  %31 = load i8, i8* %30, align 1, !dbg !9544
  %32 = zext i8 %31 to i32, !dbg !9544
  %33 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 3, !dbg !9544
  %34 = load i8, i8* %33, align 1, !dbg !9544
  %35 = zext i8 %34 to i32, !dbg !9544
  %36 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 5, !dbg !9544
  %37 = load i8, i8* %36, align 1, !dbg !9544
  %38 = zext i8 %37 to i32, !dbg !9544
  %39 = add nsw i32 %38, -1, !dbg !9544
  %40 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 2, !dbg !9544
  %41 = load i8, i8* %40, align 1, !dbg !9544
  %42 = zext i8 %41 to i32, !dbg !9544
  %43 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %2, i32 0, i32 1, !dbg !9544
  %44 = load i8, i8* %43, align 1, !dbg !9544
  %45 = zext i8 %44 to i32, !dbg !9544
  %46 = load i8, i8* %3, align 1, !dbg !9544
  %47 = zext i8 %46 to i32, !dbg !9544
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.rtc_alarm_power_on_test, i32 0, i32 0), i32 noundef 1577, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i32 0, i32 0), i32 noundef %29, i32 noundef %32, i32 noundef %35, i32 noundef %39, i32 noundef %42, i32 noundef %45, i32 noundef %47) #20, !dbg !9544
  call fastcc void @rtc_forward_time(%struct.hal_rtc_time_t* noundef nonnull %2) #21, !dbg !9545
  %48 = load i8, i8* %27, align 1, !dbg !9546
  %49 = zext i8 %48 to i32, !dbg !9546
  %50 = load i8, i8* %30, align 1, !dbg !9546
  %51 = zext i8 %50 to i32, !dbg !9546
  %52 = load i8, i8* %33, align 1, !dbg !9546
  %53 = zext i8 %52 to i32, !dbg !9546
  %54 = load i8, i8* %36, align 1, !dbg !9546
  %55 = zext i8 %54 to i32, !dbg !9546
  %56 = add nsw i32 %55, -1, !dbg !9546
  %57 = load i8, i8* %40, align 1, !dbg !9546
  %58 = zext i8 %57 to i32, !dbg !9546
  %59 = load i8, i8* %43, align 1, !dbg !9546
  %60 = zext i8 %59 to i32, !dbg !9546
  %61 = load i8, i8* %3, align 1, !dbg !9546
  %62 = zext i8 %61 to i32, !dbg !9546
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.rtc_alarm_power_on_test, i32 0, i32 0), i32 noundef 1581, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i32 0, i32 0), i32 noundef %49, i32 noundef %51, i32 noundef %53, i32 noundef %56, i32 noundef %58, i32 noundef %60, i32 noundef %62) #20, !dbg !9546
  %63 = call i32 @hal_rtc_set_alarm(%struct.hal_rtc_time_t* noundef nonnull %2) #21, !dbg !9547
  %64 = tail call i32 @hal_rtc_set_alarm_callback(void (i8*)* noundef nonnull @test_rtc_alarm_callback, i8* noundef getelementptr inbounds (%struct.hal_rtc_time_t, %struct.hal_rtc_time_t* @rtc_alarm_power_on_test.alarm_power_on_time, i32 0, i32 0)) #21, !dbg !9548
  %65 = tail call i32 @hal_rtc_enable_alarm() #21, !dbg !9549
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %3) #22, !dbg !9550
  ret i32 0, !dbg !9551
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rtc_forward_time(%struct.hal_rtc_time_t* nocapture noundef %0) unnamed_addr #7 !dbg !9552 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !9556, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 10, metadata !9557, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 0, metadata !9558, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 0, metadata !9559, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 0, metadata !9560, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 0, metadata !9561, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.rtc_forward_time.days_in_month, metadata !9563, metadata !DIExpression()), !dbg !9567
  %2 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !9568
  %3 = load i8, i8* %2, align 1, !dbg !9568
  %4 = zext i8 %3 to i32, !dbg !9569
  %5 = add nuw nsw i32 %4, 10, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %5, metadata !9557, metadata !DIExpression()), !dbg !9566
  %6 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !9571
  %7 = load i8, i8* %6, align 1, !dbg !9571
  %8 = zext i8 %7 to i32, !dbg !9572
  call void @llvm.dbg.value(metadata i32 %8, metadata !9558, metadata !DIExpression()), !dbg !9566
  %9 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !9573
  %10 = load i8, i8* %9, align 1, !dbg !9573
  %11 = zext i8 %10 to i32, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %11, metadata !9559, metadata !DIExpression()), !dbg !9566
  %12 = icmp ugt i8 %3, 49, !dbg !9575
  %13 = trunc i32 %5 to i16, !dbg !9577
  %14 = freeze i16 %13
  %15 = udiv i16 %14, 60, !dbg !9577
  %16 = zext i16 %15 to i32, !dbg !9577
  %17 = mul i16 %15, 60
  %18 = sub i16 %14, %17
  %19 = zext i16 %18 to i32, !dbg !9577
  %20 = select i1 %12, i32 %19, i32 %5, !dbg !9577
  %21 = select i1 %12, i32 %16, i32 0, !dbg !9577
  %22 = add nuw nsw i32 %21, %8, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %22, metadata !9558, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 %20, metadata !9557, metadata !DIExpression()), !dbg !9566
  %23 = trunc i32 %20 to i8, !dbg !9578
  store i8 %23, i8* %2, align 1, !dbg !9579
  %24 = icmp ugt i32 %22, 59, !dbg !9580
  %25 = trunc i32 %22 to i16, !dbg !9582
  %26 = freeze i16 %25
  %27 = udiv i16 %26, 60, !dbg !9582
  %28 = zext i16 %27 to i32, !dbg !9582
  %29 = mul i16 %27, 60
  %30 = sub i16 %26, %29
  %31 = zext i16 %30 to i32, !dbg !9582
  %32 = select i1 %24, i32 %31, i32 %22, !dbg !9582
  %33 = select i1 %24, i32 %28, i32 0, !dbg !9582
  %34 = add nuw nsw i32 %33, %11, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %34, metadata !9559, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 %32, metadata !9558, metadata !DIExpression()), !dbg !9566
  %35 = trunc i32 %32 to i8, !dbg !9583
  store i8 %35, i8* %6, align 1, !dbg !9584
  %36 = icmp ugt i32 %34, 23, !dbg !9585
  br i1 %36, label %37, label %74, !dbg !9587

37:                                               ; preds = %1
  %38 = trunc i32 %34 to i16, !dbg !9588
  %39 = freeze i16 %38
  %40 = udiv i16 %39, 24, !dbg !9588
  call void @llvm.dbg.value(metadata i16 %40, metadata !9560, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9566
  %41 = mul i16 %40, 24
  %42 = sub i16 %39, %41
  %43 = zext i16 %42 to i32, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %43, metadata !9559, metadata !DIExpression()), !dbg !9566
  %44 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !9591
  %45 = load i8, i8* %44, align 1, !dbg !9592
  %46 = trunc i16 %40 to i8, !dbg !9592
  %47 = add i8 %45, %46, !dbg !9592
  store i8 %47, i8* %44, align 1, !dbg !9592
  %48 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !9593
  %49 = load i8, i8* %48, align 1, !dbg !9593
  %50 = zext i8 %49 to i32, !dbg !9594
  %51 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.rtc_forward_time.days_in_month, i32 0, i32 %50, !dbg !9594
  %52 = load i32, i32* %51, align 4, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %52, metadata !9562, metadata !DIExpression()), !dbg !9566
  %53 = icmp eq i8 %49, 2, !dbg !9595
  br i1 %53, label %54, label %61, !dbg !9597

54:                                               ; preds = %37
  %55 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !9598
  %56 = load i8, i8* %55, align 1, !dbg !9598
  %57 = and i8 %56, 3, !dbg !9600
  call void @llvm.dbg.value(metadata i8 %57, metadata !9561, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9566
  %58 = icmp eq i8 %57, 0, !dbg !9601
  %59 = zext i1 %58 to i32, !dbg !9603
  %60 = add nsw i32 %52, %59, !dbg !9603
  br label %61, !dbg !9603

61:                                               ; preds = %54, %37
  %62 = phi i32 [ %52, %37 ], [ %60, %54 ], !dbg !9604
  call void @llvm.dbg.value(metadata i32 %62, metadata !9562, metadata !DIExpression()), !dbg !9566
  %63 = zext i8 %47 to i32, !dbg !9605
  %64 = icmp slt i32 %62, %63, !dbg !9607
  br i1 %64, label %65, label %74, !dbg !9608

65:                                               ; preds = %61
  %66 = trunc i32 %62 to i8, !dbg !9609
  %67 = sub i8 %47, %66, !dbg !9609
  store i8 %67, i8* %44, align 1, !dbg !9609
  %68 = add i8 %49, 1, !dbg !9611
  store i8 %68, i8* %48, align 1, !dbg !9611
  %69 = icmp ugt i8 %68, 12, !dbg !9612
  br i1 %69, label %70, label %74, !dbg !9614

70:                                               ; preds = %65
  store i8 1, i8* %48, align 1, !dbg !9615
  %71 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !9617
  %72 = load i8, i8* %71, align 1, !dbg !9618
  %73 = add i8 %72, 1, !dbg !9618
  store i8 %73, i8* %71, align 1, !dbg !9618
  br label %74, !dbg !9619

74:                                               ; preds = %61, %70, %65, %1
  %75 = phi i32 [ %43, %70 ], [ %43, %65 ], [ %43, %61 ], [ %34, %1 ], !dbg !9566
  call void @llvm.dbg.value(metadata i32 %75, metadata !9559, metadata !DIExpression()), !dbg !9566
  %76 = trunc i32 %75 to i8, !dbg !9620
  store i8 %76, i8* %9, align 1, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define internal void @test_rtc_alarm_callback(i8* nocapture noundef readonly %0) #0 !dbg !9623 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9625, metadata !DIExpression()), !dbg !9627
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.test_rtc_alarm_callback, i32 0, i32 0), i32 noundef 1551, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.test_rtc_alarm_callback, i32 0, i32 0)) #20, !dbg !9628
  %2 = bitcast i8* %0 to %struct.hal_rtc_time_t*, !dbg !9629
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %2, metadata !9626, metadata !DIExpression()), !dbg !9627
  %3 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !9630
  %4 = load i8, i8* %3, align 1, !dbg !9630
  %5 = zext i8 %4 to i32, !dbg !9630
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9630
  %7 = load i8, i8* %6, align 1, !dbg !9630
  %8 = zext i8 %7 to i32, !dbg !9630
  %9 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !9630
  %10 = load i8, i8* %9, align 1, !dbg !9630
  %11 = zext i8 %10 to i32, !dbg !9630
  %12 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !9630
  %13 = load i8, i8* %12, align 1, !dbg !9630
  %14 = zext i8 %13 to i32, !dbg !9630
  %15 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !9630
  %16 = load i8, i8* %15, align 1, !dbg !9630
  %17 = zext i8 %16 to i32, !dbg !9630
  %18 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !9630
  %19 = load i8, i8* %18, align 1, !dbg !9630
  %20 = zext i8 %19 to i32, !dbg !9630
  %21 = load i8, i8* %0, align 1, !dbg !9630
  %22 = zext i8 %21 to i32, !dbg !9630
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.test_rtc_alarm_callback, i32 0, i32 0), i32 noundef 1557, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i32 0, i32 0), i32 noundef %5, i32 noundef %8, i32 noundef %11, i32 noundef %14, i32 noundef %17, i32 noundef %20, i32 noundef %22) #20, !dbg !9630
  %23 = tail call i32 @hal_rtc_set_alarm_callback(void (i8*)* noundef null, i8* noundef null) #21, !dbg !9631
  %24 = tail call i32 @hal_rtc_set_alarm(%struct.hal_rtc_time_t* noundef nonnull %2) #21, !dbg !9632
  %25 = tail call i32 @hal_rtc_enable_alarm() #21, !dbg !9633
  %26 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #20, !dbg !9634
  ret void, !dbg !9635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtc_enter_test(i1 noundef zeroext %0) local_unnamed_addr #0 !dbg !9636 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !9640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9641
  %2 = zext i1 %0 to i32, !dbg !9642
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.rtc_enter_test, i32 0, i32 0), i32 noundef 1591, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.rtc_enter_test, i32 0, i32 0), i32 noundef %2) #20, !dbg !9642
  br i1 %0, label %3, label %5, !dbg !9643

3:                                                ; preds = %1
  %4 = tail call i32 @rtc_get_data(i16 noundef zeroext 0, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @rtc_spare_register_backup, i32 0, i32 0), i16 noundef zeroext 13, i1 noundef zeroext true) #21, !dbg !9644
  br label %7, !dbg !9647

5:                                                ; preds = %1
  %6 = tail call i32 @rtc_set_data(i16 noundef zeroext 0, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @rtc_spare_register_backup, i32 0, i32 0), i16 noundef zeroext 13, i1 noundef zeroext true) #21, !dbg !9648
  br label %7

7:                                                ; preds = %5, %3
  %8 = zext i1 %0 to i8
  call void @llvm.dbg.value(metadata i8 %8, metadata !9640, metadata !DIExpression()), !dbg !9641
  store i8 %8, i8* @rtc_in_test, align 1, !dbg !9650
  ret i32 0, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9656, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %1, metadata !9657, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i8* %0, metadata !9658, metadata !DIExpression()), !dbg !9755
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !9756
  call void @llvm.dbg.value(metadata i32 %3, metadata !9753, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !9755
  call void @llvm.dbg.value(metadata i32 0, metadata !9752, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32* undef, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 0, metadata !9752, metadata !DIExpression()), !dbg !9755
  %4 = icmp ult i32 %3, 4, !dbg !9757
  br i1 %4, label %20, label %5, !dbg !9760

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9761
  %7 = bitcast i8* %6 to i32**, !dbg !9761
  %8 = load i32*, i32** %7, align 4, !dbg !9761
  call void @llvm.dbg.value(metadata i32* %8, metadata !9754, metadata !DIExpression()), !dbg !9755
  %9 = lshr i32 %3, 2, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %9, metadata !9753, metadata !DIExpression()), !dbg !9755
  br label %10, !dbg !9760

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %12, metadata !9752, metadata !DIExpression()), !dbg !9755
  %13 = load i32, i32* %11, align 4, !dbg !9763
  %14 = icmp eq i32 %13, -1, !dbg !9766
  br i1 %14, label %16, label %15, !dbg !9767

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !9768
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.124, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.125, i32 0, i32 0)) #23, !dbg !9768
  unreachable, !dbg !9768

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !9773
  call void @llvm.dbg.value(metadata i32 %17, metadata !9752, metadata !DIExpression()), !dbg !9755
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !9774
  call void @llvm.dbg.value(metadata i32* %18, metadata !9754, metadata !DIExpression()), !dbg !9755
  %19 = icmp eq i32 %17, %9, !dbg !9757
  br i1 %19, label %20, label %10, !dbg !9760, !llvm.loop !9775

20:                                               ; preds = %16, %2
  ret void, !dbg !9777
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !9778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9780, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 0, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %0, metadata !9781, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !9782
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !9781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9782
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !9781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9782
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !9783
  call void @llvm.dbg.value(metadata i32 %2, metadata !9781, metadata !DIExpression()), !dbg !9782
  ret i32 %2, !dbg !9784
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !9785 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9790, metadata !DIExpression()), !dbg !9792
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9793
  %3 = or i32 %2, 512, !dbg !9793
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9793
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %4, metadata !9791, metadata !DIExpression()), !dbg !9792
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !9797

5:                                                ; preds = %1
  br label %7, !dbg !9798

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !9802
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.124, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.125, i32 0, i32 0)) #23, !dbg !9802
  unreachable, !dbg !9802

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !9807
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !9791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !9792
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !9791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9792
  br label %10, !dbg !9808

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9809
  %12 = and i32 %11, 8192, !dbg !9810
  %13 = icmp eq i32 %12, 0, !dbg !9811
  br i1 %13, label %10, label %14, !dbg !9808, !llvm.loop !9812

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9814
  %16 = and i32 %15, 256, !dbg !9815
  %17 = icmp eq i32 %16, 0, !dbg !9816
  br i1 %17, label %14, label %18, !dbg !9817, !llvm.loop !9818

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !9807
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !9791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9792
  %20 = and i32 %19, 16, !dbg !9807
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !9791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9792
  call void @llvm.dbg.value(metadata i32 undef, metadata !9791, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9792
  %21 = or i32 %4, %20, !dbg !9820
  %22 = or i32 %21, 8, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %22, metadata !9791, metadata !DIExpression()), !dbg !9792
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !9823 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !9825, metadata !DIExpression()), !dbg !9827
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9828
  call void @llvm.dbg.value(metadata i32 %2, metadata !9826, metadata !DIExpression()), !dbg !9827
  %3 = and i32 %2, -268435477, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %3, metadata !9826, metadata !DIExpression()), !dbg !9827
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9830
  br label %4, !dbg !9831

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9832
  %6 = and i32 %5, 2, !dbg !9833
  %7 = icmp eq i32 %6, 0, !dbg !9831
  br i1 %7, label %8, label %4, !dbg !9831, !llvm.loop !9834

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9836
  call void @llvm.dbg.value(metadata i32 %9, metadata !9826, metadata !DIExpression()), !dbg !9827
  %10 = and i32 %9, -9, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %10, metadata !9826, metadata !DIExpression()), !dbg !9827
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9838
  br label %11, !dbg !9839

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9840
  %13 = and i32 %12, 8, !dbg !9841
  %14 = icmp eq i32 %13, 0, !dbg !9839
  br i1 %14, label %15, label %11, !dbg !9839, !llvm.loop !9842

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9844, !range !3326
  %17 = icmp eq i8 %16, 0, !dbg !9846
  br i1 %17, label %18, label %21, !dbg !9847

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9848
  %20 = and i32 %19, -513, !dbg !9848
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9848
  br label %21, !dbg !9852

21:                                               ; preds = %18, %15
  ret void, !dbg !9853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !9854 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9858, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 0, metadata !9859, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 0, metadata !9860, metadata !DIExpression()), !dbg !9861
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9862
  call void @llvm.dbg.value(metadata i32 %2, metadata !9859, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 %2, metadata !9859, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !9861
  %3 = icmp eq i16 %0, 1, !dbg !9863
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !9865
  %5 = or i32 %2, %4, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %5, metadata !9859, metadata !DIExpression()), !dbg !9861
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9866
  br label %6, !dbg !9867

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9868
  %8 = and i32 %7, 2, !dbg !9869
  %9 = icmp eq i32 %8, 0, !dbg !9870
  br i1 %9, label %6, label %10, !dbg !9867, !llvm.loop !9871

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9873
  %12 = and i32 %11, 1, !dbg !9874
  %13 = icmp eq i32 %12, 0, !dbg !9875
  br i1 %13, label %14, label %10, !dbg !9875, !llvm.loop !9876

14:                                               ; preds = %10
  ret i32 0, !dbg !9878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !9879 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9881, metadata !DIExpression()), !dbg !9882
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !9883
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !9884
  ret void, !dbg !9885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !9886 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9890, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 %1, metadata !9891, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 %1, metadata !9892, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i8 0, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 0, metadata !9893, metadata !DIExpression()), !dbg !9895
  %3 = icmp eq i32 %1, 0, !dbg !9896
  br i1 %3, label %16, label %4, !dbg !9899

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 %6, metadata !9893, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 %7, metadata !9892, metadata !DIExpression()), !dbg !9895
  %8 = shl i32 %6, 8, !dbg !9900
  %9 = and i32 %7, 255, !dbg !9902
  %10 = or i32 %8, %9, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %10, metadata !9893, metadata !DIExpression()), !dbg !9895
  %11 = lshr i32 %7, 8, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %11, metadata !9892, metadata !DIExpression()), !dbg !9895
  %12 = add nuw nsw i8 %5, 1, !dbg !9905
  call void @llvm.dbg.value(metadata i8 %12, metadata !9894, metadata !DIExpression()), !dbg !9895
  %13 = icmp ult i32 %7, 256, !dbg !9896
  br i1 %13, label %14, label %4, !dbg !9899, !llvm.loop !9906

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !9908
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !9910
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9911
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9912
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9913
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !9914
  br label %16, !dbg !9915

16:                                               ; preds = %2, %14
  ret void, !dbg !9916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !9917 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9921, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i8 %1, metadata !9922, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 %2, metadata !9923, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 %3, metadata !9924, metadata !DIExpression()), !dbg !9927
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !9928
  call void @llvm.dbg.value(metadata i32 %5, metadata !9926, metadata !DIExpression()), !dbg !9927
  %6 = icmp eq i32 %3, 3, !dbg !9929
  br i1 %6, label %7, label %11, !dbg !9931

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !9932
  %9 = zext i8 %1 to i32, !dbg !9934
  %10 = or i32 %8, %9, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %10, metadata !9925, metadata !DIExpression()), !dbg !9927
  br label %16, !dbg !9936

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !9937
  %13 = zext i8 %1 to i32, !dbg !9939
  %14 = or i32 %12, %13, !dbg !9940
  call void @llvm.dbg.value(metadata i32 %14, metadata !9925, metadata !DIExpression()), !dbg !9927
  %15 = lshr i32 %5, 24, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %15, metadata !9926, metadata !DIExpression()), !dbg !9927
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !9942
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !9927
  call void @llvm.dbg.value(metadata i32 %18, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata i32 %17, metadata !9925, metadata !DIExpression()), !dbg !9927
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9943
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9944
  %19 = add i32 %3, 1, !dbg !9945
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9946
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9947
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !9948
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !9949
  ret void, !dbg !9950
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !9951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9955, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 %1, metadata !9956, metadata !DIExpression()), !dbg !9957
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !9958
  %4 = and i32 %3, -256, !dbg !9959
  %5 = and i32 %0, 255, !dbg !9960
  %6 = or i32 %4, %5, !dbg !9961
  ret i32 %6, !dbg !9962
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !9963 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9968, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i32 %1, metadata !9969, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i8** %2, metadata !9970, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i32* %3, metadata !9971, metadata !DIExpression()), !dbg !9983
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !9984
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9984
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !9972, metadata !DIExpression()), !dbg !9985
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !9986
  call void @llvm.dbg.value(metadata i32 %7, metadata !9981, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !9980, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9983
  %8 = lshr i32 %7, 24, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %8, metadata !9981, metadata !DIExpression()), !dbg !9983
  %9 = trunc i32 %8 to i8, !dbg !9988
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !9989
  store i8 %9, i8* %6, align 4, !dbg !9990
  call void @llvm.dbg.value(metadata i32 1, metadata !9982, metadata !DIExpression()), !dbg !9983
  %11 = load i8*, i8** %2, align 4, !dbg !9991
  br label %12, !dbg !9995

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !9991
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9982, metadata !DIExpression()), !dbg !9983
  %15 = load i8, i8* %13, align 1, !dbg !9996
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !9997
  store i8 %15, i8* %16, align 1, !dbg !9998
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9999
  store i8* %17, i8** %2, align 4, !dbg !9999
  %18 = add nuw nsw i32 %14, 1, !dbg !10000
  call void @llvm.dbg.value(metadata i32 %18, metadata !9982, metadata !DIExpression()), !dbg !9983
  %19 = icmp eq i32 %18, 4, !dbg !10001
  br i1 %19, label %20, label %12, !dbg !9995, !llvm.loop !10002

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !10004
  %22 = load i32, i32* %21, align 4, !dbg !10004
  call void @llvm.dbg.value(metadata i32 %22, metadata !9981, metadata !DIExpression()), !dbg !9983
  %23 = load i32, i32* %3, align 4, !dbg !10005
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !10006
  %25 = shl i32 %7, 8, !dbg !10007
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !9980, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9983
  %26 = and i32 %0, 255, !dbg !10008
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !9980, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !9983
  %27 = or i32 %25, %26, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %27, metadata !9980, metadata !DIExpression()), !dbg !9983
  store i32 %24, i32* %3, align 4, !dbg !10010
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !10011
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10012
  ret i32 %27, !dbg !10013
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !10014 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10018, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i8* %1, metadata !10019, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %2, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i8* %1, metadata !10022, metadata !DIExpression()), !dbg !10024
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !10025
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10025
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !10023, metadata !DIExpression()), !dbg !10026
  %6 = add i32 %0, -1610348544, !dbg !10027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10018, metadata !DIExpression()), !dbg !10024
  %7 = ptrtoint i8* %1 to i32, !dbg !10028
  %8 = and i32 %7, 3, !dbg !10030
  %9 = icmp eq i32 %8, 0, !dbg !10031
  br i1 %9, label %10, label %23, !dbg !10032

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %2, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %6, metadata !10018, metadata !DIExpression()), !dbg !10024
  %11 = icmp sgt i32 %2, 0, !dbg !10033
  br i1 %11, label %12, label %72, !dbg !10037

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %14, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %15, metadata !10018, metadata !DIExpression()), !dbg !10024
  %16 = bitcast i8* %13 to i32*, !dbg !10038
  %17 = load i32, i32* %16, align 4, !dbg !10038
  %18 = inttoptr i32 %15 to i32*, !dbg !10038
  store volatile i32 %17, i32* %18, align 4, !dbg !10038
  %19 = add i32 %15, 4, !dbg !10040
  call void @llvm.dbg.value(metadata i32 %19, metadata !10018, metadata !DIExpression()), !dbg !10024
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !10041
  call void @llvm.dbg.value(metadata i8* %20, metadata !10022, metadata !DIExpression()), !dbg !10024
  %21 = add nsw i32 %14, -4, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %21, metadata !10020, metadata !DIExpression()), !dbg !10024
  %22 = icmp ugt i32 %14, 4, !dbg !10033
  br i1 %22, label %12, label %72, !dbg !10037, !llvm.loop !10043

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !10045
  %25 = icmp eq i32 %24, 0, !dbg !10047
  call void @llvm.dbg.value(metadata i8* %1, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i8* %1, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %2, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %2, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %6, metadata !10018, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %6, metadata !10018, metadata !DIExpression()), !dbg !10024
  %26 = icmp sgt i32 %2, 0, !dbg !10048
  br i1 %25, label %31, label %27, !dbg !10049

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !10050

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !10050

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !10053

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !10053

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %39, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %40, metadata !10018, metadata !DIExpression()), !dbg !10024
  %41 = bitcast i8* %38 to i16*, !dbg !10056
  %42 = load i16, i16* %41, align 2, !dbg !10056
  store i16 %42, i16* %34, align 4, !dbg !10059
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !10060
  %44 = bitcast i8* %43 to i16*, !dbg !10060
  %45 = load i16, i16* %44, align 2, !dbg !10061
  store i16 %45, i16* %35, align 2, !dbg !10062
  %46 = load i32, i32* %36, align 4, !dbg !10063
  %47 = inttoptr i32 %40 to i32*, !dbg !10063
  store volatile i32 %46, i32* %47, align 4, !dbg !10063
  %48 = add i32 %40, 4, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %48, metadata !10018, metadata !DIExpression()), !dbg !10024
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !10065
  call void @llvm.dbg.value(metadata i8* %49, metadata !10022, metadata !DIExpression()), !dbg !10024
  %50 = add nsw i32 %39, -4, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %50, metadata !10020, metadata !DIExpression()), !dbg !10024
  %51 = icmp ugt i32 %39, 4, !dbg !10067
  br i1 %51, label %37, label %72, !dbg !10053, !llvm.loop !10068

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %54, metadata !10020, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %55, metadata !10018, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i8* %53, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 0, metadata !10021, metadata !DIExpression()), !dbg !10024
  br label %56, !dbg !10070

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %58, metadata !10021, metadata !DIExpression()), !dbg !10024
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !10074
  call void @llvm.dbg.value(metadata i8* %59, metadata !10022, metadata !DIExpression()), !dbg !10024
  %60 = load i8, i8* %57, align 1, !dbg !10077
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !10078
  store i8 %60, i8* %61, align 1, !dbg !10079
  %62 = add nuw nsw i32 %58, 1, !dbg !10080
  call void @llvm.dbg.value(metadata i32 %62, metadata !10021, metadata !DIExpression()), !dbg !10024
  %63 = icmp ult i32 %58, 3, !dbg !10081
  %64 = icmp ult i32 %62, %54, !dbg !10082
  %65 = select i1 %63, i1 %64, i1 false, !dbg !10082
  br i1 %65, label %56, label %66, !dbg !10070, !llvm.loop !10083

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !10085
  %68 = inttoptr i32 %55 to i32*, !dbg !10085
  store volatile i32 %67, i32* %68, align 4, !dbg !10085
  %69 = add i32 %55, 4, !dbg !10086
  call void @llvm.dbg.value(metadata i32 %69, metadata !10018, metadata !DIExpression()), !dbg !10024
  %70 = add nsw i32 %54, -4, !dbg !10087
  call void @llvm.dbg.value(metadata i8* %59, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %70, metadata !10020, metadata !DIExpression()), !dbg !10024
  %71 = icmp sgt i32 %54, 4, !dbg !10088
  br i1 %71, label %52, label %72, !dbg !10050, !llvm.loop !10089

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !10091
  ret void, !dbg !10091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !10092 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !10096, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i8* %1, metadata !10097, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i8* %2, metadata !10098, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i16 %3, metadata !10099, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i16 %4, metadata !10100, metadata !DIExpression()), !dbg !10106
  %7 = bitcast i32* %6 to i8*, !dbg !10107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10107
  call void @llvm.dbg.value(metadata i8* %7, metadata !10105, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10102, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !10104, metadata !DIExpression()), !dbg !10106
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10102, metadata !DIExpression()), !dbg !10106
  %9 = icmp eq i16 %3, 0, !dbg !10108
  br i1 %9, label %33, label %10, !dbg !10111

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %12, metadata !10102, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10103, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10101, metadata !DIExpression()), !dbg !10106
  store i32 0, i32* %6, align 4, !dbg !10112
  call void @llvm.dbg.value(metadata i32 0, metadata !10103, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %12, metadata !10102, metadata !DIExpression()), !dbg !10106
  %13 = icmp ult i32 %12, %8, !dbg !10115
  br i1 %13, label %14, label %27, !dbg !10117

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10103, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %16, metadata !10102, metadata !DIExpression()), !dbg !10106
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10118
  %18 = load i8, i8* %17, align 1, !dbg !10118
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !10120
  store i8 %18, i8* %19, align 1, !dbg !10121
  %20 = add nuw nsw i32 %16, 1, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %20, metadata !10102, metadata !DIExpression()), !dbg !10106
  %21 = add nuw nsw i32 %15, 1, !dbg !10123
  call void @llvm.dbg.value(metadata i32 %21, metadata !10103, metadata !DIExpression()), !dbg !10106
  %22 = icmp ult i32 %20, %8, !dbg !10115
  %23 = icmp ult i32 %15, 3, !dbg !10124
  %24 = select i1 %22, i1 %23, i1 false, !dbg !10124
  br i1 %24, label %14, label %25, !dbg !10117, !llvm.loop !10125

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !10127
  br label %27, !dbg !10127

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !10127
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !10128
  call void @llvm.dbg.value(metadata i32 %28, metadata !10101, metadata !DIExpression()), !dbg !10106
  %30 = bitcast i8* %11 to i32*, !dbg !10127
  store volatile i32 %28, i32* %30, align 4, !dbg !10127
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !10129
  call void @llvm.dbg.value(metadata i8* %31, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %29, metadata !10102, metadata !DIExpression()), !dbg !10106
  %32 = icmp ult i32 %29, %8, !dbg !10108
  br i1 %32, label %10, label %33, !dbg !10111, !llvm.loop !10130

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10132
  %34 = zext i16 %4 to i32, !dbg !10133
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10134
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !10135
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !10136
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !10104, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !10106
  call void @llvm.dbg.value(metadata i8* %2, metadata !10098, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10102, metadata !DIExpression()), !dbg !10106
  %35 = icmp eq i16 %4, 0, !dbg !10137
  br i1 %35, label %47, label %36, !dbg !10140

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !10141
  call void @llvm.dbg.value(metadata i8* %37, metadata !10104, metadata !DIExpression()), !dbg !10106
  br label %38, !dbg !10140

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !10098, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i8* %40, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %41, metadata !10102, metadata !DIExpression()), !dbg !10106
  %42 = load volatile i8, i8* %40, align 1, !dbg !10142
  store i8 %42, i8* %39, align 1, !dbg !10144
  %43 = add nuw nsw i32 %41, 1, !dbg !10145
  call void @llvm.dbg.value(metadata i32 %43, metadata !10102, metadata !DIExpression()), !dbg !10106
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !10146
  call void @llvm.dbg.value(metadata i8* %44, metadata !10098, metadata !DIExpression()), !dbg !10106
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !10147
  call void @llvm.dbg.value(metadata i8* %45, metadata !10104, metadata !DIExpression()), !dbg !10106
  %46 = icmp eq i32 %43, %34, !dbg !10137
  br i1 %46, label %47, label %38, !dbg !10140, !llvm.loop !10148

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10150
  ret void, !dbg !10150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !10151 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10155, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i8* %1, metadata !10156, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 0, metadata !10157, metadata !DIExpression()), !dbg !10163
  %4 = icmp eq i8* %1, null, !dbg !10164
  br i1 %4, label %67, label %5, !dbg !10166

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10167
  call void @llvm.dbg.value(metadata i32 %27, metadata !10158, metadata !DIExpression()), !dbg !10163
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !10168

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !10163
  call void @llvm.dbg.value(metadata i32 %9, metadata !10157, metadata !DIExpression()), !dbg !10163
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !10169
  %11 = load i8, i8* %10, align 1, !dbg !10169
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !10170

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !10171

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10174
  %15 = and i32 %14, -2, !dbg !10174
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10174
  br label %41, !dbg !10178

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10179
  %18 = and i32 %17, -2, !dbg !10179
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10179
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !10182

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10184
  %22 = or i32 %21, 1, !dbg !10184
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10184
  br label %41, !dbg !10188

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10189
  %25 = or i32 %24, 1, !dbg !10189
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10189
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !10167
  %28 = icmp eq i32 %27, 0, !dbg !10192
  br i1 %7, label %29, label %35, !dbg !10195

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10196
  br i1 %28, label %33, label %31, !dbg !10199

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !10196
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10196
  br label %67, !dbg !10196

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !10196
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10196
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10200
  br i1 %28, label %39, label %37, !dbg !10203

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !10200
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10200
  br label %67, !dbg !10200

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !10200
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !10200
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !10204
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !10205
  %44 = load i8, i8* %43, align 1, !dbg !10205
  %45 = icmp eq i8 %44, 5, !dbg !10206
  br i1 %45, label %46, label %56, !dbg !10207

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10208
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !10209

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !10159, metadata !DIExpression(DW_OP_deref)), !dbg !10210
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !10211
  %50 = load i8, i8* %3, align 1, !dbg !10213
  call void @llvm.dbg.value(metadata i8 %50, metadata !10159, metadata !DIExpression()), !dbg !10210
  %51 = load i8, i8* %48, align 1, !dbg !10214
  %52 = and i8 %51, %50, !dbg !10215
  %53 = icmp eq i8 %52, 0, !dbg !10216
  br i1 %53, label %54, label %49, !dbg !10216, !llvm.loop !10217

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10219
  %55 = add i32 %9, 1, !dbg !10220
  br label %61, !dbg !10221

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !10222
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !10224
  %59 = load i8, i8* %58, align 1, !dbg !10224
  %60 = zext i8 %59 to i16, !dbg !10224
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !10225
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !10220
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !10226
  %64 = load i8, i8* %63, align 1, !dbg !10226
  %65 = zext i8 %64 to i32, !dbg !10226
  %66 = add i32 %42, %65, !dbg !10227
  call void @llvm.dbg.value(metadata i32 %66, metadata !10157, metadata !DIExpression()), !dbg !10163
  br label %8, !dbg !10168, !llvm.loop !10228

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !10230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10231 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10235, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata i8* %1, metadata !10236, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata i8 %2, metadata !10237, metadata !DIExpression()), !dbg !10238
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !10237, metadata !DIExpression(DW_OP_deref)), !dbg !10238
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !10239
  ret void, !dbg !10240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !10241 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10245, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i8* %1, metadata !10246, metadata !DIExpression()), !dbg !10247
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !10248
  ret void, !dbg !10249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !10250 {
  ret i32 78, !dbg !10254
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !10255 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10259
  %2 = and i32 %1, 7340032, !dbg !10261
  %3 = icmp ult i32 %2, 2097153, !dbg !10262
  %4 = select i1 %3, i32 30, i32 18, !dbg !10263
  ret i32 %4, !dbg !10264
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !10265 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10269, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i32 0, metadata !10270, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i32 0, metadata !10270, metadata !DIExpression()), !dbg !10271
  br label %2, !dbg !10272

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !10270, metadata !DIExpression()), !dbg !10271
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !10274
  store i8 -1, i8* %4, align 1, !dbg !10277
  %5 = add nuw nsw i32 %3, 1, !dbg !10278
  call void @llvm.dbg.value(metadata i32 %5, metadata !10270, metadata !DIExpression()), !dbg !10271
  %6 = icmp eq i32 %5, 8, !dbg !10279
  br i1 %6, label %7, label %2, !dbg !10272, !llvm.loop !10280

7:                                                ; preds = %2
  ret i1 true, !dbg !10282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !10285, metadata !DIExpression()), !dbg !10286
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10287
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !10288
  %3 = load i8, i8* %2, align 1, !dbg !10288
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !10289
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10290
  %5 = ptrtoint i8* %4 to i32, !dbg !10291
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !10292
  %6 = bitcast i8* %4 to i32*, !dbg !10293
  %7 = load volatile i32, i32* %6, align 4, !dbg !10294
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !10295
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !10296
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !10297
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10298
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !10299
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10300
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !10301
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !10302
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !10303
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10304
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !10305
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10306
  %14 = or i32 %13, 986880, !dbg !10307
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10308
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !10309
  %16 = or i32 %15, 252645135, !dbg !10310
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !10311
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10312
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10313
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !10314
  %20 = load i8, i8* %19, align 1, !dbg !10314
  %21 = zext i8 %20 to i32, !dbg !10315
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !10316
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !10317
  ret void, !dbg !10318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !10319 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !10320
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !10321
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !10322
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10323
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !10324
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10325
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !10326
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !10327
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !10328
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10329
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !10330
  %7 = and i32 %6, -252645136, !dbg !10331
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !10332
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !10333
  %9 = zext i8 %8 to i32, !dbg !10333
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !10334
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !10335
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !10336
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !10338
  %13 = inttoptr i32 %12 to i32*, !dbg !10339
  %14 = load volatile i32, i32* %13, align 4, !dbg !10340
  %15 = icmp eq i32 %11, %14, !dbg !10341
  br i1 %15, label %17, label %16, !dbg !10342

16:                                               ; preds = %0, %16
  br label %16, !dbg !10343, !llvm.loop !10344

17:                                               ; preds = %0
  ret void, !dbg !10346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !10347 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !10348
  %2 = icmp eq i32 %1, 0, !dbg !10350
  br i1 %2, label %3, label %5, !dbg !10351

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10352
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !10354
  br label %5, !dbg !10355

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !10356
  %7 = icmp eq i32 %6, 0, !dbg !10358
  br i1 %7, label %8, label %10, !dbg !10359

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10360
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !10362
  br label %10, !dbg !10363

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10364
  %12 = and i32 %11, -256, !dbg !10365
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10366
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10367
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !10368
  ret void, !dbg !10369
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !10370 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !10371
  %2 = icmp eq i32 %1, 0, !dbg !10373
  br i1 %2, label %4, label %3, !dbg !10374

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10375
  br label %4, !dbg !10377

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !10378
  %6 = icmp eq i32 %5, 0, !dbg !10380
  br i1 %6, label %8, label %7, !dbg !10381

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10382
  br label %8, !dbg !10384

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !10387 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10389, metadata !DIExpression()), !dbg !10390
  ret i32 0, !dbg !10391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !10392 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10394, metadata !DIExpression()), !dbg !10395
  ret i32 0, !dbg !10396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !10401
  ret void, !dbg !10402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !10403 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %1, metadata !10405, metadata !DIExpression()), !dbg !10407
  ret i32 %1, !dbg !10408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10411, metadata !DIExpression()), !dbg !10412
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !10413
  ret void, !dbg !10414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !10415 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !10417, metadata !DIExpression()), !dbg !10418
  ret i32 0, !dbg !10419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !10420 {
  ret i32 0, !dbg !10423
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !10424 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10428, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i8* %1, metadata !10429, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %2, metadata !10430, metadata !DIExpression()), !dbg !10443
  %4 = ptrtoint i8* %0 to i32, !dbg !10444
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !10445
  %7 = and i32 %6, 3, !dbg !10445
  %8 = icmp eq i32 %7, 0, !dbg !10445
  br i1 %8, label %9, label %26, !dbg !10445

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !10446
  call void @llvm.dbg.value(metadata i32* %10, metadata !10432, metadata !DIExpression()), !dbg !10447
  %11 = bitcast i8* %1 to i32*, !dbg !10448
  call void @llvm.dbg.value(metadata i32* %11, metadata !10435, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10443
  %12 = icmp ult i32 %2, 4, !dbg !10449
  br i1 %12, label %65, label %13, !dbg !10452

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !10452

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !10431, metadata !DIExpression()), !dbg !10443
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !10453
  %18 = load i32, i32* %17, align 4, !dbg !10453
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !10456
  %20 = load i32, i32* %19, align 4, !dbg !10456
  %21 = icmp eq i32 %18, %20, !dbg !10457
  %22 = add nuw nsw i32 %16, 1, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %22, metadata !10431, metadata !DIExpression()), !dbg !10443
  %23 = xor i1 %21, true, !dbg !10459
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %22, metadata !10431, metadata !DIExpression()), !dbg !10443
  br i1 %25, label %59, label %15, !dbg !10459, !llvm.loop !10460

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !10462
  %28 = icmp eq i32 %27, 0, !dbg !10462
  br i1 %28, label %31, label %29, !dbg !10462

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10443
  %30 = icmp eq i32 %2, 0, !dbg !10463
  br i1 %30, label %65, label %48, !dbg !10466

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !10467
  call void @llvm.dbg.value(metadata i16* %32, metadata !10436, metadata !DIExpression()), !dbg !10468
  %33 = bitcast i8* %1 to i16*, !dbg !10469
  call void @llvm.dbg.value(metadata i16* %33, metadata !10439, metadata !DIExpression()), !dbg !10468
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10443
  %34 = icmp ult i32 %2, 2, !dbg !10470
  br i1 %34, label %65, label %35, !dbg !10473

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !10473

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !10431, metadata !DIExpression()), !dbg !10443
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !10474
  %40 = load i16, i16* %39, align 2, !dbg !10474
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !10477
  %42 = load i16, i16* %41, align 2, !dbg !10477
  %43 = icmp eq i16 %40, %42, !dbg !10478
  %44 = add nuw nsw i32 %38, 1, !dbg !10479
  call void @llvm.dbg.value(metadata i32 %44, metadata !10431, metadata !DIExpression()), !dbg !10443
  %45 = xor i1 %43, true, !dbg !10480
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %44, metadata !10431, metadata !DIExpression()), !dbg !10443
  br i1 %47, label %61, label %37, !dbg !10480, !llvm.loop !10481

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !10431, metadata !DIExpression()), !dbg !10443
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !10483
  %51 = load i8, i8* %50, align 1, !dbg !10483
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !10486
  %53 = load i8, i8* %52, align 1, !dbg !10486
  %54 = icmp eq i8 %51, %53, !dbg !10487
  %55 = add nuw i32 %49, 1, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %55, metadata !10431, metadata !DIExpression()), !dbg !10443
  %56 = xor i1 %54, true, !dbg !10489
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %55, metadata !10431, metadata !DIExpression()), !dbg !10443
  br i1 %58, label %63, label %48, !dbg !10489, !llvm.loop !10490

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !10492
  br label %65, !dbg !10492

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !10492
  br label %65, !dbg !10492

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !10492
  br label %65, !dbg !10492

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !10443
  ret i1 %66, !dbg !10492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !10493 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10497, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i8* %1, metadata !10498, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 %2, metadata !10499, metadata !DIExpression()), !dbg !10508
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !10500, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i8* %0, metadata !10501, metadata !DIExpression()), !dbg !10508
  %7 = bitcast i8** %4 to i8*, !dbg !10510
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10510
  call void @llvm.dbg.value(metadata i8* %1, metadata !10502, metadata !DIExpression()), !dbg !10508
  store i8* %1, i8** %4, align 4, !dbg !10511
  call void @llvm.dbg.value(metadata i32 0, metadata !10503, metadata !DIExpression()), !dbg !10508
  %8 = bitcast i32* %5 to i8*, !dbg !10512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !10512
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10513
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !10514
  store i8 1, i8* %9, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %2, metadata !10499, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i8* %0, metadata !10501, metadata !DIExpression()), !dbg !10508
  %10 = icmp eq i32 %2, 0, !dbg !10516
  br i1 %10, label %73, label %11, !dbg !10517

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %12, metadata !10501, metadata !DIExpression()), !dbg !10508
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !10517

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10499, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 %20, metadata !10501, metadata !DIExpression()), !dbg !10508
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10519
  %22 = shl i32 %21, 1, !dbg !10521
  %23 = add i32 %22, -1, !dbg !10522
  %24 = and i32 %23, %20, !dbg !10523
  %25 = sub i32 %22, %24, !dbg !10524
  %26 = icmp ugt i32 %19, %25, !dbg !10525
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %27, metadata !10505, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 %27, metadata !10504, metadata !DIExpression()), !dbg !10508
  store i32 %27, i32* %5, align 4, !dbg !10527
  %28 = load i32, i32* %13, align 4, !dbg !10528
  %29 = and i32 %28, 16, !dbg !10530
  %30 = icmp eq i32 %29, 0, !dbg !10530
  br i1 %30, label %31, label %32, !dbg !10531

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !10532
  br label %32, !dbg !10534

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !10535
  %34 = icmp eq i8 %33, 4, !dbg !10537
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !10538
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !10538
  %37 = load i8, i8* %36, align 1, !dbg !10538
  %38 = zext i8 %37 to i32, !dbg !10538
  br i1 %34, label %39, label %43, !dbg !10539

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !10502, metadata !DIExpression(DW_OP_deref)), !dbg !10508
  call void @llvm.dbg.value(metadata i32* %5, metadata !10504, metadata !DIExpression(DW_OP_deref)), !dbg !10508
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %40, metadata !10503, metadata !DIExpression()), !dbg !10508
  %41 = load i8*, i8** %4, align 4, !dbg !10542
  call void @llvm.dbg.value(metadata i8* %41, metadata !10502, metadata !DIExpression()), !dbg !10508
  %42 = load i32, i32* %5, align 4, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %42, metadata !10504, metadata !DIExpression()), !dbg !10508
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !10544
  br label %47, !dbg !10545

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %44, metadata !10503, metadata !DIExpression()), !dbg !10508
  %45 = load i8*, i8** %4, align 4, !dbg !10548
  call void @llvm.dbg.value(metadata i8* %45, metadata !10502, metadata !DIExpression()), !dbg !10508
  %46 = load i32, i32* %5, align 4, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %46, metadata !10504, metadata !DIExpression()), !dbg !10508
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !10550
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !10538
  call void @llvm.dbg.value(metadata i32 %48, metadata !10503, metadata !DIExpression()), !dbg !10508
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %49, metadata !10507, metadata !DIExpression()), !dbg !10508
  %50 = load i8, i8* %14, align 1, !dbg !10552
  %51 = zext i8 %50 to i32, !dbg !10553
  %52 = add i32 %27, 1, !dbg !10554
  %53 = add i32 %52, %51, !dbg !10555
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10556
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10557
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10558
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !10559
  %54 = load i16, i16* %16, align 2, !dbg !10560
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !10561
  %55 = load i16, i16* %16, align 2, !dbg !10562
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !10563
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !10564
  br label %56, !dbg !10565

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !10566
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !10568
  %59 = load i8, i8* %58, align 1, !dbg !10568
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %60, metadata !10506, metadata !DIExpression()), !dbg !10508
  %61 = load i8*, i8** %17, align 4, !dbg !10570
  %62 = load i8, i8* %61, align 1, !dbg !10572
  %63 = zext i8 %62 to i32, !dbg !10572
  %64 = and i32 %60, %63, !dbg !10573
  %65 = icmp eq i32 %64, 0, !dbg !10574
  br i1 %65, label %66, label %56, !dbg !10575, !llvm.loop !10576

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10578
  %67 = load i32, i32* %5, align 4, !dbg !10579
  call void @llvm.dbg.value(metadata i32 %67, metadata !10504, metadata !DIExpression()), !dbg !10508
  %68 = load i8*, i8** %4, align 4, !dbg !10580
  call void @llvm.dbg.value(metadata i8* %68, metadata !10502, metadata !DIExpression()), !dbg !10508
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !10580
  call void @llvm.dbg.value(metadata i8* %69, metadata !10502, metadata !DIExpression()), !dbg !10508
  store i8* %69, i8** %4, align 4, !dbg !10580
  %70 = sub i32 %19, %27, !dbg !10581
  call void @llvm.dbg.value(metadata i32 %70, metadata !10499, metadata !DIExpression()), !dbg !10508
  %71 = add i32 %27, %20, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %71, metadata !10501, metadata !DIExpression()), !dbg !10508
  %72 = icmp eq i32 %70, 0, !dbg !10516
  br i1 %72, label %73, label %18, !dbg !10517, !llvm.loop !10583

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !10585
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10586
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !10587
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10587
  ret void, !dbg !10587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10592, metadata !DIExpression()), !dbg !10594
  br label %2, !dbg !10595

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !10596
  call void @llvm.dbg.value(metadata i32 %3, metadata !10593, metadata !DIExpression()), !dbg !10594
  %4 = icmp eq i32 %3, 0, !dbg !10598
  br i1 %4, label %5, label %2, !dbg !10599, !llvm.loop !10600

5:                                                ; preds = %2
  ret void, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10603 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10605, metadata !DIExpression()), !dbg !10606
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10607
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !10607
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !10608
  %5 = load i8, i8* %4, align 1, !dbg !10608
  %6 = zext i8 %5 to i32, !dbg !10609
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !10610
  ret void, !dbg !10611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !10612 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %1, metadata !10614, metadata !DIExpression()), !dbg !10616
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !10617
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10618
  ret void, !dbg !10619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !10620 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10624, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i8 %1, metadata !10625, metadata !DIExpression()), !dbg !10628
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10629
  call void @llvm.dbg.value(metadata i32 %3, metadata !10626, metadata !DIExpression()), !dbg !10628
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10630
  %5 = load i16, i16* %4, align 2, !dbg !10630
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !10631
  %6 = zext i8 %1 to i32, !dbg !10632
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10633
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10634
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10635
  %7 = load i16, i16* %4, align 2, !dbg !10636
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !10637
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10638
  %9 = lshr i32 %8, 8, !dbg !10639
  %10 = and i32 %9, 255, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %10, metadata !10627, metadata !DIExpression()), !dbg !10628
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !10641
  ret i32 %10, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !10643 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10646
  call void @llvm.dbg.value(metadata i32 %1, metadata !10645, metadata !DIExpression()), !dbg !10647
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !10648
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10649
  %3 = and i32 %2, -513, !dbg !10649
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10649
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !10654 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10656, metadata !DIExpression()), !dbg !10658
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %2, metadata !10657, metadata !DIExpression()), !dbg !10658
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !10660
  br i1 %3, label %4, label %5, !dbg !10662

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !10663
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !10665
  ret void, !dbg !10666

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !10667
  tail call void @Flash_ReturnReady() #21, !dbg !10669
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !10669
  unreachable, !dbg !10669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !10675, metadata !DIExpression()), !dbg !10680
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %1, metadata !10677, metadata !DIExpression()), !dbg !10680
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !10682
  %3 = icmp eq i32 %2, 0, !dbg !10684
  br i1 %3, label %4, label %125, !dbg !10685

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !10686
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10687
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !10675, metadata !DIExpression()), !dbg !10680
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !10689
  %7 = load i32, i32* %6, align 4, !dbg !10689
  %8 = xor i32 %7, -1, !dbg !10689
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !10689
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !10689
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !10689
  %12 = icmp eq i32 %8, %11, !dbg !10689
  br i1 %12, label %14, label %13, !dbg !10692

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !10693
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !10693
  unreachable, !dbg !10693

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10695
  %16 = icmp ult i32 %15, 16, !dbg !10697
  br i1 %16, label %17, label %34, !dbg !10698

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !10699
  %19 = load i8, i8* %18, align 4, !dbg !10699
  %20 = icmp eq i8 %19, 1, !dbg !10700
  br i1 %20, label %21, label %34, !dbg !10701

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !10702

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10704
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !10706
  %27 = load i8, i8* %26, align 1, !dbg !10706
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %28, metadata !10676, metadata !DIExpression()), !dbg !10680
  %29 = load i8*, i8** %23, align 4, !dbg !10708
  %30 = load i8, i8* %29, align 1, !dbg !10710
  %31 = zext i8 %30 to i32, !dbg !10710
  %32 = and i32 %28, %31, !dbg !10711
  %33 = icmp eq i32 %32, 0, !dbg !10712
  br i1 %33, label %34, label %24, !dbg !10713, !llvm.loop !10714

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10716, !range !3326
  %36 = icmp ne i8 %35, 0, !dbg !10716
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !10718
  br i1 %39, label %116, label %40, !dbg !10718

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !10719
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !10719
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !10721
  %44 = load i8, i8* %43, align 1, !dbg !10721
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %45, metadata !10676, metadata !DIExpression()), !dbg !10680
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !10723
  %47 = load i8*, i8** %46, align 4, !dbg !10723
  %48 = load i8, i8* %47, align 1, !dbg !10725
  %49 = zext i8 %48 to i32, !dbg !10725
  %50 = and i32 %45, %49, !dbg !10726
  %51 = icmp eq i32 %50, 0, !dbg !10727
  br i1 %51, label %85, label %52, !dbg !10728

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !10729
  br label %53, !dbg !10731

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !10732
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !10734
  %56 = load i8, i8* %55, align 1, !dbg !10734
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %57, metadata !10676, metadata !DIExpression()), !dbg !10680
  %58 = load i8*, i8** %46, align 4, !dbg !10736
  %59 = load i8, i8* %58, align 1, !dbg !10738
  %60 = zext i8 %59 to i32, !dbg !10738
  %61 = and i32 %57, %60, !dbg !10739
  %62 = icmp eq i32 %61, 0, !dbg !10740
  br i1 %62, label %63, label %53, !dbg !10741, !llvm.loop !10742

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !10744
  %65 = load i32, i32* %64, align 4, !dbg !10744
  %66 = and i32 %65, 4, !dbg !10746
  %67 = icmp eq i32 %66, 0, !dbg !10746
  br i1 %67, label %84, label %68, !dbg !10747

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !10748
  %70 = load i8, i8* %69, align 4, !dbg !10748
  %71 = icmp eq i8 %70, 2, !dbg !10749
  br i1 %71, label %72, label %84, !dbg !10750

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10751
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10753
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10754
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !10755
  %74 = load i16, i16* %73, align 2, !dbg !10755
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !10756
  %75 = load i16, i16* %73, align 2, !dbg !10757
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !10758
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !10759
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10760
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10761
  %76 = load i16, i16* %73, align 2, !dbg !10762
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !10763
  %77 = load i16, i16* %73, align 2, !dbg !10764
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !10765
  br label %78, !dbg !10766

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10767
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10769
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10770
  %79 = load i16, i16* %73, align 2, !dbg !10771
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !10772
  %80 = load i16, i16* %73, align 2, !dbg !10773
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !10774
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10775
  call void @llvm.dbg.value(metadata i32 %81, metadata !10676, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10680
  %82 = and i32 %81, 256, !dbg !10776
  %83 = icmp eq i32 %82, 0, !dbg !10776
  br i1 %83, label %84, label %78, !dbg !10776, !llvm.loop !10777

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !10779
  br label %116, !dbg !10780

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !10781
  %87 = load i32, i32* %86, align 4, !dbg !10781
  %88 = and i32 %87, 2, !dbg !10784
  %89 = icmp eq i32 %88, 0, !dbg !10784
  br i1 %89, label %115, label %90, !dbg !10785

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !10786
  %92 = load %struct.anon.12*, %struct.anon.12** %91, align 4, !dbg !10786
  %93 = icmp eq %struct.anon.12* %92, null, !dbg !10787
  br i1 %93, label %94, label %115, !dbg !10788

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !10789
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !10791
  %97 = load i8, i8* %96, align 1, !dbg !10791
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %98, metadata !10676, metadata !DIExpression()), !dbg !10680
  %99 = load i8*, i8** %46, align 4, !dbg !10793
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !10795
  %101 = load i8, i8* %100, align 1, !dbg !10795
  %102 = zext i8 %101 to i32, !dbg !10795
  %103 = and i32 %98, %102, !dbg !10796
  %104 = icmp eq i32 %103, 0, !dbg !10797
  br i1 %104, label %105, label %115, !dbg !10798

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !10799
  %107 = load i8, i8* %106, align 1, !dbg !10799
  %108 = zext i8 %107 to i32, !dbg !10799
  %109 = and i32 %98, %108, !dbg !10800
  %110 = icmp eq i32 %109, 0, !dbg !10801
  br i1 %110, label %111, label %115, !dbg !10802

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !10803
  %113 = load i16, i16* %112, align 2, !dbg !10803
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !10805
  %114 = load i16, i16* %112, align 2, !dbg !10806
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !10807
  br label %115, !dbg !10808

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10809
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10810
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !10811
  %118 = sub i32 0, %117, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %118, metadata !10678, metadata !DIExpression()), !dbg !10812
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !10813
  %120 = icmp ult i32 %119, %118, !dbg !10815
  br i1 %120, label %121, label %122, !dbg !10816

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !10817
  br label %122, !dbg !10819

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10820
  %124 = and i32 %123, -513, !dbg !10820
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10820
  br label %125, !dbg !10823

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10680
  ret void, !dbg !10824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10825 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10827, metadata !DIExpression()), !dbg !10831
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !10832
  %3 = icmp eq i32 %2, -1, !dbg !10834
  br i1 %3, label %12, label %4, !dbg !10835

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !10829, metadata !DIExpression()), !dbg !10831
  %5 = sub i32 0, %2, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %5, metadata !10830, metadata !DIExpression()), !dbg !10831
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !10838
  %7 = load i8, i8* %6, align 4, !dbg !10838
  %8 = zext i8 %7 to i32, !dbg !10840
  %9 = icmp ugt i32 %8, %5, !dbg !10841
  br i1 %9, label %10, label %12, !dbg !10842

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !10843
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !10845
  br label %12, !dbg !10846

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %13, metadata !10828, metadata !DIExpression()), !dbg !10831
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10848
  %15 = load i16, i16* %14, align 2, !dbg !10848
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10849
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !10849
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !10850
  %19 = load i8, i8* %18, align 1, !dbg !10850
  %20 = zext i8 %19 to i32, !dbg !10851
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !10852
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !10855 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %1, metadata !10857, metadata !DIExpression()), !dbg !10859
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10860
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10861
  %3 = and i32 %2, -513, !dbg !10861
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10861
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10864
  ret void, !dbg !10865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10866 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10870, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata i32 %1, metadata !10871, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata i8 %2, metadata !10872, metadata !DIExpression()), !dbg !10874
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10875
  call void @llvm.dbg.value(metadata i32 %4, metadata !10873, metadata !DIExpression()), !dbg !10874
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10876
  %6 = load i16, i16* %5, align 2, !dbg !10876
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !10877
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10878
  %7 = zext i8 %2 to i32, !dbg !10879
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10880
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10881
  %8 = load i16, i16* %5, align 2, !dbg !10882
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !10883
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !10884
  ret void, !dbg !10885
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !10886 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %1, metadata !10890, metadata !DIExpression()), !dbg !10892
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !10893
  br i1 %2, label %4, label %3, !dbg !10895

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !10896
  br label %4, !dbg !10898

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10899
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10899
  ret i32 %5, !dbg !10900
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !10901 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10908
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10905, metadata !DIExpression()), !dbg !10909
  call void @llvm.dbg.value(metadata i8 0, metadata !10907, metadata !DIExpression()), !dbg !10909
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !10910
  %3 = load i32, i32* %2, align 4, !dbg !10910
  %4 = xor i32 %3, -1, !dbg !10910
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !10910
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !10910
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !10910
  %8 = icmp eq i32 %4, %7, !dbg !10910
  br i1 %8, label %10, label %9, !dbg !10913

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10914
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !10914
  unreachable, !dbg !10914

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10916
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10917
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10917
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !10918
  %14 = load i8, i8* %13, align 1, !dbg !10918
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %15, metadata !10906, metadata !DIExpression()), !dbg !10909
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10920
  %17 = load i8*, i8** %16, align 4, !dbg !10920
  %18 = load i8, i8* %17, align 1, !dbg !10922
  %19 = zext i8 %18 to i32, !dbg !10922
  %20 = and i32 %15, %19, !dbg !10923
  %21 = icmp eq i32 %20, 0, !dbg !10924
  br i1 %21, label %22, label %23, !dbg !10925

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10926
  call void @llvm.dbg.value(metadata i8 1, metadata !10907, metadata !DIExpression()), !dbg !10909
  br label %23, !dbg !10928

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !10907, metadata !DIExpression()), !dbg !10909
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10929
  ret i1 %21, !dbg !10930
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10933, metadata !DIExpression()), !dbg !10934
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10935, !range !3326
  %2 = icmp eq i8 %1, 0, !dbg !10935
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10935
  %4 = icmp eq i8 %3, 0, !dbg !10935
  %5 = select i1 %2, i1 true, i1 %4, !dbg !10935
  br i1 %5, label %6, label %7, !dbg !10935

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10938
  tail call void @Flash_ReturnReady() #21, !dbg !10940
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !10940
  unreachable, !dbg !10940

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10944
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !10933, metadata !DIExpression()), !dbg !10934
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !10945
  ret void, !dbg !10946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10947 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10949, metadata !DIExpression()), !dbg !10951
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10952
  call void @llvm.dbg.value(metadata i32 %2, metadata !10950, metadata !DIExpression()), !dbg !10951
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10953
  %4 = load i16, i16* %3, align 2, !dbg !10953
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10954
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !10954
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !10955
  %8 = load i8, i8* %7, align 1, !dbg !10955
  %9 = zext i8 %8 to i32, !dbg !10956
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !10957
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !10958
  %11 = load i8, i8* %10, align 4, !dbg !10958
  %12 = icmp eq i8 %11, 0, !dbg !10960
  br i1 %12, label %14, label %13, !dbg !10961

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !10962
  br label %14, !dbg !10964

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !10965
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !10966
  ret void, !dbg !10967
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !10968 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10970, metadata !DIExpression()), !dbg !10972
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10973
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10974
  ret void, !dbg !10975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !10976 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10980
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10978, metadata !DIExpression()), !dbg !10981
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10982, !range !3326
  %3 = icmp ne i8 %2, 0, !dbg !10982
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10982
  %5 = icmp eq i8 %4, 0, !dbg !10982
  %6 = select i1 %3, i1 %5, i1 false, !dbg !10982
  br i1 %6, label %8, label %7, !dbg !10982

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10985
  tail call void @Flash_ReturnReady() #21, !dbg !10987
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !10987
  unreachable, !dbg !10987

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !10991
  %10 = load i32, i32* %9, align 4, !dbg !10991
  %11 = xor i32 %10, -1, !dbg !10991
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !10991
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !10991
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !10991
  %15 = icmp eq i32 %11, %14, !dbg !10991
  br i1 %15, label %17, label %16, !dbg !10994

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !10995
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !10995
  unreachable, !dbg !10995

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10997
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !10998

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !10999
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !11001
  %23 = load i8, i8* %22, align 1, !dbg !11001
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %24, metadata !10979, metadata !DIExpression()), !dbg !10981
  %25 = load i8*, i8** %19, align 4, !dbg !11003
  %26 = load i8, i8* %25, align 1, !dbg !11005
  %27 = zext i8 %26 to i32, !dbg !11005
  %28 = and i32 %24, %27, !dbg !11006
  %29 = icmp eq i32 %28, 0, !dbg !11007
  br i1 %29, label %30, label %20, !dbg !11008, !llvm.loop !11009

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !11011
  ret void, !dbg !11012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !11013 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !11015, metadata !DIExpression()), !dbg !11016
  ret void, !dbg !11017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !11018 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11042, metadata !DIExpression()), !dbg !11044
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !11045
  %4 = load i8*, i8** %3, align 4, !dbg !11045
  call void @llvm.dbg.value(metadata i8* %4, metadata !11043, metadata !DIExpression()), !dbg !11044
  store i8 1, i8* %4, align 1, !dbg !11046
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !11047
  store i8 2, i8* %5, align 1, !dbg !11048
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !11049
  store i8 8, i8* %6, align 1, !dbg !11050
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !11051
  store i8 4, i8* %7, align 1, !dbg !11052
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11053
  store i8 60, i8* %8, align 1, !dbg !11054
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !11055
  store i8 -128, i8* %9, align 1, !dbg !11056
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !11057
  store i8 96, i8* %10, align 1, !dbg !11058
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !11059
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11059
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !11060
  store i8 43, i8* %13, align 1, !dbg !11061
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11062
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !11063
  store i8 43, i8* %15, align 1, !dbg !11064
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11065
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !11066
  store i8 47, i8* %17, align 1, !dbg !11067
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11068
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !11069
  store i8 5, i8* %19, align 1, !dbg !11070
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11071
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !11072
  store i8 1, i8* %21, align 1, !dbg !11073
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11074
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !11075
  store i8 43, i8* %23, align 1, !dbg !11076
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !11077
  store i8 22, i8* %24, align 4, !dbg !11078
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !11079
  %26 = load i8, i8* %25, align 1, !dbg !11079
  %27 = icmp eq i8 %26, 32, !dbg !11081
  br i1 %27, label %28, label %49, !dbg !11082

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !11083
  %30 = load i8, i8* %29, align 1, !dbg !11083
  %31 = icmp eq i8 %30, 24, !dbg !11084
  br i1 %31, label %32, label %41, !dbg !11085

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11086
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !11088
  store i8 117, i8* %34, align 1, !dbg !11089
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11090
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !11091
  store i8 122, i8* %36, align 1, !dbg !11092
  %37 = load i8, i8* %25, align 1, !dbg !11093
  %38 = icmp eq i8 %37, 32, !dbg !11095
  br i1 %38, label %39, label %49, !dbg !11096

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !11098
  br label %41, !dbg !11098

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !11098
  %43 = icmp eq i8 %42, 22, !dbg !11099
  br i1 %43, label %44, label %49, !dbg !11100

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11101
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !11103
  store i8 117, i8* %46, align 1, !dbg !11104
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !11105
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !11106
  store i8 122, i8* %48, align 1, !dbg !11107
  br label %49, !dbg !11108

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !11109
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !11110
  ret i32 0, !dbg !11111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !11112 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !11114, metadata !DIExpression()), !dbg !11118
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11119
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11115, metadata !DIExpression()), !dbg !11118
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !11120
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !11121
  %5 = load i8, i8* %4, align 1, !dbg !11123
  %6 = icmp eq i8 %5, -62, !dbg !11124
  br i1 %6, label %7, label %15, !dbg !11125

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !11126
  %9 = load i8, i8* %8, align 1, !dbg !11126
  %10 = icmp eq i8 %9, 32, !dbg !11127
  br i1 %10, label %11, label %15, !dbg !11128

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !11129
  %13 = load i8, i8* %12, align 1, !dbg !11129
  %14 = icmp eq i8 %13, 22, !dbg !11130
  br i1 %14, label %48, label %15, !dbg !11131

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !11132
  %17 = bitcast i8* %16 to i16*, !dbg !11132
  %18 = load i16, i16* %17, align 2, !dbg !11132
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11133
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !11133
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !11133
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !11134
  %23 = load i8, i8* %22, align 1, !dbg !11134
  %24 = zext i8 %23 to i32, !dbg !11135
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !11136
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !11137
  %25 = load i16, i16* %17, align 2, !dbg !11138
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !11139
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !11140
  call void @llvm.dbg.value(metadata i8* %2, metadata !11117, metadata !DIExpression(DW_OP_deref)), !dbg !11118
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !11141
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !11142
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !11143
  %30 = load i8, i8* %29, align 1, !dbg !11143
  %31 = zext i8 %30 to i32, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %31, metadata !11116, metadata !DIExpression()), !dbg !11118
  %32 = shl nuw nsw i32 %31, 8, !dbg !11145
  %33 = load i8, i8* %2, align 1, !dbg !11146
  call void @llvm.dbg.value(metadata i8 %33, metadata !11117, metadata !DIExpression()), !dbg !11118
  %34 = zext i8 %33 to i32, !dbg !11146
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11147
  %36 = bitcast i8* %35 to i8**, !dbg !11147
  %37 = load i8*, i8** %36, align 4, !dbg !11147
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !11148
  %39 = load i8, i8* %38, align 1, !dbg !11148
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !11149
  %41 = load i8, i8* %40, align 1, !dbg !11149
  %42 = or i8 %41, %39, !dbg !11150
  %43 = zext i8 %42 to i32, !dbg !11150
  %44 = xor i32 %43, -1, !dbg !11151
  %45 = and i32 %44, %34, !dbg !11152
  %46 = or i32 %45, %32, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %46, metadata !11116, metadata !DIExpression()), !dbg !11118
  %47 = load i16, i16* %17, align 2, !dbg !11154
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !11155
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !11156
  br label %48, !dbg !11157

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !11158
  ret i32 0, !dbg !11158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !11159 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !11161, metadata !DIExpression()), !dbg !11163
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !11164
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !11165

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !11166
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !11168
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !11169
  call void @llvm.dbg.value(metadata i8* %2, metadata !11162, metadata !DIExpression(DW_OP_deref)), !dbg !11163
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !11170
  %10 = load i8, i8* %2, align 1, !dbg !11171
  call void @llvm.dbg.value(metadata i8 %10, metadata !11162, metadata !DIExpression()), !dbg !11163
  %11 = load i8*, i8** %5, align 4, !dbg !11172
  %12 = load i8, i8* %11, align 1, !dbg !11173
  %13 = and i8 %12, %10, !dbg !11174
  %14 = icmp eq i8 %13, 0, !dbg !11175
  br i1 %14, label %15, label %6, !dbg !11176, !llvm.loop !11177

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !11179
  ret void, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !11182, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11183, metadata !DIExpression()), !dbg !11185
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !11186
  %4 = load i8*, i8** %3, align 4, !dbg !11186
  call void @llvm.dbg.value(metadata i8* %4, metadata !11184, metadata !DIExpression()), !dbg !11185
  store i8 1, i8* %4, align 1, !dbg !11187
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !11188
  store i8 2, i8* %5, align 1, !dbg !11189
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !11190
  store i8 -128, i8* %6, align 1, !dbg !11191
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !11192
  store i8 -128, i8* %7, align 1, !dbg !11193
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11194
  store i8 60, i8* %8, align 1, !dbg !11195
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !11196
  store i8 -128, i8* %9, align 1, !dbg !11197
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !11198
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11198
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !11199
  store i8 -97, i8* %12, align 1, !dbg !11200
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11201
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !11202
  store i8 53, i8* %14, align 1, !dbg !11203
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11204
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !11205
  store i8 53, i8* %16, align 1, !dbg !11206
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11207
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !11208
  store i8 5, i8* %18, align 1, !dbg !11209
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11210
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !11211
  store i8 1, i8* %20, align 1, !dbg !11212
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11213
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !11214
  store i8 117, i8* %22, align 1, !dbg !11215
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !11216
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !11217
  store i8 122, i8* %24, align 1, !dbg !11218
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !11219
  store i8 22, i8* %25, align 4, !dbg !11220
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !11221
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !11222
  ret i32 0, !dbg !11223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !11224 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !11226, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !11227, metadata !DIExpression()), !dbg !11228
  ret i32 0, !dbg !11229
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !11230 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !11232, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11233, metadata !DIExpression()), !dbg !11234
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !11235
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !11236
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !11237
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !11238
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !11239
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !11240
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !11241
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !11242
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !11243
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !11244
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !11245
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !11246
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !11247
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !11248
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !11249
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !11250
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !11251
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !11252
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !11253
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !11254
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !11255
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !11256
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !11257
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !11258
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !11259
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !11260
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !11261
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !11262
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !11263
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !11264
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !11265
  %19 = icmp ugt i32 %18, 16777216, !dbg !11267
  %20 = select i1 %19, i8 4, i8 3, !dbg !11268
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !11269
  store i8 %20, i8* %21, align 1, !dbg !11271
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !11272
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11272
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !11273
  store i8 0, i8* %24, align 1, !dbg !11274
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11275
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !11276
  store i8 -81, i8* %26, align 1, !dbg !11277
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11278
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !11279
  store i8 -97, i8* %28, align 1, !dbg !11280
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11281
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !11282
  store i8 2, i8* %30, align 1, !dbg !11283
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11284
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !11285
  store i8 32, i8* %32, align 1, !dbg !11286
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11287
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !11288
  store i8 82, i8* %34, align 1, !dbg !11289
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11290
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !11291
  store i8 -40, i8* %36, align 1, !dbg !11292
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11293
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !11294
  store i8 -80, i8* %38, align 1, !dbg !11295
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11296
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !11297
  store i8 48, i8* %40, align 1, !dbg !11298
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11299
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !11300
  store i8 6, i8* %42, align 1, !dbg !11301
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11302
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !11303
  store i8 -71, i8* %44, align 1, !dbg !11304
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11305
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !11306
  store i8 -85, i8* %46, align 1, !dbg !11307
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !11308
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !11309
  store i8 5, i8* %48, align 1, !dbg !11310
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !11311
  store i16 0, i16* %49, align 4, !dbg !11312
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !11313
  store %struct.anon.12* null, %struct.anon.12** %50, align 4, !dbg !11314
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !11315
  store %struct.anon.12* null, %struct.anon.12** %51, align 4, !dbg !11316
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !11317
  store i8 0, i8* %52, align 4, !dbg !11318
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !11319
  store i8 5, i8* %53, align 4, !dbg !11320
  ret i32 0, !dbg !11321
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !11322 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11324, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.value(metadata i8* %1, metadata !11325, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.value(metadata i8* %1, metadata !11326, metadata !DIExpression()), !dbg !11342
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11343
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11339, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.value(metadata i32 0, metadata !11340, metadata !DIExpression()), !dbg !11342
  %4 = bitcast i8* %1 to i32*, !dbg !11344
  store i32 0, i32* %4, align 4, !dbg !11345
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !11340, metadata !DIExpression()), !dbg !11342
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !11346
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !11347
  %9 = load i32, i32* %8, align 4, !dbg !11347
  %10 = icmp eq i32 %9, 0, !dbg !11348
  br i1 %10, label %34, label %11, !dbg !11349

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !11349

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !11340, metadata !DIExpression()), !dbg !11342
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !11350
  store i32 %17, i32* %19, align 4, !dbg !11352
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !11353
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !11354
  %22 = load i32, i32* %21, align 4, !dbg !11354
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !11355
  store i32 %22, i32* %23, align 4, !dbg !11356
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !11357
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !11358
  %26 = load i32, i32* %25, align 4, !dbg !11358
  %27 = load i32, i32* %4, align 4, !dbg !11359
  %28 = add i32 %27, %26, !dbg !11359
  store i32 %28, i32* %4, align 4, !dbg !11359
  %29 = add i32 %18, 1, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %29, metadata !11340, metadata !DIExpression()), !dbg !11342
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !11346
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !11347
  %32 = load i32, i32* %31, align 4, !dbg !11347
  %33 = icmp eq i32 %32, 0, !dbg !11348
  br i1 %33, label %34, label %16, !dbg !11349, !llvm.loop !11361

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !11342
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !11363
  %37 = bitcast i8* %36 to i32*, !dbg !11363
  store i32 %35, i32* %37, align 4, !dbg !11364
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !11365
  %39 = bitcast i8* %38 to i16*, !dbg !11365
  store i16 512, i16* %39, align 4, !dbg !11366
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !11367
  br label %40, !dbg !11368

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !11369
  call void @llvm.dbg.value(metadata i32 %41, metadata !11341, metadata !DIExpression()), !dbg !11342
  %42 = icmp eq i32 %41, -121, !dbg !11371
  br i1 %42, label %40, label %43, !dbg !11372, !llvm.loop !11373

43:                                               ; preds = %40
  ret i32 0, !dbg !11375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !11376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11378, metadata !DIExpression()), !dbg !11382
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11383
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !11379, metadata !DIExpression()), !dbg !11382
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11384
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !11385

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11386
  call void @llvm.dbg.value(metadata i32 %8, metadata !11381, metadata !DIExpression()), !dbg !11382
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !11388, !range !3326
  %10 = icmp eq i8 %9, 0, !dbg !11388
  br i1 %10, label %12, label %11, !dbg !11390

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !11391
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !11393
  br label %12, !dbg !11394

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !11395
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !11396
  %15 = load i8, i8* %14, align 1, !dbg !11396
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %16, metadata !11380, metadata !DIExpression()), !dbg !11382
  %17 = load i8*, i8** %6, align 4, !dbg !11398
  %18 = load i8, i8* %17, align 1, !dbg !11400
  %19 = zext i8 %18 to i32, !dbg !11400
  %20 = and i32 %16, %19, !dbg !11401
  %21 = icmp eq i32 %20, 0, !dbg !11402
  br i1 %21, label %22, label %25, !dbg !11403

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !11404
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !11406
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11407
  %24 = bitcast i8* %23 to i8**, !dbg !11407
  store i8* null, i8** %24, align 4, !dbg !11408
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11409
  ret i32 0, !dbg !11410

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !11411
  br label %7, !dbg !11385, !llvm.loop !11413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !11415 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11417, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 0, metadata !11419, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 1, metadata !11423, metadata !DIExpression()), !dbg !11431
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11432
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11424, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 0, metadata !11425, metadata !DIExpression()), !dbg !11431
  %4 = bitcast i8* %0 to i32*, !dbg !11433
  %5 = load i32, i32* %4, align 4, !dbg !11433
  %6 = xor i32 %5, -1, !dbg !11433
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11433
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !11433
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !11433
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !11433
  %11 = icmp eq i32 %6, %10, !dbg !11433
  br i1 %11, label %13, label %12, !dbg !11436

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !11437
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11437
  unreachable, !dbg !11437

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11439
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !11440
  store i8 2, i8* %14, align 4, !dbg !11441
  call void @llvm.dbg.value(metadata i32 %19, metadata !11425, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !11431
  br label %15, !dbg !11442

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !11443
  call void @llvm.dbg.value(metadata i32 %16, metadata !11419, metadata !DIExpression()), !dbg !11431
  %17 = icmp eq i32 %16, -121, !dbg !11445
  br i1 %17, label %15, label %18, !dbg !11446, !llvm.loop !11447

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !11449
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11450
  %21 = bitcast i8* %20 to i8**, !dbg !11450
  %22 = load i8*, i8** %21, align 4, !dbg !11450
  %23 = ptrtoint i8* %22 to i32, !dbg !11451
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !11452
  call void @llvm.dbg.value(metadata i32 %24, metadata !11420, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %24, metadata !11421, metadata !DIExpression()), !dbg !11431
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !11453
  %26 = bitcast i8* %25 to i16*, !dbg !11453
  %27 = load i16, i16* %26, align 2, !dbg !11453
  %28 = zext i16 %27 to i32, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %28, metadata !11426, metadata !DIExpression()), !dbg !11455
  %29 = lshr i32 %24, 10, !dbg !11456
  call void @llvm.dbg.value(metadata i32 %29, metadata !11429, metadata !DIExpression()), !dbg !11455
  %30 = and i32 %29, %28, !dbg !11457
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !11459
  %33 = icmp eq i32 %32, 0, !dbg !11459
  call void @llvm.dbg.value(metadata i32 0, metadata !11430, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %29, metadata !11429, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %28, metadata !11426, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 1, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %24, metadata !11421, metadata !DIExpression()), !dbg !11431
  br i1 %33, label %34, label %51, !dbg !11459

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !11430, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %36, metadata !11429, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %37, metadata !11426, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i32 %38, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %39, metadata !11421, metadata !DIExpression()), !dbg !11431
  %40 = and i32 %37, 1, !dbg !11460
  %41 = icmp eq i32 %40, 0, !dbg !11460
  %42 = add i32 %35, 10, !dbg !11466
  %43 = shl nuw i32 1, %42, !dbg !11466
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !11466
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !11466
  call void @llvm.dbg.value(metadata i32 %45, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %44, metadata !11421, metadata !DIExpression()), !dbg !11431
  %46 = lshr i32 %37, 1, !dbg !11467
  call void @llvm.dbg.value(metadata i32 %46, metadata !11426, metadata !DIExpression()), !dbg !11455
  %47 = lshr i32 %36, 1, !dbg !11468
  call void @llvm.dbg.value(metadata i32 %47, metadata !11429, metadata !DIExpression()), !dbg !11455
  %48 = add i32 %35, 1, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %48, metadata !11430, metadata !DIExpression()), !dbg !11455
  %49 = and i32 %36, 2, !dbg !11470
  %50 = icmp eq i32 %49, 0, !dbg !11470
  br i1 %50, label %34, label %51, !dbg !11471, !llvm.loop !11472

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !11474
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !11475
  call void @llvm.dbg.value(metadata i32 %53, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %52, metadata !11421, metadata !DIExpression()), !dbg !11431
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !11476

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11477
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !11477
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !11477
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !11479
  br label %70, !dbg !11480

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11481
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !11481
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !11481
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !11482
  br label %70, !dbg !11483

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11484
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !11484
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !11484
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !11485
  br label %70, !dbg !11486

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !11487
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11487
  unreachable, !dbg !11487

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !11491
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !11491
  store i8 %73, i8* %74, align 1, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %53, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %52, metadata !11421, metadata !DIExpression()), !dbg !11431
  %75 = trunc i32 %19 to i8, !dbg !11492
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !11492

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11493
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !11493
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !11493
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !11495
  br label %91, !dbg !11496

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11497
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !11497
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !11497
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !11498
  br label %91, !dbg !11499

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11500
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !11500
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !11500
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !11501
  br label %91, !dbg !11502

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !11503
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !11503
  store i8 %94, i8* %95, align 1, !dbg !11503
  br label %96, !dbg !11504

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !11422, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %53, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %16, metadata !11419, metadata !DIExpression()), !dbg !11431
  %97 = icmp eq i32 %53, 0, !dbg !11504
  br i1 %97, label %111, label %98, !dbg !11507

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !11508
  call void @llvm.dbg.value(metadata i8* %99, metadata !11422, metadata !DIExpression()), !dbg !11431
  %100 = ptrtoint i8* %99 to i32, !dbg !11509
  call void @llvm.dbg.value(metadata i32 %100, metadata !11422, metadata !DIExpression()), !dbg !11431
  br label %101, !dbg !11507

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !11423, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %103, metadata !11422, metadata !DIExpression()), !dbg !11431
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !11510
  br label %104, !dbg !11512

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %105, metadata !11419, metadata !DIExpression()), !dbg !11431
  %106 = icmp eq i32 %105, -121, !dbg !11515
  br i1 %106, label %104, label %107, !dbg !11517, !llvm.loop !11518

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !11520
  call void @llvm.dbg.value(metadata i32 %108, metadata !11423, metadata !DIExpression()), !dbg !11431
  %109 = add i32 %103, %52, !dbg !11521
  call void @llvm.dbg.value(metadata i32 %109, metadata !11422, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 %105, metadata !11419, metadata !DIExpression()), !dbg !11431
  %110 = icmp eq i32 %108, 0, !dbg !11504
  br i1 %110, label %111, label %101, !dbg !11507, !llvm.loop !11522

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !11431
  store i8 0, i8* %14, align 4, !dbg !11524
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11525
  ret i32 %112, !dbg !11526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !11527 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11529, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i8* %1, metadata !11530, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i8* %2, metadata !11531, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i32 %3, metadata !11532, metadata !DIExpression()), !dbg !11546
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11547
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !11533, metadata !DIExpression()), !dbg !11546
  %8 = ptrtoint i8* %1 to i32, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %8, metadata !11535, metadata !DIExpression()), !dbg !11546
  %9 = bitcast i8** %5 to i8*, !dbg !11549
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !11549
  call void @llvm.dbg.value(metadata i8* %2, metadata !11536, metadata !DIExpression()), !dbg !11546
  store i8* %2, i8** %5, align 4, !dbg !11550
  call void @llvm.dbg.value(metadata i32 0, metadata !11538, metadata !DIExpression()), !dbg !11546
  %10 = bitcast i32* %6 to i8*, !dbg !11551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !11551
  %11 = bitcast i8* %0 to i32*, !dbg !11552
  %12 = load i32, i32* %11, align 4, !dbg !11552
  %13 = xor i32 %12, -1, !dbg !11552
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11552
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !11552
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !11552
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !11552
  %18 = icmp eq i32 %13, %17, !dbg !11552
  br i1 %18, label %20, label %19, !dbg !11555

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !11556
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11556
  unreachable, !dbg !11556

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11558
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !11559
  store i8 1, i8* %21, align 4, !dbg !11560
  br label %22, !dbg !11561

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !11562
  call void @llvm.dbg.value(metadata i32 %23, metadata !11538, metadata !DIExpression()), !dbg !11546
  %24 = icmp eq i32 %23, -121, !dbg !11564
  br i1 %24, label %22, label %25, !dbg !11565, !llvm.loop !11566

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !11568
  br i1 %26, label %104, label %27, !dbg !11569

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !11569

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !11570
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !11546
  call void @llvm.dbg.value(metadata i32 %38, metadata !11535, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i32 %37, metadata !11532, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i8* %36, metadata !11536, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i8* %36, metadata !11537, metadata !DIExpression()), !dbg !11546
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !11571
  %40 = shl i32 %39, 1, !dbg !11572
  %41 = add i32 %40, -1, !dbg !11573
  %42 = and i32 %41, %38, !dbg !11574
  %43 = sub i32 %40, %42, !dbg !11575
  %44 = icmp ugt i32 %37, %43, !dbg !11576
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !11577
  call void @llvm.dbg.value(metadata i32 %45, metadata !11539, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i32 %45, metadata !11540, metadata !DIExpression()), !dbg !11546
  store i32 %45, i32* %6, align 4, !dbg !11578
  call void @llvm.dbg.value(metadata i8* %36, metadata !11536, metadata !DIExpression()), !dbg !11546
  %46 = ptrtoint i8* %36 to i32, !dbg !11579
  %47 = and i32 %46, 134217728, !dbg !11580
  %48 = icmp eq i32 %47, 0, !dbg !11580
  br i1 %48, label %58, label %49, !dbg !11581

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !11542, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i32 %45, metadata !11540, metadata !DIExpression()), !dbg !11546
  %50 = icmp eq i32 %45, 0, !dbg !11583
  br i1 %50, label %58, label %51, !dbg !11586

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !11542, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i8* %36, metadata !11536, metadata !DIExpression()), !dbg !11546
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !11587
  %54 = load i8, i8* %53, align 1, !dbg !11587
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !11589
  store i8 %54, i8* %55, align 1, !dbg !11590
  %56 = add nuw i32 %52, 1, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %56, metadata !11542, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i32 %45, metadata !11540, metadata !DIExpression()), !dbg !11546
  %57 = icmp eq i32 %56, %45, !dbg !11583
  br i1 %57, label %58, label %51, !dbg !11586, !llvm.loop !11592

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !11594
  call void @llvm.dbg.value(metadata i8* %59, metadata !11537, metadata !DIExpression()), !dbg !11546
  %60 = load i32, i32* %29, align 4, !dbg !11595
  %61 = and i32 %60, 16, !dbg !11597
  %62 = icmp eq i32 %61, 0, !dbg !11597
  br i1 %62, label %63, label %64, !dbg !11598

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !11599
  br label %64, !dbg !11601

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !11602
  %66 = icmp eq i8 %65, 4, !dbg !11604
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !11605
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !11605
  %69 = load i8, i8* %68, align 1, !dbg !11605
  %70 = zext i8 %69 to i32, !dbg !11605
  br i1 %66, label %71, label %75, !dbg !11606

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !11536, metadata !DIExpression(DW_OP_deref)), !dbg !11546
  call void @llvm.dbg.value(metadata i32* %6, metadata !11540, metadata !DIExpression(DW_OP_deref)), !dbg !11546
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !11607
  call void @llvm.dbg.value(metadata i32 %72, metadata !11541, metadata !DIExpression()), !dbg !11546
  %73 = load i8*, i8** %5, align 4, !dbg !11609
  call void @llvm.dbg.value(metadata i8* %73, metadata !11536, metadata !DIExpression()), !dbg !11546
  %74 = load i32, i32* %6, align 4, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %74, metadata !11540, metadata !DIExpression()), !dbg !11546
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !11611
  br label %79, !dbg !11612

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !11613
  call void @llvm.dbg.value(metadata i32 %76, metadata !11541, metadata !DIExpression()), !dbg !11546
  %77 = load i8*, i8** %5, align 4, !dbg !11615
  call void @llvm.dbg.value(metadata i8* %77, metadata !11536, metadata !DIExpression()), !dbg !11546
  %78 = load i32, i32* %6, align 4, !dbg !11616
  call void @llvm.dbg.value(metadata i32 %78, metadata !11540, metadata !DIExpression()), !dbg !11546
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !11617
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !11605
  call void @llvm.dbg.value(metadata i32 %80, metadata !11541, metadata !DIExpression()), !dbg !11546
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !11618
  call void @llvm.dbg.value(metadata i32 %81, metadata !11534, metadata !DIExpression()), !dbg !11546
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !11619
  %82 = load i8, i8* %30, align 1, !dbg !11620
  %83 = zext i8 %82 to i32, !dbg !11621
  %84 = add i32 %45, 1, !dbg !11622
  %85 = add i32 %84, %83, !dbg !11623
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !11624
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !11625
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !11626
  %86 = load i16, i16* %34, align 2, !dbg !11627
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !11628
  %87 = load i16, i16* %34, align 2, !dbg !11629
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !11630
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !11631
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !11632

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !11633
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %94, metadata !11538, metadata !DIExpression()), !dbg !11546
  %95 = icmp eq i32 %94, 0, !dbg !11636
  br i1 %95, label %92, label %96, !dbg !11637, !llvm.loop !11638

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %97, metadata !11540, metadata !DIExpression()), !dbg !11546
  %98 = load i8*, i8** %5, align 4, !dbg !11641
  call void @llvm.dbg.value(metadata i8* %98, metadata !11536, metadata !DIExpression()), !dbg !11546
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !11641
  call void @llvm.dbg.value(metadata i8* %99, metadata !11536, metadata !DIExpression()), !dbg !11546
  store i8* %99, i8** %5, align 4, !dbg !11641
  %100 = sub i32 %37, %45, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %100, metadata !11532, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i32 undef, metadata !11535, metadata !DIExpression()), !dbg !11546
  %101 = icmp eq i32 %94, 1, !dbg !11643
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !11645
  br i1 %103, label %35, label %104, !dbg !11645, !llvm.loop !11646

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !11546
  call void @llvm.dbg.value(metadata i32 %105, metadata !11538, metadata !DIExpression()), !dbg !11546
  store i8 0, i8* %21, align 4, !dbg !11648
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11649
  %106 = icmp eq i32 %105, 1, !dbg !11650
  %107 = select i1 %106, i32 0, i32 %105, !dbg !11546
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !11652
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !11652
  ret i32 %107, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !11653 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !11655, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32 undef, metadata !11656, metadata !DIExpression()), !dbg !11657
  ret i32 -12, !dbg !11658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !11659 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11661, metadata !DIExpression()), !dbg !11671
  call void @llvm.dbg.value(metadata i32 undef, metadata !11662, metadata !DIExpression()), !dbg !11671
  call void @llvm.dbg.value(metadata i32 0, metadata !11664, metadata !DIExpression()), !dbg !11671
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11672
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11665, metadata !DIExpression()), !dbg !11671
  %4 = bitcast i8* %0 to i32*, !dbg !11673
  %5 = load i32, i32* %4, align 4, !dbg !11673
  %6 = xor i32 %5, -1, !dbg !11673
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11673
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !11673
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !11673
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !11673
  %11 = icmp eq i32 %6, %10, !dbg !11673
  br i1 %11, label %13, label %12, !dbg !11676

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !11677
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11677
  unreachable, !dbg !11677

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11679
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !11679
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !11679
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !11680
  %18 = load i8, i8* %17, align 1, !dbg !11680
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %19, metadata !11666, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11671
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !11682
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !11683
  %22 = load i8, i8* %21, align 1, !dbg !11683
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %23, metadata !11667, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11671
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %24, metadata !11664, metadata !DIExpression()), !dbg !11671
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11686
  %26 = bitcast i8* %25 to i8**, !dbg !11686
  %27 = load i8*, i8** %26, align 4, !dbg !11686
  %28 = load i8, i8* %27, align 1, !dbg !11687
  %29 = zext i8 %28 to i32, !dbg !11687
  %30 = and i32 %19, %29, !dbg !11688
  %31 = icmp eq i32 %30, 0, !dbg !11689
  br i1 %31, label %32, label %62, !dbg !11690

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !11667, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11671
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !11691
  %34 = load i8, i8* %33, align 1, !dbg !11691
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !11692
  %36 = load i8, i8* %35, align 1, !dbg !11692
  %37 = or i8 %36, %34, !dbg !11693
  call void @llvm.dbg.value(metadata i8 %37, metadata !11668, metadata !DIExpression()), !dbg !11694
  %38 = zext i8 %37 to i32, !dbg !11695
  %39 = and i32 %23, %38, !dbg !11697
  %40 = icmp eq i32 %39, 0, !dbg !11698
  br i1 %40, label %41, label %46, !dbg !11699

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !11700
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !11701
  br i1 %45, label %51, label %46, !dbg !11701

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !11702, !range !3326
  %48 = icmp eq i8 %47, 0, !dbg !11702
  br i1 %48, label %49, label %50, !dbg !11706

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !11707
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11707
  unreachable, !dbg !11707

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !11709
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !11710
  call void @llvm.dbg.value(metadata i32 -121, metadata !11663, metadata !DIExpression()), !dbg !11671
  br label %62, !dbg !11711

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !11712
  %53 = bitcast i8* %52 to i32*, !dbg !11712
  %54 = load i32, i32* %53, align 4, !dbg !11712
  %55 = and i32 %54, 2, !dbg !11715
  %56 = icmp eq i32 %55, 0, !dbg !11715
  br i1 %56, label %63, label %57, !dbg !11716

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !11717
  %59 = bitcast i8* %58 to i16*, !dbg !11717
  %60 = load i16, i16* %59, align 2, !dbg !11717
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !11719
  %61 = load i16, i16* %59, align 2, !dbg !11720
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !11721
  br label %63, !dbg !11722

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !11663, metadata !DIExpression()), !dbg !11671
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !11723
  br label %65, !dbg !11724

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !11725
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !11726
  call void @llvm.dbg.value(metadata i32 0, metadata !11663, metadata !DIExpression()), !dbg !11671
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !11723
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !11727
  call void @llvm.dbg.value(metadata i32 %64, metadata !11663, metadata !DIExpression()), !dbg !11671
  br label %65, !dbg !11730

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !11671
  call void @llvm.dbg.value(metadata i32 %66, metadata !11663, metadata !DIExpression()), !dbg !11671
  ret i32 %66, !dbg !11731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !11732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11734, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.value(metadata i32 undef, metadata !11735, metadata !DIExpression()), !dbg !11739
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11740
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11736, metadata !DIExpression()), !dbg !11739
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %4, metadata !11738, metadata !DIExpression()), !dbg !11739
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !11742
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !11743

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !11744
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !11746
  %12 = load i8, i8* %11, align 1, !dbg !11746
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %13, metadata !11737, metadata !DIExpression()), !dbg !11739
  %14 = load i8*, i8** %8, align 4, !dbg !11748
  %15 = load i8, i8* %14, align 1, !dbg !11750
  %16 = zext i8 %15 to i32, !dbg !11750
  %17 = and i32 %13, %16, !dbg !11751
  %18 = icmp eq i32 %17, 0, !dbg !11752
  br i1 %18, label %19, label %9, !dbg !11753, !llvm.loop !11754

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !11756
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !11757
  ret i32 0, !dbg !11758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !11759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11761, metadata !DIExpression()), !dbg !11764
  call void @llvm.dbg.value(metadata i32 undef, metadata !11762, metadata !DIExpression()), !dbg !11764
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11765
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11763, metadata !DIExpression()), !dbg !11764
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11766
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !11767
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11768
  ret i32 0, !dbg !11769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !11770 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !11772, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i8* undef, metadata !11773, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 undef, metadata !11774, metadata !DIExpression()), !dbg !11775
  ret i32 0, !dbg !11776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !11777 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11779, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* undef, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %0, metadata !11782, metadata !DIExpression()), !dbg !11783
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !11784

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11782, metadata !DIExpression()), !dbg !11783
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !11785
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !11785
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !11785
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !11788
  br label %21, !dbg !11789

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !11790
  %11 = load i8, i8* %10, align 1, !dbg !11794
  %12 = icmp eq i8 %11, -62, !dbg !11795
  br i1 %12, label %13, label %21, !dbg !11796

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11797
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !11797
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !11797
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !11798
  %18 = load i32, i32* %17, align 4, !dbg !11798
  %19 = icmp eq i32 %18, 262144, !dbg !11799
  br i1 %19, label %22, label %21, !dbg !11800

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !11801
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11801
  unreachable, !dbg !11801

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !11806

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !11783
  ret i32 %23, !dbg !11807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !11808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11810, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i8* %0, metadata !11811, metadata !DIExpression()), !dbg !11813
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11814
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !11814
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !11814
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !11816
  %6 = load i8, i8* %5, align 1, !dbg !11816
  %7 = icmp eq i8 %6, 0, !dbg !11817
  br i1 %7, label %19, label %8, !dbg !11818

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11819
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !11811, metadata !DIExpression()), !dbg !11813
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !11820
  call void @llvm.dbg.value(metadata i32 %10, metadata !11812, metadata !DIExpression()), !dbg !11813
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11822
  %12 = bitcast i8* %11 to i8**, !dbg !11822
  %13 = load i8*, i8** %12, align 4, !dbg !11822
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !11824
  %15 = load i8, i8* %14, align 1, !dbg !11824
  %16 = zext i8 %15 to i32, !dbg !11824
  %17 = and i32 %10, %16, !dbg !11825
  %18 = icmp eq i32 %17, 0, !dbg !11825
  br i1 %18, label %19, label %20, !dbg !11826

19:                                               ; preds = %8, %1
  br label %20, !dbg !11827

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !11813
  ret i32 %21, !dbg !11828
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !11829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11833, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.value(metadata i32 %1, metadata !11834, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.value(metadata i8 %2, metadata !11835, metadata !DIExpression()), !dbg !11841
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11842
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !11837, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.value(metadata i32 0, metadata !11838, metadata !DIExpression()), !dbg !11841
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11843
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !11843
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !11843
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !11844
  %9 = load i8, i8* %8, align 1, !dbg !11844
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %10, metadata !11840, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11841
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !11846, !range !3326
  %12 = icmp eq i8 %11, 0, !dbg !11846
  br i1 %12, label %18, label %13, !dbg !11848

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !11849, !range !3326
  %15 = icmp eq i8 %14, 0, !dbg !11849
  br i1 %15, label %16, label %17, !dbg !11853

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !11854
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11854
  unreachable, !dbg !11854

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !11856
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !11857
  br label %42, !dbg !11858

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !11840, metadata !DIExpression()), !dbg !11841
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11859
  %20 = bitcast i8* %19 to i8**, !dbg !11859
  %21 = load i8*, i8** %20, align 4, !dbg !11859
  %22 = load i8, i8* %21, align 1, !dbg !11861
  %23 = zext i8 %22 to i32, !dbg !11861
  %24 = and i32 %10, %23, !dbg !11862
  %25 = icmp eq i32 %24, 0, !dbg !11863
  br i1 %25, label %26, label %42, !dbg !11864

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %27, metadata !11836, metadata !DIExpression()), !dbg !11841
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !11867
  %28 = inttoptr i32 %1 to i8*, !dbg !11868
  %29 = load volatile i8, i8* %28, align 1, !dbg !11869
  call void @llvm.dbg.value(metadata i8 %29, metadata !11839, metadata !DIExpression()), !dbg !11841
  %30 = icmp eq i8 %29, %2, !dbg !11870
  br i1 %30, label %39, label %31, !dbg !11872

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !11838, metadata !DIExpression()), !dbg !11841
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !11873
  br i1 %32, label %33, label %38, !dbg !11876

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !11877
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !11879
  %36 = load volatile i8, i8* %28, align 1, !dbg !11880
  %37 = icmp eq i8 %36, %2, !dbg !11882
  br i1 %37, label %39, label %38, !dbg !11883

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !11838, metadata !DIExpression()), !dbg !11841
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !11884
  br label %42, !dbg !11885

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !11838, metadata !DIExpression()), !dbg !11841
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !11884
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !11886
  %41 = icmp eq i32 %40, 0, !dbg !11889
  br i1 %41, label %42, label %44, !dbg !11890

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !11891

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !11841
  ret i32 %45, !dbg !11892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !11893 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !11897, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i32 %1, metadata !11898, metadata !DIExpression()), !dbg !11900
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !11901
  %4 = load i32, i32* %3, align 4, !dbg !11901
  %5 = and i32 %4, 16, !dbg !11903
  %6 = icmp eq i32 %5, 0, !dbg !11903
  br i1 %6, label %7, label %8, !dbg !11904

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !11905
  br label %8, !dbg !11907

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %9, metadata !11899, metadata !DIExpression()), !dbg !11900
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !11909
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !11910
  %11 = load i16, i16* %10, align 2, !dbg !11910
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !11911
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !11911
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !11912
  %15 = load i8, i8* %14, align 1, !dbg !11912
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !11913
  %17 = load i8, i8* %16, align 1, !dbg !11913
  %18 = zext i8 %17 to i32, !dbg !11914
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !11915
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !11916
  ret void, !dbg !11917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !11918 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !11920, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11921, metadata !DIExpression()), !dbg !11923
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !11924
  %4 = load i8, i8* %3, align 1, !dbg !11924
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !11925

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !11926
  %7 = load i32, i32* %6, align 4, !dbg !11928
  %8 = or i32 %7, 4, !dbg !11928
  store i32 %8, i32* %6, align 4, !dbg !11928
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11929
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11923
  br label %18, !dbg !11930

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !11931
  %12 = load i32, i32* %11, align 4, !dbg !11932
  %13 = or i32 %12, 2, !dbg !11932
  store i32 %13, i32* %11, align 4, !dbg !11932
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11933
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11923
  br label %18, !dbg !11934

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11935
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11923
  br label %18, !dbg !11936

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !11922, metadata !DIExpression()), !dbg !11923
  tail call void @Flash_ReturnReady() #21, !dbg !11937
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.128, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.129, i32 0, i32 0)) #23, !dbg !11937
  unreachable, !dbg !11937

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11923
  ret i32 0, !dbg !11941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11942 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !11946, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11947, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32 %2, metadata !11948, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32 %3, metadata !11949, metadata !DIExpression()), !dbg !11951
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !11952
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !11954
  br i1 %7, label %33, label %8, !dbg !11954

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !11955
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !11955
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !11957
  br i1 %11, label %33, label %12, !dbg !11958

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !11959
  %14 = load i8*, i8** %13, align 4, !dbg !11959
  %15 = icmp eq i8* %14, null, !dbg !11960
  br i1 %15, label %33, label %16, !dbg !11961

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !11962
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !11963
  store i8* %17, i8** %18, align 4, !dbg !11964
  %19 = trunc i32 %3 to i16, !dbg !11965
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !11966
  store i16 %19, i16* %20, align 2, !dbg !11967
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11968
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !11969
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !11970
  store i8 -81, i8* %23, align 1, !dbg !11971
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !11972
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !11973
  %25 = load i8, i8* %24, align 1, !dbg !11974
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !11976

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !11977
  br i1 %27, label %31, label %28, !dbg !11978

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !11979
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !11981
  store i8 -97, i8* %30, align 1, !dbg !11982
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !11983
  br label %31, !dbg !11984

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11985
  call void @llvm.dbg.value(metadata i32 0, metadata !11950, metadata !DIExpression()), !dbg !11951
  br label %33, !dbg !11986

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !11951
  ret i32 %34, !dbg !11987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !11988 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !11992, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i8* %1, metadata !11993, metadata !DIExpression()), !dbg !11995
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !11996
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !11997
  %5 = and i32 %4, 1, !dbg !11997
  %6 = icmp eq i32 %5, 0, !dbg !11999
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !12000
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !12000
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !12001
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !12001
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !12001
  %12 = load i8, i8* %11, align 1, !dbg !12000
  store i8 %12, i8* %3, align 1, !dbg !12000
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !12002
  %14 = load i16, i16* %13, align 2, !dbg !12002
  call void @llvm.dbg.value(metadata i8* %3, metadata !11994, metadata !DIExpression(DW_OP_deref)), !dbg !11995
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !12003
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !12004
  ret void, !dbg !12004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !12005 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12009, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i8* %1, metadata !12010, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i8* %2, metadata !12011, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i16 %3, metadata !12012, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i16 %4, metadata !12013, metadata !DIExpression()), !dbg !12015
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !12016
  call void @llvm.dbg.value(metadata i32 %6, metadata !12014, metadata !DIExpression()), !dbg !12015
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !12017
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !12018
  ret void, !dbg !12019
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !12020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12022, metadata !DIExpression()), !dbg !12028
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !12025, metadata !DIExpression()), !dbg !12028
  call void @llvm.dbg.value(metadata i32 0, metadata !12023, metadata !DIExpression()), !dbg !12028
  br label %6, !dbg !12029

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %3, metadata !12023, metadata !DIExpression()), !dbg !12028
  call void @llvm.dbg.value(metadata i32 %8, metadata !12023, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12028
  %4 = icmp ult i32 %8, 4, !dbg !12033
  %5 = icmp eq i32 %3, 5, !dbg !12033
  br i1 %5, label %26, label %6, !dbg !12029, !llvm.loop !12034

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12023, metadata !DIExpression()), !dbg !12028
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !12024, metadata !DIExpression()), !dbg !12028
  %12 = icmp eq i8 %10, 0, !dbg !12036
  br i1 %12, label %23, label %13, !dbg !12040

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !12024, metadata !DIExpression()), !dbg !12028
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !12041
  %16 = load i8, i8* %15, align 1, !dbg !12041
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !12044
  %18 = load i8, i8* %17, align 1, !dbg !12044
  %19 = icmp eq i8 %16, %18, !dbg !12045
  br i1 %19, label %20, label %23, !dbg !12046

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %21, metadata !12024, metadata !DIExpression()), !dbg !12028
  %22 = icmp eq i32 %21, %11, !dbg !12036
  br i1 %22, label %26, label %13, !dbg !12040, !llvm.loop !12048

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !12050
  %25 = icmp eq i32 %24, %11, !dbg !12051
  call void @llvm.dbg.value(metadata i32 %8, metadata !12023, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12028
  br i1 %25, label %26, label %2, !dbg !12053

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !12033
  ret i1 %27, !dbg !12054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !12055 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !12067
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !12067
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !12059, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !12066, metadata !DIExpression()), !dbg !12069
  %3 = load i16, i16* @cmem_index, align 2, !dbg !12070
  %4 = icmp sgt i16 %3, -1, !dbg !12072
  br i1 %4, label %34, label %5, !dbg !12073

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !12074
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !12075
  call void @llvm.dbg.value(metadata i32 0, metadata !12057, metadata !DIExpression()), !dbg !12069
  br label %7, !dbg !12076

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12057, metadata !DIExpression()), !dbg !12069
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !12058, metadata !DIExpression()), !dbg !12069
  %12 = icmp eq i8 %10, 0, !dbg !12078
  br i1 %12, label %24, label %13, !dbg !12083

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !12058, metadata !DIExpression()), !dbg !12069
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !12084
  %16 = load i8, i8* %15, align 1, !dbg !12084
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !12087
  %18 = load i16, i16* %17, align 2, !dbg !12087
  %19 = zext i8 %16 to i16, !dbg !12088
  %20 = icmp eq i16 %18, %19, !dbg !12088
  br i1 %20, label %21, label %24, !dbg !12089

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %22, metadata !12058, metadata !DIExpression()), !dbg !12069
  %23 = icmp eq i32 %22, %11, !dbg !12078
  br i1 %23, label %27, label %13, !dbg !12083, !llvm.loop !12091

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !12093
  %26 = icmp eq i32 %25, %11, !dbg !12094
  br i1 %26, label %27, label %29, !dbg !12096

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !12097
  store i16 %28, i16* @cmem_index, align 2, !dbg !12099
  br label %34, !dbg !12100

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %30, metadata !12057, metadata !DIExpression()), !dbg !12069
  %31 = icmp eq i32 %30, 5, !dbg !12102
  br i1 %31, label %32, label %7, !dbg !12076, !llvm.loop !12103

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !12105
  br label %34, !dbg !12105

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !12069
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !12106
  ret i32 %36, !dbg !12106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !12107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12111, metadata !DIExpression()), !dbg !12112
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !12113
  ret %struct.CMEMEntryID* %2, !dbg !12114
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !12115 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !12119, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata i8* undef, metadata !12120, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata i16* %2, metadata !12121, metadata !DIExpression()), !dbg !12126
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !12127
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !12127
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !12127
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !12124, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 -81, metadata !12122, metadata !DIExpression()), !dbg !12129
  store i8 -81, i8* %4, align 1, !dbg !12130
  call void @llvm.dbg.value(metadata i8* %4, metadata !12122, metadata !DIExpression(DW_OP_deref)), !dbg !12129
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !12131
  %7 = load i8, i8* %6, align 1, !dbg !12132
  %8 = add i8 %7, 1, !dbg !12134
  %9 = icmp ult i8 %8, 2, !dbg !12134
  br i1 %9, label %12, label %10, !dbg !12134

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !12135
  br i1 %11, label %13, label %12, !dbg !12136

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !12122, metadata !DIExpression()), !dbg !12129
  store i8 -97, i8* %4, align 1, !dbg !12137
  call void @llvm.dbg.value(metadata i8* %4, metadata !12122, metadata !DIExpression(DW_OP_deref)), !dbg !12129
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !12139
  br label %13, !dbg !12140

13:                                               ; preds = %12, %10
  br label %14, !dbg !12141

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !12125, metadata !DIExpression()), !dbg !12129
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !12143
  %17 = load i8, i8* %16, align 1, !dbg !12143
  %18 = zext i8 %17 to i16, !dbg !12143
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !12146
  store i16 %18, i16* %19, align 2, !dbg !12147
  %20 = add nuw nsw i32 %15, 1, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %20, metadata !12125, metadata !DIExpression()), !dbg !12129
  %21 = icmp eq i32 %20, 3, !dbg !12149
  br i1 %21, label %22, label %14, !dbg !12141, !llvm.loop !12150

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !12152
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !12152
  ret void, !dbg !12153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !12154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12156, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !12159, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i32 0, metadata !12157, metadata !DIExpression()), !dbg !12160
  br label %6, !dbg !12161

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %3, metadata !12157, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i32 %8, metadata !12157, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12160
  %4 = icmp ult i32 %8, 4, !dbg !12165
  %5 = icmp eq i32 %3, 5, !dbg !12165
  br i1 %5, label %26, label %6, !dbg !12161, !llvm.loop !12166

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12157, metadata !DIExpression()), !dbg !12160
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !12158, metadata !DIExpression()), !dbg !12160
  %12 = icmp eq i8 %10, 0, !dbg !12168
  br i1 %12, label %23, label %13, !dbg !12172

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !12158, metadata !DIExpression()), !dbg !12160
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !12173
  %16 = load i8, i8* %15, align 1, !dbg !12173
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !12176
  %18 = load i8, i8* %17, align 1, !dbg !12176
  %19 = icmp eq i8 %16, %18, !dbg !12177
  br i1 %19, label %20, label %23, !dbg !12178

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !12179
  call void @llvm.dbg.value(metadata i32 %21, metadata !12158, metadata !DIExpression()), !dbg !12160
  %22 = icmp eq i32 %21, %11, !dbg !12168
  br i1 %22, label %26, label %13, !dbg !12172, !llvm.loop !12180

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !12182
  %25 = icmp eq i32 %24, %11, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %8, metadata !12157, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12160
  br i1 %25, label %26, label %2, !dbg !12185

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !12165
  ret i1 %27, !dbg !12186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !12187 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !12193
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !12193
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !12191, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !12192, metadata !DIExpression()), !dbg !12195
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !12196
  %4 = icmp sgt i16 %3, -1, !dbg !12198
  br i1 %4, label %34, label %5, !dbg !12199

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !12200
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !12201
  call void @llvm.dbg.value(metadata i32 0, metadata !12189, metadata !DIExpression()), !dbg !12195
  br label %7, !dbg !12202

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12189, metadata !DIExpression()), !dbg !12195
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !12190, metadata !DIExpression()), !dbg !12195
  %12 = icmp eq i8 %10, 0, !dbg !12204
  br i1 %12, label %24, label %13, !dbg !12209

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !12190, metadata !DIExpression()), !dbg !12195
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !12210
  %16 = load i8, i8* %15, align 1, !dbg !12210
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !12213
  %18 = load i16, i16* %17, align 2, !dbg !12213
  %19 = zext i8 %16 to i16, !dbg !12214
  %20 = icmp eq i16 %18, %19, !dbg !12214
  br i1 %20, label %21, label %24, !dbg !12215

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %22, metadata !12190, metadata !DIExpression()), !dbg !12195
  %23 = icmp eq i32 %22, %11, !dbg !12204
  br i1 %23, label %27, label %13, !dbg !12209, !llvm.loop !12217

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !12219
  %26 = icmp eq i32 %25, %11, !dbg !12220
  br i1 %26, label %27, label %29, !dbg !12222

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !12223
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !12225
  br label %34, !dbg !12226

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !12227
  call void @llvm.dbg.value(metadata i32 %30, metadata !12189, metadata !DIExpression()), !dbg !12195
  %31 = icmp eq i32 %30, 5, !dbg !12228
  br i1 %31, label %32, label %7, !dbg !12202, !llvm.loop !12229

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !12231
  br label %34, !dbg !12231

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !12195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !12232
  ret i32 %36, !dbg !12232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !12233 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !12241, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata i16* %1, metadata !12242, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata i16* %2, metadata !12243, metadata !DIExpression()), !dbg !12249
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !12250
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !12250
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !12250
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !12247, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.value(metadata i8 -81, metadata !12245, metadata !DIExpression()), !dbg !12252
  store i8 -81, i8* %4, align 1, !dbg !12253
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %7, metadata !12244, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata i8* %4, metadata !12245, metadata !DIExpression(DW_OP_deref)), !dbg !12252
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !12255
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !12256
  %8 = load i8, i8* %6, align 1, !dbg !12257
  %9 = add i8 %8, 1, !dbg !12259
  %10 = icmp ult i8 %9, 2, !dbg !12259
  br i1 %10, label %13, label %11, !dbg !12259

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !12260
  br i1 %12, label %15, label %13, !dbg !12261

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !12245, metadata !DIExpression()), !dbg !12252
  store i8 -97, i8* %4, align 1, !dbg !12262
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !12264
  call void @llvm.dbg.value(metadata i32 %14, metadata !12244, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata i8* %4, metadata !12245, metadata !DIExpression(DW_OP_deref)), !dbg !12252
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !12265
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !12266
  br label %15, !dbg !12267

15:                                               ; preds = %13, %11
  br label %16, !dbg !12268

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !12248, metadata !DIExpression()), !dbg !12252
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !12270
  %19 = load i8, i8* %18, align 1, !dbg !12270
  %20 = zext i8 %19 to i16, !dbg !12270
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !12273
  store i16 %20, i16* %21, align 2, !dbg !12274
  %22 = add nuw nsw i32 %17, 1, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %22, metadata !12248, metadata !DIExpression()), !dbg !12252
  %23 = icmp eq i32 %22, 3, !dbg !12276
  br i1 %23, label %24, label %16, !dbg !12268, !llvm.loop !12277

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !12279
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !12279
  ret void, !dbg !12280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !12281 {
  ret i32 3932160, !dbg !12282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !12283 {
  ret i32 4194304, !dbg !12284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !12285 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !12286
  ret void, !dbg !12287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !12288 {
  ret void, !dbg !12289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !12290 {
  ret void, !dbg !12291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !12292 {
  ret i32 3932160, !dbg !12293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !12294 {
  ret i32 262144, !dbg !12295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !12296 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !12297
  ret void, !dbg !12298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !12299 {
  ret i32 134217728, !dbg !12300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !12301 {
  ret i32 4194304, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !12303 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !12304
  ret i32 134217728, !dbg !12305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !12306 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !12307
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12308
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !12309
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !12310
  %4 = load i16, i16* %3, align 2, !dbg !12310
  %5 = zext i16 %4 to i32, !dbg !12308
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !12311
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !12312
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !12313
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !12314
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !12315
  ret i32 0, !dbg !12316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !12317 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !12320
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !12321
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !12322
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !12323
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !12324
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12325
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !12326
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !12327
  %5 = load i32, i32* %4, align 4, !dbg !12327
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !12328
  call void @llvm.dbg.value(metadata i32 %6, metadata !12319, metadata !DIExpression()), !dbg !12329
  %7 = icmp eq i32 %6, -120, !dbg !12330
  %8 = select i1 %7, i32 5, i32 0, !dbg !12329
  ret i32 %8, !dbg !12332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !12333 {
  ret i8 1, !dbg !12335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !12336 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12340, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !12342, metadata !DIExpression()), !dbg !12343
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %2, metadata !12341, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !12342, metadata !DIExpression()), !dbg !12343
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !12345
  %4 = load i32, i32* %3, align 4, !dbg !12345
  ret i32 %4, !dbg !12346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !12347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12351, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !12352, metadata !DIExpression()), !dbg !12354
  %3 = and i32 %0, 134217727, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %3, metadata !12351, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i16 0, metadata !12353, metadata !DIExpression()), !dbg !12354
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !12356
  %5 = load i32, i32* %4, align 4, !dbg !12356
  %6 = icmp eq i32 %5, 0, !dbg !12359
  br i1 %6, label %25, label %7, !dbg !12360

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !12353, metadata !DIExpression()), !dbg !12354
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !12361
  %12 = load i32, i32* %11, align 4, !dbg !12361
  %13 = icmp ult i32 %3, %12, !dbg !12364
  br i1 %13, label %18, label %14, !dbg !12365

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !12366
  %16 = load i32, i32* %15, align 4, !dbg !12366
  %17 = icmp ult i32 %3, %16, !dbg !12367
  br i1 %17, label %25, label %18, !dbg !12368

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !12369
  call void @llvm.dbg.value(metadata i16 %19, metadata !12353, metadata !DIExpression()), !dbg !12354
  %20 = zext i16 %19 to i32, !dbg !12370
  %21 = add nuw nsw i32 %20, 1, !dbg !12371
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !12356
  %23 = load i32, i32* %22, align 4, !dbg !12356
  %24 = icmp eq i32 %23, 0, !dbg !12359
  br i1 %24, label %25, label %7, !dbg !12360, !llvm.loop !12372

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !12370
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !12374
  %28 = load i32, i32* %27, align 4, !dbg !12374
  ret i32 %28, !dbg !12375
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !12376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !12380
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !12381
  ret i32 %3, !dbg !12382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !12383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12385, metadata !DIExpression()), !dbg !12388
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !12389
  call void @llvm.dbg.value(metadata i32 %2, metadata !12386, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !12387, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !12387, metadata !DIExpression()), !dbg !12388
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !12390
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !12391
  ret i32 %4, !dbg !12392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !12393 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !12399, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.value(metadata i32 0, metadata !12400, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.value(metadata i32 0, metadata !12401, metadata !DIExpression()), !dbg !12402
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !12403
  %3 = load i32, i32* %2, align 4, !dbg !12403
  %4 = icmp eq i32 %3, 0, !dbg !12406
  br i1 %4, label %17, label %5, !dbg !12407

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12401, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.value(metadata i32 %8, metadata !12400, metadata !DIExpression()), !dbg !12402
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !12408
  %10 = load i32, i32* %9, align 4, !dbg !12408
  %11 = mul i32 %10, %6, !dbg !12410
  %12 = add i32 %11, %8, !dbg !12411
  call void @llvm.dbg.value(metadata i32 %12, metadata !12400, metadata !DIExpression()), !dbg !12402
  %13 = add i32 %7, 1, !dbg !12412
  call void @llvm.dbg.value(metadata i32 %13, metadata !12401, metadata !DIExpression()), !dbg !12402
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !12403
  %15 = load i32, i32* %14, align 4, !dbg !12403
  %16 = icmp eq i32 %15, 0, !dbg !12406
  br i1 %16, label %17, label %5, !dbg !12407, !llvm.loop !12413

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !12402
  ret i32 %18, !dbg !12415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12420, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 %1, metadata !12421, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !12422, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !12423, metadata !DIExpression()), !dbg !12429
  %5 = add i32 %1, %0, !dbg !12430
  call void @llvm.dbg.value(metadata i32 %5, metadata !12428, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 %0, metadata !12424, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 0, metadata !12425, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 0, metadata !12427, metadata !DIExpression()), !dbg !12429
  %6 = icmp ugt i32 %5, %0, !dbg !12431
  br i1 %6, label %7, label %34, !dbg !12434

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12427, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 %9, metadata !12424, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i32 %10, metadata !12425, metadata !DIExpression()), !dbg !12429
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !12435
  call void @llvm.dbg.value(metadata i32 %11, metadata !12426, metadata !DIExpression()), !dbg !12429
  %12 = icmp eq i32 %8, 0, !dbg !12437
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !12439
  br i1 %12, label %14, label %16, !dbg !12440

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !12441
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !12443
  store i32 1, i32* %15, align 4, !dbg !12444
  br label %29, !dbg !12445

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !12446
  %18 = icmp eq i32 %11, %17, !dbg !12448
  br i1 %18, label %19, label %23, !dbg !12449

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !12450
  %21 = load i32, i32* %20, align 4, !dbg !12452
  %22 = add i32 %21, 1, !dbg !12452
  store i32 %22, i32* %20, align 4, !dbg !12452
  br label %29, !dbg !12453

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %24, metadata !12425, metadata !DIExpression()), !dbg !12429
  %25 = icmp eq i32 %24, 9, !dbg !12456
  br i1 %25, label %34, label %26, !dbg !12458

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !12459
  store i32 %11, i32* %27, align 4, !dbg !12460
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !12461
  store i32 1, i32* %28, align 4, !dbg !12462
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !12463
  call void @llvm.dbg.value(metadata i32 %30, metadata !12425, metadata !DIExpression()), !dbg !12429
  %31 = add i32 %11, %9, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %31, metadata !12424, metadata !DIExpression()), !dbg !12429
  %32 = add i32 %8, 1, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %32, metadata !12427, metadata !DIExpression()), !dbg !12429
  %33 = icmp ult i32 %31, %5, !dbg !12431
  br i1 %33, label %7, label %34, !dbg !12434, !llvm.loop !12466

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !12429
  ret i32 %35, !dbg !12468
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !12469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12473, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.value(metadata i32 %1, metadata !12474, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !12475, metadata !DIExpression()), !dbg !12476
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !12477
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !12478
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !12479
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !12480
  ret i32 %7, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !12482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12484, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i32 %1, metadata !12485, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !12486, metadata !DIExpression()), !dbg !12487
  ret i32 0, !dbg !12488
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !12489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12491, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata i32 %1, metadata !12492, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !12493, metadata !DIExpression()), !dbg !12496
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !12497
  call void @llvm.dbg.value(metadata i32 %4, metadata !12494, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !12495, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !12495, metadata !DIExpression()), !dbg !12496
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !12498
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !12499
  ret i32 %6, !dbg !12500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !12501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12503, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i32 %1, metadata !12504, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !12505, metadata !DIExpression()), !dbg !12506
  ret i32 0, !dbg !12507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !12508 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12510, metadata !DIExpression()), !dbg !12513
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !12514
  call void @llvm.dbg.value(metadata i32 %2, metadata !12511, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !12512, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !12512, metadata !DIExpression()), !dbg !12513
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !12515
  %4 = load i32, i32* %3, align 4, !dbg !12515
  ret i32 %4, !dbg !12516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !12517 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !12521, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32* %1, metadata !12522, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32 %2, metadata !12523, metadata !DIExpression()), !dbg !12524
  %4 = load i32, i32* %1, align 4, !dbg !12525
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !12527
  %6 = load i32, i32* %5, align 4, !dbg !12527
  %7 = icmp eq i32 %6, %2, !dbg !12528
  br i1 %7, label %8, label %12, !dbg !12529

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !12530
  %10 = load i32, i32* %9, align 4, !dbg !12532
  %11 = add i32 %10, 1, !dbg !12532
  store i32 %11, i32* %9, align 4, !dbg !12532
  br label %17, !dbg !12533

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !12534
  store i32 %13, i32* %1, align 4, !dbg !12534
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !12536
  store i32 1, i32* %14, align 4, !dbg !12537
  %15 = load i32, i32* %1, align 4, !dbg !12538
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !12539
  store i32 %2, i32* %16, align 4, !dbg !12540
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !12541
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !12542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12546, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %1, metadata !12547, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !12548, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !12549, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12550, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12551, metadata !DIExpression()), !dbg !12555
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !12556
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !12557
  call void @llvm.dbg.value(metadata i32 0, metadata !12554, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12551, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 0, metadata !12550, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %0, metadata !12546, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %1, metadata !12547, metadata !DIExpression()), !dbg !12555
  %7 = icmp eq i32 %1, 0, !dbg !12558
  br i1 %7, label %53, label %8, !dbg !12561

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12554, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %10, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %11, metadata !12551, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %12, metadata !12550, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %13, metadata !12546, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %14, metadata !12547, metadata !DIExpression()), !dbg !12555
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !12562
  %16 = load i32, i32* %15, align 4, !dbg !12562
  %17 = icmp ult i32 %9, %16, !dbg !12565
  %18 = xor i1 %17, true, !dbg !12566
  %19 = zext i1 %18 to i32, !dbg !12566
  %20 = add i32 %12, %19, !dbg !12566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12554, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %20, metadata !12550, metadata !DIExpression()), !dbg !12555
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !12567
  %22 = load i32, i32* %21, align 4, !dbg !12567
  %23 = add i32 %22, %10, !dbg !12568
  call void @llvm.dbg.value(metadata i32 %23, metadata !12553, metadata !DIExpression()), !dbg !12555
  %24 = icmp ult i32 %23, %13, !dbg !12569
  br i1 %24, label %46, label %25, !dbg !12571

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !12572
  call void @llvm.dbg.value(metadata i32 %26, metadata !12552, metadata !DIExpression()), !dbg !12555
  %27 = icmp ult i32 %14, %26, !dbg !12574
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !12576
  call void @llvm.dbg.value(metadata i32 %28, metadata !12552, metadata !DIExpression()), !dbg !12555
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !12577
  %30 = load i32, i32* %29, align 4, !dbg !12577
  %31 = icmp eq i32 %30, %28, !dbg !12579
  br i1 %31, label %32, label %36, !dbg !12580

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !12581
  %34 = load i32, i32* %33, align 4, !dbg !12583
  %35 = add i32 %34, 1, !dbg !12583
  store i32 %35, i32* %33, align 4, !dbg !12583
  br label %42, !dbg !12584

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !12585
  %38 = zext i1 %37 to i32, !dbg !12588
  %39 = add nsw i32 %11, %38, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %39, metadata !12551, metadata !DIExpression()), !dbg !12555
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !12589
  store i32 1, i32* %40, align 4, !dbg !12590
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !12591
  store i32 %28, i32* %41, align 4, !dbg !12592
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !12555
  call void @llvm.dbg.value(metadata i32 %43, metadata !12551, metadata !DIExpression()), !dbg !12555
  %44 = add i32 %28, %13, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %44, metadata !12546, metadata !DIExpression()), !dbg !12555
  %45 = sub i32 %14, %28, !dbg !12594
  call void @llvm.dbg.value(metadata i32 %45, metadata !12547, metadata !DIExpression()), !dbg !12555
  br label %46, !dbg !12595

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !12596
  call void @llvm.dbg.value(metadata i32 %49, metadata !12551, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %48, metadata !12546, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %47, metadata !12547, metadata !DIExpression()), !dbg !12555
  %50 = add nuw i32 %9, 1, !dbg !12597
  %51 = select i1 %17, i32 %50, i32 1, !dbg !12597
  call void @llvm.dbg.value(metadata i32 %51, metadata !12554, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %23, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %20, metadata !12550, metadata !DIExpression()), !dbg !12555
  %52 = icmp eq i32 %47, 0, !dbg !12558
  br i1 %52, label %53, label %8, !dbg !12561, !llvm.loop !12598

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !12600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !12601 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12605
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !12606
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !12605
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !12607
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !12608
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !12609
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12610
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !12611
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !12610
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !12612
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !12613
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !12614
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !12615
  call void @llvm.dbg.value(metadata i32 %12, metadata !12603, metadata !DIExpression()), !dbg !12616
  %13 = icmp eq i32 %12, 0, !dbg !12617
  br i1 %13, label %14, label %46, !dbg !12619

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !12604, metadata !DIExpression()), !dbg !12616
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !12620
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !12622
  call void @llvm.dbg.value(metadata i32 0, metadata !12604, metadata !DIExpression()), !dbg !12616
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !12623
  %16 = icmp eq i32 %15, 0, !dbg !12625
  br i1 %16, label %34, label %17, !dbg !12626

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !12604, metadata !DIExpression()), !dbg !12616
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !12627
  %23 = load i32, i32* %22, align 4, !dbg !12627
  %24 = add i32 %20, %23, !dbg !12629
  %25 = icmp ugt i32 %18, %21, !dbg !12630
  br i1 %25, label %26, label %27, !dbg !12632

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !12633
  br label %27, !dbg !12635

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !12636
  call void @llvm.dbg.value(metadata i32 %29, metadata !12604, metadata !DIExpression()), !dbg !12616
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !12623
  %31 = load i32, i32* %30, align 4, !dbg !12623
  %32 = icmp eq i32 %31, 0, !dbg !12625
  br i1 %32, label %33, label %17, !dbg !12626, !llvm.loop !12637

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !12629
  br label %34, !dbg !12626

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !12639
  %36 = mul i32 %35, -5, !dbg !12640
  %37 = add i32 %36, 262144, !dbg !12641
  %38 = lshr i32 %37, 9, !dbg !12642
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !12643
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !12644
  call void @llvm.dbg.value(metadata i32 0, metadata !12603, metadata !DIExpression()), !dbg !12616
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !12645
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !12646
  %42 = load i8, i8* %41, align 1, !dbg !12646
  %43 = icmp eq i8 %42, 3, !dbg !12647
  br i1 %43, label %44, label %46, !dbg !12647

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %45, metadata !12603, metadata !DIExpression()), !dbg !12616
  br label %46, !dbg !12650

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !12616
  ret i32 %47, !dbg !12651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !12652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12656, metadata !DIExpression()), !dbg !12657
  %2 = icmp eq i32 %0, 0, !dbg !12658
  br i1 %2, label %3, label %9, !dbg !12660

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !12661
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !12663
  %5 = icmp slt i32 %4, 0, !dbg !12664
  br i1 %5, label %6, label %7, !dbg !12666

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !12667
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.144, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !12667
  unreachable, !dbg !12667

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !12672
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !12673
  br label %9, !dbg !12674

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12675
  ret void, !dbg !12676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !12677 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !12678
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !12679
  ret i32 %1, !dbg !12680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !12681 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !12684
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12685
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !12686
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !12687
  %4 = load i16, i16* %3, align 2, !dbg !12687
  %5 = zext i16 %4 to i32, !dbg !12685
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !12688
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !12689
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !12690
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !12691
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !12691
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !12692
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !12693
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !12694
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !12695
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !12696
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !12697
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12698
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !12699
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !12700
  %13 = load i32, i32* %12, align 4, !dbg !12700
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %14, metadata !12683, metadata !DIExpression()), !dbg !12702
  %15 = icmp eq i32 %14, -120, !dbg !12703
  br i1 %15, label %16, label %17, !dbg !12706

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !12707
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.144, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !12707
  unreachable, !dbg !12707

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !12709
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !12710
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !12711
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !12712
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !12713
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12714
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !12715
  ret i32 0, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !12717 {
  ret void, !dbg !12718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !12719 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !12722
  call void @llvm.dbg.value(metadata i32 %1, metadata !12721, metadata !DIExpression()), !dbg !12723
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !12724
  br i1 %2, label %4, label %3, !dbg !12726

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !12727
  br label %4, !dbg !12729

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !12730
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !12730
  ret i32 %5, !dbg !12731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !12732 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %1, metadata !12734, metadata !DIExpression()), !dbg !12736
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !12737
  br i1 %2, label %3, label %4, !dbg !12739

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !12740
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !12742
  ret void, !dbg !12743

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !12744
  tail call void @Flash_ReturnReady() #20, !dbg !12746
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.150, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.151, i32 0, i32 0)) #23, !dbg !12746
  unreachable, !dbg !12746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !12750 {
  ret void, !dbg !12751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !12752 {
  br label %1, !dbg !12755

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !12756
  call void @llvm.dbg.value(metadata i32 %2, metadata !12754, metadata !DIExpression()), !dbg !12758
  %3 = icmp eq i32 %2, 0, !dbg !12759
  br i1 %3, label %4, label %1, !dbg !12760, !llvm.loop !12761

4:                                                ; preds = %1
  ret void, !dbg !12763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !12764 {
  tail call void @FreeFDMLock() #21, !dbg !12765
  ret void, !dbg !12766
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !12767 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12810, metadata !DIExpression()), !dbg !12816
  call void @llvm.dbg.value(metadata i32 %1, metadata !12811, metadata !DIExpression()), !dbg !12816
  call void @llvm.dbg.value(metadata i8* %2, metadata !12812, metadata !DIExpression()), !dbg !12816
  call void @llvm.dbg.value(metadata i32 %3, metadata !12813, metadata !DIExpression()), !dbg !12816
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !12817
  %6 = load i32, i32* %5, align 4, !dbg !12817
  call void @llvm.dbg.value(metadata i32 %6, metadata !12815, metadata !DIExpression()), !dbg !12816
  %7 = icmp ule i32 %6, %1, !dbg !12818
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !12820
  br i1 %10, label %26, label %11, !dbg !12820

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !12821
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !12821
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !12821
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !12822
  %16 = load i8*, i8** %15, align 4, !dbg !12822
  %17 = ptrtoint i8* %16 to i32, !dbg !12823
  %18 = add i32 %17, %1, !dbg !12824
  call void @llvm.dbg.value(metadata i32 %18, metadata !12814, metadata !DIExpression()), !dbg !12816
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12825
  %20 = load i8, i8* %19, align 4, !dbg !12825, !range !3326
  %21 = icmp eq i8 %20, 0, !dbg !12825
  br i1 %21, label %22, label %23, !dbg !12827

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !12828
  br label %23, !dbg !12830

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !12831
  %24 = inttoptr i32 %18 to i8*, !dbg !12832
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !12833
  tail call void @release_FDM_lock() #21, !dbg !12834
  br label %26, !dbg !12835

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !12816
  ret i32 %27, !dbg !12836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !12837 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12841, metadata !DIExpression()), !dbg !12843
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12844
  %3 = load i8, i8* %2, align 4, !dbg !12844, !range !3326
  %4 = icmp eq i8 %3, 0, !dbg !12844
  br i1 %4, label %5, label %18, !dbg !12846

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !12847
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !12848
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !12848
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !12849
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !12849
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !12850
  %11 = load i8*, i8** %10, align 4, !dbg !12850
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !12851
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !12852
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %14, metadata !12842, metadata !DIExpression()), !dbg !12843
  tail call void @release_FDM_lock() #21, !dbg !12854
  %15 = icmp slt i32 %14, 0, !dbg !12855
  br i1 %15, label %16, label %17, !dbg !12857

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !12858
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.150, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.151, i32 0, i32 0)) #23, !dbg !12858
  unreachable, !dbg !12858

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !12863
  br label %18, !dbg !12864

18:                                               ; preds = %1, %17
  ret void, !dbg !12864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !12865 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12867, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 %1, metadata !12868, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i8* %2, metadata !12869, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 %3, metadata !12870, metadata !DIExpression()), !dbg !12888
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !12889
  %7 = load i32, i32* %6, align 4, !dbg !12889
  call void @llvm.dbg.value(metadata i32 %7, metadata !12873, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 0, metadata !12874, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 0, metadata !12875, metadata !DIExpression()), !dbg !12888
  %8 = icmp ugt i32 %7, %1, !dbg !12890
  br i1 %8, label %9, label %101, !dbg !12892

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !12893
  %11 = icmp ugt i32 %10, %7, !dbg !12895
  br i1 %11, label %101, label %12, !dbg !12896

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12897
  %14 = load i8, i8* %13, align 4, !dbg !12897, !range !3326
  %15 = icmp eq i8 %14, 0, !dbg !12897
  br i1 %15, label %16, label %17, !dbg !12899

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !12900
  br label %17, !dbg !12902

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !12903
  %18 = bitcast i16* %5 to i8*, !dbg !12904
  call void @llvm.dbg.value(metadata i32 0, metadata !12874, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 0, metadata !12875, metadata !DIExpression()), !dbg !12888
  %19 = icmp eq i32 %3, 0, !dbg !12905
  br i1 %19, label %99, label %20, !dbg !12906

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !12906

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !12875, metadata !DIExpression()), !dbg !12888
  %27 = load i8*, i8** %21, align 4, !dbg !12907
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !12908
  %29 = bitcast i8* %28 to i8**, !dbg !12908
  %30 = load i8*, i8** %29, align 4, !dbg !12908
  %31 = ptrtoint i8* %30 to i32, !dbg !12909
  %32 = add i32 %31, %1, !dbg !12910
  %33 = add i32 %32, %26, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %33, metadata !12871, metadata !DIExpression()), !dbg !12888
  %34 = add i32 %26, %22, !dbg !12912
  call void @llvm.dbg.value(metadata i32 %34, metadata !12872, metadata !DIExpression()), !dbg !12888
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12913
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !12914
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !12914
  %38 = add i32 %26, %1, !dbg !12915
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !12916
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !12917
  %41 = and i32 %33, 1, !dbg !12918
  %42 = icmp eq i32 %41, 0, !dbg !12918
  br i1 %42, label %43, label %46, !dbg !12919

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !12920
  %45 = icmp eq i32 %44, 1, !dbg !12921
  br i1 %45, label %46, label %57, !dbg !12922

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12923
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !12925
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !12925
  %50 = load i8*, i8** %21, align 4, !dbg !12926
  %51 = inttoptr i32 %33 to i8*, !dbg !12927
  %52 = inttoptr i32 %34 to i8*, !dbg !12928
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !12929
  call void @llvm.dbg.value(metadata i32 %53, metadata !12874, metadata !DIExpression()), !dbg !12888
  %54 = icmp eq i32 %53, 0, !dbg !12930
  br i1 %54, label %55, label %99, !dbg !12932

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !12933
  call void @llvm.dbg.value(metadata i32 %56, metadata !12875, metadata !DIExpression()), !dbg !12888
  br label %96, !dbg !12934

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !12935
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !12936
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !12937
  call void @llvm.dbg.value(metadata i32 %60, metadata !12876, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.value(metadata i32 %44, metadata !12880, metadata !DIExpression()), !dbg !12938
  %61 = add i32 %60, %33, !dbg !12939
  %62 = sub i32 0, %60, !dbg !12940
  %63 = and i32 %61, %62, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %63, metadata !12881, metadata !DIExpression()), !dbg !12938
  %64 = add i32 %32, %3, !dbg !12942
  %65 = icmp ugt i32 %64, %63, !dbg !12944
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %67, metadata !12880, metadata !DIExpression()), !dbg !12938
  %68 = and i32 %67, -2, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %68, metadata !12880, metadata !DIExpression()), !dbg !12938
  %69 = icmp ne i32 %68, 2, !dbg !12947
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !12948
  br i1 %72, label %85, label %73, !dbg !12948

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !12904
  call void @llvm.dbg.value(metadata i8* %18, metadata !12887, metadata !DIExpression()), !dbg !12949
  %74 = inttoptr i32 %34 to i8*, !dbg !12950
  %75 = load i8, i8* %74, align 1, !dbg !12951
  call void @llvm.dbg.value(metadata i8 undef, metadata !12882, metadata !DIExpression()), !dbg !12949
  store i8 %75, i8* %18, align 2, !dbg !12952
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !12953
  %77 = load i8, i8* %76, align 1, !dbg !12954
  store i8 %77, i8* %24, align 1, !dbg !12955
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12956
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !12957
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !12957
  %81 = load i8*, i8** %21, align 4, !dbg !12958
  %82 = inttoptr i32 %33 to i8*, !dbg !12959
  call void @llvm.dbg.value(metadata i16* %5, metadata !12882, metadata !DIExpression(DW_OP_deref)), !dbg !12949
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %83, metadata !12874, metadata !DIExpression()), !dbg !12888
  %84 = icmp eq i32 %83, 0, !dbg !12961
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !12963
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12964
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !12968
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !12968
  %89 = load i8*, i8** %21, align 4, !dbg !12969
  %90 = inttoptr i32 %33 to i8*, !dbg !12970
  %91 = inttoptr i32 %34 to i8*, !dbg !12971
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !12972
  call void @llvm.dbg.value(metadata i32 %92, metadata !12874, metadata !DIExpression()), !dbg !12888
  %93 = icmp eq i32 %92, 0, !dbg !12973
  br i1 %93, label %94, label %99, !dbg !12975

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !12874, metadata !DIExpression()), !dbg !12888
  %95 = add i32 %68, %26, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %83, metadata !12874, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 %26, metadata !12875, metadata !DIExpression()), !dbg !12888
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !12977
  call void @llvm.dbg.value(metadata i32 0, metadata !12874, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata i32 %97, metadata !12875, metadata !DIExpression()), !dbg !12888
  %98 = icmp ult i32 %97, %3, !dbg !12905
  br i1 %98, label %25, label %99, !dbg !12906, !llvm.loop !12978

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !12980
  br label %101, !dbg !12981

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !12888
  ret i32 %102, !dbg !12981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12982 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12986, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 %1, metadata !12987, metadata !DIExpression()), !dbg !12990
  %3 = and i32 %1, 16777215, !dbg !12991
  call void @llvm.dbg.value(metadata i32 %3, metadata !12989, metadata !DIExpression()), !dbg !12990
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12992
  %5 = load i8, i8* %4, align 4, !dbg !12992, !range !3326
  %6 = icmp eq i8 %5, 0, !dbg !12992
  br i1 %6, label %7, label %8, !dbg !12994

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !12995
  br label %8, !dbg !12997

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !12998
  %10 = load i32, i32* %9, align 4, !dbg !12998
  %11 = icmp ult i32 %3, %10, !dbg !13000
  br i1 %11, label %12, label %27, !dbg !13001

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !13002
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !13003
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !13003
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !13004
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !13004
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !13005
  %18 = load i8*, i8** %17, align 4, !dbg !13005
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !13006
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !13007
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !13008
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !13008
  %23 = load i8*, i8** %17, align 4, !dbg !13009
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %24, metadata !12988, metadata !DIExpression()), !dbg !12990
  tail call void @release_FDM_lock() #21, !dbg !13011
  %25 = icmp eq i32 %24, 0, !dbg !13012
  %26 = select i1 %25, i32 0, i32 6, !dbg !12990
  br label %27, !dbg !12990

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !12990
  ret i32 %28, !dbg !13014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !13015 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !13016
  br i1 %1, label %3, label %2, !dbg !13018

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !13019
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !13021
  store i1 true, i1* @flash_init_status, align 4, !dbg !13022
  br label %3, !dbg !13023

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !13025 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !13026
  %2 = select i1 %1, i32 0, i32 -5, !dbg !13026
  ret i32 %2, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !13028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13032, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i32 %1, metadata !13033, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i8* %2, metadata !13034, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13035, metadata !DIExpression()), !dbg !13039
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !13040
  call void @llvm.dbg.value(metadata i8* %4, metadata !13036, metadata !DIExpression()), !dbg !13039
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !13041
  %6 = ptrtoint i8* %5 to i32, !dbg !13042
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !13043
  %8 = bitcast i8* %7 to i8**, !dbg !13043
  %9 = load i8*, i8** %8, align 4, !dbg !13043
  %10 = ptrtoint i8* %9 to i32, !dbg !13044
  %11 = shl i32 %1, 9, !dbg !13045
  %12 = add i32 %11, %6, !dbg !13046
  %13 = sub i32 %12, %10, !dbg !13047
  call void @llvm.dbg.value(metadata i32 %13, metadata !13038, metadata !DIExpression()), !dbg !13039
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !13048
  call void @llvm.dbg.value(metadata i32 %14, metadata !13037, metadata !DIExpression()), !dbg !13039
  %15 = icmp eq i32 %14, 0, !dbg !13049
  %16 = select i1 %15, i32 0, i32 -13, !dbg !13039
  ret i32 %16, !dbg !13051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !13052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13054, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata i32 %1, metadata !13055, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata i8* %2, metadata !13056, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13057, metadata !DIExpression()), !dbg !13061
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !13062
  call void @llvm.dbg.value(metadata i8* %4, metadata !13058, metadata !DIExpression()), !dbg !13061
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !13063
  %6 = ptrtoint i8* %5 to i32, !dbg !13064
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !13065
  %8 = bitcast i8* %7 to i8**, !dbg !13065
  %9 = load i8*, i8** %8, align 4, !dbg !13065
  %10 = ptrtoint i8* %9 to i32, !dbg !13066
  %11 = shl i32 %1, 9, !dbg !13067
  %12 = add i32 %11, %6, !dbg !13068
  %13 = sub i32 %12, %10, !dbg !13069
  call void @llvm.dbg.value(metadata i32 %13, metadata !13060, metadata !DIExpression()), !dbg !13061
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %14, metadata !13059, metadata !DIExpression()), !dbg !13061
  %15 = icmp eq i32 %14, 0, !dbg !13071
  %16 = select i1 %15, i32 0, i32 -14, !dbg !13061
  ret i32 %16, !dbg !13073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !13074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13078, metadata !DIExpression()), !dbg !13080
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !13081
  call void @llvm.dbg.value(metadata i32 %2, metadata !13079, metadata !DIExpression()), !dbg !13080
  %3 = icmp eq i32 %2, 0, !dbg !13082
  %4 = select i1 %3, i32 0, i32 -15, !dbg !13080
  ret i32 %4, !dbg !13084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !13085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13087, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13088, metadata !DIExpression()), !dbg !13090
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !13091
  call void @llvm.dbg.value(metadata i8* %2, metadata !13089, metadata !DIExpression()), !dbg !13090
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !13092
  ret i32 %3, !dbg !13093
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !13094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13096, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13097, metadata !DIExpression()), !dbg !13099
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !13100
  call void @llvm.dbg.value(metadata i8* %2, metadata !13098, metadata !DIExpression()), !dbg !13099
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !13101
  ret i32 %3, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !13103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13107, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i32* %1, metadata !13108, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i32* %2, metadata !13109, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13110, metadata !DIExpression()), !dbg !13112
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !13113
  call void @llvm.dbg.value(metadata i8* %4, metadata !13111, metadata !DIExpression()), !dbg !13112
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !13114
  store i32 %5, i32* %1, align 4, !dbg !13115
  %6 = icmp eq i32 %5, -1, !dbg !13116
  br i1 %6, label %10, label %7, !dbg !13118

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !13119
  %9 = urem i32 %0, %8, !dbg !13120
  store i32 %9, i32* %2, align 4, !dbg !13121
  br label %10, !dbg !13122

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !13112
  ret i32 %11, !dbg !13123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !13124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13128, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 %1, metadata !13129, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32* %2, metadata !13130, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13131, metadata !DIExpression()), !dbg !13133
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !13134
  call void @llvm.dbg.value(metadata i8* %4, metadata !13132, metadata !DIExpression()), !dbg !13133
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !13135
  %6 = ptrtoint i8* %5 to i32, !dbg !13136
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !13137
  %8 = bitcast i8* %7 to i8**, !dbg !13137
  %9 = load i8*, i8** %8, align 4, !dbg !13137
  %10 = ptrtoint i8* %9 to i32, !dbg !13138
  %11 = add i32 %6, %1, !dbg !13139
  %12 = sub i32 %11, %10, !dbg !13140
  store i32 %12, i32* %2, align 4, !dbg !13141
  ret i32 0, !dbg !13142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !13143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13147, metadata !DIExpression()), !dbg !13148
  %2 = add i32 %0, 2, !dbg !13149
  %3 = icmp ult i32 %2, 9, !dbg !13149
  br i1 %3, label %5, label %4, !dbg !13149

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !13150
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.150, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.151, i32 0, i32 0)) #23, !dbg !13150
  unreachable, !dbg !13150

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !13149
  %7 = lshr i16 433, %6, !dbg !13149
  %8 = and i16 %7, 1, !dbg !13149
  %9 = icmp eq i16 %8, 0, !dbg !13149
  br i1 %9, label %4, label %10, !dbg !13149

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !13149
  %12 = load i32, i32* %11, align 4, !dbg !13149
  ret i32 %12, !dbg !13160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !13161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13166, metadata !DIExpression()), !dbg !13169
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !13170
  call void @llvm.dbg.value(metadata i32 %2, metadata !13168, metadata !DIExpression()), !dbg !13169
  %3 = icmp eq i32 %2, -1, !dbg !13171
  br i1 %3, label %4, label %5, !dbg !13173

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !13174
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.150, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.151, i32 0, i32 0)) #23, !dbg !13174
  unreachable, !dbg !13174

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %6, metadata !13167, metadata !DIExpression()), !dbg !13169
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !13180

7:                                                ; preds = %5
  br label %10, !dbg !13181

8:                                                ; preds = %5
  br label %10, !dbg !13185

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !13188
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.150, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.151, i32 0, i32 0)) #23, !dbg !13188
  unreachable, !dbg !13188

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !13193
  ret i32 %11, !dbg !13194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !13195 {
  %1 = tail call i32 @NOR_init() #21, !dbg !13196
  ret i32 0, !dbg !13197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !13198 {
  ret i32 0, !dbg !13199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13204, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i32 %1, metadata !13205, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i32 0, metadata !13208, metadata !DIExpression()), !dbg !13209
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !13210

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !13211
  %5 = icmp eq i32 %4, 0, !dbg !13215
  br i1 %5, label %12, label %22, !dbg !13216

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !13217
  %8 = icmp eq i32 %7, 0, !dbg !13221
  br i1 %8, label %12, label %22, !dbg !13222

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !13223
  %11 = icmp eq i32 %10, 0, !dbg !13227
  br i1 %11, label %12, label %22, !dbg !13228

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !13229
  call void @llvm.dbg.value(metadata i32 %13, metadata !13208, metadata !DIExpression()), !dbg !13209
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %14, metadata !13207, metadata !DIExpression()), !dbg !13209
  %15 = icmp eq i32 %14, -1, !dbg !13231
  br i1 %15, label %22, label %16, !dbg !13233

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %17, metadata !13207, metadata !DIExpression()), !dbg !13209
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !13235
  call void @llvm.dbg.value(metadata i32 %18, metadata !13206, metadata !DIExpression()), !dbg !13209
  %19 = icmp eq i32 %18, 0, !dbg !13236
  br i1 %19, label %22, label %20, !dbg !13238

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !13239
  br label %22, !dbg !13241

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !13209
  ret i32 %23, !dbg !13242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !13243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13247, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata i8* %1, metadata !13248, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata i32 %2, metadata !13249, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13250, metadata !DIExpression()), !dbg !13252
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !13253
  call void @llvm.dbg.value(metadata i32 %4, metadata !13251, metadata !DIExpression()), !dbg !13252
  %5 = icmp eq i32 %4, 0, !dbg !13254
  br i1 %5, label %8, label %6, !dbg !13256

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !13257
  br label %8, !dbg !13259

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !13252
  ret i32 %9, !dbg !13260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !13261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13265, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i8* %1, metadata !13266, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %2, metadata !13267, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !13268, metadata !DIExpression()), !dbg !13273
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %4, metadata !13269, metadata !DIExpression()), !dbg !13273
  %5 = icmp eq i32 %4, 0, !dbg !13275
  br i1 %5, label %8, label %6, !dbg !13277

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !13278
  br label %21, !dbg !13280

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !13281
  br i1 %9, label %10, label %21, !dbg !13282

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %11, metadata !13270, metadata !DIExpression()), !dbg !13285
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !13270, metadata !DIExpression()), !dbg !13285
  %15 = icmp ugt i32 %11, %14, !dbg !13286
  br i1 %15, label %21, label %16, !dbg !13288

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !13270, metadata !DIExpression()), !dbg !13285
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !13289
  %19 = add i32 %17, 32, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %19, metadata !13270, metadata !DIExpression()), !dbg !13285
  %20 = icmp ugt i32 %19, %14, !dbg !13286
  br i1 %20, label %21, label %16, !dbg !13288, !llvm.loop !13292

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !13273
  ret i32 %22, !dbg !13294
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !13295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13299, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 %1, metadata !13300, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i8* %0, metadata !13301, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 0, metadata !13302, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 0, metadata !13303, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 0, metadata !13304, metadata !DIExpression()), !dbg !13305
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !13306
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !13306
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !13306
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !13307
  %7 = load i32, i32* %6, align 4, !dbg !13307
  call void @llvm.dbg.value(metadata i32 %7, metadata !13304, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 0, metadata !13303, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 0, metadata !13302, metadata !DIExpression()), !dbg !13305
  %8 = icmp ugt i32 %7, %1, !dbg !13308
  br i1 %8, label %23, label %9, !dbg !13309

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !13310
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !13304, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 %12, metadata !13303, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 %13, metadata !13302, metadata !DIExpression()), !dbg !13305
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !13312
  %15 = load i32, i32* %14, align 4, !dbg !13312
  %16 = mul i32 %15, %10, !dbg !13313
  %17 = add i32 %16, %13, !dbg !13314
  call void @llvm.dbg.value(metadata i32 %17, metadata !13302, metadata !DIExpression()), !dbg !13305
  %18 = add i32 %12, 1, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %18, metadata !13303, metadata !DIExpression()), !dbg !13305
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !13316
  %20 = load i32, i32* %19, align 4, !dbg !13316
  %21 = add i32 %20, %11, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %21, metadata !13304, metadata !DIExpression()), !dbg !13305
  %22 = icmp ugt i32 %21, %1, !dbg !13308
  br i1 %22, label %23, label %9, !dbg !13309, !llvm.loop !13318

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !13320
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !13305
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !13305
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !13305
  call void @llvm.dbg.value(metadata i8* %0, metadata !13301, metadata !DIExpression()), !dbg !13305
  %28 = sub i32 %1, %27, !dbg !13321
  %29 = add i32 %28, %24, !dbg !13322
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !13323
  %31 = load i32, i32* %30, align 4, !dbg !13323
  %32 = mul i32 %29, %31, !dbg !13324
  %33 = add i32 %32, %25, !dbg !13325
  call void @llvm.dbg.value(metadata i32 %33, metadata !13302, metadata !DIExpression()), !dbg !13305
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !13326
  %35 = bitcast i8* %34 to i8**, !dbg !13326
  %36 = load i8*, i8** %35, align 4, !dbg !13326
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !13327
  ret i8* %37, !dbg !13328
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !13329 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13331, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata i32 %1, metadata !13332, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata i32 %2, metadata !13333, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata i8* %0, metadata !13334, metadata !DIExpression()), !dbg !13335
  %4 = icmp eq i32 %2, 0, !dbg !13336
  br i1 %4, label %6, label %5, !dbg !13339

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !13340
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.166, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.167, i32 0, i32 0)) #23, !dbg !13340
  unreachable, !dbg !13340

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !13334, metadata !DIExpression()), !dbg !13335
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !13342
  %8 = inttoptr i32 %7 to i8*, !dbg !13343
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !13344
  %10 = bitcast i8* %9 to i8**, !dbg !13344
  store i8* %8, i8** %10, align 4, !dbg !13345
  ret i8* %8, !dbg !13346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2455, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i32 %1, metadata !2456, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i8* %0, metadata !2457, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i32 0, metadata !2502, metadata !DIExpression()), !dbg !13347
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !13348
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !13348
  %5 = and i32 %1, 7, !dbg !13350
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !13351
  %7 = load i32, i32* %6, align 4, !dbg !13351
  %8 = icmp eq i32 %7, -1, !dbg !13352
  br i1 %8, label %62, label %9, !dbg !13353

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !13354
  br i1 %10, label %54, label %11, !dbg !13357

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !13358
  %13 = load i32, i32* %12, align 4, !dbg !13358
  %14 = icmp eq i32 %13, -1, !dbg !13361
  br i1 %14, label %44, label %15, !dbg !13362

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !13363
  br i1 %16, label %35, label %17, !dbg !13366

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !13367
  %19 = add i32 %18, 1, !dbg !13367
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !13367
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !13369
  %21 = shl nuw nsw i32 1, %5, !dbg !13371
  %22 = and i32 %20, %21, !dbg !13372
  %23 = icmp eq i32 %22, 0, !dbg !13372
  br i1 %23, label %30, label %24, !dbg !13373

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !13374
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !13376
  %26 = ptrtoint i8* %25 to i32, !dbg !13377
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !13378
  store i32 %26, i32* %27, align 4, !dbg !13379
  call void @llvm.dbg.value(metadata i32 %26, metadata !2502, metadata !DIExpression()), !dbg !13347
  %28 = xor i32 %21, -1, !dbg !13380
  %29 = and i32 %20, %28, !dbg !13381
  br label %71, !dbg !13382

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !13383
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !13385
  %32 = ptrtoint i8* %31 to i32, !dbg !13386
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !13387
  store i32 %32, i32* %33, align 4, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %32, metadata !2502, metadata !DIExpression()), !dbg !13347
  %34 = or i32 %20, %21, !dbg !13389
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !13390
  %37 = add i32 %36, 1, !dbg !13390
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !13390
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !13392
  %39 = load i32, i32* %38, align 4, !dbg !13392
  call void @llvm.dbg.value(metadata i32 %39, metadata !2502, metadata !DIExpression()), !dbg !13347
  %40 = shl nuw nsw i32 1, %5, !dbg !13393
  %41 = xor i32 %40, -1, !dbg !13394
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !13395
  %43 = and i32 %42, %41, !dbg !13395
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !13396
  %46 = add i32 %45, 1, !dbg !13396
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !13396
  store i32 %1, i32* %12, align 4, !dbg !13398
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !13399
  %48 = ptrtoint i8* %47 to i32, !dbg !13400
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !13401
  store i32 %48, i32* %49, align 4, !dbg !13402
  call void @llvm.dbg.value(metadata i32 %48, metadata !2502, metadata !DIExpression()), !dbg !13347
  %50 = shl nuw nsw i32 1, %5, !dbg !13403
  %51 = xor i32 %50, -1, !dbg !13404
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !13405
  %53 = and i32 %52, %51, !dbg !13405
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !13406
  %56 = add i32 %55, 1, !dbg !13406
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !13406
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !13408
  %58 = load i32, i32* %57, align 4, !dbg !13408
  call void @llvm.dbg.value(metadata i32 %58, metadata !2502, metadata !DIExpression()), !dbg !13347
  %59 = shl nuw nsw i32 1, %5, !dbg !13409
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !13410
  %61 = or i32 %60, %59, !dbg !13410
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !13411
  %64 = add i32 %63, 1, !dbg !13411
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !13411
  store i32 %1, i32* %6, align 4, !dbg !13413
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !13414
  %66 = ptrtoint i8* %65 to i32, !dbg !13415
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !13416
  store i32 %66, i32* %67, align 4, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %66, metadata !2502, metadata !DIExpression()), !dbg !13347
  %68 = shl nuw nsw i32 1, %5, !dbg !13418
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !13419
  %70 = or i32 %69, %68, !dbg !13419
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !13420
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %73, metadata !2502, metadata !DIExpression()), !dbg !13347
  ret i32 %73, !dbg !13421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !13422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13424, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %1, metadata !13425, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8* %0, metadata !13426, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 0, metadata !13427, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 0, metadata !13428, metadata !DIExpression()), !dbg !13429
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !13430
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !13430
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !13430
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !13431
  %7 = load i32, i32* %6, align 4, !dbg !13431
  call void @llvm.dbg.value(metadata i32 %7, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 0, metadata !13427, metadata !DIExpression()), !dbg !13429
  %8 = icmp ugt i32 %7, %1, !dbg !13432
  br i1 %8, label %17, label %9, !dbg !13433

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %11, metadata !13427, metadata !DIExpression()), !dbg !13429
  %12 = add i32 %11, 1, !dbg !13434
  call void @llvm.dbg.value(metadata i32 %12, metadata !13427, metadata !DIExpression()), !dbg !13429
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !13436
  %14 = load i32, i32* %13, align 4, !dbg !13436
  %15 = add i32 %14, %10, !dbg !13437
  call void @llvm.dbg.value(metadata i32 %15, metadata !13428, metadata !DIExpression()), !dbg !13429
  %16 = icmp ugt i32 %15, %1, !dbg !13432
  br i1 %16, label %17, label %9, !dbg !13433, !llvm.loop !13438

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !13429
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !13440
  %20 = load i32, i32* %19, align 4, !dbg !13440
  ret i32 %20, !dbg !13441
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !13442 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13444, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 %1, metadata !13445, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8* %0, metadata !13446, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 0, metadata !13447, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 0, metadata !13448, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 0, metadata !13449, metadata !DIExpression()), !dbg !13450
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !13451
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !13451
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !13451
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !13452
  %7 = load i32, i32* %6, align 4, !dbg !13452
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !13453
  %9 = load i32, i32* %8, align 4, !dbg !13453
  %10 = mul i32 %9, %7, !dbg !13454
  call void @llvm.dbg.value(metadata i32 %10, metadata !13448, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 0, metadata !13449, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 0, metadata !13447, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 %1, metadata !13445, metadata !DIExpression()), !dbg !13450
  %11 = icmp ult i32 %10, %1, !dbg !13455
  br i1 %11, label %12, label %30, !dbg !13456

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !13457
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !13449, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 %16, metadata !13448, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 %17, metadata !13447, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 %18, metadata !13445, metadata !DIExpression()), !dbg !13450
  %19 = icmp eq i32 %14, 0, !dbg !13456
  br i1 %19, label %36, label %20, !dbg !13458

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %21, metadata !13449, metadata !DIExpression()), !dbg !13450
  %22 = sub i32 %18, %16, !dbg !13461
  call void @llvm.dbg.value(metadata i32 %22, metadata !13445, metadata !DIExpression()), !dbg !13450
  %23 = add i32 %17, 1, !dbg !13462
  call void @llvm.dbg.value(metadata i32 %23, metadata !13447, metadata !DIExpression()), !dbg !13450
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !13463
  %25 = load i32, i32* %24, align 4, !dbg !13463
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !13464
  %27 = load i32, i32* %26, align 4, !dbg !13464
  %28 = mul i32 %27, %25, !dbg !13465
  call void @llvm.dbg.value(metadata i32 %28, metadata !13448, metadata !DIExpression()), !dbg !13450
  %29 = icmp ugt i32 %22, %28, !dbg !13455
  br i1 %29, label %12, label %30, !dbg !13456, !llvm.loop !13466

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !13468
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !13450
  %34 = udiv i32 %32, %31, !dbg !13471
  %35 = add i32 %34, %33, !dbg !13472
  call void @llvm.dbg.value(metadata i32 %35, metadata !13449, metadata !DIExpression()), !dbg !13450
  br label %36, !dbg !13473

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !13474
  call void @llvm.dbg.value(metadata i32 %37, metadata !13449, metadata !DIExpression()), !dbg !13450
  ret i32 %37, !dbg !13475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !13476 {
  ret i32 134217728, !dbg !13477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !13478 {
  ret i32 3932160, !dbg !13479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !13480 {
  ret i32 0, !dbg !13481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !13482 {
  ret i32 262144, !dbg !13483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !13484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13486, metadata !DIExpression()), !dbg !13488
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %2, metadata !13487, metadata !DIExpression()), !dbg !13488
  %3 = icmp eq i32 %2, 0, !dbg !13490
  br i1 %3, label %5, label %4, !dbg !13492

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !13493
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.166, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.167, i32 0, i32 0)) #23, !dbg !13493
  unreachable, !dbg !13493

5:                                                ; preds = %1
  ret void, !dbg !13498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_mt6385() local_unnamed_addr #0 !dbg !2509 {
  %1 = alloca %struct.anon, align 4
  %2 = bitcast %struct.anon* %1 to i8*, !dbg !13499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !13499
  call void @llvm.dbg.declare(metadata %struct.anon* %1, metadata !2662, metadata !DIExpression()), !dbg !13500
  %3 = load i1, i1* @pmu_init_mt6385.init, align 1, !dbg !13501
  br i1 %3, label %47, label %4, !dbg !13503

4:                                                ; preds = %0
  store i1 true, i1* @pmu_init_mt6385.init, align 1, !dbg !13504
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !13505
  store i32 2500, i32* %5, align 4, !dbg !13506
  %6 = call i32 @pmic_i2c_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !13507
  %7 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !13508
  %8 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #20, !dbg !13509
  call void @llvm.dbg.value(metadata i8 %8, metadata !2660, metadata !DIExpression()), !dbg !13510
  %9 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 1, i16 noundef zeroext 255, i16 noundef zeroext 0) #20, !dbg !13511
  call void @llvm.dbg.value(metadata i8 %9, metadata !2661, metadata !DIExpression()), !dbg !13510
  %10 = icmp eq i8 %8, 16, !dbg !13512
  %11 = icmp eq i8 %9, -123
  %12 = select i1 %10, i1 %11, i1 false, !dbg !13514
  br i1 %12, label %13, label %14, !dbg !13514

13:                                               ; preds = %4
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 111, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.174, i32 0, i32 0)) #20, !dbg !13515
  br label %18, !dbg !13517

14:                                               ; preds = %4
  %15 = icmp eq i8 %8, 17, !dbg !13519
  %16 = select i1 %15, i1 %11, i1 false, !dbg !13517
  br i1 %16, label %17, label %18, !dbg !13517

17:                                               ; preds = %14
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 114, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.175, i32 0, i32 0)) #20, !dbg !13520
  br label %18, !dbg !13522

18:                                               ; preds = %13, %17, %14
  %19 = phi i1 [ false, %13 ], [ true, %17 ], [ %15, %14 ]
  br i1 %10, label %20, label %30, !dbg !13523

20:                                               ; preds = %18
  %21 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #20, !dbg !13524
  %22 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #20, !dbg !13527
  %23 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #20, !dbg !13528
  %24 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 203, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #20, !dbg !13529
  %25 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #20, !dbg !13530
  %26 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !13531
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !13532
  %27 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !13533
  %28 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 2) #20, !dbg !13534
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !13535
  %29 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #20, !dbg !13536
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E1, i32 0, i32 0)) #21, !dbg !13537
  br label %30, !dbg !13538

30:                                               ; preds = %20, %18
  br i1 %19, label %31, label %44, !dbg !13539

31:                                               ; preds = %30
  %32 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #20, !dbg !13540
  %33 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !13543
  %34 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 70, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #20, !dbg !13544
  %35 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #20, !dbg !13545
  %36 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #20, !dbg !13546
  %37 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 300, i16 noundef zeroext 7, i16 noundef zeroext 3, i16 noundef zeroext 1) #20, !dbg !13547
  %38 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 599, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 0) #20, !dbg !13548
  %39 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #20, !dbg !13549
  %40 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 603, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 1) #20, !dbg !13550
  %41 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !13551
  %42 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #20, !dbg !13552
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E2, i32 0, i32 0)) #21, !dbg !13553
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !13554
  %43 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #20, !dbg !13555
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !13556
  call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #20, !dbg !13557
  br label %44, !dbg !13558

44:                                               ; preds = %31, %30
  %45 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 129, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #20, !dbg !13559
  %46 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 68, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #20, !dbg !13560
  call void @pmu_auxadc_init() #20, !dbg !13561
  call void @pmu_eint_init() #21, !dbg !13562
  br label %47, !dbg !13563

47:                                               ; preds = %0, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !13563
  ret void, !dbg !13563
}

; Function Attrs: optsize
declare dso_local void @pmu_set_vrc_key_mt6385(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local void @pmu_set_ovr_mode_mt6385(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_power_mode([8 x i8]* noundef readonly %0) local_unnamed_addr #0 !dbg !13564 {
  call void @llvm.dbg.value(metadata [8 x i8]* %0, metadata !13570, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.value(metadata i32 0, metadata !13571, metadata !DIExpression()), !dbg !13572
  br label %2, !dbg !13573

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()), !dbg !13572
  %4 = add nuw nsw i32 %3, 1, !dbg !13575
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 0, i32 %4, !dbg !13578
  %6 = load i8, i8* %5, align 1, !dbg !13578
  %7 = zext i8 %6 to i32, !dbg !13579
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 0, i32 noundef %4, i32 noundef %7) #20, !dbg !13580
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 1, i32 %4, !dbg !13581
  %9 = load i8, i8* %8, align 1, !dbg !13581
  %10 = zext i8 %9 to i32, !dbg !13582
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 1, i32 noundef %4, i32 noundef %10) #20, !dbg !13583
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %4, !dbg !13584
  %12 = load i8, i8* %11, align 1, !dbg !13584
  %13 = zext i8 %12 to i32, !dbg !13585
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 2, i32 noundef %4, i32 noundef %13) #20, !dbg !13586
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %4, !dbg !13587
  %15 = load i8, i8* %14, align 1, !dbg !13587
  %16 = zext i8 %15 to i32, !dbg !13588
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 3, i32 noundef %4, i32 noundef %16) #20, !dbg !13589
  %17 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 4, i32 %4, !dbg !13590
  %18 = load i8, i8* %17, align 1, !dbg !13590
  %19 = zext i8 %18 to i32, !dbg !13591
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 4, i32 noundef %4, i32 noundef %19) #20, !dbg !13592
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %4, !dbg !13593
  %21 = load i8, i8* %20, align 1, !dbg !13593
  %22 = zext i8 %21 to i32, !dbg !13594
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 5, i32 noundef %4, i32 noundef %22) #20, !dbg !13595
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %4, !dbg !13596
  %24 = load i8, i8* %23, align 1, !dbg !13596
  %25 = zext i8 %24 to i32, !dbg !13597
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 6, i32 noundef %4, i32 noundef %25) #20, !dbg !13598
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %4, !dbg !13599
  %27 = load i8, i8* %26, align 1, !dbg !13599
  %28 = zext i8 %27 to i32, !dbg !13600
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 7, i32 noundef %4, i32 noundef %28) #20, !dbg !13601
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %4, !dbg !13602
  %30 = load i8, i8* %29, align 1, !dbg !13602
  %31 = zext i8 %30 to i32, !dbg !13603
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 8, i32 noundef %4, i32 noundef %31) #20, !dbg !13604
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %4, !dbg !13605
  %33 = load i8, i8* %32, align 1, !dbg !13605
  %34 = zext i8 %33 to i32, !dbg !13606
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 9, i32 noundef %4, i32 noundef %34) #20, !dbg !13607
  call void @llvm.dbg.value(metadata i32 %4, metadata !13571, metadata !DIExpression()), !dbg !13572
  %35 = icmp eq i32 %4, 4, !dbg !13608
  br i1 %35, label %36, label %2, !dbg !13573, !llvm.loop !13609

36:                                               ; preds = %2
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 10, i32 noundef 1, i32 noundef 0) #20, !dbg !13611
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 11, i32 noundef 1, i32 noundef 0) #20, !dbg !13612
  call void @llvm.dbg.value(metadata i32 0, metadata !13571, metadata !DIExpression()), !dbg !13572
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 5
  call void @llvm.dbg.value(metadata i32 0, metadata !13571, metadata !DIExpression()), !dbg !13572
  %38 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 5
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 5
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 5
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 5
  %42 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 5
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 5
  br label %44, !dbg !13613

44:                                               ; preds = %36, %44
  %45 = phi i1 [ true, %36 ], [ false, %44 ]
  %46 = phi i32 [ 0, %36 ], [ 1, %44 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !13571, metadata !DIExpression()), !dbg !13572
  %47 = add nuw nsw i32 %46, 3, !dbg !13615
  %48 = load i8, i8* %37, align 1, !dbg !13618
  %49 = zext i8 %48 to i32, !dbg !13619
  %50 = or i32 %46, 6, !dbg !13620
  %51 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %50, !dbg !13621
  %52 = load i8, i8* %51, align 1, !dbg !13621
  %53 = zext i8 %52 to i32, !dbg !13622
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef %47, i32 noundef %49, i32 noundef %53) #20, !dbg !13623
  %54 = load i8, i8* %38, align 1, !dbg !13624
  %55 = zext i8 %54 to i32, !dbg !13625
  %56 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %50, !dbg !13626
  %57 = load i8, i8* %56, align 1, !dbg !13626
  %58 = zext i8 %57 to i32, !dbg !13627
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 3, i32 noundef %47, i32 noundef %55, i32 noundef %58) #20, !dbg !13628
  %59 = load i8, i8* %39, align 1, !dbg !13629
  %60 = zext i8 %59 to i32, !dbg !13630
  %61 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %50, !dbg !13631
  %62 = load i8, i8* %61, align 1, !dbg !13631
  %63 = zext i8 %62 to i32, !dbg !13632
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 5, i32 noundef %47, i32 noundef %60, i32 noundef %63) #20, !dbg !13633
  %64 = load i8, i8* %40, align 1, !dbg !13634
  %65 = zext i8 %64 to i32, !dbg !13635
  %66 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %50, !dbg !13636
  %67 = load i8, i8* %66, align 1, !dbg !13636
  %68 = zext i8 %67 to i32, !dbg !13637
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 6, i32 noundef %47, i32 noundef %65, i32 noundef %68) #20, !dbg !13638
  %69 = load i8, i8* %41, align 1, !dbg !13639
  %70 = zext i8 %69 to i32, !dbg !13640
  %71 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %50, !dbg !13641
  %72 = load i8, i8* %71, align 1, !dbg !13641
  %73 = zext i8 %72 to i32, !dbg !13642
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef %47, i32 noundef %70, i32 noundef %73) #20, !dbg !13643
  %74 = load i8, i8* %42, align 1, !dbg !13644
  %75 = zext i8 %74 to i32, !dbg !13645
  %76 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %50, !dbg !13646
  %77 = load i8, i8* %76, align 1, !dbg !13646
  %78 = zext i8 %77 to i32, !dbg !13647
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef %47, i32 noundef %75, i32 noundef %78) #20, !dbg !13648
  %79 = load i8, i8* %43, align 1, !dbg !13649
  %80 = zext i8 %79 to i32, !dbg !13650
  %81 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %50, !dbg !13651
  %82 = load i8, i8* %81, align 1, !dbg !13651
  %83 = zext i8 %82 to i32, !dbg !13652
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 9, i32 noundef %47, i32 noundef %80, i32 noundef %83) #20, !dbg !13653
  call void @llvm.dbg.value(metadata i32 %46, metadata !13571, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13572
  br i1 %45, label %44, label %84, !dbg !13613, !llvm.loop !13654

84:                                               ; preds = %44
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 3, i32 noundef 1, i32 noundef 1) #20, !dbg !13656
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 3, i32 noundef 1, i32 noundef 1) #20, !dbg !13657
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 4, i32 noundef 1, i32 noundef 1) #20, !dbg !13658
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 4, i32 noundef 1, i32 noundef 1) #20, !dbg !13659
  %85 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 0, !dbg !13660
  %86 = load i8, i8* %85, align 1, !dbg !13660
  %87 = zext i8 %86 to i32, !dbg !13661
  tail call void @PMIC_VR_CONTROL(i32 noundef 2, i32 noundef %87) #20, !dbg !13662
  %88 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 0, !dbg !13663
  %89 = load i8, i8* %88, align 1, !dbg !13663
  %90 = zext i8 %89 to i32, !dbg !13664
  tail call void @PMIC_VR_CONTROL(i32 noundef 3, i32 noundef %90) #20, !dbg !13665
  %91 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 0, !dbg !13666
  %92 = load i8, i8* %91, align 1, !dbg !13666
  %93 = zext i8 %92 to i32, !dbg !13667
  tail call void @PMIC_VR_CONTROL(i32 noundef 5, i32 noundef %93) #20, !dbg !13668
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 0, !dbg !13669
  %95 = load i8, i8* %94, align 1, !dbg !13669
  %96 = zext i8 %95 to i32, !dbg !13670
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %96) #20, !dbg !13671
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 0, !dbg !13672
  %98 = load i8, i8* %97, align 1, !dbg !13672
  %99 = zext i8 %98 to i32, !dbg !13673
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %99) #20, !dbg !13674
  %100 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 0, !dbg !13675
  %101 = load i8, i8* %100, align 1, !dbg !13675
  %102 = zext i8 %101 to i32, !dbg !13676
  tail call void @PMIC_VR_CONTROL(i32 noundef 8, i32 noundef %102) #20, !dbg !13677
  %103 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 0, !dbg !13678
  %104 = load i8, i8* %103, align 1, !dbg !13678
  %105 = zext i8 %104 to i32, !dbg !13679
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %105) #20, !dbg !13680
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef 0) #20, !dbg !13681
  tail call void @PMIC_VR_CONTROL(i32 noundef 11, i32 noundef 0) #20, !dbg !13682
  tail call void @PMIC_VR_CONTROL(i32 noundef 12, i32 noundef 0) #20, !dbg !13683
  tail call void @PMIC_VR_CONTROL(i32 noundef 13, i32 noundef 0) #20, !dbg !13684
  tail call void @PMIC_VR_CONTROL(i32 noundef 14, i32 noundef 0) #20, !dbg !13685
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !13686
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #20, !dbg !13687
  %106 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #20, !dbg !13688
  %107 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #20, !dbg !13689
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #20, !dbg !13690
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #20, !dbg !13691
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !13692
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #20, !dbg !13693
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 3, i32 noundef 2, i32 noundef 0) #20, !dbg !13694
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 4, i32 noundef 2, i32 noundef 0) #20, !dbg !13695
  ret void, !dbg !13696
}

; Function Attrs: optsize
declare dso_local void @pmu_auxadc_init() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_init() local_unnamed_addr #0 !dbg !13697 {
  %1 = alloca %struct.hal_cache_region_config_t, align 4
  %2 = bitcast %struct.hal_cache_region_config_t* %1 to i8*, !dbg !13705
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !13705
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %1, metadata !13699, metadata !DIExpression()), !dbg !13706
  %3 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !13707
  store i32 2, i32* %3, align 4, !dbg !13708
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !13709
  store i32 1, i32* %4, align 4, !dbg !13710
  %5 = call i32 @hal_eint_init(i32 noundef 30, %struct.hal_cache_region_config_t* noundef nonnull %1) #20, !dbg !13711
  %6 = call i32 @hal_eint_register_callback(i32 noundef 30, void (i8*)* noundef nonnull @pmu_eint_handler, i8* noundef null) #20, !dbg !13712
  %7 = call i32 @hal_eint_unmask(i32 noundef 30) #20, !dbg !13713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !13714
  ret void, !dbg !13714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_handler(i8* nocapture readnone %0) #0 !dbg !2630 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !2632, metadata !DIExpression()), !dbg !13715
  %2 = tail call i32 @hal_eint_mask(i32 noundef 30) #20, !dbg !13716
  %3 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !13717
  call void @llvm.dbg.value(metadata i32 %3, metadata !2633, metadata !DIExpression()), !dbg !13715
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13718
  br label %6, !dbg !13720

4:                                                ; preds = %6
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13721
  %5 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !13723
  br label %18, !dbg !13726

6:                                                ; preds = %1, %6
  %7 = phi i32 [ 0, %1 ], [ %14, %6 ]
  %8 = trunc i32 %7 to i16, !dbg !13727
  %9 = add nuw nsw i16 %8, 30, !dbg !13727
  %10 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %9, i16 noundef zeroext 255, i16 noundef zeroext 0) #20, !dbg !13730
  %11 = zext i8 %10 to i32, !dbg !13730
  %12 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13731
  %13 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %12, !dbg !13732
  store i32 %11, i32* %13, align 4, !dbg !13733
  %14 = add i32 %12, 1, !dbg !13734
  store i32 %14, i32* @pmu_eint_handler.index, align 4, !dbg !13718
  %15 = icmp ult i32 %14, 7, !dbg !13735
  br i1 %15, label %6, label %4, !dbg !13720, !llvm.loop !13736

16:                                               ; preds = %37
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13738
  %17 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !13740
  br label %44, !dbg !13743

18:                                               ; preds = %4, %37
  %19 = phi i32 [ %5, %4 ], [ %39, %37 ], !dbg !13723
  %20 = phi i32 [ 0, %4 ], [ %40, %37 ]
  %21 = shl nuw nsw i32 %20, 1, !dbg !13744
  %22 = lshr i32 %19, %21, !dbg !13745
  %23 = and i32 %22, 3, !dbg !13746
  %24 = icmp eq i32 %23, 0, !dbg !13747
  br i1 %24, label %37, label %25, !dbg !13749

25:                                               ; preds = %18
  %26 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 3, !dbg !13750
  %27 = load i8, i8* %26, align 1, !dbg !13750, !range !3326
  %28 = icmp eq i8 %27, 0, !dbg !13750
  br i1 %28, label %37, label %29, !dbg !13751

29:                                               ; preds = %25
  %30 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 0, !dbg !13752
  %31 = load void (i8, i8*)*, void (i8, i8*)** %30, align 4, !dbg !13752
  %32 = trunc i32 %23 to i8, !dbg !13754
  %33 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 1, !dbg !13755
  %34 = load i8*, i8** %33, align 4, !dbg !13755
  tail call void %31(i8 noundef zeroext %32, i8* noundef %34) #20, !dbg !13756
  %35 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !13723
  %36 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13757
  br label %37, !dbg !13758

37:                                               ; preds = %18, %25, %29
  %38 = phi i32 [ %20, %18 ], [ %20, %25 ], [ %36, %29 ], !dbg !13757
  %39 = phi i32 [ %19, %18 ], [ %19, %25 ], [ %35, %29 ]
  %40 = add i32 %38, 1, !dbg !13757
  store i32 %40, i32* @pmu_eint_handler.index, align 4, !dbg !13721
  %41 = icmp ult i32 %40, 4, !dbg !13759
  br i1 %41, label %18, label %16, !dbg !13726, !llvm.loop !13760

42:                                               ; preds = %64
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13762
  %43 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !13764
  br label %71, !dbg !13767

44:                                               ; preds = %16, %64
  %45 = phi i32 [ %17, %16 ], [ %66, %64 ], !dbg !13740
  %46 = phi i32 [ 0, %16 ], [ %67, %64 ]
  %47 = shl nuw nsw i32 %46, 1, !dbg !13768
  %48 = lshr i32 %45, %47, !dbg !13769
  %49 = and i32 %48, 3, !dbg !13770
  %50 = icmp eq i32 %49, 0, !dbg !13771
  br i1 %50, label %64, label %51, !dbg !13773

51:                                               ; preds = %44
  %52 = add nuw nsw i32 %46, 4, !dbg !13774
  %53 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 3, !dbg !13775
  %54 = load i8, i8* %53, align 1, !dbg !13775, !range !3326
  %55 = icmp eq i8 %54, 0, !dbg !13775
  br i1 %55, label %64, label %56, !dbg !13776

56:                                               ; preds = %51
  %57 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 0, !dbg !13777
  %58 = load void (i8, i8*)*, void (i8, i8*)** %57, align 4, !dbg !13777
  %59 = trunc i32 %49 to i8, !dbg !13779
  %60 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 1, !dbg !13780
  %61 = load i8*, i8** %60, align 4, !dbg !13780
  tail call void %58(i8 noundef zeroext %59, i8* noundef %61) #20, !dbg !13781
  %62 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !13740
  %63 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13782
  br label %64, !dbg !13783

64:                                               ; preds = %44, %51, %56
  %65 = phi i32 [ %46, %44 ], [ %46, %51 ], [ %63, %56 ], !dbg !13782
  %66 = phi i32 [ %45, %44 ], [ %45, %51 ], [ %62, %56 ]
  %67 = add i32 %65, 1, !dbg !13782
  store i32 %67, i32* @pmu_eint_handler.index, align 4, !dbg !13738
  %68 = icmp ult i32 %67, 4, !dbg !13784
  br i1 %68, label %44, label %42, !dbg !13743, !llvm.loop !13785

69:                                               ; preds = %91
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13787
  %70 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !13789
  br label %98, !dbg !13792

71:                                               ; preds = %42, %91
  %72 = phi i32 [ %43, %42 ], [ %93, %91 ], !dbg !13764
  %73 = phi i32 [ 0, %42 ], [ %94, %91 ]
  %74 = shl nuw nsw i32 %73, 1, !dbg !13793
  %75 = lshr i32 %72, %74, !dbg !13794
  %76 = and i32 %75, 3, !dbg !13795
  %77 = icmp eq i32 %76, 0, !dbg !13796
  br i1 %77, label %91, label %78, !dbg !13798

78:                                               ; preds = %71
  %79 = add nuw nsw i32 %73, 8, !dbg !13799
  %80 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 3, !dbg !13800
  %81 = load i8, i8* %80, align 1, !dbg !13800, !range !3326
  %82 = icmp eq i8 %81, 0, !dbg !13800
  br i1 %82, label %91, label %83, !dbg !13801

83:                                               ; preds = %78
  %84 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 0, !dbg !13802
  %85 = load void (i8, i8*)*, void (i8, i8*)** %84, align 4, !dbg !13802
  %86 = trunc i32 %76 to i8, !dbg !13804
  %87 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 1, !dbg !13805
  %88 = load i8*, i8** %87, align 4, !dbg !13805
  tail call void %85(i8 noundef zeroext %86, i8* noundef %88) #20, !dbg !13806
  %89 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !13764
  %90 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13807
  br label %91, !dbg !13808

91:                                               ; preds = %71, %78, %83
  %92 = phi i32 [ %73, %71 ], [ %73, %78 ], [ %90, %83 ], !dbg !13807
  %93 = phi i32 [ %72, %71 ], [ %72, %78 ], [ %89, %83 ]
  %94 = add i32 %92, 1, !dbg !13807
  store i32 %94, i32* @pmu_eint_handler.index, align 4, !dbg !13762
  %95 = icmp ult i32 %94, 4, !dbg !13809
  br i1 %95, label %71, label %69, !dbg !13767, !llvm.loop !13810

96:                                               ; preds = %118
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13812
  %97 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !13814
  br label %125, !dbg !13817

98:                                               ; preds = %69, %118
  %99 = phi i32 [ %70, %69 ], [ %120, %118 ], !dbg !13789
  %100 = phi i32 [ 0, %69 ], [ %121, %118 ]
  %101 = shl nuw nsw i32 %100, 1, !dbg !13818
  %102 = lshr i32 %99, %101, !dbg !13819
  %103 = and i32 %102, 3, !dbg !13820
  %104 = icmp eq i32 %103, 0, !dbg !13821
  br i1 %104, label %118, label %105, !dbg !13823

105:                                              ; preds = %98
  %106 = add nuw nsw i32 %100, 12, !dbg !13824
  %107 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 3, !dbg !13825
  %108 = load i8, i8* %107, align 1, !dbg !13825, !range !3326
  %109 = icmp eq i8 %108, 0, !dbg !13825
  br i1 %109, label %118, label %110, !dbg !13826

110:                                              ; preds = %105
  %111 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 0, !dbg !13827
  %112 = load void (i8, i8*)*, void (i8, i8*)** %111, align 4, !dbg !13827
  %113 = trunc i32 %103 to i8, !dbg !13829
  %114 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 1, !dbg !13830
  %115 = load i8*, i8** %114, align 4, !dbg !13830
  tail call void %112(i8 noundef zeroext %113, i8* noundef %115) #20, !dbg !13831
  %116 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !13789
  %117 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13832
  br label %118, !dbg !13833

118:                                              ; preds = %98, %105, %110
  %119 = phi i32 [ %100, %98 ], [ %100, %105 ], [ %117, %110 ], !dbg !13832
  %120 = phi i32 [ %99, %98 ], [ %99, %105 ], [ %116, %110 ]
  %121 = add i32 %119, 1, !dbg !13832
  store i32 %121, i32* @pmu_eint_handler.index, align 4, !dbg !13787
  %122 = icmp ult i32 %121, 4, !dbg !13834
  br i1 %122, label %98, label %96, !dbg !13792, !llvm.loop !13835

123:                                              ; preds = %145
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13837
  %124 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !13839
  br label %152, !dbg !13842

125:                                              ; preds = %96, %145
  %126 = phi i32 [ %97, %96 ], [ %147, %145 ], !dbg !13814
  %127 = phi i32 [ 0, %96 ], [ %148, %145 ]
  %128 = shl nuw nsw i32 %127, 1, !dbg !13843
  %129 = lshr i32 %126, %128, !dbg !13844
  %130 = and i32 %129, 3, !dbg !13845
  %131 = icmp eq i32 %130, 0, !dbg !13846
  br i1 %131, label %145, label %132, !dbg !13848

132:                                              ; preds = %125
  %133 = add nuw nsw i32 %127, 16, !dbg !13849
  %134 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 3, !dbg !13850
  %135 = load i8, i8* %134, align 1, !dbg !13850, !range !3326
  %136 = icmp eq i8 %135, 0, !dbg !13850
  br i1 %136, label %145, label %137, !dbg !13851

137:                                              ; preds = %132
  %138 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 0, !dbg !13852
  %139 = load void (i8, i8*)*, void (i8, i8*)** %138, align 4, !dbg !13852
  %140 = trunc i32 %130 to i8, !dbg !13854
  %141 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 1, !dbg !13855
  %142 = load i8*, i8** %141, align 4, !dbg !13855
  tail call void %139(i8 noundef zeroext %140, i8* noundef %142) #20, !dbg !13856
  %143 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !13814
  %144 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13857
  br label %145, !dbg !13858

145:                                              ; preds = %125, %132, %137
  %146 = phi i32 [ %127, %125 ], [ %127, %132 ], [ %144, %137 ], !dbg !13857
  %147 = phi i32 [ %126, %125 ], [ %126, %132 ], [ %143, %137 ]
  %148 = add i32 %146, 1, !dbg !13857
  store i32 %148, i32* @pmu_eint_handler.index, align 4, !dbg !13812
  %149 = icmp ult i32 %148, 3, !dbg !13859
  br i1 %149, label %125, label %123, !dbg !13817, !llvm.loop !13860

150:                                              ; preds = %170
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13862
  %151 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !13864
  br label %176, !dbg !13867

152:                                              ; preds = %123, %170
  %153 = phi i32 [ %124, %123 ], [ %172, %170 ], !dbg !13839
  %154 = phi i32 [ 0, %123 ], [ %173, %170 ]
  %155 = shl nuw nsw i32 1, %154, !dbg !13868
  %156 = and i32 %153, %155, !dbg !13868
  %157 = icmp eq i32 %156, 0, !dbg !13868
  br i1 %157, label %170, label %158, !dbg !13870

158:                                              ; preds = %152
  %159 = add nuw nsw i32 %154, 19, !dbg !13871
  %160 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 3, !dbg !13872
  %161 = load i8, i8* %160, align 1, !dbg !13872, !range !3326
  %162 = icmp eq i8 %161, 0, !dbg !13872
  br i1 %162, label %170, label %163, !dbg !13873

163:                                              ; preds = %158
  %164 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 0, !dbg !13874
  %165 = load void (i8, i8*)*, void (i8, i8*)** %164, align 4, !dbg !13874
  %166 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 1, !dbg !13876
  %167 = load i8*, i8** %166, align 4, !dbg !13876
  tail call void %165(i8 noundef zeroext 1, i8* noundef %167) #20, !dbg !13877
  %168 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !13839
  %169 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13878
  br label %170, !dbg !13879

170:                                              ; preds = %152, %158, %163
  %171 = phi i32 [ %154, %152 ], [ %154, %158 ], [ %169, %163 ], !dbg !13878
  %172 = phi i32 [ %153, %152 ], [ %153, %158 ], [ %168, %163 ]
  %173 = add i32 %171, 1, !dbg !13878
  store i32 %173, i32* @pmu_eint_handler.index, align 4, !dbg !13837
  %174 = icmp ult i32 %173, 8, !dbg !13880
  br i1 %174, label %152, label %150, !dbg !13842, !llvm.loop !13881

175:                                              ; preds = %194
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13883
  br label %200, !dbg !13885

176:                                              ; preds = %150, %194
  %177 = phi i32 [ %151, %150 ], [ %196, %194 ], !dbg !13864
  %178 = phi i32 [ 0, %150 ], [ %197, %194 ]
  %179 = shl nuw nsw i32 1, %178, !dbg !13886
  %180 = and i32 %177, %179, !dbg !13886
  %181 = icmp eq i32 %180, 0, !dbg !13886
  br i1 %181, label %194, label %182, !dbg !13888

182:                                              ; preds = %176
  %183 = add nuw nsw i32 %178, 27, !dbg !13889
  %184 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 3, !dbg !13890
  %185 = load i8, i8* %184, align 1, !dbg !13890, !range !3326
  %186 = icmp eq i8 %185, 0, !dbg !13890
  br i1 %186, label %194, label %187, !dbg !13891

187:                                              ; preds = %182
  %188 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 0, !dbg !13892
  %189 = load void (i8, i8*)*, void (i8, i8*)** %188, align 4, !dbg !13892
  %190 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 1, !dbg !13894
  %191 = load i8*, i8** %190, align 4, !dbg !13894
  tail call void %189(i8 noundef zeroext 1, i8* noundef %191) #20, !dbg !13895
  %192 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !13864
  %193 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13896
  br label %194, !dbg !13897

194:                                              ; preds = %176, %182, %187
  %195 = phi i32 [ %178, %176 ], [ %178, %182 ], [ %193, %187 ], !dbg !13896
  %196 = phi i32 [ %177, %176 ], [ %177, %182 ], [ %192, %187 ]
  %197 = add i32 %195, 1, !dbg !13896
  store i32 %197, i32* @pmu_eint_handler.index, align 4, !dbg !13862
  %198 = icmp ult i32 %197, 5, !dbg !13898
  br i1 %198, label %176, label %175, !dbg !13867, !llvm.loop !13899

199:                                              ; preds = %200
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !13901
  br label %208, !dbg !13903

200:                                              ; preds = %175, %200
  %201 = phi i32 [ 0, %175 ], [ %206, %200 ]
  %202 = trunc i32 %201 to i16, !dbg !13904
  %203 = add nuw nsw i16 %202, 30, !dbg !13904
  %204 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %203, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #20, !dbg !13907
  %205 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13908
  %206 = add i32 %205, 1, !dbg !13908
  store i32 %206, i32* @pmu_eint_handler.index, align 4, !dbg !13883
  %207 = icmp ult i32 %206, 7, !dbg !13909
  br i1 %207, label %200, label %199, !dbg !13885, !llvm.loop !13910

208:                                              ; preds = %199, %222
  %209 = phi i32 [ 0, %199 ], [ %224, %222 ]
  %210 = trunc i32 %209 to i16, !dbg !13912
  %211 = add nuw nsw i16 %210, 30, !dbg !13912
  %212 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %211, i16 noundef zeroext 255, i16 noundef zeroext 0) #20, !dbg !13915
  %213 = zext i8 %212 to i32, !dbg !13915
  %214 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13916
  %215 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %214, !dbg !13917
  store i32 %213, i32* %215, align 4, !dbg !13918
  %216 = icmp eq i8 %212, 0, !dbg !13919
  br i1 %216, label %222, label %217, !dbg !13921

217:                                              ; preds = %208
  %218 = trunc i32 %214 to i16, !dbg !13922
  %219 = add i16 %218, 30, !dbg !13922
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %219, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #20, !dbg !13924
  %221 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !13925
  br label %222, !dbg !13926

222:                                              ; preds = %208, %217
  %223 = phi i32 [ %214, %208 ], [ %221, %217 ], !dbg !13925
  %224 = add i32 %223, 1, !dbg !13925
  store i32 %224, i32* @pmu_eint_handler.index, align 4, !dbg !13901
  %225 = icmp ult i32 %224, 7, !dbg !13927
  br i1 %225, label %208, label %226, !dbg !13903, !llvm.loop !13928

226:                                              ; preds = %222
  tail call void @restore_interrupt_mask(i32 noundef %3) #20, !dbg !13930
  %227 = tail call i32 @hal_eint_unmask(i32 noundef 30) #20, !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: optsize
declare dso_local void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local void @PMIC_VR_CONTROL(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !13933 {
  %5 = alloca [3 x i8], align 1
  %6 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !13935, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i16 %1, metadata !13936, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i16 %2, metadata !13937, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i16 %3, metadata !13938, metadata !DIExpression()), !dbg !13942
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !13943
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %7) #22, !dbg !13943
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !13939, metadata !DIExpression()), !dbg !13944
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i32 0, i32 0, !dbg !13943
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #22, !dbg !13943
  call void @llvm.dbg.declare(metadata [1 x i8]* %6, metadata !13940, metadata !DIExpression()), !dbg !13945
  %9 = trunc i16 %0 to i8, !dbg !13946
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 1, !dbg !13947
  store i8 %9, i8* %10, align 1, !dbg !13948
  %11 = lshr i16 %0, 8, !dbg !13949
  %12 = trunc i16 %11 to i8, !dbg !13950
  %13 = or i8 %12, 64, !dbg !13950
  store i8 %13, i8* %7, align 1, !dbg !13951
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !13952
  call void @llvm.dbg.value(metadata i32 %14, metadata !13941, metadata !DIExpression()), !dbg !13942
  %15 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %7, i8* noundef nonnull %8) #21, !dbg !13953
  %16 = zext i16 %1 to i32, !dbg !13954
  %17 = zext i16 %2 to i32, !dbg !13955
  %18 = shl i32 %16, %17, !dbg !13956
  %19 = load i8, i8* %8, align 1, !dbg !13957
  %20 = trunc i32 %18 to i8, !dbg !13957
  %21 = xor i8 %20, -1, !dbg !13957
  %22 = and i8 %19, %21, !dbg !13957
  store i8 %22, i8* %8, align 1, !dbg !13957
  %23 = zext i16 %3 to i32, !dbg !13958
  %24 = shl i32 %23, %17, !dbg !13959
  %25 = trunc i32 %24 to i8, !dbg !13960
  %26 = or i8 %22, %25, !dbg !13960
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 2, !dbg !13961
  store i8 %26, i8* %27, align 1, !dbg !13962
  %28 = call zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef nonnull %7) #21, !dbg !13963
  %29 = icmp eq i8 %28, 0, !dbg !13965
  call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !13966
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #22, !dbg !13967
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %7) #22, !dbg !13967
  ret i1 %29, !dbg !13967
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !13968 {
  %3 = alloca %struct.pmic_i2c_send_to_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13972, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i8* %1, metadata !13973, metadata !DIExpression()), !dbg !13985
  %4 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 0, !dbg !13986
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !13986
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_send_to_receive_config_t* %3, metadata !13974, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata i8 0, metadata !13983, metadata !DIExpression()), !dbg !13985
  %5 = load i8, i8* %0, align 1, !dbg !13988
  %6 = or i8 %5, 64, !dbg !13989
  store i8 %6, i8* %0, align 1, !dbg !13990
  store i8 107, i8* %4, align 4, !dbg !13991
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 1, !dbg !13992
  store i8* %0, i8** %7, align 4, !dbg !13993
  %8 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 2, !dbg !13994
  store i32 2, i32* %8, align 4, !dbg !13995
  %9 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 3, !dbg !13996
  store i8* %1, i8** %9, align 4, !dbg !13997
  %10 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 4, !dbg !13998
  store i32 1, i32* %10, align 4, !dbg !13999
  br label %11, !dbg !14000

11:                                               ; preds = %11, %2
  %12 = phi i8 [ 0, %2 ], [ %14, %11 ], !dbg !13985
  call void @llvm.dbg.value(metadata i8 %12, metadata !13983, metadata !DIExpression()), !dbg !13985
  %13 = call i32 @pmic_i2c_send_to_receive_polling(i32 noundef 0, %struct.pmic_i2c_send_to_receive_config_t* noundef nonnull %3) #20, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %13, metadata !13984, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13985
  %14 = add nuw nsw i8 %12, 1, !dbg !14003
  call void @llvm.dbg.value(metadata i8 %14, metadata !13983, metadata !DIExpression()), !dbg !13985
  %15 = and i32 %13, 255, !dbg !14004
  %16 = icmp ne i32 %15, 0, !dbg !14005
  %17 = icmp ult i8 %12, 60, !dbg !14006
  %18 = select i1 %16, i1 %17, i1 false, !dbg !14006
  br i1 %18, label %11, label %19, !dbg !14007, !llvm.loop !14008

19:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8 %12, metadata !13983, metadata !DIExpression()), !dbg !13985
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !14010
  ret i8 %12, !dbg !14011
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef %0) local_unnamed_addr #0 !dbg !14012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14016, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata i8 0, metadata !14017, metadata !DIExpression()), !dbg !14019
  %2 = load i8, i8* %0, align 1, !dbg !14020
  %3 = or i8 %2, 64, !dbg !14021
  store i8 %3, i8* %0, align 1, !dbg !14022
  br label %4, !dbg !14023

4:                                                ; preds = %4, %1
  %5 = phi i8 [ 0, %1 ], [ %7, %4 ], !dbg !14019
  call void @llvm.dbg.value(metadata i8 %5, metadata !14017, metadata !DIExpression()), !dbg !14019
  %6 = tail call i32 @pmic_i2c_send_polling(i32 noundef 0, i8 noundef zeroext 107, i8* noundef nonnull %0, i32 noundef 3) #20, !dbg !14024
  call void @llvm.dbg.value(metadata i32 %6, metadata !14018, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14019
  %7 = add nuw nsw i8 %5, 1, !dbg !14026
  call void @llvm.dbg.value(metadata i8 %7, metadata !14017, metadata !DIExpression()), !dbg !14019
  %8 = and i32 %6, 255, !dbg !14027
  %9 = icmp ne i32 %8, 0, !dbg !14028
  %10 = icmp ult i8 %5, 60, !dbg !14029
  %11 = select i1 %9, i1 %10, i1 false, !dbg !14029
  br i1 %11, label %4, label %12, !dbg !14030, !llvm.loop !14031

12:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 %5, metadata !14017, metadata !DIExpression()), !dbg !14019
  ret i8 %5, !dbg !14033
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !14034 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !14036, metadata !DIExpression()), !dbg !14043
  call void @llvm.dbg.value(metadata i16 %1, metadata !14037, metadata !DIExpression()), !dbg !14043
  call void @llvm.dbg.value(metadata i16 %2, metadata !14038, metadata !DIExpression()), !dbg !14043
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !14044
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #22, !dbg !14044
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !14039, metadata !DIExpression()), !dbg !14045
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0, !dbg !14044
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22, !dbg !14044
  call void @llvm.dbg.declare(metadata [1 x i8]* %5, metadata !14041, metadata !DIExpression()), !dbg !14046
  %8 = trunc i16 %0 to i8, !dbg !14047
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 1, !dbg !14048
  store i8 %8, i8* %9, align 1, !dbg !14049
  %10 = lshr i16 %0, 8, !dbg !14050
  %11 = trunc i16 %10 to i8, !dbg !14051
  %12 = or i8 %11, 64, !dbg !14051
  store i8 %12, i8* %6, align 1, !dbg !14052
  %13 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %13, metadata !14042, metadata !DIExpression()), !dbg !14043
  %14 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %6, i8* noundef nonnull %7) #21, !dbg !14054
  call void @restore_interrupt_mask(i32 noundef %13) #20, !dbg !14055
  %15 = load i8, i8* %7, align 1, !dbg !14056
  %16 = zext i8 %15 to i32, !dbg !14056
  %17 = zext i16 %2 to i32, !dbg !14057
  %18 = lshr i32 %16, %17, !dbg !14058
  %19 = zext i16 %1 to i32, !dbg !14059
  %20 = and i32 %18, %19, !dbg !14060
  %21 = trunc i32 %20 to i8, !dbg !14061
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22, !dbg !14062
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #22, !dbg !14062
  ret i8 %21, !dbg !14063
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_register_callback(i32 noundef %0, i32 noundef %1, void (i8, i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !14064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14072, metadata !DIExpression()), !dbg !14078
  call void @llvm.dbg.value(metadata i32 %1, metadata !14073, metadata !DIExpression()), !dbg !14078
  call void @llvm.dbg.value(metadata void (i8, i8*)* %2, metadata !14074, metadata !DIExpression()), !dbg !14078
  call void @llvm.dbg.value(metadata i8* %3, metadata !14075, metadata !DIExpression()), !dbg !14078
  call void @llvm.dbg.value(metadata i32 -1, metadata !14076, metadata !DIExpression()), !dbg !14078
  %5 = icmp ugt i32 %0, 31, !dbg !14079
  %6 = icmp eq void (i8, i8*)* %2, null
  %7 = or i1 %5, %6, !dbg !14081
  br i1 %7, label %16, label %8, !dbg !14081

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %9, metadata !14077, metadata !DIExpression()), !dbg !14078
  %10 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 0, !dbg !14083
  store void (i8, i8*)* %2, void (i8, i8*)** %10, align 4, !dbg !14084
  %11 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 1, !dbg !14085
  store i8* %3, i8** %11, align 4, !dbg !14086
  %12 = trunc i32 %1 to i8, !dbg !14087
  %13 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 2, !dbg !14088
  store i8 %12, i8* %13, align 4, !dbg !14089
  %14 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !14090
  store i8 1, i8* %14, align 1, !dbg !14091
  %15 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 1) #21, !dbg !14092
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !14093
  call void @llvm.dbg.value(metadata i32 0, metadata !14076, metadata !DIExpression()), !dbg !14078
  br label %16, !dbg !14094

16:                                               ; preds = %4, %8
  %17 = phi i32 [ 0, %8 ], [ -2, %4 ], !dbg !14078
  ret i32 %17, !dbg !14095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !14096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14100, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.value(metadata i32 %1, metadata !14101, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.value(metadata i8 %2, metadata !14102, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.value(metadata i32 %0, metadata !14103, metadata !DIExpression()), !dbg !14104
  %4 = and i32 %0, 224, !dbg !14105
  %5 = icmp eq i32 %4, 0, !dbg !14107
  br i1 %5, label %6, label %275, !dbg !14108

6:                                                ; preds = %3
  %7 = trunc i32 %0 to i8, !dbg !14109
  switch i8 %7, label %275 [
    i8 0, label %8
    i8 1, label %20
    i8 2, label %32
    i8 3, label %44
    i8 4, label %56
    i8 5, label %68
    i8 6, label %80
    i8 7, label %92
    i8 8, label %104
    i8 9, label %116
    i8 10, label %128
    i8 11, label %140
    i8 12, label %152
    i8 13, label %164
    i8 14, label %176
    i8 15, label %188
    i8 16, label %200
    i8 17, label %212
    i8 18, label %224
    i8 19, label %236
    i8 20, label %239
    i8 21, label %242
    i8 22, label %245
    i8 23, label %248
    i8 24, label %251
    i8 25, label %254
    i8 26, label %257
    i8 27, label %260
    i8 28, label %263
    i8 29, label %266
    i8 30, label %269
    i8 31, label %272
  ], !dbg !14109

8:                                                ; preds = %6
  %9 = and i32 %1, 1, !dbg !14110
  %10 = icmp eq i32 %9, 0, !dbg !14113
  br i1 %10, label %14, label %11, !dbg !14114

11:                                               ; preds = %8
  %12 = zext i8 %2 to i16, !dbg !14115
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %12) #20, !dbg !14117
  br label %14, !dbg !14118

14:                                               ; preds = %11, %8
  %15 = and i32 %1, 2, !dbg !14119
  %16 = icmp eq i32 %15, 0, !dbg !14121
  br i1 %16, label %275, label %17, !dbg !14122

17:                                               ; preds = %14
  %18 = zext i8 %2 to i16, !dbg !14123
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %18) #20, !dbg !14125
  br label %275, !dbg !14126

20:                                               ; preds = %6
  %21 = and i32 %1, 1, !dbg !14127
  %22 = icmp eq i32 %21, 0, !dbg !14129
  br i1 %22, label %26, label %23, !dbg !14130

23:                                               ; preds = %20
  %24 = zext i8 %2 to i16, !dbg !14131
  %25 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %24) #20, !dbg !14133
  br label %26, !dbg !14134

26:                                               ; preds = %23, %20
  %27 = and i32 %1, 2, !dbg !14135
  %28 = icmp eq i32 %27, 0, !dbg !14137
  br i1 %28, label %275, label %29, !dbg !14138

29:                                               ; preds = %26
  %30 = zext i8 %2 to i16, !dbg !14139
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %30) #20, !dbg !14141
  br label %275, !dbg !14142

32:                                               ; preds = %6
  %33 = and i32 %1, 1, !dbg !14143
  %34 = icmp eq i32 %33, 0, !dbg !14145
  br i1 %34, label %38, label %35, !dbg !14146

35:                                               ; preds = %32
  %36 = zext i8 %2 to i16, !dbg !14147
  %37 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %36) #20, !dbg !14149
  br label %38, !dbg !14150

38:                                               ; preds = %35, %32
  %39 = and i32 %1, 2, !dbg !14151
  %40 = icmp eq i32 %39, 0, !dbg !14153
  br i1 %40, label %275, label %41, !dbg !14154

41:                                               ; preds = %38
  %42 = zext i8 %2 to i16, !dbg !14155
  %43 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %42) #20, !dbg !14157
  br label %275, !dbg !14158

44:                                               ; preds = %6
  %45 = and i32 %1, 1, !dbg !14159
  %46 = icmp eq i32 %45, 0, !dbg !14161
  br i1 %46, label %50, label %47, !dbg !14162

47:                                               ; preds = %44
  %48 = zext i8 %2 to i16, !dbg !14163
  %49 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %48) #20, !dbg !14165
  br label %50, !dbg !14166

50:                                               ; preds = %47, %44
  %51 = and i32 %1, 2, !dbg !14167
  %52 = icmp eq i32 %51, 0, !dbg !14169
  br i1 %52, label %275, label %53, !dbg !14170

53:                                               ; preds = %50
  %54 = zext i8 %2 to i16, !dbg !14171
  %55 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %54) #20, !dbg !14173
  br label %275, !dbg !14174

56:                                               ; preds = %6
  %57 = and i32 %1, 1, !dbg !14175
  %58 = icmp eq i32 %57, 0, !dbg !14177
  br i1 %58, label %62, label %59, !dbg !14178

59:                                               ; preds = %56
  %60 = zext i8 %2 to i16, !dbg !14179
  %61 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %60) #20, !dbg !14181
  br label %62, !dbg !14182

62:                                               ; preds = %59, %56
  %63 = and i32 %1, 2, !dbg !14183
  %64 = icmp eq i32 %63, 0, !dbg !14185
  br i1 %64, label %275, label %65, !dbg !14186

65:                                               ; preds = %62
  %66 = zext i8 %2 to i16, !dbg !14187
  %67 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %66) #20, !dbg !14189
  br label %275, !dbg !14190

68:                                               ; preds = %6
  %69 = and i32 %1, 1, !dbg !14191
  %70 = icmp eq i32 %69, 0, !dbg !14193
  br i1 %70, label %74, label %71, !dbg !14194

71:                                               ; preds = %68
  %72 = zext i8 %2 to i16, !dbg !14195
  %73 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %72) #20, !dbg !14197
  br label %74, !dbg !14198

74:                                               ; preds = %71, %68
  %75 = and i32 %1, 2, !dbg !14199
  %76 = icmp eq i32 %75, 0, !dbg !14201
  br i1 %76, label %275, label %77, !dbg !14202

77:                                               ; preds = %74
  %78 = zext i8 %2 to i16, !dbg !14203
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %78) #20, !dbg !14205
  br label %275, !dbg !14206

80:                                               ; preds = %6
  %81 = and i32 %1, 1, !dbg !14207
  %82 = icmp eq i32 %81, 0, !dbg !14209
  br i1 %82, label %86, label %83, !dbg !14210

83:                                               ; preds = %80
  %84 = zext i8 %2 to i16, !dbg !14211
  %85 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %84) #20, !dbg !14213
  br label %86, !dbg !14214

86:                                               ; preds = %83, %80
  %87 = and i32 %1, 2, !dbg !14215
  %88 = icmp eq i32 %87, 0, !dbg !14217
  br i1 %88, label %275, label %89, !dbg !14218

89:                                               ; preds = %86
  %90 = zext i8 %2 to i16, !dbg !14219
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %90) #20, !dbg !14221
  br label %275, !dbg !14222

92:                                               ; preds = %6
  %93 = and i32 %1, 1, !dbg !14223
  %94 = icmp eq i32 %93, 0, !dbg !14225
  br i1 %94, label %98, label %95, !dbg !14226

95:                                               ; preds = %92
  %96 = zext i8 %2 to i16, !dbg !14227
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %96) #20, !dbg !14229
  br label %98, !dbg !14230

98:                                               ; preds = %95, %92
  %99 = and i32 %1, 2, !dbg !14231
  %100 = icmp eq i32 %99, 0, !dbg !14233
  br i1 %100, label %275, label %101, !dbg !14234

101:                                              ; preds = %98
  %102 = zext i8 %2 to i16, !dbg !14235
  %103 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %102) #20, !dbg !14237
  br label %275, !dbg !14238

104:                                              ; preds = %6
  %105 = and i32 %1, 1, !dbg !14239
  %106 = icmp eq i32 %105, 0, !dbg !14241
  br i1 %106, label %110, label %107, !dbg !14242

107:                                              ; preds = %104
  %108 = zext i8 %2 to i16, !dbg !14243
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %108) #20, !dbg !14245
  br label %110, !dbg !14246

110:                                              ; preds = %107, %104
  %111 = and i32 %1, 2, !dbg !14247
  %112 = icmp eq i32 %111, 0, !dbg !14249
  br i1 %112, label %275, label %113, !dbg !14250

113:                                              ; preds = %110
  %114 = zext i8 %2 to i16, !dbg !14251
  %115 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %114) #20, !dbg !14253
  br label %275, !dbg !14254

116:                                              ; preds = %6
  %117 = and i32 %1, 1, !dbg !14255
  %118 = icmp eq i32 %117, 0, !dbg !14257
  br i1 %118, label %122, label %119, !dbg !14258

119:                                              ; preds = %116
  %120 = zext i8 %2 to i16, !dbg !14259
  %121 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %120) #20, !dbg !14261
  br label %122, !dbg !14262

122:                                              ; preds = %119, %116
  %123 = and i32 %1, 2, !dbg !14263
  %124 = icmp eq i32 %123, 0, !dbg !14265
  br i1 %124, label %275, label %125, !dbg !14266

125:                                              ; preds = %122
  %126 = zext i8 %2 to i16, !dbg !14267
  %127 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %126) #20, !dbg !14269
  br label %275, !dbg !14270

128:                                              ; preds = %6
  %129 = and i32 %1, 1, !dbg !14271
  %130 = icmp eq i32 %129, 0, !dbg !14273
  br i1 %130, label %134, label %131, !dbg !14274

131:                                              ; preds = %128
  %132 = zext i8 %2 to i16, !dbg !14275
  %133 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %132) #20, !dbg !14277
  br label %134, !dbg !14278

134:                                              ; preds = %131, %128
  %135 = and i32 %1, 2, !dbg !14279
  %136 = icmp eq i32 %135, 0, !dbg !14281
  br i1 %136, label %275, label %137, !dbg !14282

137:                                              ; preds = %134
  %138 = zext i8 %2 to i16, !dbg !14283
  %139 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %138) #20, !dbg !14285
  br label %275, !dbg !14286

140:                                              ; preds = %6
  %141 = and i32 %1, 1, !dbg !14287
  %142 = icmp eq i32 %141, 0, !dbg !14289
  br i1 %142, label %146, label %143, !dbg !14290

143:                                              ; preds = %140
  %144 = zext i8 %2 to i16, !dbg !14291
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %144) #20, !dbg !14293
  br label %146, !dbg !14294

146:                                              ; preds = %143, %140
  %147 = and i32 %1, 2, !dbg !14295
  %148 = icmp eq i32 %147, 0, !dbg !14297
  br i1 %148, label %275, label %149, !dbg !14298

149:                                              ; preds = %146
  %150 = zext i8 %2 to i16, !dbg !14299
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %150) #20, !dbg !14301
  br label %275, !dbg !14302

152:                                              ; preds = %6
  %153 = and i32 %1, 1, !dbg !14303
  %154 = icmp eq i32 %153, 0, !dbg !14305
  br i1 %154, label %158, label %155, !dbg !14306

155:                                              ; preds = %152
  %156 = zext i8 %2 to i16, !dbg !14307
  %157 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %156) #20, !dbg !14309
  br label %158, !dbg !14310

158:                                              ; preds = %155, %152
  %159 = and i32 %1, 2, !dbg !14311
  %160 = icmp eq i32 %159, 0, !dbg !14313
  br i1 %160, label %275, label %161, !dbg !14314

161:                                              ; preds = %158
  %162 = zext i8 %2 to i16, !dbg !14315
  %163 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %162) #20, !dbg !14317
  br label %275, !dbg !14318

164:                                              ; preds = %6
  %165 = and i32 %1, 1, !dbg !14319
  %166 = icmp eq i32 %165, 0, !dbg !14321
  br i1 %166, label %170, label %167, !dbg !14322

167:                                              ; preds = %164
  %168 = zext i8 %2 to i16, !dbg !14323
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %168) #20, !dbg !14325
  br label %170, !dbg !14326

170:                                              ; preds = %167, %164
  %171 = and i32 %1, 2, !dbg !14327
  %172 = icmp eq i32 %171, 0, !dbg !14329
  br i1 %172, label %275, label %173, !dbg !14330

173:                                              ; preds = %170
  %174 = zext i8 %2 to i16, !dbg !14331
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %174) #20, !dbg !14333
  br label %275, !dbg !14334

176:                                              ; preds = %6
  %177 = and i32 %1, 1, !dbg !14335
  %178 = icmp eq i32 %177, 0, !dbg !14337
  br i1 %178, label %182, label %179, !dbg !14338

179:                                              ; preds = %176
  %180 = zext i8 %2 to i16, !dbg !14339
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %180) #20, !dbg !14341
  br label %182, !dbg !14342

182:                                              ; preds = %179, %176
  %183 = and i32 %1, 2, !dbg !14343
  %184 = icmp eq i32 %183, 0, !dbg !14345
  br i1 %184, label %275, label %185, !dbg !14346

185:                                              ; preds = %182
  %186 = zext i8 %2 to i16, !dbg !14347
  %187 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %186) #20, !dbg !14349
  br label %275, !dbg !14350

188:                                              ; preds = %6
  %189 = and i32 %1, 1, !dbg !14351
  %190 = icmp eq i32 %189, 0, !dbg !14353
  br i1 %190, label %194, label %191, !dbg !14354

191:                                              ; preds = %188
  %192 = zext i8 %2 to i16, !dbg !14355
  %193 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %192) #20, !dbg !14357
  br label %194, !dbg !14358

194:                                              ; preds = %191, %188
  %195 = and i32 %1, 2, !dbg !14359
  %196 = icmp eq i32 %195, 0, !dbg !14361
  br i1 %196, label %275, label %197, !dbg !14362

197:                                              ; preds = %194
  %198 = zext i8 %2 to i16, !dbg !14363
  %199 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %198) #20, !dbg !14365
  br label %275, !dbg !14366

200:                                              ; preds = %6
  %201 = and i32 %1, 1, !dbg !14367
  %202 = icmp eq i32 %201, 0, !dbg !14369
  br i1 %202, label %206, label %203, !dbg !14370

203:                                              ; preds = %200
  %204 = zext i8 %2 to i16, !dbg !14371
  %205 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %204) #20, !dbg !14373
  br label %206, !dbg !14374

206:                                              ; preds = %203, %200
  %207 = and i32 %1, 2, !dbg !14375
  %208 = icmp eq i32 %207, 0, !dbg !14377
  br i1 %208, label %275, label %209, !dbg !14378

209:                                              ; preds = %206
  %210 = zext i8 %2 to i16, !dbg !14379
  %211 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %210) #20, !dbg !14381
  br label %275, !dbg !14382

212:                                              ; preds = %6
  %213 = and i32 %1, 1, !dbg !14383
  %214 = icmp eq i32 %213, 0, !dbg !14385
  br i1 %214, label %218, label %215, !dbg !14386

215:                                              ; preds = %212
  %216 = zext i8 %2 to i16, !dbg !14387
  %217 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %216) #20, !dbg !14389
  br label %218, !dbg !14390

218:                                              ; preds = %215, %212
  %219 = and i32 %1, 2, !dbg !14391
  %220 = icmp eq i32 %219, 0, !dbg !14393
  br i1 %220, label %275, label %221, !dbg !14394

221:                                              ; preds = %218
  %222 = zext i8 %2 to i16, !dbg !14395
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %222) #20, !dbg !14397
  br label %275, !dbg !14398

224:                                              ; preds = %6
  %225 = and i32 %1, 1, !dbg !14399
  %226 = icmp eq i32 %225, 0, !dbg !14401
  br i1 %226, label %230, label %227, !dbg !14402

227:                                              ; preds = %224
  %228 = zext i8 %2 to i16, !dbg !14403
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %228) #20, !dbg !14405
  br label %230, !dbg !14406

230:                                              ; preds = %227, %224
  %231 = and i32 %1, 2, !dbg !14407
  %232 = icmp eq i32 %231, 0, !dbg !14409
  br i1 %232, label %275, label %233, !dbg !14410

233:                                              ; preds = %230
  %234 = zext i8 %2 to i16, !dbg !14411
  %235 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %234) #20, !dbg !14413
  br label %275, !dbg !14414

236:                                              ; preds = %6
  %237 = zext i8 %2 to i16, !dbg !14415
  %238 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %237) #20, !dbg !14416
  br label %275, !dbg !14417

239:                                              ; preds = %6
  %240 = zext i8 %2 to i16, !dbg !14418
  %241 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %240) #20, !dbg !14419
  br label %275, !dbg !14420

242:                                              ; preds = %6
  %243 = zext i8 %2 to i16, !dbg !14421
  %244 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %243) #20, !dbg !14422
  br label %275, !dbg !14423

245:                                              ; preds = %6
  %246 = zext i8 %2 to i16, !dbg !14424
  %247 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %246) #20, !dbg !14425
  br label %275, !dbg !14426

248:                                              ; preds = %6
  %249 = zext i8 %2 to i16, !dbg !14427
  %250 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %249) #20, !dbg !14428
  br label %275, !dbg !14429

251:                                              ; preds = %6
  %252 = zext i8 %2 to i16, !dbg !14430
  %253 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %252) #20, !dbg !14431
  br label %275, !dbg !14432

254:                                              ; preds = %6
  %255 = zext i8 %2 to i16, !dbg !14433
  %256 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %255) #20, !dbg !14434
  br label %275, !dbg !14435

257:                                              ; preds = %6
  %258 = zext i8 %2 to i16, !dbg !14436
  %259 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %258) #20, !dbg !14437
  br label %275, !dbg !14438

260:                                              ; preds = %6
  %261 = zext i8 %2 to i16, !dbg !14439
  %262 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %261) #20, !dbg !14440
  br label %275, !dbg !14441

263:                                              ; preds = %6
  %264 = zext i8 %2 to i16, !dbg !14442
  %265 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %264) #20, !dbg !14443
  br label %275, !dbg !14444

266:                                              ; preds = %6
  %267 = zext i8 %2 to i16, !dbg !14445
  %268 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %267) #20, !dbg !14446
  br label %275, !dbg !14447

269:                                              ; preds = %6
  %270 = zext i8 %2 to i16, !dbg !14448
  %271 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %270) #20, !dbg !14449
  br label %275, !dbg !14450

272:                                              ; preds = %6
  %273 = zext i8 %2 to i16, !dbg !14451
  %274 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %273) #20, !dbg !14452
  br label %275, !dbg !14453

275:                                              ; preds = %236, %239, %242, %245, %248, %251, %254, %257, %260, %263, %266, %269, %272, %6, %17, %14, %29, %26, %41, %38, %53, %50, %65, %62, %77, %74, %89, %86, %101, %98, %113, %110, %125, %122, %137, %134, %149, %146, %161, %158, %173, %170, %185, %182, %197, %194, %209, %206, %221, %218, %233, %230, %3
  %276 = phi i32 [ -1, %3 ], [ 0, %230 ], [ 0, %233 ], [ 0, %218 ], [ 0, %221 ], [ 0, %206 ], [ 0, %209 ], [ 0, %194 ], [ 0, %197 ], [ 0, %182 ], [ 0, %185 ], [ 0, %170 ], [ 0, %173 ], [ 0, %158 ], [ 0, %161 ], [ 0, %146 ], [ 0, %149 ], [ 0, %134 ], [ 0, %137 ], [ 0, %122 ], [ 0, %125 ], [ 0, %110 ], [ 0, %113 ], [ 0, %98 ], [ 0, %101 ], [ 0, %86 ], [ 0, %89 ], [ 0, %74 ], [ 0, %77 ], [ 0, %62 ], [ 0, %65 ], [ 0, %50 ], [ 0, %53 ], [ 0, %38 ], [ 0, %41 ], [ 0, %26 ], [ 0, %29 ], [ 0, %14 ], [ 0, %17 ], [ 0, %6 ], [ 0, %272 ], [ 0, %269 ], [ 0, %266 ], [ 0, %263 ], [ 0, %260 ], [ 0, %257 ], [ 0, %254 ], [ 0, %251 ], [ 0, %248 ], [ 0, %245 ], [ 0, %242 ], [ 0, %239 ], [ 0, %236 ], !dbg !14104
  ret i32 %276, !dbg !14454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_disable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !14455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14459, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 %1, metadata !14460, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 -1, metadata !14461, metadata !DIExpression()), !dbg !14463
  %3 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %3, metadata !14462, metadata !DIExpression()), !dbg !14463
  %4 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 0) #21, !dbg !14465
  %5 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !14466
  store i8 1, i8* %5, align 1, !dbg !14467
  tail call void @restore_interrupt_mask(i32 noundef %3) #20, !dbg !14468
  call void @llvm.dbg.value(metadata i32 0, metadata !14461, metadata !DIExpression()), !dbg !14463
  ret i32 0, !dbg !14469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init() local_unnamed_addr #0 !dbg !14470 {
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.pmu_init, i32 0, i32 0), i32 noundef 98, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.176, i32 0, i32 0)) #20, !dbg !14471
  tail call void @pmu_init_mt6385() #20, !dbg !14472
  ret void, !dbg !14473
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !14474 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14476, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i16 %1, metadata !14477, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i16 %2, metadata !14478, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i16 %3, metadata !14479, metadata !DIExpression()), !dbg !14480
  %5 = tail call zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) #20, !dbg !14481
  ret i1 %5, !dbg !14482
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !14483 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14485, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i16 %1, metadata !14486, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i16 %2, metadata !14487, metadata !DIExpression()), !dbg !14488
  %4 = tail call zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #20, !dbg !14489
  ret i8 %4, !dbg !14490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos() local_unnamed_addr #0 !dbg !14491 {
  tail call void @pmu_control_mtcmos_mt6385() #20, !dbg !14492
  ret void, !dbg !14493
}

; Function Attrs: optsize
declare dso_local void @pmu_control_mtcmos_mt6385() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage() local_unnamed_addr #0 !dbg !14494 {
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage_mt6385() #20, !dbg !14495
  ret i8 %1, !dbg !14496
}

; Function Attrs: optsize
declare dso_local zeroext i8 @pmu_get_vcore_voltage_mt6385() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !14497 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14499, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8 %1, metadata !14500, metadata !DIExpression()), !dbg !14501
  %3 = tail call zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) #20, !dbg !14502
  ret i8 %3, !dbg !14503
}

; Function Attrs: optsize
declare dso_local zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck() local_unnamed_addr #0 !dbg !14504 {
  tail call void @pmu_set_vcore_s1_buck_mt6385() #20, !dbg !14505
  ret void, !dbg !14506
}

; Function Attrs: optsize
declare dso_local void @pmu_set_vcore_s1_buck_mt6385() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_driver_power(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !14507 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14509, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i8 %1, metadata !14510, metadata !DIExpression()), !dbg !14511
  tail call fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) #21, !dbg !14512
  ret void, !dbg !14513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !14514 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14516, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i8 %1, metadata !14517, metadata !DIExpression()), !dbg !14518
  switch i8 %0, label %14 [
    i8 1, label %3
    i8 2, label %4
    i8 3, label %5
    i8 4, label %7
    i8 5, label %9
    i8 7, label %11
    i8 8, label %12
    i8 9, label %13
  ], !dbg !14519

3:                                                ; preds = %2
  tail call void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %1) #20, !dbg !14520
  br label %15, !dbg !14522

4:                                                ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #20, !dbg !14523
  br label %15, !dbg !14524

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !14525
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %6) #20, !dbg !14526
  br label %15, !dbg !14527

7:                                                ; preds = %2
  %8 = zext i8 %1 to i32, !dbg !14528
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef %8) #20, !dbg !14529
  br label %15, !dbg !14530

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !14531
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %10) #20, !dbg !14532
  br label %15, !dbg !14533

11:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #20, !dbg !14534
  br label %15, !dbg !14535

12:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #20, !dbg !14536
  br label %15, !dbg !14537

13:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #20, !dbg !14538
  br label %15, !dbg !14539

14:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.internal_pmu_ctrl_power, i32 0, i32 0), i32 noundef 225, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1.181, i32 0, i32 0)) #20, !dbg !14540
  br label %15, !dbg !14541

15:                                               ; preds = %14, %13, %12, %11, %9, %7, %5, %4, %3
  ret void, !dbg !14542
}

; Function Attrs: optsize
declare dso_local void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_audio_lock_voltage() local_unnamed_addr #0 !dbg !14543 {
  tail call fastcc void @internal_pmu_audio_lock_voltage() #21, !dbg !14544
  ret void, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_audio_lock_voltage() unnamed_addr #0 !dbg !14546 {
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef 4) #20, !dbg !14547
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 4, i32 noundef 2) #20, !dbg !14548
  ret void, !dbg !14549
}

; Function Attrs: optsize
declare dso_local void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @pmu_audio_unlock_voltage() local_unnamed_addr #10 !dbg !14550 {
  ret void, !dbg !14551
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status() local_unnamed_addr #0 !dbg !14552 {
  %1 = tail call zeroext i8 @pmu_get_usb_input_status_mt6385() #20, !dbg !14553
  ret i8 %1, !dbg !14554
}

; Function Attrs: optsize
declare dso_local zeroext i8 @pmu_get_usb_input_status_mt6385() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off() local_unnamed_addr #0 !dbg !14555 {
  tail call void @pmu_enter_power_off_mt6385() #20, !dbg !14556
  ret void, !dbg !14557
}

; Function Attrs: optsize
declare dso_local void @pmu_enter_power_off_mt6385() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset() local_unnamed_addr #0 !dbg !14558 {
  tail call void @pmu_reset_mt6385() #20, !dbg !14559
  ret void, !dbg !14560
}

; Function Attrs: optsize
declare dso_local void @pmu_reset_mt6385() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @pmu_get_type() local_unnamed_addr #10 !dbg !14561 {
  ret i32 1, !dbg !14564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @null_pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #10 !dbg !14565 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i16 %1, metadata !14568, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i16 %2, metadata !14569, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i16 %3, metadata !14570, metadata !DIExpression()), !dbg !14571
  ret i1 true, !dbg !14572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @null_pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #10 !dbg !14573 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14575, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata i16 %1, metadata !14576, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata i16 %2, metadata !14577, metadata !DIExpression()), !dbg !14578
  ret i8 0, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @null_function() local_unnamed_addr #10 !dbg !14580 {
  ret void, !dbg !14581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !14582 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14586, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.value(metadata i32 %1, metadata !14587, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.value(metadata i8* %2, metadata !14588, metadata !DIExpression()), !dbg !14599
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !14600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !14600
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !14589, metadata !DIExpression()), !dbg !14601
  %7 = bitcast i32* %5 to i8*, !dbg !14602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !14602
  call void @llvm.dbg.value(metadata i32* %5, metadata !14598, metadata !DIExpression(DW_OP_deref)), !dbg !14599
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !14603
  call void @llvm.va_start(i8* nonnull %6), !dbg !14604
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !14605
  %10 = load i32, i32* %9, align 4, !dbg !14605
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14605
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !14605
  call void @llvm.va_end(i8* nonnull %6), !dbg !14606
  %13 = load i32, i32* %5, align 4, !dbg !14607
  call void @llvm.dbg.value(metadata i32 %13, metadata !14598, metadata !DIExpression()), !dbg !14599
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !14608
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !14609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !14609
  ret void, !dbg !14609
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !14610 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14612, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 %1, metadata !14613, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i8* %2, metadata !14614, metadata !DIExpression()), !dbg !14617
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !14618
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !14618
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !14615, metadata !DIExpression()), !dbg !14619
  %7 = bitcast i32* %5 to i8*, !dbg !14620
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !14620
  call void @llvm.dbg.value(metadata i32* %5, metadata !14616, metadata !DIExpression(DW_OP_deref)), !dbg !14617
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !14621
  call void @llvm.va_start(i8* nonnull %6), !dbg !14622
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !14623
  %10 = load i32, i32* %9, align 4, !dbg !14623
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14623
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !14623
  call void @llvm.va_end(i8* nonnull %6), !dbg !14624
  %13 = load i32, i32* %5, align 4, !dbg !14625
  call void @llvm.dbg.value(metadata i32 %13, metadata !14616, metadata !DIExpression()), !dbg !14617
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !14626
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !14627
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !14627
  ret void, !dbg !14627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !14628 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14630, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata i32 %1, metadata !14631, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata i8* %2, metadata !14632, metadata !DIExpression()), !dbg !14635
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !14636
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !14636
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !14633, metadata !DIExpression()), !dbg !14637
  %7 = bitcast i32* %5 to i8*, !dbg !14638
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !14638
  call void @llvm.dbg.value(metadata i32* %5, metadata !14634, metadata !DIExpression(DW_OP_deref)), !dbg !14635
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !14639
  call void @llvm.va_start(i8* nonnull %6), !dbg !14640
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !14641
  %10 = load i32, i32* %9, align 4, !dbg !14641
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14641
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !14641
  call void @llvm.va_end(i8* nonnull %6), !dbg !14642
  %13 = load i32, i32* %5, align 4, !dbg !14643
  call void @llvm.dbg.value(metadata i32 %13, metadata !14634, metadata !DIExpression()), !dbg !14635
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !14644
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !14645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !14645
  ret void, !dbg !14645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !14646 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14652, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 %1, metadata !14653, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i8* %2, metadata !14654, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i8* %3, metadata !14655, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 %4, metadata !14656, metadata !DIExpression()), !dbg !14657
  ret void, !dbg !14658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !14659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14661, metadata !DIExpression()), !dbg !14663
  %2 = shl i32 %0, 20, !dbg !14664
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14665
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !14666
  store volatile i32 %2, i32* %4, align 4, !dbg !14667
  %5 = load volatile i32, i32* %4, align 4, !dbg !14668
  %6 = or i32 %5, 65536, !dbg !14669
  store volatile i32 %6, i32* %4, align 4, !dbg !14670
  br label %7, !dbg !14671

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !14672
  %9 = and i32 %8, 1, !dbg !14673
  %10 = icmp eq i32 %9, 0, !dbg !14674
  br i1 %10, label %7, label %11, !dbg !14671, !llvm.loop !14675

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !14677
  %13 = lshr i32 %12, 8, !dbg !14678
  %14 = and i32 %13, 255, !dbg !14678
  call void @llvm.dbg.value(metadata i32 %14, metadata !14662, metadata !DIExpression()), !dbg !14663
  ret i32 %14, !dbg !14679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !14680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14682, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i32 %1, metadata !14683, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i32 %1, metadata !14683, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !14684
  %3 = shl i32 %1, 24, !dbg !14685
  %4 = shl i32 %0, 20, !dbg !14686
  %5 = or i32 %4, %3, !dbg !14687
  %6 = or i32 %5, 131072, !dbg !14687
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14688
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !14689
  store volatile i32 %6, i32* %8, align 4, !dbg !14690
  %9 = load volatile i32, i32* %8, align 4, !dbg !14691
  %10 = or i32 %9, 65536, !dbg !14692
  store volatile i32 %10, i32* %8, align 4, !dbg !14693
  br label %11, !dbg !14694

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !14695
  %13 = and i32 %12, 1, !dbg !14696
  %14 = icmp eq i32 %13, 0, !dbg !14697
  br i1 %14, label %11, label %15, !dbg !14694, !llvm.loop !14698

15:                                               ; preds = %11
  ret void, !dbg !14700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !14701 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !14702
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !14703
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !14704
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !14705
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !14706
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !14707
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !14708
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !14709
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !14710
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !14711
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !14712
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !14713
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !14714
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !14715
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !14716
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !14717
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !14718
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !14719
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !14720
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !14721
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !14722
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !14723
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !14724
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !14725
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !14726
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !14727
  ret void, !dbg !14728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !14729 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14732
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !14733
  store volatile i32 21553, i32* %2, align 4, !dbg !14734
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !14735
  store volatile i32 20489, i32* %3, align 4, !dbg !14736
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !14737
  store volatile i32 20550, i32* %4, align 4, !dbg !14738
  ret i32 0, !dbg !14739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !14740 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !14744, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata i32 0, metadata !14742, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.value(metadata i32 16384, metadata !14743, metadata !DIExpression()), !dbg !14749
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14750
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !14751
  store volatile i32 0, i32* %2, align 4, !dbg !14752
  call void @llvm.dbg.value(metadata i32 0, metadata !14746, metadata !DIExpression()), !dbg !14749
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !14746, metadata !DIExpression()), !dbg !14749
  br label %5, !dbg !14753

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !14746, metadata !DIExpression()), !dbg !14749
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !14745, metadata !DIExpression()), !dbg !14749
  br label %8, !dbg !14755

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14745, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.value(metadata i32 0, metadata !14747, metadata !DIExpression()), !dbg !14749
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !14759

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()), !dbg !14749
  %12 = icmp eq i32 %30, 2, !dbg !14763
  br i1 %12, label %31, label %13, !dbg !14759, !llvm.loop !14765

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !14747, metadata !DIExpression()), !dbg !14749
  store volatile i32 0, i32* %2, align 4, !dbg !14767
  store volatile i32 63, i32* %3, align 4, !dbg !14769
  %15 = load i32, i32* %10, align 4, !dbg !14770
  %16 = shl i32 %15, 16, !dbg !14771
  %17 = shl nuw nsw i32 %14, 13, !dbg !14772
  %18 = or i32 %17, %7, !dbg !14773
  %19 = or i32 %18, %16, !dbg !14774
  store volatile i32 %19, i32* %2, align 4, !dbg !14775
  %20 = load volatile i32, i32* %2, align 4, !dbg !14776
  %21 = or i32 %20, 805, !dbg !14776
  store volatile i32 %21, i32* %2, align 4, !dbg !14776
  br label %22, !dbg !14777

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !14778
  %24 = and i32 %23, 2, !dbg !14779
  %25 = icmp eq i32 %24, 0, !dbg !14780
  br i1 %25, label %22, label %26, !dbg !14777, !llvm.loop !14781

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !14783
  %28 = and i32 %27, 1, !dbg !14785
  %29 = icmp eq i32 %28, 0, !dbg !14786
  %30 = add nuw nsw i32 %14, 1, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %30, metadata !14747, metadata !DIExpression()), !dbg !14749
  br i1 %29, label %11, label %37, !dbg !14788

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !14789
  call void @llvm.dbg.value(metadata i32 %32, metadata !14745, metadata !DIExpression()), !dbg !14749
  %33 = icmp eq i32 %32, 2, !dbg !14790
  br i1 %33, label %34, label %8, !dbg !14755, !llvm.loop !14791

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !14793
  call void @llvm.dbg.value(metadata i32 %35, metadata !14746, metadata !DIExpression()), !dbg !14749
  %36 = icmp eq i32 %35, 2, !dbg !14794
  br i1 %36, label %37, label %5, !dbg !14753, !llvm.loop !14795

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !14749
  store volatile i32 0, i32* %2, align 4, !dbg !14749
  ret i32 %38, !dbg !14797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !14798 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !14799
  %2 = icmp ne i32 %1, 0, !dbg !14801
  %3 = sext i1 %2 to i32, !dbg !14802
  ret i32 %3, !dbg !14803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !14804 {
  call void @llvm.dbg.value(metadata i32 31, metadata !14806, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 0, metadata !14807, metadata !DIExpression()), !dbg !14808
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14809
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !14810
  store volatile i32 0, i32* %2, align 4, !dbg !14811
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !14812
  store volatile i32 0, i32* %3, align 4, !dbg !14813
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !14814
  store volatile i32 0, i32* %4, align 4, !dbg !14815
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !14816
  store volatile i32 0, i32* %5, align 4, !dbg !14817
  call void @llvm.dbg.value(metadata i32 31, metadata !14806, metadata !DIExpression()), !dbg !14808
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !14818
  store volatile i32 522133279, i32* %6, align 4, !dbg !14822
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !14823
  store volatile i32 522133279, i32* %7, align 4, !dbg !14824
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !14825
  %9 = icmp eq i32 %8, 0, !dbg !14827
  call void @llvm.dbg.value(metadata i32 31, metadata !14806, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14808
  br i1 %9, label %36, label %10, !dbg !14828

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !14806, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 %11, metadata !14806, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14808
  call void @llvm.dbg.value(metadata i32 %11, metadata !14806, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14808
  %12 = icmp eq i32 %11, 0, !dbg !14829
  br i1 %12, label %26, label %13, !dbg !14830, !llvm.loop !14831

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !14833
  call void @llvm.dbg.value(metadata i32 %14, metadata !14806, metadata !DIExpression()), !dbg !14808
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14834
  %16 = shl i32 %14, 24, !dbg !14835
  %17 = shl i32 %14, 16, !dbg !14836
  %18 = shl i32 %14, 8, !dbg !14837
  %19 = or i32 %17, %14, !dbg !14838
  %20 = or i32 %19, %16, !dbg !14839
  %21 = or i32 %20, %18, !dbg !14840
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !14818
  store volatile i32 %21, i32* %22, align 4, !dbg !14822
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !14823
  store volatile i32 %21, i32* %23, align 4, !dbg !14824
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !14825
  %25 = icmp eq i32 %24, 0, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %14, metadata !14806, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14808
  br i1 %25, label %36, label %10, !dbg !14828

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !14807, metadata !DIExpression()), !dbg !14808
  %28 = shl nuw nsw i32 %27, 16, !dbg !14841
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14847
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !14848
  store volatile i32 %28, i32* %30, align 4, !dbg !14849
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !14850
  %32 = icmp eq i32 %31, 0, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %27, metadata !14807, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14808
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %33, metadata !14807, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 %27, metadata !14807, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14808
  br i1 %35, label %36, label %26, !dbg !14853, !llvm.loop !14854

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !14857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !14858 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !14859
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14860
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !14861
  store volatile i32 1, i32* %2, align 4, !dbg !14862
  br label %3, !dbg !14863

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !14864
  %5 = and i32 %4, 2, !dbg !14865
  %6 = icmp eq i32 %5, 0, !dbg !14865
  br i1 %6, label %3, label %7, !dbg !14863, !llvm.loop !14866

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !14868
  br label %8, !dbg !14869

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !14870
  %10 = and i32 %9, 2, !dbg !14871
  %11 = icmp eq i32 %10, 0, !dbg !14871
  br i1 %11, label %12, label %8, !dbg !14869, !llvm.loop !14872

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !14874
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !14875
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !14876

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !14877
  %17 = and i32 %16, 1, !dbg !14878
  %18 = icmp eq i32 %17, 0, !dbg !14879
  br i1 %18, label %15, label %19, !dbg !14876, !llvm.loop !14880

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !14882
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !14883
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !14884

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !14885
  %24 = and i32 %23, 1, !dbg !14886
  %25 = icmp eq i32 %24, 0, !dbg !14887
  br i1 %25, label %22, label %26, !dbg !14884, !llvm.loop !14888

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !14890
  %28 = icmp eq i32 %27, 9507, !dbg !14892
  br i1 %28, label %29, label %37, !dbg !14893

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !14894
  %31 = and i32 %30, 15, !dbg !14897
  %32 = icmp eq i32 %31, 2, !dbg !14898
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !14899
  %34 = and i32 %33, -128, !dbg !14899
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !14899
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !14899
  br label %37, !dbg !14900

37:                                               ; preds = %29, %26
  ret void, !dbg !14900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !14901 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !14904
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !14905
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !14906
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !14907
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !14908
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !14909
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !14910
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !14911
  ret i8 0, !dbg !14912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !14913 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !14914
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14915
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !14916
  store volatile i32 %1, i32* %3, align 4, !dbg !14917
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !14918
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !14919
  store volatile i32 %4, i32* %5, align 4, !dbg !14920
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !14921
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !14922
  store volatile i32 %6, i32* %7, align 4, !dbg !14923
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !14924
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !14925
  store volatile i32 %8, i32* %9, align 4, !dbg !14926
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !14927
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !14928
  store volatile i32 %10, i32* %11, align 4, !dbg !14929
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !14930
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !14931
  store volatile i32 %12, i32* %13, align 4, !dbg !14932
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !14933
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !14934
  store volatile i32 %14, i32* %15, align 4, !dbg !14935
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !14936
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !14937
  store volatile i32 %16, i32* %17, align 4, !dbg !14938
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !14939
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !14940
  store volatile i32 %18, i32* %19, align 4, !dbg !14941
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !14942
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !14943
  store volatile i32 %20, i32* %21, align 4, !dbg !14944
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !14945
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !14946
  store volatile i32 %22, i32* %23, align 4, !dbg !14947
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !14948
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !14949
  store volatile i32 %24, i32* %25, align 4, !dbg !14950
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !14951
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !14952
  store volatile i32 %26, i32* %27, align 4, !dbg !14953
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !14954
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14955
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !14956
  store volatile i32 806289408, i32* %29, align 4, !dbg !14957
  br label %30, !dbg !14958

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !14959
  %32 = and i32 %31, 128, !dbg !14960
  %33 = icmp eq i32 %32, 0, !dbg !14960
  br i1 %33, label %30, label %34, !dbg !14958, !llvm.loop !14961

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !14963
  br label %35, !dbg !14964

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !14965
  %37 = and i32 %36, 128, !dbg !14966
  %38 = icmp eq i32 %37, 0, !dbg !14966
  br i1 %38, label %39, label %35, !dbg !14964, !llvm.loop !14967

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !14969
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !14970
  ret i8 0, !dbg !14971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !14972 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14973
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !14974
  %3 = load volatile i32, i32* %2, align 4, !dbg !14974
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !14975
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !14976
  %5 = load volatile i32, i32* %4, align 4, !dbg !14976
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !14977
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !14978
  %7 = load volatile i32, i32* %6, align 4, !dbg !14978
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !14979
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !14980
  %9 = load volatile i32, i32* %8, align 4, !dbg !14980
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !14981
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !14982
  %11 = load volatile i32, i32* %10, align 4, !dbg !14982
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !14983
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !14984
  %13 = load volatile i32, i32* %12, align 4, !dbg !14984
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !14985
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !14986
  %15 = load volatile i32, i32* %14, align 4, !dbg !14986
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !14987
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !14988
  %17 = load volatile i32, i32* %16, align 4, !dbg !14988
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !14989
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !14990
  %19 = load volatile i32, i32* %18, align 4, !dbg !14990
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !14991
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !14992
  %21 = load volatile i32, i32* %20, align 4, !dbg !14992
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !14993
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !14994
  %23 = load volatile i32, i32* %22, align 4, !dbg !14994
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !14995
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !14996
  %25 = load volatile i32, i32* %24, align 4, !dbg !14996
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !14997
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !14998
  %27 = load volatile i32, i32* %26, align 4, !dbg !14998
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !14999
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !15000
  %29 = load volatile i32, i32* %28, align 4, !dbg !15000
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !15001
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !15002
  %31 = load volatile i32, i32* %30, align 4, !dbg !15002
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !15003
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !15004
  %33 = load volatile i32, i32* %32, align 4, !dbg !15004
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !15005
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !15006
  %35 = load volatile i32, i32* %34, align 4, !dbg !15006
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !15007
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !15008
  %37 = load volatile i32, i32* %36, align 4, !dbg !15008
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !15009
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !15010
  %39 = load volatile i32, i32* %38, align 4, !dbg !15010
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !15011
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !15012
  %41 = load volatile i32, i32* %40, align 4, !dbg !15012
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !15013
  ret void, !dbg !15014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !15015 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !15016

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !15017
  %5 = and i32 %4, 17, !dbg !15018
  %6 = icmp eq i32 %5, 17, !dbg !15019
  br i1 %6, label %7, label %3, !dbg !15016, !llvm.loop !15020

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !15022
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !15023
  store volatile i32 %8, i32* %9, align 4, !dbg !15024
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !15025
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !15026
  store volatile i32 %10, i32* %11, align 4, !dbg !15027
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !15028
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !15029
  store volatile i32 %12, i32* %13, align 4, !dbg !15030
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !15031
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !15032
  store volatile i32 %14, i32* %15, align 4, !dbg !15033
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !15034
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !15035
  store volatile i32 %16, i32* %17, align 4, !dbg !15036
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !15037
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !15038
  store volatile i32 %18, i32* %19, align 4, !dbg !15039
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !15040
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !15041
  store volatile i32 %20, i32* %21, align 4, !dbg !15042
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !15043
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !15044
  store volatile i32 %22, i32* %23, align 4, !dbg !15045
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !15046
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15047
  store volatile i32 %24, i32* %25, align 4, !dbg !15048
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !15049
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !15050
  store volatile i32 %26, i32* %27, align 4, !dbg !15051
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !15052
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !15053
  store volatile i32 %28, i32* %29, align 4, !dbg !15054
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !15055
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !15056
  store volatile i32 %30, i32* %31, align 4, !dbg !15057
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !15058
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !15059
  store volatile i32 %32, i32* %33, align 4, !dbg !15060
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !15061
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !15062
  store volatile i32 %34, i32* %35, align 4, !dbg !15063
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !15064
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !15065
  store volatile i32 %36, i32* %37, align 4, !dbg !15066
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !15067
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !15068
  store volatile i32 %38, i32* %39, align 4, !dbg !15069
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !15070
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !15071
  store volatile i32 %40, i32* %41, align 4, !dbg !15072
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !15073
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !15074
  store volatile i32 %42, i32* %43, align 4, !dbg !15075
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !15076
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !15077
  store volatile i32 %44, i32* %45, align 4, !dbg !15078
  ret void, !dbg !15079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !15080 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15081
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15082
  %3 = load volatile i32, i32* %2, align 4, !dbg !15082
  %4 = and i32 %3, -2097185, !dbg !15083
  store volatile i32 %4, i32* %2, align 4, !dbg !15084
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !15085
  store volatile i32 1, i32* %5, align 4, !dbg !15086
  br label %6, !dbg !15087

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !15088
  %8 = and i32 %7, 2, !dbg !15089
  %9 = icmp eq i32 %8, 0, !dbg !15089
  br i1 %9, label %6, label %10, !dbg !15087, !llvm.loop !15090

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !15092
  br label %11, !dbg !15093

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !15094
  %13 = and i32 %12, 2, !dbg !15095
  %14 = icmp eq i32 %13, 0, !dbg !15095
  br i1 %14, label %15, label %11, !dbg !15093, !llvm.loop !15096

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !15098
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15099
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !15100
  store volatile i32 806289408, i32* %17, align 4, !dbg !15101
  br label %18, !dbg !15102

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !15103
  %20 = and i32 %19, 128, !dbg !15104
  %21 = icmp eq i32 %20, 0, !dbg !15104
  br i1 %21, label %18, label %22, !dbg !15102, !llvm.loop !15105

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !15107
  br label %23, !dbg !15108

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !15109
  %25 = and i32 %24, 128, !dbg !15110
  %26 = icmp eq i32 %25, 0, !dbg !15110
  br i1 %26, label %27, label %23, !dbg !15108, !llvm.loop !15111

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !15113
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !15114
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !15115
  store volatile i32 %28, i32* %29, align 4, !dbg !15116
  ret void, !dbg !15117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !15118 {
  tail call void @EMI_Setting_Save() #21, !dbg !15119
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !15120

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !15121
  %5 = and i32 %4, 17, !dbg !15122
  %6 = icmp eq i32 %5, 17, !dbg !15123
  br i1 %6, label %7, label %3, !dbg !15120, !llvm.loop !15124

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !15126
  %9 = or i32 %8, 1792, !dbg !15127
  store volatile i32 %9, i32* %2, align 4, !dbg !15128
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !15129
  store volatile i32 -261685248, i32* %10, align 4, !dbg !15130
  br label %11, !dbg !15131

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !15132
  %13 = and i32 %12, 1, !dbg !15133
  %14 = icmp eq i32 %13, 0, !dbg !15134
  br i1 %14, label %11, label %15, !dbg !15131, !llvm.loop !15135

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !15137
  store volatile i32 0, i32* %16, align 4, !dbg !15138
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !15139

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !15140
  %20 = and i32 %19, 16, !dbg !15141
  %21 = icmp eq i32 %20, 0, !dbg !15141
  br i1 %21, label %18, label %22, !dbg !15139, !llvm.loop !15142

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15144
  %24 = load volatile i32, i32* %23, align 4, !dbg !15144
  %25 = or i32 %24, 2097184, !dbg !15145
  store volatile i32 %25, i32* %23, align 4, !dbg !15146
  ret void, !dbg !15147
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !15148 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !15153, metadata !DIExpression()), !dbg !15155
  %3 = bitcast i32* %2 to i8*, !dbg !15156
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !15156
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15154, metadata !DIExpression()), !dbg !15157
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !15158

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15159
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !15162
  store volatile i32 0, i32* %6, align 4, !dbg !15163
  store volatile i32 806289408, i32* %6, align 4, !dbg !15164
  br label %7, !dbg !15165

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !15166
  %9 = and i32 %8, 128, !dbg !15167
  %10 = icmp eq i32 %9, 0, !dbg !15167
  br i1 %10, label %7, label %11, !dbg !15165, !llvm.loop !15168

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !15170
  br label %12, !dbg !15171

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !15172
  %14 = and i32 %13, 128, !dbg !15173
  %15 = icmp eq i32 %14, 0, !dbg !15173
  br i1 %15, label %16, label %12, !dbg !15171, !llvm.loop !15174

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !15176
  store volatile i32 0, i32* %2, align 4, !dbg !15177
  %17 = load volatile i32, i32* %2, align 4, !dbg !15179
  %18 = icmp ult i32 %17, 255, !dbg !15181
  br i1 %18, label %19, label %25, !dbg !15182

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !15183
  %21 = add i32 %20, 1, !dbg !15183
  store volatile i32 %21, i32* %2, align 4, !dbg !15183
  %22 = load volatile i32, i32* %2, align 4, !dbg !15179
  %23 = icmp ult i32 %22, 255, !dbg !15181
  br i1 %23, label %19, label %25, !dbg !15182, !llvm.loop !15184

24:                                               ; preds = %1
  br label %25, !dbg !15186

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !15155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !15189
  ret i32 %26, !dbg !15189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !15190 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15191
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !15192
  %3 = load volatile i32, i32* %2, align 4, !dbg !15192
  %4 = or i32 %3, 1792, !dbg !15193
  store volatile i32 %4, i32* %2, align 4, !dbg !15194
  ret void, !dbg !15195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !15196 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15197
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !15198
  %3 = load volatile i32, i32* %2, align 4, !dbg !15198
  %4 = and i32 %3, -1793, !dbg !15199
  store volatile i32 %4, i32* %2, align 4, !dbg !15200
  ret void, !dbg !15201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !15202 {
  ret i1 false, !dbg !15203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !15204 {
  ret i1 false, !dbg !15205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !15206 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !15207
  ret void, !dbg !15210
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !15211 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !15212
  ret void, !dbg !15215
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !15216 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !15217
  ret void, !dbg !15220
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !15221 {
  tail call void @peri_26m_dcxo() #20, !dbg !15222
  ret void, !dbg !15225
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !15226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15230, metadata !DIExpression()), !dbg !15231
  %2 = trunc i32 %0 to i8, !dbg !15232
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !15233
  ret i32 %0, !dbg !15234
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !15235 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !15236
  tail call void @SystemCoreClockUpdate() #20, !dbg !15237
  tail call fastcc void @prvSetupHardware() #21, !dbg !15238
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !15239, !srcloc !15242
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !15243, !srcloc !15246
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0)) #20, !dbg !15247
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.191, i32 0, i32 0)) #20, !dbg !15248
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0)) #20, !dbg !15249
  tail call fastcc void @rtc_set_alarm_example() #21, !dbg !15250
  br label %4, !dbg !15251

4:                                                ; preds = %4, %0
  br label %4, !dbg !15252, !llvm.loop !15255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !15258 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !15261 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !15262
  %1 = tail call i32 @hal_flash_init() #20, !dbg !15263
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !15264
  ret void, !dbg !15265
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtc_set_alarm_example() unnamed_addr #0 !dbg !15266 {
  %1 = alloca %struct.hal_rtc_time_t, align 1
  %2 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 0, !dbg !15279
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %2) #22, !dbg !15279
  call void @llvm.dbg.declare(metadata %struct.hal_rtc_time_t* %1, metadata !15268, metadata !DIExpression()), !dbg !15280
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.192, i32 0, i32 0)) #20, !dbg !15281
  %4 = tail call i32 @hal_rtc_init() #20, !dbg !15282
  call fastcc void @rtc_fill_time(%struct.hal_rtc_time_t* noundef nonnull %1, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @param, i32 0, i32 0)) #21, !dbg !15283
  %5 = call i32 @hal_rtc_set_time(%struct.hal_rtc_time_t* noundef nonnull %1) #20, !dbg !15284
  %6 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 6, !dbg !15285
  %7 = load i8, i8* %6, align 1, !dbg !15285
  %8 = zext i8 %7 to i32, !dbg !15286
  %9 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 4, !dbg !15287
  %10 = load i8, i8* %9, align 1, !dbg !15287
  %11 = zext i8 %10 to i32, !dbg !15288
  %12 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 3, !dbg !15289
  %13 = load i8, i8* %12, align 1, !dbg !15289
  %14 = zext i8 %13 to i32, !dbg !15290
  %15 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 5, !dbg !15291
  %16 = load i8, i8* %15, align 1, !dbg !15291
  %17 = zext i8 %16 to i32, !dbg !15292
  %18 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 2, !dbg !15293
  %19 = load i8, i8* %18, align 1, !dbg !15293
  %20 = zext i8 %19 to i32, !dbg !15294
  %21 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %1, i32 0, i32 1, !dbg !15295
  %22 = load i8, i8* %21, align 1, !dbg !15295
  %23 = zext i8 %22 to i32, !dbg !15296
  %24 = load i8, i8* %2, align 1, !dbg !15297
  %25 = zext i8 %24 to i32, !dbg !15298
  %26 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.193, i32 0, i32 0), i32 noundef %8, i32 noundef %11, i32 noundef %14, i32 noundef %17, i32 noundef %20, i32 noundef %23, i32 noundef %25) #20, !dbg !15299
  call fastcc void @rtc_clear_time(%struct.hal_rtc_time_t* noundef nonnull %1) #21, !dbg !15300
  call fastcc void @rtc_fill_time(%struct.hal_rtc_time_t* noundef nonnull %1, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @alarm_param, i32 0, i32 0)) #21, !dbg !15301
  %27 = call i32 @hal_rtc_set_alarm(%struct.hal_rtc_time_t* noundef nonnull %1) #20, !dbg !15302
  %28 = load i8, i8* %6, align 1, !dbg !15303
  %29 = zext i8 %28 to i32, !dbg !15304
  %30 = load i8, i8* %9, align 1, !dbg !15305
  %31 = zext i8 %30 to i32, !dbg !15306
  %32 = load i8, i8* %12, align 1, !dbg !15307
  %33 = zext i8 %32 to i32, !dbg !15308
  %34 = load i8, i8* %15, align 1, !dbg !15309
  %35 = zext i8 %34 to i32, !dbg !15310
  %36 = load i8, i8* %18, align 1, !dbg !15311
  %37 = zext i8 %36 to i32, !dbg !15312
  %38 = load i8, i8* %21, align 1, !dbg !15313
  %39 = zext i8 %38 to i32, !dbg !15314
  %40 = load i8, i8* %2, align 1, !dbg !15315
  %41 = zext i8 %40 to i32, !dbg !15316
  %42 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.194, i32 0, i32 0), i32 noundef %29, i32 noundef %31, i32 noundef %33, i32 noundef %35, i32 noundef %37, i32 noundef %39, i32 noundef %41) #20, !dbg !15317
  %43 = call i32 @hal_rtc_enable_alarm() #20, !dbg !15318
  %44 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.195, i32 0, i32 0)) #20, !dbg !15319
  %45 = call i32 @hal_rtc_set_alarm_callback(void (i8*)* noundef nonnull @test_rtc_alarm_callback.196, i8* noundef null) #20, !dbg !15320
  br label %46, !dbg !15321

46:                                               ; preds = %46, %0
  %47 = load volatile i8, i8* @test_rtc_callback, align 1, !dbg !15322
  %48 = icmp eq i8 %47, 0, !dbg !15323
  br i1 %48, label %46, label %49, !dbg !15321, !llvm.loop !15324

49:                                               ; preds = %46
  %50 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.197, i32 0, i32 0)) #20, !dbg !15326
  call fastcc void @rtc_clear_time(%struct.hal_rtc_time_t* noundef nonnull %1) #21, !dbg !15327
  %51 = call i32 @hal_rtc_get_time(%struct.hal_rtc_time_t* noundef nonnull %1) #20, !dbg !15328
  %52 = load i8, i8* %6, align 1, !dbg !15329
  %53 = zext i8 %52 to i32, !dbg !15330
  %54 = load i8, i8* %9, align 1, !dbg !15331
  %55 = zext i8 %54 to i32, !dbg !15332
  %56 = load i8, i8* %12, align 1, !dbg !15333
  %57 = zext i8 %56 to i32, !dbg !15334
  %58 = load i8, i8* %15, align 1, !dbg !15335
  %59 = zext i8 %58 to i32, !dbg !15336
  %60 = load i8, i8* %18, align 1, !dbg !15337
  %61 = zext i8 %60 to i32, !dbg !15338
  %62 = load i8, i8* %21, align 1, !dbg !15339
  %63 = zext i8 %62 to i32, !dbg !15340
  %64 = load i8, i8* %2, align 1, !dbg !15341
  %65 = zext i8 %64 to i32, !dbg !15342
  %66 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7.198, i32 0, i32 0), i32 noundef %53, i32 noundef %55, i32 noundef %57, i32 noundef %59, i32 noundef %61, i32 noundef %63, i32 noundef %65) #20, !dbg !15343
  %67 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.199, i32 0, i32 0)) #20, !dbg !15344
  %68 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9.200, i32 0, i32 0)) #20, !dbg !15345
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %2) #22, !dbg !15346
  ret void, !dbg !15346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rtc_fill_time(%struct.hal_rtc_time_t* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #7 !dbg !15347 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !15352, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i8* %1, metadata !15353, metadata !DIExpression()), !dbg !15354
  %3 = load i8, i8* %1, align 1, !dbg !15355
  %4 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !15356
  store i8 %3, i8* %4, align 1, !dbg !15357
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !15358
  %6 = load i8, i8* %5, align 1, !dbg !15358
  %7 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !15359
  store i8 %6, i8* %7, align 1, !dbg !15360
  %8 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !15361
  %9 = load i8, i8* %8, align 1, !dbg !15361
  %10 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !15362
  store i8 %9, i8* %10, align 1, !dbg !15363
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !15364
  %12 = load i8, i8* %11, align 1, !dbg !15364
  %13 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !15365
  store i8 %12, i8* %13, align 1, !dbg !15366
  %14 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !15367
  %15 = load i8, i8* %14, align 1, !dbg !15367
  %16 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !15368
  store i8 %15, i8* %16, align 1, !dbg !15369
  %17 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !15370
  %18 = load i8, i8* %17, align 1, !dbg !15370
  %19 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !15371
  store i8 %18, i8* %19, align 1, !dbg !15372
  %20 = getelementptr inbounds i8, i8* %1, i32 6, !dbg !15373
  %21 = load i8, i8* %20, align 1, !dbg !15373
  %22 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !15374
  store i8 %21, i8* %22, align 1, !dbg !15375
  ret void, !dbg !15376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtc_clear_time(%struct.hal_rtc_time_t* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15377 {
  call void @llvm.dbg.value(metadata %struct.hal_rtc_time_t* %0, metadata !15381, metadata !DIExpression()), !dbg !15382
  %2 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 6, !dbg !15383
  store i8 0, i8* %2, align 1, !dbg !15384
  %3 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 4, !dbg !15385
  store i8 0, i8* %3, align 1, !dbg !15386
  %4 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 3, !dbg !15387
  store i8 0, i8* %4, align 1, !dbg !15388
  %5 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 5, !dbg !15389
  store i8 0, i8* %5, align 1, !dbg !15390
  %6 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 2, !dbg !15391
  store i8 0, i8* %6, align 1, !dbg !15392
  %7 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 1, !dbg !15393
  store i8 0, i8* %7, align 1, !dbg !15394
  %8 = getelementptr inbounds %struct.hal_rtc_time_t, %struct.hal_rtc_time_t* %0, i32 0, i32 0, !dbg !15395
  store i8 0, i8* %8, align 1, !dbg !15396
  ret void, !dbg !15397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @test_rtc_alarm_callback.196(i8* nocapture noundef readnone %0) #2 !dbg !15398 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15400, metadata !DIExpression()), !dbg !15401
  store volatile i8 1, i8* @test_rtc_callback, align 1, !dbg !15402
  ret void, !dbg !15403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !15404 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !15414
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !15414
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !15406, metadata !DIExpression()), !dbg !15415
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !15416
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !15417
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !15418
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !15419
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !15420
  store i32 9, i32* %7, align 4, !dbg !15421
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !15422
  store i32 3, i32* %8, align 4, !dbg !15423
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !15424
  store i32 0, i32* %9, align 4, !dbg !15425
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !15426
  store i32 0, i32* %10, align 4, !dbg !15427
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !15428
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !15429
  ret void, !dbg !15429
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !15430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15432, metadata !DIExpression()), !dbg !15433
  ret i32 0, !dbg !15434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !15435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15485, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !15486, metadata !DIExpression()), !dbg !15487
  ret i32 0, !dbg !15488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !15489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15491, metadata !DIExpression()), !dbg !15492
  ret i32 1, !dbg !15493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !15494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15498, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata i32 %1, metadata !15499, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata i32 %2, metadata !15500, metadata !DIExpression()), !dbg !15501
  ret i32 0, !dbg !15502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !15503 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15507, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i32 %1, metadata !15508, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i32 %2, metadata !15509, metadata !DIExpression()), !dbg !15510
  ret i32 -1, !dbg !15511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !15512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15516, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.value(metadata i8* %1, metadata !15517, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.value(metadata i32 %2, metadata !15518, metadata !DIExpression()), !dbg !15519
  ret i32 0, !dbg !15520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !15521 {
  ret i32 1, !dbg !15522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !15523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15527, metadata !DIExpression()), !dbg !15529
  call void @llvm.dbg.value(metadata i32 %1, metadata !15528, metadata !DIExpression()), !dbg !15529
  ret i32 -1, !dbg !15530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !15531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15533, metadata !DIExpression()), !dbg !15534
  ret i32 -1, !dbg !15535
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2858 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !3054, metadata !DIExpression()), !dbg !15536
  call void @llvm.dbg.value(metadata i32 %1, metadata !3055, metadata !DIExpression()), !dbg !15536
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !15537, !srcloc !15538
  call void @llvm.dbg.value(metadata i8* %3, metadata !3057, metadata !DIExpression()), !dbg !15536
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !15539
  %5 = icmp eq i8* %4, null, !dbg !15541
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !15542
  call void @llvm.dbg.value(metadata i8* %6, metadata !3056, metadata !DIExpression()), !dbg !15536
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !15543
  %8 = icmp ult i8* %3, %7, !dbg !15545
  %9 = xor i1 %8, true, !dbg !15546
  %10 = or i1 %5, %9, !dbg !15546
  br i1 %10, label %11, label %13, !dbg !15546

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !15547
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !15546
  br label %13, !dbg !15546

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !15547
  ret i8* %14, !dbg !15546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !15548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15550, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i8* %1, metadata !15551, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i32 %2, metadata !15552, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i32 0, metadata !15553, metadata !DIExpression()), !dbg !15554
  %4 = icmp sgt i32 %2, 0, !dbg !15555
  br i1 %4, label %5, label %14, !dbg !15558

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !15553, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i8* %7, metadata !15551, metadata !DIExpression()), !dbg !15554
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15559
  call void @llvm.dbg.value(metadata i8* %8, metadata !15551, metadata !DIExpression()), !dbg !15554
  %9 = load i8, i8* %7, align 1, !dbg !15561
  %10 = zext i8 %9 to i32, !dbg !15561
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !15562
  %12 = add nuw nsw i32 %6, 1, !dbg !15563
  call void @llvm.dbg.value(metadata i32 %12, metadata !15553, metadata !DIExpression()), !dbg !15554
  %13 = icmp eq i32 %12, %2, !dbg !15555
  br i1 %13, label %14, label %5, !dbg !15558, !llvm.loop !15564

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !15566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !15567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15569, metadata !DIExpression()), !dbg !15571
  %2 = add i32 %0, -1, !dbg !15572
  %3 = icmp ugt i32 %2, 16777215, !dbg !15574
  br i1 %3, label %8, label %4, !dbg !15575

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15576
  call void @llvm.dbg.value(metadata i32 %5, metadata !15570, metadata !DIExpression()), !dbg !15571
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15577
  %7 = and i32 %6, -4, !dbg !15577
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15577
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !15578
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !15579
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15580
  br label %8, !dbg !15581

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !15571
  ret i32 %9, !dbg !15582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !15583 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !15584
  ret void, !dbg !15585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !15586 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !15587
  ret i32 %1, !dbg !15588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !15589 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !15592
  %2 = lshr i32 %1, 3, !dbg !15593
  %3 = and i32 %2, 15, !dbg !15593
  call void @llvm.dbg.value(metadata i32 %3, metadata !15591, metadata !DIExpression()), !dbg !15594
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !15595

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !15596

5:                                                ; preds = %0, %0
  br label %9, !dbg !15598

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !15599
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !15600
  br label %15, !dbg !15602

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !15599
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !15600
  %12 = and i32 %11, 1024, !dbg !15603
  %13 = icmp eq i32 %12, 0, !dbg !15603
  br i1 %13, label %15, label %14, !dbg !15602

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !15604
  br label %15, !dbg !15606

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !15607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !15608 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15609
  %2 = or i32 %1, 15728640, !dbg !15609
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15609
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !15610
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15611
  %4 = or i32 %3, 458752, !dbg !15611
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15611
  ret void, !dbg !15612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !15613 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !15614
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !15615
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !15616
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !15617
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !15618
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !15619
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !15620
  ret void, !dbg !15621
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !94, !170, !391, !671, !3182, !871, !960, !3186, !1084, !1253, !3205, !1339, !1503, !1598, !1921, !3251, !2008, !2017, !2375, !2436, !2511, !3253, !3302, !2669, !2835, !2847, !3049, !3060, !3170}
!llvm.ident = !{!3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304, !3304}
!llvm.module.flags = !{!3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_name", scope: !94, file: !95, line: 46, type: !164, isLocal: true, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !150, globals: !155, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!96 = !{!97, !105, !115, !119, !123, !142, !146}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 387, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!99 = !{!100, !101, !102, !103, !104}
!100 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!101 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!102 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!103 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!104 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 846, baseType: !18, size: 32, elements: !107)
!106 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!107 = !{!108, !109, !110, !111, !112, !113, !114}
!108 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!109 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!110 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!111 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!112 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!113 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!114 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 397, baseType: !18, size: 32, elements: !116)
!116 = !{!117, !118}
!117 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!118 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 857, baseType: !18, size: 32, elements: !120)
!120 = !{!121, !122}
!121 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!122 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 87, baseType: !18, size: 32, elements: !125)
!124 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!125 = !{!126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141}
!126 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!127 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!128 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!129 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!130 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!131 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!132 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!133 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!134 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!135 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!136 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!137 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!138 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!139 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!140 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!141 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 380, baseType: !18, size: 32, elements: !143)
!143 = !{!144, !145}
!144 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!145 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 82, baseType: !18, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!149 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!150 = !{!61, !88, !151}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !98, line: 371, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !88}
!155 = !{!156, !92}
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_handle", scope: !94, file: !95, line: 47, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 48, elements: !162)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !161)
!161 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !{!163}
!163 = !DISubrange(count: 6)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 192, elements: !162)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!167 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIGlobalVariableExpression(var: !169, expr: !DIExpression())
!169 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !170, file: !171, line: 48, type: !387, isLocal: false, isDefinition: true)
!170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !171, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !172, retainedTypes: !315, globals: !330, splitDebugInlining: false, nameTableKind: None)
!171 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!172 = !{!173, !146, !232, !238, !105, !142, !115}
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 1170, baseType: !18, size: 32, elements: !174)
!174 = !{!175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231}
!175 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!176 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!177 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!178 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!179 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!180 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!181 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!182 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!183 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!184 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!185 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!186 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!187 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!188 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!189 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!190 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!191 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!192 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!193 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!194 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!195 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!196 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!197 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!198 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!199 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!200 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!201 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!202 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!203 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!204 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!205 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!206 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!207 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!208 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!209 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!210 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!211 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!212 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!213 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!214 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!215 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!216 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!217 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!218 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!219 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!220 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!221 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!222 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!223 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!224 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!225 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!226 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!227 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!228 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!229 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!230 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!231 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 75, baseType: !18, size: 32, elements: !233)
!233 = !{!234, !235, !236, !237}
!234 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!235 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!236 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!237 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314}
!240 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!241 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!242 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!243 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!244 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!245 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!246 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!247 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!248 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!249 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!250 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!251 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!252 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!253 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!254 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!255 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!256 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!257 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!258 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!259 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!260 = !DIEnumerator(name: "KP_IRQn", value: 10)
!261 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!262 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!263 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!264 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!265 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!266 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!267 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!268 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!269 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!270 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!271 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!272 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!273 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!274 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!275 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!276 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!277 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!278 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!279 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!280 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!281 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!282 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!283 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!284 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!285 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!286 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!287 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!288 = !DIEnumerator(name: "SF_IRQn", value: 38)
!289 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!290 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!291 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!292 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!293 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!294 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!295 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!296 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!297 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!298 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!299 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!300 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!301 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!302 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!303 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!304 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!305 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!306 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!307 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!308 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!309 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!310 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!311 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!312 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!313 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!314 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!315 = !{!61, !316, !88}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !319)
!319 = !{!320, !321, !322, !323, !325, !326, !327, !328, !329}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !318, file: !56, line: 1263, baseType: !60, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !318, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !318, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !318, file: !56, line: 1266, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !318, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !318, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !318, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !318, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !318, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!330 = !{!168, !331, !340, !346, !362, !385}
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !170, file: !171, line: 49, type: !333, isLocal: false, isDefinition: true)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !335, file: !56, line: 1257, baseType: !324, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !335, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !335, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "flag", scope: !342, file: !171, line: 88, type: !91, isLocal: true, isDefinition: true)
!342 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !171, file: !171, line: 86, type: !343, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!343 = !DISubroutineType(types: !344)
!344 = !{null}
!345 = !{}
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !170, file: !171, line: 51, type: !348, isLocal: false, isDefinition: true)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 768, elements: !162)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !124, line: 116, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 111, size: 128, elements: !351)
!351 = !{!352, !354, !360, !361}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !350, file: !124, line: 112, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !98, line: 400, baseType: !115)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !350, file: !124, line: 113, baseType: !355, size: 64, offset: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !124, line: 109, baseType: !356)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 106, size: 64, elements: !357)
!357 = !{!358, !359}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !356, file: !124, line: 107, baseType: !151, size: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !356, file: !124, line: 108, baseType: !88, size: 32, offset: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !350, file: !124, line: 114, baseType: !91, size: 8, offset: 96)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !350, file: !124, line: 115, baseType: !91, size: 8, offset: 104)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !170, file: !171, line: 52, type: !364, isLocal: false, isDefinition: true)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !124, line: 134, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 125, size: 4256, elements: !366)
!366 = !{!367, !378, !379, !380, !381, !382, !383, !384}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !365, file: !124, line: 126, baseType: !368, size: 4096)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !369, size: 4096, elements: !376)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !124, line: 123, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 118, size: 128, elements: !371)
!371 = !{!372, !373, !374, !375}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !370, file: !124, line: 119, baseType: !355, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !370, file: !124, line: 120, baseType: !61, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !370, file: !124, line: 121, baseType: !91, size: 8, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !370, file: !124, line: 122, baseType: !91, size: 8, offset: 104)
!376 = !{!377}
!377 = !DISubrange(count: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !365, file: !124, line: 127, baseType: !61, size: 32, offset: 4096)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !365, file: !124, line: 128, baseType: !61, size: 32, offset: 4128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !365, file: !124, line: 129, baseType: !61, size: 32, offset: 4160)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !365, file: !124, line: 130, baseType: !61, size: 32, offset: 4192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !365, file: !124, line: 131, baseType: !91, size: 8, offset: 4224)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !365, file: !124, line: 132, baseType: !91, size: 8, offset: 4232)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !365, file: !124, line: 133, baseType: !91, size: 8, offset: 4240)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !170, file: !171, line: 53, type: !61, isLocal: false, isDefinition: true)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 192, elements: !162)
!388 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !391, file: !392, line: 64, type: !492, isLocal: false, isDefinition: true)
!391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !393, retainedTypes: !487, globals: !491, splitDebugInlining: false, nameTableKind: None)
!392 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!393 = !{!394, !446, !453, !457, !463, !467, !476, !481}
!394 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 339, baseType: !18, size: 32, elements: !395)
!395 = !{!396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445}
!396 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!397 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!398 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!399 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!400 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!401 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!402 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!403 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!404 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!405 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!406 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!407 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!408 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!409 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!410 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!411 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!412 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!413 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!414 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!415 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!416 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!417 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!418 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!419 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!420 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!421 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!422 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!423 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!424 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!425 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!426 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!427 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!428 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!429 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!430 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!431 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!432 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!433 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!434 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!435 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!436 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!437 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!438 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!439 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!440 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!441 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!442 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!443 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!444 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!445 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 224, baseType: !7, size: 32, elements: !448)
!447 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!448 = !{!449, !450, !451, !452}
!449 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!450 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!451 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!452 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!453 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 210, baseType: !18, size: 32, elements: !454)
!454 = !{!455, !456}
!455 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!456 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!457 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 233, baseType: !7, size: 32, elements: !458)
!458 = !{!459, !460, !461, !462}
!459 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!460 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!461 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!462 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 217, baseType: !18, size: 32, elements: !464)
!464 = !{!465, !466}
!465 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!466 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!467 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 415, baseType: !18, size: 32, elements: !468)
!468 = !{!469, !470, !471, !472, !473, !474, !475}
!469 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!470 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!471 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!472 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!473 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!474 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!475 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 427, baseType: !18, size: 32, elements: !477)
!477 = !{!478, !479, !480}
!478 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!479 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!480 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!481 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 242, baseType: !18, size: 32, elements: !482)
!482 = !{!483, !484, !485, !486}
!483 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!484 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!485 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!486 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!487 = !{!88, !488, !489, !490}
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !447, line: 213, baseType: !453)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !447, line: 220, baseType: !463)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !447, line: 247, baseType: !481)
!491 = !{!389}
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !495)
!495 = !{!496, !510, !514, !523, !524, !533, !534, !543, !544, !554, !555, !564, !565, !574, !575, !584, !585, !594, !598, !607, !608, !617, !618, !627, !636, !637, !648, !652, !661, !662}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !494, file: !56, line: 1523, baseType: !497, size: 256)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 256, elements: !508)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !500)
!500 = !{!501, !502, !503, !504}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !499, file: !56, line: 1396, baseType: !60, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !499, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !499, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !499, file: !56, line: 1399, baseType: !505, size: 32, offset: 96)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 32, elements: !506)
!506 = !{!507}
!507 = !DISubrange(count: 4)
!508 = !{!509}
!509 = !DISubrange(count: 2)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !494, file: !56, line: 1524, baseType: !511, size: 1792, offset: 256)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1792, elements: !512)
!512 = !{!513}
!513 = !DISubrange(count: 224)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !494, file: !56, line: 1525, baseType: !515, size: 256, offset: 2048)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 256, elements: !508)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !518)
!518 = !{!519, !520, !521, !522}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !517, file: !56, line: 1405, baseType: !60, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !517, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !517, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !517, file: !56, line: 1408, baseType: !505, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !494, file: !56, line: 1526, baseType: !511, size: 1792, offset: 2304)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !494, file: !56, line: 1527, baseType: !525, size: 256, offset: 4096)
!525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !526, size: 256, elements: !508)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !528)
!528 = !{!529, !530, !531, !532}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !527, file: !56, line: 1413, baseType: !60, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !527, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !527, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !527, file: !56, line: 1416, baseType: !505, size: 32, offset: 96)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !494, file: !56, line: 1528, baseType: !511, size: 1792, offset: 4352)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !494, file: !56, line: 1529, baseType: !535, size: 256, offset: 6144)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 256, elements: !508)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !538)
!538 = !{!539, !540, !541, !542}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !537, file: !56, line: 1422, baseType: !60, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !537, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !537, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !537, file: !56, line: 1425, baseType: !505, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !494, file: !56, line: 1530, baseType: !511, size: 1792, offset: 6400)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !494, file: !56, line: 1531, baseType: !545, size: 256, offset: 8192)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 256, elements: !508)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !547)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !548)
!548 = !{!549, !550}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !547, file: !56, line: 1430, baseType: !60, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !547, file: !56, line: 1431, baseType: !551, size: 96, offset: 32)
!551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 96, elements: !552)
!552 = !{!553}
!553 = !DISubrange(count: 12)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !494, file: !56, line: 1532, baseType: !511, size: 1792, offset: 8448)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !494, file: !56, line: 1533, baseType: !556, size: 256, offset: 10240)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !508)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !558, file: !56, line: 1436, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !558, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !558, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1439, baseType: !505, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !494, file: !56, line: 1534, baseType: !511, size: 1792, offset: 10496)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !494, file: !56, line: 1535, baseType: !566, size: 256, offset: 12288)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !508)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !568, file: !56, line: 1444, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !568, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !568, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1447, baseType: !505, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !494, file: !56, line: 1536, baseType: !511, size: 1792, offset: 12544)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !494, file: !56, line: 1537, baseType: !576, size: 256, offset: 14336)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !508)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !578, file: !56, line: 1451, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !578, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !578, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1454, baseType: !505, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !494, file: !56, line: 1538, baseType: !511, size: 1792, offset: 14592)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !494, file: !56, line: 1539, baseType: !586, size: 512, offset: 16384)
!586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 512, elements: !506)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !589)
!589 = !{!590, !591, !592, !593}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !588, file: !56, line: 1459, baseType: !60, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !588, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !588, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !588, file: !56, line: 1462, baseType: !505, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !494, file: !56, line: 1540, baseType: !595, size: 1536, offset: 16896)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1536, elements: !596)
!596 = !{!597}
!597 = !DISubrange(count: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !494, file: !56, line: 1541, baseType: !599, size: 256, offset: 18432)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !600, size: 256, elements: !508)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !602)
!602 = !{!603, !604, !605, !606}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !601, file: !56, line: 1467, baseType: !60, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !601, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !601, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !601, file: !56, line: 1470, baseType: !505, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !494, file: !56, line: 1542, baseType: !511, size: 1792, offset: 18688)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !494, file: !56, line: 1543, baseType: !609, size: 256, offset: 20480)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !508)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !611, file: !56, line: 1476, baseType: !60, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !611, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !611, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !611, file: !56, line: 1479, baseType: !505, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !494, file: !56, line: 1544, baseType: !511, size: 1792, offset: 20736)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !494, file: !56, line: 1545, baseType: !619, size: 256, offset: 22528)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 256, elements: !508)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !622)
!622 = !{!623, !624, !625, !626}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !621, file: !56, line: 1485, baseType: !60, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !621, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !621, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !621, file: !56, line: 1488, baseType: !505, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !494, file: !56, line: 1546, baseType: !628, size: 256, offset: 22784)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, size: 256, elements: !508)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !630)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !631)
!631 = !{!632, !633, !634, !635}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !630, file: !56, line: 1493, baseType: !60, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !630, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !630, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !630, file: !56, line: 1496, baseType: !505, size: 32, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !494, file: !56, line: 1547, baseType: !595, size: 1536, offset: 23040)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !494, file: !56, line: 1548, baseType: !638, size: 896, offset: 24576)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 896, elements: !646)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !641)
!641 = !{!642, !643, !644, !645}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !640, file: !56, line: 1501, baseType: !60, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !640, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !640, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !640, file: !56, line: 1504, baseType: !505, size: 32, offset: 96)
!646 = !{!647}
!647 = !DISubrange(count: 7)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !494, file: !56, line: 1549, baseType: !649, size: 1152, offset: 25472)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1152, elements: !650)
!650 = !{!651}
!651 = !DISubrange(count: 144)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !494, file: !56, line: 1550, baseType: !653, size: 512, offset: 26624)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 512, elements: !506)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !656)
!656 = !{!657, !658, !659, !660}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !655, file: !56, line: 1509, baseType: !60, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !655, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !655, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !655, file: !56, line: 1512, baseType: !505, size: 32, offset: 96)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !494, file: !56, line: 1551, baseType: !595, size: 1536, offset: 27136)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !494, file: !56, line: 1552, baseType: !663, size: 768, offset: 28672)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !664, size: 768, elements: !162)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !666)
!666 = !{!667, !668}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !665, file: !56, line: 1517, baseType: !60, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !665, file: !56, line: 1518, baseType: !551, size: 96, offset: 32)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !671, file: !672, line: 101, type: !864, isLocal: true, isDefinition: true)
!671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !673, retainedTypes: !775, globals: !785, splitDebugInlining: false, nameTableKind: None)
!672 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!673 = !{!674, !681, !696, !702, !708, !713, !718, !725, !741, !747, !751, !756, !763, !771}
!674 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 180, baseType: !18, size: 32, elements: !675)
!675 = !{!676, !677, !678, !679, !680}
!676 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!677 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!678 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!679 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!680 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!681 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 189, baseType: !18, size: 32, elements: !683)
!682 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!683 = !{!684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695}
!684 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!685 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!686 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!687 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!688 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!689 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!690 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!691 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!692 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!693 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!694 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!695 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!696 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 355, baseType: !7, size: 32, elements: !698)
!697 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!698 = !{!699, !700, !701}
!699 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!700 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!701 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!702 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 206, baseType: !7, size: 32, elements: !703)
!703 = !{!704, !705, !706, !707}
!704 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!705 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!706 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!707 = !DIEnumerator(name: "VDMA_OK", value: 0)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !672, line: 65, baseType: !18, size: 32, elements: !709)
!709 = !{!710, !711, !712}
!710 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!711 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!712 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!713 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !672, line: 77, baseType: !18, size: 32, elements: !714)
!714 = !{!715, !716, !717}
!715 = !DIEnumerator(name: "UART_FLOWCONTROL_NONE", value: 0)
!716 = !DIEnumerator(name: "UART_FLOWCONTROL_SOFTWARE", value: 1)
!717 = !DIEnumerator(name: "UART_FLOWCONTROL_HARDWARE", value: 2)
!718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 345, baseType: !7, size: 32, elements: !719)
!719 = !{!720, !721, !722, !723, !724}
!720 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!721 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!722 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!723 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!724 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 302, baseType: !18, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740}
!727 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!728 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!729 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!730 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!731 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!732 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!733 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!734 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!735 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!736 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!737 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!738 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!739 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!740 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!741 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 321, baseType: !18, size: 32, elements: !742)
!742 = !{!743, !744, !745, !746}
!743 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!744 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!745 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!746 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 330, baseType: !18, size: 32, elements: !748)
!748 = !{!749, !750}
!749 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!750 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 337, baseType: !18, size: 32, elements: !752)
!752 = !{!753, !754, !755}
!753 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!754 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!755 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!756 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !757, line: 101, baseType: !7, size: 32, elements: !758)
!757 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!758 = !{!759, !760, !761, !762}
!759 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!760 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!761 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!762 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!763 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !764, line: 152, baseType: !7, size: 32, elements: !765)
!764 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!765 = !{!766, !767, !768, !769, !770}
!766 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!767 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!768 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!769 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!770 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!771 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 222, baseType: !7, size: 32, elements: !772)
!772 = !{!773, !774}
!773 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!774 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!775 = !{!88, !776, !61, !777}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !779, line: 96, baseType: !780)
!779 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !779, line: 93, size: 64, elements: !781)
!781 = !{!782, !783}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !780, file: !779, line: 94, baseType: !91, size: 8)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !780, file: !779, line: 95, baseType: !784, size: 32, offset: 32)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !106, line: 186, baseType: !674)
!785 = !{!786, !789, !791, !793, !795, !799, !808, !822, !669, !824, !837, !842, !856, !862}
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !671, file: !672, line: 92, type: !788, isLocal: true, isDefinition: true)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 32, elements: !506)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "g_uart_restore_init", scope: !671, file: !672, line: 93, type: !91, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !671, file: !672, line: 94, type: !788, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !671, file: !672, line: 95, type: !505, isLocal: true, isDefinition: true)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "g_uart_flowcontrol_status", scope: !671, file: !672, line: 96, type: !797, isLocal: true, isDefinition: true)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 128, elements: !506)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_flowcontrol_t", file: !672, line: 81, baseType: !713)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "g_uart_sw_flowcontrol_config", scope: !671, file: !672, line: 97, type: !801, isLocal: true, isDefinition: true)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !802, size: 96, elements: !506)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_sw_flowcontrol_config_t", file: !672, line: 87, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !672, line: 83, size: 24, elements: !804)
!804 = !{!805, !806, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "xon", scope: !803, file: !672, line: 84, baseType: !159, size: 8)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "xoff", scope: !803, file: !672, line: 85, baseType: !159, size: 8, offset: 8)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "escape_character", scope: !803, file: !672, line: 86, baseType: !159, size: 8, offset: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "g_uart_config", scope: !671, file: !672, line: 98, type: !810, isLocal: true, isDefinition: true)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 512, elements: !506)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !697, line: 378, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 373, size: 128, elements: !813)
!813 = !{!814, !816, !818, !820}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !812, file: !697, line: 374, baseType: !815, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !697, line: 317, baseType: !725)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !812, file: !697, line: 375, baseType: !817, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !697, line: 326, baseType: !741)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !812, file: !697, line: 376, baseType: !819, size: 32, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !697, line: 333, baseType: !747)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !812, file: !697, line: 377, baseType: !821, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !697, line: 341, baseType: !751)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "g_uart_irq_pending_status", scope: !671, file: !672, line: 99, type: !788, isLocal: true, isDefinition: true)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !671, file: !672, line: 102, type: !826, isLocal: true, isDefinition: true)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 256, elements: !506)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !672, line: 74, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !672, line: 71, size: 64, elements: !829)
!829 = !{!830, !836}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !828, file: !672, line: 72, baseType: !831, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !697, line: 410, baseType: !832)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !835, !88}
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !697, line: 359, baseType: !696)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !828, file: !672, line: 73, baseType: !88, size: 32, offset: 32)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !671, file: !672, line: 103, type: !839, isLocal: true, isDefinition: true)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 512, elements: !840)
!840 = !{!841}
!841 = !DISubrange(count: 8)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !671, file: !672, line: 104, type: !844, isLocal: true, isDefinition: true)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 896, elements: !506)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !697, line: 390, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 382, size: 224, elements: !847)
!847 = !{!848, !850, !851, !852, !853, !854, !855}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !846, file: !697, line: 383, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !846, file: !697, line: 384, baseType: !61, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !846, file: !697, line: 385, baseType: !61, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !846, file: !697, line: 386, baseType: !849, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !846, file: !697, line: 387, baseType: !61, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !846, file: !697, line: 388, baseType: !61, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !846, file: !697, line: 389, baseType: !61, size: 32, offset: 192)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !671, file: !672, line: 105, type: !858, isLocal: true, isDefinition: true)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !859, size: 416, elements: !860)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!860 = !{!861}
!861 = !DISubrange(count: 13)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !671, file: !672, line: 90, type: !91, isLocal: true, isDefinition: true)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !506)
!865 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !866)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !672, line: 69, baseType: !708)
!867 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!868 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !871, file: !872, line: 53, type: !956, isLocal: false, isDefinition: true)
!871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !873, retainedTypes: !884, globals: !940, splitDebugInlining: false, nameTableKind: None)
!872 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!873 = !{!173, !238, !681, !674, !874}
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !779, line: 46, baseType: !18, size: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881, !882, !883}
!876 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!877 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!878 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!879 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!880 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!881 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!882 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!883 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!884 = !{!885}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !888)
!888 = !{!889, !895, !900, !906, !907, !912, !917, !918, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !887, file: !56, line: 547, baseType: !890, size: 32)
!890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 543, size: 32, elements: !891)
!891 = !{!892, !893, !894}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !890, file: !56, line: 544, baseType: !324, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !890, file: !56, line: 545, baseType: !60, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !890, file: !56, line: 546, baseType: !60, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !887, file: !56, line: 551, baseType: !896, size: 32, offset: 32)
!896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 548, size: 32, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !896, file: !56, line: 549, baseType: !60, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !896, file: !56, line: 550, baseType: !60, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !887, file: !56, line: 556, baseType: !901, size: 32, offset: 64)
!901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 552, size: 32, elements: !902)
!902 = !{!903, !904, !905}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !901, file: !56, line: 553, baseType: !324, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !901, file: !56, line: 554, baseType: !60, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !901, file: !56, line: 555, baseType: !60, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !887, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !887, file: !56, line: 561, baseType: !908, size: 32, offset: 128)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 558, size: 32, elements: !909)
!909 = !{!910, !911}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !908, file: !56, line: 559, baseType: !60, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !908, file: !56, line: 560, baseType: !60, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !887, file: !56, line: 565, baseType: !913, size: 32, offset: 160)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 562, size: 32, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !913, file: !56, line: 563, baseType: !324, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !913, file: !56, line: 564, baseType: !60, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !887, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !887, file: !56, line: 570, baseType: !919, size: 32, offset: 224)
!919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 567, size: 32, elements: !920)
!920 = !{!921, !922}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !919, file: !56, line: 568, baseType: !60, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !919, file: !56, line: 569, baseType: !60, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !887, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !887, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !887, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !887, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !887, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !887, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !887, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !887, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !887, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !887, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !887, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !887, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !887, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !887, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !887, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !887, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !887, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!940 = !{!869, !941, !946, !952}
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !871, file: !872, line: 54, type: !943, isLocal: false, isDefinition: true)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 128, elements: !506)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !106, line: 1237, baseType: !173)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !871, file: !872, line: 55, type: !948, isLocal: false, isDefinition: true)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 128, elements: !506)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !238)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !871, file: !872, line: 57, type: !954, isLocal: false, isDefinition: true)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 128, elements: !506)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !957, size: 128, elements: !506)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !885)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !960, file: !961, line: 47, type: !1074, isLocal: false, isDefinition: true)
!960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !962, globals: !1007, splitDebugInlining: false, nameTableKind: None)
!961 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!962 = !{!963, !173, !973, !983, !1000}
!963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 137, baseType: !18, size: 32, elements: !964)
!964 = !{!965, !966, !967, !968, !969, !970, !971, !972}
!965 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!966 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!967 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!968 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!969 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!970 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!971 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!972 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 132, baseType: !18, size: 32, elements: !975)
!974 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!975 = !{!976, !977, !978, !979, !980, !981, !982}
!976 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!977 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!978 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!979 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!980 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!981 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!982 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 142, baseType: !18, size: 32, elements: !984)
!984 = !{!985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999}
!985 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!986 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!987 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!988 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!989 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!990 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!991 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!992 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!993 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!994 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!995 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!996 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!997 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!998 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!999 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!1000 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 162, baseType: !7, size: 32, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006}
!1002 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!1003 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!1004 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!1005 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!1006 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!1007 = !{!1008, !958, !1072, !1077, !1079}
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !960, file: !961, line: 46, type: !1010, isLocal: false, isDefinition: true)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 128, elements: !506)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !56, line: 1885, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1833, size: 960, elements: !1015)
!1015 = !{!1016, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !1014, file: !56, line: 1834, baseType: !1017, size: 16)
!1017 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1019)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1020)
!1020 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1014, file: !56, line: 1835, baseType: !1017, size: 16, offset: 16)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !1014, file: !56, line: 1836, baseType: !1017, size: 16, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1014, file: !56, line: 1837, baseType: !1017, size: 16, offset: 48)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !1014, file: !56, line: 1838, baseType: !1017, size: 16, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1014, file: !56, line: 1839, baseType: !1017, size: 16, offset: 80)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !1014, file: !56, line: 1840, baseType: !1017, size: 16, offset: 96)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1014, file: !56, line: 1841, baseType: !1017, size: 16, offset: 112)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !1014, file: !56, line: 1842, baseType: !1017, size: 16, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1014, file: !56, line: 1843, baseType: !1017, size: 16, offset: 144)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !1014, file: !56, line: 1844, baseType: !1017, size: 16, offset: 160)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1014, file: !56, line: 1845, baseType: !1017, size: 16, offset: 176)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !1014, file: !56, line: 1846, baseType: !1017, size: 16, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1014, file: !56, line: 1847, baseType: !1017, size: 16, offset: 208)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !1014, file: !56, line: 1848, baseType: !1017, size: 16, offset: 224)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1014, file: !56, line: 1849, baseType: !1017, size: 16, offset: 240)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !1014, file: !56, line: 1850, baseType: !1017, size: 16, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1014, file: !56, line: 1851, baseType: !1017, size: 16, offset: 272)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !1014, file: !56, line: 1852, baseType: !1017, size: 16, offset: 288)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1014, file: !56, line: 1853, baseType: !1017, size: 16, offset: 304)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1014, file: !56, line: 1854, baseType: !1041, size: 32, offset: 320)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 32, elements: !508)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !1014, file: !56, line: 1855, baseType: !1017, size: 16, offset: 352)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1014, file: !56, line: 1856, baseType: !1017, size: 16, offset: 368)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !1014, file: !56, line: 1857, baseType: !1017, size: 16, offset: 384)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1014, file: !56, line: 1858, baseType: !1017, size: 16, offset: 400)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !1014, file: !56, line: 1859, baseType: !1017, size: 16, offset: 416)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1014, file: !56, line: 1860, baseType: !1017, size: 16, offset: 432)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !1014, file: !56, line: 1861, baseType: !1017, size: 16, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1014, file: !56, line: 1862, baseType: !1017, size: 16, offset: 464)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1014, file: !56, line: 1863, baseType: !1041, size: 32, offset: 480)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !1014, file: !56, line: 1864, baseType: !1017, size: 16, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1014, file: !56, line: 1865, baseType: !1017, size: 16, offset: 528)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1014, file: !56, line: 1866, baseType: !1041, size: 32, offset: 544)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !1014, file: !56, line: 1867, baseType: !1017, size: 16, offset: 576)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1014, file: !56, line: 1868, baseType: !1017, size: 16, offset: 592)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1014, file: !56, line: 1869, baseType: !1041, size: 32, offset: 608)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !1014, file: !56, line: 1870, baseType: !1017, size: 16, offset: 640)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1014, file: !56, line: 1871, baseType: !1017, size: 16, offset: 656)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1014, file: !56, line: 1872, baseType: !1060, size: 96, offset: 672)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 96, elements: !162)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !1014, file: !56, line: 1873, baseType: !1017, size: 16, offset: 768)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1014, file: !56, line: 1874, baseType: !1017, size: 16, offset: 784)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !1014, file: !56, line: 1875, baseType: !1017, size: 16, offset: 800)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1014, file: !56, line: 1876, baseType: !1017, size: 16, offset: 816)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !1014, file: !56, line: 1877, baseType: !1017, size: 16, offset: 832)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1014, file: !56, line: 1878, baseType: !1017, size: 16, offset: 848)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !1014, file: !56, line: 1879, baseType: !1017, size: 16, offset: 864)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1014, file: !56, line: 1880, baseType: !1017, size: 16, offset: 880)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1014, file: !56, line: 1881, baseType: !1041, size: 32, offset: 896)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !1014, file: !56, line: 1882, baseType: !1017, size: 16, offset: 928)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1014, file: !56, line: 1883, baseType: !1017, size: 16, offset: 944)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !960, file: !961, line: 48, type: !1074, isLocal: false, isDefinition: true)
!1074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 128, elements: !506)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !682, line: 147, baseType: !963)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !960, file: !961, line: 49, type: !943, isLocal: false, isDefinition: true)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !960, file: !961, line: 52, type: !1081, isLocal: false, isDefinition: true)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !506)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "EINT_REGISTER", scope: !1084, file: !1085, line: 55, type: !1175, isLocal: false, isDefinition: true)
!1084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1086, retainedTypes: !1141, globals: !1147, splitDebugInlining: false, nameTableKind: None)
!1085 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_eint.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1086 = !{!1087, !1094, !1129, !238, !1136}
!1087 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1088, line: 204, baseType: !7, size: 32, elements: !1089)
!1088 = !DIFile(filename: "../../../../../driver/chip/inc/hal_eint.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1089 = !{!1090, !1091, !1092, !1093}
!1090 = !DIEnumerator(name: "HAL_EINT_STATUS_ERROR_EINT_NUMBER", value: -3)
!1091 = !DIEnumerator(name: "HAL_EINT_STATUS_INVALID_PARAMETER", value: -2)
!1092 = !DIEnumerator(name: "HAL_EINT_STATUS_ERROR", value: -1)
!1093 = !DIEnumerator(name: "HAL_EINT_STATUS_OK", value: 0)
!1094 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 787, baseType: !18, size: 32, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128}
!1096 = !DIEnumerator(name: "HAL_EINT_NUMBER_0", value: 0)
!1097 = !DIEnumerator(name: "HAL_EINT_NUMBER_1", value: 1)
!1098 = !DIEnumerator(name: "HAL_EINT_NUMBER_2", value: 2)
!1099 = !DIEnumerator(name: "HAL_EINT_NUMBER_3", value: 3)
!1100 = !DIEnumerator(name: "HAL_EINT_NUMBER_4", value: 4)
!1101 = !DIEnumerator(name: "HAL_EINT_NUMBER_5", value: 5)
!1102 = !DIEnumerator(name: "HAL_EINT_NUMBER_6", value: 6)
!1103 = !DIEnumerator(name: "HAL_EINT_NUMBER_7", value: 7)
!1104 = !DIEnumerator(name: "HAL_EINT_NUMBER_8", value: 8)
!1105 = !DIEnumerator(name: "HAL_EINT_NUMBER_9", value: 9)
!1106 = !DIEnumerator(name: "HAL_EINT_NUMBER_10", value: 10)
!1107 = !DIEnumerator(name: "HAL_EINT_NUMBER_11", value: 11)
!1108 = !DIEnumerator(name: "HAL_EINT_NUMBER_12", value: 12)
!1109 = !DIEnumerator(name: "HAL_EINT_NUMBER_13", value: 13)
!1110 = !DIEnumerator(name: "HAL_EINT_NUMBER_14", value: 14)
!1111 = !DIEnumerator(name: "HAL_EINT_NUMBER_15", value: 15)
!1112 = !DIEnumerator(name: "HAL_EINT_NUMBER_16", value: 16)
!1113 = !DIEnumerator(name: "HAL_EINT_NUMBER_17", value: 17)
!1114 = !DIEnumerator(name: "HAL_EINT_NUMBER_18", value: 18)
!1115 = !DIEnumerator(name: "HAL_EINT_NUMBER_19", value: 19)
!1116 = !DIEnumerator(name: "HAL_EINT_KEYPAD", value: 20)
!1117 = !DIEnumerator(name: "HAL_EINT_UART_0_RX", value: 21)
!1118 = !DIEnumerator(name: "HAL_EINT_UART_1_RX", value: 22)
!1119 = !DIEnumerator(name: "HAL_EINT_UART_2_RX", value: 23)
!1120 = !DIEnumerator(name: "HAL_EINT_UART_3_RX", value: 24)
!1121 = !DIEnumerator(name: "HAL_EINT_BTSYS", value: 25)
!1122 = !DIEnumerator(name: "HAL_EINT_BTSYS_BTIF", value: 26)
!1123 = !DIEnumerator(name: "HAL_EINT_USB", value: 27)
!1124 = !DIEnumerator(name: "HAL_EINT_ACCDET", value: 28)
!1125 = !DIEnumerator(name: "HAL_EINT_RTC", value: 29)
!1126 = !DIEnumerator(name: "HAL_EINT_PMIC", value: 30)
!1127 = !DIEnumerator(name: "HAL_EINT_GPCOUNTER", value: 31)
!1128 = !DIEnumerator(name: "HAL_EINT_NUMBER_MAX", value: 32)
!1129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1088, line: 194, baseType: !18, size: 32, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134, !1135}
!1131 = !DIEnumerator(name: "HAL_EINT_LEVEL_LOW", value: 0)
!1132 = !DIEnumerator(name: "HAL_EINT_LEVEL_HIGH", value: 1)
!1133 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING", value: 2)
!1134 = !DIEnumerator(name: "HAL_EINT_EDGE_RISING", value: 3)
!1135 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING_AND_RISING", value: 4)
!1136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1137, line: 59, baseType: !18, size: 32, elements: !1138)
!1137 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_eint_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1138 = !{!1139, !1140}
!1139 = !DIEnumerator(name: "EINT_DOMAIN_DISABLE", value: 0)
!1140 = !DIEnumerator(name: "EINT_DOMAIN_ENABLE", value: 1)
!1141 = !{!1142, !88, !1146}
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !764, line: 175, baseType: !1143)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !950}
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_number_t", file: !106, line: 821, baseType: !1094)
!1147 = !{!1082, !1148, !1167}
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "ini_state", scope: !1150, file: !1085, line: 134, type: !61, isLocal: true, isDefinition: true)
!1150 = distinct !DISubprogram(name: "hal_eint_init", scope: !1085, file: !1085, line: 130, type: !1151, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !1162)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!1153, !1146, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_status_t", file: !1088, line: 209, baseType: !1087)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !1088, line: 225, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1088, line: 222, size: 64, elements: !1158)
!1158 = !{!1159, !1161}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !1157, file: !1088, line: 223, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_trigger_mode_t", file: !1088, line: 200, baseType: !1129)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !1157, file: !1088, line: 224, baseType: !61, size: 32, offset: 32)
!1162 = !{!1163, !1164, !1165, !1166}
!1163 = !DILocalVariable(name: "eint_number", arg: 1, scope: !1150, file: !1085, line: 130, type: !1146)
!1164 = !DILocalVariable(name: "eint_config", arg: 2, scope: !1150, file: !1085, line: 130, type: !1154)
!1165 = !DILocalVariable(name: "status", scope: !1150, file: !1085, line: 132, type: !1153)
!1166 = !DILocalVariable(name: "mask", scope: !1150, file: !1085, line: 133, type: !61)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "eint_function_table", scope: !1084, file: !1085, line: 56, type: !1169, isLocal: true, isDefinition: true)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1170, size: 2048, elements: !376)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "eint_function_t", file: !1137, line: 44, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1137, line: 41, size: 64, elements: !1172)
!1172 = !{!1173, !1174}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "eint_callback", scope: !1171, file: !1137, line: 42, baseType: !152, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1171, file: !1137, line: 43, baseType: !88, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_REGISTER_T", file: !56, line: 2305, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2264, size: 4096, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1223}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_STA", scope: !1177, file: !56, line: 2265, baseType: !324, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1177, file: !56, line: 2266, baseType: !61, size: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "EITN_INTACK", scope: !1177, file: !56, line: 2267, baseType: !60, size: 32, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1177, file: !56, line: 2268, baseType: !61, size: 32, offset: 96)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_EEVT", scope: !1177, file: !56, line: 2269, baseType: !324, size: 32, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1177, file: !56, line: 2270, baseType: !1185, size: 96, offset: 160)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 96, elements: !1186)
!1186 = !{!1187}
!1187 = !DISubrange(count: 3)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_MASK", scope: !1177, file: !56, line: 2271, baseType: !324, size: 32, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1177, file: !56, line: 2272, baseType: !61, size: 32, offset: 288)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_MASK_SET", scope: !1177, file: !56, line: 2273, baseType: !60, size: 32, offset: 320)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1177, file: !56, line: 2274, baseType: !61, size: 32, offset: 352)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_MASK_CLR", scope: !1177, file: !56, line: 2275, baseType: !60, size: 32, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1177, file: !56, line: 2276, baseType: !1185, size: 96, offset: 416)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_WAKEUP_MASK", scope: !1177, file: !56, line: 2277, baseType: !324, size: 32, offset: 512)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1177, file: !56, line: 2278, baseType: !61, size: 32, offset: 544)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_WAKEUP_MASK_SET", scope: !1177, file: !56, line: 2280, baseType: !60, size: 32, offset: 576)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1177, file: !56, line: 2281, baseType: !61, size: 32, offset: 608)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_WAKEUP_MASK_CLR", scope: !1177, file: !56, line: 2282, baseType: !60, size: 32, offset: 640)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1177, file: !56, line: 2283, baseType: !1185, size: 96, offset: 672)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SENS", scope: !1177, file: !56, line: 2284, baseType: !324, size: 32, offset: 768)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1177, file: !56, line: 2285, baseType: !61, size: 32, offset: 800)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SENS_SET", scope: !1177, file: !56, line: 2286, baseType: !60, size: 32, offset: 832)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1177, file: !56, line: 2287, baseType: !61, size: 32, offset: 864)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SENS_CLR", scope: !1177, file: !56, line: 2288, baseType: !60, size: 32, offset: 896)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1177, file: !56, line: 2289, baseType: !1185, size: 96, offset: 928)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DUALEDGE_SENS", scope: !1177, file: !56, line: 2290, baseType: !324, size: 32, offset: 1024)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1177, file: !56, line: 2291, baseType: !61, size: 32, offset: 1056)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DUALEDGE_SENS_SET", scope: !1177, file: !56, line: 2292, baseType: !60, size: 32, offset: 1088)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1177, file: !56, line: 2293, baseType: !61, size: 32, offset: 1120)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DUALEDGE_SENS_CLR", scope: !1177, file: !56, line: 2294, baseType: !60, size: 32, offset: 1152)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1177, file: !56, line: 2295, baseType: !1185, size: 96, offset: 1184)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SOFT", scope: !1177, file: !56, line: 2296, baseType: !324, size: 32, offset: 1280)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1177, file: !56, line: 2297, baseType: !61, size: 32, offset: 1312)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SOFT_SET", scope: !1177, file: !56, line: 2298, baseType: !60, size: 32, offset: 1344)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1177, file: !56, line: 2299, baseType: !61, size: 32, offset: 1376)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SOFT_CLR", scope: !1177, file: !56, line: 2300, baseType: !60, size: 32, offset: 1408)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1177, file: !56, line: 2301, baseType: !1185, size: 96, offset: 1440)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DOMEN", scope: !1177, file: !56, line: 2302, baseType: !60, size: 32, offset: 1536)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1177, file: !56, line: 2303, baseType: !1220, size: 480, offset: 1568)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 480, elements: !1221)
!1221 = !{!1222}
!1222 = !DISubrange(count: 15)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CON", scope: !1177, file: !56, line: 2304, baseType: !1224, size: 2048, offset: 2048)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1225, size: 2048, elements: !1243)
!1225 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1226)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_CON_REGISTER_T", file: !56, line: 2261, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2259, size: 32, elements: !1228)
!1228 = !{!1229}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "CON_REGISTER", scope: !1227, file: !56, line: 2260, baseType: !1230, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_CON_T", file: !56, line: 2257, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !56, line: 2246, size: 32, elements: !1232)
!1232 = !{!1233, !1242}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CON_B", scope: !1231, file: !56, line: 2255, baseType: !1234, size: 32)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1231, file: !56, line: 2247, size: 32, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CNT", scope: !1234, file: !56, line: 2248, baseType: !61, size: 10, flags: DIFlagBitField, extraData: i64 0)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_POL", scope: !1234, file: !56, line: 2250, baseType: !61, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_PRESCALER", scope: !1234, file: !56, line: 2251, baseType: !61, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_EN", scope: !1234, file: !56, line: 2252, baseType: !61, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1234, file: !56, line: 2253, baseType: !61, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RSTDBC", scope: !1234, file: !56, line: 2254, baseType: !61, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CON_W", scope: !1231, file: !56, line: 2256, baseType: !61, size: 32)
!1243 = !{!1244}
!1244 = !DISubrange(count: 64)
!1245 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1247 = distinct !DIGlobalVariable(name: "priority_set", scope: !1248, file: !1249, line: 128, type: !61, isLocal: true, isDefinition: true)
!1248 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1249, file: !1249, line: 126, type: !1250, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !1335)
!1249 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !764, line: 158, baseType: !763)
!1253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1249, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1254, retainedTypes: !1255, globals: !1322, splitDebugInlining: false, nameTableKind: None)
!1254 = !{!763, !238}
!1255 = !{!950, !1256, !61, !1290, !1320}
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1258, line: 418, baseType: !1259)
!1258 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1258, line: 395, size: 1120, elements: !1260)
!1260 = !{!1261, !1262, !1263, !1264, !1265, !1266, !1267, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1279, !1280, !1281, !1283, !1287, !1289}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1259, file: !1258, line: 397, baseType: !324, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1259, file: !1258, line: 398, baseType: !60, size: 32, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1259, file: !1258, line: 399, baseType: !60, size: 32, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1259, file: !1258, line: 400, baseType: !60, size: 32, offset: 96)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1259, file: !1258, line: 401, baseType: !60, size: 32, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1259, file: !1258, line: 402, baseType: !60, size: 32, offset: 160)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1259, file: !1258, line: 403, baseType: !1268, size: 96, offset: 192)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 96, elements: !552)
!1269 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1259, file: !1258, line: 404, baseType: !60, size: 32, offset: 288)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1259, file: !1258, line: 405, baseType: !60, size: 32, offset: 320)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1259, file: !1258, line: 406, baseType: !60, size: 32, offset: 352)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1259, file: !1258, line: 407, baseType: !60, size: 32, offset: 384)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1259, file: !1258, line: 408, baseType: !60, size: 32, offset: 416)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1259, file: !1258, line: 409, baseType: !60, size: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1259, file: !1258, line: 410, baseType: !60, size: 32, offset: 480)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1259, file: !1258, line: 411, baseType: !1278, size: 64, offset: 512)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 64, elements: !508)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1259, file: !1258, line: 412, baseType: !324, size: 32, offset: 576)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1259, file: !1258, line: 413, baseType: !324, size: 32, offset: 608)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1259, file: !1258, line: 414, baseType: !1282, size: 128, offset: 640)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 128, elements: !506)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1259, file: !1258, line: 415, baseType: !1284, size: 160, offset: 768)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 160, elements: !1285)
!1285 = !{!1286}
!1286 = !DISubrange(count: 5)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1259, file: !1258, line: 416, baseType: !1288, size: 160, offset: 928)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1285)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1259, file: !1258, line: 417, baseType: !60, size: 32, offset: 1088)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1258, line: 378, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1258, line: 363, size: 28704, elements: !1293)
!1293 = !{!1294, !1296, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1311, !1315, !1319}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1292, file: !1258, line: 365, baseType: !1295, size: 256)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !840)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1292, file: !1258, line: 366, baseType: !1297, size: 768, offset: 256)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1298)
!1298 = !{!1299}
!1299 = !DISubrange(count: 24)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1292, file: !1258, line: 367, baseType: !1295, size: 256, offset: 1024)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1292, file: !1258, line: 368, baseType: !1297, size: 768, offset: 1280)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1292, file: !1258, line: 369, baseType: !1295, size: 256, offset: 2048)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1292, file: !1258, line: 370, baseType: !1297, size: 768, offset: 2304)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1292, file: !1258, line: 371, baseType: !1295, size: 256, offset: 3072)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1292, file: !1258, line: 372, baseType: !1297, size: 768, offset: 3328)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1292, file: !1258, line: 373, baseType: !1295, size: 256, offset: 4096)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1292, file: !1258, line: 374, baseType: !1308, size: 1792, offset: 4352)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1309)
!1309 = !{!1310}
!1310 = !DISubrange(count: 56)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1292, file: !1258, line: 375, baseType: !1312, size: 1920, offset: 6144)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 1920, elements: !1313)
!1313 = !{!1314}
!1314 = !DISubrange(count: 240)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1292, file: !1258, line: 376, baseType: !1316, size: 20608, offset: 8064)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1317)
!1317 = !{!1318}
!1318 = !DISubrange(count: 644)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1292, file: !1258, line: 377, baseType: !60, size: 32, offset: 28672)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1322 = !{!1323, !1324, !1332}
!1323 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1253, file: !1249, line: 119, type: !1326, isLocal: false, isDefinition: true)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1327, size: 4096, elements: !1243)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1249, line: 50, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1249, line: 47, size: 64, elements: !1329)
!1329 = !{!1330, !1331}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1328, file: !1249, line: 48, baseType: !1143, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1328, file: !1249, line: 49, baseType: !61, size: 32, offset: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1253, file: !1249, line: 52, type: !1334, isLocal: true, isDefinition: true)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !859, size: 2048, elements: !1243)
!1335 = !{!1336}
!1336 = !DILocalVariable(name: "i", scope: !1248, file: !1249, line: 129, type: !61)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "rtc_register", scope: !1339, file: !1340, line: 96, type: !1361, isLocal: false, isDefinition: true)
!1339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1340, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1341, retainedTypes: !1360, globals: !1442, splitDebugInlining: false, nameTableKind: None)
!1340 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_rtc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1341 = !{!1342, !1348, !1129, !1087, !1094}
!1342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1343, line: 399, baseType: !7, size: 32, elements: !1344)
!1343 = !DIFile(filename: "../../../../../driver/chip/inc/hal_rtc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1344 = !{!1345, !1346, !1347}
!1345 = !DIEnumerator(name: "HAL_RTC_STATUS_ERROR", value: -2)
!1346 = !DIEnumerator(name: "HAL_RTC_STATUS_INVALID_PARAM", value: -1)
!1347 = !DIEnumerator(name: "HAL_RTC_STATUS_OK", value: 0)
!1348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 749, baseType: !18, size: 32, elements: !1349)
!1349 = !{!1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359}
!1350 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_NONE", value: 0)
!1351 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_SECOND", value: 1)
!1352 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_MINUTE", value: 2)
!1353 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_HOUR", value: 3)
!1354 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_DAY", value: 4)
!1355 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_MONTH", value: 5)
!1356 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_YEAR", value: 6)
!1357 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_SECOND_1_2", value: 7)
!1358 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_SECOND_1_4", value: 8)
!1359 = !DIEnumerator(name: "HAL_RTC_TIME_NOTIFICATION_EVERY_SECOND_1_8", value: 9)
!1360 = !{!61, !88, !1361, !1427, !849, !18, !1428, !1431}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTC_REGISTER_T", file: !56, line: 2391, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2328, size: 992, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_BBPU", scope: !1363, file: !56, line: 2329, baseType: !1017, size: 16)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1363, file: !56, line: 2330, baseType: !1017, size: 16, offset: 16)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_IRQ_STA", scope: !1363, file: !56, line: 2331, baseType: !1017, size: 16, offset: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1363, file: !56, line: 2332, baseType: !1017, size: 16, offset: 48)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_IRQ_EN", scope: !1363, file: !56, line: 2333, baseType: !1017, size: 16, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1363, file: !56, line: 2334, baseType: !1017, size: 16, offset: 80)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_CII_EN", scope: !1363, file: !56, line: 2335, baseType: !1017, size: 16, offset: 96)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1363, file: !56, line: 2336, baseType: !1017, size: 16, offset: 112)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_MASK", scope: !1363, file: !56, line: 2337, baseType: !1017, size: 16, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1363, file: !56, line: 2338, baseType: !1017, size: 16, offset: 144)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_SEC", scope: !1363, file: !56, line: 2339, baseType: !1017, size: 16, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1363, file: !56, line: 2340, baseType: !1017, size: 16, offset: 176)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_MIN", scope: !1363, file: !56, line: 2341, baseType: !1017, size: 16, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1363, file: !56, line: 2342, baseType: !1017, size: 16, offset: 208)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_HOU", scope: !1363, file: !56, line: 2343, baseType: !1017, size: 16, offset: 224)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1363, file: !56, line: 2344, baseType: !1017, size: 16, offset: 240)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_DOM", scope: !1363, file: !56, line: 2345, baseType: !1017, size: 16, offset: 256)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1363, file: !56, line: 2346, baseType: !1017, size: 16, offset: 272)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_DOW", scope: !1363, file: !56, line: 2347, baseType: !1017, size: 16, offset: 288)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1363, file: !56, line: 2348, baseType: !1017, size: 16, offset: 304)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_MTH", scope: !1363, file: !56, line: 2349, baseType: !1017, size: 16, offset: 320)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1363, file: !56, line: 2350, baseType: !1017, size: 16, offset: 336)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_TC_YEA", scope: !1363, file: !56, line: 2351, baseType: !1017, size: 16, offset: 352)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1363, file: !56, line: 2352, baseType: !1017, size: 16, offset: 368)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_SEC", scope: !1363, file: !56, line: 2353, baseType: !1017, size: 16, offset: 384)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1363, file: !56, line: 2354, baseType: !1017, size: 16, offset: 400)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_MIN", scope: !1363, file: !56, line: 2355, baseType: !1017, size: 16, offset: 416)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1363, file: !56, line: 2356, baseType: !1017, size: 16, offset: 432)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_HOU", scope: !1363, file: !56, line: 2357, baseType: !1017, size: 16, offset: 448)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1363, file: !56, line: 2358, baseType: !1017, size: 16, offset: 464)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_DOM", scope: !1363, file: !56, line: 2359, baseType: !1017, size: 16, offset: 480)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1363, file: !56, line: 2360, baseType: !1017, size: 16, offset: 496)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_DOW", scope: !1363, file: !56, line: 2361, baseType: !1017, size: 16, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1363, file: !56, line: 2362, baseType: !1017, size: 16, offset: 528)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_MTH", scope: !1363, file: !56, line: 2363, baseType: !1017, size: 16, offset: 544)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1363, file: !56, line: 2364, baseType: !1017, size: 16, offset: 560)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AL_YEA", scope: !1363, file: !56, line: 2365, baseType: !1017, size: 16, offset: 576)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1363, file: !56, line: 2366, baseType: !1017, size: 16, offset: 592)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_OSC32CON", scope: !1363, file: !56, line: 2367, baseType: !1017, size: 16, offset: 608)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1363, file: !56, line: 2368, baseType: !1017, size: 16, offset: 624)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_POWERKEY1", scope: !1363, file: !56, line: 2369, baseType: !1017, size: 16, offset: 640)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1363, file: !56, line: 2370, baseType: !1017, size: 16, offset: 656)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_POWERKEY2", scope: !1363, file: !56, line: 2371, baseType: !1017, size: 16, offset: 672)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1363, file: !56, line: 2372, baseType: !1017, size: 16, offset: 688)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_PDN1", scope: !1363, file: !56, line: 2373, baseType: !1017, size: 16, offset: 704)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1363, file: !56, line: 2374, baseType: !1017, size: 16, offset: 720)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_PDN2", scope: !1363, file: !56, line: 2375, baseType: !1017, size: 16, offset: 736)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1363, file: !56, line: 2376, baseType: !1017, size: 16, offset: 752)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_SPAR0", scope: !1363, file: !56, line: 2377, baseType: !1017, size: 16, offset: 768)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1363, file: !56, line: 2378, baseType: !1017, size: 16, offset: 784)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_SPAR1", scope: !1363, file: !56, line: 2379, baseType: !1017, size: 16, offset: 800)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1363, file: !56, line: 2380, baseType: !1017, size: 16, offset: 816)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_PROT", scope: !1363, file: !56, line: 2381, baseType: !1017, size: 16, offset: 832)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1363, file: !56, line: 2382, baseType: !1017, size: 16, offset: 848)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_DIFF", scope: !1363, file: !56, line: 2383, baseType: !1017, size: 16, offset: 864)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1363, file: !56, line: 2384, baseType: !1017, size: 16, offset: 880)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_CALI", scope: !1363, file: !56, line: 2385, baseType: !1017, size: 16, offset: 896)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !1363, file: !56, line: 2386, baseType: !1017, size: 16, offset: 912)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_WRTGR", scope: !1363, file: !56, line: 2387, baseType: !1017, size: 16, offset: 928)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !1363, file: !56, line: 2388, baseType: !1017, size: 16, offset: 944)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_CON", scope: !1363, file: !56, line: 2389, baseType: !1017, size: 16, offset: 960)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !1363, file: !56, line: 2390, baseType: !1017, size: 16, offset: 976)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !62, line: 32, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !64, line: 55, baseType: !1430)
!1430 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_rtc_time_t", file: !106, line: 738, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !106, line: 730, size: 56, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_sec", scope: !1433, file: !106, line: 731, baseType: !159, size: 8)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_min", scope: !1433, file: !106, line: 732, baseType: !159, size: 8, offset: 8)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_hour", scope: !1433, file: !106, line: 733, baseType: !159, size: 8, offset: 16)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_day", scope: !1433, file: !106, line: 734, baseType: !159, size: 8, offset: 24)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_mon", scope: !1433, file: !106, line: 735, baseType: !159, size: 8, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_week", scope: !1433, file: !106, line: 736, baseType: !159, size: 8, offset: 40)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_year", scope: !1433, file: !106, line: 737, baseType: !159, size: 8, offset: 48)
!1442 = !{!1337, !1443, !1459, !1462, !1464, !1473, !1476, !1478, !1481, !1483, !1486, !1488, !1490, !1498}
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "abist_fqmtr_register", scope: !1339, file: !1340, line: 97, type: !1445, isLocal: false, isDefinition: true)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ABIST_FQMTR_REGISTER_T", file: !1447, line: 367, baseType: !1448)
!1447 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_rtc_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1447, line: 357, size: 144, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_CON0", scope: !1448, file: !1447, line: 358, baseType: !1017, size: 16)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1448, file: !1447, line: 359, baseType: !1017, size: 16, offset: 16)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_CON1", scope: !1448, file: !1447, line: 360, baseType: !1017, size: 16, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1448, file: !1447, line: 361, baseType: !1017, size: 16, offset: 48)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_CON2", scope: !1448, file: !1447, line: 362, baseType: !1017, size: 16, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1448, file: !1447, line: 363, baseType: !1017, size: 16, offset: 80)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_DATA", scope: !1448, file: !1447, line: 364, baseType: !1017, size: 16, offset: 96)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1448, file: !1447, line: 365, baseType: !1017, size: 16, offset: 112)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_DATA_MSB", scope: !1448, file: !1447, line: 366, baseType: !1017, size: 16, offset: 128)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "pmu_k_eosc_con0", scope: !1339, file: !1340, line: 98, type: !1461, isLocal: false, isDefinition: true)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "hw_version_code", scope: !1339, file: !1340, line: 99, type: !1461, isLocal: false, isDefinition: true)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "alarm_power_on_time", scope: !1466, file: !1340, line: 1567, type: !1432, isLocal: true, isDefinition: true)
!1466 = distinct !DISubprogram(name: "rtc_alarm_power_on_test", scope: !1340, file: !1340, line: 1565, type: !1467, scopeLine: 1566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !1470)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!1469, !1431}
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_rtc_status_t", file: !1343, line: 403, baseType: !1342)
!1470 = !{!1471, !1472}
!1471 = !DILocalVariable(name: "time", arg: 1, scope: !1466, file: !1340, line: 1565, type: !1431)
!1472 = !DILocalVariable(name: "rtc_get_time", scope: !1466, file: !1340, line: 1568, type: !1432)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "rtc_time_callback_function", scope: !1339, file: !1340, line: 86, type: !1475, isLocal: true, isDefinition: true)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_rtc_time_callback_t", file: !1343, line: 417, baseType: !152)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "rtc_time_user_data", scope: !1339, file: !1340, line: 87, type: !88, isLocal: true, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "rtc_alarm_callback_function", scope: !1339, file: !1340, line: 89, type: !1480, isLocal: true, isDefinition: true)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_rtc_alarm_callback_t", file: !1343, line: 423, baseType: !152)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "rtc_alarm_user_data", scope: !1339, file: !1340, line: 90, type: !88, isLocal: true, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "rtc_spare_register_backup", scope: !1339, file: !1340, line: 93, type: !1485, isLocal: true, isDefinition: true)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 104, elements: !860)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "rtc_irq_sta", scope: !1339, file: !1340, line: 94, type: !1018, isLocal: false, isDefinition: true)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "rtc_init_done", scope: !1339, file: !1340, line: 91, type: !91, isLocal: true, isDefinition: true)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "rtc_spare_register_table", scope: !1339, file: !1340, line: 107, type: !1492, isLocal: true, isDefinition: true)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 832, elements: !860)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtc_spare_register_information", file: !1340, line: 101, size: 64, elements: !1494)
!1494 = !{!1495, !1496, !1497}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1493, file: !1340, line: 102, baseType: !1427, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1493, file: !1340, line: 103, baseType: !1018, size: 16, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1493, file: !1340, line: 104, baseType: !1018, size: 16, offset: 48)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "rtc_in_test", scope: !1339, file: !1340, line: 92, type: !91, isLocal: true, isDefinition: true)
!1500 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1503, file: !1504, line: 55, type: !91, isLocal: false, isDefinition: true)
!1503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1505, retainedTypes: !1540, globals: !1575, splitDebugInlining: false, nameTableKind: None)
!1504 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1505 = !{!1506, !1514, !1519}
!1506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1507, line: 51, baseType: !18, size: 32, elements: !1508)
!1507 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1508 = !{!1509, !1510, !1511, !1512, !1513}
!1509 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1510 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1511 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1512 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1513 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1514 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1507, line: 62, baseType: !18, size: 32, elements: !1515)
!1515 = !{!1516, !1517, !1518}
!1516 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1517 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1518 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1519 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1520, line: 228, baseType: !18, size: 32, elements: !1521)
!1520 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1521 = !{!1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539}
!1522 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1523 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1524 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1525 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1526 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1527 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1528 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1529 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1530 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1531 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1532 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1533 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1534 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1535 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1536 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1537 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1538 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1539 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1540 = !{!1541, !1542, !1564, !849, !61, !18, !1570, !1427, !1572, !1574}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1545)
!1545 = !{!1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1544, file: !56, line: 2759, baseType: !60, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1544, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1544, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1544, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1544, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1544, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1544, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1544, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1544, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1544, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1544, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1544, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1544, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1544, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1544, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1544, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1544, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1544, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1566, file: !56, line: 2799, baseType: !60, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1566, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !161)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1575 = !{!1501, !1576, !1578, !1580, !1582, !1584, !1586, !1588, !1590, !1592, !1594}
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1503, file: !1504, line: 604, type: !159, isLocal: false, isDefinition: true)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1503, file: !1504, line: 605, type: !61, isLocal: false, isDefinition: true)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1503, file: !1504, line: 606, type: !61, isLocal: false, isDefinition: true)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1503, file: !1504, line: 607, type: !61, isLocal: false, isDefinition: true)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1503, file: !1504, line: 608, type: !61, isLocal: false, isDefinition: true)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1503, file: !1504, line: 609, type: !61, isLocal: false, isDefinition: true)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1503, file: !1504, line: 610, type: !61, isLocal: false, isDefinition: true)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1503, file: !1504, line: 611, type: !61, isLocal: false, isDefinition: true)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1503, file: !1504, line: 665, type: !61, isLocal: false, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1503, file: !1504, line: 666, type: !61, isLocal: false, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1598, file: !1599, line: 334, type: !91, isLocal: false, isDefinition: true)
!1598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1599, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1600, retainedTypes: !1768, globals: !1906, splitDebugInlining: false, nameTableKind: None)
!1599 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1600 = !{!1601, !1692, !1698, !1705, !1717, !1728, !1737, !1746, !1750, !1754}
!1601 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1602, line: 58, baseType: !7, size: 32, elements: !1603)
!1602 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691}
!1604 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1605 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1606 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1607 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1608 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1609 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1610 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1611 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1612 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1613 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1614 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1615 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1616 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1617 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1618 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1619 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1620 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1621 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1622 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1623 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1624 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1625 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1626 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1627 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1628 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1629 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1630 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1631 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1632 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1633 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1634 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1635 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1636 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1637 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1638 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1639 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1640 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1641 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1642 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1643 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1644 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1645 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1646 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1647 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1648 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1649 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1650 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1651 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1652 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1653 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1654 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1655 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1656 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1657 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1658 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1659 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1660 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1661 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1662 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1663 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1664 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1665 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1666 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1667 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1668 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1669 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1670 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1671 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1672 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1673 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1674 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1675 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1676 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1677 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1678 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1679 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1680 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1681 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1682 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1683 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1684 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1685 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1686 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1687 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1688 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1689 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1690 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1691 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1692 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1693, line: 81, baseType: !18, size: 32, elements: !1694)
!1693 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1694 = !{!1695, !1696, !1697}
!1695 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1696 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1697 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1698 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1599, line: 298, baseType: !18, size: 32, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1704}
!1700 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1701 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1702 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1703 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1704 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1706, line: 51, baseType: !18, size: 32, elements: !1707)
!1706 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1707 = !{!1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716}
!1708 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1709 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1710 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1711 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1712 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1713 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1714 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1715 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1716 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1717 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1718, line: 110, baseType: !7, size: 32, elements: !1719)
!1718 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1720 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1721 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1722 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1723 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1724 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1725 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1726 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1727 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1728 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1706, line: 73, baseType: !18, size: 32, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736}
!1730 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1731 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1732 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1733 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1734 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1735 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1736 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1737 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1706, line: 83, baseType: !18, size: 32, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743, !1744, !1745}
!1739 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1740 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1741 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1742 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1743 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1744 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1745 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1746 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1706, line: 98, baseType: !18, size: 32, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1749 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1750 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1693, line: 76, baseType: !18, size: 32, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1753 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1754 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1693, line: 208, baseType: !18, size: 32, elements: !1755)
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767}
!1756 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1757 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1758 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1759 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1760 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1761 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1762 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1763 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1764 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1765 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1766 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1767 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1768 = !{!61, !1541, !1427, !849, !1769, !1877, !1899, !88, !1905, !161}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1693, line: 193, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1693, line: 134, size: 1824, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1782, !1788, !1792, !1800, !1801, !1808, !1809, !1810, !1811, !1819, !1822, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1871, !1872, !1876}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1771, file: !1693, line: 136, baseType: !61, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1771, file: !1693, line: 137, baseType: !849, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1771, file: !1693, line: 138, baseType: !1776, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1777, line: 56, baseType: !1778)
!1777 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 54, size: 8, elements: !1780)
!1780 = !{!1781}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1779, file: !1777, line: 55, baseType: !159, size: 8)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1771, file: !1693, line: 139, baseType: !1783, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1777, line: 46, baseType: !1784)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 44, size: 8, elements: !1786)
!1786 = !{!1787}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1785, file: !1777, line: 45, baseType: !159, size: 8)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1771, file: !1693, line: 140, baseType: !1789, size: 8, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1790)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1791)
!1791 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1771, file: !1693, line: 143, baseType: !1793, size: 32, offset: 160)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1795, line: 146, baseType: !1796)
!1795 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 143, size: 64, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1796, file: !1795, line: 144, baseType: !61, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1796, file: !1795, line: 145, baseType: !61, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1771, file: !1693, line: 144, baseType: !849, size: 32, offset: 192)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1771, file: !1693, line: 145, baseType: !1802, size: 32, offset: 224)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1795, line: 152, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 149, size: 64, elements: !1805)
!1805 = !{!1806, !1807}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1804, file: !1795, line: 150, baseType: !61, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1804, file: !1795, line: 151, baseType: !61, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1771, file: !1693, line: 146, baseType: !849, size: 32, offset: 256)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1771, file: !1693, line: 147, baseType: !61, size: 32, offset: 288)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1771, file: !1693, line: 148, baseType: !849, size: 32, offset: 320)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1771, file: !1693, line: 151, baseType: !1812, size: 1024, offset: 352)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1813, size: 1024, elements: !1818)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1795, line: 170, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 167, size: 64, elements: !1815)
!1815 = !{!1816, !1817}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1814, file: !1795, line: 168, baseType: !61, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1814, file: !1795, line: 169, baseType: !61, size: 32, offset: 32)
!1818 = !{!841, !509}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1771, file: !1693, line: 155, baseType: !1820, size: 32, offset: 1376)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1706, line: 120, baseType: !159)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1771, file: !1693, line: 156, baseType: !1823, size: 32, offset: 1408)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1693, line: 124, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1693, line: 90, size: 200, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1825, file: !1693, line: 91, baseType: !159, size: 8)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1825, file: !1693, line: 92, baseType: !159, size: 8, offset: 8)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1825, file: !1693, line: 94, baseType: !159, size: 8, offset: 16)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1825, file: !1693, line: 95, baseType: !159, size: 8, offset: 24)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1825, file: !1693, line: 96, baseType: !159, size: 8, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1825, file: !1693, line: 98, baseType: !159, size: 8, offset: 40)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1825, file: !1693, line: 99, baseType: !159, size: 8, offset: 48)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1825, file: !1693, line: 100, baseType: !159, size: 8, offset: 56)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1825, file: !1693, line: 101, baseType: !159, size: 8, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1825, file: !1693, line: 103, baseType: !159, size: 8, offset: 72)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1825, file: !1693, line: 104, baseType: !159, size: 8, offset: 80)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1825, file: !1693, line: 106, baseType: !159, size: 8, offset: 88)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1825, file: !1693, line: 107, baseType: !159, size: 8, offset: 96)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1825, file: !1693, line: 108, baseType: !159, size: 8, offset: 104)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1825, file: !1693, line: 109, baseType: !159, size: 8, offset: 112)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1825, file: !1693, line: 110, baseType: !159, size: 8, offset: 120)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1825, file: !1693, line: 111, baseType: !159, size: 8, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1825, file: !1693, line: 112, baseType: !159, size: 8, offset: 136)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1825, file: !1693, line: 114, baseType: !159, size: 8, offset: 144)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1825, file: !1693, line: 115, baseType: !159, size: 8, offset: 152)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1825, file: !1693, line: 118, baseType: !159, size: 8, offset: 160)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1825, file: !1693, line: 119, baseType: !159, size: 8, offset: 168)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1825, file: !1693, line: 120, baseType: !159, size: 8, offset: 176)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1825, file: !1693, line: 121, baseType: !159, size: 8, offset: 184)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1825, file: !1693, line: 122, baseType: !159, size: 8, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1771, file: !1693, line: 157, baseType: !61, size: 32, offset: 1440)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1771, file: !1693, line: 158, baseType: !1018, size: 16, offset: 1472)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1771, file: !1693, line: 159, baseType: !1018, size: 16, offset: 1488)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1771, file: !1693, line: 163, baseType: !1018, size: 16, offset: 1504)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1771, file: !1693, line: 164, baseType: !1018, size: 16, offset: 1520)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1771, file: !1693, line: 167, baseType: !159, size: 8, offset: 1536)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1771, file: !1693, line: 168, baseType: !1859, size: 24, offset: 1544)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 24, elements: !1186)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1771, file: !1693, line: 169, baseType: !159, size: 8, offset: 1568)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1771, file: !1693, line: 170, baseType: !159, size: 8, offset: 1576)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1771, file: !1693, line: 173, baseType: !1018, size: 16, offset: 1584)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1771, file: !1693, line: 174, baseType: !61, size: 32, offset: 1600)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1771, file: !1693, line: 175, baseType: !61, size: 32, offset: 1632)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1771, file: !1693, line: 178, baseType: !91, size: 8, offset: 1664)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1771, file: !1693, line: 179, baseType: !91, size: 8, offset: 1672)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1771, file: !1693, line: 182, baseType: !1868, size: 32, offset: 1696)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!7, !88}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1771, file: !1693, line: 186, baseType: !1868, size: 32, offset: 1728)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1771, file: !1693, line: 187, baseType: !1873, size: 32, offset: 1760)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!7, !88, !61, !88, !61}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1771, file: !1693, line: 188, baseType: !1873, size: 32, offset: 1792)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1880)
!1880 = !{!1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1879, file: !56, line: 2759, baseType: !60, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1879, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1879, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1879, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1879, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1879, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1879, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1879, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1879, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1879, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1879, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1879, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1879, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1879, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1879, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1879, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1879, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1879, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1901, file: !56, line: 2799, baseType: !60, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1901, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1906 = !{!1596, !1907, !1909, !1911, !1916}
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1598, file: !1599, line: 382, type: !61, isLocal: false, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1598, file: !1599, line: 383, type: !61, isLocal: false, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1598, file: !1599, line: 369, type: !1913, isLocal: true, isDefinition: true)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1024, elements: !1914)
!1914 = !{!1915}
!1915 = !DISubrange(count: 128)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1598, file: !1599, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1918 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1921, file: !1975, line: 35, type: !1976, isLocal: false, isDefinition: true)
!1921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1922, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1923, retainedTypes: !1969, globals: !1970, splitDebugInlining: false, nameTableKind: None)
!1922 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1923 = !{!1924}
!1924 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1925, line: 77, baseType: !18, size: 32, elements: !1926)
!1925 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968}
!1927 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1928 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1929 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1930 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1931 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1932 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1933 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1934 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1935 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1936 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1937 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1938 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1939 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1940 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1941 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1942 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1943 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1944 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1945 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1946 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1947 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1948 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1949 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1950 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1951 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1952 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1953 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1954 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1955 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1956 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1957 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1958 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1959 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1960 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1961 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1962 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1963 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1964 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1965 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1966 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1967 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1968 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1969 = !{!88}
!1970 = !{!1919, !1971, !1973}
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1921, file: !1922, line: 96, type: !1430, isLocal: true, isDefinition: true)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1921, file: !1922, line: 94, type: !1430, isLocal: true, isDefinition: true)
!1975 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1922, line: 54, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1922, line: 51, size: 576, elements: !1979)
!1979 = !{!1980, !1990}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1978, file: !1922, line: 52, baseType: !1981, size: 96)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1925, line: 152, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1925, line: 144, size: 96, elements: !1983)
!1983 = !{!1984, !1986, !1988}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1982, file: !1925, line: 145, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1925, line: 61, baseType: !18)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1982, file: !1925, line: 146, baseType: !1987, size: 16, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1925, line: 62, baseType: !1020)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1982, file: !1925, line: 150, baseType: !1989, size: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1925, line: 127, baseType: !1924)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1978, file: !1922, line: 53, baseType: !1991, size: 480, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1992, line: 107, baseType: !1993)
!1992 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 103, size: 480, elements: !1994)
!1994 = !{!1995, !1996, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1993, file: !1992, line: 104, baseType: !18, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1993, file: !1992, line: 105, baseType: !18, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1993, file: !1992, line: 106, baseType: !1998, size: 400, offset: 64)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 400, elements: !1285)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1992, line: 100, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 92, size: 80, elements: !2001)
!2001 = !{!2002, !2003, !2004}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !2000, file: !1992, line: 93, baseType: !159, size: 8)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !2000, file: !1992, line: 94, baseType: !159, size: 8, offset: 8)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2000, file: !1992, line: 96, baseType: !2005, size: 64, offset: 16)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 64, elements: !840)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !2008, file: !2011, line: 96, type: !2012, isLocal: false, isDefinition: true)
!2008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2010, splitDebugInlining: false, nameTableKind: None)
!2009 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2010 = !{!2006}
!2011 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 152, elements: !2013)
!2013 = !{!2014}
!2014 = !DISubrange(count: 19)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "nor_egid", scope: !2017, file: !2018, line: 168, type: !2368, isLocal: false, isDefinition: true)
!2017 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2018, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2019, retainedTypes: !2030, globals: !2039, splitDebugInlining: false, nameTableKind: None)
!2018 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2019 = !{!2020, !1601, !1924}
!2020 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2021, line: 49, baseType: !18, size: 32, elements: !2022)
!2021 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029}
!2023 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!2024 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!2025 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!2026 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!2027 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!2028 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!2029 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!2030 = !{!2031, !61, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1602, line: 47, baseType: !161)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1795, line: 146, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 143, size: 64, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2035, file: !1795, line: 144, baseType: !61, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2035, file: !1795, line: 145, baseType: !61, size: 32, offset: 32)
!2039 = !{!2015, !2040, !2042, !2052, !2189, !2191, !2193, !2195, !2197, !2202, !2205, !2214, !2216, !2218, !2226, !2228, !2230, !2313, !2316, !2318, !2320, !2331, !2333, !2346}
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !2017, file: !2018, line: 94, type: !1320, isLocal: true, isDefinition: true)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "cmem_id", scope: !2017, file: !2018, line: 95, type: !2044, isLocal: false, isDefinition: true)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2046)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1992, line: 100, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 92, size: 80, elements: !2048)
!2048 = !{!2049, !2050, !2051}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !2047, file: !1992, line: 93, baseType: !159, size: 8)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !2047, file: !1992, line: 94, baseType: !159, size: 8, offset: 8)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2047, file: !1992, line: 96, baseType: !2005, size: 64, offset: 16)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !2017, file: !2018, line: 127, type: !2054, isLocal: false, isDefinition: true)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1795, line: 317, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1795, line: 237, size: 2720, elements: !2056)
!2056 = !{!2057, !2058, !2110, !2111, !2114, !2115, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2156, !2157, !2158, !2163, !2164, !2165, !2166, !2167, !2171, !2175, !2182, !2183, !2184, !2185, !2186, !2187, !2188}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !2055, file: !1795, line: 238, baseType: !61, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2055, file: !1795, line: 239, baseType: !2059, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1795, line: 121, baseType: !2061)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 105, size: 480, elements: !2062)
!2062 = !{!2063, !2067, !2068, !2072, !2076, !2080, !2081, !2085, !2086, !2087, !2088, !2093, !2098, !2102, !2106}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !2061, file: !1795, line: 106, baseType: !2064, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!7, !88, !88}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !2061, file: !1795, line: 107, baseType: !1868, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !2061, file: !1795, line: 108, baseType: !2069, size: 32, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!88, !88, !61, !61}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !2061, file: !1795, line: 109, baseType: !2073, size: 32, offset: 96)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!7, !88, !61}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !2061, file: !1795, line: 110, baseType: !2077, size: 32, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!7, !88, !88, !88, !61}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !2061, file: !1795, line: 111, baseType: !2073, size: 32, offset: 160)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !2061, file: !1795, line: 112, baseType: !2082, size: 32, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{!1320, !88, !61}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !2061, file: !1795, line: 113, baseType: !2073, size: 32, offset: 224)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !2061, file: !1795, line: 114, baseType: !2073, size: 32, offset: 256)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !2061, file: !1795, line: 115, baseType: !2073, size: 32, offset: 288)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !2061, file: !1795, line: 116, baseType: !2089, size: 32, offset: 320)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!7, !88, !7, !2092, !88, !2092}
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1602, line: 50, baseType: !18)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !2061, file: !1795, line: 117, baseType: !2094, size: 32, offset: 352)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!7, !88, !2097}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !2061, file: !1795, line: 118, baseType: !2099, size: 32, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!7, !88, !88, !61}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !2061, file: !1795, line: 119, baseType: !2103, size: 32, offset: 416)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!91, !88, !61}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !2061, file: !1795, line: 120, baseType: !2107, size: 32, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!7, !88, !61, !88}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2055, file: !1795, line: 240, baseType: !88, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !2055, file: !1795, line: 241, baseType: !2112, size: 32, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1602, line: 46, baseType: !1020)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !2055, file: !1795, line: 242, baseType: !2112, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2055, file: !1795, line: 243, baseType: !2116, size: 928, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1795, line: 99, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 90, size: 928, elements: !2118)
!2118 = !{!2119, !2120, !2122, !2123, !2124, !2125, !2126, !2127}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !2117, file: !1795, line: 91, baseType: !61, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2117, file: !1795, line: 92, baseType: !2121, size: 256, offset: 32)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !840)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !2117, file: !1795, line: 93, baseType: !2121, size: 256, offset: 288)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2117, file: !1795, line: 94, baseType: !2121, size: 256, offset: 544)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !2117, file: !1795, line: 95, baseType: !61, size: 32, offset: 800)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !2117, file: !1795, line: 96, baseType: !2113, size: 16, offset: 832)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !2117, file: !1795, line: 97, baseType: !61, size: 32, offset: 864)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !2117, file: !1795, line: 98, baseType: !61, size: 32, offset: 896)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !2055, file: !1795, line: 244, baseType: !2121, size: 256, offset: 1088)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !2055, file: !1795, line: 245, baseType: !2121, size: 256, offset: 1344)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !2055, file: !1795, line: 246, baseType: !61, size: 32, offset: 1600)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !2055, file: !1795, line: 247, baseType: !61, size: 32, offset: 1632)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !2055, file: !1795, line: 248, baseType: !61, size: 32, offset: 1664)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !2055, file: !1795, line: 249, baseType: !61, size: 32, offset: 1696)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !2055, file: !1795, line: 250, baseType: !61, size: 32, offset: 1728)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !2055, file: !1795, line: 252, baseType: !61, size: 32, offset: 1760)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !2055, file: !1795, line: 255, baseType: !61, size: 32, offset: 1792)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !2055, file: !1795, line: 256, baseType: !61, size: 32, offset: 1824)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !2055, file: !1795, line: 257, baseType: !61, size: 32, offset: 1856)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !2055, file: !1795, line: 261, baseType: !61, size: 32, offset: 1888)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !2055, file: !1795, line: 262, baseType: !61, size: 32, offset: 1920)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !2055, file: !1795, line: 263, baseType: !61, size: 32, offset: 1952)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !2055, file: !1795, line: 264, baseType: !61, size: 32, offset: 1984)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !2055, file: !1795, line: 265, baseType: !61, size: 32, offset: 2016)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !2055, file: !1795, line: 266, baseType: !61, size: 32, offset: 2048)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !2055, file: !1795, line: 267, baseType: !61, size: 32, offset: 2080)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !2055, file: !1795, line: 268, baseType: !61, size: 32, offset: 2112)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !2055, file: !1795, line: 270, baseType: !61, size: 32, offset: 2144)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !2055, file: !1795, line: 271, baseType: !61, size: 32, offset: 2176)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !2055, file: !1795, line: 272, baseType: !2150, size: 32, offset: 2208)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1795, line: 229, baseType: !2152)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 226, size: 64, elements: !2153)
!2153 = !{!2154, !2155}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !2152, file: !1795, line: 227, baseType: !61, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !2152, file: !1795, line: 228, baseType: !61, size: 32, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !2055, file: !1795, line: 273, baseType: !2031, size: 32, offset: 2240)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !2055, file: !1795, line: 274, baseType: !2031, size: 32, offset: 2272)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !2055, file: !1795, line: 276, baseType: !2159, size: 32, offset: 2304)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{null, !2162}
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !2055, file: !1795, line: 278, baseType: !61, size: 32, offset: 2336)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !2055, file: !1795, line: 280, baseType: !2159, size: 32, offset: 2368)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !2055, file: !1795, line: 281, baseType: !2159, size: 32, offset: 2400)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !2055, file: !1795, line: 283, baseType: !61, size: 32, offset: 2432)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !2055, file: !1795, line: 284, baseType: !2168, size: 32, offset: 2464)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!61, !2162}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !2055, file: !1795, line: 285, baseType: !2172, size: 32, offset: 2496)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 32)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!61, !2162, !61, !61}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !2055, file: !1795, line: 293, baseType: !2176, size: 32, offset: 2528)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1795, line: 162, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 159, size: 64, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2178, file: !1795, line: 160, baseType: !61, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !2178, file: !1795, line: 161, baseType: !61, size: 32, offset: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !2055, file: !1795, line: 295, baseType: !61, size: 32, offset: 2560)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !2055, file: !1795, line: 296, baseType: !61, size: 32, offset: 2592)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !2055, file: !1795, line: 297, baseType: !61, size: 32, offset: 2624)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !2055, file: !1795, line: 298, baseType: !2113, size: 16, offset: 2656)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !2055, file: !1795, line: 302, baseType: !2113, size: 16, offset: 2672)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !2055, file: !1795, line: 310, baseType: !91, size: 8, offset: 2688)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !2055, file: !1795, line: 313, baseType: !91, size: 8, offset: 2696)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !2017, file: !2018, line: 129, type: !61, isLocal: false, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !2017, file: !2018, line: 130, type: !61, isLocal: false, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !2017, file: !2018, line: 131, type: !61, isLocal: false, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !2017, file: !2018, line: 132, type: !1018, isLocal: true, isDefinition: true)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !2017, file: !2018, line: 136, type: !2199, isLocal: false, isDefinition: true)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 4096, elements: !2200)
!2200 = !{!2201}
!2201 = !DISubrange(count: 512)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !2017, file: !2018, line: 146, type: !2204, isLocal: true, isDefinition: true)
!2204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2034, size: 512, elements: !840)
!2205 = !DIGlobalVariableExpression(var: !2206, expr: !DIExpression())
!2206 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !2017, file: !2018, line: 152, type: !2207, isLocal: true, isDefinition: true)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2209)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1992, line: 116, baseType: !2210)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 113, size: 64, elements: !2211)
!2211 = !{!2212, !2213}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !2210, file: !1992, line: 114, baseType: !61, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !2210, file: !1992, line: 115, baseType: !61, size: 32, offset: 32)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !2017, file: !2018, line: 156, type: !61, isLocal: false, isDefinition: true)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !2017, file: !2018, line: 157, type: !61, isLocal: false, isDefinition: true)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "BankInfo", scope: !2017, file: !2018, line: 160, type: !2220, isLocal: true, isDefinition: true)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2221, size: 512, elements: !840)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1795, line: 152, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 149, size: 64, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2222, file: !1795, line: 150, baseType: !61, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2222, file: !1795, line: 151, baseType: !61, size: 32, offset: 32)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !2017, file: !2018, line: 173, type: !61, isLocal: false, isDefinition: true)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !2017, file: !2018, line: 176, type: !2060, isLocal: false, isDefinition: true)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "mtdflash", scope: !2017, file: !2018, line: 177, type: !2232, isLocal: false, isDefinition: true)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1693, line: 193, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1693, line: 134, size: 1824, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2243, !2249, !2250, !2251, !2252, !2254, !2255, !2256, !2257, !2264, !2265, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2233, file: !1693, line: 136, baseType: !61, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2233, file: !1693, line: 137, baseType: !849, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2233, file: !1693, line: 138, baseType: !2238, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1777, line: 56, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 54, size: 8, elements: !2241)
!2241 = !{!2242}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2240, file: !1777, line: 55, baseType: !159, size: 8)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2233, file: !1693, line: 139, baseType: !2244, size: 32, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1777, line: 46, baseType: !2245)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 44, size: 8, elements: !2247)
!2247 = !{!2248}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2246, file: !1777, line: 45, baseType: !159, size: 8)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2233, file: !1693, line: 140, baseType: !1789, size: 8, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2233, file: !1693, line: 143, baseType: !2033, size: 32, offset: 160)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2233, file: !1693, line: 144, baseType: !849, size: 32, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2233, file: !1693, line: 145, baseType: !2253, size: 32, offset: 224)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2233, file: !1693, line: 146, baseType: !849, size: 32, offset: 256)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2233, file: !1693, line: 147, baseType: !61, size: 32, offset: 288)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2233, file: !1693, line: 148, baseType: !849, size: 32, offset: 320)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2233, file: !1693, line: 151, baseType: !2258, size: 1024, offset: 352)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2259, size: 1024, elements: !1818)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1795, line: 170, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 167, size: 64, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2260, file: !1795, line: 168, baseType: !61, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2260, file: !1795, line: 169, baseType: !61, size: 32, offset: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !2233, file: !1693, line: 155, baseType: !1820, size: 32, offset: 1376)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !2233, file: !1693, line: 156, baseType: !2266, size: 32, offset: 1408)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1693, line: 124, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1693, line: 90, size: 200, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !2268, file: !1693, line: 91, baseType: !159, size: 8)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !2268, file: !1693, line: 92, baseType: !159, size: 8, offset: 8)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !2268, file: !1693, line: 94, baseType: !159, size: 8, offset: 16)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !2268, file: !1693, line: 95, baseType: !159, size: 8, offset: 24)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !2268, file: !1693, line: 96, baseType: !159, size: 8, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !2268, file: !1693, line: 98, baseType: !159, size: 8, offset: 40)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !2268, file: !1693, line: 99, baseType: !159, size: 8, offset: 48)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !2268, file: !1693, line: 100, baseType: !159, size: 8, offset: 56)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !2268, file: !1693, line: 101, baseType: !159, size: 8, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !2268, file: !1693, line: 103, baseType: !159, size: 8, offset: 72)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !2268, file: !1693, line: 104, baseType: !159, size: 8, offset: 80)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !2268, file: !1693, line: 106, baseType: !159, size: 8, offset: 88)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !2268, file: !1693, line: 107, baseType: !159, size: 8, offset: 96)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !2268, file: !1693, line: 108, baseType: !159, size: 8, offset: 104)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !2268, file: !1693, line: 109, baseType: !159, size: 8, offset: 112)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !2268, file: !1693, line: 110, baseType: !159, size: 8, offset: 120)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !2268, file: !1693, line: 111, baseType: !159, size: 8, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !2268, file: !1693, line: 112, baseType: !159, size: 8, offset: 136)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !2268, file: !1693, line: 114, baseType: !159, size: 8, offset: 144)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !2268, file: !1693, line: 115, baseType: !159, size: 8, offset: 152)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !2268, file: !1693, line: 118, baseType: !159, size: 8, offset: 160)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2268, file: !1693, line: 119, baseType: !159, size: 8, offset: 168)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !2268, file: !1693, line: 120, baseType: !159, size: 8, offset: 176)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !2268, file: !1693, line: 121, baseType: !159, size: 8, offset: 184)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2268, file: !1693, line: 122, baseType: !159, size: 8, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !2233, file: !1693, line: 157, baseType: !61, size: 32, offset: 1440)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !2233, file: !1693, line: 158, baseType: !1018, size: 16, offset: 1472)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !2233, file: !1693, line: 159, baseType: !1018, size: 16, offset: 1488)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !2233, file: !1693, line: 163, baseType: !1018, size: 16, offset: 1504)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !2233, file: !1693, line: 164, baseType: !1018, size: 16, offset: 1520)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !2233, file: !1693, line: 167, baseType: !159, size: 8, offset: 1536)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !2233, file: !1693, line: 168, baseType: !1859, size: 24, offset: 1544)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !2233, file: !1693, line: 169, baseType: !159, size: 8, offset: 1568)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !2233, file: !1693, line: 170, baseType: !159, size: 8, offset: 1576)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !2233, file: !1693, line: 173, baseType: !1018, size: 16, offset: 1584)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !2233, file: !1693, line: 174, baseType: !61, size: 32, offset: 1600)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !2233, file: !1693, line: 175, baseType: !61, size: 32, offset: 1632)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !2233, file: !1693, line: 178, baseType: !91, size: 8, offset: 1664)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !2233, file: !1693, line: 179, baseType: !91, size: 8, offset: 1672)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !2233, file: !1693, line: 182, baseType: !1868, size: 32, offset: 1696)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2233, file: !1693, line: 186, baseType: !1868, size: 32, offset: 1728)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2233, file: !1693, line: 187, baseType: !1873, size: 32, offset: 1760)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !2233, file: !1693, line: 188, baseType: !1873, size: 32, offset: 1792)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "StatusMap", scope: !2017, file: !2018, line: 178, type: !2315, isLocal: false, isDefinition: true)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1821, size: 64, elements: !840)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !2017, file: !2018, line: 179, type: !2267, isLocal: false, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !2017, file: !2018, line: 204, type: !2204, isLocal: true, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !2017, file: !2018, line: 205, type: !2322, isLocal: false, isDefinition: true)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2323, line: 93, baseType: !2324)
!2323 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2323, line: 83, size: 1056, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329, !2330}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !2324, file: !2323, line: 84, baseType: !61, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2324, file: !2323, line: 85, baseType: !2059, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2324, file: !2323, line: 86, baseType: !88, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2324, file: !2323, line: 87, baseType: !2116, size: 928, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !2324, file: !2323, line: 92, baseType: !91, size: 8, offset: 1024)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !2017, file: !2018, line: 208, type: !2232, isLocal: false, isDefinition: true)
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "nor_list", scope: !2017, file: !2018, line: 114, type: !2335, isLocal: true, isDefinition: true)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2337)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1992, line: 125, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 119, size: 1088, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343, !2345}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !2338, file: !1992, line: 120, baseType: !1018, size: 16)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !2338, file: !1992, line: 121, baseType: !1018, size: 16, offset: 16)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !2338, file: !1992, line: 122, baseType: !61, size: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !2338, file: !1992, line: 123, baseType: !2344, size: 512, offset: 64)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2209, size: 512, elements: !840)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2338, file: !1992, line: 124, baseType: !2220, size: 512, offset: 576)
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !2017, file: !2348, line: 42, type: !2349, isLocal: true, isDefinition: true)
!2348 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !2018, line: 66, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2018, line: 63, size: 5600, elements: !2352)
!2352 = !{!2353, !2360}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2351, file: !2018, line: 64, baseType: !2354, size: 96)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1925, line: 152, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1925, line: 144, size: 96, elements: !2356)
!2356 = !{!2357, !2358, !2359}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2355, file: !1925, line: 145, baseType: !1985, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2355, file: !1925, line: 146, baseType: !1987, size: 16, offset: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2355, file: !1925, line: 150, baseType: !1989, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2351, file: !2018, line: 65, baseType: !2361, size: 5504, offset: 96)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1992, line: 132, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 128, size: 5504, elements: !2363)
!2363 = !{!2364, !2365, !2366}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2362, file: !1992, line: 129, baseType: !18, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2362, file: !1992, line: 130, baseType: !18, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2362, file: !1992, line: 131, baseType: !2367, size: 5440, offset: 64)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2337, size: 5440, elements: !1285)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1777, line: 79, baseType: !2369)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 77, size: 8, elements: !2371)
!2371 = !{!2372}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2370, file: !1777, line: 78, baseType: !159, size: 8)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2374 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2375, file: !2376, line: 82, type: !7, isLocal: true, isDefinition: true)
!2375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2377, retainedTypes: !2383, globals: !2428, splitDebugInlining: false, nameTableKind: None)
!2376 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2377 = !{!1717, !1601, !2378}
!2378 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1718, line: 123, baseType: !18, size: 32, elements: !2379)
!2379 = !{!2380, !2381, !2382}
!2380 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2381 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2382 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2383 = !{!61, !2384, !88, !849}
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1795, line: 190, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 173, size: 1376, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2396, !2402, !2403, !2410, !2411, !2418, !2419, !2420, !2421}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2386, file: !1795, line: 174, baseType: !61, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2386, file: !1795, line: 175, baseType: !2031, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2386, file: !1795, line: 176, baseType: !2391, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1777, line: 56, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 54, size: 8, elements: !2394)
!2394 = !{!2395}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2393, file: !1777, line: 55, baseType: !159, size: 8)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2386, file: !1795, line: 177, baseType: !2397, size: 32, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1777, line: 46, baseType: !2398)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 44, size: 8, elements: !2400)
!2400 = !{!2401}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2399, file: !1777, line: 45, baseType: !159, size: 8)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2386, file: !1795, line: 178, baseType: !1789, size: 8, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2386, file: !1795, line: 180, baseType: !2404, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1795, line: 146, baseType: !2406)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 143, size: 64, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2406, file: !1795, line: 144, baseType: !61, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2406, file: !1795, line: 145, baseType: !61, size: 32, offset: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2386, file: !1795, line: 181, baseType: !2031, size: 32, offset: 192)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2386, file: !1795, line: 182, baseType: !2412, size: 32, offset: 224)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1795, line: 152, baseType: !2414)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 149, size: 64, elements: !2415)
!2415 = !{!2416, !2417}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2414, file: !1795, line: 150, baseType: !61, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2414, file: !1795, line: 151, baseType: !61, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2386, file: !1795, line: 183, baseType: !2031, size: 32, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2386, file: !1795, line: 184, baseType: !61, size: 32, offset: 288)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2386, file: !1795, line: 185, baseType: !2031, size: 32, offset: 320)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2386, file: !1795, line: 188, baseType: !2422, size: 1024, offset: 352)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2423, size: 1024, elements: !1818)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1795, line: 170, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 167, size: 64, elements: !2425)
!2425 = !{!2426, !2427}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2424, file: !1795, line: 168, baseType: !61, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2424, file: !1795, line: 169, baseType: !61, size: 32, offset: 32)
!2428 = !{!2429, !2430}
!2429 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2375, file: !2376, line: 432, type: !2432, isLocal: true, isDefinition: true)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1718, line: 119, baseType: !1717)
!2433 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2436, file: !2437, line: 60, type: !61, isLocal: false, isDefinition: true)
!2436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2438, retainedTypes: !2439, globals: !2440, splitDebugInlining: false, nameTableKind: None)
!2437 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2438 = !{!97}
!2439 = !{!88, !61}
!2440 = !{!2434, !2441, !2443, !2445, !2447, !2449, !2503, !2505}
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2436, file: !2437, line: 61, type: !61, isLocal: false, isDefinition: true)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2436, file: !2437, line: 107, type: !61, isLocal: false, isDefinition: true)
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2436, file: !2437, line: 132, type: !91, isLocal: false, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2436, file: !2437, line: 133, type: !91, isLocal: false, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "replaced", scope: !2451, file: !2437, line: 139, type: !61, isLocal: true, isDefinition: true)
!2451 = distinct !DISubprogram(name: "LookupAddress", scope: !2437, file: !2437, line: 135, type: !2452, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !2454)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!61, !88, !61}
!2454 = !{!2455, !2456, !2457, !2502}
!2455 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2451, file: !2437, line: 135, type: !88)
!2456 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2451, file: !2437, line: 135, type: !61)
!2457 = !DILocalVariable(name: "D", scope: !2451, file: !2437, line: 137, type: !2458)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1795, line: 190, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 173, size: 1376, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2470, !2476, !2477, !2484, !2485, !2492, !2493, !2494, !2495}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2460, file: !1795, line: 174, baseType: !61, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2460, file: !1795, line: 175, baseType: !2031, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2460, file: !1795, line: 176, baseType: !2465, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1777, line: 56, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 54, size: 8, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2467, file: !1777, line: 55, baseType: !159, size: 8)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2460, file: !1795, line: 177, baseType: !2471, size: 32, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1777, line: 46, baseType: !2472)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 44, size: 8, elements: !2474)
!2474 = !{!2475}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2473, file: !1777, line: 45, baseType: !159, size: 8)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2460, file: !1795, line: 178, baseType: !1789, size: 8, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2460, file: !1795, line: 180, baseType: !2478, size: 32, offset: 160)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1795, line: 146, baseType: !2480)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 143, size: 64, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2480, file: !1795, line: 144, baseType: !61, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2480, file: !1795, line: 145, baseType: !61, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2460, file: !1795, line: 181, baseType: !2031, size: 32, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2460, file: !1795, line: 182, baseType: !2486, size: 32, offset: 224)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1795, line: 152, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 149, size: 64, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2488, file: !1795, line: 150, baseType: !61, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2488, file: !1795, line: 151, baseType: !61, size: 32, offset: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2460, file: !1795, line: 183, baseType: !2031, size: 32, offset: 256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2460, file: !1795, line: 184, baseType: !61, size: 32, offset: 288)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2460, file: !1795, line: 185, baseType: !2031, size: 32, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2460, file: !1795, line: 188, baseType: !2496, size: 1024, offset: 352)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2497, size: 1024, elements: !1818)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1795, line: 170, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 167, size: 64, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2498, file: !1795, line: 168, baseType: !61, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2498, file: !1795, line: 169, baseType: !61, size: 32, offset: 32)
!2502 = !DILocalVariable(name: "addr", scope: !2451, file: !2437, line: 138, type: !61)
!2503 = !DIGlobalVariableExpression(var: !2504, expr: !DIExpression())
!2504 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2451, file: !2437, line: 140, type: !61, isLocal: true, isDefinition: true)
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2451, file: !2437, line: 141, type: !61, isLocal: true, isDefinition: true)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2508 = distinct !DIGlobalVariable(name: "init", scope: !2509, file: !2510, line: 94, type: !161, isLocal: true, isDefinition: true)
!2509 = distinct !DISubprogram(name: "pmu_init_mt6385", scope: !2510, file: !2510, line: 92, type: !343, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !2659)
!2510 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2510, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2512, retainedTypes: !2621, globals: !2626, splitDebugInlining: false, nameTableKind: None)
!2512 = !{!2513, !2518, !2523, !1129, !1094, !2527, !2532, !2538, !2573, !2579, !2596, !2606, !2612, !2617}
!2513 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2514, line: 58, baseType: !18, size: 32, elements: !2515)
!2514 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_pmic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2515 = !{!2516, !2517}
!2516 = !DIEnumerator(name: "PMIC_I2C_MASTER", value: 0)
!2517 = !DIEnumerator(name: "PMIC_I2C_MASTER_MAX", value: 1)
!2518 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 118, baseType: !18, size: 32, elements: !2520)
!2519 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2520 = !{!2521, !2522}
!2521 = !DIEnumerator(name: "PMIC_UNLOCK_KEY", value: 0)
!2522 = !DIEnumerator(name: "PMIC_LOCK_KEY", value: 1)
!2523 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 113, baseType: !18, size: 32, elements: !2524)
!2524 = !{!2525, !2526}
!2525 = !DIEnumerator(name: "PMIC_LEAVE_OVR_MODE", value: 0)
!2526 = !DIEnumerator(name: "PMIC_ENTER_OVR_MODE", value: 1)
!2527 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2528, line: 52, baseType: !18, size: 32, elements: !2529)
!2528 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2529 = !{!2530, !2531}
!2530 = !DIEnumerator(name: "PMU_NOT_INIT", value: 0)
!2531 = !DIEnumerator(name: "PMU_INIT", value: 1)
!2532 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2528, line: 94, baseType: !7, size: 32, elements: !2533)
!2533 = !{!2534, !2535, !2536, !2537}
!2534 = !DIEnumerator(name: "PMU_STATUS_ERROR_EINT_NUMBER", value: -3)
!2535 = !DIEnumerator(name: "PMU_STATUS_INVALID_PARAMETER", value: -2)
!2536 = !DIEnumerator(name: "PMU_STATUS_ERROR", value: -1)
!2537 = !DIEnumerator(name: "PMU_STATUS_SUCCESS", value: 0)
!2538 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2528, line: 57, baseType: !18, size: 32, elements: !2539)
!2539 = !{!2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572}
!2540 = !DIEnumerator(name: "PMU_INT_ALDO_OC", value: 0)
!2541 = !DIEnumerator(name: "PMU_INT_ALDO_PG", value: 1)
!2542 = !DIEnumerator(name: "PMU_INT_DLDO_OC", value: 2)
!2543 = !DIEnumerator(name: "PMU_INT_DLDO_PG", value: 3)
!2544 = !DIEnumerator(name: "PMU_INT_VC_BUCK_OC", value: 4)
!2545 = !DIEnumerator(name: "PMU_INT_VCORE_PG", value: 5)
!2546 = !DIEnumerator(name: "PMU_INT_VC_LDO_OC", value: 6)
!2547 = !DIEnumerator(name: "PMU_INT_PKEYLP", value: 7)
!2548 = !DIEnumerator(name: "PMU_INT_THM1", value: 8)
!2549 = !DIEnumerator(name: "PMU_INT_THM2", value: 9)
!2550 = !DIEnumerator(name: "PMU_INT_AXPKEY", value: 10)
!2551 = !DIEnumerator(name: "PMU_INT_PWRKEY", value: 11)
!2552 = !DIEnumerator(name: "PMU_INT_CHGOV", value: 12)
!2553 = !DIEnumerator(name: "PMU_INT_CHRDET", value: 13)
!2554 = !DIEnumerator(name: "PMU_INT_THR_H", value: 14)
!2555 = !DIEnumerator(name: "PMU_INT_THR_L", value: 15)
!2556 = !DIEnumerator(name: "PMU_INT_OVER110", value: 16)
!2557 = !DIEnumerator(name: "PMU_INT_OVER40", value: 17)
!2558 = !DIEnumerator(name: "PMU_INT_PSW_PG", value: 18)
!2559 = !DIEnumerator(name: "PMU_INT_BAT_H", value: 19)
!2560 = !DIEnumerator(name: "PMU_INT_BAT_L", value: 20)
!2561 = !DIEnumerator(name: "PMU_INT_VBATON_HV_LV", value: 21)
!2562 = !DIEnumerator(name: "PMU_INT_VBAT_UNDET_LV", value: 22)
!2563 = !DIEnumerator(name: "PMU_INT_BVALID_DET_LV", value: 23)
!2564 = !DIEnumerator(name: "PMU_INT_CHRWDT_LV", value: 24)
!2565 = !DIEnumerator(name: "PMU_INT_HOT_LV", value: 25)
!2566 = !DIEnumerator(name: "PMU_INT_WARM_LV", value: 26)
!2567 = !DIEnumerator(name: "PMU_INT_COOL_LV", value: 27)
!2568 = !DIEnumerator(name: "PMU_INT_COLD_LV", value: 28)
!2569 = !DIEnumerator(name: "PMU_INT_IMP_LV", value: 29)
!2570 = !DIEnumerator(name: "PMU_INT_NAG_C_LV", value: 30)
!2571 = !DIEnumerator(name: "PMU_INT_AD_LBAT_LV", value: 31)
!2572 = !DIEnumerator(name: "PMU_INT_MAX", value: 32)
!2573 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2528, line: 45, baseType: !18, size: 32, elements: !2574)
!2574 = !{!2575, !2576, !2577, !2578}
!2575 = !DIEnumerator(name: "PMU_NONE", value: 0)
!2576 = !DIEnumerator(name: "PMU_EDGE_RISING", value: 1)
!2577 = !DIEnumerator(name: "PMU_EDGE_FALLING", value: 2)
!2578 = !DIEnumerator(name: "PMU_EDGE_FALLING_AND_RISING", value: 3)
!2579 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 44, baseType: !18, size: 32, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2581 = !DIEnumerator(name: "PMIC_VCLDO", value: 0)
!2582 = !DIEnumerator(name: "PMIC_VIO18", value: 1)
!2583 = !DIEnumerator(name: "PMIC_VSF", value: 2)
!2584 = !DIEnumerator(name: "PMIC_VIO28", value: 3)
!2585 = !DIEnumerator(name: "PMIC_VDIG18", value: 4)
!2586 = !DIEnumerator(name: "PMIC_VA18", value: 5)
!2587 = !DIEnumerator(name: "PMIC_VUSB", value: 6)
!2588 = !DIEnumerator(name: "PMIC_VBT", value: 7)
!2589 = !DIEnumerator(name: "PMIC_VA28", value: 8)
!2590 = !DIEnumerator(name: "PMIC_VMC", value: 9)
!2591 = !DIEnumerator(name: "PMIC_VCAMA", value: 10)
!2592 = !DIEnumerator(name: "PMIC_VIBR", value: 11)
!2593 = !DIEnumerator(name: "PMIC_SWXM", value: 12)
!2594 = !DIEnumerator(name: "PMIC_SWDP", value: 13)
!2595 = !DIEnumerator(name: "PMIC_SWMP", value: 14)
!2596 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 62, baseType: !18, size: 32, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605}
!2598 = !DIEnumerator(name: "PMIC_PSI_OVR", value: 0)
!2599 = !DIEnumerator(name: "PMIC_PSI_HP", value: 1)
!2600 = !DIEnumerator(name: "PMIC_PSI_LP", value: 2)
!2601 = !DIEnumerator(name: "PMIC_PSI_S0", value: 3)
!2602 = !DIEnumerator(name: "PMIC_PSI_S1", value: 4)
!2603 = !DIEnumerator(name: "PMIC_PSI_OFF", value: 5)
!2604 = !DIEnumerator(name: "PMIC_PSI_SLP", value: 6)
!2605 = !DIEnumerator(name: "PMIC_PSI_ACT", value: 7)
!2606 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 73, baseType: !18, size: 32, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611}
!2608 = !DIEnumerator(name: "PMIC_LDO_PMOD_NORMAL", value: 0)
!2609 = !DIEnumerator(name: "PMIC_LDO_PMOD_LITE", value: 1)
!2610 = !DIEnumerator(name: "PMIC_LDO_PMOD_LP", value: 2)
!2611 = !DIEnumerator(name: "PMIC_LDO_PMOD_ULP", value: 3)
!2612 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 80, baseType: !18, size: 32, elements: !2613)
!2613 = !{!2614, !2615, !2616}
!2614 = !DIEnumerator(name: "PMIC_SLP_WKUP_HW_CTL", value: 0)
!2615 = !DIEnumerator(name: "PMIC_SLP_WKUP_SW_CTL", value: 1)
!2616 = !DIEnumerator(name: "PMIC_SLP_WKUP_AON", value: 2)
!2617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 86, baseType: !18, size: 32, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIEnumerator(name: "PMIC_VR_CTL_DISABLE", value: 0)
!2620 = !DIEnumerator(name: "PMIC_VR_CTL_ENABLE", value: 1)
!2621 = !{!88, !161, !2622, !2623, !2624, !7, !2625}
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_PSI", file: !2519, line: 71, baseType: !2596)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_PMOD", file: !2519, line: 78, baseType: !2606)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SLP_WKUP_MODE", file: !2519, line: 84, baseType: !2612)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR_CTL", file: !2519, line: 89, baseType: !2617)
!2626 = !{!2627, !2628, !2634, !2637, !2639, !2652, !2657}
!2627 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2628 = !DIGlobalVariableExpression(var: !2629, expr: !DIExpression())
!2629 = distinct !DIGlobalVariable(name: "index", scope: !2630, file: !2510, line: 293, type: !18, isLocal: true, isDefinition: true)
!2630 = distinct !DISubprogram(name: "pmu_eint_handler", scope: !2510, file: !2510, line: 291, type: !153, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !2631)
!2631 = !{!2632, !2633}
!2632 = !DILocalVariable(name: "parameter", arg: 1, scope: !2630, file: !2510, line: 291, type: !88)
!2633 = !DILocalVariable(name: "mask", scope: !2630, file: !2510, line: 295, type: !18)
!2634 = !DIGlobalVariableExpression(var: !2635, expr: !DIExpression())
!2635 = distinct !DIGlobalVariable(name: "int_sts", scope: !2630, file: !2510, line: 294, type: !2636, isLocal: true, isDefinition: true)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 224, elements: !646)
!2637 = !DIGlobalVariableExpression(var: !2638, expr: !DIExpression())
!2638 = distinct !DIGlobalVariable(name: "trigger_staus", scope: !2630, file: !2510, line: 294, type: !18, isLocal: true, isDefinition: true)
!2639 = !DIGlobalVariableExpression(var: !2640, expr: !DIExpression())
!2640 = distinct !DIGlobalVariable(name: "pmu_function_table", scope: !2511, file: !2510, line: 90, type: !2641, isLocal: false, isDefinition: true)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2642, size: 3072, elements: !376)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_function_t", file: !2528, line: 106, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2528, line: 101, size: 96, elements: !2644)
!2644 = !{!2645, !2649, !2650, !2651}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_callback", scope: !2643, file: !2528, line: 102, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{null, !159, !88}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2643, file: !2528, line: 103, baseType: !88, size: 32, offset: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !2643, file: !2528, line: 104, baseType: !159, size: 8, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "init_status", scope: !2643, file: !2528, line: 105, baseType: !91, size: 8, offset: 72)
!2652 = !DIGlobalVariableExpression(var: !2653, expr: !DIExpression())
!2653 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E1", scope: !2511, file: !2510, line: 59, type: !2654, isLocal: true, isDefinition: true)
!2654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 640, elements: !2655)
!2655 = !{!2656, !841}
!2656 = !DISubrange(count: 10)
!2657 = !DIGlobalVariableExpression(var: !2658, expr: !DIExpression())
!2658 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E2", scope: !2511, file: !2510, line: 72, type: !2654, isLocal: true, isDefinition: true)
!2659 = !{!2660, !2661, !2662}
!2660 = !DILocalVariable(name: "id_l", scope: !2509, file: !2510, line: 95, type: !159)
!2661 = !DILocalVariable(name: "id_h", scope: !2509, file: !2510, line: 95, type: !159)
!2662 = !DILocalVariable(name: "config", scope: !2509, file: !2510, line: 96, type: !2663)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !2514, line: 92, baseType: !2664)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2514, line: 90, size: 32, elements: !2665)
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !2664, file: !2514, line: 91, baseType: !61, size: 32)
!2667 = !DIGlobalVariableExpression(var: !2668, expr: !DIExpression())
!2668 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2669, file: !2670, line: 44, type: !2816, isLocal: false, isDefinition: true)
!2669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2670, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2671, retainedTypes: !2677, globals: !2678, splitDebugInlining: false, nameTableKind: None)
!2670 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2671 = !{!2672}
!2672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2673, line: 40, baseType: !18, size: 32, elements: !2674)
!2673 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2674 = !{!2675, !2676}
!2675 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2676 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2677 = !{!1574}
!2678 = !{!2667, !2679, !2681, !2683, !2685, !2786, !2788, !2790, !2792, !2794, !2796, !2798, !2800, !2802, !2804, !2806, !2808, !2810, !2812, !2814}
!2679 = !DIGlobalVariableExpression(var: !2680, expr: !DIExpression())
!2680 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2669, file: !2670, line: 65, type: !61, isLocal: false, isDefinition: true)
!2681 = !DIGlobalVariableExpression(var: !2682, expr: !DIExpression())
!2682 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2669, file: !2670, line: 66, type: !61, isLocal: false, isDefinition: true)
!2683 = !DIGlobalVariableExpression(var: !2684, expr: !DIExpression())
!2684 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2669, file: !2670, line: 67, type: !61, isLocal: false, isDefinition: true)
!2685 = !DIGlobalVariableExpression(var: !2686, expr: !DIExpression())
!2686 = distinct !DIGlobalVariable(name: "emi_register", scope: !2669, file: !2670, line: 83, type: !2687, isLocal: false, isDefinition: true)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2689)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2690)
!2690 = !{!2691, !2695, !2696, !2697, !2698, !2702, !2703, !2705, !2706, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2689, file: !56, line: 2448, baseType: !2692, size: 768)
!2692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 768, elements: !2693)
!2693 = !{!2694}
!2694 = !DISubrange(count: 96)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2689, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2689, file: !56, line: 2450, baseType: !1268, size: 96, offset: 800)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2689, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2689, file: !56, line: 2452, baseType: !2699, size: 160, offset: 928)
!2699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 160, elements: !2700)
!2700 = !{!2701}
!2701 = !DISubrange(count: 20)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2689, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2689, file: !56, line: 2454, baseType: !2704, size: 32, offset: 1120)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 32, elements: !506)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2689, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2689, file: !56, line: 2456, baseType: !2707, size: 480, offset: 1184)
!2707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 480, elements: !2708)
!2708 = !{!2709}
!2709 = !DISubrange(count: 60)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2689, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2689, file: !56, line: 2458, baseType: !2704, size: 32, offset: 1696)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2689, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2689, file: !56, line: 2460, baseType: !2704, size: 32, offset: 1760)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2689, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2689, file: !56, line: 2462, baseType: !2699, size: 160, offset: 1824)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2689, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2689, file: !56, line: 2464, baseType: !2704, size: 32, offset: 2016)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2689, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2689, file: !56, line: 2466, baseType: !2704, size: 32, offset: 2080)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2689, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2689, file: !56, line: 2468, baseType: !2704, size: 32, offset: 2144)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2689, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2689, file: !56, line: 2470, baseType: !2724, size: 224, offset: 2208)
!2724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 224, elements: !2725)
!2725 = !{!2726}
!2726 = !DISubrange(count: 28)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2689, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2689, file: !56, line: 2472, baseType: !2704, size: 32, offset: 2464)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2689, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2689, file: !56, line: 2474, baseType: !1268, size: 96, offset: 2528)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2689, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2689, file: !56, line: 2476, baseType: !2704, size: 32, offset: 2656)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2689, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2689, file: !56, line: 2478, baseType: !2704, size: 32, offset: 2720)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2689, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2689, file: !56, line: 2480, baseType: !2704, size: 32, offset: 2784)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2689, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2689, file: !56, line: 2482, baseType: !1268, size: 96, offset: 2848)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2689, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2689, file: !56, line: 2484, baseType: !2704, size: 32, offset: 2976)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2689, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2689, file: !56, line: 2486, baseType: !2704, size: 32, offset: 3040)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2689, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2689, file: !56, line: 2488, baseType: !2699, size: 160, offset: 3104)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2689, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2689, file: !56, line: 2490, baseType: !2704, size: 32, offset: 3296)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2689, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2689, file: !56, line: 2492, baseType: !2749, size: 736, offset: 3360)
!2749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 736, elements: !2750)
!2750 = !{!2751}
!2751 = !DISubrange(count: 92)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2689, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2689, file: !56, line: 2494, baseType: !2704, size: 32, offset: 4128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2689, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2689, file: !56, line: 2496, baseType: !2704, size: 32, offset: 4192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2689, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2689, file: !56, line: 2498, baseType: !2704, size: 32, offset: 4256)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2689, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2689, file: !56, line: 2500, baseType: !2704, size: 32, offset: 4320)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2689, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2689, file: !56, line: 2502, baseType: !2704, size: 32, offset: 4384)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2689, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2689, file: !56, line: 2504, baseType: !2704, size: 32, offset: 4448)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2689, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2689, file: !56, line: 2506, baseType: !2704, size: 32, offset: 4512)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2689, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2689, file: !56, line: 2508, baseType: !2704, size: 32, offset: 4576)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2689, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2689, file: !56, line: 2510, baseType: !2707, size: 480, offset: 4640)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2689, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2689, file: !56, line: 2512, baseType: !2772, size: 992, offset: 5152)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 992, elements: !2773)
!2773 = !{!2774}
!2774 = !DISubrange(count: 124)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2689, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2689, file: !56, line: 2514, baseType: !2704, size: 32, offset: 6176)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2689, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2689, file: !56, line: 2516, baseType: !2704, size: 32, offset: 6240)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2689, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2689, file: !56, line: 2518, baseType: !2704, size: 32, offset: 6304)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2689, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2689, file: !56, line: 2520, baseType: !2699, size: 160, offset: 6368)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2689, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2689, file: !56, line: 2522, baseType: !2699, size: 160, offset: 6560)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2689, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2786 = !DIGlobalVariableExpression(var: !2787, expr: !DIExpression())
!2787 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2669, file: !2670, line: 485, type: !60, isLocal: false, isDefinition: true)
!2788 = !DIGlobalVariableExpression(var: !2789, expr: !DIExpression())
!2789 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2669, file: !2670, line: 68, type: !61, isLocal: false, isDefinition: true)
!2790 = !DIGlobalVariableExpression(var: !2791, expr: !DIExpression())
!2791 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2669, file: !2670, line: 69, type: !61, isLocal: false, isDefinition: true)
!2792 = !DIGlobalVariableExpression(var: !2793, expr: !DIExpression())
!2793 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2669, file: !2670, line: 70, type: !61, isLocal: false, isDefinition: true)
!2794 = !DIGlobalVariableExpression(var: !2795, expr: !DIExpression())
!2795 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2669, file: !2670, line: 71, type: !61, isLocal: false, isDefinition: true)
!2796 = !DIGlobalVariableExpression(var: !2797, expr: !DIExpression())
!2797 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2669, file: !2670, line: 72, type: !61, isLocal: false, isDefinition: true)
!2798 = !DIGlobalVariableExpression(var: !2799, expr: !DIExpression())
!2799 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2669, file: !2670, line: 73, type: !61, isLocal: false, isDefinition: true)
!2800 = !DIGlobalVariableExpression(var: !2801, expr: !DIExpression())
!2801 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2669, file: !2670, line: 74, type: !61, isLocal: false, isDefinition: true)
!2802 = !DIGlobalVariableExpression(var: !2803, expr: !DIExpression())
!2803 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2669, file: !2670, line: 75, type: !61, isLocal: false, isDefinition: true)
!2804 = !DIGlobalVariableExpression(var: !2805, expr: !DIExpression())
!2805 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2669, file: !2670, line: 76, type: !61, isLocal: false, isDefinition: true)
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2669, file: !2670, line: 77, type: !61, isLocal: false, isDefinition: true)
!2808 = !DIGlobalVariableExpression(var: !2809, expr: !DIExpression())
!2809 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2669, file: !2670, line: 78, type: !61, isLocal: false, isDefinition: true)
!2810 = !DIGlobalVariableExpression(var: !2811, expr: !DIExpression())
!2811 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2669, file: !2670, line: 79, type: !61, isLocal: false, isDefinition: true)
!2812 = !DIGlobalVariableExpression(var: !2813, expr: !DIExpression())
!2813 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2669, file: !2670, line: 80, type: !61, isLocal: false, isDefinition: true)
!2814 = !DIGlobalVariableExpression(var: !2815, expr: !DIExpression())
!2815 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2669, file: !2670, line: 84, type: !2688, isLocal: false, isDefinition: true)
!2816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2817, size: 416, elements: !76)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2673, line: 60, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2673, line: 45, size: 416, elements: !2819)
!2819 = !{!2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2818, file: !2673, line: 46, baseType: !61, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2818, file: !2673, line: 47, baseType: !61, size: 32, offset: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2818, file: !2673, line: 48, baseType: !61, size: 32, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2818, file: !2673, line: 49, baseType: !61, size: 32, offset: 96)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2818, file: !2673, line: 50, baseType: !61, size: 32, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2818, file: !2673, line: 51, baseType: !61, size: 32, offset: 160)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2818, file: !2673, line: 52, baseType: !61, size: 32, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2818, file: !2673, line: 53, baseType: !61, size: 32, offset: 224)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2818, file: !2673, line: 54, baseType: !61, size: 32, offset: 256)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2818, file: !2673, line: 55, baseType: !61, size: 32, offset: 288)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2818, file: !2673, line: 56, baseType: !61, size: 32, offset: 320)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2818, file: !2673, line: 57, baseType: !61, size: 32, offset: 352)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2818, file: !2673, line: 58, baseType: !61, size: 32, offset: 384)
!2833 = !DIGlobalVariableExpression(var: !2834, expr: !DIExpression())
!2834 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2835, file: !2836, line: 48, type: !2844, isLocal: false, isDefinition: true)
!2835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2837, globals: !2843, splitDebugInlining: false, nameTableKind: None)
!2836 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2837 = !{!2838}
!2838 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1520, line: 100, baseType: !18, size: 32, elements: !2839)
!2839 = !{!2840, !2841, !2842}
!2840 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2841 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2842 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2843 = !{!2833}
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1520, line: 104, baseType: !2838)
!2845 = !DIGlobalVariableExpression(var: !2846, expr: !DIExpression())
!2846 = distinct !DIGlobalVariable(name: "test_rtc_callback", scope: !2847, file: !2848, line: 67, type: !1269, isLocal: false, isDefinition: true)
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2849, retainedTypes: !1969, globals: !2850, splitDebugInlining: false, nameTableKind: None)
!2848 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/rtc_set_alarm/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2849 = !{!674, !725, !741, !747, !751, !394}
!2850 = !{!2845, !2851, !2854}
!2851 = !DIGlobalVariableExpression(var: !2852, expr: !DIExpression())
!2852 = distinct !DIGlobalVariable(name: "param", scope: !2847, file: !2848, line: 49, type: !2853, isLocal: true, isDefinition: true)
!2853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 56, elements: !646)
!2854 = !DIGlobalVariableExpression(var: !2855, expr: !DIExpression())
!2855 = distinct !DIGlobalVariable(name: "alarm_param", scope: !2847, file: !2848, line: 58, type: !2853, isLocal: true, isDefinition: true)
!2856 = !DIGlobalVariableExpression(var: !2857, expr: !DIExpression())
!2857 = distinct !DIGlobalVariable(name: "heap_end", scope: !2858, file: !2859, line: 69, type: !776, isLocal: true, isDefinition: true)
!2858 = distinct !DISubprogram(name: "_sbrk_r", scope: !2859, file: !2859, line: 66, type: !2860, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !3053)
!2859 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!2862, !2864, !3048}
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2863, line: 123, baseType: !776)
!2863 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 32)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2866, line: 377, size: 1920, elements: !2867)
!2866 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2867 = !{!2868, !2869, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2947, !2968, !2972, !2973, !2974, !2975, !2985, !2998, !2999, !3004, !3022, !3023, !3030, !3031, !3047}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2865, file: !2866, line: 381, baseType: !7, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2865, file: !2866, line: 386, baseType: !2870, size: 32, offset: 32)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2866, line: 292, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2866, line: 186, size: 832, elements: !2873)
!2873 = !{!2874, !2876, !2877, !2878, !2879, !2880, !2885, !2886, !2887, !2888, !2892, !2896, !2903, !2907, !2908, !2909, !2910, !2912, !2914, !2915, !2916, !2918, !2924, !2937}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2872, file: !2866, line: 187, baseType: !2875, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2872, file: !2866, line: 188, baseType: !7, size: 32, offset: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2872, file: !2866, line: 189, baseType: !7, size: 32, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2872, file: !2866, line: 190, baseType: !1430, size: 16, offset: 96)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2872, file: !2866, line: 191, baseType: !1430, size: 16, offset: 112)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2872, file: !2866, line: 192, baseType: !2881, size: 64, offset: 128)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2866, line: 122, size: 64, elements: !2882)
!2882 = !{!2883, !2884}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2881, file: !2866, line: 123, baseType: !2875, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2881, file: !2866, line: 124, baseType: !7, size: 32, offset: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2872, file: !2866, line: 193, baseType: !7, size: 32, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2872, file: !2866, line: 196, baseType: !2864, size: 32, offset: 224)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2872, file: !2866, line: 200, baseType: !88, size: 32, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2872, file: !2866, line: 202, baseType: !2889, size: 32, offset: 288)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 32)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!7, !2864, !88, !776, !7}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2872, file: !2866, line: 204, baseType: !2893, size: 32, offset: 320)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!7, !2864, !88, !165, !7}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2872, file: !2866, line: 207, baseType: !2897, size: 32, offset: 352)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 32)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!2900, !2864, !88, !2900, !7}
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2901, line: 116, baseType: !2902)
!2901 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2902 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2872, file: !2866, line: 208, baseType: !2904, size: 32, offset: 384)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!7, !2864, !88}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2872, file: !2866, line: 211, baseType: !2881, size: 64, offset: 416)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2872, file: !2866, line: 212, baseType: !2875, size: 32, offset: 480)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2872, file: !2866, line: 213, baseType: !7, size: 32, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2872, file: !2866, line: 216, baseType: !2911, size: 24, offset: 544)
!2911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 24, elements: !1186)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2872, file: !2866, line: 217, baseType: !2913, size: 8, offset: 568)
!2913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 8, elements: !76)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2872, file: !2866, line: 220, baseType: !2881, size: 64, offset: 576)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2872, file: !2866, line: 223, baseType: !7, size: 32, offset: 640)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2872, file: !2866, line: 224, baseType: !2917, size: 32, offset: 672)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2901, line: 46, baseType: !2902)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2872, file: !2866, line: 231, baseType: !2919, size: 32, offset: 704)
!2919 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2866, line: 35, baseType: !2920)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2921, line: 34, baseType: !2922)
!2921 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 32)
!2923 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2921, line: 33, flags: DIFlagFwdDecl)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2872, file: !2866, line: 233, baseType: !2925, size: 64, offset: 736)
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2901, line: 170, baseType: !2926)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2901, line: 162, size: 64, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2926, file: !2901, line: 164, baseType: !7, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2926, file: !2901, line: 169, baseType: !2930, size: 32, offset: 32)
!2930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2926, file: !2901, line: 165, size: 32, elements: !2931)
!2931 = !{!2932, !2935}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2930, file: !2901, line: 167, baseType: !2933, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2934, line: 116, baseType: !7)
!2934 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2930, file: !2901, line: 168, baseType: !2936, size: 32)
!2936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 32, elements: !506)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2872, file: !2866, line: 234, baseType: !7, size: 32, offset: 800)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2865, file: !2866, line: 386, baseType: !2870, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2865, file: !2866, line: 386, baseType: !2870, size: 32, offset: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2865, file: !2866, line: 388, baseType: !7, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2865, file: !2866, line: 390, baseType: !776, size: 32, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2865, file: !2866, line: 392, baseType: !7, size: 32, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2865, file: !2866, line: 394, baseType: !7, size: 32, offset: 224)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2865, file: !2866, line: 395, baseType: !2945, size: 32, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2946 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2866, line: 45, flags: DIFlagFwdDecl)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2865, file: !2866, line: 397, baseType: !2948, size: 32, offset: 288)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2866, line: 349, size: 128, elements: !2950)
!2950 = !{!2951, !2964, !2965, !2966}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2949, file: !2866, line: 352, baseType: !2952, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2866, line: 52, size: 192, elements: !2954)
!2954 = !{!2955, !2956, !2957, !2958, !2959, !2960}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2953, file: !2866, line: 54, baseType: !2952, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2953, file: !2866, line: 55, baseType: !7, size: 32, offset: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2953, file: !2866, line: 55, baseType: !7, size: 32, offset: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2953, file: !2866, line: 55, baseType: !7, size: 32, offset: 96)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2953, file: !2866, line: 55, baseType: !7, size: 32, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2953, file: !2866, line: 56, baseType: !2961, size: 32, offset: 160)
!2961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2962, size: 32, elements: !76)
!2962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2866, line: 22, baseType: !2963)
!2963 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2949, file: !2866, line: 353, baseType: !7, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2949, file: !2866, line: 354, baseType: !2952, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2949, file: !2866, line: 355, baseType: !2967, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2865, file: !2866, line: 399, baseType: !2969, size: 32, offset: 320)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{null, !2864}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2865, file: !2866, line: 401, baseType: !7, size: 32, offset: 352)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2865, file: !2866, line: 404, baseType: !7, size: 32, offset: 384)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2865, file: !2866, line: 405, baseType: !776, size: 32, offset: 416)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2865, file: !2866, line: 407, baseType: !2976, size: 32, offset: 448)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 32)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2866, line: 324, size: 192, elements: !2978)
!2978 = !{!2979, !2981, !2982, !2983}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2977, file: !2866, line: 325, baseType: !2980, size: 48)
!2980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1020, size: 48, elements: !1186)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2977, file: !2866, line: 326, baseType: !2980, size: 48, offset: 48)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2977, file: !2866, line: 327, baseType: !1020, size: 16, offset: 96)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2977, file: !2866, line: 330, baseType: !2984, size: 64, offset: 128)
!2984 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2865, file: !2866, line: 408, baseType: !2986, size: 32, offset: 480)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 32)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2866, line: 60, size: 288, elements: !2988)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2987, file: !2866, line: 62, baseType: !7, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2987, file: !2866, line: 63, baseType: !7, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2987, file: !2866, line: 64, baseType: !7, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2987, file: !2866, line: 65, baseType: !7, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2987, file: !2866, line: 66, baseType: !7, size: 32, offset: 128)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2987, file: !2866, line: 67, baseType: !7, size: 32, offset: 160)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2987, file: !2866, line: 68, baseType: !7, size: 32, offset: 192)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2987, file: !2866, line: 69, baseType: !7, size: 32, offset: 224)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2987, file: !2866, line: 70, baseType: !7, size: 32, offset: 256)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2865, file: !2866, line: 409, baseType: !776, size: 32, offset: 512)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2865, file: !2866, line: 412, baseType: !3000, size: 32, offset: 544)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 32)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{null, !7}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2865, file: !2866, line: 416, baseType: !3005, size: 32, offset: 576)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 32)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2866, line: 90, size: 1120, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3013}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3006, file: !2866, line: 91, baseType: !3005, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !3006, file: !2866, line: 92, baseType: !7, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !3006, file: !2866, line: 93, baseType: !3011, size: 1024, offset: 64)
!3011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3012, size: 1024, elements: !376)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !3006, file: !2866, line: 94, baseType: !3014, size: 32, offset: 1088)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2866, line: 79, size: 2112, elements: !3016)
!3016 = !{!3017, !3019, !3020, !3021}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !3015, file: !2866, line: 80, baseType: !3018, size: 1024)
!3018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !376)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !3015, file: !2866, line: 81, baseType: !3018, size: 1024, offset: 1024)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !3015, file: !2866, line: 83, baseType: !2962, size: 32, offset: 2048)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !3015, file: !2866, line: 86, baseType: !2962, size: 32, offset: 2080)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2865, file: !2866, line: 417, baseType: !3006, size: 1120, offset: 608)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2865, file: !2866, line: 420, baseType: !3024, size: 96, offset: 1728)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2866, line: 296, size: 96, elements: !3025)
!3025 = !{!3026, !3028, !3029}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3024, file: !2866, line: 298, baseType: !3027, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !3024, file: !2866, line: 299, baseType: !7, size: 32, offset: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !3024, file: !2866, line: 300, baseType: !2870, size: 32, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2865, file: !2866, line: 421, baseType: !2870, size: 32, offset: 1824)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2865, file: !2866, line: 422, baseType: !3032, size: 32, offset: 1856)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 32)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2866, line: 359, size: 640, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038, !3039, !3041, !3042, !3043, !3044, !3045, !3046}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !3033, file: !2866, line: 362, baseType: !776, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !3033, file: !2866, line: 363, baseType: !2925, size: 64, offset: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !3033, file: !2866, line: 364, baseType: !2925, size: 64, offset: 96)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !3033, file: !2866, line: 365, baseType: !2925, size: 64, offset: 160)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !3033, file: !2866, line: 366, baseType: !3040, size: 64, offset: 224)
!3040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 64, elements: !840)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !3033, file: !2866, line: 367, baseType: !7, size: 32, offset: 288)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !3033, file: !2866, line: 368, baseType: !2925, size: 64, offset: 320)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !3033, file: !2866, line: 369, baseType: !2925, size: 64, offset: 384)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !3033, file: !2866, line: 370, baseType: !2925, size: 64, offset: 448)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !3033, file: !2866, line: 371, baseType: !2925, size: 64, offset: 512)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !3033, file: !2866, line: 372, baseType: !2925, size: 64, offset: 576)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2865, file: !2866, line: 423, baseType: !776, size: 32, offset: 1888)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2934, line: 46, baseType: !18)
!3049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3051, globals: !3052, splitDebugInlining: false, nameTableKind: None)
!3050 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3051 = !{!776, !2862}
!3052 = !{!2856}
!3053 = !{!3054, !3055, !3056, !3057}
!3054 = !DILocalVariable(name: "r", arg: 1, scope: !2858, file: !2859, line: 66, type: !2864)
!3055 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2858, file: !2859, line: 66, type: !3048)
!3056 = !DILocalVariable(name: "prev_heap_end", scope: !2858, file: !2859, line: 70, type: !776)
!3057 = !DILocalVariable(name: "stack", scope: !2858, file: !2859, line: 71, type: !776)
!3058 = !DIGlobalVariableExpression(var: !3059, expr: !DIExpression())
!3059 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !3060, file: !3061, line: 52, type: !60, isLocal: true, isDefinition: true)
!3060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3061, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3062, globals: !3165, splitDebugInlining: false, nameTableKind: None)
!3061 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/rtc_set_alarm/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3062 = !{!3063, !3071, !61, !3116, !3121, !3146}
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1258, line: 656, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1258, line: 650, size: 128, elements: !3066)
!3066 = !{!3067, !3068, !3069, !3070}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3065, file: !1258, line: 652, baseType: !60, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3065, file: !1258, line: 653, baseType: !60, size: 32, offset: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3065, file: !1258, line: 654, baseType: !60, size: 32, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3065, file: !1258, line: 655, baseType: !324, size: 32, offset: 96)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !3073)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3085, !3086, !3090, !3091, !3093, !3094, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3113, !3114, !3115}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !3073, file: !56, line: 1922, baseType: !60, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !3073, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !3073, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !3073, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !3073, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !3073, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !3073, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !3073, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !3073, file: !56, line: 1930, baseType: !3084, size: 768, offset: 256)
!3084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1298)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !3073, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !3073, file: !56, line: 1932, baseType: !3087, size: 992, offset: 1056)
!3087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !3088)
!3088 = !{!3089}
!3089 = !DISubrange(count: 31)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !3073, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !3073, file: !56, line: 1934, baseType: !3092, size: 416, offset: 2080)
!3092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !860)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !3073, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !3073, file: !56, line: 1936, baseType: !3095, size: 1568, offset: 2528)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !3096)
!3096 = !{!3097}
!3097 = !DISubrange(count: 49)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !3073, file: !56, line: 1937, baseType: !324, size: 32, offset: 4096)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !3073, file: !56, line: 1938, baseType: !324, size: 32, offset: 4128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !3073, file: !56, line: 1939, baseType: !324, size: 32, offset: 4160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !3073, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !3073, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !3073, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !3073, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !3073, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !3073, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !3073, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !3073, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !3073, file: !56, line: 1948, baseType: !3110, size: 3744, offset: 4448)
!3110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !3111)
!3111 = !{!3112}
!3112 = !DISubrange(count: 117)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !3073, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !3073, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !3073, file: !56, line: 1951, baseType: !324, size: 32, offset: 8256)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !3118)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !3118, file: !56, line: 2157, baseType: !60, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1258, line: 418, baseType: !3123)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1258, line: 395, size: 1120, elements: !3124)
!3124 = !{!3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3123, file: !1258, line: 397, baseType: !324, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3123, file: !1258, line: 398, baseType: !60, size: 32, offset: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3123, file: !1258, line: 399, baseType: !60, size: 32, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3123, file: !1258, line: 400, baseType: !60, size: 32, offset: 96)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3123, file: !1258, line: 401, baseType: !60, size: 32, offset: 128)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3123, file: !1258, line: 402, baseType: !60, size: 32, offset: 160)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3123, file: !1258, line: 403, baseType: !1268, size: 96, offset: 192)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3123, file: !1258, line: 404, baseType: !60, size: 32, offset: 288)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3123, file: !1258, line: 405, baseType: !60, size: 32, offset: 320)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3123, file: !1258, line: 406, baseType: !60, size: 32, offset: 352)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3123, file: !1258, line: 407, baseType: !60, size: 32, offset: 384)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3123, file: !1258, line: 408, baseType: !60, size: 32, offset: 416)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3123, file: !1258, line: 409, baseType: !60, size: 32, offset: 448)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3123, file: !1258, line: 410, baseType: !60, size: 32, offset: 480)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3123, file: !1258, line: 411, baseType: !1278, size: 64, offset: 512)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3123, file: !1258, line: 412, baseType: !324, size: 32, offset: 576)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3123, file: !1258, line: 413, baseType: !324, size: 32, offset: 608)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3123, file: !1258, line: 414, baseType: !1282, size: 128, offset: 640)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3123, file: !1258, line: 415, baseType: !1284, size: 160, offset: 768)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3123, file: !1258, line: 416, baseType: !1288, size: 160, offset: 928)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3123, file: !1258, line: 417, baseType: !60, size: 32, offset: 1088)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !3148)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !3149)
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !3148, file: !56, line: 261, baseType: !60, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !3148, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !3148, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !3148, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !3148, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !3148, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !3148, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !3148, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !3148, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !3148, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3148, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !3148, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3148, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !3148, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !3148, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!3165 = !{!3166, !3058}
!3166 = !DIGlobalVariableExpression(var: !3167, expr: !DIExpression())
!3167 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !3060, file: !3061, line: 50, type: !61, isLocal: false, isDefinition: true)
!3168 = !DIGlobalVariableExpression(var: !3169, expr: !DIExpression())
!3169 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !3170, file: !3175, line: 4, type: !3181, isLocal: false, isDefinition: true)
!3170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3171, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !3172, splitDebugInlining: false, nameTableKind: None)
!3171 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3172 = !{!3168, !3173, !3179}
!3173 = !DIGlobalVariableExpression(var: !3174, expr: !DIExpression())
!3174 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !3170, file: !3175, line: 5, type: !3176, isLocal: false, isDefinition: true)
!3175 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 88, elements: !3177)
!3177 = !{!3178}
!3178 = !DISubrange(count: 11)
!3179 = !DIGlobalVariableExpression(var: !3180, expr: !DIExpression())
!3180 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !3170, file: !3175, line: 6, type: !3176, isLocal: false, isDefinition: true)
!3181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 248, elements: !3088)
!3182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3184, retainedTypes: !3185, splitDebugInlining: false, nameTableKind: None)
!3183 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3184 = !{!741, !747, !751, !874}
!3185 = !{!159}
!3186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3187, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3188, retainedTypes: !3203, splitDebugInlining: false, nameTableKind: None)
!3187 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_pmic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3188 = !{!3189, !2513, !3197, !1000, !983}
!3189 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2514, line: 65, baseType: !7, size: 32, elements: !3190)
!3190 = !{!3191, !3192, !3193, !3194, !3195, !3196}
!3191 = !DIEnumerator(name: "PMIC_I2C_STATUS_ACK_ERROR", value: -105)
!3192 = !DIEnumerator(name: "PMIC_I2C_STATUS_NACK_ERROR", value: -104)
!3193 = !DIEnumerator(name: "PMIC_I2C_STATUS_ERROR", value: -103)
!3194 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PORT_NUMBER", value: -102)
!3195 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PARAMETER", value: -101)
!3196 = !DIEnumerator(name: "PMIC_I2C_STATUS_OK", value: 0)
!3197 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 302, baseType: !18, size: 32, elements: !3198)
!3198 = !{!3199, !3200, !3201, !3202}
!3199 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!3200 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!3201 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!3202 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!3203 = !{!61, !88, !3204}
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_status_t", file: !2514, line: 72, baseType: !3189)
!3205 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3206, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3207, retainedTypes: !3208, splitDebugInlining: false, nameTableKind: None)
!3206 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3207 = !{!238, !763}
!3208 = !{!950, !3209, !61, !3234, !1320}
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1258, line: 418, baseType: !3211)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1258, line: 395, size: 1120, elements: !3212)
!3212 = !{!3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3211, file: !1258, line: 397, baseType: !324, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3211, file: !1258, line: 398, baseType: !60, size: 32, offset: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3211, file: !1258, line: 399, baseType: !60, size: 32, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3211, file: !1258, line: 400, baseType: !60, size: 32, offset: 96)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3211, file: !1258, line: 401, baseType: !60, size: 32, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3211, file: !1258, line: 402, baseType: !60, size: 32, offset: 160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3211, file: !1258, line: 403, baseType: !1268, size: 96, offset: 192)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3211, file: !1258, line: 404, baseType: !60, size: 32, offset: 288)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3211, file: !1258, line: 405, baseType: !60, size: 32, offset: 320)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3211, file: !1258, line: 406, baseType: !60, size: 32, offset: 352)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3211, file: !1258, line: 407, baseType: !60, size: 32, offset: 384)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3211, file: !1258, line: 408, baseType: !60, size: 32, offset: 416)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3211, file: !1258, line: 409, baseType: !60, size: 32, offset: 448)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3211, file: !1258, line: 410, baseType: !60, size: 32, offset: 480)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3211, file: !1258, line: 411, baseType: !1278, size: 64, offset: 512)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3211, file: !1258, line: 412, baseType: !324, size: 32, offset: 576)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3211, file: !1258, line: 413, baseType: !324, size: 32, offset: 608)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3211, file: !1258, line: 414, baseType: !1282, size: 128, offset: 640)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3211, file: !1258, line: 415, baseType: !1284, size: 160, offset: 768)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3211, file: !1258, line: 416, baseType: !1288, size: 160, offset: 928)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3211, file: !1258, line: 417, baseType: !60, size: 32, offset: 1088)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1258, line: 378, baseType: !3236)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1258, line: 363, size: 28704, elements: !3237)
!3237 = !{!3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3236, file: !1258, line: 365, baseType: !1295, size: 256)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3236, file: !1258, line: 366, baseType: !1297, size: 768, offset: 256)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3236, file: !1258, line: 367, baseType: !1295, size: 256, offset: 1024)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !3236, file: !1258, line: 368, baseType: !1297, size: 768, offset: 1280)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3236, file: !1258, line: 369, baseType: !1295, size: 256, offset: 2048)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3236, file: !1258, line: 370, baseType: !1297, size: 768, offset: 2304)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3236, file: !1258, line: 371, baseType: !1295, size: 256, offset: 3072)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3236, file: !1258, line: 372, baseType: !1297, size: 768, offset: 3328)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3236, file: !1258, line: 373, baseType: !1295, size: 256, offset: 4096)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3236, file: !1258, line: 374, baseType: !1308, size: 1792, offset: 4352)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3236, file: !1258, line: 375, baseType: !1312, size: 1920, offset: 6144)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3236, file: !1258, line: 376, baseType: !1316, size: 20608, offset: 8064)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3236, file: !1258, line: 377, baseType: !60, size: 32, offset: 28672)
!3251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3252 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3254, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3255, retainedTypes: !3266, globals: !3267, splitDebugInlining: false, nameTableKind: None)
!3254 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_wrap_interface.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3255 = !{!2579, !2617, !2596, !3256}
!3256 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2519, line: 91, baseType: !18, size: 32, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265}
!3258 = !DIEnumerator(name: "PMIC_VCORE_0P7V", value: 0)
!3259 = !DIEnumerator(name: "PMIC_VCORE_0P8V", value: 1)
!3260 = !DIEnumerator(name: "PMIC_VCORE_0P9V", value: 2)
!3261 = !DIEnumerator(name: "PMIC_VCORE_1P0V", value: 3)
!3262 = !DIEnumerator(name: "PMIC_VCORE_1P1V", value: 4)
!3263 = !DIEnumerator(name: "PMIC_VCORE_1P2V", value: 5)
!3264 = !DIEnumerator(name: "PMIC_VCORE_1P3V", value: 6)
!3265 = !DIEnumerator(name: "PMIC_VCORE_ERROR", value: 255)
!3266 = !{!2625}
!3267 = !{!3268}
!3268 = !DIGlobalVariableExpression(var: !3269, expr: !DIExpression())
!3269 = distinct !DIGlobalVariable(name: "pmu_wrap_api", scope: !3253, file: !3254, line: 75, type: !3270, isLocal: true, isDefinition: true)
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_wrap_api_t", file: !3271, line: 55, baseType: !3272)
!3271 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_wrap_interface.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3271, line: 41, size: 416, elements: !3273)
!3273 = !{!3274, !3275, !3279, !3283, !3284, !3288, !3292, !3293, !3297, !3298, !3299, !3300, !3301}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3272, file: !3271, line: 42, baseType: !3012, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "set_reg_value", scope: !3272, file: !3271, line: 43, baseType: !3276, size: 32, offset: 32)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 32)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!91, !1020, !1020, !1020, !1020}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "get_reg_value", scope: !3272, file: !3271, line: 44, baseType: !3280, size: 32, offset: 64)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 32)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!161, !1020, !1020, !1020}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_mtcmos", scope: !3272, file: !3271, line: 45, baseType: !3012, size: 32, offset: 96)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "get_vcore_vol", scope: !3272, file: !3271, line: 46, baseType: !3285, size: 32, offset: 128)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 32)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!161}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_vol", scope: !3272, file: !3271, line: 47, baseType: !3289, size: 32, offset: 160)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 32)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!161, !161, !161}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_s1_buck", scope: !3272, file: !3271, line: 48, baseType: !3012, size: 32, offset: 192)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_driver_power", scope: !3272, file: !3271, line: 49, baseType: !3294, size: 32, offset: 224)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 32)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{null, !161, !161}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "audio_lock_voltage", scope: !3272, file: !3271, line: 50, baseType: !3012, size: 32, offset: 256)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "audio_unlock_voltage", scope: !3272, file: !3271, line: 51, baseType: !3012, size: 32, offset: 288)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "get_usb_input_status", scope: !3272, file: !3271, line: 52, baseType: !3285, size: 32, offset: 320)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "enter_power_off", scope: !3272, file: !3271, line: 53, baseType: !3012, size: 32, offset: 352)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3272, file: !3271, line: 54, baseType: !3012, size: 32, offset: 384)
!3302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3303 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3304 = !{!"Ubuntu clang version 14.0.6"}
!3305 = !{i32 7, !"Dwarf Version", i32 2}
!3306 = !{i32 2, !"Debug Info Version", i32 3}
!3307 = !{i32 1, !"wchar_size", i32 4}
!3308 = !{i32 1, !"min_enum_size", i32 4}
!3309 = !{i32 1, !"branch-target-enforcement", i32 0}
!3310 = !{i32 1, !"sign-return-address", i32 0}
!3311 = !{i32 1, !"sign-return-address-all", i32 0}
!3312 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3313 = !{i32 7, !"frame-pointer", i32 2}
!3314 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !3315, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3318)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!3317}
!3317 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!3318 = !{!3319, !3321}
!3319 = !DILocalVariable(name: "region", scope: !3314, file: !3, line: 55, type: !3320)
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!3321 = !DILocalVariable(name: "irq_flag", scope: !3314, file: !3, line: 56, type: !61)
!3322 = !DILocation(line: 59, column: 16, scope: !3314)
!3323 = !DILocation(line: 0, scope: !3314)
!3324 = !DILocation(line: 62, column: 9, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 62, column: 9)
!3326 = !{i8 0, i8 2}
!3327 = !DILocation(line: 62, column: 9, scope: !3314)
!3328 = !DILocation(line: 64, column: 9, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 62, column: 39)
!3330 = !DILocation(line: 66, column: 9, scope: !3329)
!3331 = !DILocation(line: 69, column: 24, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 67, column: 12)
!3333 = !DILocation(line: 72, column: 9, scope: !3332)
!3334 = !DILocation(line: 77, column: 5, scope: !3314)
!3335 = !DILocation(line: 80, column: 22, scope: !3314)
!3336 = !DILocation(line: 81, column: 28, scope: !3314)
!3337 = !DILocation(line: 84, column: 19, scope: !3314)
!3338 = !DILocation(line: 85, column: 23, scope: !3314)
!3339 = !DILocation(line: 88, column: 5, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 88, column: 5)
!3341 = !DILocation(line: 90, column: 9, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 88, column: 81)
!3343 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 88, column: 5)
!3344 = !DILocation(line: 90, column: 38, scope: !3342)
!3345 = !DILocation(line: 91, column: 9, scope: !3342)
!3346 = !DILocation(line: 91, column: 42, scope: !3342)
!3347 = !DILocation(line: 94, column: 45, scope: !3342)
!3348 = !DILocation(line: 94, column: 47, scope: !3342)
!3349 = !DILocation(line: 95, column: 49, scope: !3342)
!3350 = !DILocation(line: 95, column: 51, scope: !3342)
!3351 = !DILocation(line: 88, column: 77, scope: !3343)
!3352 = !DILocation(line: 88, column: 46, scope: !3343)
!3353 = distinct !{!3353, !3339, !3354}
!3354 = !DILocation(line: 96, column: 5, scope: !3340)
!3355 = !DILocation(line: 99, column: 1, scope: !3314)
!3356 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !3315, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3357)
!3357 = !{!3358}
!3358 = !DILocalVariable(name: "irq_flag", scope: !3356, file: !3, line: 329, type: !61)
!3359 = !DILocation(line: 332, column: 16, scope: !3356)
!3360 = !DILocation(line: 0, scope: !3356)
!3361 = !DILocation(line: 335, column: 21, scope: !3356)
!3362 = !DILocation(line: 336, column: 21, scope: !3356)
!3363 = !DILocation(line: 339, column: 21, scope: !3356)
!3364 = !DILocation(line: 340, column: 21, scope: !3356)
!3365 = !DILocation(line: 434, column: 3, scope: !3366, inlinedAt: !3368)
!3366 = distinct !DISubprogram(name: "__ISB", scope: !3367, file: !3367, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !345)
!3367 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!3368 = distinct !DILocation(line: 343, column: 5, scope: !3356)
!3369 = !{i64 442804}
!3370 = !DILocation(line: 346, column: 5, scope: !3356)
!3371 = !DILocation(line: 348, column: 5, scope: !3356)
!3372 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !3315, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3373)
!3373 = !{!3374}
!3374 = !DILocalVariable(name: "region", scope: !3372, file: !3, line: 103, type: !3320)
!3375 = !DILocation(line: 107, column: 5, scope: !3372)
!3376 = !DILocation(line: 110, column: 22, scope: !3372)
!3377 = !DILocation(line: 111, column: 28, scope: !3372)
!3378 = !DILocation(line: 114, column: 19, scope: !3372)
!3379 = !DILocation(line: 115, column: 23, scope: !3372)
!3380 = !DILocation(line: 0, scope: !3372)
!3381 = !DILocation(line: 118, column: 5, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 118, column: 5)
!3383 = !DILocation(line: 120, column: 9, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 118, column: 81)
!3385 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 118, column: 5)
!3386 = !DILocation(line: 120, column: 38, scope: !3384)
!3387 = !DILocation(line: 121, column: 9, scope: !3384)
!3388 = !DILocation(line: 121, column: 42, scope: !3384)
!3389 = !DILocation(line: 124, column: 45, scope: !3384)
!3390 = !DILocation(line: 124, column: 47, scope: !3384)
!3391 = !DILocation(line: 125, column: 49, scope: !3384)
!3392 = !DILocation(line: 125, column: 51, scope: !3384)
!3393 = !DILocation(line: 118, column: 77, scope: !3385)
!3394 = !DILocation(line: 118, column: 46, scope: !3385)
!3395 = distinct !{!3395, !3381, !3396}
!3396 = !DILocation(line: 126, column: 5, scope: !3382)
!3397 = !DILocation(line: 129, column: 20, scope: !3372)
!3398 = !DILocation(line: 131, column: 5, scope: !3372)
!3399 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !3315, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !345)
!3400 = !DILocation(line: 137, column: 45, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 137, column: 9)
!3402 = !DILocation(line: 137, column: 28, scope: !3401)
!3403 = !DILocation(line: 137, column: 9, scope: !3399)
!3404 = !DILocation(line: 142, column: 22, scope: !3399)
!3405 = !DILocation(line: 145, column: 28, scope: !3399)
!3406 = !DILocation(line: 145, column: 19, scope: !3399)
!3407 = !DILocation(line: 147, column: 5, scope: !3399)
!3408 = !DILocation(line: 0, scope: !3399)
!3409 = !DILocation(line: 148, column: 1, scope: !3399)
!3410 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !3315, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3411)
!3411 = !{!3412}
!3412 = !DILocalVariable(name: "irq_flag", scope: !3410, file: !3, line: 152, type: !61)
!3413 = !DILocation(line: 155, column: 16, scope: !3410)
!3414 = !DILocation(line: 0, scope: !3410)
!3415 = !DILocation(line: 158, column: 16, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 158, column: 9)
!3417 = !DILocation(line: 158, column: 26, scope: !3416)
!3418 = !DILocation(line: 158, column: 9, scope: !3410)
!3419 = !DILocation(line: 160, column: 9, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 158, column: 49)
!3421 = !DILocation(line: 161, column: 5, scope: !3420)
!3422 = !DILocation(line: 164, column: 22, scope: !3410)
!3423 = !DILocation(line: 167, column: 28, scope: !3410)
!3424 = !DILocation(line: 167, column: 19, scope: !3410)
!3425 = !DILocation(line: 170, column: 5, scope: !3410)
!3426 = !DILocation(line: 172, column: 5, scope: !3410)
!3427 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !3428, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3430)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!3317, !3320}
!3430 = !{!3431}
!3431 = !DILocalVariable(name: "region", arg: 1, scope: !3427, file: !3, line: 175, type: !3320)
!3432 = !DILocation(line: 0, scope: !3427)
!3433 = !DILocation(line: 178, column: 16, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 178, column: 9)
!3435 = !DILocation(line: 178, column: 9, scope: !3427)
!3436 = !DILocation(line: 183, column: 9, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 183, column: 9)
!3438 = !DILocation(line: 183, column: 38, scope: !3437)
!3439 = !DILocation(line: 183, column: 9, scope: !3427)
!3440 = !DILocation(line: 184, column: 38, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 183, column: 62)
!3442 = !DILocation(line: 184, column: 32, scope: !3441)
!3443 = !DILocation(line: 190, column: 32, scope: !3427)
!3444 = !DILocation(line: 190, column: 23, scope: !3427)
!3445 = !DILocation(line: 192, column: 5, scope: !3427)
!3446 = !DILocation(line: 193, column: 1, scope: !3427)
!3447 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !3428, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3448)
!3448 = !{!3449}
!3449 = !DILocalVariable(name: "region", arg: 1, scope: !3447, file: !3, line: 195, type: !3320)
!3450 = !DILocation(line: 0, scope: !3447)
!3451 = !DILocation(line: 198, column: 16, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 198, column: 9)
!3453 = !DILocation(line: 198, column: 9, scope: !3447)
!3454 = !DILocation(line: 203, column: 35, scope: !3447)
!3455 = !DILocation(line: 203, column: 31, scope: !3447)
!3456 = !DILocation(line: 203, column: 28, scope: !3447)
!3457 = !DILocation(line: 206, column: 32, scope: !3447)
!3458 = !DILocation(line: 206, column: 23, scope: !3447)
!3459 = !DILocation(line: 209, column: 41, scope: !3447)
!3460 = !DILocation(line: 209, column: 43, scope: !3447)
!3461 = !DILocation(line: 210, column: 45, scope: !3447)
!3462 = !DILocation(line: 210, column: 47, scope: !3447)
!3463 = !DILocation(line: 212, column: 5, scope: !3447)
!3464 = !DILocation(line: 213, column: 1, scope: !3447)
!3465 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !3466, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3469)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{!3317, !3468}
!3468 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!3469 = !{!3470}
!3470 = !DILocalVariable(name: "cache_size", arg: 1, scope: !3465, file: !3, line: 215, type: !3468)
!3471 = !DILocation(line: 0, scope: !3465)
!3472 = !DILocation(line: 218, column: 20, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 218, column: 9)
!3474 = !DILocation(line: 218, column: 9, scope: !3465)
!3475 = !DILocation(line: 223, column: 22, scope: !3465)
!3476 = !DILocation(line: 224, column: 37, scope: !3465)
!3477 = !DILocation(line: 224, column: 22, scope: !3465)
!3478 = !DILocation(line: 227, column: 20, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 227, column: 9)
!3480 = !DILocation(line: 227, column: 9, scope: !3465)
!3481 = !DILocation(line: 228, column: 26, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 227, column: 43)
!3483 = !DILocation(line: 229, column: 5, scope: !3482)
!3484 = !DILocation(line: 232, column: 28, scope: !3465)
!3485 = !DILocation(line: 232, column: 19, scope: !3465)
!3486 = !DILocation(line: 234, column: 5, scope: !3465)
!3487 = !DILocation(line: 235, column: 1, scope: !3465)
!3488 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !3489, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3498)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!3317, !3320, !3491}
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 32)
!3492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3493)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !3494)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !3495)
!3495 = !{!3496, !3497}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !3494, file: !6, line: 220, baseType: !61, size: 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !3494, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!3498 = !{!3499, !3500}
!3499 = !DILocalVariable(name: "region", arg: 1, scope: !3488, file: !3, line: 237, type: !3320)
!3500 = !DILocalVariable(name: "region_config", arg: 2, scope: !3488, file: !3, line: 237, type: !3491)
!3501 = !DILocation(line: 0, scope: !3488)
!3502 = !DILocation(line: 240, column: 16, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 240, column: 9)
!3504 = !DILocation(line: 240, column: 9, scope: !3488)
!3505 = !DILocation(line: 245, column: 23, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 245, column: 9)
!3507 = !DILocation(line: 245, column: 9, scope: !3488)
!3508 = !DILocation(line: 250, column: 24, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 250, column: 9)
!3510 = !DILocation(line: 250, column: 45, scope: !3509)
!3511 = !DILocation(line: 250, column: 9, scope: !3488)
!3512 = !DILocation(line: 251, column: 9, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 250, column: 81)
!3514 = !DILocation(line: 256, column: 24, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 256, column: 9)
!3516 = !DILocation(line: 256, column: 42, scope: !3515)
!3517 = !DILocation(line: 256, column: 9, scope: !3488)
!3518 = !DILocation(line: 257, column: 9, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 256, column: 78)
!3520 = !DILocation(line: 262, column: 5, scope: !3488)
!3521 = !DILocation(line: 262, column: 34, scope: !3488)
!3522 = !DILocation(line: 263, column: 55, scope: !3488)
!3523 = !DILocation(line: 263, column: 93, scope: !3488)
!3524 = !DILocation(line: 263, column: 76, scope: !3488)
!3525 = !DILocation(line: 263, column: 5, scope: !3488)
!3526 = !DILocation(line: 263, column: 38, scope: !3488)
!3527 = !DILocation(line: 266, column: 34, scope: !3488)
!3528 = !DILocation(line: 269, column: 45, scope: !3488)
!3529 = !DILocation(line: 269, column: 41, scope: !3488)
!3530 = !DILocation(line: 269, column: 43, scope: !3488)
!3531 = !DILocation(line: 270, column: 49, scope: !3488)
!3532 = !DILocation(line: 270, column: 45, scope: !3488)
!3533 = !DILocation(line: 270, column: 47, scope: !3488)
!3534 = !DILocation(line: 272, column: 5, scope: !3488)
!3535 = !DILocation(line: 273, column: 1, scope: !3488)
!3536 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !3537, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3539)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!3317, !61}
!3539 = !{!3540, !3541}
!3540 = !DILocalVariable(name: "address", arg: 1, scope: !3536, file: !3, line: 275, type: !61)
!3541 = !DILocalVariable(name: "irq_flag", scope: !3536, file: !3, line: 277, type: !61)
!3542 = !DILocation(line: 0, scope: !3536)
!3543 = !DILocation(line: 280, column: 17, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 280, column: 9)
!3545 = !DILocation(line: 280, column: 9, scope: !3536)
!3546 = !DILocation(line: 284, column: 16, scope: !3536)
!3547 = !DILocation(line: 287, column: 32, scope: !3536)
!3548 = !DILocation(line: 287, column: 21, scope: !3536)
!3549 = !DILocation(line: 288, column: 21, scope: !3536)
!3550 = !DILocation(line: 434, column: 3, scope: !3366, inlinedAt: !3551)
!3551 = distinct !DILocation(line: 291, column: 5, scope: !3536)
!3552 = !DILocation(line: 294, column: 5, scope: !3536)
!3553 = !DILocation(line: 296, column: 5, scope: !3536)
!3554 = !DILocation(line: 297, column: 1, scope: !3536)
!3555 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !3556, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3558)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!3317, !61, !61}
!3558 = !{!3559, !3560, !3561, !3562}
!3559 = !DILocalVariable(name: "address", arg: 1, scope: !3555, file: !3, line: 299, type: !61)
!3560 = !DILocalVariable(name: "length", arg: 2, scope: !3555, file: !3, line: 299, type: !61)
!3561 = !DILocalVariable(name: "irq_flag", scope: !3555, file: !3, line: 301, type: !61)
!3562 = !DILocalVariable(name: "end_address", scope: !3555, file: !3, line: 302, type: !61)
!3563 = !DILocation(line: 0, scope: !3555)
!3564 = !DILocation(line: 302, column: 36, scope: !3555)
!3565 = !DILocation(line: 305, column: 47, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 305, column: 9)
!3567 = !DILocation(line: 310, column: 16, scope: !3555)
!3568 = !DILocation(line: 313, column: 20, scope: !3555)
!3569 = !DILocation(line: 313, column: 5, scope: !3555)
!3570 = !DILocation(line: 314, column: 9, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 313, column: 35)
!3572 = !DILocation(line: 315, column: 17, scope: !3571)
!3573 = distinct !{!3573, !3569, !3574}
!3574 = !DILocation(line: 316, column: 5, scope: !3555)
!3575 = !DILocation(line: 434, column: 3, scope: !3366, inlinedAt: !3576)
!3576 = distinct !DILocation(line: 319, column: 5, scope: !3555)
!3577 = !DILocation(line: 322, column: 5, scope: !3555)
!3578 = !DILocation(line: 324, column: 5, scope: !3555)
!3579 = !DILocation(line: 325, column: 1, scope: !3555)
!3580 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !3537, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3581)
!3581 = !{!3582, !3583}
!3582 = !DILocalVariable(name: "address", arg: 1, scope: !3580, file: !3, line: 351, type: !61)
!3583 = !DILocalVariable(name: "irq_flag", scope: !3580, file: !3, line: 353, type: !61)
!3584 = !DILocation(line: 0, scope: !3580)
!3585 = !DILocation(line: 356, column: 17, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 356, column: 9)
!3587 = !DILocation(line: 356, column: 9, scope: !3580)
!3588 = !DILocation(line: 361, column: 16, scope: !3580)
!3589 = !DILocation(line: 364, column: 32, scope: !3580)
!3590 = !DILocation(line: 364, column: 21, scope: !3580)
!3591 = !DILocation(line: 365, column: 21, scope: !3580)
!3592 = !DILocation(line: 434, column: 3, scope: !3366, inlinedAt: !3593)
!3593 = distinct !DILocation(line: 368, column: 5, scope: !3580)
!3594 = !DILocation(line: 371, column: 5, scope: !3580)
!3595 = !DILocation(line: 373, column: 5, scope: !3580)
!3596 = !DILocation(line: 374, column: 1, scope: !3580)
!3597 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !3556, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3598)
!3598 = !{!3599, !3600, !3601, !3602}
!3599 = !DILocalVariable(name: "address", arg: 1, scope: !3597, file: !3, line: 376, type: !61)
!3600 = !DILocalVariable(name: "length", arg: 2, scope: !3597, file: !3, line: 376, type: !61)
!3601 = !DILocalVariable(name: "irq_flag", scope: !3597, file: !3, line: 378, type: !61)
!3602 = !DILocalVariable(name: "end_address", scope: !3597, file: !3, line: 379, type: !61)
!3603 = !DILocation(line: 0, scope: !3597)
!3604 = !DILocation(line: 379, column: 36, scope: !3597)
!3605 = !DILocation(line: 382, column: 47, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 382, column: 9)
!3607 = !DILocation(line: 387, column: 16, scope: !3597)
!3608 = !DILocation(line: 390, column: 20, scope: !3597)
!3609 = !DILocation(line: 390, column: 5, scope: !3597)
!3610 = !DILocation(line: 391, column: 9, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 390, column: 35)
!3612 = !DILocation(line: 392, column: 17, scope: !3611)
!3613 = distinct !{!3613, !3609, !3614}
!3614 = !DILocation(line: 393, column: 5, scope: !3597)
!3615 = !DILocation(line: 434, column: 3, scope: !3366, inlinedAt: !3616)
!3616 = distinct !DILocation(line: 396, column: 5, scope: !3597)
!3617 = !DILocation(line: 399, column: 5, scope: !3597)
!3618 = !DILocation(line: 401, column: 5, scope: !3597)
!3619 = !DILocation(line: 402, column: 1, scope: !3597)
!3620 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !3315, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3621)
!3621 = !{!3622}
!3622 = !DILocalVariable(name: "irq_flag", scope: !3620, file: !3, line: 406, type: !61)
!3623 = !DILocation(line: 409, column: 16, scope: !3620)
!3624 = !DILocation(line: 0, scope: !3620)
!3625 = !DILocation(line: 412, column: 21, scope: !3620)
!3626 = !DILocation(line: 413, column: 21, scope: !3620)
!3627 = !DILocation(line: 434, column: 3, scope: !3366, inlinedAt: !3628)
!3628 = distinct !DILocation(line: 416, column: 5, scope: !3620)
!3629 = !DILocation(line: 419, column: 5, scope: !3620)
!3630 = !DILocation(line: 421, column: 5, scope: !3620)
!3631 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3632, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3634)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!91, !61}
!3634 = !{!3635, !3636}
!3635 = !DILocalVariable(name: "address", arg: 1, scope: !3631, file: !3, line: 424, type: !61)
!3636 = !DILocalVariable(name: "region", scope: !3631, file: !3, line: 426, type: !3320)
!3637 = !DILocation(line: 0, scope: !3631)
!3638 = !DILocation(line: 429, column: 18, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 429, column: 9)
!3640 = !DILocation(line: 429, column: 28, scope: !3639)
!3641 = !DILocation(line: 429, column: 9, scope: !3631)
!3642 = !DILocation(line: 435, column: 20, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 435, column: 13)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 433, column: 81)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 433, column: 5)
!3646 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 433, column: 5)
!3647 = !DILocation(line: 435, column: 41, scope: !3643)
!3648 = !DILocation(line: 435, column: 36, scope: !3643)
!3649 = !DILocation(line: 435, column: 13, scope: !3644)
!3650 = !DILocation(line: 436, column: 30, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 436, column: 17)
!3652 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 435, column: 53)
!3653 = !DILocation(line: 436, column: 59, scope: !3651)
!3654 = !DILocation(line: 436, column: 26, scope: !3651)
!3655 = !DILocation(line: 436, column: 85, scope: !3651)
!3656 = !DILocation(line: 436, column: 99, scope: !3651)
!3657 = !DILocation(line: 436, column: 97, scope: !3651)
!3658 = !DILocation(line: 436, column: 17, scope: !3652)
!3659 = !DILocation(line: 433, column: 77, scope: !3645)
!3660 = !DILocation(line: 433, column: 46, scope: !3645)
!3661 = !DILocation(line: 433, column: 5, scope: !3646)
!3662 = distinct !{!3662, !3661, !3663}
!3663 = !DILocation(line: 440, column: 5, scope: !3646)
!3664 = !DILocation(line: 442, column: 1, scope: !3631)
!3665 = distinct !DISubprogram(name: "hal_gpt_init", scope: !95, file: !95, line: 95, type: !3666, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3670)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!3668, !3669}
!3668 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !98, line: 393, baseType: !97)
!3669 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !106, line: 854, baseType: !105)
!3670 = !{!3671}
!3671 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3665, file: !95, line: 95, type: !3669)
!3672 = !DILocation(line: 0, scope: !3665)
!3673 = !DILocation(line: 98, column: 9, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3665, file: !95, line: 98, column: 9)
!3675 = !DILocation(line: 98, column: 9, scope: !3665)
!3676 = !DILocation(line: 102, column: 10, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3665, file: !95, line: 102, column: 9)
!3678 = !DILocation(line: 102, column: 34, scope: !3677)
!3679 = !DILocation(line: 102, column: 49, scope: !3677)
!3680 = !DILocation(line: 102, column: 69, scope: !3677)
!3681 = !DILocation(line: 103, column: 38, scope: !3677)
!3682 = !DILocation(line: 102, column: 9, scope: !3665)
!3683 = !DILocation(line: 109, column: 12, scope: !3665)
!3684 = !DILocation(line: 109, column: 5, scope: !3665)
!3685 = !DILocation(line: 112, column: 5, scope: !3665)
!3686 = !DILocation(line: 115, column: 44, scope: !3665)
!3687 = !DILocation(line: 118, column: 5, scope: !3665)
!3688 = !DILocation(line: 118, column: 23, scope: !3665)
!3689 = !DILocation(line: 118, column: 35, scope: !3665)
!3690 = !DILocation(line: 121, column: 42, scope: !3665)
!3691 = !DILocation(line: 121, column: 38, scope: !3665)
!3692 = !DILocation(line: 121, column: 5, scope: !3665)
!3693 = !DILocation(line: 121, column: 17, scope: !3665)
!3694 = !DILocation(line: 121, column: 35, scope: !3665)
!3695 = !DILocation(line: 123, column: 5, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3665, file: !95, line: 123, column: 5)
!3697 = !DILocation(line: 123, column: 5, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3696, file: !95, line: 123, column: 5)
!3699 = !DILocation(line: 123, column: 5, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3698, file: !95, line: 123, column: 5)
!3701 = !DILocation(line: 131, column: 1, scope: !3665)
!3702 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !95, file: !95, line: 81, type: !3703, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3705)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!91, !3669}
!3705 = !{!3706}
!3706 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3702, file: !95, line: 81, type: !3669)
!3707 = !DILocation(line: 0, scope: !3702)
!3708 = !DILocation(line: 84, column: 25, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3702, file: !95, line: 84, column: 9)
!3710 = !DILocation(line: 84, column: 35, scope: !3709)
!3711 = !DILocation(line: 84, column: 45, scope: !3709)
!3712 = !DILocation(line: 93, column: 1, scope: !3702)
!3713 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !95, file: !95, line: 133, type: !3666, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3714)
!3714 = !{!3715}
!3715 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3713, file: !95, line: 133, type: !3669)
!3716 = !DILocation(line: 0, scope: !3713)
!3717 = !DILocation(line: 136, column: 9, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3713, file: !95, line: 136, column: 9)
!3719 = !DILocation(line: 136, column: 9, scope: !3713)
!3720 = !DILocation(line: 140, column: 9, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3713, file: !95, line: 140, column: 9)
!3722 = !DILocation(line: 140, column: 33, scope: !3721)
!3723 = !DILocation(line: 140, column: 48, scope: !3721)
!3724 = !DILocation(line: 140, column: 9, scope: !3713)
!3725 = !DILocation(line: 146, column: 12, scope: !3713)
!3726 = !DILocation(line: 146, column: 5, scope: !3713)
!3727 = !DILocation(line: 149, column: 29, scope: !3713)
!3728 = !DILocation(line: 149, column: 44, scope: !3713)
!3729 = !DILocation(line: 151, column: 29, scope: !3713)
!3730 = !DILocation(line: 151, column: 5, scope: !3713)
!3731 = !DILocation(line: 153, column: 5, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3713, file: !95, line: 153, column: 5)
!3733 = !DILocation(line: 159, column: 5, scope: !3713)
!3734 = !DILocation(line: 160, column: 1, scope: !3713)
!3735 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !95, file: !95, line: 163, type: !3736, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3739)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!3668, !3738, !1541}
!3738 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !106, line: 860, baseType: !119)
!3739 = !{!3740, !3741}
!3740 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3735, file: !95, line: 163, type: !3738)
!3741 = !DILocalVariable(name: "count", arg: 2, scope: !3735, file: !95, line: 163, type: !1541)
!3742 = !DILocation(line: 0, scope: !3735)
!3743 = !DILocation(line: 166, column: 9, scope: !3735)
!3744 = !DILocation(line: 167, column: 44, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !95, line: 167, column: 13)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !95, line: 166, column: 51)
!3747 = distinct !DILexicalBlock(scope: !3735, file: !95, line: 166, column: 9)
!3748 = !DILocation(line: 167, column: 59, scope: !3745)
!3749 = !DILocation(line: 167, column: 13, scope: !3746)
!3750 = !DILocation(line: 170, column: 38, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3745, file: !95, line: 167, column: 79)
!3752 = !DILocation(line: 170, column: 13, scope: !3751)
!3753 = !DILocation(line: 172, column: 59, scope: !3751)
!3754 = !DILocation(line: 173, column: 9, scope: !3751)
!3755 = !DILocation(line: 175, column: 36, scope: !3746)
!3756 = !DILocation(line: 175, column: 18, scope: !3746)
!3757 = !DILocation(line: 177, column: 5, scope: !3746)
!3758 = !DILocation(line: 179, column: 44, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !95, line: 179, column: 13)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !95, line: 178, column: 55)
!3761 = distinct !DILexicalBlock(scope: !3747, file: !95, line: 178, column: 14)
!3762 = !DILocation(line: 179, column: 59, scope: !3759)
!3763 = !DILocation(line: 179, column: 13, scope: !3760)
!3764 = !DILocation(line: 182, column: 38, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3759, file: !95, line: 179, column: 79)
!3766 = !DILocation(line: 182, column: 13, scope: !3765)
!3767 = !DILocation(line: 184, column: 59, scope: !3765)
!3768 = !DILocation(line: 186, column: 9, scope: !3765)
!3769 = !DILocation(line: 188, column: 68, scope: !3760)
!3770 = !DILocation(line: 188, column: 50, scope: !3760)
!3771 = !DILocation(line: 188, column: 18, scope: !3760)
!3772 = !DILocation(line: 0, scope: !3747)
!3773 = !DILocation(line: 193, column: 5, scope: !3735)
!3774 = !DILocation(line: 194, column: 1, scope: !3735)
!3775 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !95, file: !95, line: 196, type: !3776, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3778)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!3668, !61, !61, !1541}
!3778 = !{!3779, !3780, !3781}
!3779 = !DILocalVariable(name: "start_count", arg: 1, scope: !3775, file: !95, line: 196, type: !61)
!3780 = !DILocalVariable(name: "end_count", arg: 2, scope: !3775, file: !95, line: 196, type: !61)
!3781 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3775, file: !95, line: 196, type: !1541)
!3782 = !DILocation(line: 0, scope: !3775)
!3783 = !DILocation(line: 198, column: 24, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3775, file: !95, line: 198, column: 9)
!3785 = !DILocation(line: 198, column: 9, scope: !3775)
!3786 = !DILocation(line: 0, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3775, file: !95, line: 202, column: 9)
!3788 = !DILocation(line: 208, column: 5, scope: !3775)
!3789 = !DILocation(line: 209, column: 1, scope: !3775)
!3790 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !95, file: !95, line: 211, type: !3791, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3794)
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!3668, !3669, !3793}
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 32)
!3794 = !{!3795, !3796}
!3795 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3790, file: !95, line: 211, type: !3669)
!3796 = !DILocalVariable(name: "running_status", arg: 2, scope: !3790, file: !95, line: 211, type: !3793)
!3797 = !DILocation(line: 0, scope: !3790)
!3798 = !DILocation(line: 213, column: 18, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3790, file: !95, line: 213, column: 9)
!3800 = !DILocation(line: 213, column: 9, scope: !3790)
!3801 = !DILocation(line: 217, column: 47, scope: !3790)
!3802 = !DILocation(line: 217, column: 21, scope: !3790)
!3803 = !DILocation(line: 219, column: 5, scope: !3790)
!3804 = !DILocation(line: 220, column: 1, scope: !3790)
!3805 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !95, file: !95, line: 222, type: !3806, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3808)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!3668, !3669, !151, !88}
!3808 = !{!3809, !3810, !3811}
!3809 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3805, file: !95, line: 222, type: !3669)
!3810 = !DILocalVariable(name: "callback", arg: 2, scope: !3805, file: !95, line: 223, type: !151)
!3811 = !DILocalVariable(name: "user_data", arg: 3, scope: !3805, file: !95, line: 224, type: !88)
!3812 = !DILocation(line: 0, scope: !3805)
!3813 = !DILocation(line: 227, column: 9, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3805, file: !95, line: 227, column: 9)
!3815 = !DILocation(line: 227, column: 9, scope: !3805)
!3816 = !DILocation(line: 231, column: 34, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3805, file: !95, line: 231, column: 9)
!3818 = !DILocation(line: 231, column: 49, scope: !3817)
!3819 = !DILocation(line: 231, column: 69, scope: !3817)
!3820 = !DILocation(line: 232, column: 38, scope: !3817)
!3821 = !DILocation(line: 232, column: 53, scope: !3817)
!3822 = !DILocation(line: 231, column: 9, scope: !3805)
!3823 = !DILocation(line: 237, column: 18, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3805, file: !95, line: 237, column: 9)
!3825 = !DILocation(line: 237, column: 9, scope: !3805)
!3826 = !DILocation(line: 245, column: 46, scope: !3805)
!3827 = !DILocation(line: 245, column: 56, scope: !3805)
!3828 = !DILocation(line: 246, column: 46, scope: !3805)
!3829 = !DILocation(line: 246, column: 56, scope: !3805)
!3830 = !DILocation(line: 248, column: 5, scope: !3805)
!3831 = !DILocation(line: 250, column: 5, scope: !3805)
!3832 = !DILocation(line: 252, column: 1, scope: !3805)
!3833 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !95, file: !95, line: 256, type: !3834, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3837)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!3668, !3669, !61, !3836}
!3836 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !98, line: 383, baseType: !142)
!3837 = !{!3838, !3839, !3840, !3841}
!3838 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3833, file: !95, line: 256, type: !3669)
!3839 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3833, file: !95, line: 256, type: !61)
!3840 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3833, file: !95, line: 256, type: !3836)
!3841 = !DILocalVariable(name: "mask", scope: !3833, file: !95, line: 259, type: !60)
!3842 = !DILocation(line: 0, scope: !3833)
!3843 = !DILocation(line: 259, column: 5, scope: !3833)
!3844 = !DILocation(line: 259, column: 23, scope: !3833)
!3845 = !DILocation(line: 261, column: 9, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3833, file: !95, line: 261, column: 9)
!3847 = !DILocation(line: 261, column: 9, scope: !3833)
!3848 = !DILocation(line: 265, column: 34, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3833, file: !95, line: 265, column: 9)
!3850 = !DILocation(line: 265, column: 49, scope: !3849)
!3851 = !DILocation(line: 266, column: 13, scope: !3849)
!3852 = !DILocation(line: 266, column: 41, scope: !3849)
!3853 = !DILocation(line: 266, column: 56, scope: !3849)
!3854 = !DILocation(line: 265, column: 9, scope: !3833)
!3855 = !DILocation(line: 271, column: 25, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3833, file: !95, line: 271, column: 9)
!3857 = !DILocation(line: 271, column: 9, scope: !3833)
!3858 = !DILocation(line: 282, column: 12, scope: !3833)
!3859 = !DILocation(line: 282, column: 10, scope: !3833)
!3860 = !DILocation(line: 284, column: 5, scope: !3833)
!3861 = !DILocation(line: 286, column: 5, scope: !3833)
!3862 = !DILocation(line: 286, column: 23, scope: !3833)
!3863 = !DILocation(line: 286, column: 34, scope: !3833)
!3864 = !DILocation(line: 287, column: 5, scope: !3833)
!3865 = !DILocation(line: 287, column: 23, scope: !3833)
!3866 = !DILocation(line: 287, column: 34, scope: !3833)
!3867 = !DILocation(line: 290, column: 5, scope: !3833)
!3868 = !DILocation(line: 290, column: 23, scope: !3833)
!3869 = !DILocation(line: 290, column: 37, scope: !3833)
!3870 = !DILocation(line: 291, column: 39, scope: !3833)
!3871 = !DILocation(line: 291, column: 5, scope: !3833)
!3872 = !DILocation(line: 291, column: 23, scope: !3833)
!3873 = !DILocation(line: 291, column: 37, scope: !3833)
!3874 = !DILocation(line: 292, column: 5, scope: !3833)
!3875 = !DILocation(line: 292, column: 23, scope: !3833)
!3876 = !DILocation(line: 292, column: 37, scope: !3833)
!3877 = !DILocation(line: 297, column: 47, scope: !3833)
!3878 = !DILocation(line: 298, column: 33, scope: !3833)
!3879 = !DILocation(line: 296, column: 5, scope: !3833)
!3880 = !DILocation(line: 296, column: 23, scope: !3833)
!3881 = !DILocation(line: 296, column: 31, scope: !3833)
!3882 = !DILocation(line: 300, column: 5, scope: !3833)
!3883 = !DILocation(line: 300, column: 29, scope: !3833)
!3884 = distinct !{!3884, !3882, !3885}
!3885 = !DILocation(line: 300, column: 39, scope: !3833)
!3886 = !DILocation(line: 301, column: 23, scope: !3833)
!3887 = !DILocation(line: 301, column: 33, scope: !3833)
!3888 = !DILocation(line: 302, column: 5, scope: !3833)
!3889 = !DILocation(line: 302, column: 23, scope: !3833)
!3890 = !DILocation(line: 302, column: 34, scope: !3833)
!3891 = !DILocation(line: 303, column: 44, scope: !3833)
!3892 = !DILocation(line: 305, column: 28, scope: !3833)
!3893 = !DILocation(line: 305, column: 5, scope: !3833)
!3894 = !DILocation(line: 306, column: 5, scope: !3833)
!3895 = !DILocation(line: 307, column: 1, scope: !3833)
!3896 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !95, file: !95, line: 310, type: !3897, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3899)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!3668, !61}
!3899 = !{!3900}
!3900 = !DILocalVariable(name: "ms", arg: 1, scope: !3896, file: !95, line: 310, type: !61)
!3901 = !DILocation(line: 0, scope: !3896)
!3902 = !DILocation(line: 313, column: 40, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3896, file: !95, line: 313, column: 9)
!3904 = !DILocation(line: 313, column: 55, scope: !3903)
!3905 = !DILocation(line: 313, column: 9, scope: !3896)
!3906 = !DILocation(line: 316, column: 34, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3903, file: !95, line: 313, column: 75)
!3908 = !DILocation(line: 316, column: 9, scope: !3907)
!3909 = !DILocation(line: 317, column: 55, scope: !3907)
!3910 = !DILocation(line: 318, column: 5, scope: !3907)
!3911 = !DILocation(line: 320, column: 20, scope: !3896)
!3912 = !DILocation(line: 320, column: 45, scope: !3896)
!3913 = !DILocation(line: 320, column: 5, scope: !3896)
!3914 = !DILocation(line: 322, column: 5, scope: !3896)
!3915 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !95, file: !95, line: 327, type: !3834, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3916)
!3916 = !{!3917, !3918, !3919, !3920}
!3917 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3915, file: !95, line: 327, type: !3669)
!3918 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3915, file: !95, line: 327, type: !61)
!3919 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3915, file: !95, line: 327, type: !3836)
!3920 = !DILocalVariable(name: "mask", scope: !3915, file: !95, line: 329, type: !60)
!3921 = !DILocation(line: 0, scope: !3915)
!3922 = !DILocation(line: 329, column: 5, scope: !3915)
!3923 = !DILocation(line: 329, column: 23, scope: !3915)
!3924 = !DILocation(line: 331, column: 9, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3915, file: !95, line: 331, column: 9)
!3926 = !DILocation(line: 331, column: 9, scope: !3915)
!3927 = !DILocation(line: 336, column: 34, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3915, file: !95, line: 336, column: 9)
!3929 = !DILocation(line: 336, column: 49, scope: !3928)
!3930 = !DILocation(line: 337, column: 13, scope: !3928)
!3931 = !DILocation(line: 337, column: 41, scope: !3928)
!3932 = !DILocation(line: 337, column: 56, scope: !3928)
!3933 = !DILocation(line: 336, column: 9, scope: !3915)
!3934 = !DILocation(line: 348, column: 5, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3915, file: !95, line: 348, column: 5)
!3936 = !DILocation(line: 349, column: 29, scope: !3915)
!3937 = !DILocation(line: 349, column: 49, scope: !3915)
!3938 = !DILocation(line: 351, column: 12, scope: !3915)
!3939 = !DILocation(line: 351, column: 10, scope: !3915)
!3940 = !DILocation(line: 353, column: 5, scope: !3915)
!3941 = !DILocation(line: 355, column: 5, scope: !3915)
!3942 = !DILocation(line: 355, column: 23, scope: !3915)
!3943 = !DILocation(line: 355, column: 34, scope: !3915)
!3944 = !DILocation(line: 356, column: 5, scope: !3915)
!3945 = !DILocation(line: 356, column: 23, scope: !3915)
!3946 = !DILocation(line: 356, column: 34, scope: !3915)
!3947 = !DILocation(line: 359, column: 5, scope: !3915)
!3948 = !DILocation(line: 359, column: 23, scope: !3915)
!3949 = !DILocation(line: 359, column: 37, scope: !3915)
!3950 = !DILocation(line: 360, column: 39, scope: !3915)
!3951 = !DILocation(line: 360, column: 5, scope: !3915)
!3952 = !DILocation(line: 360, column: 23, scope: !3915)
!3953 = !DILocation(line: 360, column: 37, scope: !3915)
!3954 = !DILocation(line: 361, column: 5, scope: !3915)
!3955 = !DILocation(line: 361, column: 23, scope: !3915)
!3956 = !DILocation(line: 361, column: 37, scope: !3915)
!3957 = !DILocation(line: 366, column: 47, scope: !3915)
!3958 = !DILocation(line: 367, column: 33, scope: !3915)
!3959 = !DILocation(line: 365, column: 5, scope: !3915)
!3960 = !DILocation(line: 365, column: 23, scope: !3915)
!3961 = !DILocation(line: 365, column: 31, scope: !3915)
!3962 = !DILocation(line: 369, column: 5, scope: !3915)
!3963 = !DILocation(line: 369, column: 29, scope: !3915)
!3964 = distinct !{!3964, !3962, !3965}
!3965 = !DILocation(line: 369, column: 39, scope: !3915)
!3966 = !DILocation(line: 370, column: 23, scope: !3915)
!3967 = !DILocation(line: 370, column: 33, scope: !3915)
!3968 = !DILocation(line: 371, column: 5, scope: !3915)
!3969 = !DILocation(line: 371, column: 23, scope: !3915)
!3970 = !DILocation(line: 371, column: 34, scope: !3915)
!3971 = !DILocation(line: 373, column: 28, scope: !3915)
!3972 = !DILocation(line: 373, column: 5, scope: !3915)
!3973 = !DILocation(line: 375, column: 44, scope: !3915)
!3974 = !DILocation(line: 377, column: 5, scope: !3915)
!3975 = !DILocation(line: 378, column: 1, scope: !3915)
!3976 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !95, file: !95, line: 382, type: !3897, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3977)
!3977 = !{!3978}
!3978 = !DILocalVariable(name: "us", arg: 1, scope: !3976, file: !95, line: 382, type: !61)
!3979 = !DILocation(line: 0, scope: !3976)
!3980 = !DILocation(line: 385, column: 40, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3976, file: !95, line: 385, column: 9)
!3982 = !DILocation(line: 385, column: 55, scope: !3981)
!3983 = !DILocation(line: 385, column: 9, scope: !3976)
!3984 = !DILocation(line: 388, column: 34, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3981, file: !95, line: 385, column: 75)
!3986 = !DILocation(line: 388, column: 9, scope: !3985)
!3987 = !DILocation(line: 390, column: 55, scope: !3985)
!3988 = !DILocation(line: 391, column: 5, scope: !3985)
!3989 = !DILocation(line: 392, column: 20, scope: !3976)
!3990 = !DILocation(line: 392, column: 45, scope: !3976)
!3991 = !DILocation(line: 392, column: 5, scope: !3976)
!3992 = !DILocation(line: 394, column: 5, scope: !3976)
!3993 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !95, file: !95, line: 398, type: !3666, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3994)
!3994 = !{!3995, !3996}
!3995 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3993, file: !95, line: 398, type: !3669)
!3996 = !DILocalVariable(name: "mask", scope: !3993, file: !95, line: 400, type: !60)
!3997 = !DILocation(line: 0, scope: !3993)
!3998 = !DILocation(line: 400, column: 5, scope: !3993)
!3999 = !DILocation(line: 400, column: 23, scope: !3993)
!4000 = !DILocation(line: 402, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3993, file: !95, line: 402, column: 9)
!4002 = !DILocation(line: 402, column: 9, scope: !3993)
!4003 = !DILocation(line: 413, column: 12, scope: !3993)
!4004 = !DILocation(line: 413, column: 10, scope: !3993)
!4005 = !DILocation(line: 415, column: 5, scope: !3993)
!4006 = !DILocation(line: 415, column: 23, scope: !3993)
!4007 = !DILocation(line: 415, column: 34, scope: !3993)
!4008 = !DILocation(line: 418, column: 5, scope: !3993)
!4009 = !DILocation(line: 418, column: 23, scope: !3993)
!4010 = !DILocation(line: 418, column: 34, scope: !3993)
!4011 = !DILocation(line: 420, column: 5, scope: !3993)
!4012 = !DILocation(line: 420, column: 23, scope: !3993)
!4013 = !DILocation(line: 420, column: 35, scope: !3993)
!4014 = !DILocation(line: 422, column: 29, scope: !3993)
!4015 = !DILocation(line: 422, column: 44, scope: !3993)
!4016 = !DILocation(line: 423, column: 28, scope: !3993)
!4017 = !DILocation(line: 423, column: 5, scope: !3993)
!4018 = !DILocation(line: 425, column: 33, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3993, file: !95, line: 425, column: 9)
!4020 = !DILocation(line: 425, column: 9, scope: !3993)
!4021 = !DILocation(line: 426, column: 9, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !95, line: 426, column: 9)
!4023 = distinct !DILexicalBlock(scope: !4019, file: !95, line: 425, column: 62)
!4024 = !DILocation(line: 427, column: 53, scope: !4023)
!4025 = !DILocation(line: 428, column: 5, scope: !4023)
!4026 = !DILocation(line: 430, column: 1, scope: !3993)
!4027 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !95, file: !95, line: 434, type: !4028, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4030)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!3668, !1541}
!4030 = !{!4031, !4032, !4033}
!4031 = !DILocalVariable(name: "handle", arg: 1, scope: !4027, file: !95, line: 434, type: !1541)
!4032 = !DILocalVariable(name: "timer", scope: !4027, file: !95, line: 436, type: !61)
!4033 = !DILocalVariable(name: "mask", scope: !4027, file: !95, line: 437, type: !61)
!4034 = !DILocation(line: 0, scope: !4027)
!4035 = !DILocation(line: 439, column: 24, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4027, file: !95, line: 439, column: 9)
!4037 = !DILocation(line: 439, column: 41, scope: !4036)
!4038 = !DILocation(line: 439, column: 9, scope: !4027)
!4039 = !DILocation(line: 443, column: 16, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4027, file: !95, line: 443, column: 9)
!4041 = !DILocation(line: 443, column: 9, scope: !4027)
!4042 = !DILocation(line: 448, column: 12, scope: !4027)
!4043 = !DILocation(line: 450, column: 15, scope: !4027)
!4044 = !DILocation(line: 451, column: 21, scope: !4027)
!4045 = !DILocation(line: 451, column: 13, scope: !4027)
!4046 = !DILocation(line: 452, column: 33, scope: !4027)
!4047 = !DILocation(line: 452, column: 41, scope: !4027)
!4048 = !DILocation(line: 453, column: 36, scope: !4027)
!4049 = !DILocation(line: 455, column: 5, scope: !4027)
!4050 = !DILocation(line: 456, column: 5, scope: !4027)
!4051 = !DILocation(line: 457, column: 1, scope: !4027)
!4052 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !95, file: !95, line: 459, type: !3897, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4053)
!4053 = !{!4054, !4055}
!4054 = !DILocalVariable(name: "handle", arg: 1, scope: !4052, file: !95, line: 459, type: !61)
!4055 = !DILocalVariable(name: "timer", scope: !4052, file: !95, line: 461, type: !60)
!4056 = !DILocation(line: 0, scope: !4052)
!4057 = !DILocation(line: 461, column: 5, scope: !4052)
!4058 = !DILocation(line: 461, column: 23, scope: !4052)
!4059 = !DILocation(line: 463, column: 17, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4052, file: !95, line: 463, column: 9)
!4061 = !DILocation(line: 463, column: 37, scope: !4060)
!4062 = !DILocation(line: 463, column: 9, scope: !4052)
!4063 = !DILocation(line: 467, column: 20, scope: !4052)
!4064 = !DILocation(line: 467, column: 11, scope: !4052)
!4065 = !DILocation(line: 469, column: 24, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4052, file: !95, line: 469, column: 9)
!4067 = !DILocation(line: 469, column: 41, scope: !4066)
!4068 = !DILocation(line: 469, column: 9, scope: !4052)
!4069 = !DILocation(line: 473, column: 30, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4052, file: !95, line: 473, column: 9)
!4071 = !DILocation(line: 473, column: 37, scope: !4070)
!4072 = !DILocation(line: 473, column: 9, scope: !4052)
!4073 = !DILocation(line: 477, column: 30, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4052, file: !95, line: 477, column: 9)
!4075 = !DILocation(line: 477, column: 37, scope: !4074)
!4076 = !DILocation(line: 477, column: 45, scope: !4074)
!4077 = !DILocation(line: 477, column: 9, scope: !4052)
!4078 = !DILocation(line: 481, column: 26, scope: !4052)
!4079 = !DILocation(line: 481, column: 33, scope: !4052)
!4080 = !DILocation(line: 481, column: 41, scope: !4052)
!4081 = !DILocation(line: 482, column: 36, scope: !4052)
!4082 = !DILocation(line: 484, column: 5, scope: !4052)
!4083 = !DILocation(line: 485, column: 1, scope: !4052)
!4084 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !95, file: !95, line: 487, type: !4085, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4087)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!3668, !61, !61, !151, !88}
!4087 = !{!4088, !4089, !4090, !4091, !4092, !4093, !4094}
!4088 = !DILocalVariable(name: "handle", arg: 1, scope: !4084, file: !95, line: 487, type: !61)
!4089 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !4084, file: !95, line: 487, type: !61)
!4090 = !DILocalVariable(name: "callback", arg: 3, scope: !4084, file: !95, line: 487, type: !151)
!4091 = !DILocalVariable(name: "user_data", arg: 4, scope: !4084, file: !95, line: 487, type: !88)
!4092 = !DILocalVariable(name: "current_time", scope: !4084, file: !95, line: 489, type: !61)
!4093 = !DILocalVariable(name: "mask", scope: !4084, file: !95, line: 490, type: !61)
!4094 = !DILocalVariable(name: "timer", scope: !4084, file: !95, line: 491, type: !61)
!4095 = !DILocation(line: 0, scope: !4084)
!4096 = !DILocation(line: 493, column: 17, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4084, file: !95, line: 493, column: 9)
!4098 = !DILocation(line: 493, column: 37, scope: !4097)
!4099 = !DILocation(line: 493, column: 9, scope: !4084)
!4100 = !DILocation(line: 497, column: 20, scope: !4084)
!4101 = !DILocation(line: 503, column: 37, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4084, file: !95, line: 503, column: 9)
!4103 = !DILocation(line: 503, column: 9, scope: !4084)
!4104 = !DILocation(line: 507, column: 37, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4084, file: !95, line: 507, column: 9)
!4106 = !DILocation(line: 507, column: 45, scope: !4105)
!4107 = !DILocation(line: 507, column: 9, scope: !4084)
!4108 = !DILocation(line: 511, column: 25, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4084, file: !95, line: 511, column: 9)
!4110 = !DILocation(line: 511, column: 9, scope: !4084)
!4111 = !DILocation(line: 516, column: 12, scope: !4084)
!4112 = !DILocation(line: 519, column: 30, scope: !4084)
!4113 = !DILocation(line: 521, column: 24, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4084, file: !95, line: 521, column: 9)
!4115 = !DILocation(line: 521, column: 38, scope: !4114)
!4116 = !DILocation(line: 521, column: 9, scope: !4084)
!4117 = !DILocation(line: 522, column: 9, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4114, file: !95, line: 521, column: 48)
!4119 = !DILocation(line: 523, column: 9, scope: !4118)
!4120 = !DILocation(line: 524, column: 38, scope: !4118)
!4121 = !DILocation(line: 525, column: 5, scope: !4118)
!4122 = !DILocation(line: 526, column: 5, scope: !4084)
!4123 = !DILocation(line: 528, column: 23, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4084, file: !95, line: 528, column: 8)
!4125 = !DILocation(line: 528, column: 41, scope: !4124)
!4126 = !DILocation(line: 528, column: 8, scope: !4084)
!4127 = !DILocation(line: 529, column: 51, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !95, line: 528, column: 51)
!4129 = !DILocation(line: 529, column: 24, scope: !4128)
!4130 = !DILocation(line: 530, column: 5, scope: !4128)
!4131 = !DILocation(line: 0, scope: !4124)
!4132 = !DILocation(line: 534, column: 34, scope: !4084)
!4133 = !DILocation(line: 535, column: 39, scope: !4084)
!4134 = !DILocation(line: 537, column: 49, scope: !4084)
!4135 = !DILocation(line: 538, column: 80, scope: !4084)
!4136 = !DILocation(line: 538, column: 33, scope: !4084)
!4137 = !DILocation(line: 538, column: 49, scope: !4084)
!4138 = !DILocation(line: 539, column: 50, scope: !4084)
!4139 = !DILocation(line: 539, column: 61, scope: !4084)
!4140 = !DILocation(line: 540, column: 50, scope: !4084)
!4141 = !DILocation(line: 540, column: 61, scope: !4084)
!4142 = !DILocation(line: 542, column: 5, scope: !4084)
!4143 = !DILocation(line: 546, column: 30, scope: !4084)
!4144 = !DILocation(line: 548, column: 5, scope: !4084)
!4145 = !DILocation(line: 550, column: 5, scope: !4084)
!4146 = !DILocation(line: 551, column: 1, scope: !4084)
!4147 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !95, file: !95, line: 553, type: !3897, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4148)
!4148 = !{!4149, !4150, !4151, !4152}
!4149 = !DILocalVariable(name: "handle", arg: 1, scope: !4147, file: !95, line: 553, type: !61)
!4150 = !DILocalVariable(name: "current_time", scope: !4147, file: !95, line: 555, type: !61)
!4151 = !DILocalVariable(name: "mask", scope: !4147, file: !95, line: 556, type: !61)
!4152 = !DILocalVariable(name: "timer", scope: !4147, file: !95, line: 557, type: !61)
!4153 = !DILocation(line: 0, scope: !4147)
!4154 = !DILocation(line: 559, column: 17, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4147, file: !95, line: 559, column: 9)
!4156 = !DILocation(line: 559, column: 37, scope: !4155)
!4157 = !DILocation(line: 559, column: 9, scope: !4147)
!4158 = !DILocation(line: 563, column: 20, scope: !4147)
!4159 = !DILocation(line: 565, column: 37, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4147, file: !95, line: 565, column: 9)
!4161 = !DILocation(line: 565, column: 48, scope: !4160)
!4162 = !DILocation(line: 565, column: 9, scope: !4147)
!4163 = !DILocation(line: 569, column: 37, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4147, file: !95, line: 569, column: 9)
!4165 = !DILocation(line: 569, column: 45, scope: !4164)
!4166 = !DILocation(line: 569, column: 9, scope: !4147)
!4167 = !DILocation(line: 574, column: 12, scope: !4147)
!4168 = !DILocation(line: 577, column: 30, scope: !4147)
!4169 = !DILocation(line: 578, column: 5, scope: !4147)
!4170 = !DILocation(line: 579, column: 30, scope: !4147)
!4171 = !DILocation(line: 581, column: 23, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4147, file: !95, line: 581, column: 8)
!4173 = !DILocation(line: 581, column: 41, scope: !4172)
!4174 = !DILocation(line: 581, column: 8, scope: !4147)
!4175 = !DILocation(line: 582, column: 51, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4172, file: !95, line: 581, column: 51)
!4177 = !DILocation(line: 582, column: 24, scope: !4176)
!4178 = !DILocation(line: 583, column: 5, scope: !4176)
!4179 = !DILocation(line: 0, scope: !4172)
!4180 = !DILocation(line: 587, column: 34, scope: !4147)
!4181 = !DILocation(line: 588, column: 39, scope: !4147)
!4182 = !DILocation(line: 590, column: 44, scope: !4147)
!4183 = !DILocation(line: 592, column: 24, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4147, file: !95, line: 592, column: 9)
!4185 = !DILocation(line: 592, column: 44, scope: !4184)
!4186 = !DILocation(line: 592, column: 9, scope: !4147)
!4187 = !DILocation(line: 593, column: 9, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4184, file: !95, line: 592, column: 50)
!4189 = !DILocation(line: 594, column: 5, scope: !4188)
!4190 = !DILocation(line: 598, column: 30, scope: !4147)
!4191 = !DILocation(line: 599, column: 5, scope: !4147)
!4192 = !DILocation(line: 601, column: 5, scope: !4147)
!4193 = !DILocation(line: 603, column: 1, scope: !4147)
!4194 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !95, file: !95, line: 605, type: !4195, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4197)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!3668, !61, !1541}
!4197 = !{!4198, !4199, !4200, !4201, !4202}
!4198 = !DILocalVariable(name: "handle", arg: 1, scope: !4194, file: !95, line: 605, type: !61)
!4199 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !4194, file: !95, line: 605, type: !1541)
!4200 = !DILocalVariable(name: "current_time", scope: !4194, file: !95, line: 607, type: !61)
!4201 = !DILocalVariable(name: "mask", scope: !4194, file: !95, line: 608, type: !61)
!4202 = !DILocalVariable(name: "timer", scope: !4194, file: !95, line: 609, type: !61)
!4203 = !DILocation(line: 0, scope: !4194)
!4204 = !DILocation(line: 611, column: 17, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4194, file: !95, line: 611, column: 9)
!4206 = !DILocation(line: 611, column: 37, scope: !4205)
!4207 = !DILocation(line: 611, column: 9, scope: !4194)
!4208 = !DILocation(line: 615, column: 20, scope: !4194)
!4209 = !DILocation(line: 617, column: 37, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4194, file: !95, line: 617, column: 9)
!4211 = !DILocation(line: 617, column: 45, scope: !4210)
!4212 = !DILocation(line: 617, column: 9, scope: !4194)
!4213 = !DILocation(line: 622, column: 12, scope: !4194)
!4214 = !DILocation(line: 624, column: 35, scope: !4194)
!4215 = !DILocation(line: 624, column: 51, scope: !4194)
!4216 = !DILocation(line: 624, column: 76, scope: !4194)
!4217 = !DILocation(line: 624, column: 49, scope: !4194)
!4218 = !DILocation(line: 626, column: 37, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4194, file: !95, line: 626, column: 9)
!4220 = !DILocation(line: 626, column: 9, scope: !4194)
!4221 = !DILocation(line: 0, scope: !4219)
!4222 = !DILocation(line: 632, column: 5, scope: !4194)
!4223 = !DILocation(line: 634, column: 5, scope: !4194)
!4224 = !DILocation(line: 636, column: 1, scope: !4194)
!4225 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !171, file: !171, line: 56, type: !4226, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4228)
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!61, !61, !61, !61}
!4228 = !{!4229, !4230, !4231, !4232, !4234, !4235}
!4229 = !DILocalVariable(name: "mul1", arg: 1, scope: !4225, file: !171, line: 56, type: !61)
!4230 = !DILocalVariable(name: "mul2", arg: 2, scope: !4225, file: !171, line: 56, type: !61)
!4231 = !DILocalVariable(name: "div", arg: 3, scope: !4225, file: !171, line: 56, type: !61)
!4232 = !DILocalVariable(name: "data1", scope: !4225, file: !171, line: 58, type: !4233)
!4233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !508)
!4234 = !DILocalVariable(name: "data2", scope: !4225, file: !171, line: 59, type: !4233)
!4235 = !DILocalVariable(name: "result", scope: !4225, file: !171, line: 60, type: !4233)
!4236 = !DILocation(line: 0, scope: !4225)
!4237 = !DILocation(line: 63, column: 22, scope: !4225)
!4238 = !DILocation(line: 63, column: 32, scope: !4225)
!4239 = !DILocation(line: 64, column: 23, scope: !4225)
!4240 = !DILocation(line: 64, column: 40, scope: !4225)
!4241 = !DILocation(line: 66, column: 27, scope: !4225)
!4242 = !DILocation(line: 67, column: 27, scope: !4225)
!4243 = !DILocation(line: 67, column: 44, scope: !4225)
!4244 = !DILocation(line: 69, column: 26, scope: !4225)
!4245 = !DILocation(line: 70, column: 36, scope: !4225)
!4246 = !DILocation(line: 70, column: 43, scope: !4225)
!4247 = !DILocation(line: 70, column: 55, scope: !4225)
!4248 = !DILocation(line: 72, column: 34, scope: !4225)
!4249 = !DILocation(line: 72, column: 41, scope: !4225)
!4250 = !DILocation(line: 72, column: 5, scope: !4225)
!4251 = distinct !DISubprogram(name: "gpt_current_count", scope: !171, file: !171, line: 75, type: !4252, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4254)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!61, !316}
!4254 = !{!4255}
!4255 = !DILocalVariable(name: "gpt", arg: 1, scope: !4251, file: !171, line: 75, type: !316)
!4256 = !DILocation(line: 0, scope: !4251)
!4257 = !DILocation(line: 77, column: 17, scope: !4251)
!4258 = !DILocation(line: 77, column: 5, scope: !4251)
!4259 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !171, file: !171, line: 81, type: !4260, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!61, !61}
!4262 = !{!4263}
!4263 = !DILocalVariable(name: "ms", arg: 1, scope: !4259, file: !171, line: 81, type: !61)
!4264 = !DILocation(line: 0, scope: !4259)
!4265 = !DILocation(line: 83, column: 27, scope: !4259)
!4266 = !DILocation(line: 83, column: 37, scope: !4259)
!4267 = !DILocation(line: 83, column: 43, scope: !4259)
!4268 = !DILocation(line: 83, column: 32, scope: !4259)
!4269 = !DILocation(line: 83, column: 53, scope: !4259)
!4270 = !DILocation(line: 83, column: 59, scope: !4259)
!4271 = !DILocation(line: 83, column: 48, scope: !4259)
!4272 = !DILocation(line: 83, column: 70, scope: !4259)
!4273 = !DILocation(line: 83, column: 76, scope: !4259)
!4274 = !DILocation(line: 83, column: 65, scope: !4259)
!4275 = !DILocation(line: 83, column: 5, scope: !4259)
!4276 = !DILocation(line: 90, column: 9, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !342, file: !171, line: 90, column: 9)
!4278 = !DILocation(line: 90, column: 9, scope: !342)
!4279 = !DILocation(line: 91, column: 13, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !171, line: 91, column: 13)
!4281 = distinct !DILexicalBlock(scope: !4277, file: !171, line: 90, column: 24)
!4282 = !DILocation(line: 91, column: 13, scope: !4281)
!4283 = !DILocation(line: 92, column: 32, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4280, file: !171, line: 91, column: 41)
!4285 = !DILocation(line: 92, column: 30, scope: !4284)
!4286 = !DILocation(line: 93, column: 41, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !171, line: 93, column: 17)
!4288 = !DILocation(line: 0, scope: !4280)
!4289 = !DILocation(line: 105, column: 1, scope: !342)
!4290 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !171, file: !171, line: 107, type: !343, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!4291 = !DILocation(line: 109, column: 9, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4290, file: !171, line: 109, column: 9)
!4293 = !DILocation(line: 109, column: 9, scope: !4290)
!4294 = !DILocation(line: 110, column: 9, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4292, file: !171, line: 109, column: 61)
!4296 = !DILocation(line: 111, column: 5, scope: !4295)
!4297 = !DILocation(line: 112, column: 1, scope: !4290)
!4298 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !171, file: !171, line: 114, type: !4260, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4299)
!4299 = !{!4300}
!4300 = !DILocalVariable(name: "time_us", arg: 1, scope: !4298, file: !171, line: 114, type: !61)
!4301 = !DILocation(line: 0, scope: !4298)
!4302 = !DILocation(line: 116, column: 5, scope: !4298)
!4303 = !DILocation(line: 118, column: 9, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4298, file: !171, line: 118, column: 9)
!4305 = !DILocation(line: 118, column: 9, scope: !4298)
!4306 = !DILocation(line: 120, column: 49, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4304, file: !171, line: 118, column: 37)
!4308 = !DILocation(line: 120, column: 16, scope: !4307)
!4309 = !DILocation(line: 120, column: 9, scope: !4307)
!4310 = !DILocation(line: 0, scope: !4304)
!4311 = !DILocation(line: 125, column: 1, scope: !4298)
!4312 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !171, file: !171, line: 127, type: !4260, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4313)
!4313 = !{!4314}
!4314 = !DILocalVariable(name: "count", arg: 1, scope: !4312, file: !171, line: 127, type: !61)
!4315 = !DILocation(line: 0, scope: !4312)
!4316 = !DILocation(line: 129, column: 5, scope: !4312)
!4317 = !DILocation(line: 131, column: 9, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4312, file: !171, line: 131, column: 9)
!4319 = !DILocation(line: 131, column: 9, scope: !4312)
!4320 = !DILocation(line: 133, column: 69, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4318, file: !171, line: 131, column: 37)
!4322 = !DILocation(line: 133, column: 16, scope: !4321)
!4323 = !DILocation(line: 133, column: 9, scope: !4321)
!4324 = !DILocation(line: 0, scope: !4318)
!4325 = !DILocation(line: 138, column: 1, scope: !4312)
!4326 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !171, file: !171, line: 141, type: !4327, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !316, !61, !61}
!4329 = !{!4330, !4331, !4332}
!4330 = !DILocalVariable(name: "gpt", arg: 1, scope: !4326, file: !171, line: 141, type: !316)
!4331 = !DILocalVariable(name: "clock_source", arg: 2, scope: !4326, file: !171, line: 141, type: !61)
!4332 = !DILocalVariable(name: "divide", arg: 3, scope: !4326, file: !171, line: 141, type: !61)
!4333 = !DILocation(line: 0, scope: !4326)
!4334 = !DILocation(line: 143, column: 5, scope: !4326)
!4335 = !DILocation(line: 145, column: 33, scope: !4326)
!4336 = !DILocation(line: 145, column: 10, scope: !4326)
!4337 = !DILocation(line: 145, column: 18, scope: !4326)
!4338 = !DILocation(line: 148, column: 10, scope: !4326)
!4339 = !DILocation(line: 148, column: 18, scope: !4326)
!4340 = !DILocation(line: 149, column: 1, scope: !4326)
!4341 = distinct !DISubprogram(name: "gpt_delay_time", scope: !171, file: !171, line: 151, type: !4342, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4344)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{null, !316, !859}
!4344 = !{!4345, !4346, !4347, !4348}
!4345 = !DILocalVariable(name: "gpt", arg: 1, scope: !4341, file: !171, line: 151, type: !316)
!4346 = !DILocalVariable(name: "count", arg: 2, scope: !4341, file: !171, line: 151, type: !859)
!4347 = !DILocalVariable(name: "end_count", scope: !4341, file: !171, line: 153, type: !61)
!4348 = !DILocalVariable(name: "current", scope: !4341, file: !171, line: 153, type: !61)
!4349 = !DILocation(line: 0, scope: !4341)
!4350 = !DILocation(line: 155, column: 17, scope: !4341)
!4351 = !DILocation(line: 156, column: 25, scope: !4341)
!4352 = !DILocation(line: 156, column: 33, scope: !4341)
!4353 = !DILocation(line: 159, column: 19, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4341, file: !171, line: 159, column: 9)
!4355 = !DILocation(line: 159, column: 9, scope: !4341)
!4356 = !DILocation(line: 160, column: 16, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4354, file: !171, line: 159, column: 30)
!4358 = !DILocation(line: 160, column: 39, scope: !4357)
!4359 = !DILocation(line: 160, column: 9, scope: !4357)
!4360 = distinct !{!4360, !4359, !4361}
!4361 = !DILocation(line: 160, column: 51, scope: !4357)
!4362 = !DILocation(line: 162, column: 16, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4354, file: !171, line: 161, column: 12)
!4364 = !DILocation(line: 162, column: 39, scope: !4363)
!4365 = !DILocation(line: 162, column: 9, scope: !4363)
!4366 = distinct !{!4366, !4365, !4367}
!4367 = !DILocation(line: 162, column: 50, scope: !4363)
!4368 = !DILocation(line: 163, column: 16, scope: !4363)
!4369 = !DILocation(line: 163, column: 39, scope: !4363)
!4370 = !DILocation(line: 163, column: 9, scope: !4363)
!4371 = distinct !{!4371, !4370, !4372}
!4372 = !DILocation(line: 163, column: 51, scope: !4363)
!4373 = !DILocation(line: 165, column: 1, scope: !4341)
!4374 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !171, file: !171, line: 166, type: !4375, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{null, !316}
!4377 = !{!4378}
!4378 = !DILocalVariable(name: "gpt", arg: 1, scope: !4374, file: !171, line: 166, type: !316)
!4379 = !DILocation(line: 0, scope: !4374)
!4380 = !DILocation(line: 168, column: 10, scope: !4374)
!4381 = !DILocation(line: 168, column: 22, scope: !4374)
!4382 = !DILocation(line: 169, column: 10, scope: !4374)
!4383 = !DILocation(line: 169, column: 22, scope: !4374)
!4384 = !DILocation(line: 170, column: 21, scope: !4374)
!4385 = !DILocation(line: 171, column: 5, scope: !4374)
!4386 = !DILocation(line: 171, column: 16, scope: !4374)
!4387 = distinct !{!4387, !4385, !4388}
!4388 = !DILocation(line: 171, column: 26, scope: !4374)
!4389 = !DILocation(line: 172, column: 10, scope: !4374)
!4390 = !DILocation(line: 172, column: 22, scope: !4374)
!4391 = !DILocation(line: 173, column: 10, scope: !4374)
!4392 = !DILocation(line: 173, column: 22, scope: !4374)
!4393 = !DILocation(line: 174, column: 10, scope: !4374)
!4394 = !DILocation(line: 174, column: 22, scope: !4374)
!4395 = !DILocation(line: 176, column: 13, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4374, file: !171, line: 176, column: 9)
!4397 = !DILocation(line: 176, column: 9, scope: !4374)
!4398 = !DILocation(line: 177, column: 27, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !171, line: 176, column: 22)
!4400 = !DILocation(line: 178, column: 5, scope: !4399)
!4401 = !DILocation(line: 179, column: 1, scope: !4374)
!4402 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !171, file: !171, line: 181, type: !4252, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4403)
!4403 = !{!4404, !4405}
!4404 = !DILocalVariable(name: "gpt", arg: 1, scope: !4402, file: !171, line: 181, type: !316)
!4405 = !DILocalVariable(name: "mask", scope: !4402, file: !171, line: 183, type: !60)
!4406 = !DILocation(line: 0, scope: !4402)
!4407 = !DILocation(line: 183, column: 5, scope: !4402)
!4408 = !DILocation(line: 183, column: 23, scope: !4402)
!4409 = !DILocation(line: 185, column: 17, scope: !4402)
!4410 = !DILocation(line: 185, column: 10, scope: !4402)
!4411 = !DILocation(line: 187, column: 22, scope: !4402)
!4412 = !DILocation(line: 189, column: 12, scope: !4402)
!4413 = !DILocation(line: 190, column: 1, scope: !4402)
!4414 = !DILocation(line: 189, column: 5, scope: !4402)
!4415 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !171, file: !171, line: 192, type: !4416, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{null, !316, !61}
!4418 = !{!4419, !4420}
!4419 = !DILocalVariable(name: "gpt", arg: 1, scope: !4415, file: !171, line: 192, type: !316)
!4420 = !DILocalVariable(name: "mask", arg: 2, scope: !4415, file: !171, line: 192, type: !61)
!4421 = !DILocation(line: 0, scope: !4415)
!4422 = !DILocation(line: 194, column: 10, scope: !4415)
!4423 = !DILocation(line: 194, column: 21, scope: !4415)
!4424 = !DILocation(line: 195, column: 1, scope: !4415)
!4425 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !171, file: !171, line: 197, type: !1144, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4426)
!4426 = !{!4427, !4428, !4429, !4430, !4431}
!4427 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4425, file: !171, line: 197, type: !950)
!4428 = !DILocalVariable(name: "i", scope: !4425, file: !171, line: 199, type: !61)
!4429 = !DILocalVariable(name: "mask", scope: !4425, file: !171, line: 200, type: !60)
!4430 = !DILocalVariable(name: "state", scope: !4425, file: !171, line: 201, type: !60)
!4431 = !DILocalVariable(name: "enable", scope: !4425, file: !171, line: 202, type: !60)
!4432 = !DILocation(line: 0, scope: !4425)
!4433 = !DILocation(line: 200, column: 5, scope: !4425)
!4434 = !DILocation(line: 200, column: 23, scope: !4425)
!4435 = !DILocation(line: 201, column: 5, scope: !4425)
!4436 = !DILocation(line: 201, column: 23, scope: !4425)
!4437 = !DILocation(line: 202, column: 5, scope: !4425)
!4438 = !DILocation(line: 202, column: 23, scope: !4425)
!4439 = !DILocation(line: 207, column: 5, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4425, file: !171, line: 207, column: 5)
!4441 = !DILocation(line: 209, column: 18, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !171, line: 207, column: 44)
!4443 = distinct !DILexicalBlock(scope: !4440, file: !171, line: 207, column: 5)
!4444 = !DILocation(line: 209, column: 29, scope: !4442)
!4445 = !DILocation(line: 209, column: 16, scope: !4442)
!4446 = !DILocation(line: 210, column: 29, scope: !4442)
!4447 = !DILocation(line: 210, column: 16, scope: !4442)
!4448 = !DILocation(line: 212, column: 16, scope: !4442)
!4449 = !DILocation(line: 212, column: 14, scope: !4442)
!4450 = !DILocation(line: 214, column: 9, scope: !4442)
!4451 = !DILocation(line: 214, column: 20, scope: !4442)
!4452 = !DILocation(line: 214, column: 32, scope: !4442)
!4453 = !DILocation(line: 216, column: 14, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4442, file: !171, line: 216, column: 13)
!4455 = !DILocation(line: 216, column: 20, scope: !4454)
!4456 = !DILocation(line: 216, column: 40, scope: !4454)
!4457 = !DILocation(line: 216, column: 44, scope: !4454)
!4458 = !DILocation(line: 216, column: 51, scope: !4454)
!4459 = !DILocation(line: 216, column: 13, scope: !4442)
!4460 = !DILocation(line: 224, column: 51, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !171, line: 224, column: 17)
!4462 = distinct !DILexicalBlock(scope: !4454, file: !171, line: 216, column: 70)
!4463 = !DILocation(line: 224, column: 60, scope: !4461)
!4464 = !DILocation(line: 224, column: 17, scope: !4462)
!4465 = !DILocation(line: 225, column: 94, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !171, line: 224, column: 69)
!4467 = !DILocation(line: 225, column: 17, scope: !4466)
!4468 = !DILocation(line: 226, column: 13, scope: !4466)
!4469 = !DILocation(line: 229, column: 31, scope: !4442)
!4470 = !DILocation(line: 229, column: 42, scope: !4442)
!4471 = !DILocation(line: 229, column: 9, scope: !4442)
!4472 = !DILocation(line: 207, column: 40, scope: !4443)
!4473 = !DILocation(line: 207, column: 19, scope: !4443)
!4474 = distinct !{!4474, !4439, !4475}
!4475 = !DILocation(line: 231, column: 5, scope: !4440)
!4476 = !DILocation(line: 233, column: 1, scope: !4425)
!4477 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !171, file: !171, line: 236, type: !343, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!4478 = !DILocation(line: 238, column: 5, scope: !4477)
!4479 = !DILocation(line: 239, column: 5, scope: !4477)
!4480 = !DILocation(line: 240, column: 5, scope: !4477)
!4481 = !DILocation(line: 241, column: 1, scope: !4477)
!4482 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !171, file: !171, line: 242, type: !4252, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4483)
!4483 = !{!4484, !4485, !4486, !4487, !4488}
!4484 = !DILocalVariable(name: "gpt", arg: 1, scope: !4482, file: !171, line: 242, type: !316)
!4485 = !DILocalVariable(name: "time", scope: !4482, file: !171, line: 244, type: !60)
!4486 = !DILocalVariable(name: "count", scope: !4482, file: !171, line: 245, type: !61)
!4487 = !DILocalVariable(name: "time_s", scope: !4482, file: !171, line: 245, type: !61)
!4488 = !DILocalVariable(name: "time_ms", scope: !4482, file: !171, line: 245, type: !61)
!4489 = !DILocation(line: 0, scope: !4482)
!4490 = !DILocation(line: 244, column: 5, scope: !4482)
!4491 = !DILocation(line: 244, column: 23, scope: !4482)
!4492 = !DILocation(line: 247, column: 13, scope: !4482)
!4493 = !DILocation(line: 248, column: 20, scope: !4482)
!4494 = !DILocation(line: 249, column: 23, scope: !4482)
!4495 = !DILocation(line: 249, column: 32, scope: !4482)
!4496 = !DILocation(line: 249, column: 39, scope: !4482)
!4497 = !DILocation(line: 249, column: 48, scope: !4482)
!4498 = !DILocation(line: 250, column: 19, scope: !4482)
!4499 = !DILocation(line: 250, column: 26, scope: !4482)
!4500 = !DILocation(line: 250, column: 10, scope: !4482)
!4501 = !DILocation(line: 253, column: 5, scope: !4482)
!4502 = !DILocation(line: 253, column: 30, scope: !4482)
!4503 = !DILocation(line: 253, column: 38, scope: !4482)
!4504 = !DILocation(line: 254, column: 5, scope: !4482)
!4505 = !DILocation(line: 254, column: 36, scope: !4482)
!4506 = distinct !{!4506, !4504, !4507}
!4507 = !DILocation(line: 254, column: 46, scope: !4482)
!4508 = !DILocation(line: 255, column: 12, scope: !4482)
!4509 = !DILocation(line: 256, column: 1, scope: !4482)
!4510 = !DILocation(line: 255, column: 5, scope: !4482)
!4511 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !171, file: !171, line: 258, type: !4512, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4514)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!61}
!4514 = !{!4515}
!4515 = !DILocalVariable(name: "i", scope: !4511, file: !171, line: 260, type: !61)
!4516 = !DILocation(line: 0, scope: !4511)
!4517 = !DILocation(line: 262, column: 5, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4511, file: !171, line: 262, column: 5)
!4519 = !DILocation(line: 263, column: 37, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !171, line: 263, column: 13)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !171, line: 262, column: 45)
!4522 = distinct !DILexicalBlock(scope: !4518, file: !171, line: 262, column: 5)
!4523 = !DILocation(line: 263, column: 45, scope: !4520)
!4524 = !DILocation(line: 263, column: 13, scope: !4521)
!4525 = !DILocation(line: 262, column: 41, scope: !4522)
!4526 = !DILocation(line: 262, column: 19, scope: !4522)
!4527 = distinct !{!4527, !4517, !4528}
!4528 = !DILocation(line: 266, column: 5, scope: !4518)
!4529 = !DILocation(line: 269, column: 1, scope: !4511)
!4530 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !171, file: !171, line: 271, type: !343, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4531)
!4531 = !{!4532, !4533}
!4532 = !DILocalVariable(name: "minimum_time", scope: !4530, file: !171, line: 273, type: !61)
!4533 = !DILocalVariable(name: "current_timer", scope: !4530, file: !171, line: 273, type: !61)
!4534 = !DILocation(line: 273, column: 5, scope: !4530)
!4535 = !DILocation(line: 275, column: 24, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4530, file: !171, line: 275, column: 9)
!4537 = !DILocation(line: 275, column: 9, scope: !4530)
!4538 = !DILocation(line: 0, scope: !4530)
!4539 = !DILocation(line: 279, column: 5, scope: !4530)
!4540 = !DILocation(line: 282, column: 56, scope: !4530)
!4541 = !DILocation(line: 282, column: 39, scope: !4530)
!4542 = !DILocation(line: 284, column: 30, scope: !4530)
!4543 = !DILocation(line: 285, column: 45, scope: !4530)
!4544 = !DILocation(line: 285, column: 5, scope: !4530)
!4545 = !DILocation(line: 286, column: 30, scope: !4530)
!4546 = !DILocation(line: 287, column: 1, scope: !4530)
!4547 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !171, file: !171, line: 308, type: !4548, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4550)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{null, !1541, !1541}
!4550 = !{!4551, !4552, !4553, !4554, !4555}
!4551 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4547, file: !171, line: 308, type: !1541)
!4552 = !DILocalVariable(name: "number", arg: 2, scope: !4547, file: !171, line: 308, type: !1541)
!4553 = !DILocalVariable(name: "i", scope: !4547, file: !171, line: 310, type: !61)
!4554 = !DILocalVariable(name: "minimum", scope: !4547, file: !171, line: 311, type: !61)
!4555 = !DILocalVariable(name: "data", scope: !4547, file: !171, line: 312, type: !61)
!4556 = !DILocation(line: 0, scope: !4547)
!4557 = !DILocation(line: 314, column: 5, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4547, file: !171, line: 314, column: 5)
!4559 = !DILocation(line: 315, column: 37, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !171, line: 315, column: 13)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !171, line: 314, column: 45)
!4562 = distinct !DILexicalBlock(scope: !4558, file: !171, line: 314, column: 5)
!4563 = !DILocation(line: 315, column: 13, scope: !4561)
!4564 = !DILocation(line: 316, column: 20, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !171, line: 315, column: 57)
!4566 = !DILocation(line: 318, column: 22, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4565, file: !171, line: 318, column: 17)
!4568 = !DILocation(line: 318, column: 17, scope: !4565)
!4569 = !DILocation(line: 320, column: 25, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !171, line: 318, column: 33)
!4571 = !DILocation(line: 321, column: 13, scope: !4570)
!4572 = !DILocation(line: 314, column: 41, scope: !4562)
!4573 = !DILocation(line: 314, column: 19, scope: !4562)
!4574 = distinct !{!4574, !4557, !4575}
!4575 = !DILocation(line: 323, column: 5, scope: !4558)
!4576 = !DILocation(line: 325, column: 19, scope: !4547)
!4577 = !DILocation(line: 326, column: 1, scope: !4547)
!4578 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !171, file: !171, line: 289, type: !4260, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4579)
!4579 = !{!4580, !4581, !4582, !4583}
!4580 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4578, file: !171, line: 289, type: !61)
!4581 = !DILocalVariable(name: "time_out_delta", scope: !4578, file: !171, line: 291, type: !61)
!4582 = !DILocalVariable(name: "current_delta", scope: !4578, file: !171, line: 292, type: !61)
!4583 = !DILocalVariable(name: "ret_value", scope: !4578, file: !171, line: 293, type: !61)
!4584 = !DILocation(line: 0, scope: !4578)
!4585 = !DILocation(line: 295, column: 22, scope: !4578)
!4586 = !DILocation(line: 296, column: 22, scope: !4578)
!4587 = !DILocation(line: 298, column: 24, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4578, file: !171, line: 298, column: 9)
!4589 = !DILocation(line: 298, column: 9, scope: !4578)
!4590 = !DILocation(line: 306, column: 5, scope: !4578)
!4591 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !171, file: !171, line: 329, type: !153, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4592)
!4592 = !{!4593, !4594, !4595, !4596}
!4593 = !DILocalVariable(name: "parameter", arg: 1, scope: !4591, file: !171, line: 329, type: !88)
!4594 = !DILocalVariable(name: "i", scope: !4591, file: !171, line: 331, type: !61)
!4595 = !DILocalVariable(name: "time_ms", scope: !4591, file: !171, line: 332, type: !60)
!4596 = !DILocalVariable(name: "data", scope: !4591, file: !171, line: 333, type: !60)
!4597 = !DILocation(line: 0, scope: !4591)
!4598 = !DILocation(line: 332, column: 5, scope: !4591)
!4599 = !DILocation(line: 332, column: 23, scope: !4591)
!4600 = !DILocation(line: 333, column: 5, scope: !4591)
!4601 = !DILocation(line: 333, column: 23, scope: !4591)
!4602 = !DILocation(line: 336, column: 24, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4591, file: !171, line: 336, column: 9)
!4604 = !DILocation(line: 336, column: 41, scope: !4603)
!4605 = !DILocation(line: 336, column: 9, scope: !4591)
!4606 = !DILocation(line: 338, column: 34, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !171, line: 336, column: 47)
!4608 = !DILocation(line: 339, column: 9, scope: !4607)
!4609 = !DILocation(line: 340, column: 34, scope: !4607)
!4610 = !DILocation(line: 342, column: 46, scope: !4607)
!4611 = !DILocation(line: 342, column: 19, scope: !4607)
!4612 = !DILocation(line: 342, column: 17, scope: !4607)
!4613 = !DILocation(line: 344, column: 41, scope: !4607)
!4614 = !DILocation(line: 344, column: 38, scope: !4607)
!4615 = !DILocation(line: 345, column: 42, scope: !4607)
!4616 = !DILocation(line: 347, column: 9, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4607, file: !171, line: 347, column: 9)
!4618 = !DILocation(line: 348, column: 41, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !171, line: 348, column: 17)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !171, line: 347, column: 49)
!4621 = distinct !DILexicalBlock(scope: !4617, file: !171, line: 347, column: 9)
!4622 = !DILocation(line: 348, column: 17, scope: !4620)
!4623 = !DILocation(line: 350, column: 24, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4619, file: !171, line: 348, column: 61)
!4625 = !DILocation(line: 350, column: 22, scope: !4624)
!4626 = !DILocation(line: 352, column: 21, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4624, file: !171, line: 352, column: 21)
!4628 = !DILocation(line: 352, column: 26, scope: !4627)
!4629 = !DILocation(line: 352, column: 21, scope: !4624)
!4630 = !DILocation(line: 353, column: 56, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4627, file: !171, line: 352, column: 32)
!4632 = !DILocation(line: 354, column: 55, scope: !4631)
!4633 = !DILocation(line: 356, column: 62, scope: !4631)
!4634 = !DILocation(line: 356, column: 112, scope: !4631)
!4635 = !DILocation(line: 356, column: 21, scope: !4631)
!4636 = !DILocation(line: 357, column: 17, scope: !4631)
!4637 = !DILocation(line: 347, column: 45, scope: !4621)
!4638 = !DILocation(line: 347, column: 23, scope: !4621)
!4639 = distinct !{!4639, !4616, !4640}
!4640 = !DILocation(line: 360, column: 9, scope: !4617)
!4641 = !DILocation(line: 362, column: 42, scope: !4607)
!4642 = !DILocation(line: 364, column: 28, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4607, file: !171, line: 364, column: 13)
!4644 = !DILocation(line: 364, column: 48, scope: !4643)
!4645 = !DILocation(line: 364, column: 13, scope: !4607)
!4646 = !DILocation(line: 365, column: 13, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4643, file: !171, line: 364, column: 54)
!4648 = !DILocation(line: 366, column: 9, scope: !4647)
!4649 = !DILocation(line: 369, column: 1, scope: !4591)
!4650 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !392, file: !392, line: 50, type: !4651, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4654)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!61, !4653}
!4653 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !106, line: 390, baseType: !394)
!4654 = !{!4655, !4656, !4657}
!4655 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4650, file: !392, line: 50, type: !4653)
!4656 = !DILocalVariable(name: "i", scope: !4650, file: !392, line: 52, type: !61)
!4657 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4650, file: !392, line: 53, type: !1288)
!4658 = !DILocation(line: 0, scope: !4650)
!4659 = !DILocation(line: 53, column: 14, scope: !4650)
!4660 = !DILocation(line: 55, column: 5, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4650, file: !392, line: 55, column: 5)
!4662 = !DILocation(line: 55, column: 25, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4661, file: !392, line: 55, column: 5)
!4664 = !DILocation(line: 55, column: 19, scope: !4663)
!4665 = distinct !{!4665, !4660, !4666}
!4666 = !DILocation(line: 59, column: 5, scope: !4661)
!4667 = !DILocation(line: 56, column: 13, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !392, line: 56, column: 13)
!4669 = distinct !DILexicalBlock(scope: !4663, file: !392, line: 55, column: 29)
!4670 = !DILocation(line: 56, column: 40, scope: !4668)
!4671 = !DILocation(line: 56, column: 13, scope: !4669)
!4672 = !DILocation(line: 61, column: 1, scope: !4650)
!4673 = distinct !DISubprogram(name: "hal_gpio_init", scope: !392, file: !392, line: 66, type: !4674, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4677)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!4676, !4653}
!4676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !447, line: 229, baseType: !446)
!4677 = !{!4678}
!4678 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4673, file: !392, line: 66, type: !4653)
!4679 = !DILocation(line: 0, scope: !4673)
!4680 = !DILocation(line: 68, column: 5, scope: !4673)
!4681 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !392, file: !392, line: 72, type: !4674, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4682)
!4682 = !{!4683}
!4683 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4681, file: !392, line: 72, type: !4653)
!4684 = !DILocation(line: 0, scope: !4681)
!4685 = !DILocation(line: 74, column: 5, scope: !4681)
!4686 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !392, file: !392, line: 79, type: !4687, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4689)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!4676, !4653, !488}
!4689 = !{!4690, !4691, !4692, !4693}
!4690 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4686, file: !392, line: 79, type: !4653)
!4691 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4686, file: !392, line: 79, type: !488)
!4692 = !DILocalVariable(name: "no", scope: !4686, file: !392, line: 81, type: !61)
!4693 = !DILocalVariable(name: "remainder", scope: !4686, file: !392, line: 82, type: !61)
!4694 = !DILocation(line: 0, scope: !4686)
!4695 = !DILocation(line: 84, column: 18, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4686, file: !392, line: 84, column: 9)
!4697 = !DILocation(line: 84, column: 9, scope: !4686)
!4698 = !DILocation(line: 89, column: 19, scope: !4686)
!4699 = !DILocation(line: 92, column: 26, scope: !4686)
!4700 = !DILocation(line: 94, column: 24, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4686, file: !392, line: 94, column: 9)
!4702 = !DILocation(line: 0, scope: !4701)
!4703 = !DILocation(line: 94, column: 9, scope: !4686)
!4704 = !DILocation(line: 101, column: 1, scope: !4686)
!4705 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !392, file: !392, line: 105, type: !4706, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4709)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!4676, !4653, !4708}
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!4709 = !{!4710, !4711, !4712, !4713, !4714}
!4710 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4705, file: !392, line: 105, type: !4653)
!4711 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4705, file: !392, line: 105, type: !4708)
!4712 = !DILocalVariable(name: "no", scope: !4705, file: !392, line: 107, type: !61)
!4713 = !DILocalVariable(name: "remainder", scope: !4705, file: !392, line: 108, type: !61)
!4714 = !DILocalVariable(name: "temp", scope: !4705, file: !392, line: 109, type: !61)
!4715 = !DILocation(line: 0, scope: !4705)
!4716 = !DILocation(line: 111, column: 18, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4705, file: !392, line: 111, column: 9)
!4718 = !DILocation(line: 111, column: 9, scope: !4705)
!4719 = !DILocation(line: 115, column: 14, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4705, file: !392, line: 115, column: 9)
!4721 = !DILocation(line: 115, column: 9, scope: !4705)
!4722 = !DILocation(line: 120, column: 19, scope: !4705)
!4723 = !DILocation(line: 123, column: 26, scope: !4705)
!4724 = !DILocation(line: 125, column: 12, scope: !4705)
!4725 = !DILocation(line: 125, column: 54, scope: !4705)
!4726 = !DILocation(line: 126, column: 45, scope: !4705)
!4727 = !DILocation(line: 126, column: 17, scope: !4705)
!4728 = !DILocation(line: 127, column: 51, scope: !4705)
!4729 = !DILocation(line: 127, column: 21, scope: !4705)
!4730 = !DILocation(line: 128, column: 5, scope: !4705)
!4731 = !DILocation(line: 130, column: 1, scope: !4705)
!4732 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !392, file: !392, line: 134, type: !4733, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4736)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{!4735, !4653, !159}
!4735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !447, line: 238, baseType: !457)
!4736 = !{!4737, !4738, !4739, !4740, !4741}
!4737 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4732, file: !392, line: 134, type: !4653)
!4738 = !DILocalVariable(name: "function_index", arg: 2, scope: !4732, file: !392, line: 134, type: !159)
!4739 = !DILocalVariable(name: "no", scope: !4732, file: !392, line: 136, type: !61)
!4740 = !DILocalVariable(name: "remainder", scope: !4732, file: !392, line: 137, type: !61)
!4741 = !DILocalVariable(name: "irq_status", scope: !4732, file: !392, line: 138, type: !61)
!4742 = !DILocation(line: 0, scope: !4732)
!4743 = !DILocation(line: 140, column: 18, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4732, file: !392, line: 140, column: 9)
!4745 = !DILocation(line: 140, column: 9, scope: !4732)
!4746 = !DILocation(line: 145, column: 24, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4732, file: !392, line: 145, column: 9)
!4748 = !DILocation(line: 145, column: 9, scope: !4732)
!4749 = !DILocation(line: 145, column: 9, scope: !4747)
!4750 = !DILocation(line: 150, column: 19, scope: !4732)
!4751 = !DILocation(line: 156, column: 18, scope: !4732)
!4752 = !DILocation(line: 157, column: 105, scope: !4732)
!4753 = !DILocation(line: 157, column: 91, scope: !4732)
!4754 = !DILocation(line: 157, column: 5, scope: !4732)
!4755 = !DILocation(line: 157, column: 48, scope: !4732)
!4756 = !DILocation(line: 157, column: 62, scope: !4732)
!4757 = !DILocation(line: 158, column: 80, scope: !4732)
!4758 = !DILocation(line: 158, column: 5, scope: !4732)
!4759 = !DILocation(line: 158, column: 48, scope: !4732)
!4760 = !DILocation(line: 158, column: 62, scope: !4732)
!4761 = !DILocation(line: 159, column: 5, scope: !4732)
!4762 = !DILocation(line: 160, column: 5, scope: !4732)
!4763 = !DILocation(line: 162, column: 1, scope: !4732)
!4764 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !392, file: !392, line: 166, type: !4765, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4768)
!4765 = !DISubroutineType(types: !4766)
!4766 = !{!4676, !4653, !4767}
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 32)
!4768 = !{!4769, !4770, !4771, !4772, !4773}
!4769 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4764, file: !392, line: 166, type: !4653)
!4770 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4764, file: !392, line: 166, type: !4767)
!4771 = !DILocalVariable(name: "no", scope: !4764, file: !392, line: 168, type: !61)
!4772 = !DILocalVariable(name: "remainder", scope: !4764, file: !392, line: 169, type: !61)
!4773 = !DILocalVariable(name: "temp", scope: !4764, file: !392, line: 170, type: !61)
!4774 = !DILocation(line: 0, scope: !4764)
!4775 = !DILocation(line: 172, column: 18, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4764, file: !392, line: 172, column: 9)
!4777 = !DILocation(line: 172, column: 9, scope: !4764)
!4778 = !DILocation(line: 176, column: 14, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4764, file: !392, line: 176, column: 9)
!4780 = !DILocation(line: 176, column: 9, scope: !4764)
!4781 = !DILocation(line: 181, column: 19, scope: !4764)
!4782 = !DILocation(line: 184, column: 26, scope: !4764)
!4783 = !DILocation(line: 186, column: 12, scope: !4764)
!4784 = !DILocation(line: 186, column: 54, scope: !4764)
!4785 = !DILocation(line: 187, column: 45, scope: !4764)
!4786 = !DILocation(line: 187, column: 17, scope: !4764)
!4787 = !DILocation(line: 188, column: 41, scope: !4764)
!4788 = !DILocation(line: 188, column: 16, scope: !4764)
!4789 = !DILocation(line: 189, column: 5, scope: !4764)
!4790 = !DILocation(line: 191, column: 1, scope: !4764)
!4791 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !392, file: !392, line: 195, type: !4792, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4794)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!4676, !4653, !489}
!4794 = !{!4795, !4796, !4797, !4798}
!4795 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4791, file: !392, line: 195, type: !4653)
!4796 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4791, file: !392, line: 195, type: !489)
!4797 = !DILocalVariable(name: "no", scope: !4791, file: !392, line: 197, type: !61)
!4798 = !DILocalVariable(name: "remainder", scope: !4791, file: !392, line: 198, type: !61)
!4799 = !DILocation(line: 0, scope: !4791)
!4800 = !DILocation(line: 200, column: 18, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4791, file: !392, line: 200, column: 9)
!4802 = !DILocation(line: 200, column: 9, scope: !4791)
!4803 = !DILocation(line: 205, column: 19, scope: !4791)
!4804 = !DILocation(line: 208, column: 26, scope: !4791)
!4805 = !DILocation(line: 210, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4791, file: !392, line: 210, column: 9)
!4807 = !DILocation(line: 0, scope: !4806)
!4808 = !DILocation(line: 210, column: 9, scope: !4791)
!4809 = !DILocation(line: 216, column: 1, scope: !4791)
!4810 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !392, file: !392, line: 220, type: !4765, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4811)
!4811 = !{!4812, !4813, !4814, !4815, !4816}
!4812 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4810, file: !392, line: 220, type: !4653)
!4813 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4810, file: !392, line: 220, type: !4767)
!4814 = !DILocalVariable(name: "no", scope: !4810, file: !392, line: 222, type: !61)
!4815 = !DILocalVariable(name: "remainder", scope: !4810, file: !392, line: 223, type: !61)
!4816 = !DILocalVariable(name: "temp", scope: !4810, file: !392, line: 224, type: !61)
!4817 = !DILocation(line: 0, scope: !4810)
!4818 = !DILocation(line: 226, column: 18, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4810, file: !392, line: 226, column: 9)
!4820 = !DILocation(line: 226, column: 9, scope: !4810)
!4821 = !DILocation(line: 230, column: 14, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4810, file: !392, line: 230, column: 9)
!4823 = !DILocation(line: 230, column: 9, scope: !4810)
!4824 = !DILocation(line: 235, column: 19, scope: !4810)
!4825 = !DILocation(line: 238, column: 26, scope: !4810)
!4826 = !DILocation(line: 240, column: 12, scope: !4810)
!4827 = !DILocation(line: 240, column: 55, scope: !4810)
!4828 = !DILocation(line: 241, column: 45, scope: !4810)
!4829 = !DILocation(line: 241, column: 17, scope: !4810)
!4830 = !DILocation(line: 242, column: 41, scope: !4810)
!4831 = !DILocation(line: 242, column: 16, scope: !4810)
!4832 = !DILocation(line: 243, column: 5, scope: !4810)
!4833 = !DILocation(line: 245, column: 1, scope: !4810)
!4834 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !392, file: !392, line: 249, type: !4674, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4835)
!4835 = !{!4836, !4837, !4838, !4839}
!4836 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4834, file: !392, line: 249, type: !4653)
!4837 = !DILocalVariable(name: "no", scope: !4834, file: !392, line: 251, type: !61)
!4838 = !DILocalVariable(name: "remainder", scope: !4834, file: !392, line: 252, type: !61)
!4839 = !DILocalVariable(name: "temp", scope: !4834, file: !392, line: 253, type: !61)
!4840 = !DILocation(line: 0, scope: !4834)
!4841 = !DILocation(line: 255, column: 18, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4834, file: !392, line: 255, column: 9)
!4843 = !DILocation(line: 255, column: 9, scope: !4834)
!4844 = !DILocation(line: 260, column: 19, scope: !4834)
!4845 = !DILocation(line: 263, column: 26, scope: !4834)
!4846 = !DILocation(line: 265, column: 12, scope: !4834)
!4847 = !DILocation(line: 265, column: 55, scope: !4834)
!4848 = !DILocation(line: 266, column: 45, scope: !4834)
!4849 = !DILocation(line: 266, column: 17, scope: !4834)
!4850 = !DILocation(line: 267, column: 15, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4834, file: !392, line: 267, column: 9)
!4852 = !DILocation(line: 267, column: 9, scope: !4834)
!4853 = !DILocation(line: 0, scope: !4851)
!4854 = !DILocation(line: 273, column: 1, scope: !4834)
!4855 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !392, file: !392, line: 278, type: !4674, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4856)
!4856 = !{!4857, !4858, !4859}
!4857 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4855, file: !392, line: 278, type: !4653)
!4858 = !DILocalVariable(name: "no", scope: !4855, file: !392, line: 280, type: !61)
!4859 = !DILocalVariable(name: "remainder", scope: !4855, file: !392, line: 281, type: !61)
!4860 = !DILocation(line: 0, scope: !4855)
!4861 = !DILocation(line: 283, column: 18, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4855, file: !392, line: 283, column: 9)
!4863 = !DILocation(line: 283, column: 9, scope: !4855)
!4864 = !DILocation(line: 288, column: 19, scope: !4855)
!4865 = !DILocation(line: 291, column: 26, scope: !4855)
!4866 = !DILocation(line: 293, column: 90, scope: !4855)
!4867 = !DILocation(line: 293, column: 5, scope: !4855)
!4868 = !DILocation(line: 293, column: 48, scope: !4855)
!4869 = !DILocation(line: 293, column: 62, scope: !4855)
!4870 = !DILocation(line: 294, column: 5, scope: !4855)
!4871 = !DILocation(line: 295, column: 1, scope: !4855)
!4872 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !392, file: !392, line: 299, type: !4674, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4873)
!4873 = !{!4874, !4875, !4876}
!4874 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4872, file: !392, line: 299, type: !4653)
!4875 = !DILocalVariable(name: "no", scope: !4872, file: !392, line: 301, type: !61)
!4876 = !DILocalVariable(name: "remainder", scope: !4872, file: !392, line: 302, type: !61)
!4877 = !DILocation(line: 0, scope: !4872)
!4878 = !DILocation(line: 304, column: 18, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4872, file: !392, line: 304, column: 9)
!4880 = !DILocation(line: 304, column: 9, scope: !4872)
!4881 = !DILocation(line: 309, column: 19, scope: !4872)
!4882 = !DILocation(line: 312, column: 26, scope: !4872)
!4883 = !DILocation(line: 314, column: 90, scope: !4872)
!4884 = !DILocation(line: 314, column: 5, scope: !4872)
!4885 = !DILocation(line: 314, column: 48, scope: !4872)
!4886 = !DILocation(line: 314, column: 62, scope: !4872)
!4887 = !DILocation(line: 315, column: 5, scope: !4872)
!4888 = !DILocation(line: 316, column: 1, scope: !4872)
!4889 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !392, file: !392, line: 321, type: !4674, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4890)
!4890 = !{!4891, !4892, !4893}
!4891 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4889, file: !392, line: 321, type: !4653)
!4892 = !DILocalVariable(name: "no", scope: !4889, file: !392, line: 323, type: !61)
!4893 = !DILocalVariable(name: "remainder", scope: !4889, file: !392, line: 324, type: !61)
!4894 = !DILocation(line: 0, scope: !4889)
!4895 = !DILocation(line: 326, column: 19, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4889, file: !392, line: 326, column: 9)
!4897 = !DILocation(line: 326, column: 36, scope: !4896)
!4898 = !DILocation(line: 326, column: 41, scope: !4896)
!4899 = !DILocation(line: 326, column: 9, scope: !4889)
!4900 = !DILocation(line: 331, column: 19, scope: !4889)
!4901 = !DILocation(line: 334, column: 26, scope: !4889)
!4902 = !DILocation(line: 336, column: 94, scope: !4889)
!4903 = !DILocation(line: 336, column: 5, scope: !4889)
!4904 = !DILocation(line: 336, column: 50, scope: !4889)
!4905 = !DILocation(line: 336, column: 66, scope: !4889)
!4906 = !DILocation(line: 337, column: 5, scope: !4889)
!4907 = !DILocation(line: 337, column: 51, scope: !4889)
!4908 = !DILocation(line: 337, column: 68, scope: !4889)
!4909 = !DILocation(line: 338, column: 5, scope: !4889)
!4910 = !DILocation(line: 339, column: 1, scope: !4889)
!4911 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !392, file: !392, line: 343, type: !4674, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4912)
!4912 = !{!4913, !4914, !4915}
!4913 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4911, file: !392, line: 343, type: !4653)
!4914 = !DILocalVariable(name: "no", scope: !4911, file: !392, line: 345, type: !61)
!4915 = !DILocalVariable(name: "remainder", scope: !4911, file: !392, line: 346, type: !61)
!4916 = !DILocation(line: 0, scope: !4911)
!4917 = !DILocation(line: 348, column: 19, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4911, file: !392, line: 348, column: 9)
!4919 = !DILocation(line: 348, column: 36, scope: !4918)
!4920 = !DILocation(line: 348, column: 41, scope: !4918)
!4921 = !DILocation(line: 348, column: 9, scope: !4911)
!4922 = !DILocation(line: 353, column: 19, scope: !4911)
!4923 = !DILocation(line: 356, column: 26, scope: !4911)
!4924 = !DILocation(line: 358, column: 94, scope: !4911)
!4925 = !DILocation(line: 358, column: 5, scope: !4911)
!4926 = !DILocation(line: 358, column: 50, scope: !4911)
!4927 = !DILocation(line: 358, column: 66, scope: !4911)
!4928 = !DILocation(line: 359, column: 5, scope: !4911)
!4929 = !DILocation(line: 359, column: 51, scope: !4911)
!4930 = !DILocation(line: 359, column: 68, scope: !4911)
!4931 = !DILocation(line: 360, column: 5, scope: !4911)
!4932 = !DILocation(line: 361, column: 1, scope: !4911)
!4933 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !392, file: !392, line: 365, type: !4674, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4934)
!4934 = !{!4935, !4936, !4937}
!4935 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4933, file: !392, line: 365, type: !4653)
!4936 = !DILocalVariable(name: "no", scope: !4933, file: !392, line: 367, type: !61)
!4937 = !DILocalVariable(name: "remainder", scope: !4933, file: !392, line: 368, type: !61)
!4938 = !DILocation(line: 0, scope: !4933)
!4939 = !DILocation(line: 370, column: 19, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4933, file: !392, line: 370, column: 9)
!4941 = !DILocation(line: 370, column: 36, scope: !4940)
!4942 = !DILocation(line: 370, column: 41, scope: !4940)
!4943 = !DILocation(line: 370, column: 9, scope: !4933)
!4944 = !DILocation(line: 375, column: 19, scope: !4933)
!4945 = !DILocation(line: 378, column: 26, scope: !4933)
!4946 = !DILocation(line: 380, column: 94, scope: !4933)
!4947 = !DILocation(line: 380, column: 5, scope: !4933)
!4948 = !DILocation(line: 380, column: 50, scope: !4933)
!4949 = !DILocation(line: 380, column: 66, scope: !4933)
!4950 = !DILocation(line: 381, column: 5, scope: !4933)
!4951 = !DILocation(line: 382, column: 1, scope: !4933)
!4952 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !392, file: !392, line: 387, type: !4953, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4957)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!4676, !4955, !4956}
!4955 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !106, line: 423, baseType: !467)
!4956 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !106, line: 431, baseType: !476)
!4957 = !{!4958, !4959}
!4958 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4952, file: !392, line: 387, type: !4955)
!4959 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4952, file: !392, line: 387, type: !4956)
!4960 = !DILocation(line: 0, scope: !4952)
!4961 = !DILocation(line: 390, column: 24, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !392, line: 390, column: 9)
!4963 = !DILocation(line: 390, column: 9, scope: !4952)
!4964 = !DILocation(line: 394, column: 5, scope: !4952)
!4965 = !DILocation(line: 394, column: 62, scope: !4952)
!4966 = !DILocation(line: 394, column: 74, scope: !4952)
!4967 = !DILocation(line: 395, column: 5, scope: !4952)
!4968 = !DILocation(line: 396, column: 1, scope: !4952)
!4969 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !392, file: !392, line: 403, type: !4970, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4972)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!4676, !4653, !159, !159, !159}
!4972 = !{!4973, !4974, !4975, !4976, !4977, !4978}
!4973 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4969, file: !392, line: 403, type: !4653)
!4974 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4969, file: !392, line: 403, type: !159)
!4975 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4969, file: !392, line: 403, type: !159)
!4976 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4969, file: !392, line: 403, type: !159)
!4977 = !DILocalVariable(name: "no", scope: !4969, file: !392, line: 405, type: !61)
!4978 = !DILocalVariable(name: "remainder", scope: !4969, file: !392, line: 406, type: !61)
!4979 = !DILocation(line: 0, scope: !4969)
!4980 = !DILocation(line: 408, column: 19, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4969, file: !392, line: 408, column: 9)
!4982 = !DILocation(line: 408, column: 36, scope: !4981)
!4983 = !DILocation(line: 408, column: 40, scope: !4981)
!4984 = !DILocation(line: 408, column: 9, scope: !4969)
!4985 = !DILocation(line: 413, column: 19, scope: !4969)
!4986 = !DILocation(line: 416, column: 26, scope: !4969)
!4987 = !DILocation(line: 418, column: 9, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4969, file: !392, line: 418, column: 9)
!4989 = !DILocation(line: 0, scope: !4988)
!4990 = !DILocation(line: 418, column: 9, scope: !4969)
!4991 = !DILocation(line: 424, column: 9, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4969, file: !392, line: 424, column: 9)
!4993 = !DILocation(line: 0, scope: !4992)
!4994 = !DILocation(line: 424, column: 9, scope: !4969)
!4995 = !DILocation(line: 430, column: 9, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4969, file: !392, line: 430, column: 9)
!4997 = !DILocation(line: 0, scope: !4996)
!4998 = !DILocation(line: 430, column: 9, scope: !4969)
!4999 = !DILocation(line: 436, column: 1, scope: !4969)
!5000 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !392, file: !392, line: 441, type: !4674, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5001)
!5001 = !{!5002, !5003, !5004, !5005, !5006, !5007, !5008}
!5002 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5000, file: !392, line: 441, type: !4653)
!5003 = !DILocalVariable(name: "no1", scope: !5000, file: !392, line: 443, type: !61)
!5004 = !DILocalVariable(name: "no2", scope: !5000, file: !392, line: 443, type: !61)
!5005 = !DILocalVariable(name: "no3", scope: !5000, file: !392, line: 443, type: !61)
!5006 = !DILocalVariable(name: "remainder1", scope: !5000, file: !392, line: 444, type: !61)
!5007 = !DILocalVariable(name: "remainder2", scope: !5000, file: !392, line: 444, type: !61)
!5008 = !DILocalVariable(name: "remainder3", scope: !5000, file: !392, line: 444, type: !61)
!5009 = !DILocation(line: 0, scope: !5000)
!5010 = !DILocation(line: 446, column: 18, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5000, file: !392, line: 446, column: 9)
!5012 = !DILocation(line: 446, column: 9, scope: !5000)
!5013 = !DILocation(line: 451, column: 20, scope: !5000)
!5014 = !DILocation(line: 454, column: 27, scope: !5000)
!5015 = !DILocation(line: 457, column: 20, scope: !5000)
!5016 = !DILocation(line: 463, column: 20, scope: !5000)
!5017 = !DILocation(line: 469, column: 107, scope: !5000)
!5018 = !DILocation(line: 469, column: 92, scope: !5000)
!5019 = !DILocation(line: 469, column: 5, scope: !5000)
!5020 = !DILocation(line: 469, column: 49, scope: !5000)
!5021 = !DILocation(line: 469, column: 63, scope: !5000)
!5022 = !DILocation(line: 472, column: 89, scope: !5000)
!5023 = !DILocation(line: 472, column: 5, scope: !5000)
!5024 = !DILocation(line: 472, column: 48, scope: !5000)
!5025 = !DILocation(line: 472, column: 61, scope: !5000)
!5026 = !DILocation(line: 475, column: 5, scope: !5000)
!5027 = !DILocation(line: 475, column: 48, scope: !5000)
!5028 = !DILocation(line: 475, column: 61, scope: !5000)
!5029 = !DILocation(line: 478, column: 9, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5000, file: !392, line: 478, column: 9)
!5031 = !DILocation(line: 0, scope: !5030)
!5032 = !DILocation(line: 478, column: 9, scope: !5000)
!5033 = !DILocation(line: 479, column: 55, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !392, line: 478, column: 40)
!5035 = !DILocation(line: 480, column: 5, scope: !5034)
!5036 = !DILocation(line: 483, column: 53, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5030, file: !392, line: 482, column: 10)
!5038 = !DILocation(line: 483, column: 67, scope: !5037)
!5039 = !DILocation(line: 484, column: 9, scope: !5037)
!5040 = !DILocation(line: 484, column: 55, scope: !5037)
!5041 = !DILocation(line: 484, column: 71, scope: !5037)
!5042 = !DILocation(line: 485, column: 9, scope: !5037)
!5043 = !DILocation(line: 485, column: 55, scope: !5037)
!5044 = !DILocation(line: 490, column: 5, scope: !5000)
!5045 = !DILocation(line: 490, column: 48, scope: !5000)
!5046 = !DILocation(line: 490, column: 61, scope: !5000)
!5047 = !DILocation(line: 493, column: 5, scope: !5000)
!5048 = !DILocation(line: 493, column: 47, scope: !5000)
!5049 = !DILocation(line: 493, column: 59, scope: !5000)
!5050 = !DILocation(line: 496, column: 108, scope: !5000)
!5051 = !DILocation(line: 496, column: 93, scope: !5000)
!5052 = !DILocation(line: 496, column: 5, scope: !5000)
!5053 = !DILocation(line: 496, column: 50, scope: !5000)
!5054 = !DILocation(line: 496, column: 65, scope: !5000)
!5055 = !DILocation(line: 498, column: 5, scope: !5000)
!5056 = !DILocation(line: 499, column: 1, scope: !5000)
!5057 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !392, file: !392, line: 502, type: !4674, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5058)
!5058 = !{!5059, !5060, !5061, !5062, !5063}
!5059 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5057, file: !392, line: 502, type: !4653)
!5060 = !DILocalVariable(name: "no1", scope: !5057, file: !392, line: 504, type: !61)
!5061 = !DILocalVariable(name: "no2", scope: !5057, file: !392, line: 504, type: !61)
!5062 = !DILocalVariable(name: "remainder1", scope: !5057, file: !392, line: 505, type: !61)
!5063 = !DILocalVariable(name: "remainder2", scope: !5057, file: !392, line: 505, type: !61)
!5064 = !DILocation(line: 0, scope: !5057)
!5065 = !DILocation(line: 507, column: 18, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5057, file: !392, line: 507, column: 9)
!5067 = !DILocation(line: 507, column: 9, scope: !5057)
!5068 = !DILocation(line: 512, column: 20, scope: !5057)
!5069 = !DILocation(line: 515, column: 27, scope: !5057)
!5070 = !DILocation(line: 518, column: 20, scope: !5057)
!5071 = !DILocation(line: 524, column: 107, scope: !5057)
!5072 = !DILocation(line: 524, column: 92, scope: !5057)
!5073 = !DILocation(line: 524, column: 5, scope: !5057)
!5074 = !DILocation(line: 524, column: 49, scope: !5057)
!5075 = !DILocation(line: 524, column: 63, scope: !5057)
!5076 = !DILocation(line: 527, column: 89, scope: !5057)
!5077 = !DILocation(line: 527, column: 5, scope: !5057)
!5078 = !DILocation(line: 527, column: 48, scope: !5057)
!5079 = !DILocation(line: 527, column: 61, scope: !5057)
!5080 = !DILocation(line: 530, column: 9, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5057, file: !392, line: 530, column: 9)
!5082 = !DILocation(line: 0, scope: !5081)
!5083 = !DILocation(line: 530, column: 9, scope: !5057)
!5084 = !DILocation(line: 531, column: 55, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5081, file: !392, line: 530, column: 40)
!5086 = !DILocation(line: 531, column: 71, scope: !5085)
!5087 = !DILocation(line: 532, column: 9, scope: !5085)
!5088 = !DILocation(line: 532, column: 56, scope: !5085)
!5089 = !DILocation(line: 533, column: 5, scope: !5085)
!5090 = !DILocation(line: 536, column: 53, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5081, file: !392, line: 535, column: 10)
!5092 = !DILocation(line: 536, column: 67, scope: !5091)
!5093 = !DILocation(line: 537, column: 9, scope: !5091)
!5094 = !DILocation(line: 537, column: 55, scope: !5091)
!5095 = !DILocation(line: 537, column: 71, scope: !5091)
!5096 = !DILocation(line: 538, column: 9, scope: !5091)
!5097 = !DILocation(line: 538, column: 55, scope: !5091)
!5098 = !DILocation(line: 543, column: 5, scope: !5057)
!5099 = !DILocation(line: 543, column: 48, scope: !5057)
!5100 = !DILocation(line: 543, column: 61, scope: !5057)
!5101 = !DILocation(line: 546, column: 5, scope: !5057)
!5102 = !DILocation(line: 546, column: 47, scope: !5057)
!5103 = !DILocation(line: 546, column: 59, scope: !5057)
!5104 = !DILocation(line: 549, column: 5, scope: !5057)
!5105 = !DILocation(line: 550, column: 1, scope: !5057)
!5106 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !392, file: !392, line: 554, type: !5107, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!4676, !4653, !490}
!5109 = !{!5110, !5111, !5112, !5113}
!5110 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5106, file: !392, line: 554, type: !4653)
!5111 = !DILocalVariable(name: "driving", arg: 2, scope: !5106, file: !392, line: 554, type: !490)
!5112 = !DILocalVariable(name: "no", scope: !5106, file: !392, line: 556, type: !61)
!5113 = !DILocalVariable(name: "remainder", scope: !5106, file: !392, line: 557, type: !61)
!5114 = !DILocation(line: 0, scope: !5106)
!5115 = !DILocation(line: 559, column: 19, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5106, file: !392, line: 559, column: 9)
!5117 = !DILocation(line: 559, column: 9, scope: !5106)
!5118 = !DILocation(line: 564, column: 19, scope: !5106)
!5119 = !DILocation(line: 569, column: 102, scope: !5106)
!5120 = !DILocation(line: 569, column: 88, scope: !5106)
!5121 = !DILocation(line: 569, column: 5, scope: !5106)
!5122 = !DILocation(line: 569, column: 47, scope: !5106)
!5123 = !DILocation(line: 569, column: 60, scope: !5106)
!5124 = !DILocation(line: 570, column: 71, scope: !5106)
!5125 = !DILocation(line: 570, column: 5, scope: !5106)
!5126 = !DILocation(line: 570, column: 47, scope: !5106)
!5127 = !DILocation(line: 570, column: 60, scope: !5106)
!5128 = !DILocation(line: 571, column: 5, scope: !5106)
!5129 = !DILocation(line: 572, column: 1, scope: !5106)
!5130 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !392, file: !392, line: 575, type: !5131, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5134)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!4676, !4653, !5133}
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!5134 = !{!5135, !5136, !5137, !5138, !5139}
!5135 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5130, file: !392, line: 575, type: !4653)
!5136 = !DILocalVariable(name: "driving", arg: 2, scope: !5130, file: !392, line: 575, type: !5133)
!5137 = !DILocalVariable(name: "no", scope: !5130, file: !392, line: 577, type: !61)
!5138 = !DILocalVariable(name: "remainder", scope: !5130, file: !392, line: 578, type: !61)
!5139 = !DILocalVariable(name: "temp", scope: !5130, file: !392, line: 579, type: !61)
!5140 = !DILocation(line: 0, scope: !5130)
!5141 = !DILocation(line: 581, column: 19, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5130, file: !392, line: 581, column: 9)
!5143 = !DILocation(line: 581, column: 9, scope: !5130)
!5144 = !DILocation(line: 585, column: 14, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5130, file: !392, line: 585, column: 9)
!5146 = !DILocation(line: 585, column: 9, scope: !5130)
!5147 = !DILocation(line: 590, column: 19, scope: !5130)
!5148 = !DILocation(line: 595, column: 12, scope: !5130)
!5149 = !DILocation(line: 595, column: 54, scope: !5130)
!5150 = !DILocation(line: 596, column: 59, scope: !5130)
!5151 = !DILocation(line: 596, column: 45, scope: !5130)
!5152 = !DILocation(line: 596, column: 17, scope: !5130)
!5153 = !DILocation(line: 597, column: 18, scope: !5130)
!5154 = !DILocation(line: 600, column: 56, scope: !5130)
!5155 = !DILocation(line: 600, column: 14, scope: !5130)
!5156 = !DILocation(line: 602, column: 5, scope: !5130)
!5157 = !DILocation(line: 603, column: 1, scope: !5130)
!5158 = distinct !DISubprogram(name: "uart_receive_handler", scope: !672, file: !672, line: 146, type: !5159, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5161)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{null, !784, !91}
!5161 = !{!5162, !5163, !5164, !5166, !5167, !5168, !5169, !5225}
!5162 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5158, file: !672, line: 146, type: !784)
!5163 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !5158, file: !672, line: 146, type: !91)
!5164 = !DILocalVariable(name: "channel", scope: !5158, file: !672, line: 148, type: !5165)
!5165 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !682, line: 203, baseType: !681)
!5166 = !DILocalVariable(name: "avail_bytes", scope: !5158, file: !672, line: 149, type: !61)
!5167 = !DILocalVariable(name: "callback", scope: !5158, file: !672, line: 150, type: !831)
!5168 = !DILocalVariable(name: "arg", scope: !5158, file: !672, line: 151, type: !88)
!5169 = !DILocalVariable(name: "uartx", scope: !5158, file: !672, line: 152, type: !5170)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 32)
!5171 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5172)
!5172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5173)
!5173 = !{!5174, !5180, !5185, !5191, !5192, !5197, !5202, !5203, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5172, file: !56, line: 547, baseType: !5175, size: 32)
!5175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5172, file: !56, line: 543, size: 32, elements: !5176)
!5176 = !{!5177, !5178, !5179}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5175, file: !56, line: 544, baseType: !324, size: 32)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5175, file: !56, line: 545, baseType: !60, size: 32)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5175, file: !56, line: 546, baseType: !60, size: 32)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5172, file: !56, line: 551, baseType: !5181, size: 32, offset: 32)
!5181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5172, file: !56, line: 548, size: 32, elements: !5182)
!5182 = !{!5183, !5184}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5181, file: !56, line: 549, baseType: !60, size: 32)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5181, file: !56, line: 550, baseType: !60, size: 32)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5172, file: !56, line: 556, baseType: !5186, size: 32, offset: 64)
!5186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5172, file: !56, line: 552, size: 32, elements: !5187)
!5187 = !{!5188, !5189, !5190}
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5186, file: !56, line: 553, baseType: !324, size: 32)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5186, file: !56, line: 554, baseType: !60, size: 32)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5186, file: !56, line: 555, baseType: !60, size: 32)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5172, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5172, file: !56, line: 561, baseType: !5193, size: 32, offset: 128)
!5193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5172, file: !56, line: 558, size: 32, elements: !5194)
!5194 = !{!5195, !5196}
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5193, file: !56, line: 559, baseType: !60, size: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5193, file: !56, line: 560, baseType: !60, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5172, file: !56, line: 565, baseType: !5198, size: 32, offset: 160)
!5198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5172, file: !56, line: 562, size: 32, elements: !5199)
!5199 = !{!5200, !5201}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5198, file: !56, line: 563, baseType: !324, size: 32)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5198, file: !56, line: 564, baseType: !60, size: 32)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5172, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5172, file: !56, line: 570, baseType: !5204, size: 32, offset: 224)
!5204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5172, file: !56, line: 567, size: 32, elements: !5205)
!5205 = !{!5206, !5207}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5204, file: !56, line: 568, baseType: !60, size: 32)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5204, file: !56, line: 569, baseType: !60, size: 32)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5172, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5172, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5172, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5172, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5172, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5172, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5172, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5172, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5172, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5172, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5172, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5172, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5172, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5172, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5172, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5172, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5172, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5225 = !DILocalVariable(name: "status", scope: !5158, file: !672, line: 153, type: !5226)
!5226 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !682, line: 211, baseType: !702)
!5227 = !DILocation(line: 0, scope: !5158)
!5228 = !DILocation(line: 149, column: 5, scope: !5158)
!5229 = !DILocation(line: 155, column: 9, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 155, column: 9)
!5231 = !DILocation(line: 155, column: 36, scope: !5230)
!5232 = !DILocation(line: 155, column: 9, scope: !5158)
!5233 = !DILocation(line: 156, column: 9, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5230, file: !672, line: 155, column: 70)
!5235 = !DILocation(line: 160, column: 13, scope: !5158)
!5236 = !DILocation(line: 161, column: 15, scope: !5158)
!5237 = !DILocation(line: 163, column: 9, scope: !5158)
!5238 = !DILocation(line: 164, column: 9, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !672, line: 163, column: 29)
!5240 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 163, column: 9)
!5241 = !DILocation(line: 165, column: 5, scope: !5239)
!5242 = !DILocation(line: 167, column: 14, scope: !5158)
!5243 = !DILocation(line: 168, column: 16, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 168, column: 9)
!5245 = !DILocation(line: 168, column: 9, scope: !5158)
!5246 = !DILocation(line: 169, column: 9, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5244, file: !672, line: 168, column: 28)
!5248 = !DILocation(line: 172, column: 9, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 172, column: 9)
!5250 = !DILocation(line: 172, column: 21, scope: !5249)
!5251 = !DILocation(line: 172, column: 9, scope: !5158)
!5252 = !DILocation(line: 176, column: 43, scope: !5158)
!5253 = !DILocation(line: 178, column: 18, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 178, column: 9)
!5255 = !DILocation(line: 178, column: 9, scope: !5158)
!5256 = !DILocation(line: 179, column: 9, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5254, file: !672, line: 178, column: 27)
!5258 = !DILocation(line: 177, column: 38, scope: !5158)
!5259 = !DILocation(line: 183, column: 5, scope: !5158)
!5260 = !DILocation(line: 184, column: 5, scope: !5158)
!5261 = !DILocation(line: 185, column: 5, scope: !5158)
!5262 = !DILocation(line: 187, column: 14, scope: !5158)
!5263 = !DILocation(line: 188, column: 16, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 188, column: 9)
!5265 = !DILocation(line: 188, column: 9, scope: !5158)
!5266 = !DILocation(line: 189, column: 9, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5264, file: !672, line: 188, column: 28)
!5268 = !DILocation(line: 192, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5158, file: !672, line: 192, column: 9)
!5270 = !DILocation(line: 192, column: 53, scope: !5269)
!5271 = !DILocation(line: 192, column: 21, scope: !5269)
!5272 = !DILocation(line: 192, column: 9, scope: !5158)
!5273 = !DILocation(line: 193, column: 18, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5269, file: !672, line: 192, column: 83)
!5275 = !DILocation(line: 194, column: 20, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5274, file: !672, line: 194, column: 13)
!5277 = !DILocation(line: 194, column: 13, scope: !5274)
!5278 = !DILocation(line: 195, column: 13, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5276, file: !672, line: 194, column: 32)
!5280 = !DILocation(line: 199, column: 1, scope: !5158)
!5281 = distinct !DISubprogram(name: "uart_send_handler", scope: !672, file: !672, line: 210, type: !5159, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5282)
!5282 = !{!5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291}
!5283 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5281, file: !672, line: 210, type: !784)
!5284 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !5281, file: !672, line: 210, type: !91)
!5285 = !DILocalVariable(name: "channel", scope: !5281, file: !672, line: 212, type: !5165)
!5286 = !DILocalVariable(name: "status", scope: !5281, file: !672, line: 213, type: !5226)
!5287 = !DILocalVariable(name: "compare_space", scope: !5281, file: !672, line: 214, type: !61)
!5288 = !DILocalVariable(name: "avail_space", scope: !5281, file: !672, line: 214, type: !61)
!5289 = !DILocalVariable(name: "callback", scope: !5281, file: !672, line: 215, type: !831)
!5290 = !DILocalVariable(name: "arg", scope: !5281, file: !672, line: 216, type: !88)
!5291 = !DILocalVariable(name: "irq_status", scope: !5281, file: !672, line: 218, type: !61)
!5292 = !DILocation(line: 0, scope: !5281)
!5293 = !DILocation(line: 214, column: 5, scope: !5281)
!5294 = !DILocation(line: 221, column: 9, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5281, file: !672, line: 221, column: 9)
!5296 = !DILocation(line: 221, column: 36, scope: !5295)
!5297 = !DILocation(line: 221, column: 9, scope: !5281)
!5298 = !DILocation(line: 222, column: 9, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !672, line: 221, column: 70)
!5300 = !DILocation(line: 226, column: 15, scope: !5281)
!5301 = !DILocation(line: 228, column: 9, scope: !5281)
!5302 = !DILocation(line: 230, column: 13, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5304, file: !672, line: 230, column: 13)
!5304 = distinct !DILexicalBlock(scope: !5305, file: !672, line: 228, column: 43)
!5305 = distinct !DILexicalBlock(scope: !5281, file: !672, line: 228, column: 9)
!5306 = !DILocation(line: 230, column: 61, scope: !5303)
!5307 = !DILocation(line: 230, column: 13, scope: !5304)
!5308 = !DILocation(line: 231, column: 26, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5303, file: !672, line: 230, column: 71)
!5310 = !DILocation(line: 232, column: 22, scope: !5309)
!5311 = !DILocation(line: 233, column: 24, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5309, file: !672, line: 233, column: 17)
!5313 = !DILocation(line: 233, column: 17, scope: !5309)
!5314 = !DILocation(line: 234, column: 17, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5312, file: !672, line: 233, column: 36)
!5316 = !DILocation(line: 237, column: 46, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5309, file: !672, line: 237, column: 17)
!5318 = !DILocation(line: 237, column: 71, scope: !5317)
!5319 = !DILocation(line: 237, column: 83, scope: !5317)
!5320 = !DILocation(line: 237, column: 17, scope: !5309)
!5321 = !DILocation(line: 238, column: 21, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !672, line: 238, column: 21)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !672, line: 237, column: 89)
!5324 = !DILocation(line: 238, column: 21, scope: !5323)
!5325 = !DILocation(line: 240, column: 65, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !672, line: 240, column: 25)
!5327 = distinct !DILexicalBlock(scope: !5322, file: !672, line: 238, column: 65)
!5328 = !DILocation(line: 240, column: 25, scope: !5326)
!5329 = !DILocation(line: 240, column: 25, scope: !5327)
!5330 = !DILocation(line: 241, column: 56, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !672, line: 240, column: 107)
!5332 = !DILocation(line: 241, column: 25, scope: !5331)
!5333 = !DILocation(line: 242, column: 21, scope: !5331)
!5334 = !DILocation(line: 243, column: 56, scope: !5327)
!5335 = !DILocation(line: 244, column: 17, scope: !5327)
!5336 = !DILocation(line: 246, column: 13, scope: !5309)
!5337 = !DILocation(line: 247, column: 9, scope: !5309)
!5338 = !DILocation(line: 248, column: 61, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5303, file: !672, line: 247, column: 16)
!5340 = !DILocation(line: 253, column: 47, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5305, file: !672, line: 252, column: 12)
!5342 = !DILocation(line: 255, column: 22, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5341, file: !672, line: 255, column: 13)
!5344 = !DILocation(line: 255, column: 13, scope: !5341)
!5345 = !DILocation(line: 256, column: 13, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5343, file: !672, line: 255, column: 31)
!5347 = !DILocation(line: 254, column: 42, scope: !5341)
!5348 = !DILocation(line: 260, column: 9, scope: !5341)
!5349 = !DILocation(line: 261, column: 9, scope: !5341)
!5350 = !DILocation(line: 262, column: 9, scope: !5341)
!5351 = !DILocation(line: 264, column: 18, scope: !5341)
!5352 = !DILocation(line: 265, column: 20, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5341, file: !672, line: 265, column: 13)
!5354 = !DILocation(line: 265, column: 13, scope: !5341)
!5355 = !DILocation(line: 266, column: 13, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5353, file: !672, line: 265, column: 32)
!5357 = !DILocation(line: 269, column: 54, scope: !5341)
!5358 = !DILocation(line: 270, column: 56, scope: !5341)
!5359 = !DILocation(line: 270, column: 25, scope: !5341)
!5360 = !DILocation(line: 271, column: 13, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5341, file: !672, line: 271, column: 13)
!5362 = !DILocation(line: 271, column: 25, scope: !5361)
!5363 = !DILocation(line: 271, column: 13, scope: !5341)
!5364 = !DILocation(line: 272, column: 22, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5361, file: !672, line: 271, column: 43)
!5366 = !DILocation(line: 273, column: 24, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5365, file: !672, line: 273, column: 17)
!5368 = !DILocation(line: 273, column: 17, scope: !5365)
!5369 = !DILocation(line: 274, column: 17, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5367, file: !672, line: 273, column: 36)
!5371 = !DILocation(line: 279, column: 1, scope: !5281)
!5372 = distinct !DISubprogram(name: "uart_error_handler", scope: !672, file: !672, line: 282, type: !5373, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5375)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !784}
!5375 = !{!5376, !5377, !5378, !5379}
!5376 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5372, file: !672, line: 282, type: !784)
!5377 = !DILocalVariable(name: "uartx", scope: !5372, file: !672, line: 284, type: !5170)
!5378 = !DILocalVariable(name: "callback", scope: !5372, file: !672, line: 285, type: !831)
!5379 = !DILocalVariable(name: "arg", scope: !5372, file: !672, line: 286, type: !88)
!5380 = !DILocation(line: 0, scope: !5372)
!5381 = !DILocation(line: 288, column: 13, scope: !5372)
!5382 = !DILocation(line: 290, column: 10, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5372, file: !672, line: 290, column: 9)
!5384 = !DILocation(line: 290, column: 9, scope: !5372)
!5385 = !DILocation(line: 291, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5383, file: !672, line: 290, column: 36)
!5387 = !DILocation(line: 292, column: 9, scope: !5386)
!5388 = !DILocation(line: 293, column: 47, scope: !5386)
!5389 = !DILocation(line: 295, column: 22, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !672, line: 295, column: 13)
!5391 = !DILocation(line: 295, column: 13, scope: !5386)
!5392 = !DILocation(line: 296, column: 13, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5390, file: !672, line: 295, column: 31)
!5394 = !DILocation(line: 294, column: 42, scope: !5386)
!5395 = !DILocation(line: 299, column: 9, scope: !5386)
!5396 = !DILocation(line: 300, column: 5, scope: !5386)
!5397 = !DILocation(line: 301, column: 1, scope: !5372)
!5398 = distinct !DISubprogram(name: "uart_backup_all_registers", scope: !672, file: !672, line: 315, type: !343, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5399)
!5399 = !{!5400, !5401, !5402, !5403, !5404}
!5400 = !DILocalVariable(name: "uart_port", scope: !5398, file: !672, line: 317, type: !784)
!5401 = !DILocalVariable(name: "uart_hwstatus", scope: !5398, file: !672, line: 318, type: !866)
!5402 = !DILocalVariable(name: "uart_flowcontrol", scope: !5398, file: !672, line: 319, type: !798)
!5403 = !DILocalVariable(name: "uart_callback", scope: !5398, file: !672, line: 320, type: !831)
!5404 = !DILocalVariable(name: "uart_callback_arg", scope: !5398, file: !672, line: 321, type: !88)
!5405 = !DILocation(line: 0, scope: !5398)
!5406 = !DILocation(line: 329, column: 5, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5398, file: !672, line: 329, column: 5)
!5408 = !DILocation(line: 330, column: 13, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !672, line: 330, column: 13)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !672, line: 329, column: 73)
!5411 = distinct !DILexicalBlock(scope: !5407, file: !672, line: 329, column: 5)
!5412 = !DILocation(line: 330, column: 40, scope: !5409)
!5413 = !DILocation(line: 330, column: 13, scope: !5410)
!5414 = !DILocation(line: 331, column: 29, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5409, file: !672, line: 330, column: 72)
!5416 = !DILocation(line: 332, column: 32, scope: !5415)
!5417 = !DILocation(line: 333, column: 56, scope: !5415)
!5418 = !DILocation(line: 334, column: 60, scope: !5415)
!5419 = !DILocation(line: 345, column: 13, scope: !5415)
!5420 = !DILocation(line: 346, column: 40, scope: !5415)
!5421 = !DILocation(line: 347, column: 50, scope: !5415)
!5422 = !DILocation(line: 348, column: 45, scope: !5415)
!5423 = !DILocation(line: 349, column: 44, scope: !5415)
!5424 = !DILocation(line: 350, column: 77, scope: !5415)
!5425 = !DILocation(line: 350, column: 52, scope: !5415)
!5426 = !DILocation(line: 350, column: 13, scope: !5415)
!5427 = !DILocation(line: 350, column: 50, scope: !5415)
!5428 = !DILocation(line: 358, column: 9, scope: !5415)
!5429 = !DILocation(line: 329, column: 69, scope: !5411)
!5430 = !DILocation(line: 329, column: 44, scope: !5411)
!5431 = distinct !{!5431, !5406, !5432}
!5432 = !DILocation(line: 359, column: 5, scope: !5407)
!5433 = !DILocation(line: 360, column: 1, scope: !5398)
!5434 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !672, file: !672, line: 544, type: !5435, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5438)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{!5437, !784}
!5437 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !697, line: 351, baseType: !718)
!5438 = !{!5439, !5440, !5441, !5442, !5443, !5444, !5445}
!5439 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5434, file: !672, line: 544, type: !784)
!5440 = !DILocalVariable(name: "uartx", scope: !5434, file: !672, line: 546, type: !5170)
!5441 = !DILocalVariable(name: "tx_dma_channel", scope: !5434, file: !672, line: 547, type: !5165)
!5442 = !DILocalVariable(name: "rx_dma_channel", scope: !5434, file: !672, line: 547, type: !5165)
!5443 = !DILocalVariable(name: "irq_status", scope: !5434, file: !672, line: 548, type: !61)
!5444 = !DILocalVariable(name: "status", scope: !5434, file: !672, line: 549, type: !5226)
!5445 = !DILocalVariable(name: "clock_status", scope: !5434, file: !672, line: 550, type: !5446)
!5446 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !757, line: 106, baseType: !756)
!5447 = !DILocation(line: 0, scope: !5434)
!5448 = !DILocation(line: 552, column: 10, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5434, file: !672, line: 552, column: 9)
!5450 = !DILocation(line: 552, column: 9, scope: !5434)
!5451 = !DILocation(line: 556, column: 18, scope: !5434)
!5452 = !DILocation(line: 557, column: 9, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5434, file: !672, line: 557, column: 9)
!5454 = !DILocation(line: 557, column: 36, scope: !5453)
!5455 = !DILocation(line: 557, column: 9, scope: !5434)
!5456 = !DILocation(line: 562, column: 13, scope: !5434)
!5457 = !DILocation(line: 565, column: 5, scope: !5434)
!5458 = !DILocation(line: 568, column: 9, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5434, file: !672, line: 568, column: 9)
!5460 = !DILocation(line: 568, column: 36, scope: !5459)
!5461 = !DILocation(line: 568, column: 9, scope: !5434)
!5462 = !DILocation(line: 569, column: 26, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5459, file: !672, line: 568, column: 70)
!5464 = !DILocation(line: 570, column: 26, scope: !5463)
!5465 = !DILocation(line: 572, column: 18, scope: !5463)
!5466 = !DILocation(line: 573, column: 20, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5463, file: !672, line: 573, column: 13)
!5468 = !DILocation(line: 573, column: 13, scope: !5463)
!5469 = !DILocation(line: 574, column: 13, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5467, file: !672, line: 573, column: 32)
!5471 = !DILocation(line: 575, column: 13, scope: !5470)
!5472 = !DILocation(line: 578, column: 18, scope: !5463)
!5473 = !DILocation(line: 579, column: 20, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5463, file: !672, line: 579, column: 13)
!5475 = !DILocation(line: 579, column: 13, scope: !5463)
!5476 = !DILocation(line: 580, column: 13, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5474, file: !672, line: 579, column: 32)
!5478 = !DILocation(line: 581, column: 13, scope: !5477)
!5479 = !DILocation(line: 584, column: 18, scope: !5463)
!5480 = !DILocation(line: 585, column: 20, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5463, file: !672, line: 585, column: 13)
!5482 = !DILocation(line: 585, column: 13, scope: !5463)
!5483 = !DILocation(line: 586, column: 13, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5481, file: !672, line: 585, column: 32)
!5485 = !DILocation(line: 587, column: 13, scope: !5484)
!5486 = !DILocation(line: 590, column: 18, scope: !5463)
!5487 = !DILocation(line: 591, column: 20, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5463, file: !672, line: 591, column: 13)
!5489 = !DILocation(line: 591, column: 13, scope: !5463)
!5490 = !DILocation(line: 592, column: 13, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !672, line: 591, column: 32)
!5492 = !DILocation(line: 593, column: 13, scope: !5491)
!5493 = !DILocation(line: 596, column: 18, scope: !5463)
!5494 = !DILocation(line: 597, column: 20, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5463, file: !672, line: 597, column: 13)
!5496 = !DILocation(line: 597, column: 13, scope: !5463)
!5497 = !DILocation(line: 598, column: 13, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5495, file: !672, line: 597, column: 32)
!5499 = !DILocation(line: 599, column: 13, scope: !5498)
!5500 = !DILocation(line: 602, column: 18, scope: !5463)
!5501 = !DILocation(line: 603, column: 20, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5463, file: !672, line: 603, column: 13)
!5503 = !DILocation(line: 603, column: 13, scope: !5463)
!5504 = !DILocation(line: 604, column: 13, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5502, file: !672, line: 603, column: 32)
!5506 = !DILocation(line: 605, column: 13, scope: !5505)
!5507 = !DILocation(line: 608, column: 30, scope: !5463)
!5508 = !DILocation(line: 608, column: 9, scope: !5463)
!5509 = !DILocation(line: 609, column: 5, scope: !5463)
!5510 = !DILocation(line: 610, column: 5, scope: !5434)
!5511 = !DILocation(line: 611, column: 38, scope: !5434)
!5512 = !DILocation(line: 611, column: 20, scope: !5434)
!5513 = !DILocation(line: 612, column: 22, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5434, file: !672, line: 612, column: 9)
!5515 = !DILocation(line: 612, column: 9, scope: !5434)
!5516 = !DILocation(line: 613, column: 9, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5514, file: !672, line: 612, column: 46)
!5518 = !DILocation(line: 614, column: 9, scope: !5517)
!5519 = !DILocation(line: 618, column: 32, scope: !5434)
!5520 = !DILocation(line: 618, column: 37, scope: !5434)
!5521 = !DILocation(line: 619, column: 32, scope: !5434)
!5522 = !DILocation(line: 619, column: 36, scope: !5434)
!5523 = !DILocation(line: 622, column: 5, scope: !5434)
!5524 = !DILocation(line: 622, column: 53, scope: !5434)
!5525 = !DILocation(line: 623, column: 5, scope: !5434)
!5526 = !DILocation(line: 623, column: 42, scope: !5434)
!5527 = !DILocation(line: 635, column: 32, scope: !5434)
!5528 = !DILocation(line: 639, column: 5, scope: !5434)
!5529 = !DILocation(line: 640, column: 1, scope: !5434)
!5530 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !672, file: !672, line: 120, type: !5531, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5533)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!91, !784}
!5533 = !{!5534}
!5534 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5530, file: !672, line: 120, type: !784)
!5535 = !DILocation(line: 0, scope: !5530)
!5536 = !DILocation(line: 122, column: 23, scope: !5530)
!5537 = !DILocation(line: 122, column: 5, scope: !5530)
!5538 = distinct !DISubprogram(name: "uart_restore_all_registers", scope: !672, file: !672, line: 362, type: !343, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5539)
!5539 = !{!5540, !5541, !5542, !5543, !5544}
!5540 = !DILocalVariable(name: "delay", scope: !5538, file: !672, line: 364, type: !61)
!5541 = !DILocalVariable(name: "uart_port", scope: !5538, file: !672, line: 365, type: !784)
!5542 = !DILocalVariable(name: "uartx", scope: !5538, file: !672, line: 366, type: !5170)
!5543 = !DILocalVariable(name: "uart_hwstatus", scope: !5538, file: !672, line: 367, type: !866)
!5544 = !DILocalVariable(name: "sleep_lock_status", scope: !5538, file: !672, line: 368, type: !91)
!5545 = !DILocation(line: 369, column: 25, scope: !5538)
!5546 = !DILocation(line: 0, scope: !5538)
!5547 = !DILocation(line: 371, column: 5, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5538, file: !672, line: 371, column: 5)
!5549 = !DILocation(line: 372, column: 25, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5551, file: !672, line: 371, column: 73)
!5551 = distinct !DILexicalBlock(scope: !5548, file: !672, line: 371, column: 5)
!5552 = !DILocation(line: 373, column: 27, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5550, file: !672, line: 373, column: 13)
!5554 = !DILocation(line: 373, column: 13, scope: !5550)
!5555 = !DILocation(line: 374, column: 40, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5553, file: !672, line: 373, column: 59)
!5557 = !DILocation(line: 375, column: 39, scope: !5556)
!5558 = !DILocation(line: 375, column: 13, scope: !5556)
!5559 = !DILocation(line: 376, column: 9, scope: !5556)
!5560 = !DILocation(line: 380, column: 13, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5550, file: !672, line: 380, column: 13)
!5562 = !DILocation(line: 380, column: 13, scope: !5550)
!5563 = !DILocation(line: 381, column: 21, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !672, line: 380, column: 80)
!5565 = !DILocation(line: 382, column: 80, scope: !5564)
!5566 = !DILocation(line: 382, column: 13, scope: !5564)
!5567 = !DILocation(line: 384, column: 64, scope: !5564)
!5568 = !DILocation(line: 384, column: 37, scope: !5564)
!5569 = !DILocation(line: 384, column: 74, scope: !5564)
!5570 = !DILocation(line: 385, column: 13, scope: !5564)
!5571 = !DILocation(line: 387, column: 87, scope: !5564)
!5572 = !DILocation(line: 388, column: 87, scope: !5564)
!5573 = !DILocation(line: 389, column: 87, scope: !5564)
!5574 = !DILocation(line: 386, column: 13, scope: !5564)
!5575 = !DILocation(line: 390, column: 9, scope: !5564)
!5576 = !DILocation(line: 391, column: 13, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !672, line: 390, column: 87)
!5578 = distinct !DILexicalBlock(scope: !5561, file: !672, line: 390, column: 20)
!5579 = !DILocation(line: 392, column: 9, scope: !5577)
!5580 = !DILocation(line: 394, column: 27, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5550, file: !672, line: 394, column: 13)
!5582 = !DILocation(line: 394, column: 13, scope: !5550)
!5583 = !DILocation(line: 395, column: 42, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !672, line: 394, column: 61)
!5585 = !DILocation(line: 395, column: 13, scope: !5584)
!5586 = !DILocation(line: 396, column: 78, scope: !5584)
!5587 = !DILocation(line: 396, column: 111, scope: !5584)
!5588 = !DILocation(line: 396, column: 13, scope: !5584)
!5589 = !DILocation(line: 397, column: 9, scope: !5584)
!5590 = !DILocation(line: 399, column: 69, scope: !5550)
!5591 = !DILocation(line: 399, column: 29, scope: !5550)
!5592 = !DILocation(line: 400, column: 41, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5550, file: !672, line: 400, column: 13)
!5594 = !DILocation(line: 400, column: 45, scope: !5593)
!5595 = !DILocation(line: 400, column: 13, scope: !5550)
!5596 = !DILocation(line: 402, column: 44, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5593, file: !672, line: 400, column: 89)
!5598 = !DILocation(line: 402, column: 13, scope: !5597)
!5599 = !DILocation(line: 403, column: 9, scope: !5597)
!5600 = !DILocation(line: 371, column: 69, scope: !5551)
!5601 = !DILocation(line: 371, column: 44, scope: !5551)
!5602 = distinct !{!5602, !5547, !5603}
!5603 = !DILocation(line: 411, column: 5, scope: !5548)
!5604 = !DILocation(line: 412, column: 25, scope: !5538)
!5605 = !DILocation(line: 413, column: 1, scope: !5538)
!5606 = distinct !DISubprogram(name: "hal_uart_init", scope: !672, file: !672, line: 476, type: !5607, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5610)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!5437, !784, !5609}
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!5610 = !{!5611, !5612, !5613, !5614, !5615, !5616, !5617}
!5611 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5606, file: !672, line: 476, type: !784)
!5612 = !DILocalVariable(name: "uart_config", arg: 2, scope: !5606, file: !672, line: 476, type: !5609)
!5613 = !DILocalVariable(name: "uartx", scope: !5606, file: !672, line: 478, type: !5170)
!5614 = !DILocalVariable(name: "i", scope: !5606, file: !672, line: 479, type: !61)
!5615 = !DILocalVariable(name: "actual_baudrate", scope: !5606, file: !672, line: 479, type: !61)
!5616 = !DILocalVariable(name: "irq_status", scope: !5606, file: !672, line: 479, type: !61)
!5617 = !DILocalVariable(name: "status", scope: !5606, file: !672, line: 480, type: !5446)
!5618 = !DILocation(line: 0, scope: !5606)
!5619 = !DILocation(line: 482, column: 11, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5606, file: !672, line: 482, column: 9)
!5621 = !DILocation(line: 482, column: 42, scope: !5620)
!5622 = !DILocation(line: 483, column: 11, scope: !5620)
!5623 = !DILocation(line: 482, column: 9, scope: !5606)
!5624 = !DILocation(line: 487, column: 18, scope: !5606)
!5625 = !DILocation(line: 488, column: 9, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5606, file: !672, line: 488, column: 9)
!5627 = !DILocation(line: 488, column: 36, scope: !5626)
!5628 = !DILocation(line: 488, column: 9, scope: !5606)
!5629 = !DILocation(line: 489, column: 9, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5626, file: !672, line: 488, column: 68)
!5631 = !DILocation(line: 490, column: 9, scope: !5630)
!5632 = !DILocation(line: 497, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5606, file: !672, line: 497, column: 9)
!5634 = !DILocation(line: 497, column: 9, scope: !5606)
!5635 = !DILocation(line: 498, column: 86, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5633, file: !672, line: 497, column: 39)
!5637 = !DILocation(line: 498, column: 43, scope: !5636)
!5638 = !DILocation(line: 498, column: 9, scope: !5636)
!5639 = !DILocation(line: 498, column: 41, scope: !5636)
!5640 = !DILocation(line: 499, column: 5, scope: !5636)
!5641 = !DILocation(line: 502, column: 9, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5606, file: !672, line: 502, column: 9)
!5643 = !DILocation(line: 502, column: 9, scope: !5606)
!5644 = !DILocation(line: 504, column: 13, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !672, line: 503, column: 44)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !672, line: 503, column: 9)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !672, line: 503, column: 9)
!5648 = distinct !DILexicalBlock(scope: !5642, file: !672, line: 502, column: 50)
!5649 = !DILocation(line: 504, column: 32, scope: !5645)
!5650 = !DILocation(line: 506, column: 13, scope: !5645)
!5651 = !DILocation(line: 506, column: 42, scope: !5645)
!5652 = !DILocation(line: 507, column: 13, scope: !5645)
!5653 = !DILocation(line: 507, column: 53, scope: !5645)
!5654 = !DILocation(line: 508, column: 13, scope: !5645)
!5655 = !DILocation(line: 508, column: 40, scope: !5645)
!5656 = !DILocation(line: 510, column: 32, scope: !5645)
!5657 = !DILocation(line: 510, column: 36, scope: !5645)
!5658 = !DILocation(line: 511, column: 32, scope: !5645)
!5659 = !DILocation(line: 511, column: 37, scope: !5645)
!5660 = !DILocation(line: 503, column: 40, scope: !5646)
!5661 = !DILocation(line: 503, column: 23, scope: !5646)
!5662 = !DILocation(line: 503, column: 9, scope: !5647)
!5663 = distinct !{!5663, !5662, !5664}
!5664 = !DILocation(line: 512, column: 9, scope: !5647)
!5665 = !DILocation(line: 513, column: 40, scope: !5648)
!5666 = !DILocation(line: 514, column: 5, scope: !5648)
!5667 = !DILocation(line: 516, column: 54, scope: !5606)
!5668 = !DILocation(line: 516, column: 30, scope: !5606)
!5669 = !DILocation(line: 516, column: 39, scope: !5606)
!5670 = !DILocation(line: 517, column: 57, scope: !5606)
!5671 = !DILocation(line: 517, column: 30, scope: !5606)
!5672 = !DILocation(line: 517, column: 42, scope: !5606)
!5673 = !DILocation(line: 518, column: 54, scope: !5606)
!5674 = !DILocation(line: 518, column: 30, scope: !5606)
!5675 = !DILocation(line: 518, column: 39, scope: !5606)
!5676 = !DILocation(line: 519, column: 52, scope: !5606)
!5677 = !DILocation(line: 519, column: 30, scope: !5606)
!5678 = !DILocation(line: 519, column: 37, scope: !5606)
!5679 = !DILocation(line: 521, column: 32, scope: !5606)
!5680 = !DILocation(line: 522, column: 5, scope: !5606)
!5681 = !DILocation(line: 524, column: 31, scope: !5606)
!5682 = !DILocation(line: 524, column: 14, scope: !5606)
!5683 = !DILocation(line: 525, column: 16, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5606, file: !672, line: 525, column: 9)
!5685 = !DILocation(line: 525, column: 9, scope: !5606)
!5686 = !DILocation(line: 526, column: 9, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5684, file: !672, line: 525, column: 40)
!5688 = !DILocation(line: 530, column: 13, scope: !5606)
!5689 = !DILocation(line: 532, column: 5, scope: !5606)
!5690 = !DILocation(line: 533, column: 56, scope: !5606)
!5691 = !DILocation(line: 533, column: 23, scope: !5606)
!5692 = !DILocation(line: 534, column: 5, scope: !5606)
!5693 = !DILocation(line: 535, column: 41, scope: !5606)
!5694 = !DILocation(line: 535, column: 67, scope: !5606)
!5695 = !DILocation(line: 535, column: 90, scope: !5606)
!5696 = !DILocation(line: 535, column: 5, scope: !5606)
!5697 = !DILocation(line: 536, column: 5, scope: !5606)
!5698 = !DILocation(line: 538, column: 5, scope: !5606)
!5699 = !DILocation(line: 541, column: 5, scope: !5606)
!5700 = !DILocation(line: 542, column: 1, scope: !5606)
!5701 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !672, file: !672, line: 1018, type: !5702, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!5437, !784, !159, !159, !159}
!5704 = !{!5705, !5706, !5707, !5708, !5709}
!5705 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5701, file: !672, line: 1018, type: !784)
!5706 = !DILocalVariable(name: "xon", arg: 2, scope: !5701, file: !672, line: 1019, type: !159)
!5707 = !DILocalVariable(name: "xoff", arg: 3, scope: !5701, file: !672, line: 1020, type: !159)
!5708 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5701, file: !672, line: 1021, type: !159)
!5709 = !DILocalVariable(name: "uartx", scope: !5701, file: !672, line: 1023, type: !5170)
!5710 = !DILocation(line: 0, scope: !5701)
!5711 = !DILocation(line: 1025, column: 10, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5701, file: !672, line: 1025, column: 9)
!5713 = !DILocation(line: 1025, column: 9, scope: !5701)
!5714 = !DILocation(line: 1029, column: 9, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5701, file: !672, line: 1029, column: 9)
!5716 = !DILocation(line: 1029, column: 36, scope: !5715)
!5717 = !DILocation(line: 1029, column: 9, scope: !5701)
!5718 = !DILocation(line: 1033, column: 13, scope: !5701)
!5719 = !DILocation(line: 1035, column: 5, scope: !5701)
!5720 = !DILocation(line: 1038, column: 5, scope: !5701)
!5721 = !DILocation(line: 1038, column: 42, scope: !5701)
!5722 = !DILocation(line: 1039, column: 45, scope: !5701)
!5723 = !DILocation(line: 1039, column: 49, scope: !5701)
!5724 = !DILocation(line: 1040, column: 45, scope: !5701)
!5725 = !DILocation(line: 1040, column: 50, scope: !5701)
!5726 = !DILocation(line: 1041, column: 45, scope: !5701)
!5727 = !DILocation(line: 1041, column: 62, scope: !5701)
!5728 = !DILocation(line: 1044, column: 5, scope: !5701)
!5729 = !DILocation(line: 1045, column: 1, scope: !5701)
!5730 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !672, file: !672, line: 995, type: !5435, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5731)
!5731 = !{!5732, !5733}
!5732 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5730, file: !672, line: 995, type: !784)
!5733 = !DILocalVariable(name: "uartx", scope: !5730, file: !672, line: 997, type: !5170)
!5734 = !DILocation(line: 0, scope: !5730)
!5735 = !DILocation(line: 999, column: 10, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5730, file: !672, line: 999, column: 9)
!5737 = !DILocation(line: 999, column: 9, scope: !5730)
!5738 = !DILocation(line: 1003, column: 9, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5730, file: !672, line: 1003, column: 9)
!5740 = !DILocation(line: 1003, column: 36, scope: !5739)
!5741 = !DILocation(line: 1003, column: 9, scope: !5730)
!5742 = !DILocation(line: 1007, column: 13, scope: !5730)
!5743 = !DILocation(line: 1009, column: 5, scope: !5730)
!5744 = !DILocation(line: 1012, column: 5, scope: !5730)
!5745 = !DILocation(line: 1012, column: 42, scope: !5730)
!5746 = !DILocation(line: 1015, column: 5, scope: !5730)
!5747 = !DILocation(line: 1016, column: 1, scope: !5730)
!5748 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !672, file: !672, line: 1071, type: !5749, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5753)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{!5437, !784, !5751}
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 32)
!5752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!5753 = !{!5754, !5755, !5756, !5757, !5763, !5764, !5765}
!5754 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5748, file: !672, line: 1071, type: !784)
!5755 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5748, file: !672, line: 1071, type: !5751)
!5756 = !DILocalVariable(name: "irq_status", scope: !5748, file: !672, line: 1073, type: !61)
!5757 = !DILocalVariable(name: "internal_dma_config", scope: !5748, file: !672, line: 1074, type: !5758)
!5758 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !682, line: 283, baseType: !5759)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 280, size: 64, elements: !5760)
!5760 = !{!5761, !5762}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5759, file: !682, line: 281, baseType: !61, size: 32)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5759, file: !682, line: 282, baseType: !61, size: 32, offset: 32)
!5763 = !DILocalVariable(name: "tx_dma_channel", scope: !5748, file: !672, line: 1075, type: !5165)
!5764 = !DILocalVariable(name: "rx_dma_channel", scope: !5748, file: !672, line: 1075, type: !5165)
!5765 = !DILocalVariable(name: "status", scope: !5748, file: !672, line: 1076, type: !5226)
!5766 = !DILocation(line: 0, scope: !5748)
!5767 = !DILocation(line: 1074, column: 5, scope: !5748)
!5768 = !DILocation(line: 1074, column: 19, scope: !5748)
!5769 = !DILocation(line: 1078, column: 10, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1078, column: 9)
!5771 = !DILocation(line: 1078, column: 9, scope: !5748)
!5772 = !DILocation(line: 1081, column: 22, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1081, column: 9)
!5774 = !DILocation(line: 1081, column: 40, scope: !5773)
!5775 = !DILocation(line: 1081, column: 49, scope: !5773)
!5776 = !DILocation(line: 1082, column: 22, scope: !5773)
!5777 = !DILocation(line: 1082, column: 43, scope: !5773)
!5778 = !DILocation(line: 1081, column: 9, scope: !5748)
!5779 = !DILocation(line: 1085, column: 22, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1085, column: 9)
!5781 = !DILocation(line: 1085, column: 45, scope: !5780)
!5782 = !DILocation(line: 1085, column: 76, scope: !5780)
!5783 = !DILocation(line: 1086, column: 22, scope: !5780)
!5784 = !DILocation(line: 1086, column: 48, scope: !5780)
!5785 = !DILocation(line: 1086, column: 79, scope: !5780)
!5786 = !DILocation(line: 1090, column: 22, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1090, column: 9)
!5788 = !DILocation(line: 1090, column: 48, scope: !5787)
!5789 = !DILocation(line: 1090, column: 79, scope: !5787)
!5790 = !DILocation(line: 1091, column: 22, scope: !5787)
!5791 = !DILocation(line: 1091, column: 51, scope: !5787)
!5792 = !DILocation(line: 1091, column: 82, scope: !5787)
!5793 = !DILocation(line: 1092, column: 22, scope: !5787)
!5794 = !DILocation(line: 1092, column: 47, scope: !5787)
!5795 = !DILocation(line: 1092, column: 78, scope: !5787)
!5796 = !DILocation(line: 1098, column: 9, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1098, column: 9)
!5798 = !DILocation(line: 1098, column: 36, scope: !5797)
!5799 = !DILocation(line: 1098, column: 9, scope: !5748)
!5800 = !DILocation(line: 1102, column: 22, scope: !5748)
!5801 = !DILocation(line: 1103, column: 22, scope: !5748)
!5802 = !DILocation(line: 1105, column: 14, scope: !5748)
!5803 = !DILocation(line: 1106, column: 16, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1106, column: 9)
!5805 = !DILocation(line: 1106, column: 9, scope: !5748)
!5806 = !DILocation(line: 1107, column: 9, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5804, file: !672, line: 1106, column: 28)
!5808 = !DILocation(line: 1110, column: 62, scope: !5748)
!5809 = !DILocation(line: 1110, column: 40, scope: !5748)
!5810 = !DILocation(line: 1110, column: 25, scope: !5748)
!5811 = !DILocation(line: 1110, column: 38, scope: !5748)
!5812 = !DILocation(line: 1111, column: 44, scope: !5748)
!5813 = !DILocation(line: 1111, column: 25, scope: !5748)
!5814 = !DILocation(line: 1111, column: 30, scope: !5748)
!5815 = !DILocation(line: 1112, column: 14, scope: !5748)
!5816 = !DILocation(line: 1113, column: 16, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1113, column: 9)
!5818 = !DILocation(line: 1113, column: 9, scope: !5748)
!5819 = !DILocation(line: 1114, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5817, file: !672, line: 1113, column: 28)
!5821 = !DILocation(line: 1117, column: 61, scope: !5748)
!5822 = !DILocation(line: 1117, column: 14, scope: !5748)
!5823 = !DILocation(line: 1118, column: 16, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1118, column: 9)
!5825 = !DILocation(line: 1118, column: 9, scope: !5748)
!5826 = !DILocation(line: 1119, column: 9, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5824, file: !672, line: 1118, column: 28)
!5828 = !DILocation(line: 1123, column: 14, scope: !5748)
!5829 = !DILocation(line: 1124, column: 16, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1124, column: 9)
!5831 = !DILocation(line: 1124, column: 9, scope: !5748)
!5832 = !DILocation(line: 1125, column: 9, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5830, file: !672, line: 1124, column: 28)
!5834 = !DILocation(line: 1128, column: 62, scope: !5748)
!5835 = !DILocation(line: 1128, column: 40, scope: !5748)
!5836 = !DILocation(line: 1128, column: 38, scope: !5748)
!5837 = !DILocation(line: 1129, column: 44, scope: !5748)
!5838 = !DILocation(line: 1129, column: 30, scope: !5748)
!5839 = !DILocation(line: 1130, column: 14, scope: !5748)
!5840 = !DILocation(line: 1131, column: 16, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1131, column: 9)
!5842 = !DILocation(line: 1131, column: 9, scope: !5748)
!5843 = !DILocation(line: 1132, column: 9, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !672, line: 1131, column: 28)
!5845 = !DILocation(line: 1135, column: 61, scope: !5748)
!5846 = !DILocation(line: 1135, column: 14, scope: !5748)
!5847 = !DILocation(line: 1136, column: 16, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1136, column: 9)
!5849 = !DILocation(line: 1136, column: 9, scope: !5748)
!5850 = !DILocation(line: 1137, column: 9, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5848, file: !672, line: 1136, column: 28)
!5852 = !DILocation(line: 1140, column: 64, scope: !5748)
!5853 = !DILocation(line: 1140, column: 14, scope: !5748)
!5854 = !DILocation(line: 1141, column: 16, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5748, file: !672, line: 1141, column: 9)
!5856 = !DILocation(line: 1141, column: 9, scope: !5748)
!5857 = !DILocation(line: 1142, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5855, file: !672, line: 1141, column: 28)
!5859 = !DILocation(line: 1146, column: 18, scope: !5748)
!5860 = !DILocation(line: 1147, column: 66, scope: !5748)
!5861 = !DILocation(line: 1147, column: 34, scope: !5748)
!5862 = !DILocation(line: 1147, column: 52, scope: !5748)
!5863 = !DILocation(line: 1148, column: 71, scope: !5748)
!5864 = !DILocation(line: 1148, column: 34, scope: !5748)
!5865 = !DILocation(line: 1148, column: 57, scope: !5748)
!5866 = !DILocation(line: 1149, column: 74, scope: !5748)
!5867 = !DILocation(line: 1149, column: 34, scope: !5748)
!5868 = !DILocation(line: 1149, column: 60, scope: !5748)
!5869 = !DILocation(line: 1150, column: 73, scope: !5748)
!5870 = !DILocation(line: 1150, column: 34, scope: !5748)
!5871 = !DILocation(line: 1150, column: 59, scope: !5748)
!5872 = !DILocation(line: 1151, column: 69, scope: !5748)
!5873 = !DILocation(line: 1151, column: 34, scope: !5748)
!5874 = !DILocation(line: 1151, column: 55, scope: !5748)
!5875 = !DILocation(line: 1152, column: 74, scope: !5748)
!5876 = !DILocation(line: 1152, column: 34, scope: !5748)
!5877 = !DILocation(line: 1152, column: 60, scope: !5748)
!5878 = !DILocation(line: 1153, column: 77, scope: !5748)
!5879 = !DILocation(line: 1153, column: 34, scope: !5748)
!5880 = !DILocation(line: 1153, column: 63, scope: !5748)
!5881 = !DILocation(line: 1154, column: 5, scope: !5748)
!5882 = !DILocation(line: 1156, column: 5, scope: !5748)
!5883 = !DILocation(line: 1157, column: 1, scope: !5748)
!5884 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !672, file: !672, line: 891, type: !5885, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5887)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!5437, !784, !831, !88}
!5887 = !{!5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895}
!5888 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5884, file: !672, line: 891, type: !784)
!5889 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5884, file: !672, line: 892, type: !831)
!5890 = !DILocalVariable(name: "user_data", arg: 3, scope: !5884, file: !672, line: 893, type: !88)
!5891 = !DILocalVariable(name: "tx_dma_channel", scope: !5884, file: !672, line: 895, type: !5165)
!5892 = !DILocalVariable(name: "rx_dma_channel", scope: !5884, file: !672, line: 895, type: !5165)
!5893 = !DILocalVariable(name: "irq_status", scope: !5884, file: !672, line: 896, type: !61)
!5894 = !DILocalVariable(name: "status", scope: !5884, file: !672, line: 897, type: !5226)
!5895 = !DILocalVariable(name: "nvic_status", scope: !5884, file: !672, line: 898, type: !1252)
!5896 = !DILocation(line: 0, scope: !5884)
!5897 = !DILocation(line: 900, column: 11, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5884, file: !672, line: 900, column: 9)
!5899 = !DILocation(line: 900, column: 42, scope: !5898)
!5900 = !DILocation(line: 905, column: 18, scope: !5884)
!5901 = !DILocation(line: 906, column: 9, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5884, file: !672, line: 906, column: 9)
!5903 = !DILocation(line: 906, column: 36, scope: !5902)
!5904 = !DILocation(line: 906, column: 9, scope: !5884)
!5905 = !DILocation(line: 911, column: 22, scope: !5884)
!5906 = !DILocation(line: 912, column: 22, scope: !5884)
!5907 = !DILocation(line: 914, column: 32, scope: !5884)
!5908 = !DILocation(line: 914, column: 37, scope: !5884)
!5909 = !DILocation(line: 915, column: 32, scope: !5884)
!5910 = !DILocation(line: 915, column: 36, scope: !5884)
!5911 = !DILocation(line: 917, column: 91, scope: !5884)
!5912 = !DILocation(line: 917, column: 56, scope: !5884)
!5913 = !DILocation(line: 917, column: 5, scope: !5884)
!5914 = !DILocation(line: 918, column: 80, scope: !5884)
!5915 = !DILocation(line: 918, column: 14, scope: !5884)
!5916 = !DILocation(line: 919, column: 16, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5884, file: !672, line: 919, column: 9)
!5918 = !DILocation(line: 919, column: 9, scope: !5884)
!5919 = !DILocation(line: 920, column: 9, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5917, file: !672, line: 919, column: 28)
!5921 = !DILocation(line: 921, column: 9, scope: !5920)
!5922 = !DILocation(line: 924, column: 97, scope: !5884)
!5923 = !DILocation(line: 924, column: 56, scope: !5884)
!5924 = !DILocation(line: 924, column: 5, scope: !5884)
!5925 = !DILocation(line: 925, column: 80, scope: !5884)
!5926 = !DILocation(line: 925, column: 14, scope: !5884)
!5927 = !DILocation(line: 926, column: 16, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5884, file: !672, line: 926, column: 9)
!5929 = !DILocation(line: 926, column: 9, scope: !5884)
!5930 = !DILocation(line: 927, column: 9, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5928, file: !672, line: 926, column: 28)
!5932 = !DILocation(line: 928, column: 9, scope: !5931)
!5933 = !DILocation(line: 931, column: 49, scope: !5884)
!5934 = !DILocation(line: 931, column: 19, scope: !5884)
!5935 = !DILocation(line: 932, column: 21, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5884, file: !672, line: 932, column: 9)
!5937 = !DILocation(line: 932, column: 9, scope: !5884)
!5938 = !DILocation(line: 933, column: 9, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5936, file: !672, line: 932, column: 44)
!5940 = !DILocation(line: 934, column: 9, scope: !5939)
!5941 = !DILocation(line: 938, column: 5, scope: !5884)
!5942 = !DILocation(line: 940, column: 32, scope: !5884)
!5943 = !DILocation(line: 944, column: 5, scope: !5884)
!5944 = !DILocation(line: 945, column: 1, scope: !5884)
!5945 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !672, file: !672, line: 303, type: !5946, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5949)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{null, !5948, !88}
!5948 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !682, line: 225, baseType: !771)
!5949 = !{!5950, !5951, !5952}
!5950 = !DILocalVariable(name: "event", arg: 1, scope: !5945, file: !672, line: 303, type: !5948)
!5951 = !DILocalVariable(name: "user_data", arg: 2, scope: !5945, file: !672, line: 303, type: !88)
!5952 = !DILocalVariable(name: "callback_data", scope: !5945, file: !672, line: 305, type: !777)
!5953 = !DILocation(line: 0, scope: !5945)
!5954 = !DILocation(line: 307, column: 24, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5945, file: !672, line: 307, column: 9)
!5956 = !DILocation(line: 0, scope: !5955)
!5957 = !DILocation(line: 307, column: 9, scope: !5945)
!5958 = !DILocation(line: 308, column: 9, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5955, file: !672, line: 307, column: 39)
!5960 = !DILocation(line: 309, column: 5, scope: !5959)
!5961 = !DILocation(line: 310, column: 9, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5955, file: !672, line: 309, column: 12)
!5963 = !DILocation(line: 312, column: 1, scope: !5945)
!5964 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !672, file: !672, line: 852, type: !5373, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5965)
!5965 = !{!5966, !5967, !5968, !5969, !5970}
!5966 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5964, file: !672, line: 852, type: !784)
!5967 = !DILocalVariable(name: "uartx", scope: !5964, file: !672, line: 854, type: !5170)
!5968 = !DILocalVariable(name: "tx_dma_channel", scope: !5964, file: !672, line: 855, type: !5165)
!5969 = !DILocalVariable(name: "rx_dma_channel", scope: !5964, file: !672, line: 855, type: !5165)
!5970 = !DILocalVariable(name: "status", scope: !5964, file: !672, line: 856, type: !5226)
!5971 = !DILocation(line: 0, scope: !5964)
!5972 = !DILocation(line: 858, column: 13, scope: !5964)
!5973 = !DILocation(line: 859, column: 22, scope: !5964)
!5974 = !DILocation(line: 860, column: 22, scope: !5964)
!5975 = !DILocation(line: 863, column: 5, scope: !5964)
!5976 = !DILocation(line: 864, column: 5, scope: !5964)
!5977 = !DILocation(line: 864, column: 53, scope: !5964)
!5978 = !DILocation(line: 866, column: 5, scope: !5964)
!5979 = !DILocation(line: 867, column: 25, scope: !5964)
!5980 = !DILocation(line: 867, column: 5, scope: !5964)
!5981 = !DILocation(line: 868, column: 14, scope: !5964)
!5982 = !DILocation(line: 869, column: 16, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5964, file: !672, line: 869, column: 9)
!5984 = !DILocation(line: 869, column: 9, scope: !5964)
!5985 = !DILocation(line: 870, column: 9, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5983, file: !672, line: 869, column: 28)
!5987 = !DILocation(line: 873, column: 14, scope: !5964)
!5988 = !DILocation(line: 874, column: 16, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5964, file: !672, line: 874, column: 9)
!5990 = !DILocation(line: 874, column: 9, scope: !5964)
!5991 = !DILocation(line: 875, column: 9, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5989, file: !672, line: 874, column: 28)
!5993 = !DILocation(line: 878, column: 14, scope: !5964)
!5994 = !DILocation(line: 879, column: 16, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5964, file: !672, line: 879, column: 9)
!5996 = !DILocation(line: 879, column: 9, scope: !5964)
!5997 = !DILocation(line: 880, column: 9, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5995, file: !672, line: 879, column: 28)
!5999 = !DILocation(line: 883, column: 14, scope: !5964)
!6000 = !DILocation(line: 884, column: 16, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5964, file: !672, line: 884, column: 9)
!6002 = !DILocation(line: 884, column: 9, scope: !5964)
!6003 = !DILocation(line: 885, column: 9, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6001, file: !672, line: 884, column: 28)
!6005 = !DILocation(line: 888, column: 5, scope: !5964)
!6006 = !DILocation(line: 889, column: 1, scope: !5964)
!6007 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !672, file: !672, line: 130, type: !6008, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6012)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!91, !6010}
!6010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6011, size: 32)
!6011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !811)
!6012 = !{!6013}
!6013 = !DILocalVariable(name: "config", arg: 1, scope: !6007, file: !672, line: 130, type: !6010)
!6014 = !DILocation(line: 0, scope: !6007)
!6015 = !DILocation(line: 132, column: 22, scope: !6007)
!6016 = !DILocation(line: 132, column: 31, scope: !6007)
!6017 = !DILocation(line: 132, column: 56, scope: !6007)
!6018 = !DILocation(line: 133, column: 22, scope: !6007)
!6019 = !DILocation(line: 133, column: 34, scope: !6007)
!6020 = !DILocation(line: 133, column: 61, scope: !6007)
!6021 = !DILocation(line: 134, column: 22, scope: !6007)
!6022 = !DILocation(line: 134, column: 31, scope: !6007)
!6023 = !DILocation(line: 134, column: 55, scope: !6007)
!6024 = !DILocation(line: 135, column: 22, scope: !6007)
!6025 = !DILocation(line: 135, column: 29, scope: !6007)
!6026 = !DILocation(line: 132, column: 5, scope: !6007)
!6027 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !672, file: !672, line: 416, type: !6028, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6030)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!5437, !784, !815}
!6030 = !{!6031, !6032, !6033, !6034, !6035}
!6031 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6027, file: !672, line: 416, type: !784)
!6032 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6027, file: !672, line: 416, type: !815)
!6033 = !DILocalVariable(name: "actual_baudrate", scope: !6027, file: !672, line: 418, type: !61)
!6034 = !DILocalVariable(name: "irq_status", scope: !6027, file: !672, line: 418, type: !61)
!6035 = !DILocalVariable(name: "uartx", scope: !6027, file: !672, line: 419, type: !5170)
!6036 = !DILocation(line: 0, scope: !6027)
!6037 = !DILocation(line: 421, column: 11, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6027, file: !672, line: 421, column: 9)
!6039 = !DILocation(line: 421, column: 42, scope: !6038)
!6040 = !DILocation(line: 422, column: 11, scope: !6038)
!6041 = !DILocation(line: 421, column: 9, scope: !6027)
!6042 = !DILocation(line: 426, column: 9, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6027, file: !672, line: 426, column: 9)
!6044 = !DILocation(line: 426, column: 36, scope: !6043)
!6045 = !DILocation(line: 426, column: 9, scope: !6027)
!6046 = !DILocation(line: 430, column: 18, scope: !6027)
!6047 = !DILocation(line: 432, column: 30, scope: !6027)
!6048 = !DILocation(line: 432, column: 39, scope: !6027)
!6049 = !DILocation(line: 434, column: 5, scope: !6027)
!6050 = !DILocation(line: 436, column: 13, scope: !6027)
!6051 = !DILocation(line: 437, column: 23, scope: !6027)
!6052 = !DILocation(line: 439, column: 5, scope: !6027)
!6053 = !DILocation(line: 441, column: 5, scope: !6027)
!6054 = !DILocation(line: 442, column: 1, scope: !6027)
!6055 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !672, file: !672, line: 125, type: !6056, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6058)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!91, !815}
!6058 = !{!6059}
!6059 = !DILocalVariable(name: "baudrate", arg: 1, scope: !6055, file: !672, line: 125, type: !815)
!6060 = !DILocation(line: 0, scope: !6055)
!6061 = !DILocation(line: 127, column: 22, scope: !6055)
!6062 = !DILocation(line: 127, column: 5, scope: !6055)
!6063 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !672, file: !672, line: 444, type: !6064, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6066)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!5437, !784, !6010}
!6066 = !{!6067, !6068, !6069, !6070}
!6067 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6063, file: !672, line: 444, type: !784)
!6068 = !DILocalVariable(name: "config", arg: 2, scope: !6063, file: !672, line: 445, type: !6010)
!6069 = !DILocalVariable(name: "irq_status", scope: !6063, file: !672, line: 447, type: !61)
!6070 = !DILocalVariable(name: "uartx", scope: !6063, file: !672, line: 448, type: !5170)
!6071 = !DILocation(line: 0, scope: !6063)
!6072 = !DILocation(line: 450, column: 11, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6063, file: !672, line: 450, column: 9)
!6074 = !DILocation(line: 450, column: 42, scope: !6073)
!6075 = !DILocation(line: 451, column: 11, scope: !6073)
!6076 = !DILocation(line: 450, column: 9, scope: !6063)
!6077 = !DILocation(line: 455, column: 9, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6063, file: !672, line: 455, column: 9)
!6079 = !DILocation(line: 455, column: 36, scope: !6078)
!6080 = !DILocation(line: 455, column: 9, scope: !6063)
!6081 = !DILocation(line: 459, column: 18, scope: !6063)
!6082 = !DILocation(line: 461, column: 49, scope: !6063)
!6083 = !DILocation(line: 461, column: 30, scope: !6063)
!6084 = !DILocation(line: 461, column: 39, scope: !6063)
!6085 = !DILocation(line: 462, column: 52, scope: !6063)
!6086 = !DILocation(line: 462, column: 30, scope: !6063)
!6087 = !DILocation(line: 462, column: 42, scope: !6063)
!6088 = !DILocation(line: 463, column: 49, scope: !6063)
!6089 = !DILocation(line: 463, column: 30, scope: !6063)
!6090 = !DILocation(line: 463, column: 39, scope: !6063)
!6091 = !DILocation(line: 464, column: 47, scope: !6063)
!6092 = !DILocation(line: 464, column: 30, scope: !6063)
!6093 = !DILocation(line: 464, column: 37, scope: !6063)
!6094 = !DILocation(line: 466, column: 5, scope: !6063)
!6095 = !DILocation(line: 468, column: 13, scope: !6063)
!6096 = !DILocation(line: 470, column: 46, scope: !6063)
!6097 = !DILocation(line: 470, column: 5, scope: !6063)
!6098 = !DILocation(line: 471, column: 36, scope: !6063)
!6099 = !DILocation(line: 471, column: 57, scope: !6063)
!6100 = !DILocation(line: 471, column: 75, scope: !6063)
!6101 = !DILocation(line: 471, column: 5, scope: !6063)
!6102 = !DILocation(line: 473, column: 5, scope: !6063)
!6103 = !DILocation(line: 474, column: 1, scope: !6063)
!6104 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !672, file: !672, line: 642, type: !6105, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{null, !784, !167}
!6107 = !{!6108, !6109, !6110}
!6108 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6104, file: !672, line: 642, type: !784)
!6109 = !DILocalVariable(name: "byte", arg: 2, scope: !6104, file: !672, line: 642, type: !167)
!6110 = !DILocalVariable(name: "uartx", scope: !6104, file: !672, line: 644, type: !5170)
!6111 = !DILocation(line: 0, scope: !6104)
!6112 = !DILocation(line: 646, column: 10, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6104, file: !672, line: 646, column: 9)
!6114 = !DILocation(line: 646, column: 9, scope: !6104)
!6115 = !DILocation(line: 650, column: 9, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6104, file: !672, line: 650, column: 9)
!6117 = !DILocation(line: 650, column: 36, scope: !6116)
!6118 = !DILocation(line: 650, column: 9, scope: !6104)
!6119 = !DILocation(line: 654, column: 13, scope: !6104)
!6120 = !DILocation(line: 655, column: 5, scope: !6104)
!6121 = !DILocation(line: 656, column: 1, scope: !6104)
!6122 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !672, file: !672, line: 658, type: !6123, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6127)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{!61, !784, !6125, !61}
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!6127 = !{!6128, !6129, !6130, !6131}
!6128 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6122, file: !672, line: 658, type: !784)
!6129 = !DILocalVariable(name: "data", arg: 2, scope: !6122, file: !672, line: 658, type: !6125)
!6130 = !DILocalVariable(name: "size", arg: 3, scope: !6122, file: !672, line: 658, type: !61)
!6131 = !DILocalVariable(name: "i", scope: !6122, file: !672, line: 660, type: !61)
!6132 = !DILocation(line: 0, scope: !6122)
!6133 = !DILocation(line: 662, column: 11, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6122, file: !672, line: 662, column: 9)
!6135 = !DILocation(line: 662, column: 42, scope: !6134)
!6136 = !DILocation(line: 666, column: 9, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6122, file: !672, line: 666, column: 9)
!6138 = !DILocation(line: 666, column: 36, scope: !6137)
!6139 = !DILocation(line: 666, column: 9, scope: !6122)
!6140 = !DILocation(line: 671, column: 38, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !672, line: 670, column: 32)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !672, line: 670, column: 5)
!6143 = distinct !DILexicalBlock(scope: !6122, file: !672, line: 670, column: 5)
!6144 = !DILocation(line: 671, column: 9, scope: !6141)
!6145 = !DILocation(line: 672, column: 13, scope: !6141)
!6146 = !DILocation(line: 670, column: 28, scope: !6142)
!6147 = !DILocation(line: 670, column: 19, scope: !6142)
!6148 = !DILocation(line: 670, column: 5, scope: !6143)
!6149 = distinct !{!6149, !6148, !6150}
!6150 = !DILocation(line: 673, column: 5, scope: !6143)
!6151 = !DILocation(line: 676, column: 1, scope: !6122)
!6152 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !672, file: !672, line: 678, type: !6123, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6153)
!6153 = !{!6154, !6155, !6156, !6157, !6158, !6159, !6160, !6161, !6162}
!6154 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6152, file: !672, line: 678, type: !784)
!6155 = !DILocalVariable(name: "data", arg: 2, scope: !6152, file: !672, line: 678, type: !6125)
!6156 = !DILocalVariable(name: "size", arg: 3, scope: !6152, file: !672, line: 678, type: !61)
!6157 = !DILocalVariable(name: "channel", scope: !6152, file: !672, line: 680, type: !5165)
!6158 = !DILocalVariable(name: "i", scope: !6152, file: !672, line: 681, type: !61)
!6159 = !DILocalVariable(name: "real_count", scope: !6152, file: !672, line: 681, type: !61)
!6160 = !DILocalVariable(name: "avail_space", scope: !6152, file: !672, line: 681, type: !61)
!6161 = !DILocalVariable(name: "status", scope: !6152, file: !672, line: 682, type: !5226)
!6162 = !DILocalVariable(name: "irq_status", scope: !6152, file: !672, line: 684, type: !61)
!6163 = !DILocation(line: 0, scope: !6152)
!6164 = !DILocation(line: 681, column: 5, scope: !6152)
!6165 = !DILocation(line: 687, column: 11, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 687, column: 9)
!6167 = !DILocation(line: 687, column: 42, scope: !6166)
!6168 = !DILocation(line: 691, column: 9, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 691, column: 9)
!6170 = !DILocation(line: 691, column: 36, scope: !6169)
!6171 = !DILocation(line: 691, column: 9, scope: !6152)
!6172 = !DILocation(line: 696, column: 18, scope: !6152)
!6173 = !DILocation(line: 697, column: 9, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 697, column: 9)
!6175 = !DILocation(line: 697, column: 44, scope: !6174)
!6176 = !DILocation(line: 697, column: 9, scope: !6152)
!6177 = !DILocation(line: 698, column: 38, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6174, file: !672, line: 697, column: 54)
!6179 = !DILocation(line: 698, column: 9, scope: !6178)
!6180 = !DILocation(line: 699, column: 44, scope: !6178)
!6181 = !DILocation(line: 700, column: 5, scope: !6178)
!6182 = !DILocation(line: 701, column: 5, scope: !6152)
!6183 = !DILocation(line: 704, column: 15, scope: !6152)
!6184 = !DILocation(line: 706, column: 14, scope: !6152)
!6185 = !DILocation(line: 707, column: 16, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 707, column: 9)
!6187 = !DILocation(line: 707, column: 9, scope: !6152)
!6188 = !DILocation(line: 708, column: 9, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6186, file: !672, line: 707, column: 28)
!6190 = !DILocation(line: 712, column: 9, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 712, column: 9)
!6192 = !DILocation(line: 712, column: 21, scope: !6191)
!6193 = !DILocation(line: 717, column: 19, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !672, line: 717, column: 5)
!6195 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 717, column: 5)
!6196 = !DILocation(line: 717, column: 5, scope: !6195)
!6197 = distinct !{!6197, !6196, !6198}
!6198 = !DILocation(line: 723, column: 5, scope: !6195)
!6199 = !DILocation(line: 718, column: 42, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6194, file: !672, line: 717, column: 38)
!6201 = !DILocation(line: 718, column: 18, scope: !6200)
!6202 = !DILocation(line: 719, column: 20, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6200, file: !672, line: 719, column: 13)
!6204 = !DILocation(line: 717, column: 34, scope: !6194)
!6205 = !DILocation(line: 719, column: 13, scope: !6200)
!6206 = !DILocation(line: 720, column: 13, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !672, line: 719, column: 32)
!6208 = !DILocation(line: 728, column: 23, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6152, file: !672, line: 728, column: 9)
!6210 = !DILocation(line: 728, column: 20, scope: !6209)
!6211 = !DILocation(line: 728, column: 9, scope: !6152)
!6212 = !DILocation(line: 729, column: 18, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !672, line: 728, column: 36)
!6214 = !DILocation(line: 730, column: 20, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6213, file: !672, line: 730, column: 13)
!6216 = !DILocation(line: 730, column: 13, scope: !6213)
!6217 = !DILocation(line: 731, column: 13, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !672, line: 730, column: 32)
!6219 = !DILocation(line: 737, column: 1, scope: !6152)
!6220 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !672, file: !672, line: 739, type: !6221, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!167, !784}
!6223 = !{!6224, !6225, !6226}
!6224 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6220, file: !672, line: 739, type: !784)
!6225 = !DILocalVariable(name: "data", scope: !6220, file: !672, line: 741, type: !167)
!6226 = !DILocalVariable(name: "uartx", scope: !6220, file: !672, line: 742, type: !5170)
!6227 = !DILocation(line: 0, scope: !6220)
!6228 = !DILocation(line: 744, column: 10, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6220, file: !672, line: 744, column: 9)
!6230 = !DILocation(line: 744, column: 9, scope: !6220)
!6231 = !DILocation(line: 748, column: 9, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6220, file: !672, line: 748, column: 9)
!6233 = !DILocation(line: 748, column: 36, scope: !6232)
!6234 = !DILocation(line: 748, column: 9, scope: !6220)
!6235 = !DILocation(line: 752, column: 13, scope: !6220)
!6236 = !DILocation(line: 754, column: 12, scope: !6220)
!6237 = !DILocation(line: 756, column: 5, scope: !6220)
!6238 = !DILocation(line: 757, column: 1, scope: !6220)
!6239 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !672, file: !672, line: 759, type: !6240, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6242)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{!61, !784}
!6242 = !{!6243, !6244, !6245}
!6243 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6239, file: !672, line: 759, type: !784)
!6244 = !DILocalVariable(name: "data", scope: !6239, file: !672, line: 761, type: !61)
!6245 = !DILocalVariable(name: "uartx", scope: !6239, file: !672, line: 762, type: !5170)
!6246 = !DILocation(line: 0, scope: !6239)
!6247 = !DILocation(line: 764, column: 10, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6239, file: !672, line: 764, column: 9)
!6249 = !DILocation(line: 764, column: 9, scope: !6239)
!6250 = !DILocation(line: 768, column: 9, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6239, file: !672, line: 768, column: 9)
!6252 = !DILocation(line: 768, column: 36, scope: !6251)
!6253 = !DILocation(line: 768, column: 9, scope: !6239)
!6254 = !DILocation(line: 772, column: 13, scope: !6239)
!6255 = !DILocation(line: 774, column: 12, scope: !6239)
!6256 = !DILocation(line: 776, column: 5, scope: !6239)
!6257 = !DILocation(line: 777, column: 1, scope: !6239)
!6258 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !672, file: !672, line: 779, type: !6259, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6261)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{!61, !784, !849, !61}
!6261 = !{!6262, !6263, !6264, !6265, !6266}
!6262 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6258, file: !672, line: 779, type: !784)
!6263 = !DILocalVariable(name: "buffer", arg: 2, scope: !6258, file: !672, line: 779, type: !849)
!6264 = !DILocalVariable(name: "size", arg: 3, scope: !6258, file: !672, line: 779, type: !61)
!6265 = !DILocalVariable(name: "i", scope: !6258, file: !672, line: 781, type: !61)
!6266 = !DILocalVariable(name: "pbuf", scope: !6258, file: !672, line: 782, type: !849)
!6267 = !DILocation(line: 0, scope: !6258)
!6268 = !DILocation(line: 784, column: 11, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6258, file: !672, line: 784, column: 9)
!6270 = !DILocation(line: 784, column: 42, scope: !6269)
!6271 = !DILocation(line: 789, column: 9, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6258, file: !672, line: 789, column: 9)
!6273 = !DILocation(line: 789, column: 36, scope: !6272)
!6274 = !DILocation(line: 789, column: 9, scope: !6258)
!6275 = !DILocation(line: 794, column: 19, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !672, line: 793, column: 32)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !672, line: 793, column: 5)
!6278 = distinct !DILexicalBlock(scope: !6258, file: !672, line: 793, column: 5)
!6279 = !DILocation(line: 794, column: 9, scope: !6276)
!6280 = !DILocation(line: 794, column: 17, scope: !6276)
!6281 = !DILocation(line: 793, column: 28, scope: !6277)
!6282 = !DILocation(line: 793, column: 19, scope: !6277)
!6283 = !DILocation(line: 793, column: 5, scope: !6278)
!6284 = distinct !{!6284, !6283, !6285}
!6285 = !DILocation(line: 795, column: 5, scope: !6278)
!6286 = !DILocation(line: 798, column: 1, scope: !6258)
!6287 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !672, file: !672, line: 800, type: !6259, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6288)
!6288 = !{!6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296}
!6289 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6287, file: !672, line: 800, type: !784)
!6290 = !DILocalVariable(name: "buffer", arg: 2, scope: !6287, file: !672, line: 800, type: !849)
!6291 = !DILocalVariable(name: "size", arg: 3, scope: !6287, file: !672, line: 800, type: !61)
!6292 = !DILocalVariable(name: "channel", scope: !6287, file: !672, line: 802, type: !5165)
!6293 = !DILocalVariable(name: "receive_count", scope: !6287, file: !672, line: 803, type: !61)
!6294 = !DILocalVariable(name: "avail_count", scope: !6287, file: !672, line: 803, type: !61)
!6295 = !DILocalVariable(name: "index", scope: !6287, file: !672, line: 804, type: !61)
!6296 = !DILocalVariable(name: "status", scope: !6287, file: !672, line: 805, type: !5226)
!6297 = !DILocation(line: 0, scope: !6287)
!6298 = !DILocation(line: 803, column: 5, scope: !6287)
!6299 = !DILocation(line: 807, column: 11, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6287, file: !672, line: 807, column: 9)
!6301 = !DILocation(line: 807, column: 42, scope: !6300)
!6302 = !DILocation(line: 813, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6287, file: !672, line: 813, column: 9)
!6304 = !DILocation(line: 813, column: 36, scope: !6303)
!6305 = !DILocation(line: 813, column: 9, scope: !6287)
!6306 = !DILocation(line: 817, column: 15, scope: !6287)
!6307 = !DILocation(line: 819, column: 14, scope: !6287)
!6308 = !DILocation(line: 820, column: 16, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6287, file: !672, line: 820, column: 9)
!6310 = !DILocation(line: 820, column: 9, scope: !6287)
!6311 = !DILocation(line: 821, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6309, file: !672, line: 820, column: 28)
!6313 = !DILocation(line: 825, column: 9, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6287, file: !672, line: 825, column: 9)
!6315 = !DILocation(line: 825, column: 21, scope: !6314)
!6316 = !DILocation(line: 830, column: 27, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !672, line: 830, column: 5)
!6318 = distinct !DILexicalBlock(scope: !6287, file: !672, line: 830, column: 5)
!6319 = !DILocation(line: 830, column: 5, scope: !6318)
!6320 = distinct !{!6320, !6319, !6321}
!6321 = !DILocation(line: 836, column: 5, scope: !6318)
!6322 = !DILocation(line: 831, column: 42, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6317, file: !672, line: 830, column: 53)
!6324 = !DILocation(line: 831, column: 18, scope: !6323)
!6325 = !DILocation(line: 832, column: 20, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6323, file: !672, line: 832, column: 13)
!6327 = !DILocation(line: 830, column: 49, scope: !6317)
!6328 = !DILocation(line: 832, column: 13, scope: !6323)
!6329 = !DILocation(line: 833, column: 13, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !672, line: 832, column: 32)
!6331 = !DILocation(line: 841, column: 26, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6287, file: !672, line: 841, column: 9)
!6333 = !DILocation(line: 841, column: 23, scope: !6332)
!6334 = !DILocation(line: 841, column: 9, scope: !6287)
!6335 = !DILocation(line: 842, column: 18, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6332, file: !672, line: 841, column: 39)
!6337 = !DILocation(line: 843, column: 20, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6336, file: !672, line: 843, column: 13)
!6339 = !DILocation(line: 843, column: 13, scope: !6336)
!6340 = !DILocation(line: 844, column: 13, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6338, file: !672, line: 843, column: 32)
!6342 = !DILocation(line: 850, column: 1, scope: !6287)
!6343 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !672, file: !672, line: 947, type: !6240, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6344)
!6344 = !{!6345, !6346, !6347, !6348}
!6345 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6343, file: !672, line: 947, type: !784)
!6346 = !DILocalVariable(name: "channel", scope: !6343, file: !672, line: 949, type: !5165)
!6347 = !DILocalVariable(name: "roomleft", scope: !6343, file: !672, line: 950, type: !61)
!6348 = !DILocalVariable(name: "status", scope: !6343, file: !672, line: 951, type: !5226)
!6349 = !DILocation(line: 0, scope: !6343)
!6350 = !DILocation(line: 950, column: 5, scope: !6343)
!6351 = !DILocation(line: 953, column: 10, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6343, file: !672, line: 953, column: 9)
!6353 = !DILocation(line: 953, column: 9, scope: !6343)
!6354 = !DILocation(line: 957, column: 9, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6343, file: !672, line: 957, column: 9)
!6356 = !DILocation(line: 957, column: 36, scope: !6355)
!6357 = !DILocation(line: 957, column: 9, scope: !6343)
!6358 = !DILocation(line: 961, column: 15, scope: !6343)
!6359 = !DILocation(line: 962, column: 14, scope: !6343)
!6360 = !DILocation(line: 963, column: 16, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6343, file: !672, line: 963, column: 9)
!6362 = !DILocation(line: 963, column: 9, scope: !6343)
!6363 = !DILocation(line: 964, column: 9, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6361, file: !672, line: 963, column: 28)
!6365 = !DILocation(line: 968, column: 12, scope: !6343)
!6366 = !DILocation(line: 968, column: 5, scope: !6343)
!6367 = !DILocation(line: 969, column: 1, scope: !6343)
!6368 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !672, file: !672, line: 971, type: !6240, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6369)
!6369 = !{!6370, !6371, !6372, !6373}
!6370 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6368, file: !672, line: 971, type: !784)
!6371 = !DILocalVariable(name: "channel", scope: !6368, file: !672, line: 973, type: !5165)
!6372 = !DILocalVariable(name: "avail", scope: !6368, file: !672, line: 974, type: !61)
!6373 = !DILocalVariable(name: "status", scope: !6368, file: !672, line: 975, type: !5226)
!6374 = !DILocation(line: 0, scope: !6368)
!6375 = !DILocation(line: 974, column: 5, scope: !6368)
!6376 = !DILocation(line: 977, column: 10, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6368, file: !672, line: 977, column: 9)
!6378 = !DILocation(line: 977, column: 9, scope: !6368)
!6379 = !DILocation(line: 981, column: 9, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6368, file: !672, line: 981, column: 9)
!6381 = !DILocation(line: 981, column: 36, scope: !6380)
!6382 = !DILocation(line: 981, column: 9, scope: !6368)
!6383 = !DILocation(line: 985, column: 15, scope: !6368)
!6384 = !DILocation(line: 986, column: 14, scope: !6368)
!6385 = !DILocation(line: 987, column: 16, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6368, file: !672, line: 987, column: 9)
!6387 = !DILocation(line: 987, column: 9, scope: !6368)
!6388 = !DILocation(line: 988, column: 9, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6386, file: !672, line: 987, column: 28)
!6390 = !DILocation(line: 992, column: 12, scope: !6368)
!6391 = !DILocation(line: 992, column: 5, scope: !6368)
!6392 = !DILocation(line: 993, column: 1, scope: !6368)
!6393 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !672, file: !672, line: 1047, type: !5435, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !6394)
!6394 = !{!6395, !6396}
!6395 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6393, file: !672, line: 1047, type: !784)
!6396 = !DILocalVariable(name: "uartx", scope: !6393, file: !672, line: 1049, type: !5170)
!6397 = !DILocation(line: 0, scope: !6393)
!6398 = !DILocation(line: 1051, column: 10, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6393, file: !672, line: 1051, column: 9)
!6400 = !DILocation(line: 1051, column: 9, scope: !6393)
!6401 = !DILocation(line: 1055, column: 9, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6393, file: !672, line: 1055, column: 9)
!6403 = !DILocation(line: 1055, column: 36, scope: !6402)
!6404 = !DILocation(line: 1055, column: 9, scope: !6393)
!6405 = !DILocation(line: 1059, column: 13, scope: !6393)
!6406 = !DILocation(line: 1061, column: 5, scope: !6393)
!6407 = !DILocation(line: 1064, column: 5, scope: !6393)
!6408 = !DILocation(line: 1064, column: 42, scope: !6393)
!6409 = !DILocation(line: 1067, column: 5, scope: !6393)
!6410 = !DILocation(line: 1068, column: 1, scope: !6393)
!6411 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !3183, file: !3183, line: 52, type: !6412, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6469)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{null, !6414, !61}
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 32)
!6415 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !6416)
!6416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !6417)
!6417 = !{!6418, !6424, !6429, !6435, !6436, !6441, !6446, !6447, !6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !6416, file: !56, line: 547, baseType: !6419, size: 32)
!6419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6416, file: !56, line: 543, size: 32, elements: !6420)
!6420 = !{!6421, !6422, !6423}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !6419, file: !56, line: 544, baseType: !324, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !6419, file: !56, line: 545, baseType: !60, size: 32)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !6419, file: !56, line: 546, baseType: !60, size: 32)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !6416, file: !56, line: 551, baseType: !6425, size: 32, offset: 32)
!6425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6416, file: !56, line: 548, size: 32, elements: !6426)
!6426 = !{!6427, !6428}
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !6425, file: !56, line: 549, baseType: !60, size: 32)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !6425, file: !56, line: 550, baseType: !60, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !6416, file: !56, line: 556, baseType: !6430, size: 32, offset: 64)
!6430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6416, file: !56, line: 552, size: 32, elements: !6431)
!6431 = !{!6432, !6433, !6434}
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !6430, file: !56, line: 553, baseType: !324, size: 32)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !6430, file: !56, line: 554, baseType: !60, size: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !6430, file: !56, line: 555, baseType: !60, size: 32)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !6416, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !6416, file: !56, line: 561, baseType: !6437, size: 32, offset: 128)
!6437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6416, file: !56, line: 558, size: 32, elements: !6438)
!6438 = !{!6439, !6440}
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !6437, file: !56, line: 559, baseType: !60, size: 32)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !6437, file: !56, line: 560, baseType: !60, size: 32)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !6416, file: !56, line: 565, baseType: !6442, size: 32, offset: 160)
!6442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6416, file: !56, line: 562, size: 32, elements: !6443)
!6443 = !{!6444, !6445}
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !6442, file: !56, line: 563, baseType: !324, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !6442, file: !56, line: 564, baseType: !60, size: 32)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !6416, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !6416, file: !56, line: 570, baseType: !6448, size: 32, offset: 224)
!6448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6416, file: !56, line: 567, size: 32, elements: !6449)
!6449 = !{!6450, !6451}
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !6448, file: !56, line: 568, baseType: !60, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !6448, file: !56, line: 569, baseType: !60, size: 32)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !6416, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !6416, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !6416, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !6416, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !6416, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !6416, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !6416, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !6416, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !6416, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !6416, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !6416, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !6416, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !6416, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !6416, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !6416, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !6416, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !6416, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!6469 = !{!6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6480, !6483}
!6470 = !DILocalVariable(name: "uartx", arg: 1, scope: !6411, file: !3183, line: 52, type: !6414)
!6471 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !6411, file: !3183, line: 52, type: !61)
!6472 = !DILocalVariable(name: "uart_clock", scope: !6411, file: !3183, line: 54, type: !61)
!6473 = !DILocalVariable(name: "integer", scope: !6411, file: !3183, line: 54, type: !61)
!6474 = !DILocalVariable(name: "remainder", scope: !6411, file: !3183, line: 54, type: !61)
!6475 = !DILocalVariable(name: "fraction", scope: !6411, file: !3183, line: 54, type: !61)
!6476 = !DILocalVariable(name: "dll_dlm", scope: !6411, file: !3183, line: 55, type: !61)
!6477 = !DILocalVariable(name: "sample_count", scope: !6411, file: !3183, line: 55, type: !61)
!6478 = !DILocalVariable(name: "sample_point", scope: !6411, file: !3183, line: 55, type: !61)
!6479 = !DILocalVariable(name: "temp_lcr", scope: !6411, file: !3183, line: 55, type: !61)
!6480 = !DILocalVariable(name: "fraction_L_mapping", scope: !6411, file: !3183, line: 56, type: !6481)
!6481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !6482)
!6482 = !{!2656}
!6483 = !DILocalVariable(name: "fraction_M_mapping", scope: !6411, file: !3183, line: 57, type: !6481)
!6484 = !DILocation(line: 0, scope: !6411)
!6485 = !DILocation(line: 56, column: 14, scope: !6411)
!6486 = !DILocation(line: 57, column: 5, scope: !6411)
!6487 = !DILocation(line: 57, column: 14, scope: !6411)
!6488 = !DILocation(line: 59, column: 12, scope: !6411)
!6489 = !DILocation(line: 59, column: 23, scope: !6411)
!6490 = !DILocation(line: 60, column: 12, scope: !6411)
!6491 = !DILocation(line: 60, column: 22, scope: !6411)
!6492 = !DILocation(line: 61, column: 12, scope: !6411)
!6493 = !DILocation(line: 61, column: 22, scope: !6411)
!6494 = !DILocation(line: 63, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6411, file: !3183, line: 63, column: 9)
!6496 = !DILocation(line: 63, column: 9, scope: !6411)
!6497 = !DILocation(line: 64, column: 22, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6495, file: !3183, line: 63, column: 37)
!6499 = !DILocation(line: 64, column: 45, scope: !6498)
!6500 = !DILocation(line: 65, column: 5, scope: !6498)
!6501 = !DILocation(line: 0, scope: !6495)
!6502 = !DILocation(line: 69, column: 45, scope: !6411)
!6503 = !DILocation(line: 69, column: 26, scope: !6411)
!6504 = !DILocation(line: 70, column: 30, scope: !6411)
!6505 = !DILocation(line: 70, column: 36, scope: !6411)
!6506 = !DILocation(line: 70, column: 63, scope: !6411)
!6507 = !DILocation(line: 71, column: 20, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6411, file: !3183, line: 71, column: 9)
!6509 = !DILocation(line: 71, column: 26, scope: !6508)
!6510 = !DILocation(line: 77, column: 5, scope: !6411)
!6511 = !DILocation(line: 77, column: 25, scope: !6411)
!6512 = !DILocation(line: 78, column: 16, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6411, file: !3183, line: 77, column: 32)
!6514 = distinct !{!6514, !6510, !6515}
!6515 = !DILocation(line: 80, column: 5, scope: !6411)
!6516 = !DILocation(line: 82, column: 35, scope: !6411)
!6517 = !DILocation(line: 82, column: 66, scope: !6411)
!6518 = !DILocation(line: 84, column: 18, scope: !6411)
!6519 = !DILocation(line: 85, column: 34, scope: !6411)
!6520 = !DILocation(line: 85, column: 39, scope: !6411)
!6521 = !DILocation(line: 87, column: 12, scope: !6411)
!6522 = !DILocation(line: 87, column: 22, scope: !6411)
!6523 = !DILocation(line: 89, column: 23, scope: !6411)
!6524 = !DILocation(line: 90, column: 27, scope: !6411)
!6525 = !DILocation(line: 90, column: 16, scope: !6411)
!6526 = !DILocation(line: 91, column: 38, scope: !6411)
!6527 = !DILocation(line: 91, column: 24, scope: !6411)
!6528 = !DILocation(line: 91, column: 28, scope: !6411)
!6529 = !DILocation(line: 92, column: 35, scope: !6411)
!6530 = !DILocation(line: 92, column: 41, scope: !6411)
!6531 = !DILocation(line: 92, column: 20, scope: !6411)
!6532 = !DILocation(line: 92, column: 24, scope: !6411)
!6533 = !DILocation(line: 93, column: 16, scope: !6411)
!6534 = !DILocation(line: 95, column: 12, scope: !6411)
!6535 = !DILocation(line: 95, column: 25, scope: !6411)
!6536 = !DILocation(line: 96, column: 12, scope: !6411)
!6537 = !DILocation(line: 96, column: 25, scope: !6411)
!6538 = !DILocation(line: 98, column: 24, scope: !6411)
!6539 = !DILocation(line: 98, column: 22, scope: !6411)
!6540 = !DILocation(line: 99, column: 24, scope: !6411)
!6541 = !DILocation(line: 99, column: 22, scope: !6411)
!6542 = !DILocation(line: 101, column: 25, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6411, file: !3183, line: 101, column: 9)
!6544 = !DILocation(line: 101, column: 9, scope: !6411)
!6545 = !DILocation(line: 102, column: 16, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6543, file: !3183, line: 101, column: 37)
!6547 = !DILocation(line: 102, column: 22, scope: !6546)
!6548 = !DILocation(line: 103, column: 5, scope: !6546)
!6549 = !DILocation(line: 104, column: 1, scope: !6411)
!6550 = distinct !DISubprogram(name: "uart_set_format", scope: !3183, file: !3183, line: 106, type: !6551, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6553)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{null, !6414, !817, !819, !821}
!6553 = !{!6554, !6555, !6556, !6557, !6558}
!6554 = !DILocalVariable(name: "uartx", arg: 1, scope: !6550, file: !3183, line: 106, type: !6414)
!6555 = !DILocalVariable(name: "word_length", arg: 2, scope: !6550, file: !3183, line: 107, type: !817)
!6556 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !6550, file: !3183, line: 108, type: !819)
!6557 = !DILocalVariable(name: "parity", arg: 4, scope: !6550, file: !3183, line: 109, type: !821)
!6558 = !DILocalVariable(name: "byte", scope: !6550, file: !3183, line: 111, type: !1018)
!6559 = !DILocation(line: 0, scope: !6550)
!6560 = !DILocation(line: 114, column: 19, scope: !6550)
!6561 = !DILocation(line: 115, column: 16, scope: !6550)
!6562 = !DILocation(line: 118, column: 10, scope: !6550)
!6563 = !DILocation(line: 119, column: 5, scope: !6550)
!6564 = !DILocation(line: 124, column: 18, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6550, file: !3183, line: 119, column: 26)
!6566 = !DILocation(line: 125, column: 13, scope: !6565)
!6567 = !DILocation(line: 127, column: 18, scope: !6565)
!6568 = !DILocation(line: 128, column: 13, scope: !6565)
!6569 = !DILocation(line: 130, column: 18, scope: !6565)
!6570 = !DILocation(line: 131, column: 13, scope: !6565)
!6571 = !DILocation(line: 137, column: 10, scope: !6550)
!6572 = !DILocation(line: 138, column: 5, scope: !6550)
!6573 = !DILocation(line: 151, column: 5, scope: !6550)
!6574 = !DILocation(line: 166, column: 18, scope: !6550)
!6575 = !DILocation(line: 166, column: 16, scope: !6550)
!6576 = !DILocation(line: 167, column: 1, scope: !6550)
!6577 = distinct !DISubprogram(name: "uart_put_char_block", scope: !3183, file: !3183, line: 169, type: !6578, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6580)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{null, !6414, !159}
!6580 = !{!6581, !6582, !6583}
!6581 = !DILocalVariable(name: "uartx", arg: 1, scope: !6577, file: !3183, line: 169, type: !6414)
!6582 = !DILocalVariable(name: "byte", arg: 2, scope: !6577, file: !3183, line: 169, type: !159)
!6583 = !DILocalVariable(name: "LSR", scope: !6577, file: !3183, line: 171, type: !1018)
!6584 = !DILocation(line: 0, scope: !6577)
!6585 = !DILocation(line: 173, column: 5, scope: !6577)
!6586 = !DILocation(line: 174, column: 31, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6577, file: !3183, line: 173, column: 15)
!6588 = !DILocation(line: 175, column: 17, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6587, file: !3183, line: 175, column: 13)
!6590 = !DILocation(line: 175, column: 13, scope: !6587)
!6591 = distinct !{!6591, !6585, !6592}
!6592 = !DILocation(line: 179, column: 5, scope: !6577)
!6593 = !DILocation(line: 176, column: 38, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6589, file: !3183, line: 175, column: 39)
!6595 = !DILocation(line: 176, column: 32, scope: !6594)
!6596 = !DILocation(line: 176, column: 36, scope: !6594)
!6597 = !DILocation(line: 180, column: 1, scope: !6577)
!6598 = distinct !DISubprogram(name: "uart_get_char_block", scope: !3183, file: !3183, line: 182, type: !6599, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6601)
!6599 = !DISubroutineType(types: !6600)
!6600 = !{!159, !6414}
!6601 = !{!6602, !6603, !6604}
!6602 = !DILocalVariable(name: "uartx", arg: 1, scope: !6598, file: !3183, line: 182, type: !6414)
!6603 = !DILocalVariable(name: "LSR", scope: !6598, file: !3183, line: 184, type: !1018)
!6604 = !DILocalVariable(name: "byte", scope: !6598, file: !3183, line: 185, type: !159)
!6605 = !DILocation(line: 0, scope: !6598)
!6606 = !DILocation(line: 187, column: 5, scope: !6598)
!6607 = !DILocation(line: 188, column: 31, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6598, file: !3183, line: 187, column: 15)
!6609 = !DILocation(line: 189, column: 17, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6608, file: !3183, line: 189, column: 13)
!6611 = !DILocation(line: 189, column: 13, scope: !6608)
!6612 = distinct !{!6612, !6606, !6613}
!6613 = !DILocation(line: 193, column: 5, scope: !6598)
!6614 = !DILocation(line: 190, column: 48, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6610, file: !3183, line: 189, column: 37)
!6616 = !DILocation(line: 190, column: 20, scope: !6615)
!6617 = !DILocation(line: 195, column: 5, scope: !6598)
!6618 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !3183, file: !3183, line: 198, type: !6619, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6621)
!6619 = !DISubroutineType(types: !6620)
!6620 = !{!61, !6414}
!6621 = !{!6622, !6623, !6624}
!6622 = !DILocalVariable(name: "uartx", arg: 1, scope: !6618, file: !3183, line: 198, type: !6414)
!6623 = !DILocalVariable(name: "LSR", scope: !6618, file: !3183, line: 200, type: !1018)
!6624 = !DILocalVariable(name: "value", scope: !6618, file: !3183, line: 201, type: !61)
!6625 = !DILocation(line: 0, scope: !6618)
!6626 = !DILocation(line: 203, column: 27, scope: !6618)
!6627 = !DILocation(line: 204, column: 13, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6618, file: !3183, line: 204, column: 9)
!6629 = !DILocation(line: 204, column: 9, scope: !6618)
!6630 = !DILocation(line: 205, column: 36, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6628, file: !3183, line: 204, column: 33)
!6632 = !DILocation(line: 206, column: 5, scope: !6631)
!6633 = !DILocation(line: 0, scope: !6628)
!6634 = !DILocation(line: 210, column: 5, scope: !6618)
!6635 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !3183, file: !3183, line: 213, type: !6636, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6638)
!6636 = !DISubroutineType(types: !6637)
!6637 = !{null, !6414}
!6638 = !{!6639, !6640, !6641}
!6639 = !DILocalVariable(name: "uartx", arg: 1, scope: !6635, file: !3183, line: 213, type: !6414)
!6640 = !DILocalVariable(name: "EFR", scope: !6635, file: !3183, line: 215, type: !1018)
!6641 = !DILocalVariable(name: "LCR", scope: !6635, file: !3183, line: 215, type: !1018)
!6642 = !DILocation(line: 0, scope: !6635)
!6643 = !DILocation(line: 217, column: 18, scope: !6635)
!6644 = !DILocation(line: 219, column: 16, scope: !6635)
!6645 = !DILocation(line: 220, column: 30, scope: !6635)
!6646 = !DILocation(line: 222, column: 30, scope: !6635)
!6647 = !DILocation(line: 222, column: 28, scope: !6635)
!6648 = !DILocation(line: 223, column: 12, scope: !6635)
!6649 = !DILocation(line: 223, column: 22, scope: !6635)
!6650 = !DILocation(line: 225, column: 16, scope: !6635)
!6651 = !DILocation(line: 226, column: 21, scope: !6635)
!6652 = !DILocation(line: 226, column: 25, scope: !6635)
!6653 = !DILocation(line: 228, column: 18, scope: !6635)
!6654 = !DILocation(line: 228, column: 16, scope: !6635)
!6655 = !DILocation(line: 229, column: 1, scope: !6635)
!6656 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !3183, file: !3183, line: 231, type: !6657, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6659)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{null, !6414, !159, !159, !159}
!6659 = !{!6660, !6661, !6662, !6663, !6664, !6665}
!6660 = !DILocalVariable(name: "uartx", arg: 1, scope: !6656, file: !3183, line: 231, type: !6414)
!6661 = !DILocalVariable(name: "xon", arg: 2, scope: !6656, file: !3183, line: 232, type: !159)
!6662 = !DILocalVariable(name: "xoff", arg: 3, scope: !6656, file: !3183, line: 233, type: !159)
!6663 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6656, file: !3183, line: 234, type: !159)
!6664 = !DILocalVariable(name: "EFR", scope: !6656, file: !3183, line: 236, type: !1018)
!6665 = !DILocalVariable(name: "LCR", scope: !6656, file: !3183, line: 236, type: !1018)
!6666 = !DILocation(line: 0, scope: !6656)
!6667 = !DILocation(line: 238, column: 18, scope: !6656)
!6668 = !DILocation(line: 240, column: 16, scope: !6656)
!6669 = !DILocation(line: 241, column: 28, scope: !6656)
!6670 = !DILocation(line: 241, column: 21, scope: !6656)
!6671 = !DILocation(line: 241, column: 26, scope: !6656)
!6672 = !DILocation(line: 242, column: 20, scope: !6656)
!6673 = !DILocation(line: 242, column: 12, scope: !6656)
!6674 = !DILocation(line: 242, column: 18, scope: !6656)
!6675 = !DILocation(line: 243, column: 30, scope: !6656)
!6676 = !DILocation(line: 245, column: 30, scope: !6656)
!6677 = !DILocation(line: 245, column: 28, scope: !6656)
!6678 = !DILocation(line: 246, column: 25, scope: !6656)
!6679 = !DILocation(line: 246, column: 12, scope: !6656)
!6680 = !DILocation(line: 246, column: 23, scope: !6656)
!6681 = !DILocation(line: 247, column: 12, scope: !6656)
!6682 = !DILocation(line: 247, column: 22, scope: !6656)
!6683 = !DILocation(line: 249, column: 18, scope: !6656)
!6684 = !DILocation(line: 249, column: 16, scope: !6656)
!6685 = !DILocation(line: 250, column: 1, scope: !6656)
!6686 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !3183, file: !3183, line: 252, type: !6636, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6687)
!6687 = !{!6688, !6689}
!6688 = !DILocalVariable(name: "uartx", arg: 1, scope: !6686, file: !3183, line: 252, type: !6414)
!6689 = !DILocalVariable(name: "LCR", scope: !6686, file: !3183, line: 254, type: !1018)
!6690 = !DILocation(line: 0, scope: !6686)
!6691 = !DILocation(line: 256, column: 18, scope: !6686)
!6692 = !DILocation(line: 258, column: 16, scope: !6686)
!6693 = !DILocation(line: 259, column: 24, scope: !6686)
!6694 = !DILocation(line: 259, column: 28, scope: !6686)
!6695 = !DILocation(line: 261, column: 16, scope: !6686)
!6696 = !DILocation(line: 262, column: 18, scope: !6686)
!6697 = !DILocation(line: 262, column: 16, scope: !6686)
!6698 = !DILocation(line: 263, column: 1, scope: !6686)
!6699 = distinct !DISubprogram(name: "uart_set_fifo", scope: !3183, file: !3183, line: 265, type: !6636, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6700)
!6700 = !{!6701, !6702, !6703}
!6701 = !DILocalVariable(name: "uartx", arg: 1, scope: !6699, file: !3183, line: 265, type: !6414)
!6702 = !DILocalVariable(name: "EFR", scope: !6699, file: !3183, line: 267, type: !1018)
!6703 = !DILocalVariable(name: "LCR", scope: !6699, file: !3183, line: 267, type: !1018)
!6704 = !DILocation(line: 0, scope: !6699)
!6705 = !DILocation(line: 269, column: 18, scope: !6699)
!6706 = !DILocation(line: 271, column: 16, scope: !6699)
!6707 = !DILocation(line: 272, column: 30, scope: !6699)
!6708 = !DILocation(line: 274, column: 30, scope: !6699)
!6709 = !DILocation(line: 274, column: 28, scope: !6699)
!6710 = !DILocation(line: 276, column: 16, scope: !6699)
!6711 = !DILocation(line: 277, column: 28, scope: !6699)
!6712 = !DILocation(line: 283, column: 18, scope: !6699)
!6713 = !DILocation(line: 283, column: 16, scope: !6699)
!6714 = !DILocation(line: 284, column: 1, scope: !6699)
!6715 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !3183, file: !3183, line: 287, type: !6636, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6716)
!6716 = !{!6717}
!6717 = !DILocalVariable(name: "uartx", arg: 1, scope: !6715, file: !3183, line: 287, type: !6414)
!6718 = !DILocation(line: 0, scope: !6715)
!6719 = !DILocation(line: 289, column: 12, scope: !6715)
!6720 = !DILocation(line: 289, column: 21, scope: !6715)
!6721 = !DILocation(line: 290, column: 1, scope: !6715)
!6722 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !3183, file: !3183, line: 292, type: !6636, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6723)
!6723 = !{!6724, !6725, !6726}
!6724 = !DILocalVariable(name: "uartx", arg: 1, scope: !6722, file: !3183, line: 292, type: !6414)
!6725 = !DILocalVariable(name: "IER", scope: !6722, file: !3183, line: 294, type: !1018)
!6726 = !DILocalVariable(name: "LCR", scope: !6722, file: !3183, line: 294, type: !1018)
!6727 = !DILocation(line: 0, scope: !6722)
!6728 = !DILocation(line: 296, column: 18, scope: !6722)
!6729 = !DILocation(line: 298, column: 16, scope: !6722)
!6730 = !DILocation(line: 299, column: 26, scope: !6722)
!6731 = !DILocation(line: 301, column: 26, scope: !6722)
!6732 = !DILocation(line: 301, column: 24, scope: !6722)
!6733 = !DILocation(line: 303, column: 19, scope: !6722)
!6734 = !DILocation(line: 303, column: 16, scope: !6722)
!6735 = !DILocation(line: 304, column: 1, scope: !6722)
!6736 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !3183, file: !3183, line: 307, type: !6636, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6737)
!6737 = !{!6738, !6739, !6740}
!6738 = !DILocalVariable(name: "uartx", arg: 1, scope: !6736, file: !3183, line: 307, type: !6414)
!6739 = !DILocalVariable(name: "IER", scope: !6736, file: !3183, line: 309, type: !1018)
!6740 = !DILocalVariable(name: "LCR", scope: !6736, file: !3183, line: 309, type: !1018)
!6741 = !DILocation(line: 0, scope: !6736)
!6742 = !DILocation(line: 311, column: 18, scope: !6736)
!6743 = !DILocation(line: 313, column: 16, scope: !6736)
!6744 = !DILocation(line: 314, column: 26, scope: !6736)
!6745 = !DILocation(line: 316, column: 26, scope: !6736)
!6746 = !DILocation(line: 316, column: 24, scope: !6736)
!6747 = !DILocation(line: 318, column: 19, scope: !6736)
!6748 = !DILocation(line: 318, column: 16, scope: !6736)
!6749 = !DILocation(line: 319, column: 1, scope: !6736)
!6750 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !3183, file: !3183, line: 321, type: !6751, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6753)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{null, !6414, !1320}
!6753 = !{!6754, !6755, !6756}
!6754 = !DILocalVariable(name: "uartx", arg: 1, scope: !6750, file: !3183, line: 321, type: !6414)
!6755 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6750, file: !3183, line: 321, type: !1320)
!6756 = !DILocalVariable(name: "FCR", scope: !6750, file: !3183, line: 323, type: !1018)
!6757 = !DILocation(line: 0, scope: !6750)
!6758 = !DILocation(line: 327, column: 9, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6750, file: !3183, line: 327, column: 9)
!6760 = !DILocation(line: 333, column: 24, scope: !6750)
!6761 = !DILocation(line: 333, column: 28, scope: !6750)
!6762 = !DILocation(line: 334, column: 1, scope: !6750)
!6763 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !3183, file: !3183, line: 336, type: !6764, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6767)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{!6766, !6414}
!6766 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !779, line: 55, baseType: !874)
!6767 = !{!6768, !6769, !6770, !6771}
!6768 = !DILocalVariable(name: "uartx", arg: 1, scope: !6763, file: !3183, line: 336, type: !6414)
!6769 = !DILocalVariable(name: "IIR", scope: !6763, file: !3183, line: 338, type: !1018)
!6770 = !DILocalVariable(name: "LSR", scope: !6763, file: !3183, line: 338, type: !1018)
!6771 = !DILocalVariable(name: "type", scope: !6763, file: !3183, line: 339, type: !6766)
!6772 = !DILocation(line: 0, scope: !6763)
!6773 = !DILocation(line: 341, column: 30, scope: !6763)
!6774 = !DILocation(line: 342, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6763, file: !3183, line: 342, column: 9)
!6776 = !DILocation(line: 342, column: 9, scope: !6763)
!6777 = !DILocation(line: 346, column: 17, scope: !6763)
!6778 = !DILocation(line: 346, column: 5, scope: !6763)
!6779 = !DILocation(line: 350, column: 13, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6763, file: !3183, line: 346, column: 37)
!6781 = !DILocation(line: 353, column: 35, scope: !6780)
!6782 = !DILocation(line: 354, column: 21, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6780, file: !3183, line: 354, column: 17)
!6784 = !DILocation(line: 363, column: 13, scope: !6780)
!6785 = !DILocation(line: 369, column: 1, scope: !6763)
!6786 = distinct !DISubprogram(name: "uart_verify_error", scope: !3183, file: !3183, line: 371, type: !6787, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6789)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!1320, !6414}
!6789 = !{!6790, !6791, !6792}
!6790 = !DILocalVariable(name: "uartx", arg: 1, scope: !6786, file: !3183, line: 371, type: !6414)
!6791 = !DILocalVariable(name: "LSR", scope: !6786, file: !3183, line: 373, type: !1018)
!6792 = !DILocalVariable(name: "ret", scope: !6786, file: !3183, line: 374, type: !1320)
!6793 = !DILocation(line: 0, scope: !6786)
!6794 = !DILocation(line: 376, column: 27, scope: !6786)
!6795 = !DILocation(line: 377, column: 15, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6786, file: !3183, line: 377, column: 9)
!6797 = !DILocation(line: 377, column: 9, scope: !6786)
!6798 = !DILocation(line: 381, column: 5, scope: !6786)
!6799 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !3183, file: !3183, line: 384, type: !6636, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6800)
!6800 = !{!6801, !6802}
!6801 = !DILocalVariable(name: "uartx", arg: 1, scope: !6799, file: !3183, line: 384, type: !6414)
!6802 = !DILocalVariable(name: "DMA_EN", scope: !6799, file: !3183, line: 386, type: !1018)
!6803 = !DILocation(line: 0, scope: !6799)
!6804 = !DILocation(line: 388, column: 21, scope: !6799)
!6805 = !DILocation(line: 390, column: 1, scope: !6799)
!6806 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !3183, file: !3183, line: 392, type: !6636, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6807)
!6807 = !{!6808}
!6808 = !DILocalVariable(name: "uartx", arg: 1, scope: !6806, file: !3183, line: 392, type: !6414)
!6809 = !DILocation(line: 0, scope: !6806)
!6810 = !DILocation(line: 394, column: 12, scope: !6806)
!6811 = !DILocation(line: 394, column: 16, scope: !6806)
!6812 = !DILocation(line: 395, column: 24, scope: !6806)
!6813 = !DILocation(line: 395, column: 28, scope: !6806)
!6814 = !DILocation(line: 396, column: 21, scope: !6806)
!6815 = !DILocation(line: 396, column: 26, scope: !6806)
!6816 = !DILocation(line: 397, column: 12, scope: !6806)
!6817 = !DILocation(line: 397, column: 18, scope: !6806)
!6818 = !DILocation(line: 399, column: 16, scope: !6806)
!6819 = !DILocation(line: 400, column: 24, scope: !6806)
!6820 = !DILocation(line: 400, column: 28, scope: !6806)
!6821 = !DILocation(line: 401, column: 20, scope: !6806)
!6822 = !DILocation(line: 401, column: 24, scope: !6806)
!6823 = !DILocation(line: 403, column: 16, scope: !6806)
!6824 = !DILocation(line: 404, column: 24, scope: !6806)
!6825 = !DILocation(line: 405, column: 28, scope: !6806)
!6826 = !DILocation(line: 407, column: 16, scope: !6806)
!6827 = !DILocation(line: 408, column: 28, scope: !6806)
!6828 = !DILocation(line: 409, column: 16, scope: !6806)
!6829 = !DILocation(line: 411, column: 25, scope: !6806)
!6830 = !DILocation(line: 412, column: 22, scope: !6806)
!6831 = !DILocation(line: 412, column: 26, scope: !6806)
!6832 = !DILocation(line: 413, column: 12, scope: !6806)
!6833 = !DILocation(line: 413, column: 24, scope: !6806)
!6834 = !DILocation(line: 414, column: 12, scope: !6806)
!6835 = !DILocation(line: 414, column: 22, scope: !6806)
!6836 = !DILocation(line: 415, column: 12, scope: !6806)
!6837 = !DILocation(line: 415, column: 25, scope: !6806)
!6838 = !DILocation(line: 416, column: 12, scope: !6806)
!6839 = !DILocation(line: 416, column: 25, scope: !6806)
!6840 = !DILocation(line: 417, column: 12, scope: !6806)
!6841 = !DILocation(line: 417, column: 23, scope: !6806)
!6842 = !DILocation(line: 418, column: 12, scope: !6806)
!6843 = !DILocation(line: 418, column: 27, scope: !6806)
!6844 = !DILocation(line: 419, column: 12, scope: !6806)
!6845 = !DILocation(line: 419, column: 18, scope: !6806)
!6846 = !DILocation(line: 420, column: 12, scope: !6806)
!6847 = !DILocation(line: 420, column: 23, scope: !6806)
!6848 = !DILocation(line: 421, column: 12, scope: !6806)
!6849 = !DILocation(line: 421, column: 22, scope: !6806)
!6850 = !DILocation(line: 422, column: 12, scope: !6806)
!6851 = !DILocation(line: 422, column: 21, scope: !6806)
!6852 = !DILocation(line: 423, column: 12, scope: !6806)
!6853 = !DILocation(line: 423, column: 19, scope: !6806)
!6854 = !DILocation(line: 424, column: 23, scope: !6806)
!6855 = !DILocation(line: 425, column: 12, scope: !6806)
!6856 = !DILocation(line: 425, column: 22, scope: !6806)
!6857 = !DILocation(line: 426, column: 12, scope: !6806)
!6858 = !DILocation(line: 426, column: 22, scope: !6806)
!6859 = !DILocation(line: 427, column: 1, scope: !6806)
!6860 = distinct !DISubprogram(name: "uart_query_empty", scope: !3183, file: !3183, line: 429, type: !6636, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !6861)
!6861 = !{!6862}
!6862 = !DILocalVariable(name: "uartx", arg: 1, scope: !6860, file: !3183, line: 429, type: !6414)
!6863 = !DILocation(line: 0, scope: !6860)
!6864 = !DILocation(line: 431, column: 5, scope: !6860)
!6865 = !DILocation(line: 431, column: 31, scope: !6860)
!6866 = !DILocation(line: 431, column: 36, scope: !6860)
!6867 = !DILocation(line: 431, column: 12, scope: !6860)
!6868 = distinct !{!6868, !6864, !6869}
!6869 = !DILocation(line: 431, column: 44, scope: !6860)
!6870 = !DILocation(line: 432, column: 1, scope: !6860)
!6871 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !872, file: !872, line: 134, type: !6872, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6874)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{!5165, !784, !1320}
!6874 = !{!6875, !6876, !6877}
!6875 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6871, file: !872, line: 134, type: !784)
!6876 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6871, file: !872, line: 134, type: !1320)
!6877 = !DILocalVariable(name: "dma_channel", scope: !6871, file: !872, line: 136, type: !5165)
!6878 = !DILocation(line: 0, scope: !6871)
!6879 = !DILocation(line: 138, column: 5, scope: !6871)
!6880 = !DILocation(line: 140, column: 17, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !872, line: 140, column: 17)
!6882 = distinct !DILexicalBlock(scope: !6871, file: !872, line: 138, column: 24)
!6883 = !DILocation(line: 147, column: 17, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6882, file: !872, line: 147, column: 17)
!6885 = !DILocation(line: 154, column: 17, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !872, line: 154, column: 17)
!6887 = !DILocation(line: 161, column: 17, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6882, file: !872, line: 161, column: 17)
!6889 = !DILocation(line: 171, column: 5, scope: !6871)
!6890 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !872, file: !872, line: 174, type: !6891, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6899)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{null, !5165, !6893}
!6893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6894, size: 32)
!6894 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !779, line: 96, baseType: !6895)
!6895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !779, line: 93, size: 64, elements: !6896)
!6896 = !{!6897, !6898}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6895, file: !779, line: 94, baseType: !91, size: 8)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6895, file: !779, line: 95, baseType: !784, size: 32, offset: 32)
!6899 = !{!6900, !6901}
!6900 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6890, file: !872, line: 174, type: !5165)
!6901 = !DILocalVariable(name: "user_data", arg: 2, scope: !6890, file: !872, line: 174, type: !6893)
!6902 = !DILocation(line: 0, scope: !6890)
!6903 = !DILocation(line: 176, column: 5, scope: !6890)
!6904 = !DILocation(line: 0, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6890, file: !872, line: 176, column: 26)
!6906 = !DILocation(line: 212, column: 1, scope: !6890)
!6907 = distinct !DISubprogram(name: "uart_enable_dma", scope: !872, file: !872, line: 214, type: !6908, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6910)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{null, !885}
!6910 = !{!6911}
!6911 = !DILocalVariable(name: "uartx", arg: 1, scope: !6907, file: !872, line: 214, type: !885)
!6912 = !DILocation(line: 0, scope: !6907)
!6913 = !DILocation(line: 216, column: 12, scope: !6907)
!6914 = !DILocation(line: 216, column: 19, scope: !6907)
!6915 = !DILocation(line: 217, column: 1, scope: !6907)
!6916 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !872, file: !872, line: 219, type: !1144, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6917)
!6917 = !{!6918, !6919, !6920, !6921}
!6918 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6916, file: !872, line: 219, type: !950)
!6919 = !DILocalVariable(name: "uart_port", scope: !6916, file: !872, line: 221, type: !784)
!6920 = !DILocalVariable(name: "type", scope: !6916, file: !872, line: 222, type: !6766)
!6921 = !DILocalVariable(name: "uartx", scope: !6916, file: !872, line: 223, type: !885)
!6922 = !DILocation(line: 0, scope: !6916)
!6923 = !DILocation(line: 225, column: 5, scope: !6916)
!6924 = !DILocation(line: 242, column: 13, scope: !6916)
!6925 = !DILocation(line: 243, column: 12, scope: !6916)
!6926 = !DILocation(line: 245, column: 5, scope: !6916)
!6927 = !DILocation(line: 248, column: 13, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6916, file: !872, line: 245, column: 19)
!6929 = !DILocation(line: 249, column: 13, scope: !6928)
!6930 = !DILocation(line: 252, column: 13, scope: !6928)
!6931 = !DILocation(line: 253, column: 13, scope: !6928)
!6932 = !DILocation(line: 263, column: 13, scope: !6928)
!6933 = !DILocation(line: 264, column: 13, scope: !6928)
!6934 = !DILocation(line: 268, column: 13, scope: !6928)
!6935 = !DILocation(line: 269, column: 13, scope: !6928)
!6936 = !DILocation(line: 276, column: 13, scope: !6928)
!6937 = !DILocation(line: 278, column: 1, scope: !6916)
!6938 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !961, file: !961, line: 74, type: !6939, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !6941)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{null, !61, !61}
!6941 = !{!6942, !6943, !6944, !6945, !6946, !6947, !6948, !6949}
!6942 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6938, file: !961, line: 74, type: !61)
!6943 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !6938, file: !961, line: 74, type: !61)
!6944 = !DILocalVariable(name: "frequency", scope: !6938, file: !961, line: 76, type: !61)
!6945 = !DILocalVariable(name: "step_cnt_div", scope: !6938, file: !961, line: 77, type: !61)
!6946 = !DILocalVariable(name: "sample_cnt_div", scope: !6938, file: !961, line: 78, type: !61)
!6947 = !DILocalVariable(name: "orignal_register_value", scope: !6938, file: !961, line: 79, type: !61)
!6948 = !DILocalVariable(name: "register_value", scope: !6938, file: !961, line: 79, type: !61)
!6949 = !DILocalVariable(name: "temp", scope: !6938, file: !961, line: 80, type: !61)
!6950 = !DILocation(line: 0, scope: !6938)
!6951 = !DILocation(line: 83, column: 5, scope: !6938)
!6952 = !DILocation(line: 83, column: 36, scope: !6938)
!6953 = !DILocation(line: 83, column: 46, scope: !6938)
!6954 = !DILocation(line: 84, column: 5, scope: !6938)
!6955 = !DILocation(line: 87, column: 54, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6938, file: !961, line: 84, column: 33)
!6957 = !DILocation(line: 89, column: 13, scope: !6956)
!6958 = !DILocation(line: 95, column: 13, scope: !6956)
!6959 = !DILocation(line: 98, column: 13, scope: !6956)
!6960 = !DILocation(line: 101, column: 13, scope: !6956)
!6961 = !DILocation(line: 104, column: 13, scope: !6956)
!6962 = !DILocation(line: 109, column: 13, scope: !6956)
!6963 = !DILocation(line: 117, column: 5, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6938, file: !961, line: 117, column: 5)
!6965 = !DILocation(line: 119, column: 31, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !961, line: 117, column: 69)
!6967 = distinct !DILexicalBlock(scope: !6964, file: !961, line: 117, column: 5)
!6968 = !DILocation(line: 120, column: 60, scope: !6966)
!6969 = !DILocation(line: 120, column: 67, scope: !6966)
!6970 = !DILocation(line: 120, column: 72, scope: !6966)
!6971 = !DILocation(line: 122, column: 26, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !961, line: 122, column: 13)
!6973 = !DILocation(line: 122, column: 13, scope: !6966)
!6974 = !DILocation(line: 117, column: 65, scope: !6967)
!6975 = !DILocation(line: 117, column: 45, scope: !6967)
!6976 = distinct !{!6976, !6963, !6977}
!6977 = !DILocation(line: 125, column: 5, scope: !6964)
!6978 = !DILocation(line: 0, scope: !6964)
!6979 = !DILocation(line: 128, column: 17, scope: !6938)
!6980 = !DILocation(line: 131, column: 62, scope: !6938)
!6981 = !DILocation(line: 131, column: 70, scope: !6938)
!6982 = !DILocation(line: 132, column: 94, scope: !6938)
!6983 = !DILocation(line: 132, column: 76, scope: !6938)
!6984 = !DILocation(line: 132, column: 157, scope: !6938)
!6985 = !DILocation(line: 132, column: 45, scope: !6938)
!6986 = !DILocation(line: 133, column: 45, scope: !6938)
!6987 = !DILocation(line: 133, column: 43, scope: !6938)
!6988 = !DILocation(line: 134, column: 1, scope: !6938)
!6989 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !961, file: !961, line: 143, type: !6990, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !7002)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{null, !61, !6992, !159, !6993}
!6992 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !974, line: 160, baseType: !983)
!6993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6994, size: 32)
!6994 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !974, line: 176, baseType: !6995)
!6995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !974, line: 170, size: 160, elements: !6996)
!6996 = !{!6997, !6998, !6999, !7000, !7001}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !6995, file: !974, line: 171, baseType: !61, size: 32)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !6995, file: !974, line: 172, baseType: !61, size: 32, offset: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !6995, file: !974, line: 173, baseType: !61, size: 32, offset: 64)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !6995, file: !974, line: 174, baseType: !61, size: 32, offset: 96)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !6995, file: !974, line: 175, baseType: !61, size: 32, offset: 128)
!7002 = !{!7003, !7004, !7005, !7006}
!7003 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6989, file: !961, line: 143, type: !61)
!7004 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !6989, file: !961, line: 143, type: !6992)
!7005 = !DILocalVariable(name: "slave_address", arg: 3, scope: !6989, file: !961, line: 143, type: !159)
!7006 = !DILocalVariable(name: "config_size", arg: 4, scope: !6989, file: !961, line: 143, type: !6993)
!7007 = !DILocation(line: 0, scope: !6989)
!7008 = !DILocation(line: 146, column: 49, scope: !6989)
!7009 = !DILocation(line: 146, column: 5, scope: !6989)
!7010 = !DILocation(line: 146, column: 36, scope: !6989)
!7011 = !DILocation(line: 146, column: 47, scope: !6989)
!7012 = !DILocation(line: 148, column: 5, scope: !6989)
!7013 = !DILocation(line: 150, column: 5, scope: !6989)
!7014 = !DILocation(line: 153, column: 5, scope: !6989)
!7015 = !DILocation(line: 0, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !961, line: 156, column: 17)
!7017 = distinct !DILexicalBlock(scope: !6989, file: !961, line: 153, column: 31)
!7018 = !DILocation(line: 164, column: 72, scope: !7017)
!7019 = !DILocation(line: 164, column: 59, scope: !7017)
!7020 = !DILocation(line: 164, column: 44, scope: !7017)
!7021 = !DILocation(line: 164, column: 57, scope: !7017)
!7022 = !DILocation(line: 165, column: 44, scope: !7017)
!7023 = !DILocation(line: 165, column: 56, scope: !7017)
!7024 = !DILocation(line: 167, column: 13, scope: !7017)
!7025 = !DILocation(line: 0, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7017, file: !961, line: 170, column: 17)
!7027 = !DILocation(line: 177, column: 72, scope: !7017)
!7028 = !DILocation(line: 177, column: 59, scope: !7017)
!7029 = !DILocation(line: 177, column: 44, scope: !7017)
!7030 = !DILocation(line: 177, column: 57, scope: !7017)
!7031 = !DILocation(line: 178, column: 44, scope: !7017)
!7032 = !DILocation(line: 178, column: 56, scope: !7017)
!7033 = !DILocation(line: 180, column: 13, scope: !7017)
!7034 = !DILocation(line: 0, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7017, file: !961, line: 183, column: 17)
!7036 = !DILocation(line: 190, column: 72, scope: !7017)
!7037 = !DILocation(line: 190, column: 59, scope: !7017)
!7038 = !DILocation(line: 190, column: 44, scope: !7017)
!7039 = !DILocation(line: 190, column: 57, scope: !7017)
!7040 = !DILocation(line: 191, column: 44, scope: !7017)
!7041 = !DILocation(line: 191, column: 56, scope: !7017)
!7042 = !DILocation(line: 193, column: 13, scope: !7017)
!7043 = !DILocation(line: 0, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7017, file: !961, line: 196, column: 17)
!7045 = !DILocation(line: 203, column: 44, scope: !7017)
!7046 = !DILocation(line: 203, column: 57, scope: !7017)
!7047 = !DILocation(line: 204, column: 71, scope: !7017)
!7048 = !DILocation(line: 204, column: 58, scope: !7017)
!7049 = !DILocation(line: 204, column: 44, scope: !7017)
!7050 = !DILocation(line: 204, column: 56, scope: !7017)
!7051 = !DILocation(line: 206, column: 13, scope: !7017)
!7052 = !DILocation(line: 0, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7017, file: !961, line: 209, column: 17)
!7054 = !DILocation(line: 216, column: 72, scope: !7017)
!7055 = !DILocation(line: 216, column: 59, scope: !7017)
!7056 = !DILocation(line: 216, column: 44, scope: !7017)
!7057 = !DILocation(line: 216, column: 57, scope: !7017)
!7058 = !DILocation(line: 217, column: 44, scope: !7017)
!7059 = !DILocation(line: 217, column: 56, scope: !7017)
!7060 = !DILocation(line: 218, column: 76, scope: !7017)
!7061 = !DILocation(line: 218, column: 63, scope: !7017)
!7062 = !DILocation(line: 219, column: 13, scope: !7017)
!7063 = !DILocation(line: 0, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7017, file: !961, line: 222, column: 17)
!7065 = !DILocation(line: 229, column: 72, scope: !7017)
!7066 = !DILocation(line: 229, column: 59, scope: !7017)
!7067 = !DILocation(line: 229, column: 44, scope: !7017)
!7068 = !DILocation(line: 229, column: 57, scope: !7017)
!7069 = !DILocation(line: 230, column: 75, scope: !7017)
!7070 = !DILocation(line: 230, column: 58, scope: !7017)
!7071 = !DILocation(line: 230, column: 44, scope: !7017)
!7072 = !DILocation(line: 230, column: 56, scope: !7017)
!7073 = !DILocation(line: 232, column: 13, scope: !7017)
!7074 = !DILocation(line: 235, column: 44, scope: !7017)
!7075 = !DILocation(line: 235, column: 54, scope: !7017)
!7076 = !DILocation(line: 236, column: 44, scope: !7017)
!7077 = !DILocation(line: 236, column: 52, scope: !7017)
!7078 = !DILocation(line: 237, column: 72, scope: !7017)
!7079 = !DILocation(line: 237, column: 59, scope: !7017)
!7080 = !DILocation(line: 237, column: 44, scope: !7017)
!7081 = !DILocation(line: 237, column: 57, scope: !7017)
!7082 = !DILocation(line: 238, column: 71, scope: !7017)
!7083 = !DILocation(line: 238, column: 58, scope: !7017)
!7084 = !DILocation(line: 238, column: 44, scope: !7017)
!7085 = !DILocation(line: 238, column: 56, scope: !7017)
!7086 = !DILocation(line: 240, column: 13, scope: !7017)
!7087 = !DILocation(line: 242, column: 44, scope: !7017)
!7088 = !DILocation(line: 242, column: 54, scope: !7017)
!7089 = !DILocation(line: 243, column: 44, scope: !7017)
!7090 = !DILocation(line: 243, column: 52, scope: !7017)
!7091 = !DILocation(line: 244, column: 72, scope: !7017)
!7092 = !DILocation(line: 244, column: 59, scope: !7017)
!7093 = !DILocation(line: 244, column: 44, scope: !7017)
!7094 = !DILocation(line: 244, column: 57, scope: !7017)
!7095 = !DILocation(line: 245, column: 71, scope: !7017)
!7096 = !DILocation(line: 245, column: 58, scope: !7017)
!7097 = !DILocation(line: 245, column: 44, scope: !7017)
!7098 = !DILocation(line: 245, column: 56, scope: !7017)
!7099 = !DILocation(line: 248, column: 13, scope: !7017)
!7100 = !DILocation(line: 250, column: 44, scope: !7017)
!7101 = !DILocation(line: 250, column: 54, scope: !7017)
!7102 = !DILocation(line: 251, column: 44, scope: !7017)
!7103 = !DILocation(line: 251, column: 52, scope: !7017)
!7104 = !DILocation(line: 252, column: 72, scope: !7017)
!7105 = !DILocation(line: 252, column: 59, scope: !7017)
!7106 = !DILocation(line: 252, column: 44, scope: !7017)
!7107 = !DILocation(line: 252, column: 57, scope: !7017)
!7108 = !DILocation(line: 253, column: 71, scope: !7017)
!7109 = !DILocation(line: 253, column: 58, scope: !7017)
!7110 = !DILocation(line: 253, column: 44, scope: !7017)
!7111 = !DILocation(line: 253, column: 56, scope: !7017)
!7112 = !DILocation(line: 254, column: 76, scope: !7017)
!7113 = !DILocation(line: 254, column: 63, scope: !7017)
!7114 = !DILocation(line: 255, column: 13, scope: !7017)
!7115 = !DILocation(line: 0, scope: !7017)
!7116 = !DILocation(line: 261, column: 1, scope: !6989)
!7117 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !961, file: !961, line: 266, type: !7118, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !7120)
!7118 = !DISubroutineType(types: !7119)
!7119 = !{null, !61, !6125, !61}
!7120 = !{!7121, !7122, !7123, !7124}
!7121 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7117, file: !961, line: 266, type: !61)
!7122 = !DILocalVariable(name: "data", arg: 2, scope: !7117, file: !961, line: 266, type: !6125)
!7123 = !DILocalVariable(name: "size", arg: 3, scope: !7117, file: !961, line: 266, type: !61)
!7124 = !DILocalVariable(name: "i", scope: !7117, file: !961, line: 268, type: !61)
!7125 = !DILocation(line: 0, scope: !7117)
!7126 = !DILocation(line: 269, column: 19, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !961, line: 269, column: 5)
!7128 = distinct !DILexicalBlock(scope: !7117, file: !961, line: 269, column: 5)
!7129 = !DILocation(line: 269, column: 5, scope: !7128)
!7130 = !DILocation(line: 270, column: 59, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7127, file: !961, line: 269, column: 32)
!7132 = !DILocation(line: 270, column: 52, scope: !7131)
!7133 = !DILocation(line: 270, column: 50, scope: !7131)
!7134 = !DILocation(line: 269, column: 28, scope: !7127)
!7135 = distinct !{!7135, !7129, !7136}
!7136 = !DILocation(line: 271, column: 5, scope: !7128)
!7137 = !DILocation(line: 272, column: 1, scope: !7117)
!7138 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !961, file: !961, line: 274, type: !7139, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !7141)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{null, !61, !849, !61}
!7141 = !{!7142, !7143, !7144, !7145}
!7142 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7138, file: !961, line: 274, type: !61)
!7143 = !DILocalVariable(name: "buffer", arg: 2, scope: !7138, file: !961, line: 274, type: !849)
!7144 = !DILocalVariable(name: "size", arg: 3, scope: !7138, file: !961, line: 274, type: !61)
!7145 = !DILocalVariable(name: "i", scope: !7138, file: !961, line: 276, type: !61)
!7146 = !DILocation(line: 0, scope: !7138)
!7147 = !DILocation(line: 277, column: 19, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !961, line: 277, column: 5)
!7149 = distinct !DILexicalBlock(scope: !7138, file: !961, line: 277, column: 5)
!7150 = !DILocation(line: 277, column: 5, scope: !7149)
!7151 = !DILocation(line: 278, column: 56, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !961, line: 277, column: 32)
!7153 = !DILocation(line: 278, column: 25, scope: !7152)
!7154 = !DILocation(line: 278, column: 18, scope: !7152)
!7155 = !DILocation(line: 278, column: 23, scope: !7152)
!7156 = !DILocation(line: 277, column: 28, scope: !7148)
!7157 = distinct !{!7157, !7150, !7158}
!7158 = !DILocation(line: 279, column: 5, scope: !7149)
!7159 = !DILocation(line: 280, column: 1, scope: !7138)
!7160 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !961, file: !961, line: 282, type: !7161, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !7164)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{!7163, !61}
!7163 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !974, line: 168, baseType: !1000)
!7164 = !{!7165, !7166, !7167}
!7165 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7160, file: !961, line: 282, type: !61)
!7166 = !DILocalVariable(name: "register_value", scope: !7160, file: !961, line: 284, type: !1018)
!7167 = !DILocalVariable(name: "return_status", scope: !7160, file: !961, line: 285, type: !7163)
!7168 = !DILocation(line: 0, scope: !7160)
!7169 = !DILocation(line: 287, column: 22, scope: !7160)
!7170 = !DILocation(line: 287, column: 53, scope: !7160)
!7171 = !DILocation(line: 289, column: 15, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7160, file: !961, line: 289, column: 9)
!7173 = !DILocation(line: 289, column: 30, scope: !7172)
!7174 = !DILocation(line: 289, column: 11, scope: !7172)
!7175 = !DILocation(line: 289, column: 9, scope: !7160)
!7176 = !DILocation(line: 291, column: 37, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7172, file: !961, line: 291, column: 16)
!7178 = !DILocation(line: 291, column: 18, scope: !7177)
!7179 = !DILocation(line: 291, column: 16, scope: !7172)
!7180 = !DILocation(line: 293, column: 37, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7177, file: !961, line: 293, column: 16)
!7182 = !DILocation(line: 293, column: 18, scope: !7181)
!7183 = !DILocation(line: 293, column: 16, scope: !7177)
!7184 = !DILocation(line: 295, column: 20, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7181, file: !961, line: 295, column: 16)
!7186 = !DILocation(line: 295, column: 16, scope: !7181)
!7187 = !DILocation(line: 318, column: 5, scope: !7160)
!7188 = !DILocation(line: 319, column: 5, scope: !7160)
!7189 = distinct !DISubprogram(name: "pmic_i2c_init", scope: !3187, file: !3187, line: 54, type: !7190, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3186, retainedNodes: !7199)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!3204, !7192, !7193}
!7192 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_port_t", file: !2514, line: 61, baseType: !2513)
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7194, size: 32)
!7194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7195)
!7195 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !2514, line: 92, baseType: !7196)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2514, line: 90, size: 32, elements: !7197)
!7197 = !{!7198}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !7196, file: !2514, line: 91, baseType: !61, size: 32)
!7199 = !{!7200, !7201}
!7200 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7189, file: !3187, line: 54, type: !7192)
!7201 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !7189, file: !3187, line: 54, type: !7193)
!7202 = !DILocation(line: 0, scope: !7189)
!7203 = !DILocation(line: 57, column: 29, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7189, file: !3187, line: 57, column: 9)
!7205 = !DILocation(line: 57, column: 9, scope: !7189)
!7206 = !DILocation(line: 62, column: 22, scope: !7189)
!7207 = !DILocation(line: 62, column: 5, scope: !7189)
!7208 = !DILocation(line: 66, column: 70, scope: !7189)
!7209 = !DILocation(line: 66, column: 5, scope: !7189)
!7210 = !DILocation(line: 69, column: 23, scope: !7189)
!7211 = !DILocation(line: 69, column: 5, scope: !7189)
!7212 = !DILocation(line: 72, column: 5, scope: !7189)
!7213 = !DILocation(line: 73, column: 1, scope: !7189)
!7214 = distinct !DISubprogram(name: "pmic_i2c_send_polling", scope: !3187, file: !3187, line: 76, type: !7215, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3186, retainedNodes: !7217)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!3204, !7192, !159, !6125, !61}
!7217 = !{!7218, !7219, !7220, !7221, !7222, !7223}
!7218 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7214, file: !3187, line: 76, type: !7192)
!7219 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7214, file: !3187, line: 76, type: !159)
!7220 = !DILocalVariable(name: "data", arg: 3, scope: !7214, file: !3187, line: 76, type: !6125)
!7221 = !DILocalVariable(name: "size", arg: 4, scope: !7214, file: !3187, line: 76, type: !61)
!7222 = !DILocalVariable(name: "transaction_status", scope: !7214, file: !3187, line: 78, type: !7163)
!7223 = !DILocalVariable(name: "config_size", scope: !7214, file: !3187, line: 79, type: !7224)
!7224 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !974, line: 176, baseType: !7225)
!7225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !974, line: 170, size: 160, elements: !7226)
!7226 = !{!7227, !7228, !7229, !7230, !7231}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !7225, file: !974, line: 171, baseType: !61, size: 32)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !7225, file: !974, line: 172, baseType: !61, size: 32, offset: 32)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !7225, file: !974, line: 173, baseType: !61, size: 32, offset: 64)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !7225, file: !974, line: 174, baseType: !61, size: 32, offset: 96)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !7225, file: !974, line: 175, baseType: !61, size: 32, offset: 128)
!7232 = !DILocation(line: 0, scope: !7214)
!7233 = !DILocation(line: 79, column: 5, scope: !7214)
!7234 = !DILocation(line: 79, column: 28, scope: !7214)
!7235 = !DILocation(line: 81, column: 29, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7214, file: !3187, line: 81, column: 9)
!7237 = !DILocation(line: 81, column: 9, scope: !7214)
!7238 = !DILocation(line: 84, column: 14, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7214, file: !3187, line: 84, column: 9)
!7240 = !DILocation(line: 84, column: 22, scope: !7239)
!7241 = !DILocation(line: 89, column: 22, scope: !7214)
!7242 = !DILocation(line: 89, column: 5, scope: !7214)
!7243 = !DILocation(line: 93, column: 5, scope: !7214)
!7244 = !DILocation(line: 96, column: 17, scope: !7214)
!7245 = !DILocation(line: 96, column: 27, scope: !7214)
!7246 = !DILocation(line: 97, column: 17, scope: !7214)
!7247 = !DILocation(line: 97, column: 30, scope: !7214)
!7248 = !DILocation(line: 104, column: 100, scope: !7214)
!7249 = !DILocation(line: 104, column: 5, scope: !7214)
!7250 = !DILocation(line: 108, column: 5, scope: !7214)
!7251 = !DILocation(line: 111, column: 5, scope: !7214)
!7252 = !DILocation(line: 114, column: 5, scope: !7214)
!7253 = !DILocation(line: 114, column: 17, scope: !7214)
!7254 = !DILocation(line: 114, column: 14, scope: !7214)
!7255 = distinct !{!7255, !7252, !7256}
!7256 = !DILocation(line: 115, column: 5, scope: !7214)
!7257 = !DILocation(line: 118, column: 26, scope: !7214)
!7258 = !DILocation(line: 121, column: 23, scope: !7214)
!7259 = !DILocation(line: 121, column: 5, scope: !7214)
!7260 = !DILocation(line: 124, column: 33, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7214, file: !3187, line: 124, column: 9)
!7262 = !DILocation(line: 124, column: 9, scope: !7214)
!7263 = !DILocation(line: 126, column: 9, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7261, file: !3187, line: 124, column: 56)
!7265 = !DILocation(line: 127, column: 9, scope: !7264)
!7266 = !DILocation(line: 131, column: 1, scope: !7214)
!7267 = distinct !DISubprogram(name: "pmic_i2c_receive_polling", scope: !3187, file: !3187, line: 134, type: !7268, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3186, retainedNodes: !7270)
!7268 = !DISubroutineType(types: !7269)
!7269 = !{!3204, !7192, !159, !849, !61}
!7270 = !{!7271, !7272, !7273, !7274, !7275, !7276}
!7271 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7267, file: !3187, line: 134, type: !7192)
!7272 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7267, file: !3187, line: 134, type: !159)
!7273 = !DILocalVariable(name: "buffer", arg: 3, scope: !7267, file: !3187, line: 134, type: !849)
!7274 = !DILocalVariable(name: "size", arg: 4, scope: !7267, file: !3187, line: 134, type: !61)
!7275 = !DILocalVariable(name: "transaction_status", scope: !7267, file: !3187, line: 136, type: !7163)
!7276 = !DILocalVariable(name: "config_size", scope: !7267, file: !3187, line: 137, type: !7224)
!7277 = !DILocation(line: 0, scope: !7267)
!7278 = !DILocation(line: 137, column: 5, scope: !7267)
!7279 = !DILocation(line: 137, column: 28, scope: !7267)
!7280 = !DILocation(line: 139, column: 29, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7267, file: !3187, line: 139, column: 9)
!7282 = !DILocation(line: 139, column: 9, scope: !7267)
!7283 = !DILocation(line: 142, column: 14, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7267, file: !3187, line: 142, column: 9)
!7285 = !DILocation(line: 142, column: 24, scope: !7284)
!7286 = !DILocation(line: 147, column: 22, scope: !7267)
!7287 = !DILocation(line: 147, column: 5, scope: !7267)
!7288 = !DILocation(line: 151, column: 5, scope: !7267)
!7289 = !DILocation(line: 154, column: 17, scope: !7267)
!7290 = !DILocation(line: 154, column: 27, scope: !7267)
!7291 = !DILocation(line: 155, column: 17, scope: !7267)
!7292 = !DILocation(line: 155, column: 30, scope: !7267)
!7293 = !DILocation(line: 162, column: 103, scope: !7267)
!7294 = !DILocation(line: 162, column: 5, scope: !7267)
!7295 = !DILocation(line: 165, column: 5, scope: !7267)
!7296 = !DILocation(line: 168, column: 5, scope: !7267)
!7297 = !DILocation(line: 168, column: 17, scope: !7267)
!7298 = !DILocation(line: 168, column: 14, scope: !7267)
!7299 = distinct !{!7299, !7296, !7300}
!7300 = !DILocation(line: 169, column: 5, scope: !7267)
!7301 = !DILocation(line: 172, column: 26, scope: !7267)
!7302 = !DILocation(line: 175, column: 33, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7267, file: !3187, line: 175, column: 9)
!7304 = !DILocation(line: 175, column: 9, scope: !7267)
!7305 = !DILocation(line: 183, column: 9, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7303, file: !3187, line: 182, column: 12)
!7307 = !DILocation(line: 189, column: 9, scope: !7306)
!7308 = !DILocation(line: 0, scope: !7303)
!7309 = !DILocation(line: 191, column: 1, scope: !7267)
!7310 = distinct !DISubprogram(name: "pmic_i2c_send_to_receive_polling", scope: !3187, file: !3187, line: 194, type: !7311, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3186, retainedNodes: !7322)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{!3204, !7192, !7313}
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7314, size: 32)
!7314 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !2514, line: 100, baseType: !7315)
!7315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2514, line: 94, size: 160, elements: !7316)
!7316 = !{!7317, !7318, !7319, !7320, !7321}
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !7315, file: !2514, line: 95, baseType: !159, size: 8)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !7315, file: !2514, line: 96, baseType: !6125, size: 32, offset: 32)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !7315, file: !2514, line: 97, baseType: !61, size: 32, offset: 64)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !7315, file: !2514, line: 98, baseType: !849, size: 32, offset: 96)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !7315, file: !2514, line: 99, baseType: !61, size: 32, offset: 128)
!7322 = !{!7323, !7324, !7325, !7326}
!7323 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7310, file: !3187, line: 194, type: !7192)
!7324 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !7310, file: !3187, line: 194, type: !7313)
!7325 = !DILocalVariable(name: "transaction_status", scope: !7310, file: !3187, line: 196, type: !7163)
!7326 = !DILocalVariable(name: "config_size", scope: !7310, file: !3187, line: 197, type: !7224)
!7327 = !DILocation(line: 0, scope: !7310)
!7328 = !DILocation(line: 197, column: 5, scope: !7310)
!7329 = !DILocation(line: 197, column: 28, scope: !7310)
!7330 = !DILocation(line: 198, column: 29, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7310, file: !3187, line: 198, column: 9)
!7332 = !DILocation(line: 198, column: 9, scope: !7310)
!7333 = !DILocation(line: 201, column: 45, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7310, file: !3187, line: 201, column: 9)
!7335 = !DILocation(line: 201, column: 14, scope: !7334)
!7336 = !DILocation(line: 201, column: 55, scope: !7334)
!7337 = !DILocation(line: 201, column: 94, scope: !7334)
!7338 = !DILocation(line: 201, column: 63, scope: !7334)
!7339 = !DILocation(line: 201, column: 9, scope: !7310)
!7340 = !DILocation(line: 204, column: 37, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7310, file: !3187, line: 204, column: 9)
!7342 = !DILocation(line: 204, column: 49, scope: !7341)
!7343 = !DILocation(line: 204, column: 66, scope: !7341)
!7344 = !DILocation(line: 204, column: 97, scope: !7341)
!7345 = !DILocation(line: 204, column: 112, scope: !7341)
!7346 = !DILocation(line: 204, column: 9, scope: !7310)
!7347 = !DILocation(line: 209, column: 22, scope: !7310)
!7348 = !DILocation(line: 209, column: 5, scope: !7310)
!7349 = !DILocation(line: 212, column: 5, scope: !7310)
!7350 = !DILocation(line: 213, column: 57, scope: !7310)
!7351 = !DILocation(line: 213, column: 17, scope: !7310)
!7352 = !DILocation(line: 213, column: 27, scope: !7310)
!7353 = !DILocation(line: 214, column: 60, scope: !7310)
!7354 = !DILocation(line: 214, column: 17, scope: !7310)
!7355 = !DILocation(line: 214, column: 30, scope: !7310)
!7356 = !DILocation(line: 218, column: 111, scope: !7310)
!7357 = !DILocation(line: 218, column: 5, scope: !7310)
!7358 = !DILocation(line: 220, column: 83, scope: !7310)
!7359 = !DILocation(line: 220, column: 122, scope: !7310)
!7360 = !DILocation(line: 220, column: 5, scope: !7310)
!7361 = !DILocation(line: 221, column: 5, scope: !7310)
!7362 = !DILocation(line: 222, column: 5, scope: !7310)
!7363 = !DILocation(line: 222, column: 17, scope: !7310)
!7364 = !DILocation(line: 222, column: 14, scope: !7310)
!7365 = distinct !{!7365, !7362, !7366}
!7366 = !DILocation(line: 223, column: 5, scope: !7310)
!7367 = !DILocation(line: 224, column: 26, scope: !7310)
!7368 = !DILocation(line: 225, column: 33, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7310, file: !3187, line: 225, column: 9)
!7370 = !DILocation(line: 225, column: 9, scope: !7310)
!7371 = !DILocation(line: 227, column: 9, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7369, file: !3187, line: 225, column: 56)
!7373 = !DILocation(line: 233, column: 9, scope: !7372)
!7374 = !DILocation(line: 235, column: 86, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7369, file: !3187, line: 234, column: 12)
!7376 = !DILocation(line: 235, column: 130, scope: !7375)
!7377 = !DILocation(line: 235, column: 9, scope: !7375)
!7378 = !DILocation(line: 241, column: 9, scope: !7375)
!7379 = !DILocation(line: 0, scope: !7369)
!7380 = !DILocation(line: 243, column: 1, scope: !7310)
!7381 = distinct !DISubprogram(name: "eint_ack_interrupt", scope: !1085, file: !1085, line: 77, type: !7382, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7384)
!7382 = !DISubroutineType(types: !7383)
!7383 = !{null, !61}
!7384 = !{!7385}
!7385 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7381, file: !1085, line: 77, type: !61)
!7386 = !DILocation(line: 0, scope: !7381)
!7387 = !DILocation(line: 79, column: 37, scope: !7381)
!7388 = !DILocation(line: 79, column: 5, scope: !7381)
!7389 = !DILocation(line: 79, column: 20, scope: !7381)
!7390 = !DILocation(line: 79, column: 32, scope: !7381)
!7391 = !DILocation(line: 80, column: 1, scope: !7381)
!7392 = !DILocation(line: 0, scope: !1150)
!7393 = !DILocation(line: 136, column: 9, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !1150, file: !1085, line: 136, column: 9)
!7395 = !DILocation(line: 136, column: 9, scope: !1150)
!7396 = !DILocation(line: 137, column: 9, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7394, file: !1085, line: 136, column: 25)
!7398 = !DILocation(line: 138, column: 9, scope: !7397)
!7399 = !DILocation(line: 139, column: 19, scope: !7397)
!7400 = !DILocation(line: 140, column: 5, scope: !7397)
!7401 = !DILocation(line: 142, column: 21, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !1150, file: !1085, line: 142, column: 9)
!7403 = !DILocation(line: 142, column: 44, scope: !7402)
!7404 = !DILocation(line: 146, column: 12, scope: !1150)
!7405 = !DILocation(line: 147, column: 38, scope: !1150)
!7406 = !DILocation(line: 147, column: 52, scope: !1150)
!7407 = !DILocation(line: 148, column: 38, scope: !1150)
!7408 = !DILocation(line: 148, column: 48, scope: !1150)
!7409 = !DILocation(line: 150, column: 66, scope: !1150)
!7410 = !DILocation(line: 150, column: 14, scope: !1150)
!7411 = !DILocation(line: 151, column: 68, scope: !1150)
!7412 = !DILocation(line: 151, column: 15, scope: !1150)
!7413 = !DILocation(line: 151, column: 12, scope: !1150)
!7414 = !DILocation(line: 153, column: 5, scope: !1150)
!7415 = !DILocation(line: 155, column: 5, scope: !1150)
!7416 = !DILocation(line: 156, column: 5, scope: !1150)
!7417 = !DILocation(line: 157, column: 5, scope: !1150)
!7418 = !DILocation(line: 158, column: 1, scope: !1150)
!7419 = distinct !DISubprogram(name: "hal_eint_isr", scope: !1085, file: !1085, line: 404, type: !7382, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7420)
!7420 = !{!7421, !7422, !7423}
!7421 = !DILocalVariable(name: "index", arg: 1, scope: !7419, file: !1085, line: 404, type: !61)
!7422 = !DILocalVariable(name: "status", scope: !7419, file: !1085, line: 406, type: !61)
!7423 = !DILocalVariable(name: "eint_index", scope: !7419, file: !1085, line: 407, type: !61)
!7424 = !DILocation(line: 0, scope: !7419)
!7425 = !DILocation(line: 409, column: 14, scope: !7419)
!7426 = !DILocation(line: 410, column: 16, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7419, file: !1085, line: 410, column: 9)
!7428 = !DILocation(line: 410, column: 9, scope: !7419)
!7429 = !DILocation(line: 415, column: 25, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !1085, line: 415, column: 13)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !1085, line: 414, column: 74)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !1085, line: 414, column: 5)
!7433 = distinct !DILexicalBlock(scope: !7419, file: !1085, line: 414, column: 5)
!7434 = !DILocation(line: 415, column: 20, scope: !7430)
!7435 = !DILocation(line: 415, column: 13, scope: !7431)
!7436 = !DILocation(line: 416, column: 13, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7430, file: !1085, line: 415, column: 41)
!7438 = !DILocation(line: 417, column: 13, scope: !7437)
!7439 = !DILocation(line: 418, column: 49, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7437, file: !1085, line: 418, column: 17)
!7441 = !DILocation(line: 418, column: 17, scope: !7440)
!7442 = !DILocation(line: 418, column: 17, scope: !7437)
!7443 = !DILocation(line: 419, column: 95, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7440, file: !1085, line: 418, column: 64)
!7445 = !DILocation(line: 419, column: 17, scope: !7444)
!7446 = !DILocation(line: 420, column: 13, scope: !7444)
!7447 = !DILocation(line: 421, column: 17, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7440, file: !1085, line: 420, column: 20)
!7449 = !DILocation(line: 414, column: 70, scope: !7432)
!7450 = !DILocation(line: 414, column: 37, scope: !7432)
!7451 = !DILocation(line: 414, column: 5, scope: !7433)
!7452 = distinct !{!7452, !7451, !7453}
!7453 = !DILocation(line: 424, column: 5, scope: !7433)
!7454 = !DILocation(line: 425, column: 1, scope: !7419)
!7455 = distinct !DISubprogram(name: "hal_eint_set_trigger_mode", scope: !1085, file: !1085, line: 204, type: !7456, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7458)
!7456 = !DISubroutineType(types: !7457)
!7457 = !{!1153, !1146, !1160}
!7458 = !{!7459, !7460, !7461}
!7459 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7455, file: !1085, line: 204, type: !1146)
!7460 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !7455, file: !1085, line: 205, type: !1160)
!7461 = !DILocalVariable(name: "mask", scope: !7455, file: !1085, line: 207, type: !61)
!7462 = !DILocation(line: 0, scope: !7455)
!7463 = !DILocation(line: 209, column: 21, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7455, file: !1085, line: 209, column: 9)
!7465 = !DILocation(line: 209, column: 9, scope: !7455)
!7466 = !DILocation(line: 213, column: 12, scope: !7455)
!7467 = !DILocation(line: 214, column: 9, scope: !7455)
!7468 = !DILocation(line: 215, column: 46, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7470, file: !1085, line: 214, column: 45)
!7470 = distinct !DILexicalBlock(scope: !7455, file: !1085, line: 214, column: 9)
!7471 = !DILocation(line: 215, column: 10, scope: !7469)
!7472 = !DILocation(line: 215, column: 25, scope: !7469)
!7473 = !DILocation(line: 215, column: 40, scope: !7469)
!7474 = !DILocation(line: 216, column: 60, scope: !7469)
!7475 = !DILocation(line: 216, column: 72, scope: !7469)
!7476 = !DILocation(line: 217, column: 5, scope: !7469)
!7477 = !DILocation(line: 218, column: 46, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !1085, line: 217, column: 53)
!7479 = distinct !DILexicalBlock(scope: !7470, file: !1085, line: 217, column: 16)
!7480 = !DILocation(line: 218, column: 10, scope: !7478)
!7481 = !DILocation(line: 218, column: 25, scope: !7478)
!7482 = !DILocation(line: 218, column: 40, scope: !7478)
!7483 = !DILocation(line: 219, column: 60, scope: !7478)
!7484 = !DILocation(line: 219, column: 72, scope: !7478)
!7485 = !DILocation(line: 220, column: 5, scope: !7478)
!7486 = !DILocation(line: 221, column: 46, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !1085, line: 220, column: 55)
!7488 = distinct !DILexicalBlock(scope: !7479, file: !1085, line: 220, column: 16)
!7489 = !DILocation(line: 221, column: 10, scope: !7487)
!7490 = !DILocation(line: 221, column: 25, scope: !7487)
!7491 = !DILocation(line: 221, column: 40, scope: !7487)
!7492 = !DILocation(line: 222, column: 60, scope: !7487)
!7493 = !DILocation(line: 222, column: 72, scope: !7487)
!7494 = !DILocation(line: 223, column: 5, scope: !7487)
!7495 = !DILocation(line: 224, column: 46, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !1085, line: 223, column: 54)
!7497 = distinct !DILexicalBlock(scope: !7488, file: !1085, line: 223, column: 16)
!7498 = !DILocation(line: 224, column: 10, scope: !7496)
!7499 = !DILocation(line: 224, column: 25, scope: !7496)
!7500 = !DILocation(line: 224, column: 40, scope: !7496)
!7501 = !DILocation(line: 225, column: 60, scope: !7496)
!7502 = !DILocation(line: 225, column: 72, scope: !7496)
!7503 = !DILocation(line: 226, column: 5, scope: !7496)
!7504 = !DILocation(line: 228, column: 46, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !1085, line: 226, column: 66)
!7506 = distinct !DILexicalBlock(scope: !7497, file: !1085, line: 226, column: 16)
!7507 = !DILocation(line: 228, column: 10, scope: !7505)
!7508 = !DILocation(line: 228, column: 25, scope: !7505)
!7509 = !DILocation(line: 228, column: 40, scope: !7505)
!7510 = !DILocation(line: 229, column: 25, scope: !7505)
!7511 = !DILocation(line: 229, column: 49, scope: !7505)
!7512 = !DILocation(line: 237, column: 1, scope: !7455)
!7513 = distinct !DISubprogram(name: "hal_eint_set_debounce_time", scope: !1085, file: !1085, line: 239, type: !7514, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7516)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!1153, !1146, !61}
!7516 = !{!7517, !7518, !7519, !7520, !7521}
!7517 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7513, file: !1085, line: 239, type: !1146)
!7518 = !DILocalVariable(name: "time_ms", arg: 2, scope: !7513, file: !1085, line: 239, type: !61)
!7519 = !DILocalVariable(name: "mask", scope: !7513, file: !1085, line: 241, type: !61)
!7520 = !DILocalVariable(name: "count", scope: !7513, file: !1085, line: 241, type: !61)
!7521 = !DILocalVariable(name: "eint_con", scope: !7513, file: !1085, line: 241, type: !61)
!7522 = !DILocation(line: 0, scope: !7513)
!7523 = !DILocation(line: 243, column: 21, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7513, file: !1085, line: 243, column: 9)
!7525 = !DILocation(line: 243, column: 9, scope: !7513)
!7526 = !DILocation(line: 247, column: 13, scope: !7513)
!7527 = !DILocation(line: 248, column: 12, scope: !7513)
!7528 = !DILocation(line: 249, column: 16, scope: !7513)
!7529 = !DILocation(line: 249, column: 66, scope: !7513)
!7530 = !DILocation(line: 250, column: 14, scope: !7513)
!7531 = !DILocation(line: 251, column: 14, scope: !7513)
!7532 = !DILocation(line: 253, column: 17, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7513, file: !1085, line: 253, column: 9)
!7534 = !DILocation(line: 253, column: 9, scope: !7513)
!7535 = !DILocation(line: 255, column: 18, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7533, file: !1085, line: 253, column: 23)
!7537 = !DILocation(line: 256, column: 70, scope: !7536)
!7538 = !DILocation(line: 258, column: 5, scope: !7536)
!7539 = !DILocation(line: 260, column: 81, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7533, file: !1085, line: 259, column: 10)
!7541 = !DILocation(line: 260, column: 70, scope: !7540)
!7542 = !DILocation(line: 261, column: 9, scope: !7540)
!7543 = !DILocation(line: 263, column: 9, scope: !7540)
!7544 = !DILocation(line: 263, column: 59, scope: !7540)
!7545 = !DILocation(line: 263, column: 70, scope: !7540)
!7546 = !DILocation(line: 264, column: 9, scope: !7540)
!7547 = !DILocation(line: 264, column: 59, scope: !7540)
!7548 = !DILocation(line: 264, column: 70, scope: !7540)
!7549 = !DILocation(line: 267, column: 5, scope: !7513)
!7550 = !DILocation(line: 269, column: 5, scope: !7513)
!7551 = !DILocation(line: 270, column: 1, scope: !7513)
!7552 = distinct !DISubprogram(name: "eint_enable_domain", scope: !1085, file: !1085, line: 63, type: !7553, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7556)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{null, !61, !7555}
!7555 = !DIDerivedType(tag: DW_TAG_typedef, name: "eint_domain_status_t", file: !1137, line: 62, baseType: !1136)
!7556 = !{!7557, !7558}
!7557 = !DILocalVariable(name: "eint_no", arg: 1, scope: !7552, file: !1085, line: 63, type: !61)
!7558 = !DILocalVariable(name: "enable", arg: 2, scope: !7552, file: !1085, line: 63, type: !7555)
!7559 = !DILocation(line: 0, scope: !7552)
!7560 = !DILocation(line: 68, column: 46, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !1085, line: 67, column: 12)
!7562 = distinct !DILexicalBlock(scope: !7552, file: !1085, line: 65, column: 9)
!7563 = !DILocation(line: 68, column: 9, scope: !7561)
!7564 = !DILocation(line: 68, column: 24, scope: !7561)
!7565 = !DILocation(line: 68, column: 35, scope: !7561)
!7566 = !DILocation(line: 70, column: 1, scope: !7552)
!7567 = distinct !DISubprogram(name: "eint_caculate_debounce_time", scope: !1085, file: !1085, line: 82, type: !4260, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7568)
!7568 = !{!7569, !7570, !7571}
!7569 = !DILocalVariable(name: "ms", arg: 1, scope: !7567, file: !1085, line: 82, type: !61)
!7570 = !DILocalVariable(name: "prescaler", scope: !7567, file: !1085, line: 84, type: !61)
!7571 = !DILocalVariable(name: "count", scope: !7567, file: !1085, line: 85, type: !61)
!7572 = !DILocation(line: 0, scope: !7567)
!7573 = !DILocation(line: 87, column: 12, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7567, file: !1085, line: 87, column: 9)
!7575 = !DILocation(line: 87, column: 9, scope: !7567)
!7576 = !DILocation(line: 91, column: 19, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7574, file: !1085, line: 91, column: 16)
!7578 = !DILocation(line: 91, column: 16, scope: !7574)
!7579 = !DILocation(line: 93, column: 27, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7577, file: !1085, line: 91, column: 26)
!7581 = !DILocation(line: 94, column: 5, scope: !7580)
!7582 = !DILocation(line: 94, column: 19, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7577, file: !1085, line: 94, column: 16)
!7584 = !DILocation(line: 94, column: 16, scope: !7577)
!7585 = !DILocation(line: 96, column: 21, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7583, file: !1085, line: 94, column: 27)
!7587 = !DILocation(line: 96, column: 33, scope: !7586)
!7588 = !DILocation(line: 97, column: 5, scope: !7586)
!7589 = !DILocation(line: 97, column: 19, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7583, file: !1085, line: 97, column: 16)
!7591 = !DILocation(line: 97, column: 16, scope: !7583)
!7592 = !DILocation(line: 99, column: 21, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7590, file: !1085, line: 97, column: 27)
!7594 = !DILocation(line: 99, column: 33, scope: !7593)
!7595 = !DILocation(line: 100, column: 5, scope: !7593)
!7596 = !DILocation(line: 100, column: 19, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7590, file: !1085, line: 100, column: 16)
!7598 = !DILocation(line: 100, column: 16, scope: !7590)
!7599 = !DILocation(line: 102, column: 21, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7597, file: !1085, line: 100, column: 27)
!7601 = !DILocation(line: 102, column: 33, scope: !7600)
!7602 = !DILocation(line: 103, column: 5, scope: !7600)
!7603 = !DILocation(line: 103, column: 19, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7597, file: !1085, line: 103, column: 16)
!7605 = !DILocation(line: 103, column: 16, scope: !7597)
!7606 = !DILocation(line: 105, column: 21, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7604, file: !1085, line: 103, column: 28)
!7608 = !DILocation(line: 105, column: 33, scope: !7607)
!7609 = !DILocation(line: 106, column: 5, scope: !7607)
!7610 = !DILocation(line: 106, column: 19, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7604, file: !1085, line: 106, column: 16)
!7612 = !DILocation(line: 106, column: 16, scope: !7604)
!7613 = !DILocation(line: 108, column: 26, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7611, file: !1085, line: 106, column: 28)
!7615 = !DILocation(line: 109, column: 5, scope: !7614)
!7616 = !DILocation(line: 109, column: 19, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7611, file: !1085, line: 109, column: 16)
!7618 = !DILocation(line: 109, column: 16, scope: !7611)
!7619 = !DILocation(line: 111, column: 21, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7617, file: !1085, line: 109, column: 28)
!7621 = !DILocation(line: 111, column: 33, scope: !7620)
!7622 = !DILocation(line: 112, column: 5, scope: !7620)
!7623 = !DILocation(line: 112, column: 19, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7617, file: !1085, line: 112, column: 16)
!7625 = !DILocation(line: 112, column: 16, scope: !7617)
!7626 = !DILocation(line: 114, column: 21, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7624, file: !1085, line: 112, column: 28)
!7628 = !DILocation(line: 114, column: 33, scope: !7627)
!7629 = !DILocation(line: 115, column: 5, scope: !7627)
!7630 = !DILocation(line: 0, scope: !7574)
!7631 = !DILocation(line: 0, scope: !7583)
!7632 = !DILocation(line: 121, column: 9, scope: !7567)
!7633 = !DILocation(line: 125, column: 43, scope: !7567)
!7634 = !DILocation(line: 127, column: 5, scope: !7567)
!7635 = distinct !DISubprogram(name: "eint_get_status", scope: !1085, file: !1085, line: 72, type: !4512, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !345)
!7636 = !DILocation(line: 74, column: 13, scope: !7635)
!7637 = !DILocation(line: 74, column: 28, scope: !7635)
!7638 = !DILocation(line: 74, column: 5, scope: !7635)
!7639 = distinct !DISubprogram(name: "hal_eint_mask", scope: !1085, file: !1085, line: 373, type: !7640, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7642)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{!1153, !1146}
!7642 = !{!7643, !7644}
!7643 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7639, file: !1085, line: 373, type: !1146)
!7644 = !DILocalVariable(name: "mask", scope: !7639, file: !1085, line: 375, type: !61)
!7645 = !DILocation(line: 0, scope: !7639)
!7646 = !DILocation(line: 376, column: 21, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7639, file: !1085, line: 376, column: 9)
!7648 = !DILocation(line: 376, column: 9, scope: !7639)
!7649 = !DILocation(line: 380, column: 12, scope: !7639)
!7650 = !DILocation(line: 381, column: 40, scope: !7639)
!7651 = !DILocation(line: 381, column: 5, scope: !7639)
!7652 = !DILocation(line: 381, column: 20, scope: !7639)
!7653 = !DILocation(line: 381, column: 34, scope: !7639)
!7654 = !DILocation(line: 382, column: 5, scope: !7639)
!7655 = !DILocation(line: 383, column: 5, scope: !7639)
!7656 = !DILocation(line: 384, column: 5, scope: !7639)
!7657 = !DILocation(line: 385, column: 1, scope: !7639)
!7658 = distinct !DISubprogram(name: "eint_mask_wakeup_source", scope: !1085, file: !1085, line: 344, type: !7640, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7659)
!7659 = !{!7660, !7661}
!7660 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7658, file: !1085, line: 344, type: !1146)
!7661 = !DILocalVariable(name: "mask", scope: !7658, file: !1085, line: 346, type: !61)
!7662 = !DILocation(line: 0, scope: !7658)
!7663 = !DILocation(line: 347, column: 21, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7658, file: !1085, line: 347, column: 9)
!7665 = !DILocation(line: 347, column: 9, scope: !7658)
!7666 = !DILocation(line: 351, column: 12, scope: !7658)
!7667 = !DILocation(line: 352, column: 47, scope: !7658)
!7668 = !DILocation(line: 352, column: 5, scope: !7658)
!7669 = !DILocation(line: 352, column: 20, scope: !7658)
!7670 = !DILocation(line: 352, column: 41, scope: !7658)
!7671 = !DILocation(line: 353, column: 5, scope: !7658)
!7672 = !DILocation(line: 354, column: 5, scope: !7658)
!7673 = !DILocation(line: 355, column: 1, scope: !7658)
!7674 = distinct !DISubprogram(name: "hal_eint_deinit", scope: !1085, file: !1085, line: 160, type: !7640, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7675)
!7675 = !{!7676, !7677}
!7676 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7674, file: !1085, line: 160, type: !1146)
!7677 = !DILocalVariable(name: "mask", scope: !7674, file: !1085, line: 162, type: !61)
!7678 = !DILocation(line: 0, scope: !7674)
!7679 = !DILocation(line: 164, column: 21, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7674, file: !1085, line: 164, column: 9)
!7681 = !DILocation(line: 164, column: 9, scope: !7674)
!7682 = !DILocation(line: 168, column: 12, scope: !7674)
!7683 = !DILocation(line: 169, column: 38, scope: !7674)
!7684 = !DILocation(line: 169, column: 52, scope: !7674)
!7685 = !DILocation(line: 170, column: 38, scope: !7674)
!7686 = !DILocation(line: 170, column: 48, scope: !7674)
!7687 = !DILocation(line: 172, column: 5, scope: !7674)
!7688 = !DILocation(line: 173, column: 5, scope: !7674)
!7689 = !DILocation(line: 174, column: 5, scope: !7674)
!7690 = !DILocation(line: 175, column: 5, scope: !7674)
!7691 = !DILocation(line: 176, column: 1, scope: !7674)
!7692 = distinct !DISubprogram(name: "hal_eint_register_callback", scope: !1085, file: !1085, line: 178, type: !7693, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7696)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!1153, !1146, !7695, !88}
!7695 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_callback_t", file: !1088, line: 241, baseType: !152)
!7696 = !{!7697, !7698, !7699, !7700}
!7697 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7692, file: !1085, line: 178, type: !1146)
!7698 = !DILocalVariable(name: "eint_callback", arg: 2, scope: !7692, file: !1085, line: 179, type: !7695)
!7699 = !DILocalVariable(name: "user_data", arg: 3, scope: !7692, file: !1085, line: 180, type: !88)
!7700 = !DILocalVariable(name: "mask", scope: !7692, file: !1085, line: 182, type: !61)
!7701 = !DILocation(line: 0, scope: !7692)
!7702 = !DILocation(line: 184, column: 21, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7692, file: !1085, line: 184, column: 9)
!7704 = !DILocation(line: 184, column: 44, scope: !7703)
!7705 = !DILocation(line: 188, column: 12, scope: !7692)
!7706 = !DILocation(line: 189, column: 38, scope: !7692)
!7707 = !DILocation(line: 189, column: 52, scope: !7692)
!7708 = !DILocation(line: 190, column: 38, scope: !7692)
!7709 = !DILocation(line: 190, column: 48, scope: !7692)
!7710 = !DILocation(line: 191, column: 5, scope: !7692)
!7711 = !DILocation(line: 192, column: 5, scope: !7692)
!7712 = !DILocation(line: 193, column: 1, scope: !7692)
!7713 = distinct !DISubprogram(name: "hal_eint_set_debounce_count", scope: !1085, file: !1085, line: 273, type: !7514, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7714)
!7714 = !{!7715, !7716, !7717, !7718, !7719}
!7715 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7713, file: !1085, line: 273, type: !1146)
!7716 = !DILocalVariable(name: "count", arg: 2, scope: !7713, file: !1085, line: 273, type: !61)
!7717 = !DILocalVariable(name: "mask", scope: !7713, file: !1085, line: 275, type: !61)
!7718 = !DILocalVariable(name: "eint_con", scope: !7713, file: !1085, line: 275, type: !61)
!7719 = !DILocalVariable(name: "prescaler", scope: !7713, file: !1085, line: 276, type: !61)
!7720 = !DILocation(line: 0, scope: !7713)
!7721 = !DILocation(line: 278, column: 21, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7713, file: !1085, line: 278, column: 9)
!7723 = !DILocation(line: 278, column: 9, scope: !7713)
!7724 = !DILocation(line: 289, column: 12, scope: !7713)
!7725 = !DILocation(line: 290, column: 16, scope: !7713)
!7726 = !DILocation(line: 290, column: 66, scope: !7713)
!7727 = !DILocation(line: 291, column: 14, scope: !7713)
!7728 = !DILocation(line: 292, column: 14, scope: !7713)
!7729 = !DILocation(line: 293, column: 5, scope: !7713)
!7730 = !DILocation(line: 295, column: 15, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7713, file: !1085, line: 295, column: 9)
!7732 = !DILocation(line: 295, column: 9, scope: !7713)
!7733 = !DILocation(line: 297, column: 18, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7731, file: !1085, line: 295, column: 21)
!7735 = !DILocation(line: 298, column: 9, scope: !7734)
!7736 = !DILocation(line: 298, column: 59, scope: !7734)
!7737 = !DILocation(line: 298, column: 70, scope: !7734)
!7738 = !DILocation(line: 300, column: 5, scope: !7734)
!7739 = !DILocation(line: 302, column: 81, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7731, file: !1085, line: 300, column: 12)
!7741 = !DILocation(line: 302, column: 9, scope: !7740)
!7742 = !DILocation(line: 302, column: 59, scope: !7740)
!7743 = !DILocation(line: 302, column: 70, scope: !7740)
!7744 = !DILocation(line: 303, column: 9, scope: !7740)
!7745 = !DILocation(line: 306, column: 30, scope: !7740)
!7746 = !DILocation(line: 308, column: 9, scope: !7740)
!7747 = !DILocation(line: 308, column: 59, scope: !7740)
!7748 = !DILocation(line: 308, column: 70, scope: !7740)
!7749 = !DILocation(line: 309, column: 9, scope: !7740)
!7750 = !DILocation(line: 309, column: 59, scope: !7740)
!7751 = !DILocation(line: 309, column: 70, scope: !7740)
!7752 = !DILocation(line: 314, column: 1, scope: !7713)
!7753 = distinct !DISubprogram(name: "hal_eint_set_software_trigger", scope: !1085, file: !1085, line: 316, type: !7640, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7754)
!7754 = !{!7755, !7756}
!7755 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7753, file: !1085, line: 316, type: !1146)
!7756 = !DILocalVariable(name: "mask", scope: !7753, file: !1085, line: 318, type: !61)
!7757 = !DILocation(line: 0, scope: !7753)
!7758 = !DILocation(line: 320, column: 21, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7753, file: !1085, line: 320, column: 9)
!7760 = !DILocation(line: 320, column: 9, scope: !7753)
!7761 = !DILocation(line: 324, column: 12, scope: !7753)
!7762 = !DILocation(line: 325, column: 40, scope: !7753)
!7763 = !DILocation(line: 325, column: 5, scope: !7753)
!7764 = !DILocation(line: 325, column: 20, scope: !7753)
!7765 = !DILocation(line: 325, column: 34, scope: !7753)
!7766 = !DILocation(line: 326, column: 5, scope: !7753)
!7767 = !DILocation(line: 327, column: 5, scope: !7753)
!7768 = !DILocation(line: 328, column: 1, scope: !7753)
!7769 = distinct !DISubprogram(name: "hal_eint_clear_software_trigger", scope: !1085, file: !1085, line: 330, type: !7640, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7770)
!7770 = !{!7771, !7772}
!7771 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7769, file: !1085, line: 330, type: !1146)
!7772 = !DILocalVariable(name: "mask", scope: !7769, file: !1085, line: 332, type: !61)
!7773 = !DILocation(line: 0, scope: !7769)
!7774 = !DILocation(line: 334, column: 21, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7769, file: !1085, line: 334, column: 9)
!7776 = !DILocation(line: 334, column: 9, scope: !7769)
!7777 = !DILocation(line: 338, column: 12, scope: !7769)
!7778 = !DILocation(line: 339, column: 40, scope: !7769)
!7779 = !DILocation(line: 339, column: 5, scope: !7769)
!7780 = !DILocation(line: 339, column: 20, scope: !7769)
!7781 = !DILocation(line: 339, column: 34, scope: !7769)
!7782 = !DILocation(line: 340, column: 5, scope: !7769)
!7783 = !DILocation(line: 341, column: 5, scope: !7769)
!7784 = !DILocation(line: 342, column: 1, scope: !7769)
!7785 = distinct !DISubprogram(name: "eint_unmask_wakeup_source", scope: !1085, file: !1085, line: 357, type: !7640, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7786)
!7786 = !{!7787, !7788}
!7787 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7785, file: !1085, line: 357, type: !1146)
!7788 = !DILocalVariable(name: "mask", scope: !7785, file: !1085, line: 359, type: !61)
!7789 = !DILocation(line: 0, scope: !7785)
!7790 = !DILocation(line: 361, column: 21, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7785, file: !1085, line: 361, column: 9)
!7792 = !DILocation(line: 361, column: 9, scope: !7785)
!7793 = !DILocation(line: 365, column: 12, scope: !7785)
!7794 = !DILocation(line: 366, column: 47, scope: !7785)
!7795 = !DILocation(line: 366, column: 5, scope: !7785)
!7796 = !DILocation(line: 366, column: 20, scope: !7785)
!7797 = !DILocation(line: 366, column: 41, scope: !7785)
!7798 = !DILocation(line: 367, column: 5, scope: !7785)
!7799 = !DILocation(line: 368, column: 5, scope: !7785)
!7800 = !DILocation(line: 369, column: 1, scope: !7785)
!7801 = distinct !DISubprogram(name: "hal_eint_unmask", scope: !1085, file: !1085, line: 387, type: !7640, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1084, retainedNodes: !7802)
!7802 = !{!7803, !7804}
!7803 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7801, file: !1085, line: 387, type: !1146)
!7804 = !DILocalVariable(name: "mask", scope: !7801, file: !1085, line: 389, type: !61)
!7805 = !DILocation(line: 0, scope: !7801)
!7806 = !DILocation(line: 391, column: 21, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7801, file: !1085, line: 391, column: 9)
!7808 = !DILocation(line: 391, column: 9, scope: !7801)
!7809 = !DILocation(line: 395, column: 12, scope: !7801)
!7810 = !DILocation(line: 396, column: 40, scope: !7801)
!7811 = !DILocation(line: 396, column: 5, scope: !7801)
!7812 = !DILocation(line: 396, column: 20, scope: !7801)
!7813 = !DILocation(line: 396, column: 34, scope: !7801)
!7814 = !DILocation(line: 397, column: 5, scope: !7801)
!7815 = !DILocation(line: 398, column: 5, scope: !7801)
!7816 = !DILocation(line: 399, column: 5, scope: !7801)
!7817 = !DILocation(line: 400, column: 1, scope: !7801)
!7818 = !DILocation(line: 131, column: 9, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !1248, file: !1249, line: 131, column: 9)
!7820 = !DILocation(line: 131, column: 9, scope: !1248)
!7821 = !DILocation(line: 0, scope: !1248)
!7822 = !DILocation(line: 134, column: 49, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !1249, line: 133, column: 46)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !1249, line: 133, column: 9)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !1249, line: 133, column: 9)
!7826 = distinct !DILexicalBlock(scope: !7819, file: !1249, line: 131, column: 28)
!7827 = !DILocation(line: 134, column: 13, scope: !7823)
!7828 = !DILocation(line: 133, column: 42, scope: !7824)
!7829 = !DILocation(line: 133, column: 23, scope: !7824)
!7830 = !DILocation(line: 133, column: 9, scope: !7825)
!7831 = distinct !{!7831, !7830, !7832}
!7832 = !DILocation(line: 135, column: 9, scope: !7825)
!7833 = !DILocation(line: 136, column: 22, scope: !7826)
!7834 = !DILocation(line: 137, column: 5, scope: !7826)
!7835 = !DILocation(line: 138, column: 5, scope: !1248)
!7836 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1258, file: !1258, line: 1577, type: !7837, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7839)
!7837 = !DISubroutineType(types: !7838)
!7838 = !{null, !951, !61}
!7839 = !{!7840, !7841}
!7840 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7836, file: !1258, line: 1577, type: !951)
!7841 = !DILocalVariable(name: "priority", arg: 2, scope: !7836, file: !1258, line: 1577, type: !61)
!7842 = !DILocation(line: 0, scope: !7836)
!7843 = !DILocation(line: 1582, column: 34, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !1258, line: 1581, column: 8)
!7845 = distinct !DILexicalBlock(scope: !7836, file: !1258, line: 1579, column: 6)
!7846 = !DILocation(line: 1582, column: 5, scope: !7844)
!7847 = !DILocation(line: 1582, column: 32, scope: !7844)
!7848 = !DILocation(line: 1583, column: 1, scope: !7836)
!7849 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1249, file: !1249, line: 141, type: !7850, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7852)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!1252, !950}
!7852 = !{!7853, !7854}
!7853 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7849, file: !1249, line: 141, type: !950)
!7854 = !DILocalVariable(name: "status", scope: !7849, file: !1249, line: 143, type: !1252)
!7855 = !DILocation(line: 0, scope: !7849)
!7856 = !DILocation(line: 145, column: 40, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7849, file: !1249, line: 145, column: 9)
!7858 = !DILocation(line: 149, column: 9, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7857, file: !1249, line: 148, column: 12)
!7860 = !DILocation(line: 153, column: 5, scope: !7849)
!7861 = !DILocation(line: 154, column: 1, scope: !7849)
!7862 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1258, file: !1258, line: 1494, type: !7863, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7865)
!7863 = !DISubroutineType(types: !7864)
!7864 = !{null, !951}
!7865 = !{!7866}
!7866 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7862, file: !1258, line: 1494, type: !951)
!7867 = !DILocation(line: 0, scope: !7862)
!7868 = !DILocation(line: 1497, column: 91, scope: !7862)
!7869 = !DILocation(line: 1497, column: 61, scope: !7862)
!7870 = !DILocation(line: 1497, column: 40, scope: !7862)
!7871 = !DILocation(line: 1497, column: 3, scope: !7862)
!7872 = !DILocation(line: 1497, column: 46, scope: !7862)
!7873 = !DILocation(line: 1498, column: 1, scope: !7862)
!7874 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1249, file: !1249, line: 156, type: !7850, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7875)
!7875 = !{!7876, !7877}
!7876 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7874, file: !1249, line: 156, type: !950)
!7877 = !DILocalVariable(name: "status", scope: !7874, file: !1249, line: 158, type: !1252)
!7878 = !DILocation(line: 0, scope: !7874)
!7879 = !DILocation(line: 160, column: 40, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7874, file: !1249, line: 160, column: 9)
!7881 = !DILocation(line: 164, column: 9, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7880, file: !1249, line: 163, column: 12)
!7883 = !DILocation(line: 168, column: 5, scope: !7874)
!7884 = !DILocation(line: 169, column: 1, scope: !7874)
!7885 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1258, file: !1258, line: 1507, type: !7863, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7886)
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7885, file: !1258, line: 1507, type: !951)
!7888 = !DILocation(line: 0, scope: !7885)
!7889 = !DILocation(line: 1509, column: 65, scope: !7885)
!7890 = !DILocation(line: 1509, column: 44, scope: !7885)
!7891 = !DILocation(line: 1509, column: 32, scope: !7885)
!7892 = !DILocation(line: 1509, column: 3, scope: !7885)
!7893 = !DILocation(line: 1509, column: 39, scope: !7885)
!7894 = !DILocation(line: 1510, column: 1, scope: !7885)
!7895 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1249, file: !1249, line: 171, type: !7896, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!61, !950}
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7895, file: !1249, line: 171, type: !950)
!7900 = !DILocalVariable(name: "ret", scope: !7895, file: !1249, line: 173, type: !61)
!7901 = !DILocation(line: 0, scope: !7895)
!7902 = !DILocation(line: 175, column: 40, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7895, file: !1249, line: 175, column: 9)
!7904 = !DILocation(line: 178, column: 15, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7903, file: !1249, line: 177, column: 12)
!7906 = !DILocation(line: 181, column: 5, scope: !7895)
!7907 = !DILocation(line: 182, column: 1, scope: !7895)
!7908 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1258, file: !1258, line: 1523, type: !7909, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7911)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!61, !951}
!7911 = !{!7912}
!7912 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7908, file: !1258, line: 1523, type: !951)
!7913 = !DILocation(line: 0, scope: !7908)
!7914 = !DILocation(line: 1525, column: 51, scope: !7908)
!7915 = !DILocation(line: 1525, column: 23, scope: !7908)
!7916 = !DILocation(line: 1525, column: 83, scope: !7908)
!7917 = !DILocation(line: 1525, column: 22, scope: !7908)
!7918 = !DILocation(line: 1525, column: 3, scope: !7908)
!7919 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1249, file: !1249, line: 184, type: !7850, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7920)
!7920 = !{!7921, !7922}
!7921 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7919, file: !1249, line: 184, type: !950)
!7922 = !DILocalVariable(name: "status", scope: !7919, file: !1249, line: 186, type: !1252)
!7923 = !DILocation(line: 0, scope: !7919)
!7924 = !DILocation(line: 188, column: 40, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7919, file: !1249, line: 188, column: 9)
!7926 = !DILocation(line: 192, column: 9, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7925, file: !1249, line: 191, column: 12)
!7928 = !DILocation(line: 196, column: 5, scope: !7919)
!7929 = !DILocation(line: 197, column: 1, scope: !7919)
!7930 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1258, file: !1258, line: 1535, type: !7863, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7931)
!7931 = !{!7932}
!7932 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7930, file: !1258, line: 1535, type: !951)
!7933 = !DILocation(line: 0, scope: !7930)
!7934 = !DILocation(line: 1537, column: 65, scope: !7930)
!7935 = !DILocation(line: 1537, column: 44, scope: !7930)
!7936 = !DILocation(line: 1537, column: 32, scope: !7930)
!7937 = !DILocation(line: 1537, column: 3, scope: !7930)
!7938 = !DILocation(line: 1537, column: 39, scope: !7930)
!7939 = !DILocation(line: 1538, column: 1, scope: !7930)
!7940 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1249, file: !1249, line: 199, type: !7850, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7941)
!7941 = !{!7942, !7943}
!7942 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7940, file: !1249, line: 199, type: !950)
!7943 = !DILocalVariable(name: "status", scope: !7940, file: !1249, line: 201, type: !1252)
!7944 = !DILocation(line: 0, scope: !7940)
!7945 = !DILocation(line: 203, column: 40, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7940, file: !1249, line: 203, column: 9)
!7947 = !DILocation(line: 207, column: 9, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7946, file: !1249, line: 206, column: 12)
!7949 = !DILocation(line: 211, column: 5, scope: !7940)
!7950 = !DILocation(line: 212, column: 1, scope: !7940)
!7951 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1258, file: !1258, line: 1547, type: !7863, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7952)
!7952 = !{!7953}
!7953 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7951, file: !1258, line: 1547, type: !951)
!7954 = !DILocation(line: 0, scope: !7951)
!7955 = !DILocation(line: 1549, column: 65, scope: !7951)
!7956 = !DILocation(line: 1549, column: 44, scope: !7951)
!7957 = !DILocation(line: 1549, column: 32, scope: !7951)
!7958 = !DILocation(line: 1549, column: 3, scope: !7951)
!7959 = !DILocation(line: 1549, column: 39, scope: !7951)
!7960 = !DILocation(line: 1550, column: 1, scope: !7951)
!7961 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1249, file: !1249, line: 214, type: !7962, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7964)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!1252, !950, !61}
!7964 = !{!7965, !7966, !7967}
!7965 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7961, file: !1249, line: 214, type: !950)
!7966 = !DILocalVariable(name: "priority", arg: 2, scope: !7961, file: !1249, line: 214, type: !61)
!7967 = !DILocalVariable(name: "status", scope: !7961, file: !1249, line: 216, type: !1252)
!7968 = !DILocation(line: 0, scope: !7961)
!7969 = !DILocation(line: 218, column: 40, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7961, file: !1249, line: 218, column: 9)
!7971 = !DILocation(line: 222, column: 9, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7970, file: !1249, line: 221, column: 12)
!7973 = !DILocation(line: 226, column: 5, scope: !7961)
!7974 = !DILocation(line: 227, column: 1, scope: !7961)
!7975 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1249, file: !1249, line: 229, type: !7896, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7976)
!7976 = !{!7977, !7978}
!7977 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7975, file: !1249, line: 229, type: !950)
!7978 = !DILocalVariable(name: "ret", scope: !7975, file: !1249, line: 231, type: !61)
!7979 = !DILocation(line: 0, scope: !7975)
!7980 = !DILocation(line: 233, column: 40, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7975, file: !1249, line: 233, column: 9)
!7982 = !DILocation(line: 236, column: 15, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7981, file: !1249, line: 235, column: 12)
!7984 = !DILocation(line: 239, column: 5, scope: !7975)
!7985 = !DILocation(line: 240, column: 1, scope: !7975)
!7986 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1258, file: !1258, line: 1597, type: !7909, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7987)
!7987 = !{!7988}
!7988 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7986, file: !1258, line: 1597, type: !951)
!7989 = !DILocation(line: 0, scope: !7986)
!7990 = !DILocation(line: 1603, column: 23, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7992, file: !1258, line: 1602, column: 8)
!7992 = distinct !DILexicalBlock(scope: !7986, file: !1258, line: 1600, column: 6)
!7993 = !DILocation(line: 1603, column: 60, scope: !7991)
!7994 = !DILocation(line: 1604, column: 1, scope: !7986)
!7995 = distinct !DISubprogram(name: "isrC_main", scope: !1249, file: !1249, line: 248, type: !1250, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !7996)
!7996 = !{!7997, !7998}
!7997 = !DILocalVariable(name: "status", scope: !7995, file: !1249, line: 250, type: !1252)
!7998 = !DILocalVariable(name: "irq_number", scope: !7995, file: !1249, line: 251, type: !950)
!7999 = !DILocation(line: 0, scope: !7995)
!8000 = !DILocation(line: 253, column: 5, scope: !7995)
!8001 = !DILocation(line: 255, column: 35, scope: !7995)
!8002 = !DILocation(line: 256, column: 40, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7995, file: !1249, line: 256, column: 9)
!8004 = !DILocation(line: 259, column: 48, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8003, file: !1249, line: 259, column: 16)
!8006 = !DILocation(line: 259, column: 62, scope: !8005)
!8007 = !DILocation(line: 259, column: 16, scope: !8003)
!8008 = !DILocation(line: 261, column: 9, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8005, file: !1249, line: 259, column: 71)
!8010 = !DILocation(line: 262, column: 9, scope: !8009)
!8011 = !DILocation(line: 264, column: 55, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8005, file: !1249, line: 263, column: 12)
!8013 = !DILocation(line: 264, column: 41, scope: !8012)
!8014 = !DILocation(line: 264, column: 53, scope: !8012)
!8015 = !DILocation(line: 265, column: 41, scope: !8012)
!8016 = !DILocation(line: 265, column: 9, scope: !8012)
!8017 = !DILocation(line: 269, column: 5, scope: !7995)
!8018 = !DILocation(line: 270, column: 1, scope: !7995)
!8019 = distinct !DISubprogram(name: "get_current_irq", scope: !1249, file: !1249, line: 242, type: !4512, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !8020)
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "irq_num", scope: !8019, file: !1249, line: 244, type: !61)
!8022 = !DILocation(line: 244, column: 31, scope: !8019)
!8023 = !DILocation(line: 244, column: 36, scope: !8019)
!8024 = !DILocation(line: 0, scope: !8019)
!8025 = !DILocation(line: 245, column: 21, scope: !8019)
!8026 = !DILocation(line: 245, column: 5, scope: !8019)
!8027 = distinct !DISubprogram(name: "get_pending_irq", scope: !1249, file: !1249, line: 121, type: !4512, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !345)
!8028 = !DILocation(line: 123, column: 19, scope: !8027)
!8029 = !DILocation(line: 123, column: 51, scope: !8027)
!8030 = !DILocation(line: 123, column: 5, scope: !8027)
!8031 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1249, file: !1249, line: 272, type: !8032, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !8034)
!8032 = !DISubroutineType(types: !8033)
!8033 = !{!1252, !950, !1142}
!8034 = !{!8035, !8036, !8037}
!8035 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8031, file: !1249, line: 272, type: !950)
!8036 = !DILocalVariable(name: "callback", arg: 2, scope: !8031, file: !1249, line: 272, type: !1142)
!8037 = !DILocalVariable(name: "mask", scope: !8031, file: !1249, line: 274, type: !61)
!8038 = !DILocation(line: 0, scope: !8031)
!8039 = !DILocation(line: 276, column: 40, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8031, file: !1249, line: 276, column: 9)
!8041 = !DILocation(line: 280, column: 12, scope: !8031)
!8042 = !DILocation(line: 281, column: 5, scope: !8031)
!8043 = !DILocation(line: 282, column: 37, scope: !8031)
!8044 = !DILocation(line: 282, column: 51, scope: !8031)
!8045 = !DILocation(line: 283, column: 37, scope: !8031)
!8046 = !DILocation(line: 283, column: 49, scope: !8031)
!8047 = !DILocation(line: 284, column: 5, scope: !8031)
!8048 = !DILocation(line: 286, column: 5, scope: !8031)
!8049 = !DILocation(line: 287, column: 1, scope: !8031)
!8050 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1249, file: !1249, line: 289, type: !8051, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !8053)
!8051 = !DISubroutineType(types: !8052)
!8052 = !{!1252, !1541}
!8053 = !{!8054}
!8054 = !DILocalVariable(name: "mask", arg: 1, scope: !8050, file: !1249, line: 289, type: !1541)
!8055 = !DILocation(line: 0, scope: !8050)
!8056 = !DILocation(line: 291, column: 13, scope: !8050)
!8057 = !DILocation(line: 291, column: 11, scope: !8050)
!8058 = !DILocation(line: 292, column: 5, scope: !8050)
!8059 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1249, file: !1249, line: 295, type: !8060, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1253, retainedNodes: !8062)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!1252, !61}
!8062 = !{!8063}
!8063 = !DILocalVariable(name: "mask", arg: 1, scope: !8059, file: !1249, line: 295, type: !61)
!8064 = !DILocation(line: 0, scope: !8059)
!8065 = !DILocation(line: 297, column: 5, scope: !8059)
!8066 = !DILocation(line: 298, column: 5, scope: !8059)
!8067 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !3206, file: !3206, line: 51, type: !4512, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8068)
!8068 = !{!8069, !8070}
!8069 = !DILocalVariable(name: "mask", scope: !8067, file: !3206, line: 53, type: !61)
!8070 = !DILocalVariable(name: "priority", scope: !8067, file: !3206, line: 55, type: !61)
!8071 = !DILocation(line: 521, column: 3, scope: !8072, inlinedAt: !8076)
!8072 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !8073, file: !8073, line: 517, type: !4512, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8074)
!8073 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!8074 = !{!8075}
!8075 = !DILocalVariable(name: "result", scope: !8072, file: !8073, line: 519, type: !61)
!8076 = distinct !DILocation(line: 53, column: 21, scope: !8067)
!8077 = !{i64 457568}
!8078 = !DILocation(line: 0, scope: !8072, inlinedAt: !8076)
!8079 = !DILocation(line: 0, scope: !8067)
!8080 = !DILocalVariable(name: "value", arg: 1, scope: !8081, file: !8073, line: 532, type: !61)
!8081 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !8073, file: !8073, line: 532, type: !7382, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8082)
!8082 = !{!8080}
!8083 = !DILocation(line: 0, scope: !8081, inlinedAt: !8084)
!8084 = distinct !DILocation(line: 56, column: 5, scope: !8067)
!8085 = !DILocation(line: 534, column: 3, scope: !8081, inlinedAt: !8084)
!8086 = !{i64 457901}
!8087 = !DILocation(line: 456, column: 3, scope: !8088, inlinedAt: !8089)
!8088 = distinct !DISubprogram(name: "__DMB", scope: !3367, file: !3367, line: 454, type: !343, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !345)
!8089 = distinct !DILocation(line: 57, column: 5, scope: !8067)
!8090 = !{i64 430657}
!8091 = !DILocation(line: 434, column: 3, scope: !8092, inlinedAt: !8093)
!8092 = distinct !DISubprogram(name: "__ISB", scope: !3367, file: !3367, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !345)
!8093 = distinct !DILocation(line: 58, column: 5, scope: !8067)
!8094 = !{i64 430072}
!8095 = !DILocation(line: 59, column: 5, scope: !8067)
!8096 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !3206, file: !3206, line: 62, type: !7382, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8097)
!8097 = !{!8098}
!8098 = !DILocalVariable(name: "mask", arg: 1, scope: !8096, file: !3206, line: 62, type: !61)
!8099 = !DILocation(line: 0, scope: !8096)
!8100 = !DILocation(line: 0, scope: !8081, inlinedAt: !8101)
!8101 = distinct !DILocation(line: 64, column: 5, scope: !8096)
!8102 = !DILocation(line: 534, column: 3, scope: !8081, inlinedAt: !8101)
!8103 = !DILocation(line: 456, column: 3, scope: !8088, inlinedAt: !8104)
!8104 = distinct !DILocation(line: 65, column: 5, scope: !8096)
!8105 = !DILocation(line: 434, column: 3, scope: !8092, inlinedAt: !8106)
!8106 = distinct !DILocation(line: 66, column: 5, scope: !8096)
!8107 = !DILocation(line: 67, column: 1, scope: !8096)
!8108 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !3206, file: !3206, line: 69, type: !343, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8109)
!8109 = !{!8110, !8111}
!8110 = !DILocalVariable(name: "irq_number", scope: !8108, file: !3206, line: 71, type: !950)
!8111 = !DILocalVariable(name: "mask", scope: !8108, file: !3206, line: 72, type: !61)
!8112 = !DILocation(line: 72, column: 21, scope: !8108)
!8113 = !DILocation(line: 0, scope: !8108)
!8114 = !DILocation(line: 73, column: 5, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8108, file: !3206, line: 73, column: 5)
!8116 = !DILocation(line: 74, column: 9, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !3206, line: 73, column: 85)
!8118 = distinct !DILexicalBlock(scope: !8115, file: !3206, line: 73, column: 5)
!8119 = !DILocation(line: 73, column: 81, scope: !8118)
!8120 = !DILocation(line: 73, column: 53, scope: !8118)
!8121 = distinct !{!8121, !8114, !8122}
!8122 = !DILocation(line: 75, column: 5, scope: !8115)
!8123 = !DILocation(line: 76, column: 5, scope: !8108)
!8124 = !DILocation(line: 77, column: 1, scope: !8108)
!8125 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1258, file: !1258, line: 1507, type: !7863, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8126)
!8126 = !{!8127}
!8127 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8125, file: !1258, line: 1507, type: !951)
!8128 = !DILocation(line: 0, scope: !8125)
!8129 = !DILocation(line: 1509, column: 65, scope: !8125)
!8130 = !DILocation(line: 1509, column: 44, scope: !8125)
!8131 = !DILocation(line: 1509, column: 32, scope: !8125)
!8132 = !DILocation(line: 1509, column: 3, scope: !8125)
!8133 = !DILocation(line: 1509, column: 39, scope: !8125)
!8134 = !DILocation(line: 1510, column: 1, scope: !8125)
!8135 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !3206, file: !3206, line: 79, type: !343, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8136)
!8136 = !{!8137, !8138}
!8137 = !DILocalVariable(name: "irq_number", scope: !8135, file: !3206, line: 81, type: !950)
!8138 = !DILocalVariable(name: "mask", scope: !8135, file: !3206, line: 82, type: !61)
!8139 = !DILocation(line: 82, column: 21, scope: !8135)
!8140 = !DILocation(line: 0, scope: !8135)
!8141 = !DILocation(line: 84, column: 5, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8135, file: !3206, line: 84, column: 5)
!8143 = !DILocation(line: 85, column: 9, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !3206, line: 84, column: 85)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !3206, line: 84, column: 5)
!8146 = !DILocation(line: 84, column: 81, scope: !8145)
!8147 = !DILocation(line: 84, column: 53, scope: !8145)
!8148 = distinct !{!8148, !8141, !8149}
!8149 = !DILocation(line: 86, column: 5, scope: !8142)
!8150 = !DILocation(line: 87, column: 5, scope: !8135)
!8151 = !DILocation(line: 88, column: 1, scope: !8135)
!8152 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1258, file: !1258, line: 1494, type: !7863, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8153)
!8153 = !{!8154}
!8154 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8152, file: !1258, line: 1494, type: !951)
!8155 = !DILocation(line: 0, scope: !8152)
!8156 = !DILocation(line: 1497, column: 91, scope: !8152)
!8157 = !DILocation(line: 1497, column: 61, scope: !8152)
!8158 = !DILocation(line: 1497, column: 40, scope: !8152)
!8159 = !DILocation(line: 1497, column: 3, scope: !8152)
!8160 = !DILocation(line: 1497, column: 46, scope: !8152)
!8161 = !DILocation(line: 1498, column: 1, scope: !8152)
!8162 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !3206, file: !3206, line: 90, type: !343, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8163)
!8163 = !{!8164}
!8164 = !DILocalVariable(name: "irq_number", scope: !8162, file: !3206, line: 92, type: !950)
!8165 = !DILocation(line: 0, scope: !8162)
!8166 = !DILocation(line: 93, column: 5, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8162, file: !3206, line: 93, column: 5)
!8168 = !DILocation(line: 94, column: 9, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3206, line: 93, column: 85)
!8170 = distinct !DILexicalBlock(scope: !8167, file: !3206, line: 93, column: 5)
!8171 = !DILocation(line: 93, column: 81, scope: !8170)
!8172 = !DILocation(line: 93, column: 53, scope: !8170)
!8173 = distinct !{!8173, !8166, !8174}
!8174 = !DILocation(line: 95, column: 5, scope: !8167)
!8175 = !DILocation(line: 96, column: 1, scope: !8162)
!8176 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1258, file: !1258, line: 1547, type: !7863, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8177)
!8177 = !{!8178}
!8178 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8176, file: !1258, line: 1547, type: !951)
!8179 = !DILocation(line: 0, scope: !8176)
!8180 = !DILocation(line: 1549, column: 65, scope: !8176)
!8181 = !DILocation(line: 1549, column: 44, scope: !8176)
!8182 = !DILocation(line: 1549, column: 32, scope: !8176)
!8183 = !DILocation(line: 1549, column: 3, scope: !8176)
!8184 = !DILocation(line: 1549, column: 39, scope: !8176)
!8185 = !DILocation(line: 1550, column: 1, scope: !8176)
!8186 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !3206, file: !3206, line: 98, type: !7850, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8187)
!8187 = !{!8188}
!8188 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8186, file: !3206, line: 98, type: !950)
!8189 = !DILocation(line: 0, scope: !8186)
!8190 = !DILocation(line: 100, column: 24, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8186, file: !3206, line: 100, column: 9)
!8192 = !DILocation(line: 104, column: 5, scope: !8186)
!8193 = !DILocation(line: 105, column: 5, scope: !8186)
!8194 = !DILocation(line: 106, column: 1, scope: !8186)
!8195 = distinct !DISubprogram(name: "software_trigger_irq", scope: !3206, file: !3206, line: 45, type: !1144, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !8196)
!8196 = !{!8197}
!8197 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8195, file: !3206, line: 45, type: !950)
!8198 = !DILocation(line: 0, scope: !8195)
!8199 = !DILocation(line: 47, column: 54, scope: !8195)
!8200 = !DILocation(line: 47, column: 16, scope: !8195)
!8201 = !DILocation(line: 445, column: 3, scope: !8202, inlinedAt: !8203)
!8202 = distinct !DISubprogram(name: "__DSB", scope: !3367, file: !3367, line: 443, type: !343, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !345)
!8203 = distinct !DILocation(line: 48, column: 5, scope: !8195)
!8204 = !{i64 430368}
!8205 = !DILocation(line: 49, column: 1, scope: !8195)
!8206 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !3206, file: !3206, line: 114, type: !4512, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !345)
!8207 = !DILocation(line: 116, column: 19, scope: !8206)
!8208 = !DILocation(line: 116, column: 24, scope: !8206)
!8209 = !DILocation(line: 116, column: 5, scope: !8206)
!8210 = distinct !DISubprogram(name: "rtc_read_osc32con", scope: !1340, file: !1340, line: 186, type: !8211, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8213)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!1018}
!8213 = !{!8214}
!8214 = !DILocalVariable(name: "value", scope: !8210, file: !1340, line: 188, type: !1018)
!8215 = !DILocation(line: 190, column: 13, scope: !8210)
!8216 = !DILocation(line: 190, column: 27, scope: !8210)
!8217 = !DILocation(line: 0, scope: !8210)
!8218 = !DILocation(line: 191, column: 19, scope: !8210)
!8219 = !DILocation(line: 193, column: 30, scope: !8210)
!8220 = !DILocation(line: 194, column: 5, scope: !8210)
!8221 = !DILocation(line: 195, column: 5, scope: !8210)
!8222 = !DILocation(line: 197, column: 12, scope: !8210)
!8223 = !DILocation(line: 197, column: 26, scope: !8210)
!8224 = !DILocation(line: 197, column: 5, scope: !8210)
!8225 = distinct !DISubprogram(name: "rtc_write_trigger_wait", scope: !1340, file: !1340, line: 168, type: !343, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !345)
!8226 = !DILocation(line: 170, column: 5, scope: !8225)
!8227 = !DILocation(line: 171, column: 5, scope: !8225)
!8228 = !DILocation(line: 172, column: 1, scope: !8225)
!8229 = distinct !DISubprogram(name: "rtc_reload", scope: !1340, file: !1340, line: 174, type: !343, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8230)
!8230 = !{!8231}
!8231 = !DILocalVariable(name: "value", scope: !8229, file: !1340, line: 176, type: !1018)
!8232 = !DILocation(line: 178, column: 13, scope: !8229)
!8233 = !DILocation(line: 178, column: 27, scope: !8229)
!8234 = !DILocation(line: 0, scope: !8229)
!8235 = !DILocation(line: 180, column: 11, scope: !8229)
!8236 = !DILocation(line: 181, column: 11, scope: !8229)
!8237 = !DILocation(line: 182, column: 28, scope: !8229)
!8238 = !DILocation(line: 183, column: 5, scope: !8229)
!8239 = !DILocation(line: 184, column: 1, scope: !8229)
!8240 = distinct !DISubprogram(name: "rtc_write_trigger", scope: !1340, file: !1340, line: 163, type: !343, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !345)
!8241 = !DILocation(line: 165, column: 31, scope: !8240)
!8242 = !DILocation(line: 165, column: 45, scope: !8240)
!8243 = !DILocation(line: 165, column: 55, scope: !8240)
!8244 = !DILocation(line: 165, column: 29, scope: !8240)
!8245 = !DILocation(line: 166, column: 1, scope: !8240)
!8246 = distinct !DISubprogram(name: "rtc_wait_busy", scope: !1340, file: !1340, line: 131, type: !343, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8247)
!8247 = !{!8248}
!8248 = !DILocalVariable(name: "count", scope: !8246, file: !1340, line: 133, type: !61)
!8249 = !DILocation(line: 0, scope: !8246)
!8250 = !DILocation(line: 135, column: 5, scope: !8246)
!8251 = !DILocation(line: 139, column: 14, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8246, file: !1340, line: 135, column: 30)
!8253 = !DILocation(line: 135, column: 18, scope: !8246)
!8254 = distinct !{!8254, !8250, !8255}
!8255 = !DILocation(line: 140, column: 5, scope: !8246)
!8256 = !DILocation(line: 136, column: 45, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8252, file: !1340, line: 136, column: 13)
!8258 = !DILocation(line: 136, column: 29, scope: !8257)
!8259 = !DILocation(line: 136, column: 55, scope: !8257)
!8260 = !DILocation(line: 136, column: 13, scope: !8252)
!8261 = !DILocation(line: 143, column: 9, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !1340, line: 142, column: 28)
!8263 = distinct !DILexicalBlock(scope: !8246, file: !1340, line: 142, column: 9)
!8264 = !DILocation(line: 144, column: 9, scope: !8262)
!8265 = !DILocation(line: 149, column: 9, scope: !8262)
!8266 = !DILocation(line: 150, column: 9, scope: !8262)
!8267 = !DILocation(line: 151, column: 5, scope: !8262)
!8268 = !DILocation(line: 152, column: 1, scope: !8246)
!8269 = distinct !DISubprogram(name: "f32k_measure_clock", scope: !1340, file: !1340, line: 943, type: !8270, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8272)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!61, !1018, !1018, !1018}
!8272 = !{!8273, !8274, !8275, !8276, !8277, !8278}
!8273 = !DILocalVariable(name: "fixed_clock", arg: 1, scope: !8269, file: !1340, line: 943, type: !1018)
!8274 = !DILocalVariable(name: "tested_clock", arg: 2, scope: !8269, file: !1340, line: 943, type: !1018)
!8275 = !DILocalVariable(name: "window_setting", arg: 3, scope: !8269, file: !1340, line: 943, type: !1018)
!8276 = !DILocalVariable(name: "fqmtr_data", scope: !8269, file: !1340, line: 945, type: !61)
!8277 = !DILocalVariable(name: "frequency", scope: !8269, file: !1340, line: 946, type: !61)
!8278 = !DILocalVariable(name: "fqmtr_data_msb", scope: !8269, file: !1340, line: 947, type: !1018)
!8279 = !DILocation(line: 0, scope: !8269)
!8280 = !DILocation(line: 950, column: 5, scope: !8269)
!8281 = !DILocation(line: 950, column: 27, scope: !8269)
!8282 = !DILocation(line: 950, column: 44, scope: !8269)
!8283 = !DILocation(line: 953, column: 5, scope: !8269)
!8284 = !DILocation(line: 954, column: 5, scope: !8269)
!8285 = !DILocation(line: 954, column: 35, scope: !8269)
!8286 = !DILocation(line: 954, column: 62, scope: !8269)
!8287 = distinct !{!8287, !8284, !8288}
!8288 = !DILocation(line: 954, column: 67, scope: !8269)
!8289 = !DILocation(line: 956, column: 44, scope: !8269)
!8290 = !DILocation(line: 958, column: 59, scope: !8269)
!8291 = !DILocation(line: 958, column: 65, scope: !8269)
!8292 = !DILocation(line: 958, column: 44, scope: !8269)
!8293 = !DILocation(line: 959, column: 27, scope: !8269)
!8294 = !DILocation(line: 959, column: 44, scope: !8269)
!8295 = !DILocation(line: 961, column: 53, scope: !8269)
!8296 = !DILocation(line: 961, column: 27, scope: !8269)
!8297 = !DILocation(line: 961, column: 44, scope: !8269)
!8298 = !DILocation(line: 962, column: 5, scope: !8269)
!8299 = !DILocation(line: 964, column: 5, scope: !8269)
!8300 = !DILocation(line: 964, column: 35, scope: !8269)
!8301 = !DILocation(line: 964, column: 62, scope: !8269)
!8302 = distinct !{!8302, !8299, !8303}
!8303 = !DILocation(line: 964, column: 67, scope: !8269)
!8304 = !DILocation(line: 961, column: 55, scope: !8269)
!8305 = !DILocation(line: 966, column: 44, scope: !8269)
!8306 = !DILocation(line: 967, column: 19, scope: !8269)
!8307 = !DILocation(line: 967, column: 44, scope: !8269)
!8308 = !DILocation(line: 967, column: 75, scope: !8269)
!8309 = !DILocation(line: 967, column: 53, scope: !8269)
!8310 = !DILocation(line: 967, column: 51, scope: !8269)
!8311 = !DILocation(line: 969, column: 26, scope: !8269)
!8312 = !DILocation(line: 969, column: 49, scope: !8269)
!8313 = !DILocation(line: 977, column: 5, scope: !8269)
!8314 = distinct !DISubprogram(name: "rtc_dump_register", scope: !1340, file: !1340, line: 544, type: !8315, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8317)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{null, !776}
!8317 = !{!8318, !8319, !8320, !8321, !8322, !8323, !8324}
!8318 = !DILocalVariable(name: "tag", arg: 1, scope: !8314, file: !1340, line: 544, type: !776)
!8319 = !DILocalVariable(name: "value_key1", scope: !8314, file: !1340, line: 546, type: !1018)
!8320 = !DILocalVariable(name: "value_key2", scope: !8314, file: !1340, line: 546, type: !1018)
!8321 = !DILocalVariable(name: "value_diff", scope: !8314, file: !1340, line: 546, type: !1018)
!8322 = !DILocalVariable(name: "value_con", scope: !8314, file: !1340, line: 546, type: !1018)
!8323 = !DILocalVariable(name: "value_bbpu", scope: !8314, file: !1340, line: 546, type: !1018)
!8324 = !DILocalVariable(name: "value_sec", scope: !8314, file: !1340, line: 546, type: !1018)
!8325 = !DILocation(line: 0, scope: !8314)
!8326 = !DILocation(line: 547, column: 5, scope: !8314)
!8327 = !DILocation(line: 548, column: 18, scope: !8314)
!8328 = !DILocation(line: 548, column: 32, scope: !8314)
!8329 = !DILocation(line: 549, column: 32, scope: !8314)
!8330 = !DILocation(line: 550, column: 32, scope: !8314)
!8331 = !DILocation(line: 551, column: 31, scope: !8314)
!8332 = !DILocation(line: 552, column: 32, scope: !8314)
!8333 = !DILocation(line: 553, column: 31, scope: !8314)
!8334 = !DILocation(line: 554, column: 5, scope: !8314)
!8335 = !DILocation(line: 556, column: 5, scope: !8314)
!8336 = !DILocation(line: 560, column: 1, scope: !8314)
!8337 = distinct !DISubprogram(name: "rtc_read_osc32con1", scope: !1340, file: !1340, line: 210, type: !8211, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8338)
!8338 = !{!8339}
!8339 = !DILocalVariable(name: "value", scope: !8337, file: !1340, line: 212, type: !1018)
!8340 = !DILocation(line: 214, column: 13, scope: !8337)
!8341 = !DILocation(line: 214, column: 27, scope: !8337)
!8342 = !DILocation(line: 0, scope: !8337)
!8343 = !DILocation(line: 215, column: 19, scope: !8337)
!8344 = !DILocation(line: 216, column: 19, scope: !8337)
!8345 = !DILocation(line: 217, column: 30, scope: !8337)
!8346 = !DILocation(line: 218, column: 5, scope: !8337)
!8347 = !DILocation(line: 219, column: 5, scope: !8337)
!8348 = !DILocation(line: 221, column: 12, scope: !8337)
!8349 = !DILocation(line: 221, column: 26, scope: !8337)
!8350 = !DILocation(line: 221, column: 5, scope: !8337)
!8351 = distinct !DISubprogram(name: "rtc_read_osc32con2", scope: !1340, file: !1340, line: 234, type: !8211, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8352)
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "value", scope: !8351, file: !1340, line: 236, type: !1018)
!8354 = !DILocation(line: 238, column: 13, scope: !8351)
!8355 = !DILocation(line: 238, column: 27, scope: !8351)
!8356 = !DILocation(line: 0, scope: !8351)
!8357 = !DILocation(line: 239, column: 19, scope: !8351)
!8358 = !DILocation(line: 240, column: 19, scope: !8351)
!8359 = !DILocation(line: 241, column: 30, scope: !8351)
!8360 = !DILocation(line: 242, column: 5, scope: !8351)
!8361 = !DILocation(line: 243, column: 5, scope: !8351)
!8362 = !DILocation(line: 245, column: 12, scope: !8351)
!8363 = !DILocation(line: 245, column: 26, scope: !8351)
!8364 = !DILocation(line: 245, column: 5, scope: !8351)
!8365 = distinct !DISubprogram(name: "f32k_measure_count", scope: !1340, file: !1340, line: 980, type: !8270, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8366)
!8366 = !{!8367, !8368, !8369, !8370, !8371}
!8367 = !DILocalVariable(name: "fixed_clock", arg: 1, scope: !8365, file: !1340, line: 980, type: !1018)
!8368 = !DILocalVariable(name: "tested_clock", arg: 2, scope: !8365, file: !1340, line: 980, type: !1018)
!8369 = !DILocalVariable(name: "window_setting", arg: 3, scope: !8365, file: !1340, line: 980, type: !1018)
!8370 = !DILocalVariable(name: "fqmtr_data", scope: !8365, file: !1340, line: 982, type: !61)
!8371 = !DILocalVariable(name: "fqmtr_data_msb", scope: !8365, file: !1340, line: 983, type: !1018)
!8372 = !DILocation(line: 0, scope: !8365)
!8373 = !DILocation(line: 986, column: 5, scope: !8365)
!8374 = !DILocation(line: 986, column: 27, scope: !8365)
!8375 = !DILocation(line: 986, column: 44, scope: !8365)
!8376 = !DILocation(line: 989, column: 5, scope: !8365)
!8377 = !DILocation(line: 990, column: 5, scope: !8365)
!8378 = !DILocation(line: 990, column: 35, scope: !8365)
!8379 = !DILocation(line: 990, column: 62, scope: !8365)
!8380 = distinct !{!8380, !8377, !8381}
!8381 = !DILocation(line: 990, column: 67, scope: !8365)
!8382 = !DILocation(line: 992, column: 44, scope: !8365)
!8383 = !DILocation(line: 994, column: 59, scope: !8365)
!8384 = !DILocation(line: 994, column: 65, scope: !8365)
!8385 = !DILocation(line: 994, column: 44, scope: !8365)
!8386 = !DILocation(line: 995, column: 27, scope: !8365)
!8387 = !DILocation(line: 995, column: 44, scope: !8365)
!8388 = !DILocation(line: 997, column: 53, scope: !8365)
!8389 = !DILocation(line: 997, column: 27, scope: !8365)
!8390 = !DILocation(line: 997, column: 44, scope: !8365)
!8391 = !DILocation(line: 998, column: 5, scope: !8365)
!8392 = !DILocation(line: 1000, column: 5, scope: !8365)
!8393 = !DILocation(line: 1000, column: 35, scope: !8365)
!8394 = !DILocation(line: 1000, column: 62, scope: !8365)
!8395 = distinct !{!8395, !8392, !8396}
!8396 = !DILocation(line: 1000, column: 67, scope: !8365)
!8397 = !DILocation(line: 1002, column: 44, scope: !8365)
!8398 = !DILocation(line: 1003, column: 19, scope: !8365)
!8399 = !DILocation(line: 1003, column: 44, scope: !8365)
!8400 = !DILocation(line: 1003, column: 75, scope: !8365)
!8401 = !DILocation(line: 1003, column: 53, scope: !8365)
!8402 = !DILocation(line: 1003, column: 51, scope: !8365)
!8403 = !DILocation(line: 1005, column: 5, scope: !8365)
!8404 = distinct !DISubprogram(name: "hal_rtc_init", scope: !1340, file: !1340, line: 1008, type: !8405, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !345)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!1469}
!8407 = !DILocation(line: 1010, column: 17, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8404, file: !1340, line: 1010, column: 9)
!8409 = !DILocation(line: 1010, column: 9, scope: !8404)
!8410 = !DILocation(line: 1014, column: 5, scope: !8404)
!8411 = !DILocation(line: 1016, column: 5, scope: !8404)
!8412 = !DILocation(line: 1018, column: 5, scope: !8404)
!8413 = !DILocation(line: 1020, column: 5, scope: !8404)
!8414 = !DILocation(line: 1022, column: 5, scope: !8404)
!8415 = !DILocation(line: 1024, column: 5, scope: !8404)
!8416 = !DILocation(line: 1026, column: 5, scope: !8404)
!8417 = !DILocation(line: 1028, column: 19, scope: !8404)
!8418 = !DILocation(line: 1030, column: 5, scope: !8404)
!8419 = !DILocation(line: 1032, column: 5, scope: !8404)
!8420 = !DILocation(line: 1033, column: 1, scope: !8404)
!8421 = distinct !DISubprogram(name: "rtc_unlock_PROT", scope: !1340, file: !1340, line: 154, type: !343, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !345)
!8422 = !DILocation(line: 156, column: 5, scope: !8421)
!8423 = !DILocation(line: 156, column: 19, scope: !8421)
!8424 = !DILocation(line: 156, column: 28, scope: !8421)
!8425 = !DILocation(line: 157, column: 5, scope: !8421)
!8426 = !DILocation(line: 159, column: 5, scope: !8421)
!8427 = !DILocation(line: 159, column: 19, scope: !8421)
!8428 = !DILocation(line: 159, column: 28, scope: !8421)
!8429 = !DILocation(line: 160, column: 5, scope: !8421)
!8430 = !DILocation(line: 161, column: 1, scope: !8421)
!8431 = distinct !DISubprogram(name: "f32k_osc32_Init", scope: !1340, file: !1340, line: 687, type: !343, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8432)
!8432 = !{!8433, !8434, !8435, !8436, !8437, !8438}
!8433 = !DILocalVariable(name: "value", scope: !8431, file: !1340, line: 689, type: !1018)
!8434 = !DILocalVariable(name: "frequency", scope: !8431, file: !1340, line: 690, type: !61)
!8435 = !DILocalVariable(name: "use_xosc", scope: !8431, file: !1340, line: 691, type: !91)
!8436 = !DILocalVariable(name: "cali", scope: !8431, file: !1340, line: 692, type: !1428)
!8437 = !DILocalVariable(name: "value_diff", scope: !8431, file: !1340, line: 693, type: !1018)
!8438 = !DILocalVariable(name: "value_con", scope: !8431, file: !1340, line: 693, type: !1018)
!8439 = !DILocation(line: 0, scope: !8431)
!8440 = !DILocation(line: 695, column: 10, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8431, file: !1340, line: 695, column: 9)
!8442 = !DILocation(line: 695, column: 30, scope: !8441)
!8443 = !DILocation(line: 695, column: 57, scope: !8441)
!8444 = !DILocation(line: 0, scope: !8441)
!8445 = !DILocation(line: 695, column: 9, scope: !8431)
!8446 = !DILocation(line: 696, column: 9, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8441, file: !1340, line: 695, column: 63)
!8448 = !DILocation(line: 698, column: 5, scope: !8447)
!8449 = !DILocation(line: 699, column: 9, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8441, file: !1340, line: 698, column: 12)
!8451 = !DILocation(line: 701, column: 9, scope: !8450)
!8452 = !DILocation(line: 704, column: 10, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8431, file: !1340, line: 704, column: 9)
!8454 = !DILocation(line: 704, column: 30, scope: !8453)
!8455 = !DILocation(line: 704, column: 53, scope: !8453)
!8456 = !DILocation(line: 704, column: 9, scope: !8431)
!8457 = !DILocation(line: 706, column: 9, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8453, file: !1340, line: 704, column: 59)
!8459 = !DILocation(line: 710, column: 15, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8458, file: !1340, line: 710, column: 13)
!8461 = !DILocation(line: 710, column: 29, scope: !8460)
!8462 = !DILocation(line: 710, column: 38, scope: !8460)
!8463 = !DILocation(line: 710, column: 65, scope: !8460)
!8464 = !DILocation(line: 710, column: 71, scope: !8460)
!8465 = !DILocation(line: 711, column: 29, scope: !8460)
!8466 = !DILocation(line: 711, column: 59, scope: !8460)
!8467 = !DILocation(line: 710, column: 13, scope: !8458)
!8468 = !DILocation(line: 713, column: 21, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8460, file: !1340, line: 711, column: 66)
!8470 = !DILocation(line: 715, column: 13, scope: !8469)
!8471 = !DILocation(line: 716, column: 21, scope: !8469)
!8472 = !DILocation(line: 718, column: 13, scope: !8469)
!8473 = !DILocation(line: 719, column: 9, scope: !8469)
!8474 = !DILocation(line: 0, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8458, file: !1340, line: 722, column: 13)
!8476 = !DILocation(line: 751, column: 15, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8458, file: !1340, line: 751, column: 13)
!8478 = !DILocation(line: 751, column: 29, scope: !8477)
!8479 = !DILocation(line: 751, column: 38, scope: !8477)
!8480 = !DILocation(line: 751, column: 65, scope: !8477)
!8481 = !DILocation(line: 751, column: 71, scope: !8477)
!8482 = !DILocation(line: 752, column: 29, scope: !8477)
!8483 = !DILocation(line: 752, column: 59, scope: !8477)
!8484 = !DILocation(line: 751, column: 13, scope: !8458)
!8485 = !DILocation(line: 754, column: 40, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8477, file: !1340, line: 752, column: 66)
!8487 = !DILocation(line: 755, column: 39, scope: !8486)
!8488 = !DILocation(line: 756, column: 13, scope: !8486)
!8489 = !DILocation(line: 759, column: 13, scope: !8486)
!8490 = !DILocation(line: 0, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8486, file: !1340, line: 761, column: 17)
!8492 = !DILocation(line: 761, column: 17, scope: !8486)
!8493 = !DILocation(line: 775, column: 25, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8491, file: !1340, line: 761, column: 27)
!8495 = !DILocation(line: 775, column: 39, scope: !8494)
!8496 = !DILocation(line: 776, column: 23, scope: !8494)
!8497 = !DILocation(line: 777, column: 39, scope: !8494)
!8498 = !DILocation(line: 778, column: 17, scope: !8494)
!8499 = !DILocation(line: 784, column: 17, scope: !8494)
!8500 = !DILocation(line: 785, column: 17, scope: !8494)
!8501 = !DILocation(line: 787, column: 17, scope: !8494)
!8502 = !DILocation(line: 820, column: 29, scope: !8494)
!8503 = !DILocation(line: 822, column: 25, scope: !8494)
!8504 = !DILocation(line: 822, column: 39, scope: !8494)
!8505 = !DILocation(line: 823, column: 23, scope: !8494)
!8506 = !DILocation(line: 825, column: 24, scope: !8494)
!8507 = !DILocation(line: 826, column: 22, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8494, file: !1340, line: 826, column: 21)
!8509 = !DILocation(line: 826, column: 21, scope: !8508)
!8510 = !DILocation(line: 826, column: 38, scope: !8508)
!8511 = !DILocation(line: 826, column: 21, scope: !8494)
!8512 = !DILocation(line: 827, column: 30, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !1340, line: 827, column: 25)
!8514 = distinct !DILexicalBlock(scope: !8508, file: !1340, line: 826, column: 44)
!8515 = !DILocation(line: 827, column: 25, scope: !8514)
!8516 = !DILocation(line: 829, column: 32, scope: !8513)
!8517 = !DILocation(line: 833, column: 30, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !1340, line: 833, column: 25)
!8519 = distinct !DILexicalBlock(scope: !8508, file: !1340, line: 832, column: 24)
!8520 = !DILocation(line: 833, column: 25, scope: !8519)
!8521 = !DILocation(line: 835, column: 32, scope: !8518)
!8522 = !DILocation(line: 0, scope: !8508)
!8523 = !DILocation(line: 839, column: 57, scope: !8494)
!8524 = !DILocation(line: 839, column: 23, scope: !8494)
!8525 = !DILocation(line: 840, column: 40, scope: !8494)
!8526 = !DILocation(line: 841, column: 17, scope: !8494)
!8527 = !DILocation(line: 842, column: 17, scope: !8494)
!8528 = !DILocation(line: 880, column: 9, scope: !8431)
!8529 = !DILocation(line: 860, column: 25, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8491, file: !1340, line: 843, column: 20)
!8531 = !DILocation(line: 862, column: 23, scope: !8530)
!8532 = !DILocation(line: 863, column: 17, scope: !8530)
!8533 = !DILocation(line: 865, column: 17, scope: !8530)
!8534 = !DILocation(line: 867, column: 25, scope: !8530)
!8535 = !DILocation(line: 867, column: 39, scope: !8530)
!8536 = !DILocation(line: 868, column: 23, scope: !8530)
!8537 = !DILocation(line: 870, column: 42, scope: !8530)
!8538 = !DILocation(line: 871, column: 17, scope: !8530)
!8539 = !DILocation(line: 875, column: 17, scope: !8530)
!8540 = !DILocation(line: 882, column: 9, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !1340, line: 880, column: 20)
!8542 = distinct !DILexicalBlock(scope: !8431, file: !1340, line: 880, column: 9)
!8543 = !DILocation(line: 888, column: 17, scope: !8541)
!8544 = !DILocation(line: 889, column: 15, scope: !8541)
!8545 = !DILocation(line: 890, column: 15, scope: !8541)
!8546 = !DILocation(line: 891, column: 9, scope: !8541)
!8547 = !DILocation(line: 894, column: 17, scope: !8541)
!8548 = !DILocation(line: 896, column: 15, scope: !8541)
!8549 = !DILocation(line: 897, column: 9, scope: !8541)
!8550 = !DILocation(line: 920, column: 5, scope: !8541)
!8551 = !DILocation(line: 922, column: 5, scope: !8431)
!8552 = !DILocation(line: 931, column: 9, scope: !8431)
!8553 = !DILocation(line: 941, column: 1, scope: !8431)
!8554 = distinct !DISubprogram(name: "rtc_check_alarm_power_on", scope: !1340, file: !1340, line: 562, type: !343, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8555)
!8555 = !{!8556}
!8556 = !DILocalVariable(name: "time", scope: !8554, file: !1340, line: 564, type: !1432)
!8557 = !DILocation(line: 564, column: 5, scope: !8554)
!8558 = !DILocation(line: 564, column: 20, scope: !8554)
!8559 = !DILocation(line: 566, column: 10, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8554, file: !1340, line: 566, column: 9)
!8561 = !DILocation(line: 566, column: 24, scope: !8560)
!8562 = !DILocation(line: 566, column: 33, scope: !8560)
!8563 = !DILocation(line: 566, column: 54, scope: !8560)
!8564 = !DILocation(line: 566, column: 9, scope: !8554)
!8565 = !DILocation(line: 567, column: 9, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8560, file: !1340, line: 566, column: 60)
!8567 = !DILocation(line: 568, column: 9, scope: !8566)
!8568 = !DILocation(line: 570, column: 9, scope: !8566)
!8569 = !DILocation(line: 571, column: 9, scope: !8566)
!8570 = !DILocation(line: 573, column: 9, scope: !8566)
!8571 = !DILocation(line: 575, column: 9, scope: !8566)
!8572 = !DILocation(line: 575, column: 23, scope: !8566)
!8573 = !DILocation(line: 575, column: 32, scope: !8566)
!8574 = !DILocation(line: 576, column: 9, scope: !8566)
!8575 = !DILocation(line: 577, column: 5, scope: !8566)
!8576 = !DILocation(line: 578, column: 1, scope: !8554)
!8577 = distinct !DISubprogram(name: "rtc_enable_2sec_reboot", scope: !1340, file: !1340, line: 580, type: !343, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8578)
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "value", scope: !8577, file: !1340, line: 582, type: !1018)
!8580 = !DILocation(line: 584, column: 13, scope: !8577)
!8581 = !DILocation(line: 0, scope: !8577)
!8582 = !DILocation(line: 586, column: 15, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8577, file: !1340, line: 586, column: 9)
!8584 = !DILocation(line: 586, column: 9, scope: !8577)
!8585 = !DILocation(line: 587, column: 9, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8583, file: !1340, line: 586, column: 21)
!8587 = !DILocation(line: 588, column: 9, scope: !8586)
!8588 = !DILocation(line: 590, column: 9, scope: !8586)
!8589 = !DILocation(line: 592, column: 5, scope: !8586)
!8590 = !DILocation(line: 594, column: 5, scope: !8577)
!8591 = !DILocation(line: 596, column: 5, scope: !8577)
!8592 = !DILocation(line: 598, column: 13, scope: !8577)
!8593 = !DILocation(line: 600, column: 11, scope: !8577)
!8594 = !DILocation(line: 601, column: 5, scope: !8577)
!8595 = !DILocation(line: 602, column: 1, scope: !8577)
!8596 = distinct !DISubprogram(name: "rtc_init_eint", scope: !1340, file: !1340, line: 518, type: !343, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8597)
!8597 = !{!8598, !8604}
!8598 = !DILocalVariable(name: "eint_config", scope: !8596, file: !1340, line: 520, type: !8599)
!8599 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !1088, line: 225, baseType: !8600)
!8600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1088, line: 222, size: 64, elements: !8601)
!8601 = !{!8602, !8603}
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !8600, file: !1088, line: 223, baseType: !1160, size: 32)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !8600, file: !1088, line: 224, baseType: !61, size: 32, offset: 32)
!8604 = !DILocalVariable(name: "result", scope: !8596, file: !1340, line: 521, type: !1153)
!8605 = !DILocation(line: 520, column: 5, scope: !8596)
!8606 = !DILocation(line: 520, column: 23, scope: !8596)
!8607 = !DILocation(line: 523, column: 17, scope: !8596)
!8608 = !DILocation(line: 523, column: 30, scope: !8596)
!8609 = !DILocation(line: 524, column: 17, scope: !8596)
!8610 = !DILocation(line: 524, column: 31, scope: !8596)
!8611 = !DILocation(line: 525, column: 14, scope: !8596)
!8612 = !DILocation(line: 0, scope: !8596)
!8613 = !DILocation(line: 526, column: 16, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8596, file: !1340, line: 526, column: 9)
!8615 = !DILocation(line: 526, column: 9, scope: !8596)
!8616 = !DILocation(line: 527, column: 9, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8614, file: !1340, line: 526, column: 39)
!8618 = !DILocation(line: 528, column: 9, scope: !8617)
!8619 = !DILocation(line: 531, column: 14, scope: !8596)
!8620 = !DILocation(line: 532, column: 16, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8596, file: !1340, line: 532, column: 9)
!8622 = !DILocation(line: 532, column: 9, scope: !8596)
!8623 = !DILocation(line: 533, column: 9, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8621, file: !1340, line: 532, column: 39)
!8625 = !DILocation(line: 534, column: 9, scope: !8624)
!8626 = !DILocation(line: 537, column: 14, scope: !8596)
!8627 = !DILocation(line: 538, column: 16, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8596, file: !1340, line: 538, column: 9)
!8629 = !DILocation(line: 538, column: 9, scope: !8596)
!8630 = !DILocation(line: 539, column: 9, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8628, file: !1340, line: 538, column: 39)
!8632 = !DILocation(line: 540, column: 9, scope: !8631)
!8633 = !DILocation(line: 542, column: 1, scope: !8596)
!8634 = distinct !DISubprogram(name: "rtc_eint_callback", scope: !1340, file: !1340, line: 449, type: !153, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8635)
!8635 = !{!8636, !8637}
!8636 = !DILocalVariable(name: "user_data", arg: 1, scope: !8634, file: !1340, line: 449, type: !88)
!8637 = !DILocalVariable(name: "value", scope: !8634, file: !1340, line: 451, type: !1018)
!8638 = !DILocation(line: 0, scope: !8634)
!8639 = !DILocation(line: 453, column: 5, scope: !8634)
!8640 = !DILocation(line: 456, column: 13, scope: !8634)
!8641 = !DILocation(line: 456, column: 27, scope: !8634)
!8642 = !DILocation(line: 458, column: 19, scope: !8634)
!8643 = !DILocation(line: 458, column: 28, scope: !8634)
!8644 = !DILocation(line: 459, column: 5, scope: !8634)
!8645 = !DILocation(line: 461, column: 10, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8634, file: !1340, line: 461, column: 9)
!8647 = !DILocation(line: 461, column: 16, scope: !8646)
!8648 = !DILocation(line: 461, column: 34, scope: !8646)
!8649 = !DILocation(line: 461, column: 9, scope: !8634)
!8650 = !DILocation(line: 463, column: 36, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8646, file: !1340, line: 461, column: 40)
!8652 = !DILocation(line: 463, column: 50, scope: !8651)
!8653 = !DILocation(line: 463, column: 61, scope: !8651)
!8654 = !DILocation(line: 463, column: 34, scope: !8651)
!8655 = !DILocation(line: 464, column: 9, scope: !8651)
!8656 = !DILocation(line: 465, column: 13, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8651, file: !1340, line: 465, column: 13)
!8658 = !DILocation(line: 465, column: 41, scope: !8657)
!8659 = !DILocation(line: 465, column: 13, scope: !8651)
!8660 = !DILocation(line: 466, column: 41, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8657, file: !1340, line: 465, column: 50)
!8662 = !DILocation(line: 466, column: 13, scope: !8661)
!8663 = !DILocation(line: 467, column: 9, scope: !8661)
!8664 = !DILocation(line: 471, column: 16, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8634, file: !1340, line: 471, column: 9)
!8666 = !DILocation(line: 471, column: 34, scope: !8665)
!8667 = !DILocation(line: 471, column: 9, scope: !8634)
!8668 = !DILocation(line: 473, column: 40, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !1340, line: 472, column: 49)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !1340, line: 472, column: 13)
!8671 = distinct !DILexicalBlock(scope: !8665, file: !1340, line: 471, column: 40)
!8672 = !DILocation(line: 473, column: 13, scope: !8669)
!8673 = !DILocation(line: 474, column: 9, scope: !8669)
!8674 = !DILocation(line: 478, column: 5, scope: !8634)
!8675 = !DILocation(line: 479, column: 1, scope: !8634)
!8676 = distinct !DISubprogram(name: "rtc_write_osc32con", scope: !1340, file: !1340, line: 200, type: !8677, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8679)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{null, !1018}
!8679 = !{!8680}
!8680 = !DILocalVariable(name: "value", arg: 1, scope: !8676, file: !1340, line: 200, type: !1018)
!8681 = !DILocation(line: 0, scope: !8676)
!8682 = !DILocation(line: 202, column: 5, scope: !8676)
!8683 = !DILocation(line: 202, column: 19, scope: !8676)
!8684 = !DILocation(line: 202, column: 32, scope: !8676)
!8685 = !DILocation(line: 203, column: 5, scope: !8676)
!8686 = !DILocation(line: 204, column: 5, scope: !8676)
!8687 = !DILocation(line: 204, column: 19, scope: !8676)
!8688 = !DILocation(line: 204, column: 32, scope: !8676)
!8689 = !DILocation(line: 205, column: 5, scope: !8676)
!8690 = !DILocation(line: 206, column: 5, scope: !8676)
!8691 = !DILocation(line: 206, column: 19, scope: !8676)
!8692 = !DILocation(line: 206, column: 32, scope: !8676)
!8693 = !DILocation(line: 207, column: 5, scope: !8676)
!8694 = !DILocation(line: 208, column: 1, scope: !8676)
!8695 = distinct !DISubprogram(name: "hal_rtc_get_time", scope: !1340, file: !1340, line: 1117, type: !1467, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8696)
!8696 = !{!8697, !8698, !8699}
!8697 = !DILocalVariable(name: "time", arg: 1, scope: !8695, file: !1340, line: 1117, type: !1431)
!8698 = !DILocalVariable(name: "value_sec", scope: !8695, file: !1340, line: 1119, type: !1018)
!8699 = !DILocalVariable(name: "value", scope: !8695, file: !1340, line: 1119, type: !1018)
!8700 = !DILocation(line: 0, scope: !8695)
!8701 = !DILocation(line: 1122, column: 22, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8695, file: !1340, line: 1121, column: 8)
!8703 = !DILocation(line: 1121, column: 5, scope: !8695)
!8704 = !DILocation(line: 1122, column: 36, scope: !8702)
!8705 = !DILocation(line: 1123, column: 41, scope: !8702)
!8706 = !DILocation(line: 1123, column: 26, scope: !8702)
!8707 = !DILocation(line: 1123, column: 24, scope: !8702)
!8708 = !DILocation(line: 1124, column: 40, scope: !8702)
!8709 = !DILocation(line: 1124, column: 25, scope: !8702)
!8710 = !DILocation(line: 1124, column: 23, scope: !8702)
!8711 = !DILocation(line: 1125, column: 42, scope: !8702)
!8712 = !DILocation(line: 1125, column: 53, scope: !8702)
!8713 = !DILocation(line: 1125, column: 94, scope: !8702)
!8714 = !DILocation(line: 1125, column: 24, scope: !8702)
!8715 = !DILocation(line: 1126, column: 40, scope: !8702)
!8716 = !DILocation(line: 1126, column: 25, scope: !8702)
!8717 = !DILocation(line: 1126, column: 23, scope: !8702)
!8718 = !DILocation(line: 1127, column: 27, scope: !8702)
!8719 = !DILocation(line: 1127, column: 41, scope: !8702)
!8720 = !DILocation(line: 1127, column: 26, scope: !8702)
!8721 = !DILocation(line: 1127, column: 24, scope: !8702)
!8722 = !DILocation(line: 1128, column: 26, scope: !8702)
!8723 = !DILocation(line: 1128, column: 40, scope: !8702)
!8724 = !DILocation(line: 1128, column: 25, scope: !8702)
!8725 = !DILocation(line: 1128, column: 23, scope: !8702)
!8726 = !DILocation(line: 1129, column: 18, scope: !8702)
!8727 = !DILocation(line: 1129, column: 32, scope: !8702)
!8728 = !DILocation(line: 1130, column: 47, scope: !8695)
!8729 = !DILocation(line: 1130, column: 5, scope: !8702)
!8730 = distinct !{!8730, !8703, !8731}
!8731 = !DILocation(line: 1130, column: 78, scope: !8695)
!8732 = !DILocation(line: 1131, column: 21, scope: !8695)
!8733 = !DILocation(line: 1131, column: 11, scope: !8695)
!8734 = !DILocation(line: 1131, column: 19, scope: !8695)
!8735 = !DILocation(line: 1133, column: 5, scope: !8695)
!8736 = distinct !DISubprogram(name: "hal_rtc_get_alarm", scope: !1340, file: !1340, line: 1249, type: !1467, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8737)
!8737 = !{!8738}
!8738 = !DILocalVariable(name: "time", arg: 1, scope: !8736, file: !1340, line: 1249, type: !1431)
!8739 = !DILocation(line: 0, scope: !8736)
!8740 = !DILocation(line: 1251, column: 23, scope: !8736)
!8741 = !DILocation(line: 1251, column: 37, scope: !8736)
!8742 = !DILocation(line: 1251, column: 22, scope: !8736)
!8743 = !DILocation(line: 1251, column: 11, scope: !8736)
!8744 = !DILocation(line: 1251, column: 20, scope: !8736)
!8745 = !DILocation(line: 1252, column: 36, scope: !8736)
!8746 = !DILocation(line: 1252, column: 21, scope: !8736)
!8747 = !DILocation(line: 1252, column: 11, scope: !8736)
!8748 = !DILocation(line: 1252, column: 19, scope: !8736)
!8749 = !DILocation(line: 1253, column: 38, scope: !8736)
!8750 = !DILocation(line: 1253, column: 49, scope: !8736)
!8751 = !DILocation(line: 1253, column: 90, scope: !8736)
!8752 = !DILocation(line: 1253, column: 11, scope: !8736)
!8753 = !DILocation(line: 1253, column: 20, scope: !8736)
!8754 = !DILocation(line: 1254, column: 36, scope: !8736)
!8755 = !DILocation(line: 1254, column: 21, scope: !8736)
!8756 = !DILocation(line: 1254, column: 11, scope: !8736)
!8757 = !DILocation(line: 1254, column: 19, scope: !8736)
!8758 = !DILocation(line: 1255, column: 23, scope: !8736)
!8759 = !DILocation(line: 1255, column: 37, scope: !8736)
!8760 = !DILocation(line: 1255, column: 22, scope: !8736)
!8761 = !DILocation(line: 1255, column: 11, scope: !8736)
!8762 = !DILocation(line: 1255, column: 20, scope: !8736)
!8763 = !DILocation(line: 1256, column: 22, scope: !8736)
!8764 = !DILocation(line: 1256, column: 36, scope: !8736)
!8765 = !DILocation(line: 1256, column: 21, scope: !8736)
!8766 = !DILocation(line: 1256, column: 11, scope: !8736)
!8767 = !DILocation(line: 1256, column: 19, scope: !8736)
!8768 = !DILocation(line: 1257, column: 22, scope: !8736)
!8769 = !DILocation(line: 1257, column: 36, scope: !8736)
!8770 = !DILocation(line: 1257, column: 21, scope: !8736)
!8771 = !DILocation(line: 1257, column: 11, scope: !8736)
!8772 = !DILocation(line: 1257, column: 19, scope: !8736)
!8773 = !DILocation(line: 1259, column: 5, scope: !8736)
!8774 = distinct !DISubprogram(name: "rtc_write_osc32con1", scope: !1340, file: !1340, line: 224, type: !8677, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8775)
!8775 = !{!8776}
!8776 = !DILocalVariable(name: "value", arg: 1, scope: !8774, file: !1340, line: 224, type: !1018)
!8777 = !DILocation(line: 0, scope: !8774)
!8778 = !DILocation(line: 226, column: 5, scope: !8774)
!8779 = !DILocation(line: 226, column: 19, scope: !8774)
!8780 = !DILocation(line: 226, column: 32, scope: !8774)
!8781 = !DILocation(line: 227, column: 5, scope: !8774)
!8782 = !DILocation(line: 228, column: 5, scope: !8774)
!8783 = !DILocation(line: 228, column: 19, scope: !8774)
!8784 = !DILocation(line: 228, column: 32, scope: !8774)
!8785 = !DILocation(line: 229, column: 5, scope: !8774)
!8786 = !DILocation(line: 230, column: 5, scope: !8774)
!8787 = !DILocation(line: 230, column: 19, scope: !8774)
!8788 = !DILocation(line: 230, column: 32, scope: !8774)
!8789 = !DILocation(line: 231, column: 5, scope: !8774)
!8790 = !DILocation(line: 232, column: 1, scope: !8774)
!8791 = distinct !DISubprogram(name: "rtc_write_osc32con2", scope: !1340, file: !1340, line: 248, type: !8677, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8792)
!8792 = !{!8793}
!8793 = !DILocalVariable(name: "value", arg: 1, scope: !8791, file: !1340, line: 248, type: !1018)
!8794 = !DILocation(line: 0, scope: !8791)
!8795 = !DILocation(line: 250, column: 5, scope: !8791)
!8796 = !DILocation(line: 250, column: 19, scope: !8791)
!8797 = !DILocation(line: 250, column: 32, scope: !8791)
!8798 = !DILocation(line: 251, column: 5, scope: !8791)
!8799 = !DILocation(line: 252, column: 5, scope: !8791)
!8800 = !DILocation(line: 252, column: 19, scope: !8791)
!8801 = !DILocation(line: 252, column: 32, scope: !8791)
!8802 = !DILocation(line: 253, column: 5, scope: !8791)
!8803 = !DILocation(line: 254, column: 5, scope: !8791)
!8804 = !DILocation(line: 254, column: 19, scope: !8791)
!8805 = !DILocation(line: 254, column: 32, scope: !8791)
!8806 = !DILocation(line: 255, column: 5, scope: !8791)
!8807 = !DILocation(line: 256, column: 1, scope: !8791)
!8808 = distinct !DISubprogram(name: "rtc_register_init", scope: !1340, file: !1340, line: 481, type: !343, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !345)
!8809 = !DILocation(line: 484, column: 5, scope: !8808)
!8810 = !DILocation(line: 484, column: 19, scope: !8808)
!8811 = !DILocation(line: 484, column: 28, scope: !8808)
!8812 = !DILocation(line: 486, column: 19, scope: !8808)
!8813 = !DILocation(line: 486, column: 33, scope: !8808)
!8814 = !DILocation(line: 486, column: 17, scope: !8808)
!8815 = !DILocation(line: 487, column: 19, scope: !8808)
!8816 = !DILocation(line: 487, column: 30, scope: !8808)
!8817 = !DILocation(line: 488, column: 19, scope: !8808)
!8818 = !DILocation(line: 488, column: 31, scope: !8808)
!8819 = !DILocation(line: 489, column: 19, scope: !8808)
!8820 = !DILocation(line: 489, column: 30, scope: !8808)
!8821 = !DILocation(line: 490, column: 19, scope: !8808)
!8822 = !DILocation(line: 490, column: 30, scope: !8808)
!8823 = !DILocation(line: 491, column: 19, scope: !8808)
!8824 = !DILocation(line: 491, column: 30, scope: !8808)
!8825 = !DILocation(line: 492, column: 19, scope: !8808)
!8826 = !DILocation(line: 492, column: 30, scope: !8808)
!8827 = !DILocation(line: 493, column: 19, scope: !8808)
!8828 = !DILocation(line: 493, column: 30, scope: !8808)
!8829 = !DILocation(line: 494, column: 19, scope: !8808)
!8830 = !DILocation(line: 494, column: 30, scope: !8808)
!8831 = !DILocation(line: 495, column: 19, scope: !8808)
!8832 = !DILocation(line: 495, column: 30, scope: !8808)
!8833 = !DILocation(line: 497, column: 19, scope: !8808)
!8834 = !DILocation(line: 497, column: 30, scope: !8808)
!8835 = !DILocation(line: 498, column: 19, scope: !8808)
!8836 = !DILocation(line: 498, column: 30, scope: !8808)
!8837 = !DILocation(line: 499, column: 19, scope: !8808)
!8838 = !DILocation(line: 499, column: 30, scope: !8808)
!8839 = !DILocation(line: 500, column: 19, scope: !8808)
!8840 = !DILocation(line: 500, column: 30, scope: !8808)
!8841 = !DILocation(line: 501, column: 19, scope: !8808)
!8842 = !DILocation(line: 501, column: 30, scope: !8808)
!8843 = !DILocation(line: 502, column: 19, scope: !8808)
!8844 = !DILocation(line: 502, column: 30, scope: !8808)
!8845 = !DILocation(line: 503, column: 19, scope: !8808)
!8846 = !DILocation(line: 503, column: 30, scope: !8808)
!8847 = !DILocation(line: 505, column: 19, scope: !8808)
!8848 = !DILocation(line: 505, column: 28, scope: !8808)
!8849 = !DILocation(line: 506, column: 19, scope: !8808)
!8850 = !DILocation(line: 506, column: 28, scope: !8808)
!8851 = !DILocation(line: 507, column: 19, scope: !8808)
!8852 = !DILocation(line: 507, column: 29, scope: !8808)
!8853 = !DILocation(line: 508, column: 19, scope: !8808)
!8854 = !DILocation(line: 508, column: 29, scope: !8808)
!8855 = !DILocation(line: 509, column: 19, scope: !8808)
!8856 = !DILocation(line: 509, column: 28, scope: !8808)
!8857 = !DILocation(line: 510, column: 19, scope: !8808)
!8858 = !DILocation(line: 510, column: 28, scope: !8808)
!8859 = !DILocation(line: 511, column: 5, scope: !8808)
!8860 = !DILocation(line: 512, column: 5, scope: !8808)
!8861 = !DILocation(line: 512, column: 19, scope: !8808)
!8862 = !DILocation(line: 512, column: 28, scope: !8808)
!8863 = !DILocation(line: 513, column: 19, scope: !8808)
!8864 = !DILocation(line: 513, column: 27, scope: !8808)
!8865 = !DILocation(line: 515, column: 5, scope: !8808)
!8866 = !DILocation(line: 516, column: 1, scope: !8808)
!8867 = distinct !DISubprogram(name: "rtc_set_power_key", scope: !1340, file: !1340, line: 297, type: !343, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8868)
!8868 = !{!8869}
!8869 = !DILocalVariable(name: "value", scope: !8867, file: !1340, line: 299, type: !1018)
!8870 = !DILocation(line: 300, column: 5, scope: !8867)
!8871 = !DILocation(line: 302, column: 5, scope: !8867)
!8872 = !DILocation(line: 302, column: 19, scope: !8867)
!8873 = !DILocation(line: 302, column: 33, scope: !8867)
!8874 = !DILocation(line: 303, column: 19, scope: !8867)
!8875 = !DILocation(line: 303, column: 33, scope: !8867)
!8876 = !DILocation(line: 304, column: 5, scope: !8867)
!8877 = !DILocation(line: 307, column: 5, scope: !8867)
!8878 = !DILocation(line: 310, column: 5, scope: !8867)
!8879 = !DILocation(line: 310, column: 19, scope: !8867)
!8880 = !DILocation(line: 310, column: 33, scope: !8867)
!8881 = !DILocation(line: 311, column: 19, scope: !8867)
!8882 = !DILocation(line: 311, column: 33, scope: !8867)
!8883 = !DILocation(line: 312, column: 5, scope: !8867)
!8884 = !DILocation(line: 315, column: 5, scope: !8867)
!8885 = !DILocation(line: 316, column: 10, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8867, file: !1340, line: 316, column: 9)
!8887 = !DILocation(line: 316, column: 24, scope: !8886)
!8888 = !DILocation(line: 316, column: 33, scope: !8886)
!8889 = !DILocation(line: 316, column: 60, scope: !8886)
!8890 = !DILocation(line: 316, column: 9, scope: !8867)
!8891 = !DILocation(line: 317, column: 9, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8886, file: !1340, line: 316, column: 66)
!8893 = !DILocation(line: 318, column: 5, scope: !8892)
!8894 = !DILocation(line: 320, column: 5, scope: !8867)
!8895 = !DILocation(line: 324, column: 5, scope: !8867)
!8896 = !DILocation(line: 324, column: 19, scope: !8867)
!8897 = !DILocation(line: 324, column: 30, scope: !8867)
!8898 = !DILocation(line: 325, column: 5, scope: !8867)
!8899 = !DILocation(line: 328, column: 13, scope: !8867)
!8900 = !DILocation(line: 328, column: 27, scope: !8867)
!8901 = !DILocation(line: 0, scope: !8867)
!8902 = !DILocation(line: 329, column: 11, scope: !8867)
!8903 = !DILocation(line: 330, column: 27, scope: !8867)
!8904 = !DILocation(line: 331, column: 5, scope: !8867)
!8905 = !DILocation(line: 332, column: 1, scope: !8867)
!8906 = distinct !DISubprogram(name: "rtc_set_scxo_mode", scope: !1340, file: !1340, line: 335, type: !343, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8907)
!8907 = !{!8908}
!8908 = !DILocalVariable(name: "value", scope: !8906, file: !1340, line: 337, type: !1018)
!8909 = !DILocation(line: 342, column: 13, scope: !8906)
!8910 = !DILocation(line: 0, scope: !8906)
!8911 = !DILocation(line: 343, column: 11, scope: !8906)
!8912 = !DILocation(line: 344, column: 11, scope: !8906)
!8913 = !DILocation(line: 345, column: 5, scope: !8906)
!8914 = !DILocation(line: 350, column: 13, scope: !8906)
!8915 = !DILocation(line: 351, column: 11, scope: !8906)
!8916 = !DILocation(line: 352, column: 11, scope: !8906)
!8917 = !DILocation(line: 354, column: 5, scope: !8906)
!8918 = !DILocation(line: 356, column: 5, scope: !8906)
!8919 = !DILocation(line: 358, column: 13, scope: !8906)
!8920 = !DILocation(line: 359, column: 11, scope: !8906)
!8921 = !DILocation(line: 361, column: 5, scope: !8906)
!8922 = !DILocation(line: 363, column: 5, scope: !8906)
!8923 = !DILocation(line: 365, column: 13, scope: !8906)
!8924 = !DILocation(line: 367, column: 11, scope: !8906)
!8925 = !DILocation(line: 368, column: 5, scope: !8906)
!8926 = !DILocation(line: 369, column: 5, scope: !8906)
!8927 = !DILocation(line: 371, column: 9, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8906, file: !1340, line: 369, column: 8)
!8929 = !DILocation(line: 373, column: 17, scope: !8928)
!8930 = !DILocation(line: 374, column: 21, scope: !8906)
!8931 = !DILocation(line: 374, column: 41, scope: !8906)
!8932 = !DILocation(line: 374, column: 5, scope: !8928)
!8933 = distinct !{!8933, !8926, !8934}
!8934 = !DILocation(line: 374, column: 47, scope: !8906)
!8935 = !DILocation(line: 376, column: 11, scope: !8906)
!8936 = !DILocation(line: 377, column: 5, scope: !8906)
!8937 = !DILocation(line: 379, column: 5, scope: !8906)
!8938 = !DILocation(line: 380, column: 13, scope: !8906)
!8939 = !DILocation(line: 381, column: 5, scope: !8906)
!8940 = !DILocation(line: 382, column: 13, scope: !8906)
!8941 = !DILocation(line: 384, column: 11, scope: !8906)
!8942 = !DILocation(line: 385, column: 5, scope: !8906)
!8943 = !DILocation(line: 386, column: 1, scope: !8906)
!8944 = distinct !DISubprogram(name: "rtc_lpd_init", scope: !1340, file: !1340, line: 258, type: !343, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8945)
!8945 = !{!8946, !8947}
!8946 = !DILocalVariable(name: "value", scope: !8944, file: !1340, line: 260, type: !1018)
!8947 = !DILocalVariable(name: "value_sec", scope: !8944, file: !1340, line: 261, type: !1018)
!8948 = !DILocation(line: 263, column: 13, scope: !8944)
!8949 = !DILocation(line: 263, column: 27, scope: !8944)
!8950 = !DILocation(line: 0, scope: !8944)
!8951 = !DILocation(line: 265, column: 19, scope: !8944)
!8952 = !DILocation(line: 266, column: 27, scope: !8944)
!8953 = !DILocation(line: 267, column: 5, scope: !8944)
!8954 = !DILocation(line: 269, column: 13, scope: !8944)
!8955 = !DILocation(line: 269, column: 27, scope: !8944)
!8956 = !DILocation(line: 270, column: 19, scope: !8944)
!8957 = !DILocation(line: 271, column: 27, scope: !8944)
!8958 = !DILocation(line: 272, column: 5, scope: !8944)
!8959 = !DILocation(line: 275, column: 5, scope: !8944)
!8960 = !DILocation(line: 277, column: 13, scope: !8944)
!8961 = !DILocation(line: 277, column: 27, scope: !8944)
!8962 = !DILocation(line: 279, column: 19, scope: !8944)
!8963 = !DILocation(line: 280, column: 27, scope: !8944)
!8964 = !DILocation(line: 281, column: 5, scope: !8944)
!8965 = !DILocation(line: 283, column: 10, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8944, file: !1340, line: 283, column: 9)
!8967 = !DILocation(line: 283, column: 24, scope: !8966)
!8968 = !DILocation(line: 283, column: 54, scope: !8966)
!8969 = !DILocation(line: 283, column: 9, scope: !8944)
!8970 = !DILocation(line: 284, column: 31, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8966, file: !1340, line: 283, column: 60)
!8972 = !DILocation(line: 285, column: 35, scope: !8971)
!8973 = !DILocation(line: 286, column: 9, scope: !8971)
!8974 = !DILocation(line: 288, column: 9, scope: !8971)
!8975 = !DILocation(line: 289, column: 9, scope: !8971)
!8976 = !DILocation(line: 294, column: 5, scope: !8971)
!8977 = !DILocation(line: 295, column: 1, scope: !8944)
!8978 = distinct !DISubprogram(name: "f32k_eosc32_calibration", scope: !1340, file: !1340, line: 604, type: !343, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !8979)
!8979 = !{!8980, !8981, !8982, !8983, !8984, !8985, !8986}
!8980 = !DILocalVariable(name: "value", scope: !8978, file: !1340, line: 606, type: !1018)
!8981 = !DILocalVariable(name: "low_xosccali", scope: !8978, file: !1340, line: 608, type: !1018)
!8982 = !DILocalVariable(name: "high_xosccali", scope: !8978, file: !1340, line: 609, type: !1018)
!8983 = !DILocalVariable(name: "medium_xosccali", scope: !8978, file: !1340, line: 610, type: !1018)
!8984 = !DILocalVariable(name: "low_frequency", scope: !8978, file: !1340, line: 612, type: !61)
!8985 = !DILocalVariable(name: "high_frequency", scope: !8978, file: !1340, line: 613, type: !61)
!8986 = !DILocalVariable(name: "medium_frequency", scope: !8978, file: !1340, line: 614, type: !61)
!8987 = !DILocation(line: 0, scope: !8978)
!8988 = !DILocation(line: 616, column: 13, scope: !8978)
!8989 = !DILocation(line: 617, column: 11, scope: !8978)
!8990 = !DILocation(line: 619, column: 5, scope: !8978)
!8991 = !DILocation(line: 620, column: 22, scope: !8978)
!8992 = !DILocation(line: 621, column: 24, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8978, file: !1340, line: 621, column: 9)
!8994 = !DILocation(line: 621, column: 9, scope: !8978)
!8995 = !DILocation(line: 622, column: 9, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8993, file: !1340, line: 621, column: 34)
!8997 = !DILocation(line: 623, column: 9, scope: !8996)
!8998 = !DILocation(line: 626, column: 13, scope: !8978)
!8999 = !DILocation(line: 628, column: 11, scope: !8978)
!9000 = !DILocation(line: 629, column: 5, scope: !8978)
!9001 = !DILocation(line: 630, column: 21, scope: !8978)
!9002 = !DILocation(line: 631, column: 23, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8978, file: !1340, line: 631, column: 9)
!9004 = !DILocation(line: 631, column: 9, scope: !8978)
!9005 = !DILocation(line: 632, column: 9, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9003, file: !1340, line: 631, column: 33)
!9007 = !DILocation(line: 633, column: 9, scope: !9006)
!9008 = !DILocation(line: 637, column: 41, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8978, file: !1340, line: 636, column: 48)
!9010 = !DILocation(line: 637, column: 58, scope: !9009)
!9011 = !DILocation(line: 637, column: 27, scope: !9009)
!9012 = !DILocation(line: 638, column: 17, scope: !9009)
!9013 = !DILocation(line: 639, column: 15, scope: !9009)
!9014 = !DILocation(line: 640, column: 15, scope: !9009)
!9015 = !DILocation(line: 641, column: 9, scope: !9009)
!9016 = !DILocation(line: 642, column: 28, scope: !9009)
!9017 = !DILocation(line: 643, column: 30, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9009, file: !1340, line: 643, column: 13)
!9019 = !DILocation(line: 643, column: 13, scope: !9009)
!9020 = !DILocation(line: 646, column: 37, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !1340, line: 646, column: 20)
!9022 = !DILocation(line: 646, column: 20, scope: !9018)
!9023 = !DILocation(line: 650, column: 13, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9021, file: !1340, line: 649, column: 16)
!9025 = !DILocation(line: 651, column: 13, scope: !9024)
!9026 = !DILocation(line: 636, column: 13, scope: !8978)
!9027 = !DILocation(line: 636, column: 29, scope: !8978)
!9028 = !DILocation(line: 636, column: 27, scope: !8978)
!9029 = !DILocation(line: 636, column: 43, scope: !8978)
!9030 = !DILocation(line: 636, column: 5, scope: !8978)
!9031 = distinct !{!9031, !9030, !9032}
!9032 = !DILocation(line: 653, column: 5, scope: !8978)
!9033 = !DILocation(line: 655, column: 16, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8978, file: !1340, line: 655, column: 9)
!9035 = !DILocation(line: 655, column: 51, scope: !9034)
!9036 = !DILocation(line: 655, column: 33, scope: !9034)
!9037 = !DILocation(line: 0, scope: !9034)
!9038 = !DILocation(line: 655, column: 9, scope: !8978)
!9039 = !DILocation(line: 658, column: 15, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !1340, line: 655, column: 61)
!9041 = !DILocation(line: 659, column: 9, scope: !9040)
!9042 = !DILocation(line: 660, column: 9, scope: !9040)
!9043 = !DILocation(line: 661, column: 5, scope: !9040)
!9044 = !DILocation(line: 664, column: 15, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9034, file: !1340, line: 661, column: 12)
!9046 = !DILocation(line: 665, column: 9, scope: !9045)
!9047 = !DILocation(line: 666, column: 9, scope: !9045)
!9048 = !DILocation(line: 668, column: 1, scope: !8978)
!9049 = distinct !DISubprogram(name: "hal_rtc_deinit", scope: !1340, file: !1340, line: 1035, type: !8405, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9050)
!9050 = !{!9051, !9052}
!9051 = !DILocalVariable(name: "use_xosc", scope: !9049, file: !1340, line: 1037, type: !91)
!9052 = !DILocalVariable(name: "value", scope: !9049, file: !1340, line: 1038, type: !1018)
!9053 = !DILocation(line: 0, scope: !9049)
!9054 = !DILocation(line: 1040, column: 10, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9049, file: !1340, line: 1040, column: 9)
!9056 = !DILocation(line: 1040, column: 30, scope: !9055)
!9057 = !DILocation(line: 1040, column: 57, scope: !9055)
!9058 = !DILocation(line: 0, scope: !9055)
!9059 = !DILocation(line: 1040, column: 9, scope: !9049)
!9060 = !DILocation(line: 1041, column: 9, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9055, file: !1340, line: 1040, column: 63)
!9062 = !DILocation(line: 1047, column: 9, scope: !9049)
!9063 = !DILocation(line: 1044, column: 9, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9055, file: !1340, line: 1043, column: 12)
!9065 = !DILocation(line: 1048, column: 17, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !1340, line: 1047, column: 28)
!9067 = distinct !DILexicalBlock(scope: !9049, file: !1340, line: 1047, column: 9)
!9068 = !DILocation(line: 1048, column: 31, scope: !9066)
!9069 = !DILocation(line: 1049, column: 15, scope: !9066)
!9070 = !DILocation(line: 1050, column: 32, scope: !9066)
!9071 = !DILocation(line: 1052, column: 10, scope: !9066)
!9072 = !DILocation(line: 1052, column: 26, scope: !9066)
!9073 = !DILocation(line: 1055, column: 17, scope: !9066)
!9074 = !DILocation(line: 1057, column: 15, scope: !9066)
!9075 = !DILocation(line: 1058, column: 9, scope: !9066)
!9076 = !DILocation(line: 1061, column: 9, scope: !9066)
!9077 = !DILocation(line: 1062, column: 5, scope: !9066)
!9078 = !DILocation(line: 1064, column: 5, scope: !9049)
!9079 = !DILocation(line: 1066, column: 5, scope: !9049)
!9080 = distinct !DISubprogram(name: "hal_rtc_set_time", scope: !1340, file: !1340, line: 1069, type: !9081, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9085)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!1469, !9083}
!9083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9084, size: 32)
!9084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!9085 = !{!9086, !9087}
!9086 = !DILocalVariable(name: "time", arg: 1, scope: !9080, file: !1340, line: 1069, type: !9083)
!9087 = !DILocalVariable(name: "value", scope: !9080, file: !1340, line: 1071, type: !1018)
!9088 = !DILocation(line: 0, scope: !9080)
!9089 = !DILocation(line: 1073, column: 10, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9080, file: !1340, line: 1073, column: 9)
!9091 = !DILocation(line: 1073, column: 9, scope: !9080)
!9092 = !DILocation(line: 1077, column: 13, scope: !9080)
!9093 = !DILocation(line: 1077, column: 27, scope: !9080)
!9094 = !DILocation(line: 1078, column: 11, scope: !9080)
!9095 = !DILocation(line: 1079, column: 21, scope: !9080)
!9096 = !DILocation(line: 1079, column: 15, scope: !9080)
!9097 = !DILocation(line: 1079, column: 11, scope: !9080)
!9098 = !DILocation(line: 1080, column: 30, scope: !9080)
!9099 = !DILocation(line: 1082, column: 27, scope: !9080)
!9100 = !DILocation(line: 1083, column: 11, scope: !9080)
!9101 = !DILocation(line: 1084, column: 21, scope: !9080)
!9102 = !DILocation(line: 1084, column: 15, scope: !9080)
!9103 = !DILocation(line: 1084, column: 11, scope: !9080)
!9104 = !DILocation(line: 1085, column: 30, scope: !9080)
!9105 = !DILocation(line: 1087, column: 27, scope: !9080)
!9106 = !DILocation(line: 1088, column: 11, scope: !9080)
!9107 = !DILocation(line: 1089, column: 23, scope: !9080)
!9108 = !DILocation(line: 1089, column: 32, scope: !9080)
!9109 = !DILocation(line: 1089, column: 16, scope: !9080)
!9110 = !DILocation(line: 1089, column: 11, scope: !9080)
!9111 = !DILocation(line: 1090, column: 30, scope: !9080)
!9112 = !DILocation(line: 1092, column: 27, scope: !9080)
!9113 = !DILocation(line: 1093, column: 11, scope: !9080)
!9114 = !DILocation(line: 1094, column: 21, scope: !9080)
!9115 = !DILocation(line: 1094, column: 15, scope: !9080)
!9116 = !DILocation(line: 1094, column: 11, scope: !9080)
!9117 = !DILocation(line: 1095, column: 30, scope: !9080)
!9118 = !DILocation(line: 1097, column: 27, scope: !9080)
!9119 = !DILocation(line: 1098, column: 11, scope: !9080)
!9120 = !DILocation(line: 1099, column: 21, scope: !9080)
!9121 = !DILocation(line: 1099, column: 15, scope: !9080)
!9122 = !DILocation(line: 1099, column: 11, scope: !9080)
!9123 = !DILocation(line: 1100, column: 30, scope: !9080)
!9124 = !DILocation(line: 1102, column: 27, scope: !9080)
!9125 = !DILocation(line: 1103, column: 11, scope: !9080)
!9126 = !DILocation(line: 1104, column: 21, scope: !9080)
!9127 = !DILocation(line: 1104, column: 15, scope: !9080)
!9128 = !DILocation(line: 1104, column: 11, scope: !9080)
!9129 = !DILocation(line: 1105, column: 30, scope: !9080)
!9130 = !DILocation(line: 1107, column: 27, scope: !9080)
!9131 = !DILocation(line: 1108, column: 11, scope: !9080)
!9132 = !DILocation(line: 1109, column: 21, scope: !9080)
!9133 = !DILocation(line: 1109, column: 15, scope: !9080)
!9134 = !DILocation(line: 1109, column: 11, scope: !9080)
!9135 = !DILocation(line: 1110, column: 30, scope: !9080)
!9136 = !DILocation(line: 1112, column: 5, scope: !9080)
!9137 = !DILocation(line: 1114, column: 5, scope: !9080)
!9138 = !DILocation(line: 1115, column: 1, scope: !9080)
!9139 = distinct !DISubprogram(name: "rtc_is_time_valid", scope: !1340, file: !1340, line: 408, type: !9140, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9142)
!9140 = !DISubroutineType(types: !9141)
!9141 = !{!91, !9083}
!9142 = !{!9143, !9144}
!9143 = !DILocalVariable(name: "time", arg: 1, scope: !9139, file: !1340, line: 408, type: !9083)
!9144 = !DILocalVariable(name: "result", scope: !9139, file: !1340, line: 410, type: !91)
!9145 = !DILocation(line: 0, scope: !9139)
!9146 = !DILocation(line: 412, column: 15, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 412, column: 9)
!9148 = !DILocation(line: 412, column: 24, scope: !9147)
!9149 = !DILocation(line: 412, column: 9, scope: !9139)
!9150 = !DILocation(line: 412, column: 9, scope: !9147)
!9151 = !DILocation(line: 413, column: 9, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9147, file: !1340, line: 412, column: 31)
!9153 = !DILocation(line: 415, column: 5, scope: !9152)
!9154 = !DILocation(line: 417, column: 16, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 417, column: 9)
!9156 = !DILocation(line: 417, column: 30, scope: !9155)
!9157 = !DILocation(line: 418, column: 9, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9155, file: !1340, line: 417, column: 55)
!9159 = !DILocation(line: 420, column: 5, scope: !9158)
!9160 = !DILocation(line: 422, column: 15, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 422, column: 9)
!9162 = !DILocation(line: 422, column: 24, scope: !9161)
!9163 = !DILocation(line: 422, column: 9, scope: !9139)
!9164 = !DILocation(line: 422, column: 9, scope: !9161)
!9165 = !DILocation(line: 423, column: 9, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9161, file: !1340, line: 422, column: 29)
!9167 = !DILocation(line: 424, column: 5, scope: !9166)
!9168 = !DILocation(line: 426, column: 16, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 426, column: 9)
!9170 = !DILocation(line: 426, column: 30, scope: !9169)
!9171 = !DILocation(line: 427, column: 9, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9169, file: !1340, line: 426, column: 55)
!9173 = !DILocation(line: 429, column: 5, scope: !9172)
!9174 = !DILocation(line: 431, column: 15, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 431, column: 9)
!9176 = !DILocation(line: 431, column: 24, scope: !9175)
!9177 = !DILocation(line: 431, column: 9, scope: !9139)
!9178 = !DILocation(line: 431, column: 9, scope: !9175)
!9179 = !DILocation(line: 432, column: 9, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9175, file: !1340, line: 431, column: 30)
!9181 = !DILocation(line: 434, column: 5, scope: !9180)
!9182 = !DILocation(line: 436, column: 15, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 436, column: 9)
!9184 = !DILocation(line: 436, column: 23, scope: !9183)
!9185 = !DILocation(line: 436, column: 9, scope: !9139)
!9186 = !DILocation(line: 436, column: 9, scope: !9183)
!9187 = !DILocation(line: 437, column: 9, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9183, file: !1340, line: 436, column: 29)
!9189 = !DILocation(line: 439, column: 5, scope: !9188)
!9190 = !DILocation(line: 441, column: 15, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9139, file: !1340, line: 441, column: 9)
!9192 = !DILocation(line: 441, column: 23, scope: !9191)
!9193 = !DILocation(line: 441, column: 9, scope: !9139)
!9194 = !DILocation(line: 441, column: 9, scope: !9191)
!9195 = !DILocation(line: 442, column: 9, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9191, file: !1340, line: 441, column: 29)
!9197 = !DILocation(line: 444, column: 5, scope: !9196)
!9198 = !DILocation(line: 446, column: 5, scope: !9139)
!9199 = distinct !DISubprogram(name: "hal_rtc_set_time_notification_period", scope: !1340, file: !1340, line: 1137, type: !9200, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9203)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{!1469, !9202}
!9202 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_rtc_time_notification_period_t", file: !106, line: 760, baseType: !1348)
!9203 = !{!9204, !9205, !9206, !9207}
!9204 = !DILocalVariable(name: "period", arg: 1, scope: !9199, file: !1340, line: 1137, type: !9202)
!9205 = !DILocalVariable(name: "value", scope: !9199, file: !1340, line: 1139, type: !1018)
!9206 = !DILocalVariable(name: "enable", scope: !9199, file: !1340, line: 1140, type: !1018)
!9207 = !DILocalVariable(name: "cii_setting", scope: !9199, file: !1340, line: 1141, type: !1018)
!9208 = !DILocation(line: 0, scope: !9199)
!9209 = !DILocation(line: 1143, column: 5, scope: !9199)
!9210 = !DILocation(line: 1188, column: 13, scope: !9199)
!9211 = !DILocation(line: 1188, column: 27, scope: !9199)
!9212 = !DILocation(line: 1189, column: 11, scope: !9199)
!9213 = !DILocation(line: 1190, column: 11, scope: !9199)
!9214 = !DILocation(line: 1191, column: 30, scope: !9199)
!9215 = !DILocation(line: 1193, column: 19, scope: !9199)
!9216 = !DILocation(line: 1193, column: 30, scope: !9199)
!9217 = !DILocation(line: 1195, column: 5, scope: !9199)
!9218 = !DILocation(line: 1197, column: 5, scope: !9199)
!9219 = !DILocation(line: 1198, column: 1, scope: !9199)
!9220 = distinct !DISubprogram(name: "hal_rtc_set_alarm", scope: !1340, file: !1340, line: 1201, type: !9081, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9221)
!9221 = !{!9222, !9223}
!9222 = !DILocalVariable(name: "time", arg: 1, scope: !9220, file: !1340, line: 1201, type: !9083)
!9223 = !DILocalVariable(name: "value", scope: !9220, file: !1340, line: 1203, type: !1018)
!9224 = !DILocation(line: 0, scope: !9220)
!9225 = !DILocation(line: 1205, column: 10, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9220, file: !1340, line: 1205, column: 9)
!9227 = !DILocation(line: 1205, column: 9, scope: !9220)
!9228 = !DILocation(line: 1209, column: 13, scope: !9220)
!9229 = !DILocation(line: 1209, column: 27, scope: !9220)
!9230 = !DILocation(line: 1210, column: 11, scope: !9220)
!9231 = !DILocation(line: 1211, column: 21, scope: !9220)
!9232 = !DILocation(line: 1211, column: 15, scope: !9220)
!9233 = !DILocation(line: 1211, column: 11, scope: !9220)
!9234 = !DILocation(line: 1212, column: 30, scope: !9220)
!9235 = !DILocation(line: 1214, column: 27, scope: !9220)
!9236 = !DILocation(line: 1215, column: 11, scope: !9220)
!9237 = !DILocation(line: 1216, column: 21, scope: !9220)
!9238 = !DILocation(line: 1216, column: 15, scope: !9220)
!9239 = !DILocation(line: 1216, column: 11, scope: !9220)
!9240 = !DILocation(line: 1217, column: 30, scope: !9220)
!9241 = !DILocation(line: 1219, column: 27, scope: !9220)
!9242 = !DILocation(line: 1220, column: 11, scope: !9220)
!9243 = !DILocation(line: 1221, column: 21, scope: !9220)
!9244 = !DILocation(line: 1221, column: 15, scope: !9220)
!9245 = !DILocation(line: 1221, column: 11, scope: !9220)
!9246 = !DILocation(line: 1222, column: 30, scope: !9220)
!9247 = !DILocation(line: 1224, column: 27, scope: !9220)
!9248 = !DILocation(line: 1225, column: 11, scope: !9220)
!9249 = !DILocation(line: 1226, column: 23, scope: !9220)
!9250 = !DILocation(line: 1226, column: 32, scope: !9220)
!9251 = !DILocation(line: 1226, column: 16, scope: !9220)
!9252 = !DILocation(line: 1226, column: 11, scope: !9220)
!9253 = !DILocation(line: 1227, column: 30, scope: !9220)
!9254 = !DILocation(line: 1229, column: 27, scope: !9220)
!9255 = !DILocation(line: 1230, column: 11, scope: !9220)
!9256 = !DILocation(line: 1231, column: 21, scope: !9220)
!9257 = !DILocation(line: 1231, column: 15, scope: !9220)
!9258 = !DILocation(line: 1231, column: 11, scope: !9220)
!9259 = !DILocation(line: 1232, column: 30, scope: !9220)
!9260 = !DILocation(line: 1234, column: 27, scope: !9220)
!9261 = !DILocation(line: 1235, column: 11, scope: !9220)
!9262 = !DILocation(line: 1236, column: 21, scope: !9220)
!9263 = !DILocation(line: 1236, column: 15, scope: !9220)
!9264 = !DILocation(line: 1236, column: 11, scope: !9220)
!9265 = !DILocation(line: 1237, column: 30, scope: !9220)
!9266 = !DILocation(line: 1239, column: 27, scope: !9220)
!9267 = !DILocation(line: 1240, column: 11, scope: !9220)
!9268 = !DILocation(line: 1241, column: 21, scope: !9220)
!9269 = !DILocation(line: 1241, column: 15, scope: !9220)
!9270 = !DILocation(line: 1241, column: 11, scope: !9220)
!9271 = !DILocation(line: 1242, column: 30, scope: !9220)
!9272 = !DILocation(line: 1244, column: 5, scope: !9220)
!9273 = !DILocation(line: 1246, column: 5, scope: !9220)
!9274 = !DILocation(line: 1247, column: 1, scope: !9220)
!9275 = distinct !DISubprogram(name: "hal_rtc_enable_alarm", scope: !1340, file: !1340, line: 1262, type: !8405, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9276)
!9276 = !{!9277}
!9277 = !DILocalVariable(name: "value", scope: !9275, file: !1340, line: 1264, type: !1018)
!9278 = !DILocation(line: 1267, column: 13, scope: !9275)
!9279 = !DILocation(line: 1267, column: 27, scope: !9275)
!9280 = !DILocation(line: 0, scope: !9275)
!9281 = !DILocation(line: 1269, column: 11, scope: !9275)
!9282 = !DILocation(line: 1270, column: 30, scope: !9275)
!9283 = !DILocation(line: 1273, column: 27, scope: !9275)
!9284 = !DILocation(line: 1275, column: 11, scope: !9275)
!9285 = !DILocation(line: 1276, column: 28, scope: !9275)
!9286 = !DILocation(line: 1278, column: 5, scope: !9275)
!9287 = !DILocation(line: 1280, column: 5, scope: !9275)
!9288 = distinct !DISubprogram(name: "hal_rtc_disable_alarm", scope: !1340, file: !1340, line: 1283, type: !8405, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9289)
!9289 = !{!9290}
!9290 = !DILocalVariable(name: "value", scope: !9288, file: !1340, line: 1285, type: !1018)
!9291 = !DILocation(line: 1287, column: 13, scope: !9288)
!9292 = !DILocation(line: 1287, column: 27, scope: !9288)
!9293 = !DILocation(line: 0, scope: !9288)
!9294 = !DILocation(line: 1288, column: 11, scope: !9288)
!9295 = !DILocation(line: 1290, column: 30, scope: !9288)
!9296 = !DILocation(line: 1292, column: 27, scope: !9288)
!9297 = !DILocation(line: 1293, column: 11, scope: !9288)
!9298 = !DILocation(line: 1294, column: 11, scope: !9288)
!9299 = !DILocation(line: 1295, column: 28, scope: !9288)
!9300 = !DILocation(line: 1297, column: 5, scope: !9288)
!9301 = !DILocation(line: 1299, column: 5, scope: !9288)
!9302 = distinct !DISubprogram(name: "hal_rtc_set_time_callback", scope: !1340, file: !1340, line: 1303, type: !9303, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9305)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!1469, !1475, !88}
!9305 = !{!9306, !9307}
!9306 = !DILocalVariable(name: "callback_function", arg: 1, scope: !9302, file: !1340, line: 1303, type: !1475)
!9307 = !DILocalVariable(name: "user_data", arg: 2, scope: !9302, file: !1340, line: 1303, type: !88)
!9308 = !DILocation(line: 0, scope: !9302)
!9309 = !DILocation(line: 1305, column: 32, scope: !9302)
!9310 = !DILocation(line: 1306, column: 24, scope: !9302)
!9311 = !DILocation(line: 1308, column: 5, scope: !9302)
!9312 = distinct !DISubprogram(name: "hal_rtc_set_alarm_callback", scope: !1340, file: !1340, line: 1312, type: !9313, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9316)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!1469, !9315, !88}
!9315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1480)
!9316 = !{!9317, !9318}
!9317 = !DILocalVariable(name: "callback_function", arg: 1, scope: !9312, file: !1340, line: 1312, type: !9315)
!9318 = !DILocalVariable(name: "user_data", arg: 2, scope: !9312, file: !1340, line: 1312, type: !88)
!9319 = !DILocation(line: 0, scope: !9312)
!9320 = !DILocation(line: 1314, column: 33, scope: !9312)
!9321 = !DILocation(line: 1315, column: 25, scope: !9312)
!9322 = !DILocation(line: 1317, column: 5, scope: !9312)
!9323 = distinct !DISubprogram(name: "hal_rtc_get_f32k_frequency", scope: !1340, file: !1340, line: 1361, type: !9324, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9326)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!1469, !1541}
!9326 = !{!9327}
!9327 = !DILocalVariable(name: "frequency", arg: 1, scope: !9323, file: !1340, line: 1361, type: !1541)
!9328 = !DILocation(line: 0, scope: !9323)
!9329 = !DILocation(line: 1363, column: 18, scope: !9323)
!9330 = !DILocation(line: 1363, column: 16, scope: !9323)
!9331 = !DILocation(line: 1364, column: 5, scope: !9323)
!9332 = distinct !DISubprogram(name: "rtc_set_data", scope: !1340, file: !1340, line: 1367, type: !9333, scopeLine: 1368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9335)
!9333 = !DISubroutineType(types: !9334)
!9334 = !{!1469, !1018, !165, !1018, !91}
!9335 = !{!9336, !9337, !9338, !9339, !9340, !9341}
!9336 = !DILocalVariable(name: "offset", arg: 1, scope: !9332, file: !1340, line: 1367, type: !1018)
!9337 = !DILocalVariable(name: "buf", arg: 2, scope: !9332, file: !1340, line: 1367, type: !165)
!9338 = !DILocalVariable(name: "len", arg: 3, scope: !9332, file: !1340, line: 1367, type: !1018)
!9339 = !DILocalVariable(name: "access_hw", arg: 4, scope: !9332, file: !1340, line: 1367, type: !91)
!9340 = !DILocalVariable(name: "i", scope: !9332, file: !1340, line: 1369, type: !61)
!9341 = !DILocalVariable(name: "value", scope: !9332, file: !1340, line: 1370, type: !1018)
!9342 = !DILocation(line: 0, scope: !9332)
!9343 = !DILocation(line: 1372, column: 10, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9332, file: !1340, line: 1372, column: 9)
!9345 = !DILocation(line: 1372, column: 17, scope: !9344)
!9346 = !DILocation(line: 0, scope: !9344)
!9347 = !DILocation(line: 1372, column: 94, scope: !9344)
!9348 = !DILocation(line: 1373, column: 17, scope: !9344)
!9349 = !DILocation(line: 1373, column: 23, scope: !9344)
!9350 = !DILocation(line: 1373, column: 99, scope: !9344)
!9351 = !DILocation(line: 1378, column: 19, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !1340, line: 1378, column: 5)
!9353 = distinct !DILexicalBlock(scope: !9332, file: !1340, line: 1378, column: 5)
!9354 = !DILocation(line: 1378, column: 5, scope: !9353)
!9355 = !DILocation(line: 1374, column: 9, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9344, file: !1340, line: 1373, column: 117)
!9357 = !DILocation(line: 1375, column: 9, scope: !9356)
!9358 = !DILocation(line: 1379, column: 13, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9352, file: !1340, line: 1378, column: 31)
!9360 = !DILocation(line: 1380, column: 50, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !1340, line: 1379, column: 24)
!9362 = distinct !DILexicalBlock(scope: !9359, file: !1340, line: 1379, column: 13)
!9363 = !DILocation(line: 1380, column: 60, scope: !9361)
!9364 = !DILocation(line: 1380, column: 21, scope: !9361)
!9365 = !DILocation(line: 1381, column: 60, scope: !9361)
!9366 = !DILocation(line: 1381, column: 22, scope: !9361)
!9367 = !DILocation(line: 1381, column: 19, scope: !9361)
!9368 = !DILocation(line: 1382, column: 30, scope: !9361)
!9369 = !DILocation(line: 1382, column: 24, scope: !9361)
!9370 = !DILocation(line: 1382, column: 75, scope: !9361)
!9371 = !DILocation(line: 1382, column: 38, scope: !9361)
!9372 = !DILocation(line: 1382, column: 35, scope: !9361)
!9373 = !DILocation(line: 1382, column: 19, scope: !9361)
!9374 = !DILocation(line: 1383, column: 61, scope: !9361)
!9375 = !DILocation(line: 1385, column: 13, scope: !9361)
!9376 = !DILocation(line: 1386, column: 9, scope: !9361)
!9377 = !DILocation(line: 1387, column: 59, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9362, file: !1340, line: 1386, column: 16)
!9379 = !DILocation(line: 1387, column: 53, scope: !9378)
!9380 = !DILocation(line: 1387, column: 46, scope: !9378)
!9381 = !DILocation(line: 1387, column: 13, scope: !9378)
!9382 = !DILocation(line: 1387, column: 51, scope: !9378)
!9383 = !DILocation(line: 1378, column: 27, scope: !9352)
!9384 = distinct !{!9384, !9354, !9385}
!9385 = !DILocation(line: 1389, column: 5, scope: !9353)
!9386 = !DILocation(line: 1392, column: 1, scope: !9332)
!9387 = distinct !DISubprogram(name: "hal_rtc_set_data", scope: !1340, file: !1340, line: 1394, type: !9388, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9390)
!9388 = !DISubroutineType(types: !9389)
!9389 = !{!1469, !1018, !165, !1018}
!9390 = !{!9391, !9392, !9393}
!9391 = !DILocalVariable(name: "offset", arg: 1, scope: !9387, file: !1340, line: 1394, type: !1018)
!9392 = !DILocalVariable(name: "buf", arg: 2, scope: !9387, file: !1340, line: 1394, type: !165)
!9393 = !DILocalVariable(name: "len", arg: 3, scope: !9387, file: !1340, line: 1394, type: !1018)
!9394 = !DILocation(line: 0, scope: !9387)
!9395 = !DILocation(line: 1396, column: 9, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9387, file: !1340, line: 1396, column: 9)
!9397 = !DILocation(line: 1396, column: 9, scope: !9387)
!9398 = !DILocation(line: 1397, column: 9, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9396, file: !1340, line: 1396, column: 22)
!9400 = !DILocation(line: 1400, column: 37, scope: !9387)
!9401 = !DILocation(line: 1398, column: 5, scope: !9399)
!9402 = !DILocation(line: 1400, column: 5, scope: !9387)
!9403 = !DILocation(line: 1402, column: 5, scope: !9387)
!9404 = distinct !DISubprogram(name: "rtc_get_data", scope: !1340, file: !1340, line: 1405, type: !9405, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9407)
!9405 = !DISubroutineType(types: !9406)
!9406 = !{!1469, !1018, !776, !1018, !91}
!9407 = !{!9408, !9409, !9410, !9411, !9412}
!9408 = !DILocalVariable(name: "offset", arg: 1, scope: !9404, file: !1340, line: 1405, type: !1018)
!9409 = !DILocalVariable(name: "buf", arg: 2, scope: !9404, file: !1340, line: 1405, type: !776)
!9410 = !DILocalVariable(name: "len", arg: 3, scope: !9404, file: !1340, line: 1405, type: !1018)
!9411 = !DILocalVariable(name: "access_hw", arg: 4, scope: !9404, file: !1340, line: 1405, type: !91)
!9412 = !DILocalVariable(name: "i", scope: !9404, file: !1340, line: 1407, type: !61)
!9413 = !DILocation(line: 0, scope: !9404)
!9414 = !DILocation(line: 1409, column: 10, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9404, file: !1340, line: 1409, column: 9)
!9416 = !DILocation(line: 1409, column: 17, scope: !9415)
!9417 = !DILocation(line: 0, scope: !9415)
!9418 = !DILocation(line: 1409, column: 94, scope: !9415)
!9419 = !DILocation(line: 1410, column: 17, scope: !9415)
!9420 = !DILocation(line: 1410, column: 23, scope: !9415)
!9421 = !DILocation(line: 1410, column: 99, scope: !9415)
!9422 = !DILocation(line: 1415, column: 19, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !1340, line: 1415, column: 5)
!9424 = distinct !DILexicalBlock(scope: !9404, file: !1340, line: 1415, column: 5)
!9425 = !DILocation(line: 1415, column: 5, scope: !9424)
!9426 = !DILocation(line: 1411, column: 9, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9415, file: !1340, line: 1410, column: 117)
!9428 = !DILocation(line: 1412, column: 9, scope: !9427)
!9429 = !DILocation(line: 0, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !1340, line: 1416, column: 13)
!9431 = distinct !DILexicalBlock(scope: !9423, file: !1340, line: 1415, column: 31)
!9432 = !DILocation(line: 1416, column: 13, scope: !9431)
!9433 = !DILocation(line: 1417, column: 66, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9430, file: !1340, line: 1416, column: 24)
!9435 = !DILocation(line: 1417, column: 27, scope: !9434)
!9436 = !DILocation(line: 1417, column: 114, scope: !9434)
!9437 = !DILocation(line: 1417, column: 75, scope: !9434)
!9438 = !DILocation(line: 1418, column: 63, scope: !9434)
!9439 = !DILocation(line: 1418, column: 26, scope: !9434)
!9440 = !DILocation(line: 1417, column: 120, scope: !9434)
!9441 = !DILocation(line: 1417, column: 26, scope: !9434)
!9442 = !DILocation(line: 1419, column: 9, scope: !9434)
!9443 = !DILocation(line: 1420, column: 26, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9430, file: !1340, line: 1419, column: 16)
!9445 = !DILocation(line: 1417, column: 19, scope: !9434)
!9446 = !DILocation(line: 1417, column: 24, scope: !9434)
!9447 = !DILocation(line: 1415, column: 27, scope: !9423)
!9448 = distinct !{!9448, !9425, !9449}
!9449 = !DILocation(line: 1422, column: 5, scope: !9424)
!9450 = !DILocation(line: 1425, column: 1, scope: !9404)
!9451 = distinct !DISubprogram(name: "hal_rtc_get_data", scope: !1340, file: !1340, line: 1427, type: !9452, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9454)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{!1469, !1018, !776, !1018}
!9454 = !{!9455, !9456, !9457}
!9455 = !DILocalVariable(name: "offset", arg: 1, scope: !9451, file: !1340, line: 1427, type: !1018)
!9456 = !DILocalVariable(name: "buf", arg: 2, scope: !9451, file: !1340, line: 1427, type: !776)
!9457 = !DILocalVariable(name: "len", arg: 3, scope: !9451, file: !1340, line: 1427, type: !1018)
!9458 = !DILocation(line: 0, scope: !9451)
!9459 = !DILocation(line: 1429, column: 9, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9451, file: !1340, line: 1429, column: 9)
!9461 = !DILocation(line: 1429, column: 9, scope: !9451)
!9462 = !DILocation(line: 1430, column: 9, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9460, file: !1340, line: 1429, column: 22)
!9464 = !DILocation(line: 1433, column: 37, scope: !9451)
!9465 = !DILocation(line: 1431, column: 5, scope: !9463)
!9466 = !DILocation(line: 1433, column: 5, scope: !9451)
!9467 = !DILocation(line: 1435, column: 5, scope: !9451)
!9468 = distinct !DISubprogram(name: "rtc_clear_data", scope: !1340, file: !1340, line: 1438, type: !9469, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9471)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!1469, !1018, !1018}
!9471 = !{!9472, !9473, !9474}
!9472 = !DILocalVariable(name: "offset", arg: 1, scope: !9468, file: !1340, line: 1438, type: !1018)
!9473 = !DILocalVariable(name: "len", arg: 2, scope: !9468, file: !1340, line: 1438, type: !1018)
!9474 = !DILocalVariable(name: "buf", scope: !9468, file: !1340, line: 1440, type: !1485)
!9475 = !DILocation(line: 0, scope: !9468)
!9476 = !DILocation(line: 1440, column: 5, scope: !9468)
!9477 = !DILocation(line: 1440, column: 10, scope: !9468)
!9478 = !DILocation(line: 1442, column: 5, scope: !9468)
!9479 = !DILocation(line: 1444, column: 5, scope: !9468)
!9480 = !DILocation(line: 1447, column: 1, scope: !9468)
!9481 = !DILocation(line: 1446, column: 5, scope: !9468)
!9482 = distinct !DISubprogram(name: "hal_rtc_clear_data", scope: !1340, file: !1340, line: 1449, type: !9469, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9483)
!9483 = !{!9484, !9485, !9486}
!9484 = !DILocalVariable(name: "offset", arg: 1, scope: !9482, file: !1340, line: 1449, type: !1018)
!9485 = !DILocalVariable(name: "len", arg: 2, scope: !9482, file: !1340, line: 1449, type: !1018)
!9486 = !DILocalVariable(name: "buf", scope: !9482, file: !1340, line: 1451, type: !1485)
!9487 = !DILocation(line: 0, scope: !9482)
!9488 = !DILocation(line: 1451, column: 5, scope: !9482)
!9489 = !DILocation(line: 1451, column: 10, scope: !9482)
!9490 = !DILocation(line: 1453, column: 9, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9482, file: !1340, line: 1453, column: 9)
!9492 = !DILocation(line: 1453, column: 9, scope: !9482)
!9493 = !DILocation(line: 1454, column: 9, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9491, file: !1340, line: 1453, column: 22)
!9495 = !DILocation(line: 1455, column: 5, scope: !9494)
!9496 = !DILocation(line: 1457, column: 5, scope: !9482)
!9497 = !DILocation(line: 1459, column: 37, scope: !9482)
!9498 = !DILocation(line: 1459, column: 5, scope: !9482)
!9499 = !DILocation(line: 1462, column: 1, scope: !9482)
!9500 = !DILocation(line: 1461, column: 5, scope: !9482)
!9501 = distinct !DISubprogram(name: "rtc_set_register", scope: !1340, file: !1340, line: 1464, type: !9502, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9504)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{null, !1018, !1018}
!9504 = !{!9505, !9506}
!9505 = !DILocalVariable(name: "address", arg: 1, scope: !9501, file: !1340, line: 1464, type: !1018)
!9506 = !DILocalVariable(name: "value", arg: 2, scope: !9501, file: !1340, line: 1464, type: !1018)
!9507 = !DILocation(line: 0, scope: !9501)
!9508 = !DILocation(line: 1466, column: 17, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9501, file: !1340, line: 1466, column: 9)
!9510 = !DILocation(line: 1466, column: 9, scope: !9501)
!9511 = !DILocation(line: 1467, column: 9, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9509, file: !1340, line: 1466, column: 66)
!9513 = !DILocation(line: 1468, column: 5, scope: !9512)
!9514 = !DILocation(line: 1466, column: 9, scope: !9509)
!9515 = !DILocation(line: 1470, column: 30, scope: !9501)
!9516 = !DILocation(line: 1470, column: 43, scope: !9501)
!9517 = !DILocation(line: 1470, column: 5, scope: !9501)
!9518 = !DILocation(line: 1470, column: 54, scope: !9501)
!9519 = !DILocation(line: 1471, column: 1, scope: !9501)
!9520 = distinct !DISubprogram(name: "rtc_get_register", scope: !1340, file: !1340, line: 1473, type: !9521, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9523)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{!1018, !1018}
!9523 = !{!9524}
!9524 = !DILocalVariable(name: "address", arg: 1, scope: !9520, file: !1340, line: 1473, type: !1018)
!9525 = !DILocation(line: 0, scope: !9520)
!9526 = !DILocation(line: 1475, column: 17, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9520, file: !1340, line: 1475, column: 9)
!9528 = !DILocation(line: 1475, column: 9, scope: !9520)
!9529 = !DILocation(line: 1476, column: 9, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9527, file: !1340, line: 1475, column: 66)
!9531 = !DILocation(line: 1477, column: 5, scope: !9530)
!9532 = !DILocation(line: 1475, column: 9, scope: !9527)
!9533 = !DILocation(line: 1479, column: 37, scope: !9520)
!9534 = !DILocation(line: 1479, column: 50, scope: !9520)
!9535 = !DILocation(line: 1479, column: 12, scope: !9520)
!9536 = !DILocation(line: 1479, column: 5, scope: !9520)
!9537 = !DILocation(line: 0, scope: !1466)
!9538 = !DILocation(line: 1568, column: 5, scope: !1466)
!9539 = !DILocation(line: 1568, column: 20, scope: !1466)
!9540 = !DILocation(line: 1570, column: 34, scope: !1466)
!9541 = !DILocation(line: 1570, column: 5, scope: !1466)
!9542 = !DILocation(line: 1572, column: 5, scope: !1466)
!9543 = !DILocation(line: 1574, column: 5, scope: !1466)
!9544 = !DILocation(line: 1575, column: 5, scope: !1466)
!9545 = !DILocation(line: 1578, column: 5, scope: !1466)
!9546 = !DILocation(line: 1579, column: 5, scope: !1466)
!9547 = !DILocation(line: 1582, column: 5, scope: !1466)
!9548 = !DILocation(line: 1583, column: 5, scope: !1466)
!9549 = !DILocation(line: 1584, column: 5, scope: !1466)
!9550 = !DILocation(line: 1587, column: 1, scope: !1466)
!9551 = !DILocation(line: 1586, column: 5, scope: !1466)
!9552 = distinct !DISubprogram(name: "rtc_forward_time", scope: !1340, file: !1340, line: 1482, type: !9553, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9555)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{null, !1431, !7}
!9555 = !{!9556, !9557, !9558, !9559, !9560, !9561, !9562, !9563}
!9556 = !DILocalVariable(name: "time", arg: 1, scope: !9552, file: !1340, line: 1482, type: !1431)
!9557 = !DILocalVariable(name: "second", arg: 2, scope: !9552, file: !1340, line: 1482, type: !7)
!9558 = !DILocalVariable(name: "minute", scope: !9552, file: !1340, line: 1484, type: !7)
!9559 = !DILocalVariable(name: "hour", scope: !9552, file: !1340, line: 1485, type: !7)
!9560 = !DILocalVariable(name: "day", scope: !9552, file: !1340, line: 1486, type: !7)
!9561 = !DILocalVariable(name: "remender", scope: !9552, file: !1340, line: 1487, type: !7)
!9562 = !DILocalVariable(name: "max_day", scope: !9552, file: !1340, line: 1488, type: !7)
!9563 = !DILocalVariable(name: "days_in_month", scope: !9552, file: !1340, line: 1489, type: !9564)
!9564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9565, size: 416, elements: !860)
!9565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!9566 = !DILocation(line: 0, scope: !9552)
!9567 = !DILocation(line: 1489, column: 15, scope: !9552)
!9568 = !DILocation(line: 1505, column: 21, scope: !9552)
!9569 = !DILocation(line: 1505, column: 15, scope: !9552)
!9570 = !DILocation(line: 1505, column: 12, scope: !9552)
!9571 = !DILocation(line: 1506, column: 20, scope: !9552)
!9572 = !DILocation(line: 1506, column: 14, scope: !9552)
!9573 = !DILocation(line: 1507, column: 18, scope: !9552)
!9574 = !DILocation(line: 1507, column: 12, scope: !9552)
!9575 = !DILocation(line: 1509, column: 16, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9552, file: !1340, line: 1509, column: 9)
!9577 = !DILocation(line: 1509, column: 9, scope: !9552)
!9578 = !DILocation(line: 1514, column: 21, scope: !9552)
!9579 = !DILocation(line: 1514, column: 19, scope: !9552)
!9580 = !DILocation(line: 1515, column: 16, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9552, file: !1340, line: 1515, column: 9)
!9582 = !DILocation(line: 1515, column: 9, scope: !9552)
!9583 = !DILocation(line: 1520, column: 21, scope: !9552)
!9584 = !DILocation(line: 1520, column: 19, scope: !9552)
!9585 = !DILocation(line: 1521, column: 14, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9552, file: !1340, line: 1521, column: 9)
!9587 = !DILocation(line: 1521, column: 9, scope: !9552)
!9588 = !DILocation(line: 1523, column: 20, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9586, file: !1340, line: 1521, column: 20)
!9590 = !DILocation(line: 1524, column: 14, scope: !9589)
!9591 = !DILocation(line: 1526, column: 15, scope: !9589)
!9592 = !DILocation(line: 1526, column: 23, scope: !9589)
!9593 = !DILocation(line: 1527, column: 39, scope: !9589)
!9594 = !DILocation(line: 1527, column: 19, scope: !9589)
!9595 = !DILocation(line: 1528, column: 27, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9589, file: !1340, line: 1528, column: 13)
!9597 = !DILocation(line: 1528, column: 13, scope: !9589)
!9598 = !DILocation(line: 1529, column: 30, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9596, file: !1340, line: 1528, column: 33)
!9600 = !DILocation(line: 1529, column: 39, scope: !9599)
!9601 = !DILocation(line: 1530, column: 26, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9599, file: !1340, line: 1530, column: 17)
!9603 = !DILocation(line: 1530, column: 17, scope: !9599)
!9604 = !DILocation(line: 0, scope: !9589)
!9605 = !DILocation(line: 1534, column: 13, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9589, file: !1340, line: 1534, column: 13)
!9607 = !DILocation(line: 1534, column: 27, scope: !9606)
!9608 = !DILocation(line: 1534, column: 13, scope: !9589)
!9609 = !DILocation(line: 1535, column: 27, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9606, file: !1340, line: 1534, column: 38)
!9611 = !DILocation(line: 1538, column: 26, scope: !9610)
!9612 = !DILocation(line: 1539, column: 31, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9610, file: !1340, line: 1539, column: 17)
!9614 = !DILocation(line: 1539, column: 17, scope: !9610)
!9615 = !DILocation(line: 1540, column: 31, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9613, file: !1340, line: 1539, column: 37)
!9617 = !DILocation(line: 1541, column: 23, scope: !9616)
!9618 = !DILocation(line: 1541, column: 31, scope: !9616)
!9619 = !DILocation(line: 1542, column: 13, scope: !9616)
!9620 = !DILocation(line: 1545, column: 22, scope: !9552)
!9621 = !DILocation(line: 1545, column: 20, scope: !9552)
!9622 = !DILocation(line: 1546, column: 1, scope: !9552)
!9623 = distinct !DISubprogram(name: "test_rtc_alarm_callback", scope: !1340, file: !1340, line: 1548, type: !153, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9624)
!9624 = !{!9625, !9626}
!9625 = !DILocalVariable(name: "parameter", arg: 1, scope: !9623, file: !1340, line: 1548, type: !88)
!9626 = !DILocalVariable(name: "alarm_power_on_time", scope: !9623, file: !1340, line: 1550, type: !1431)
!9627 = !DILocation(line: 0, scope: !9623)
!9628 = !DILocation(line: 1551, column: 5, scope: !9623)
!9629 = !DILocation(line: 1553, column: 27, scope: !9623)
!9630 = !DILocation(line: 1555, column: 5, scope: !9623)
!9631 = !DILocation(line: 1558, column: 5, scope: !9623)
!9632 = !DILocation(line: 1560, column: 5, scope: !9623)
!9633 = !DILocation(line: 1561, column: 5, scope: !9623)
!9634 = !DILocation(line: 1562, column: 5, scope: !9623)
!9635 = !DILocation(line: 1563, column: 1, scope: !9623)
!9636 = distinct !DISubprogram(name: "rtc_enter_test", scope: !1340, file: !1340, line: 1589, type: !9637, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1339, retainedNodes: !9639)
!9637 = !DISubroutineType(types: !9638)
!9638 = !{!1469, !91}
!9639 = !{!9640}
!9640 = !DILocalVariable(name: "enter", arg: 1, scope: !9636, file: !1340, line: 1589, type: !91)
!9641 = !DILocation(line: 0, scope: !9636)
!9642 = !DILocation(line: 1591, column: 5, scope: !9636)
!9643 = !DILocation(line: 1593, column: 9, scope: !9636)
!9644 = !DILocation(line: 1594, column: 9, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9646, file: !1340, line: 1593, column: 16)
!9646 = distinct !DILexicalBlock(scope: !9636, file: !1340, line: 1593, column: 9)
!9647 = !DILocation(line: 1595, column: 5, scope: !9645)
!9648 = !DILocation(line: 1596, column: 9, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9646, file: !1340, line: 1595, column: 12)
!9650 = !DILocation(line: 1598, column: 17, scope: !9636)
!9651 = !DILocation(line: 1600, column: 5, scope: !9636)
!9652 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1504, file: !1504, line: 71, type: !9653, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{null, !88, !61}
!9655 = !{!9656, !9657, !9658, !9752, !9753, !9754}
!9656 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9652, file: !1504, line: 71, type: !88)
!9657 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9652, file: !1504, line: 71, type: !61)
!9658 = !DILocalVariable(name: "D", scope: !9652, file: !1504, line: 73, type: !9659)
!9659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9660, size: 32)
!9660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1693, line: 193, baseType: !9661)
!9661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1693, line: 134, size: 1824, elements: !9662)
!9662 = !{!9663, !9664, !9665, !9671, !9677, !9678, !9685, !9686, !9693, !9694, !9695, !9696, !9703, !9704, !9734, !9735, !9736, !9737, !9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751}
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !9661, file: !1693, line: 136, baseType: !61, size: 32)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !9661, file: !1693, line: 137, baseType: !849, size: 32, offset: 32)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !9661, file: !1693, line: 138, baseType: !9666, size: 32, offset: 64)
!9666 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1777, line: 56, baseType: !9667)
!9667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9668, size: 32)
!9668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 54, size: 8, elements: !9669)
!9669 = !{!9670}
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !9668, file: !1777, line: 55, baseType: !159, size: 8)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !9661, file: !1693, line: 139, baseType: !9672, size: 32, offset: 96)
!9672 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1777, line: 46, baseType: !9673)
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9674, size: 32)
!9674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 44, size: 8, elements: !9675)
!9675 = !{!9676}
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !9674, file: !1777, line: 45, baseType: !159, size: 8)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !9661, file: !1693, line: 140, baseType: !1789, size: 8, offset: 128)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !9661, file: !1693, line: 143, baseType: !9679, size: 32, offset: 160)
!9679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9680, size: 32)
!9680 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1795, line: 146, baseType: !9681)
!9681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 143, size: 64, elements: !9682)
!9682 = !{!9683, !9684}
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9681, file: !1795, line: 144, baseType: !61, size: 32)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9681, file: !1795, line: 145, baseType: !61, size: 32, offset: 32)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !9661, file: !1693, line: 144, baseType: !849, size: 32, offset: 192)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !9661, file: !1693, line: 145, baseType: !9687, size: 32, offset: 224)
!9687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9688, size: 32)
!9688 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1795, line: 152, baseType: !9689)
!9689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 149, size: 64, elements: !9690)
!9690 = !{!9691, !9692}
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !9689, file: !1795, line: 150, baseType: !61, size: 32)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !9689, file: !1795, line: 151, baseType: !61, size: 32, offset: 32)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !9661, file: !1693, line: 146, baseType: !849, size: 32, offset: 256)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !9661, file: !1693, line: 147, baseType: !61, size: 32, offset: 288)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !9661, file: !1693, line: 148, baseType: !849, size: 32, offset: 320)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !9661, file: !1693, line: 151, baseType: !9697, size: 1024, offset: 352)
!9697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9698, size: 1024, elements: !1818)
!9698 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1795, line: 170, baseType: !9699)
!9699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 167, size: 64, elements: !9700)
!9700 = !{!9701, !9702}
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !9699, file: !1795, line: 168, baseType: !61, size: 32)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !9699, file: !1795, line: 169, baseType: !61, size: 32, offset: 32)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !9661, file: !1693, line: 155, baseType: !1820, size: 32, offset: 1376)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !9661, file: !1693, line: 156, baseType: !9705, size: 32, offset: 1408)
!9705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9706, size: 32)
!9706 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1693, line: 124, baseType: !9707)
!9707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1693, line: 90, size: 200, elements: !9708)
!9708 = !{!9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733}
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !9707, file: !1693, line: 91, baseType: !159, size: 8)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !9707, file: !1693, line: 92, baseType: !159, size: 8, offset: 8)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !9707, file: !1693, line: 94, baseType: !159, size: 8, offset: 16)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !9707, file: !1693, line: 95, baseType: !159, size: 8, offset: 24)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !9707, file: !1693, line: 96, baseType: !159, size: 8, offset: 32)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !9707, file: !1693, line: 98, baseType: !159, size: 8, offset: 40)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !9707, file: !1693, line: 99, baseType: !159, size: 8, offset: 48)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !9707, file: !1693, line: 100, baseType: !159, size: 8, offset: 56)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !9707, file: !1693, line: 101, baseType: !159, size: 8, offset: 64)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !9707, file: !1693, line: 103, baseType: !159, size: 8, offset: 72)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !9707, file: !1693, line: 104, baseType: !159, size: 8, offset: 80)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !9707, file: !1693, line: 106, baseType: !159, size: 8, offset: 88)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !9707, file: !1693, line: 107, baseType: !159, size: 8, offset: 96)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !9707, file: !1693, line: 108, baseType: !159, size: 8, offset: 104)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !9707, file: !1693, line: 109, baseType: !159, size: 8, offset: 112)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !9707, file: !1693, line: 110, baseType: !159, size: 8, offset: 120)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !9707, file: !1693, line: 111, baseType: !159, size: 8, offset: 128)
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !9707, file: !1693, line: 112, baseType: !159, size: 8, offset: 136)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !9707, file: !1693, line: 114, baseType: !159, size: 8, offset: 144)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !9707, file: !1693, line: 115, baseType: !159, size: 8, offset: 152)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !9707, file: !1693, line: 118, baseType: !159, size: 8, offset: 160)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !9707, file: !1693, line: 119, baseType: !159, size: 8, offset: 168)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !9707, file: !1693, line: 120, baseType: !159, size: 8, offset: 176)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !9707, file: !1693, line: 121, baseType: !159, size: 8, offset: 184)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !9707, file: !1693, line: 122, baseType: !159, size: 8, offset: 192)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !9661, file: !1693, line: 157, baseType: !61, size: 32, offset: 1440)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !9661, file: !1693, line: 158, baseType: !1018, size: 16, offset: 1472)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !9661, file: !1693, line: 159, baseType: !1018, size: 16, offset: 1488)
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !9661, file: !1693, line: 163, baseType: !1018, size: 16, offset: 1504)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !9661, file: !1693, line: 164, baseType: !1018, size: 16, offset: 1520)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !9661, file: !1693, line: 167, baseType: !159, size: 8, offset: 1536)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !9661, file: !1693, line: 168, baseType: !1859, size: 24, offset: 1544)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !9661, file: !1693, line: 169, baseType: !159, size: 8, offset: 1568)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !9661, file: !1693, line: 170, baseType: !159, size: 8, offset: 1576)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !9661, file: !1693, line: 173, baseType: !1018, size: 16, offset: 1584)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !9661, file: !1693, line: 174, baseType: !61, size: 32, offset: 1600)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !9661, file: !1693, line: 175, baseType: !61, size: 32, offset: 1632)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !9661, file: !1693, line: 178, baseType: !91, size: 8, offset: 1664)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !9661, file: !1693, line: 179, baseType: !91, size: 8, offset: 1672)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !9661, file: !1693, line: 182, baseType: !1868, size: 32, offset: 1696)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !9661, file: !1693, line: 186, baseType: !1868, size: 32, offset: 1728)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !9661, file: !1693, line: 187, baseType: !1873, size: 32, offset: 1760)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !9661, file: !1693, line: 188, baseType: !1873, size: 32, offset: 1792)
!9752 = !DILocalVariable(name: "i", scope: !9652, file: !1504, line: 74, type: !61)
!9753 = !DILocalVariable(name: "data_cnt", scope: !9652, file: !1504, line: 74, type: !61)
!9754 = !DILocalVariable(name: "p_data", scope: !9652, file: !1504, line: 75, type: !1541)
!9755 = !DILocation(line: 0, scope: !9652)
!9756 = !DILocation(line: 77, column: 16, scope: !9652)
!9757 = !DILocation(line: 79, column: 53, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !1504, line: 79, column: 5)
!9759 = distinct !DILexicalBlock(scope: !9652, file: !1504, line: 79, column: 5)
!9760 = !DILocation(line: 79, column: 5, scope: !9759)
!9761 = !DILocation(line: 79, column: 41, scope: !9759)
!9762 = !DILocation(line: 77, column: 47, scope: !9652)
!9763 = !DILocation(line: 80, column: 13, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1504, line: 80, column: 13)
!9765 = distinct !DILexicalBlock(scope: !9758, file: !1504, line: 79, column: 80)
!9766 = !DILocation(line: 80, column: 21, scope: !9764)
!9767 = !DILocation(line: 80, column: 13, scope: !9765)
!9768 = !DILocation(line: 81, column: 13, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !1504, line: 81, column: 13)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !1504, line: 81, column: 13)
!9771 = distinct !DILexicalBlock(scope: !9772, file: !1504, line: 81, column: 13)
!9772 = distinct !DILexicalBlock(scope: !9764, file: !1504, line: 80, column: 36)
!9773 = !DILocation(line: 79, column: 65, scope: !9758)
!9774 = !DILocation(line: 79, column: 70, scope: !9758)
!9775 = distinct !{!9775, !9760, !9776}
!9776 = !DILocation(line: 84, column: 5, scope: !9759)
!9777 = !DILocation(line: 85, column: 1, scope: !9652)
!9778 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1504, file: !1504, line: 93, type: !4260, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9779)
!9779 = !{!9780, !9781}
!9780 = !DILocalVariable(name: "num", arg: 1, scope: !9778, file: !1504, line: 93, type: !61)
!9781 = !DILocalVariable(name: "ret", scope: !9778, file: !1504, line: 95, type: !18)
!9782 = !DILocation(line: 0, scope: !9778)
!9783 = !DILocation(line: 100, column: 9, scope: !9778)
!9784 = !DILocation(line: 102, column: 5, scope: !9778)
!9785 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1504, file: !1504, line: 110, type: !9786, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9789)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{null, !9788}
!9788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!9789 = !{!9790, !9791}
!9790 = !DILocalVariable(name: "CS", arg: 1, scope: !9785, file: !1504, line: 110, type: !9788)
!9791 = !DILocalVariable(name: "val", scope: !9785, file: !1504, line: 112, type: !61)
!9792 = !DILocation(line: 0, scope: !9785)
!9793 = !DILocation(line: 114, column: 5, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !1504, line: 114, column: 5)
!9795 = distinct !DILexicalBlock(scope: !9785, file: !1504, line: 114, column: 5)
!9796 = !DILocation(line: 116, column: 16, scope: !9785)
!9797 = !DILocation(line: 117, column: 9, scope: !9785)
!9798 = !DILocation(line: 122, column: 13, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !1504, line: 121, column: 27)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1504, line: 121, column: 16)
!9801 = distinct !DILexicalBlock(scope: !9785, file: !1504, line: 117, column: 9)
!9802 = !DILocation(line: 127, column: 9, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !1504, line: 127, column: 9)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !1504, line: 127, column: 9)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !1504, line: 127, column: 9)
!9806 = distinct !DILexicalBlock(scope: !9800, file: !1504, line: 125, column: 12)
!9807 = !DILocation(line: 0, scope: !9801)
!9808 = !DILocation(line: 134, column: 5, scope: !9785)
!9809 = !DILocation(line: 134, column: 19, scope: !9785)
!9810 = !DILocation(line: 134, column: 35, scope: !9785)
!9811 = !DILocation(line: 134, column: 12, scope: !9785)
!9812 = distinct !{!9812, !9808, !9813}
!9813 = !DILocation(line: 134, column: 57, scope: !9785)
!9814 = !DILocation(line: 135, column: 19, scope: !9785)
!9815 = !DILocation(line: 135, column: 34, scope: !9785)
!9816 = !DILocation(line: 135, column: 12, scope: !9785)
!9817 = !DILocation(line: 135, column: 5, scope: !9785)
!9818 = distinct !{!9818, !9817, !9819}
!9819 = !DILocation(line: 135, column: 50, scope: !9785)
!9820 = !DILocation(line: 130, column: 9, scope: !9785)
!9821 = !DILocation(line: 138, column: 24, scope: !9785)
!9822 = !DILocation(line: 139, column: 1, scope: !9785)
!9823 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1504, file: !1504, line: 148, type: !9786, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9824)
!9824 = !{!9825, !9826}
!9825 = !DILocalVariable(name: "CS", arg: 1, scope: !9823, file: !1504, line: 148, type: !9788)
!9826 = !DILocalVariable(name: "val", scope: !9823, file: !1504, line: 150, type: !61)
!9827 = !DILocation(line: 0, scope: !9823)
!9828 = !DILocation(line: 153, column: 16, scope: !9823)
!9829 = !DILocation(line: 154, column: 9, scope: !9823)
!9830 = !DILocation(line: 155, column: 24, scope: !9823)
!9831 = !DILocation(line: 158, column: 5, scope: !9823)
!9832 = !DILocation(line: 158, column: 18, scope: !9823)
!9833 = !DILocation(line: 158, column: 32, scope: !9823)
!9834 = distinct !{!9834, !9831, !9835}
!9835 = !DILocation(line: 158, column: 49, scope: !9823)
!9836 = !DILocation(line: 163, column: 16, scope: !9823)
!9837 = !DILocation(line: 164, column: 9, scope: !9823)
!9838 = !DILocation(line: 165, column: 24, scope: !9823)
!9839 = !DILocation(line: 168, column: 5, scope: !9823)
!9840 = !DILocation(line: 168, column: 18, scope: !9823)
!9841 = !DILocation(line: 168, column: 32, scope: !9823)
!9842 = distinct !{!9842, !9839, !9843}
!9843 = !DILocation(line: 168, column: 46, scope: !9823)
!9844 = !DILocation(line: 174, column: 10, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9823, file: !1504, line: 174, column: 9)
!9846 = !DILocation(line: 174, column: 25, scope: !9845)
!9847 = !DILocation(line: 174, column: 9, scope: !9823)
!9848 = !DILocation(line: 175, column: 9, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !1504, line: 175, column: 9)
!9850 = distinct !DILexicalBlock(scope: !9851, file: !1504, line: 175, column: 9)
!9851 = distinct !DILexicalBlock(scope: !9845, file: !1504, line: 174, column: 36)
!9852 = !DILocation(line: 176, column: 5, scope: !9851)
!9853 = !DILocation(line: 179, column: 1, scope: !9823)
!9854 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1504, file: !1504, line: 186, type: !9855, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9857)
!9855 = !DISubroutineType(types: !9856)
!9856 = !{!61, !9788}
!9857 = !{!9858, !9859, !9860}
!9858 = !DILocalVariable(name: "CS", arg: 1, scope: !9854, file: !1504, line: 186, type: !9788)
!9859 = !DILocalVariable(name: "val", scope: !9854, file: !1504, line: 188, type: !61)
!9860 = !DILocalVariable(name: "misc_ctl", scope: !9854, file: !1504, line: 189, type: !61)
!9861 = !DILocation(line: 0, scope: !9854)
!9862 = !DILocation(line: 204, column: 16, scope: !9854)
!9863 = !DILocation(line: 208, column: 12, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9854, file: !1504, line: 208, column: 9)
!9865 = !DILocation(line: 208, column: 9, scope: !9854)
!9866 = !DILocation(line: 212, column: 20, scope: !9854)
!9867 = !DILocation(line: 215, column: 1, scope: !9854)
!9868 = !DILocation(line: 215, column: 15, scope: !9854)
!9869 = !DILocation(line: 215, column: 29, scope: !9854)
!9870 = !DILocation(line: 215, column: 8, scope: !9854)
!9871 = distinct !{!9871, !9867, !9872}
!9872 = !DILocation(line: 215, column: 46, scope: !9854)
!9873 = !DILocation(line: 216, column: 22, scope: !9854)
!9874 = !DILocation(line: 216, column: 36, scope: !9854)
!9875 = !DILocation(line: 216, column: 9, scope: !9854)
!9876 = distinct !{!9876, !9875, !9877}
!9877 = !DILocation(line: 216, column: 47, scope: !9854)
!9878 = !DILocation(line: 218, column: 13, scope: !9854)
!9879 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1504, file: !1504, line: 227, type: !9786, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9880)
!9880 = !{!9881}
!9881 = !DILocalVariable(name: "CS", arg: 1, scope: !9879, file: !1504, line: 227, type: !9788)
!9882 = !DILocation(line: 0, scope: !9879)
!9883 = !DILocation(line: 235, column: 5, scope: !9879)
!9884 = !DILocation(line: 236, column: 5, scope: !9879)
!9885 = !DILocation(line: 238, column: 1, scope: !9879)
!9886 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1504, file: !1504, line: 249, type: !9887, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9889)
!9887 = !DISubroutineType(types: !9888)
!9888 = !{null, !9788, !859}
!9889 = !{!9890, !9891, !9892, !9893, !9894}
!9890 = !DILocalVariable(name: "CS", arg: 1, scope: !9886, file: !1504, line: 249, type: !9788)
!9891 = !DILocalVariable(name: "cmd", arg: 2, scope: !9886, file: !1504, line: 249, type: !859)
!9892 = !DILocalVariable(name: "cmdi", scope: !9886, file: !1504, line: 251, type: !61)
!9893 = !DILocalVariable(name: "cmdo", scope: !9886, file: !1504, line: 251, type: !61)
!9894 = !DILocalVariable(name: "len", scope: !9886, file: !1504, line: 252, type: !159)
!9895 = !DILocation(line: 0, scope: !9886)
!9896 = !DILocation(line: 254, column: 46, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !1504, line: 254, column: 5)
!9898 = distinct !DILexicalBlock(scope: !9886, file: !1504, line: 254, column: 5)
!9899 = !DILocation(line: 254, column: 5, scope: !9898)
!9900 = !DILocation(line: 255, column: 22, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9897, file: !1504, line: 254, column: 103)
!9902 = !DILocation(line: 255, column: 59, scope: !9901)
!9903 = !DILocation(line: 255, column: 51, scope: !9901)
!9904 = !DILocation(line: 254, column: 65, scope: !9897)
!9905 = !DILocation(line: 254, column: 97, scope: !9897)
!9906 = distinct !{!9906, !9899, !9907}
!9907 = !DILocation(line: 256, column: 5, scope: !9898)
!9908 = !DILocation(line: 258, column: 9, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9886, file: !1504, line: 258, column: 9)
!9910 = !DILocation(line: 262, column: 5, scope: !9886)
!9911 = !DILocation(line: 263, column: 33, scope: !9886)
!9912 = !DILocation(line: 264, column: 25, scope: !9886)
!9913 = !DILocation(line: 265, column: 24, scope: !9886)
!9914 = !DILocation(line: 266, column: 5, scope: !9886)
!9915 = !DILocation(line: 268, column: 5, scope: !9886)
!9916 = !DILocation(line: 269, column: 1, scope: !9886)
!9917 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1504, file: !1504, line: 281, type: !9918, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9920)
!9918 = !DISubroutineType(types: !9919)
!9919 = !{null, !9788, !6126, !859, !859}
!9920 = !{!9921, !9922, !9923, !9924, !9925, !9926}
!9921 = !DILocalVariable(name: "CS", arg: 1, scope: !9917, file: !1504, line: 281, type: !9788)
!9922 = !DILocalVariable(name: "cmd", arg: 2, scope: !9917, file: !1504, line: 281, type: !6126)
!9923 = !DILocalVariable(name: "address", arg: 3, scope: !9917, file: !1504, line: 281, type: !859)
!9924 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !9917, file: !1504, line: 281, type: !859)
!9925 = !DILocalVariable(name: "cmd1", scope: !9917, file: !1504, line: 283, type: !61)
!9926 = !DILocalVariable(name: "cmd2", scope: !9917, file: !1504, line: 283, type: !61)
!9927 = !DILocation(line: 0, scope: !9917)
!9928 = !DILocation(line: 285, column: 12, scope: !9917)
!9929 = !DILocation(line: 287, column: 23, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9917, file: !1504, line: 287, column: 9)
!9931 = !DILocation(line: 287, column: 9, scope: !9917)
!9932 = !DILocation(line: 288, column: 22, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9930, file: !1504, line: 287, column: 31)
!9934 = !DILocation(line: 288, column: 55, scope: !9933)
!9935 = !DILocation(line: 288, column: 53, scope: !9933)
!9936 = !DILocation(line: 289, column: 5, scope: !9933)
!9937 = !DILocation(line: 290, column: 22, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9930, file: !1504, line: 289, column: 12)
!9939 = !DILocation(line: 290, column: 53, scope: !9938)
!9940 = !DILocation(line: 290, column: 51, scope: !9938)
!9941 = !DILocation(line: 291, column: 21, scope: !9938)
!9942 = !DILocation(line: 0, scope: !9930)
!9943 = !DILocation(line: 294, column: 33, scope: !9917)
!9944 = !DILocation(line: 295, column: 38, scope: !9917)
!9945 = !DILocation(line: 296, column: 41, scope: !9917)
!9946 = !DILocation(line: 296, column: 25, scope: !9917)
!9947 = !DILocation(line: 297, column: 24, scope: !9917)
!9948 = !DILocation(line: 299, column: 5, scope: !9917)
!9949 = !DILocation(line: 300, column: 5, scope: !9917)
!9950 = !DILocation(line: 302, column: 1, scope: !9917)
!9951 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1504, file: !1504, line: 312, type: !9952, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9954)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{!61, !859, !859}
!9954 = !{!9955, !9956}
!9955 = !DILocalVariable(name: "cmd", arg: 1, scope: !9951, file: !1504, line: 312, type: !859)
!9956 = !DILocalVariable(name: "address", arg: 2, scope: !9951, file: !1504, line: 312, type: !859)
!9957 = !DILocation(line: 0, scope: !9951)
!9958 = !DILocation(line: 314, column: 14, scope: !9951)
!9959 = !DILocation(line: 314, column: 44, scope: !9951)
!9960 = !DILocation(line: 314, column: 82, scope: !9951)
!9961 = !DILocation(line: 314, column: 75, scope: !9951)
!9962 = !DILocation(line: 314, column: 5, scope: !9951)
!9963 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1504, file: !1504, line: 332, type: !9964, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9967)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!61, !859, !859, !9966, !1541}
!9966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!9967 = !{!9968, !9969, !9970, !9971, !9972, !9980, !9981, !9982}
!9968 = !DILocalVariable(name: "cmd", arg: 1, scope: !9963, file: !1504, line: 332, type: !859)
!9969 = !DILocalVariable(name: "address", arg: 2, scope: !9963, file: !1504, line: 332, type: !859)
!9970 = !DILocalVariable(name: "p_data", arg: 3, scope: !9963, file: !1504, line: 332, type: !9966)
!9971 = !DILocalVariable(name: "length", arg: 4, scope: !9963, file: !1504, line: 332, type: !1541)
!9972 = !DILocalVariable(name: "tmp", scope: !9963, file: !1504, line: 334, type: !9973)
!9973 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1693, line: 202, baseType: !9974)
!9974 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1693, line: 198, size: 32, elements: !9975)
!9975 = !{!9976, !9977, !9979}
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !9974, file: !1693, line: 199, baseType: !61, size: 32)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !9974, file: !1693, line: 200, baseType: !9978, size: 32)
!9978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 32, elements: !508)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !9974, file: !1693, line: 201, baseType: !505, size: 32)
!9980 = !DILocalVariable(name: "cmd1", scope: !9963, file: !1504, line: 335, type: !61)
!9981 = !DILocalVariable(name: "cmd2", scope: !9963, file: !1504, line: 335, type: !61)
!9982 = !DILocalVariable(name: "i", scope: !9963, file: !1504, line: 336, type: !61)
!9983 = !DILocation(line: 0, scope: !9963)
!9984 = !DILocation(line: 334, column: 5, scope: !9963)
!9985 = !DILocation(line: 334, column: 16, scope: !9963)
!9986 = !DILocation(line: 338, column: 12, scope: !9963)
!9987 = !DILocation(line: 340, column: 17, scope: !9963)
!9988 = !DILocation(line: 342, column: 17, scope: !9963)
!9989 = !DILocation(line: 342, column: 9, scope: !9963)
!9990 = !DILocation(line: 342, column: 15, scope: !9963)
!9991 = !DILocation(line: 344, column: 22, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !1504, line: 343, column: 29)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !1504, line: 343, column: 5)
!9994 = distinct !DILexicalBlock(scope: !9963, file: !1504, line: 343, column: 5)
!9995 = !DILocation(line: 343, column: 5, scope: !9994)
!9996 = !DILocation(line: 344, column: 21, scope: !9992)
!9997 = !DILocation(line: 344, column: 9, scope: !9992)
!9998 = !DILocation(line: 344, column: 19, scope: !9992)
!9999 = !DILocation(line: 345, column: 18, scope: !9992)
!10000 = !DILocation(line: 343, column: 25, scope: !9993)
!10001 = !DILocation(line: 343, column: 19, scope: !9993)
!10002 = distinct !{!10002, !9995, !10003}
!10003 = !DILocation(line: 346, column: 5, scope: !9994)
!10004 = !DILocation(line: 347, column: 16, scope: !9963)
!10005 = !DILocation(line: 348, column: 16, scope: !9963)
!10006 = !DILocation(line: 348, column: 15, scope: !9963)
!10007 = !DILocation(line: 339, column: 17, scope: !9963)
!10008 = !DILocation(line: 339, column: 52, scope: !9963)
!10009 = !DILocation(line: 339, column: 45, scope: !9963)
!10010 = !DILocation(line: 348, column: 13, scope: !9963)
!10011 = !DILocation(line: 349, column: 38, scope: !9963)
!10012 = !DILocation(line: 351, column: 1, scope: !9963)
!10013 = !DILocation(line: 350, column: 5, scope: !9963)
!10014 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1504, file: !1504, line: 367, type: !10015, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10017)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{null, !61, !88, !1320}
!10017 = !{!10018, !10019, !10020, !10021, !10022, !10023}
!10018 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !10014, file: !1504, line: 367, type: !61)
!10019 = !DILocalVariable(name: "buff", arg: 2, scope: !10014, file: !1504, line: 367, type: !88)
!10020 = !DILocalVariable(name: "length", arg: 3, scope: !10014, file: !1504, line: 367, type: !1320)
!10021 = !DILocalVariable(name: "i", scope: !10014, file: !1504, line: 369, type: !61)
!10022 = !DILocalVariable(name: "p_data", scope: !10014, file: !1504, line: 370, type: !849)
!10023 = !DILocalVariable(name: "tmp", scope: !10014, file: !1504, line: 371, type: !9973)
!10024 = !DILocation(line: 0, scope: !10014)
!10025 = !DILocation(line: 371, column: 5, scope: !10014)
!10026 = !DILocation(line: 371, column: 13, scope: !10014)
!10027 = !DILocation(line: 373, column: 18, scope: !10014)
!10028 = !DILocation(line: 376, column: 15, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10014, file: !1504, line: 376, column: 9)
!10030 = !DILocation(line: 376, column: 30, scope: !10029)
!10031 = !DILocation(line: 376, column: 11, scope: !10029)
!10032 = !DILocation(line: 376, column: 9, scope: !10014)
!10033 = !DILocation(line: 377, column: 23, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !1504, line: 377, column: 9)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !1504, line: 377, column: 9)
!10036 = distinct !DILexicalBlock(scope: !10029, file: !1504, line: 376, column: 41)
!10037 = !DILocation(line: 377, column: 9, scope: !10035)
!10038 = !DILocation(line: 378, column: 13, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !1504, line: 377, column: 80)
!10040 = !DILocation(line: 377, column: 41, scope: !10034)
!10041 = !DILocation(line: 377, column: 54, scope: !10034)
!10042 = !DILocation(line: 377, column: 67, scope: !10034)
!10043 = distinct !{!10043, !10037, !10044}
!10044 = !DILocation(line: 379, column: 9, scope: !10035)
!10045 = !DILocation(line: 382, column: 37, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10029, file: !1504, line: 382, column: 14)
!10047 = !DILocation(line: 382, column: 16, scope: !10046)
!10048 = !DILocation(line: 0, scope: !10046)
!10049 = !DILocation(line: 382, column: 14, scope: !10029)
!10050 = !DILocation(line: 391, column: 9, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !1504, line: 391, column: 9)
!10052 = distinct !DILexicalBlock(scope: !10046, file: !1504, line: 390, column: 13)
!10053 = !DILocation(line: 383, column: 9, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !1504, line: 383, column: 9)
!10055 = distinct !DILexicalBlock(scope: !10046, file: !1504, line: 382, column: 49)
!10056 = !DILocation(line: 384, column: 26, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !1504, line: 383, column: 80)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !1504, line: 383, column: 9)
!10059 = !DILocation(line: 384, column: 24, scope: !10057)
!10060 = !DILocation(line: 385, column: 47, scope: !10057)
!10061 = !DILocation(line: 385, column: 26, scope: !10057)
!10062 = !DILocation(line: 385, column: 24, scope: !10057)
!10063 = !DILocation(line: 386, column: 13, scope: !10057)
!10064 = !DILocation(line: 383, column: 41, scope: !10058)
!10065 = !DILocation(line: 383, column: 54, scope: !10058)
!10066 = !DILocation(line: 383, column: 67, scope: !10058)
!10067 = !DILocation(line: 383, column: 23, scope: !10058)
!10068 = distinct !{!10068, !10053, !10069}
!10069 = !DILocation(line: 387, column: 9, scope: !10054)
!10070 = !DILocation(line: 392, column: 13, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !1504, line: 392, column: 13)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !1504, line: 391, column: 61)
!10073 = distinct !DILexicalBlock(scope: !10051, file: !1504, line: 391, column: 9)
!10074 = !DILocation(line: 393, column: 36, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10076, file: !1504, line: 392, column: 51)
!10076 = distinct !DILexicalBlock(scope: !10071, file: !1504, line: 392, column: 13)
!10077 = !DILocation(line: 393, column: 29, scope: !10075)
!10078 = !DILocation(line: 393, column: 17, scope: !10075)
!10079 = !DILocation(line: 393, column: 27, scope: !10075)
!10080 = !DILocation(line: 392, column: 47, scope: !10076)
!10081 = !DILocation(line: 392, column: 27, scope: !10076)
!10082 = !DILocation(line: 392, column: 31, scope: !10076)
!10083 = distinct !{!10083, !10070, !10084}
!10084 = !DILocation(line: 394, column: 13, scope: !10071)
!10085 = !DILocation(line: 395, column: 13, scope: !10072)
!10086 = !DILocation(line: 391, column: 41, scope: !10073)
!10087 = !DILocation(line: 391, column: 54, scope: !10073)
!10088 = !DILocation(line: 391, column: 23, scope: !10073)
!10089 = distinct !{!10089, !10050, !10090}
!10090 = !DILocation(line: 396, column: 9, scope: !10051)
!10091 = !DILocation(line: 398, column: 1, scope: !10014)
!10092 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1504, file: !1504, line: 414, type: !10093, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10095)
!10093 = !DISubroutineType(types: !10094)
!10094 = !{null, !9788, !6125, !849, !9788, !9788}
!10095 = !{!10096, !10097, !10098, !10099, !10100, !10101, !10102, !10103, !10104, !10105}
!10096 = !DILocalVariable(name: "CS", arg: 1, scope: !10092, file: !1504, line: 414, type: !9788)
!10097 = !DILocalVariable(name: "cmd", arg: 2, scope: !10092, file: !1504, line: 414, type: !6125)
!10098 = !DILocalVariable(name: "data", arg: 3, scope: !10092, file: !1504, line: 414, type: !849)
!10099 = !DILocalVariable(name: "outl", arg: 4, scope: !10092, file: !1504, line: 414, type: !9788)
!10100 = !DILocalVariable(name: "inl", arg: 5, scope: !10092, file: !1504, line: 414, type: !9788)
!10101 = !DILocalVariable(name: "tmp", scope: !10092, file: !1504, line: 416, type: !61)
!10102 = !DILocalVariable(name: "i", scope: !10092, file: !1504, line: 417, type: !61)
!10103 = !DILocalVariable(name: "j", scope: !10092, file: !1504, line: 417, type: !61)
!10104 = !DILocalVariable(name: "p_data", scope: !10092, file: !1504, line: 418, type: !849)
!10105 = !DILocalVariable(name: "p_tmp", scope: !10092, file: !1504, line: 418, type: !849)
!10106 = !DILocation(line: 0, scope: !10092)
!10107 = !DILocation(line: 416, column: 5, scope: !10092)
!10108 = !DILocation(line: 422, column: 60, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !1504, line: 422, column: 5)
!10110 = distinct !DILexicalBlock(scope: !10092, file: !1504, line: 422, column: 5)
!10111 = !DILocation(line: 422, column: 5, scope: !10110)
!10112 = !DILocation(line: 423, column: 25, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10114, file: !1504, line: 423, column: 9)
!10114 = distinct !DILexicalBlock(scope: !10109, file: !1504, line: 422, column: 83)
!10115 = !DILocation(line: 423, column: 32, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10113, file: !1504, line: 423, column: 9)
!10117 = !DILocation(line: 423, column: 9, scope: !10113)
!10118 = !DILocation(line: 424, column: 24, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !1504, line: 423, column: 59)
!10120 = !DILocation(line: 424, column: 13, scope: !10119)
!10121 = !DILocation(line: 424, column: 22, scope: !10119)
!10122 = !DILocation(line: 423, column: 50, scope: !10116)
!10123 = !DILocation(line: 423, column: 55, scope: !10116)
!10124 = !DILocation(line: 423, column: 39, scope: !10116)
!10125 = distinct !{!10125, !10117, !10126}
!10126 = !DILocation(line: 425, column: 9, scope: !10113)
!10127 = !DILocation(line: 426, column: 9, scope: !10114)
!10128 = !DILocation(line: 0, scope: !10110)
!10129 = !DILocation(line: 422, column: 75, scope: !10109)
!10130 = distinct !{!10130, !10111, !10131}
!10131 = !DILocation(line: 427, column: 5, scope: !10110)
!10132 = !DILocation(line: 428, column: 25, scope: !10092)
!10133 = !DILocation(line: 429, column: 26, scope: !10092)
!10134 = !DILocation(line: 429, column: 24, scope: !10092)
!10135 = !DILocation(line: 430, column: 5, scope: !10092)
!10136 = !DILocation(line: 431, column: 5, scope: !10092)
!10137 = !DILocation(line: 433, column: 67, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !1504, line: 433, column: 5)
!10139 = distinct !DILexicalBlock(scope: !10092, file: !1504, line: 433, column: 5)
!10140 = !DILocation(line: 433, column: 5, scope: !10139)
!10141 = !DILocation(line: 433, column: 56, scope: !10139)
!10142 = !DILocation(line: 434, column: 17, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10138, file: !1504, line: 433, column: 100)
!10144 = !DILocation(line: 434, column: 15, scope: !10143)
!10145 = !DILocation(line: 433, column: 74, scope: !10138)
!10146 = !DILocation(line: 433, column: 79, scope: !10138)
!10147 = !DILocation(line: 433, column: 87, scope: !10138)
!10148 = distinct !{!10148, !10140, !10149}
!10149 = !DILocation(line: 435, column: 5, scope: !10139)
!10150 = !DILocation(line: 437, column: 1, scope: !10092)
!10151 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1504, file: !1504, line: 462, type: !10152, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{null, !9788, !6125}
!10154 = !{!10155, !10156, !10157, !10158, !10159}
!10155 = !DILocalVariable(name: "CS", arg: 1, scope: !10151, file: !1504, line: 462, type: !9788)
!10156 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !10151, file: !1504, line: 462, type: !6125)
!10157 = !DILocalVariable(name: "i", scope: !10151, file: !1504, line: 464, type: !61)
!10158 = !DILocalVariable(name: "val", scope: !10151, file: !1504, line: 465, type: !61)
!10159 = !DILocalVariable(name: "status", scope: !10160, file: !1504, line: 492, type: !159)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1504, line: 491, column: 47)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !1504, line: 491, column: 13)
!10162 = distinct !DILexicalBlock(scope: !10151, file: !1504, line: 477, column: 17)
!10163 = !DILocation(line: 0, scope: !10151)
!10164 = !DILocation(line: 467, column: 17, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10151, file: !1504, line: 467, column: 9)
!10166 = !DILocation(line: 467, column: 9, scope: !10151)
!10167 = !DILocation(line: 474, column: 11, scope: !10151)
!10168 = !DILocation(line: 477, column: 5, scope: !10151)
!10169 = !DILocation(line: 478, column: 17, scope: !10162)
!10170 = !DILocation(line: 478, column: 9, scope: !10162)
!10171 = !DILocation(line: 481, column: 17, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !1504, line: 481, column: 17)
!10173 = distinct !DILexicalBlock(scope: !10162, file: !1504, line: 478, column: 29)
!10174 = !DILocation(line: 481, column: 17, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10176, file: !1504, line: 481, column: 17)
!10176 = distinct !DILexicalBlock(scope: !10177, file: !1504, line: 481, column: 17)
!10177 = distinct !DILexicalBlock(scope: !10172, file: !1504, line: 481, column: 17)
!10178 = !DILocation(line: 481, column: 17, scope: !10176)
!10179 = !DILocation(line: 481, column: 17, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !1504, line: 481, column: 17)
!10181 = distinct !DILexicalBlock(scope: !10177, file: !1504, line: 481, column: 17)
!10182 = !DILocation(line: 484, column: 17, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10173, file: !1504, line: 484, column: 17)
!10184 = !DILocation(line: 484, column: 17, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !1504, line: 484, column: 17)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !1504, line: 484, column: 17)
!10187 = distinct !DILexicalBlock(scope: !10183, file: !1504, line: 484, column: 17)
!10188 = !DILocation(line: 484, column: 17, scope: !10186)
!10189 = !DILocation(line: 484, column: 17, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !1504, line: 484, column: 17)
!10191 = distinct !DILexicalBlock(scope: !10187, file: !1504, line: 484, column: 17)
!10192 = !DILocation(line: 0, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !1504, line: 487, column: 17)
!10194 = distinct !DILexicalBlock(scope: !10173, file: !1504, line: 487, column: 17)
!10195 = !DILocation(line: 487, column: 17, scope: !10194)
!10196 = !DILocation(line: 487, column: 17, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !1504, line: 487, column: 17)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !1504, line: 487, column: 17)
!10199 = !DILocation(line: 487, column: 17, scope: !10198)
!10200 = !DILocation(line: 487, column: 17, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10202, file: !1504, line: 487, column: 17)
!10202 = distinct !DILexicalBlock(scope: !10193, file: !1504, line: 487, column: 17)
!10203 = !DILocation(line: 487, column: 17, scope: !10202)
!10204 = !DILocation(line: 491, column: 23, scope: !10161)
!10205 = !DILocation(line: 491, column: 13, scope: !10161)
!10206 = !DILocation(line: 491, column: 28, scope: !10161)
!10207 = !DILocation(line: 491, column: 13, scope: !10162)
!10208 = !DILocation(line: 492, column: 13, scope: !10160)
!10209 = !DILocation(line: 494, column: 13, scope: !10160)
!10210 = !DILocation(line: 0, scope: !10160)
!10211 = !DILocation(line: 495, column: 17, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10160, file: !1504, line: 494, column: 16)
!10213 = !DILocation(line: 496, column: 22, scope: !10160)
!10214 = !DILocation(line: 496, column: 31, scope: !10160)
!10215 = !DILocation(line: 496, column: 29, scope: !10160)
!10216 = !DILocation(line: 496, column: 13, scope: !10212)
!10217 = distinct !{!10217, !10209, !10218}
!10218 = !DILocation(line: 496, column: 45, scope: !10160)
!10219 = !DILocation(line: 497, column: 9, scope: !10161)
!10220 = !DILocation(line: 503, column: 25, scope: !10162)
!10221 = !DILocation(line: 497, column: 9, scope: !10160)
!10222 = !DILocation(line: 500, column: 70, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10161, file: !1504, line: 499, column: 14)
!10224 = !DILocation(line: 500, column: 60, scope: !10223)
!10225 = !DILocation(line: 500, column: 13, scope: !10223)
!10226 = !DILocation(line: 503, column: 15, scope: !10162)
!10227 = !DILocation(line: 503, column: 11, scope: !10162)
!10228 = distinct !{!10228, !10168, !10229}
!10229 = !DILocation(line: 504, column: 5, scope: !10151)
!10230 = !DILocation(line: 505, column: 1, scope: !10151)
!10231 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1504, file: !1504, line: 514, type: !10232, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10234)
!10232 = !DISubroutineType(types: !10233)
!10233 = !{null, !9788, !849, !159}
!10234 = !{!10235, !10236, !10237}
!10235 = !DILocalVariable(name: "CS", arg: 1, scope: !10231, file: !1504, line: 514, type: !9788)
!10236 = !DILocalVariable(name: "id", arg: 2, scope: !10231, file: !1504, line: 514, type: !849)
!10237 = !DILocalVariable(name: "cmd", arg: 3, scope: !10231, file: !1504, line: 514, type: !159)
!10238 = !DILocation(line: 0, scope: !10231)
!10239 = !DILocation(line: 517, column: 5, scope: !10231)
!10240 = !DILocation(line: 518, column: 1, scope: !10231)
!10241 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1504, file: !1504, line: 521, type: !10242, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10244)
!10242 = !DISubroutineType(types: !10243)
!10243 = !{null, !9788, !849}
!10244 = !{!10245, !10246}
!10245 = !DILocalVariable(name: "CS", arg: 1, scope: !10241, file: !1504, line: 521, type: !9788)
!10246 = !DILocalVariable(name: "id", arg: 2, scope: !10241, file: !1504, line: 521, type: !849)
!10247 = !DILocation(line: 0, scope: !10241)
!10248 = !DILocation(line: 523, column: 5, scope: !10241)
!10249 = !DILocation(line: 524, column: 1, scope: !10241)
!10250 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1504, file: !1504, line: 536, type: !10251, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !345)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!10253}
!10253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1507, line: 57, baseType: !1506)
!10254 = !DILocation(line: 540, column: 5, scope: !10250)
!10255 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1504, file: !1504, line: 561, type: !10256, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !345)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!10258}
!10258 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1507, line: 66, baseType: !1514)
!10259 = !DILocation(line: 564, column: 15, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10255, file: !1504, line: 564, column: 9)
!10261 = !DILocation(line: 564, column: 31, scope: !10260)
!10262 = !DILocation(line: 564, column: 45, scope: !10260)
!10263 = !DILocation(line: 0, scope: !10260)
!10264 = !DILocation(line: 569, column: 1, scope: !10255)
!10265 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1504, file: !1504, line: 580, type: !10266, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10268)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{!91, !849}
!10268 = !{!10269, !10270}
!10269 = !DILocalVariable(name: "buffer", arg: 1, scope: !10265, file: !1504, line: 580, type: !849)
!10270 = !DILocalVariable(name: "i", scope: !10265, file: !1504, line: 582, type: !7)
!10271 = !DILocation(line: 0, scope: !10265)
!10272 = !DILocation(line: 583, column: 5, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10265, file: !1504, line: 583, column: 5)
!10274 = !DILocation(line: 584, column: 9, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10276, file: !1504, line: 583, column: 29)
!10276 = distinct !DILexicalBlock(scope: !10273, file: !1504, line: 583, column: 5)
!10277 = !DILocation(line: 584, column: 19, scope: !10275)
!10278 = !DILocation(line: 583, column: 25, scope: !10276)
!10279 = !DILocation(line: 583, column: 19, scope: !10276)
!10280 = distinct !{!10280, !10272, !10281}
!10281 = !DILocation(line: 585, column: 5, scope: !10273)
!10282 = !DILocation(line: 586, column: 5, scope: !10265)
!10283 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1504, file: !1504, line: 613, type: !343, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !10284)
!10284 = !{!10285}
!10285 = !DILocalVariable(name: "D", scope: !10283, file: !1504, line: 615, type: !9659)
!10286 = !DILocation(line: 0, scope: !10283)
!10287 = !DILocation(line: 616, column: 32, scope: !10283)
!10288 = !DILocation(line: 616, column: 37, scope: !10283)
!10289 = !DILocation(line: 616, column: 27, scope: !10283)
!10290 = !DILocation(line: 617, column: 44, scope: !10283)
!10291 = !DILocation(line: 617, column: 31, scope: !10283)
!10292 = !DILocation(line: 617, column: 28, scope: !10283)
!10293 = !DILocation(line: 618, column: 32, scope: !10283)
!10294 = !DILocation(line: 618, column: 31, scope: !10283)
!10295 = !DILocation(line: 618, column: 29, scope: !10283)
!10296 = !DILocation(line: 621, column: 31, scope: !10283)
!10297 = !DILocation(line: 621, column: 24, scope: !10283)
!10298 = !DILocation(line: 622, column: 34, scope: !10283)
!10299 = !DILocation(line: 622, column: 27, scope: !10283)
!10300 = !DILocation(line: 623, column: 32, scope: !10283)
!10301 = !DILocation(line: 623, column: 25, scope: !10283)
!10302 = !DILocation(line: 624, column: 33, scope: !10283)
!10303 = !DILocation(line: 624, column: 26, scope: !10283)
!10304 = !DILocation(line: 625, column: 33, scope: !10283)
!10305 = !DILocation(line: 625, column: 26, scope: !10283)
!10306 = !DILocation(line: 629, column: 32, scope: !10283)
!10307 = !DILocation(line: 629, column: 47, scope: !10283)
!10308 = !DILocation(line: 629, column: 25, scope: !10283)
!10309 = !DILocation(line: 630, column: 32, scope: !10283)
!10310 = !DILocation(line: 630, column: 47, scope: !10283)
!10311 = !DILocation(line: 630, column: 25, scope: !10283)
!10312 = !DILocation(line: 633, column: 24, scope: !10283)
!10313 = !DILocation(line: 633, column: 31, scope: !10283)
!10314 = !DILocation(line: 633, column: 36, scope: !10283)
!10315 = !DILocation(line: 633, column: 28, scope: !10283)
!10316 = !DILocation(line: 633, column: 5, scope: !10283)
!10317 = !DILocation(line: 635, column: 5, scope: !10283)
!10318 = !DILocation(line: 636, column: 1, scope: !10283)
!10319 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1504, file: !1504, line: 641, type: !343, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !345)
!10320 = !DILocation(line: 644, column: 26, scope: !10319)
!10321 = !DILocation(line: 644, column: 24, scope: !10319)
!10322 = !DILocation(line: 645, column: 29, scope: !10319)
!10323 = !DILocation(line: 645, column: 27, scope: !10319)
!10324 = !DILocation(line: 646, column: 27, scope: !10319)
!10325 = !DILocation(line: 646, column: 25, scope: !10319)
!10326 = !DILocation(line: 647, column: 28, scope: !10319)
!10327 = !DILocation(line: 647, column: 26, scope: !10319)
!10328 = !DILocation(line: 648, column: 27, scope: !10319)
!10329 = !DILocation(line: 648, column: 25, scope: !10319)
!10330 = !DILocation(line: 652, column: 32, scope: !10319)
!10331 = !DILocation(line: 652, column: 47, scope: !10319)
!10332 = !DILocation(line: 652, column: 25, scope: !10319)
!10333 = !DILocation(line: 655, column: 24, scope: !10319)
!10334 = !DILocation(line: 655, column: 5, scope: !10319)
!10335 = !DILocation(line: 657, column: 5, scope: !10319)
!10336 = !DILocation(line: 660, column: 9, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10319, file: !1504, line: 660, column: 9)
!10338 = !DILocation(line: 660, column: 59, scope: !10337)
!10339 = !DILocation(line: 660, column: 38, scope: !10337)
!10340 = !DILocation(line: 660, column: 37, scope: !10337)
!10341 = !DILocation(line: 660, column: 33, scope: !10337)
!10342 = !DILocation(line: 660, column: 9, scope: !10319)
!10343 = !DILocation(line: 661, column: 9, scope: !10337)
!10344 = distinct !{!10344, !10343, !10345}
!10345 = !DILocation(line: 661, column: 18, scope: !10337)
!10346 = !DILocation(line: 662, column: 1, scope: !10319)
!10347 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1504, file: !1504, line: 668, type: !343, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !345)
!10348 = !DILocation(line: 671, column: 9, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10347, file: !1504, line: 671, column: 9)
!10350 = !DILocation(line: 671, column: 40, scope: !10349)
!10351 = !DILocation(line: 671, column: 9, scope: !10347)
!10352 = !DILocation(line: 672, column: 47, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10349, file: !1504, line: 671, column: 46)
!10354 = !DILocation(line: 672, column: 40, scope: !10353)
!10355 = !DILocation(line: 673, column: 5, scope: !10353)
!10356 = !DILocation(line: 674, column: 9, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10347, file: !1504, line: 674, column: 9)
!10358 = !DILocation(line: 674, column: 41, scope: !10357)
!10359 = !DILocation(line: 674, column: 9, scope: !10347)
!10360 = !DILocation(line: 675, column: 48, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10357, file: !1504, line: 674, column: 47)
!10362 = !DILocation(line: 675, column: 41, scope: !10361)
!10363 = !DILocation(line: 676, column: 5, scope: !10361)
!10364 = !DILocation(line: 679, column: 33, scope: !10347)
!10365 = !DILocation(line: 679, column: 48, scope: !10347)
!10366 = !DILocation(line: 679, column: 25, scope: !10347)
!10367 = !DILocation(line: 680, column: 25, scope: !10347)
!10368 = !DILocation(line: 686, column: 5, scope: !10347)
!10369 = !DILocation(line: 688, column: 1, scope: !10347)
!10370 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1504, file: !1504, line: 689, type: !343, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !345)
!10371 = !DILocation(line: 692, column: 9, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10370, file: !1504, line: 692, column: 9)
!10373 = !DILocation(line: 692, column: 40, scope: !10372)
!10374 = !DILocation(line: 692, column: 9, scope: !10370)
!10375 = !DILocation(line: 693, column: 29, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10372, file: !1504, line: 692, column: 46)
!10377 = !DILocation(line: 694, column: 5, scope: !10376)
!10378 = !DILocation(line: 695, column: 9, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10370, file: !1504, line: 695, column: 9)
!10380 = !DILocation(line: 695, column: 41, scope: !10379)
!10381 = !DILocation(line: 695, column: 9, scope: !10370)
!10382 = !DILocation(line: 696, column: 29, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10379, file: !1504, line: 695, column: 47)
!10384 = !DILocation(line: 697, column: 5, scope: !10383)
!10385 = !DILocation(line: 698, column: 5, scope: !10370)
!10386 = !DILocation(line: 699, column: 1, scope: !10370)
!10387 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1599, file: !1599, line: 91, type: !4512, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10388)
!10388 = !{!10389}
!10389 = !DILocalVariable(name: "counter", scope: !10387, file: !1599, line: 102, type: !61)
!10390 = !DILocation(line: 0, scope: !10387)
!10391 = !DILocation(line: 110, column: 5, scope: !10387)
!10392 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1599, file: !1599, line: 114, type: !4512, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10393)
!10393 = !{!10394}
!10394 = !DILocalVariable(name: "counter", scope: !10392, file: !1599, line: 125, type: !61)
!10395 = !DILocation(line: 0, scope: !10392)
!10396 = !DILocation(line: 133, column: 5, scope: !10392)
!10397 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1599, file: !1599, line: 137, type: !7382, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10398)
!10398 = !{!10399}
!10399 = !DILocalVariable(name: "delay_us", arg: 1, scope: !10397, file: !1599, line: 137, type: !61)
!10400 = !DILocation(line: 0, scope: !10397)
!10401 = !DILocation(line: 142, column: 5, scope: !10397)
!10402 = !DILocation(line: 144, column: 1, scope: !10397)
!10403 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1599, file: !1599, line: 163, type: !4512, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10404)
!10404 = !{!10405}
!10405 = !DILocalVariable(name: "mask", scope: !10403, file: !1599, line: 165, type: !61)
!10406 = !DILocation(line: 166, column: 12, scope: !10403)
!10407 = !DILocation(line: 0, scope: !10403)
!10408 = !DILocation(line: 167, column: 5, scope: !10403)
!10409 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1599, file: !1599, line: 171, type: !7382, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10410)
!10410 = !{!10411}
!10411 = !DILocalVariable(name: "mask", arg: 1, scope: !10409, file: !1599, line: 171, type: !61)
!10412 = !DILocation(line: 0, scope: !10409)
!10413 = !DILocation(line: 173, column: 5, scope: !10409)
!10414 = !DILocation(line: 174, column: 1, scope: !10409)
!10415 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1599, file: !1599, line: 199, type: !1869, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10416)
!10416 = !{!10417}
!10417 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10415, file: !1599, line: 199, type: !88)
!10418 = !DILocation(line: 0, scope: !10415)
!10419 = !DILocation(line: 201, column: 5, scope: !10415)
!10420 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1599, file: !1599, line: 388, type: !10421, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !345)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{!1320}
!10423 = !DILocation(line: 390, column: 5, scope: !10420)
!10424 = distinct !DISubprogram(name: "CompareData", scope: !1599, file: !1599, line: 872, type: !10425, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10427)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{!91, !88, !88, !61}
!10427 = !{!10428, !10429, !10430, !10431, !10432, !10435, !10436, !10439, !10440, !10442}
!10428 = !DILocalVariable(name: "Address", arg: 1, scope: !10424, file: !1599, line: 872, type: !88)
!10429 = !DILocalVariable(name: "Data", arg: 2, scope: !10424, file: !1599, line: 872, type: !88)
!10430 = !DILocalVariable(name: "Length", arg: 3, scope: !10424, file: !1599, line: 872, type: !61)
!10431 = !DILocalVariable(name: "i", scope: !10424, file: !1599, line: 874, type: !61)
!10432 = !DILocalVariable(name: "Source", scope: !10433, file: !1599, line: 877, type: !1541)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !1599, line: 876, column: 74)
!10434 = distinct !DILexicalBlock(scope: !10424, file: !1599, line: 876, column: 9)
!10435 = !DILocalVariable(name: "Dest", scope: !10433, file: !1599, line: 878, type: !1541)
!10436 = !DILocalVariable(name: "Source", scope: !10437, file: !1599, line: 885, type: !1427)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !1599, line: 884, column: 79)
!10438 = distinct !DILexicalBlock(scope: !10434, file: !1599, line: 884, column: 16)
!10439 = !DILocalVariable(name: "Dest", scope: !10437, file: !1599, line: 886, type: !1427)
!10440 = !DILocalVariable(name: "Source", scope: !10441, file: !1599, line: 893, type: !849)
!10441 = distinct !DILexicalBlock(scope: !10438, file: !1599, line: 892, column: 12)
!10442 = !DILocalVariable(name: "Dest", scope: !10441, file: !1599, line: 894, type: !849)
!10443 = !DILocation(line: 0, scope: !10424)
!10444 = !DILocation(line: 876, column: 11, scope: !10434)
!10445 = !DILocation(line: 876, column: 42, scope: !10434)
!10446 = !DILocation(line: 877, column: 28, scope: !10433)
!10447 = !DILocation(line: 0, scope: !10433)
!10448 = !DILocation(line: 878, column: 26, scope: !10433)
!10449 = !DILocation(line: 879, column: 23, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !1599, line: 879, column: 9)
!10451 = distinct !DILexicalBlock(scope: !10433, file: !1599, line: 879, column: 9)
!10452 = !DILocation(line: 879, column: 9, scope: !10451)
!10453 = !DILocation(line: 880, column: 17, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10455, file: !1599, line: 880, column: 17)
!10455 = distinct !DILexicalBlock(scope: !10450, file: !1599, line: 879, column: 68)
!10456 = !DILocation(line: 880, column: 30, scope: !10454)
!10457 = !DILocation(line: 880, column: 27, scope: !10454)
!10458 = !DILocation(line: 879, column: 64, scope: !10450)
!10459 = !DILocation(line: 880, column: 17, scope: !10455)
!10460 = distinct !{!10460, !10452, !10461}
!10461 = !DILocation(line: 883, column: 9, scope: !10451)
!10462 = !DILocation(line: 884, column: 47, scope: !10438)
!10463 = !DILocation(line: 895, column: 23, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !1599, line: 895, column: 9)
!10465 = distinct !DILexicalBlock(scope: !10441, file: !1599, line: 895, column: 9)
!10466 = !DILocation(line: 895, column: 9, scope: !10465)
!10467 = !DILocation(line: 885, column: 28, scope: !10437)
!10468 = !DILocation(line: 0, scope: !10437)
!10469 = !DILocation(line: 886, column: 26, scope: !10437)
!10470 = !DILocation(line: 887, column: 23, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !1599, line: 887, column: 9)
!10472 = distinct !DILexicalBlock(scope: !10437, file: !1599, line: 887, column: 9)
!10473 = !DILocation(line: 887, column: 9, scope: !10472)
!10474 = !DILocation(line: 888, column: 17, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1599, line: 888, column: 17)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !1599, line: 887, column: 68)
!10477 = !DILocation(line: 888, column: 30, scope: !10475)
!10478 = !DILocation(line: 888, column: 27, scope: !10475)
!10479 = !DILocation(line: 887, column: 64, scope: !10471)
!10480 = !DILocation(line: 888, column: 17, scope: !10476)
!10481 = distinct !{!10481, !10473, !10482}
!10482 = !DILocation(line: 891, column: 9, scope: !10472)
!10483 = !DILocation(line: 896, column: 17, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1599, line: 896, column: 17)
!10485 = distinct !DILexicalBlock(scope: !10464, file: !1599, line: 895, column: 38)
!10486 = !DILocation(line: 896, column: 30, scope: !10484)
!10487 = !DILocation(line: 896, column: 27, scope: !10484)
!10488 = !DILocation(line: 895, column: 34, scope: !10464)
!10489 = !DILocation(line: 896, column: 17, scope: !10485)
!10490 = distinct !{!10490, !10466, !10491}
!10491 = !DILocation(line: 899, column: 9, scope: !10465)
!10492 = !DILocation(line: 902, column: 1, scope: !10424)
!10493 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1599, file: !1599, line: 919, type: !10494, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10496)
!10494 = !DISubroutineType(types: !10495)
!10495 = !{null, !88, !88, !61}
!10496 = !{!10497, !10498, !10499, !10500, !10501, !10502, !10503, !10504, !10505, !10506, !10507}
!10497 = !DILocalVariable(name: "Target", arg: 1, scope: !10493, file: !1599, line: 919, type: !88)
!10498 = !DILocalVariable(name: "Data", arg: 2, scope: !10493, file: !1599, line: 919, type: !88)
!10499 = !DILocalVariable(name: "Size", arg: 3, scope: !10493, file: !1599, line: 919, type: !61)
!10500 = !DILocalVariable(name: "D", scope: !10493, file: !1599, line: 921, type: !1769)
!10501 = !DILocalVariable(name: "address", scope: !10493, file: !1599, line: 922, type: !61)
!10502 = !DILocalVariable(name: "p_data", scope: !10493, file: !1599, line: 923, type: !849)
!10503 = !DILocalVariable(name: "cmd1", scope: !10493, file: !1599, line: 924, type: !61)
!10504 = !DILocalVariable(name: "length", scope: !10493, file: !1599, line: 924, type: !61)
!10505 = !DILocalVariable(name: "written", scope: !10493, file: !1599, line: 924, type: !61)
!10506 = !DILocalVariable(name: "status", scope: !10493, file: !1599, line: 925, type: !1821)
!10507 = !DILocalVariable(name: "savedMask", scope: !10493, file: !1599, line: 926, type: !61)
!10508 = !DILocation(line: 0, scope: !10493)
!10509 = !DILocation(line: 921, column: 60, scope: !10493)
!10510 = !DILocation(line: 923, column: 5, scope: !10493)
!10511 = !DILocation(line: 923, column: 19, scope: !10493)
!10512 = !DILocation(line: 924, column: 5, scope: !10493)
!10513 = !DILocation(line: 932, column: 9, scope: !10493)
!10514 = !DILocation(line: 933, column: 8, scope: !10493)
!10515 = !DILocation(line: 933, column: 21, scope: !10493)
!10516 = !DILocation(line: 935, column: 14, scope: !10493)
!10517 = !DILocation(line: 935, column: 5, scope: !10493)
!10518 = !DILocation(line: 922, column: 29, scope: !10493)
!10519 = !DILocation(line: 937, column: 18, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10493, file: !1599, line: 935, column: 23)
!10521 = !DILocation(line: 937, column: 35, scope: !10520)
!10522 = !DILocation(line: 937, column: 74, scope: !10520)
!10523 = !DILocation(line: 937, column: 50, scope: !10520)
!10524 = !DILocation(line: 937, column: 39, scope: !10520)
!10525 = !DILocation(line: 940, column: 35, scope: !10520)
!10526 = !DILocation(line: 940, column: 29, scope: !10520)
!10527 = !DILocation(line: 940, column: 16, scope: !10520)
!10528 = !DILocation(line: 942, column: 18, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10520, file: !1599, line: 942, column: 13)
!10530 = !DILocation(line: 942, column: 29, scope: !10529)
!10531 = !DILocation(line: 942, column: 13, scope: !10520)
!10532 = !DILocation(line: 943, column: 13, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10529, file: !1599, line: 942, column: 55)
!10534 = !DILocation(line: 944, column: 9, scope: !10533)
!10535 = !DILocation(line: 947, column: 16, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10520, file: !1599, line: 947, column: 13)
!10537 = !DILocation(line: 947, column: 29, scope: !10536)
!10538 = !DILocation(line: 0, scope: !10536)
!10539 = !DILocation(line: 947, column: 13, scope: !10520)
!10540 = !DILocation(line: 948, column: 20, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10536, file: !1599, line: 947, column: 35)
!10542 = !DILocation(line: 949, column: 32, scope: !10541)
!10543 = !DILocation(line: 949, column: 40, scope: !10541)
!10544 = !DILocation(line: 949, column: 13, scope: !10541)
!10545 = !DILocation(line: 950, column: 9, scope: !10541)
!10546 = !DILocation(line: 953, column: 20, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10536, file: !1599, line: 952, column: 9)
!10548 = !DILocation(line: 954, column: 32, scope: !10547)
!10549 = !DILocation(line: 954, column: 40, scope: !10547)
!10550 = !DILocation(line: 954, column: 13, scope: !10547)
!10551 = !DILocation(line: 957, column: 21, scope: !10520)
!10552 = !DILocation(line: 963, column: 45, scope: !10520)
!10553 = !DILocation(line: 963, column: 42, scope: !10520)
!10554 = !DILocation(line: 963, column: 40, scope: !10520)
!10555 = !DILocation(line: 963, column: 58, scope: !10520)
!10556 = !DILocation(line: 963, column: 29, scope: !10520)
!10557 = !DILocation(line: 964, column: 28, scope: !10520)
!10558 = !DILocation(line: 965, column: 37, scope: !10520)
!10559 = !DILocation(line: 966, column: 9, scope: !10520)
!10560 = !DILocation(line: 967, column: 26, scope: !10520)
!10561 = !DILocation(line: 967, column: 9, scope: !10520)
!10562 = !DILocation(line: 968, column: 29, scope: !10520)
!10563 = !DILocation(line: 968, column: 9, scope: !10520)
!10564 = !DILocation(line: 972, column: 9, scope: !10520)
!10565 = !DILocation(line: 978, column: 9, scope: !10520)
!10566 = !DILocation(line: 979, column: 50, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10520, file: !1599, line: 978, column: 22)
!10568 = !DILocation(line: 979, column: 55, scope: !10567)
!10569 = !DILocation(line: 979, column: 22, scope: !10567)
!10570 = !DILocation(line: 980, column: 35, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10567, file: !1599, line: 980, column: 17)
!10572 = !DILocation(line: 980, column: 32, scope: !10571)
!10573 = !DILocation(line: 980, column: 30, scope: !10571)
!10574 = !DILocation(line: 980, column: 19, scope: !10571)
!10575 = !DILocation(line: 980, column: 17, scope: !10567)
!10576 = distinct !{!10576, !10565, !10577}
!10577 = !DILocation(line: 983, column: 9, scope: !10520)
!10578 = !DILocation(line: 991, column: 9, scope: !10520)
!10579 = !DILocation(line: 993, column: 19, scope: !10520)
!10580 = !DILocation(line: 993, column: 16, scope: !10520)
!10581 = !DILocation(line: 994, column: 14, scope: !10520)
!10582 = !DILocation(line: 995, column: 17, scope: !10520)
!10583 = distinct !{!10583, !10517, !10584}
!10584 = !DILocation(line: 996, column: 5, scope: !10493)
!10585 = !DILocation(line: 998, column: 21, scope: !10493)
!10586 = !DILocation(line: 1005, column: 9, scope: !10493)
!10587 = !DILocation(line: 1008, column: 1, scope: !10493)
!10588 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1599, file: !1599, line: 1427, type: !10589, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10591)
!10589 = !DISubroutineType(types: !10590)
!10590 = !{null, !1769}
!10591 = !{!10592, !10593}
!10592 = !DILocalVariable(name: "D", arg: 1, scope: !10588, file: !1599, line: 1427, type: !1769)
!10593 = !DILocalVariable(name: "Result", scope: !10588, file: !1599, line: 1429, type: !2432)
!10594 = !DILocation(line: 0, scope: !10588)
!10595 = !DILocation(line: 1430, column: 5, scope: !10588)
!10596 = !DILocation(line: 1431, column: 18, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10588, file: !1599, line: 1430, column: 8)
!10598 = !DILocation(line: 1432, column: 21, scope: !10588)
!10599 = !DILocation(line: 1432, column: 5, scope: !10597)
!10600 = distinct !{!10600, !10595, !10601}
!10601 = !DILocation(line: 1432, column: 43, scope: !10588)
!10602 = !DILocation(line: 1433, column: 1, scope: !10588)
!10603 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1599, file: !1599, line: 3478, type: !10589, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10604)
!10604 = !{!10605}
!10605 = !DILocalVariable(name: "D", arg: 1, scope: !10603, file: !1599, line: 3478, type: !1769)
!10606 = !DILocation(line: 0, scope: !10603)
!10607 = !DILocation(line: 3480, column: 30, scope: !10603)
!10608 = !DILocation(line: 3480, column: 35, scope: !10603)
!10609 = !DILocation(line: 3480, column: 27, scope: !10603)
!10610 = !DILocation(line: 3480, column: 5, scope: !10603)
!10611 = !DILocation(line: 3481, column: 1, scope: !10603)
!10612 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1599, file: !1599, line: 2382, type: !343, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10613)
!10613 = !{!10614}
!10614 = !DILocalVariable(name: "savedMask", scope: !10612, file: !1599, line: 2384, type: !61)
!10615 = !DILocation(line: 2385, column: 17, scope: !10612)
!10616 = !DILocation(line: 0, scope: !10612)
!10617 = !DILocation(line: 2390, column: 20, scope: !10612)
!10618 = !DILocation(line: 2391, column: 5, scope: !10612)
!10619 = !DILocation(line: 2392, column: 1, scope: !10612)
!10620 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1599, file: !1599, line: 3536, type: !10621, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10623)
!10621 = !DISubroutineType(types: !10622)
!10622 = !{!61, !1769, !159}
!10623 = !{!10624, !10625, !10626, !10627}
!10624 = !DILocalVariable(name: "D", arg: 1, scope: !10620, file: !1599, line: 3536, type: !1769)
!10625 = !DILocalVariable(name: "cmd", arg: 2, scope: !10620, file: !1599, line: 3536, type: !159)
!10626 = !DILocalVariable(name: "savedMask", scope: !10620, file: !1599, line: 3538, type: !61)
!10627 = !DILocalVariable(name: "result", scope: !10620, file: !1599, line: 3539, type: !61)
!10628 = !DILocation(line: 0, scope: !10620)
!10629 = !DILocation(line: 3541, column: 17, scope: !10620)
!10630 = !DILocation(line: 3542, column: 22, scope: !10620)
!10631 = !DILocation(line: 3542, column: 5, scope: !10620)
!10632 = !DILocation(line: 3543, column: 35, scope: !10620)
!10633 = !DILocation(line: 3543, column: 33, scope: !10620)
!10634 = !DILocation(line: 3544, column: 25, scope: !10620)
!10635 = !DILocation(line: 3545, column: 24, scope: !10620)
!10636 = !DILocation(line: 3546, column: 25, scope: !10620)
!10637 = !DILocation(line: 3546, column: 5, scope: !10620)
!10638 = !DILocation(line: 3547, column: 42, scope: !10620)
!10639 = !DILocation(line: 3547, column: 60, scope: !10620)
!10640 = !DILocation(line: 3547, column: 14, scope: !10620)
!10641 = !DILocation(line: 3548, column: 5, scope: !10620)
!10642 = !DILocation(line: 3550, column: 5, scope: !10620)
!10643 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1599, file: !1599, line: 2393, type: !343, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10644)
!10644 = !{!10645}
!10645 = !DILocalVariable(name: "savedMask", scope: !10643, file: !1599, line: 2395, type: !61)
!10646 = !DILocation(line: 2396, column: 17, scope: !10643)
!10647 = !DILocation(line: 0, scope: !10643)
!10648 = !DILocation(line: 2401, column: 20, scope: !10643)
!10649 = !DILocation(line: 2402, column: 5, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !1599, line: 2402, column: 5)
!10651 = distinct !DILexicalBlock(scope: !10643, file: !1599, line: 2402, column: 5)
!10652 = !DILocation(line: 2403, column: 5, scope: !10643)
!10653 = !DILocation(line: 2404, column: 1, scope: !10643)
!10654 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1599, file: !1599, line: 1440, type: !10589, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10655)
!10655 = !{!10656, !10657}
!10656 = !DILocalVariable(name: "D", arg: 1, scope: !10654, file: !1599, line: 1440, type: !1769)
!10657 = !DILocalVariable(name: "savedMask", scope: !10654, file: !1599, line: 1442, type: !1320)
!10658 = !DILocation(line: 0, scope: !10654)
!10659 = !DILocation(line: 1443, column: 17, scope: !10654)
!10660 = !DILocation(line: 1444, column: 9, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10654, file: !1599, line: 1444, column: 9)
!10662 = !DILocation(line: 1444, column: 9, scope: !10654)
!10663 = !DILocation(line: 1445, column: 17, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10661, file: !1599, line: 1444, column: 24)
!10665 = !DILocation(line: 1446, column: 9, scope: !10664)
!10666 = !DILocation(line: 1451, column: 1, scope: !10654)
!10667 = !DILocation(line: 1448, column: 9, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10661, file: !1599, line: 1447, column: 12)
!10669 = !DILocation(line: 1449, column: 9, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10671, file: !1599, line: 1449, column: 9)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !1599, line: 1449, column: 9)
!10672 = distinct !DILexicalBlock(scope: !10668, file: !1599, line: 1449, column: 9)
!10673 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1599, file: !1599, line: 1027, type: !343, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10674)
!10674 = !{!10675, !10676, !10677, !10678}
!10675 = !DILocalVariable(name: "D", scope: !10673, file: !1599, line: 1029, type: !1769)
!10676 = !DILocalVariable(name: "status", scope: !10673, file: !1599, line: 1030, type: !1821)
!10677 = !DILocalVariable(name: "savedMask", scope: !10673, file: !1599, line: 1031, type: !61)
!10678 = !DILocalVariable(name: "duration", scope: !10679, file: !1599, line: 1231, type: !61)
!10679 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1230, column: 5)
!10680 = !DILocation(line: 0, scope: !10673)
!10681 = !DILocation(line: 1033, column: 17, scope: !10673)
!10682 = !DILocation(line: 1034, column: 8, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1034, column: 8)
!10684 = !DILocation(line: 1034, column: 30, scope: !10683)
!10685 = !DILocation(line: 1034, column: 8, scope: !10673)
!10686 = !DILocation(line: 1039, column: 27, scope: !10673)
!10687 = !DILocation(line: 1058, column: 48, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1055, column: 5)
!10689 = !DILocation(line: 1069, column: 5, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !1599, line: 1069, column: 5)
!10691 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1069, column: 5)
!10692 = !DILocation(line: 1069, column: 5, scope: !10691)
!10693 = !DILocation(line: 1069, column: 5, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10690, file: !1599, line: 1069, column: 5)
!10695 = !DILocation(line: 1075, column: 10, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1075, column: 9)
!10697 = !DILocation(line: 1075, column: 27, scope: !10696)
!10698 = !DILocation(line: 1075, column: 33, scope: !10696)
!10699 = !DILocation(line: 1075, column: 40, scope: !10696)
!10700 = !DILocation(line: 1075, column: 53, scope: !10696)
!10701 = !DILocation(line: 1075, column: 9, scope: !10673)
!10702 = !DILocation(line: 1084, column: 9, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10696, file: !1599, line: 1083, column: 11)
!10704 = !DILocation(line: 1085, column: 50, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10703, file: !1599, line: 1084, column: 21)
!10706 = !DILocation(line: 1085, column: 55, scope: !10705)
!10707 = !DILocation(line: 1085, column: 22, scope: !10705)
!10708 = !DILocation(line: 1086, column: 35, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10705, file: !1599, line: 1086, column: 17)
!10710 = !DILocation(line: 1086, column: 32, scope: !10709)
!10711 = !DILocation(line: 1086, column: 30, scope: !10709)
!10712 = !DILocation(line: 1086, column: 19, scope: !10709)
!10713 = !DILocation(line: 1086, column: 17, scope: !10705)
!10714 = distinct !{!10714, !10702, !10715}
!10715 = !DILocation(line: 1089, column: 9, scope: !10703)
!10716 = !DILocation(line: 1107, column: 11, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1107, column: 9)
!10718 = !DILocation(line: 1107, column: 30, scope: !10717)
!10719 = !DILocation(line: 1117, column: 46, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10717, file: !1599, line: 1107, column: 53)
!10721 = !DILocation(line: 1117, column: 51, scope: !10720)
!10722 = !DILocation(line: 1117, column: 18, scope: !10720)
!10723 = !DILocation(line: 1120, column: 31, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10720, file: !1599, line: 1120, column: 13)
!10725 = !DILocation(line: 1120, column: 28, scope: !10724)
!10726 = !DILocation(line: 1120, column: 26, scope: !10724)
!10727 = !DILocation(line: 1120, column: 15, scope: !10724)
!10728 = !DILocation(line: 1120, column: 13, scope: !10720)
!10729 = !DILocation(line: 1128, column: 13, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10724, file: !1599, line: 1120, column: 55)
!10731 = !DILocation(line: 1131, column: 13, scope: !10730)
!10732 = !DILocation(line: 1132, column: 54, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10730, file: !1599, line: 1131, column: 23)
!10734 = !DILocation(line: 1132, column: 59, scope: !10733)
!10735 = !DILocation(line: 1132, column: 26, scope: !10733)
!10736 = !DILocation(line: 1133, column: 39, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10733, file: !1599, line: 1133, column: 21)
!10738 = !DILocation(line: 1133, column: 36, scope: !10737)
!10739 = !DILocation(line: 1133, column: 34, scope: !10737)
!10740 = !DILocation(line: 1133, column: 23, scope: !10737)
!10741 = !DILocation(line: 1133, column: 21, scope: !10733)
!10742 = distinct !{!10742, !10731, !10743}
!10743 = !DILocation(line: 1158, column: 13, scope: !10730)
!10744 = !DILocation(line: 1162, column: 21, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10730, file: !1599, line: 1162, column: 17)
!10746 = !DILocation(line: 1162, column: 32, scope: !10745)
!10747 = !DILocation(line: 1162, column: 51, scope: !10745)
!10748 = !DILocation(line: 1162, column: 58, scope: !10745)
!10749 = !DILocation(line: 1162, column: 71, scope: !10745)
!10750 = !DILocation(line: 1162, column: 17, scope: !10730)
!10751 = !DILocation(line: 1164, column: 45, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10745, file: !1599, line: 1162, column: 91)
!10753 = !DILocation(line: 1165, column: 36, scope: !10752)
!10754 = !DILocation(line: 1166, column: 37, scope: !10752)
!10755 = !DILocation(line: 1167, column: 34, scope: !10752)
!10756 = !DILocation(line: 1167, column: 17, scope: !10752)
!10757 = !DILocation(line: 1168, column: 37, scope: !10752)
!10758 = !DILocation(line: 1168, column: 17, scope: !10752)
!10759 = !DILocation(line: 1171, column: 50, scope: !10752)
!10760 = !DILocation(line: 1172, column: 37, scope: !10752)
!10761 = !DILocation(line: 1173, column: 45, scope: !10752)
!10762 = !DILocation(line: 1174, column: 34, scope: !10752)
!10763 = !DILocation(line: 1174, column: 17, scope: !10752)
!10764 = !DILocation(line: 1175, column: 37, scope: !10752)
!10765 = !DILocation(line: 1175, column: 17, scope: !10752)
!10766 = !DILocation(line: 1178, column: 17, scope: !10752)
!10767 = !DILocation(line: 1179, column: 49, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10752, file: !1599, line: 1178, column: 20)
!10769 = !DILocation(line: 1180, column: 40, scope: !10768)
!10770 = !DILocation(line: 1181, column: 41, scope: !10768)
!10771 = !DILocation(line: 1182, column: 38, scope: !10768)
!10772 = !DILocation(line: 1182, column: 21, scope: !10768)
!10773 = !DILocation(line: 1183, column: 41, scope: !10768)
!10774 = !DILocation(line: 1183, column: 21, scope: !10768)
!10775 = !DILocation(line: 1184, column: 43, scope: !10768)
!10776 = !DILocation(line: 1185, column: 17, scope: !10768)
!10777 = distinct !{!10777, !10766, !10778}
!10778 = !DILocation(line: 1185, column: 32, scope: !10752)
!10779 = !DILocation(line: 1194, column: 13, scope: !10730)
!10780 = !DILocation(line: 1195, column: 9, scope: !10730)
!10781 = !DILocation(line: 1197, column: 21, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !1599, line: 1197, column: 17)
!10783 = distinct !DILexicalBlock(scope: !10724, file: !1599, line: 1195, column: 16)
!10784 = !DILocation(line: 1197, column: 32, scope: !10782)
!10785 = !DILocation(line: 1197, column: 53, scope: !10782)
!10786 = !DILocation(line: 1197, column: 60, scope: !10782)
!10787 = !DILocation(line: 1197, column: 76, scope: !10782)
!10788 = !DILocation(line: 1197, column: 17, scope: !10783)
!10789 = !DILocation(line: 1198, column: 54, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10782, file: !1599, line: 1197, column: 98)
!10791 = !DILocation(line: 1198, column: 59, scope: !10790)
!10792 = !DILocation(line: 1198, column: 26, scope: !10790)
!10793 = !DILocation(line: 1199, column: 40, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10790, file: !1599, line: 1199, column: 21)
!10795 = !DILocation(line: 1199, column: 37, scope: !10794)
!10796 = !DILocation(line: 1199, column: 35, scope: !10794)
!10797 = !DILocation(line: 1199, column: 24, scope: !10794)
!10798 = !DILocation(line: 1199, column: 63, scope: !10794)
!10799 = !DILocation(line: 1200, column: 41, scope: !10794)
!10800 = !DILocation(line: 1200, column: 39, scope: !10794)
!10801 = !DILocation(line: 1200, column: 28, scope: !10794)
!10802 = !DILocation(line: 1199, column: 21, scope: !10790)
!10803 = !DILocation(line: 1201, column: 40, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10794, file: !1599, line: 1200, column: 68)
!10805 = !DILocation(line: 1201, column: 21, scope: !10804)
!10806 = !DILocation(line: 1202, column: 40, scope: !10804)
!10807 = !DILocation(line: 1202, column: 21, scope: !10804)
!10808 = !DILocation(line: 1203, column: 17, scope: !10804)
!10809 = !DILocation(line: 1206, column: 13, scope: !10783)
!10810 = !DILocation(line: 1228, column: 25, scope: !10673)
!10811 = !DILocation(line: 1231, column: 29, scope: !10679)
!10812 = !DILocation(line: 0, scope: !10679)
!10813 = !DILocation(line: 1232, column: 13, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10679, file: !1599, line: 1232, column: 13)
!10815 = !DILocation(line: 1232, column: 43, scope: !10814)
!10816 = !DILocation(line: 1232, column: 13, scope: !10679)
!10817 = !DILocation(line: 1233, column: 43, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !1599, line: 1232, column: 55)
!10819 = !DILocation(line: 1234, column: 9, scope: !10818)
!10820 = !DILocation(line: 1237, column: 5, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !1599, line: 1237, column: 5)
!10822 = distinct !DILexicalBlock(scope: !10673, file: !1599, line: 1237, column: 5)
!10823 = !DILocation(line: 1240, column: 5, scope: !10673)
!10824 = !DILocation(line: 1241, column: 1, scope: !10673)
!10825 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1599, file: !1599, line: 3421, type: !10589, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10826)
!10826 = !{!10827, !10828, !10829, !10830}
!10827 = !DILocalVariable(name: "D", arg: 1, scope: !10825, file: !1599, line: 3421, type: !1769)
!10828 = !DILocalVariable(name: "savedMask", scope: !10825, file: !1599, line: 3423, type: !61)
!10829 = !DILocalVariable(name: "currtime", scope: !10825, file: !1599, line: 3424, type: !61)
!10830 = !DILocalVariable(name: "difftime", scope: !10825, file: !1599, line: 3424, type: !61)
!10831 = !DILocation(line: 0, scope: !10825)
!10832 = !DILocation(line: 3427, column: 9, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10825, file: !1599, line: 3427, column: 9)
!10834 = !DILocation(line: 3427, column: 28, scope: !10833)
!10835 = !DILocation(line: 3427, column: 9, scope: !10825)
!10836 = !DILocation(line: 3429, column: 20, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10833, file: !1599, line: 3427, column: 59)
!10838 = !DILocation(line: 3430, column: 27, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10837, file: !1599, line: 3430, column: 13)
!10840 = !DILocation(line: 3430, column: 24, scope: !10839)
!10841 = !DILocation(line: 3430, column: 22, scope: !10839)
!10842 = !DILocation(line: 3430, column: 13, scope: !10837)
!10843 = !DILocation(line: 3431, column: 47, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10839, file: !1599, line: 3430, column: 46)
!10845 = !DILocation(line: 3431, column: 13, scope: !10844)
!10846 = !DILocation(line: 3432, column: 9, scope: !10844)
!10847 = !DILocation(line: 3435, column: 17, scope: !10825)
!10848 = !DILocation(line: 3436, column: 24, scope: !10825)
!10849 = !DILocation(line: 3436, column: 31, scope: !10825)
!10850 = !DILocation(line: 3436, column: 36, scope: !10825)
!10851 = !DILocation(line: 3436, column: 28, scope: !10825)
!10852 = !DILocation(line: 3436, column: 5, scope: !10825)
!10853 = !DILocation(line: 3442, column: 5, scope: !10825)
!10854 = !DILocation(line: 3443, column: 1, scope: !10825)
!10855 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1599, file: !1599, line: 2405, type: !343, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10856)
!10856 = !{!10857}
!10857 = !DILocalVariable(name: "savedMask", scope: !10855, file: !1599, line: 2407, type: !61)
!10858 = !DILocation(line: 2408, column: 17, scope: !10855)
!10859 = !DILocation(line: 0, scope: !10855)
!10860 = !DILocation(line: 2413, column: 25, scope: !10855)
!10861 = !DILocation(line: 2414, column: 5, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10863, file: !1599, line: 2414, column: 5)
!10863 = distinct !DILexicalBlock(scope: !10855, file: !1599, line: 2414, column: 5)
!10864 = !DILocation(line: 2415, column: 5, scope: !10855)
!10865 = !DILocation(line: 2416, column: 1, scope: !10855)
!10866 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1599, file: !1599, line: 3561, type: !10867, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10869)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{null, !1769, !859, !159}
!10869 = !{!10870, !10871, !10872, !10873}
!10870 = !DILocalVariable(name: "D", arg: 1, scope: !10866, file: !1599, line: 3561, type: !1769)
!10871 = !DILocalVariable(name: "cmd", arg: 2, scope: !10866, file: !1599, line: 3561, type: !859)
!10872 = !DILocalVariable(name: "outlen", arg: 3, scope: !10866, file: !1599, line: 3561, type: !159)
!10873 = !DILocalVariable(name: "savedMask", scope: !10866, file: !1599, line: 3563, type: !61)
!10874 = !DILocation(line: 0, scope: !10866)
!10875 = !DILocation(line: 3565, column: 17, scope: !10866)
!10876 = !DILocation(line: 3566, column: 22, scope: !10866)
!10877 = !DILocation(line: 3566, column: 5, scope: !10866)
!10878 = !DILocation(line: 3567, column: 33, scope: !10866)
!10879 = !DILocation(line: 3568, column: 27, scope: !10866)
!10880 = !DILocation(line: 3568, column: 25, scope: !10866)
!10881 = !DILocation(line: 3569, column: 24, scope: !10866)
!10882 = !DILocation(line: 3570, column: 25, scope: !10866)
!10883 = !DILocation(line: 3570, column: 5, scope: !10866)
!10884 = !DILocation(line: 3571, column: 5, scope: !10866)
!10885 = !DILocation(line: 3573, column: 1, scope: !10866)
!10886 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1599, file: !1599, line: 1410, type: !10887, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10889)
!10887 = !DISubroutineType(types: !10888)
!10888 = !{!2432}
!10889 = !{!10890}
!10890 = !DILocalVariable(name: "savedMask", scope: !10886, file: !1599, line: 1412, type: !1320)
!10891 = !DILocation(line: 1413, column: 17, scope: !10886)
!10892 = !DILocation(line: 0, scope: !10886)
!10893 = !DILocation(line: 1414, column: 9, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10886, file: !1599, line: 1414, column: 9)
!10895 = !DILocation(line: 1414, column: 9, scope: !10886)
!10896 = !DILocation(line: 1415, column: 17, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10894, file: !1599, line: 1414, column: 24)
!10898 = !DILocation(line: 1417, column: 9, scope: !10897)
!10899 = !DILocation(line: 0, scope: !10894)
!10900 = !DILocation(line: 1425, column: 1, scope: !10886)
!10901 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1599, file: !1599, line: 1257, type: !10902, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10904)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!91}
!10904 = !{!10905, !10906, !10907}
!10905 = !DILocalVariable(name: "D", scope: !10901, file: !1599, line: 1259, type: !1769)
!10906 = !DILocalVariable(name: "status", scope: !10901, file: !1599, line: 1260, type: !1821)
!10907 = !DILocalVariable(name: "result", scope: !10901, file: !1599, line: 1261, type: !91)
!10908 = !DILocation(line: 1259, column: 57, scope: !10901)
!10909 = !DILocation(line: 0, scope: !10901)
!10910 = !DILocation(line: 1263, column: 5, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1599, line: 1263, column: 5)
!10912 = distinct !DILexicalBlock(scope: !10901, file: !1599, line: 1263, column: 5)
!10913 = !DILocation(line: 1263, column: 5, scope: !10912)
!10914 = !DILocation(line: 1263, column: 5, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10911, file: !1599, line: 1263, column: 5)
!10916 = !DILocation(line: 1265, column: 5, scope: !10901)
!10917 = !DILocation(line: 1267, column: 42, scope: !10901)
!10918 = !DILocation(line: 1267, column: 47, scope: !10901)
!10919 = !DILocation(line: 1267, column: 14, scope: !10901)
!10920 = !DILocation(line: 1269, column: 27, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10901, file: !1599, line: 1269, column: 9)
!10922 = !DILocation(line: 1269, column: 24, scope: !10921)
!10923 = !DILocation(line: 1269, column: 22, scope: !10921)
!10924 = !DILocation(line: 1269, column: 11, scope: !10921)
!10925 = !DILocation(line: 1269, column: 9, scope: !10901)
!10926 = !DILocation(line: 1270, column: 9, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10921, file: !1599, line: 1269, column: 51)
!10928 = !DILocation(line: 1272, column: 5, scope: !10927)
!10929 = !DILocation(line: 1274, column: 5, scope: !10901)
!10930 = !DILocation(line: 1276, column: 5, scope: !10901)
!10931 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1599, file: !1599, line: 1289, type: !343, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10932)
!10932 = !{!10933}
!10933 = !DILocalVariable(name: "D", scope: !10931, file: !1599, line: 1291, type: !1769)
!10934 = !DILocation(line: 0, scope: !10931)
!10935 = !DILocation(line: 1293, column: 5, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !1599, line: 1293, column: 5)
!10937 = distinct !DILexicalBlock(scope: !10931, file: !1599, line: 1293, column: 5)
!10938 = !DILocation(line: 1293, column: 5, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10936, file: !1599, line: 1293, column: 5)
!10940 = !DILocation(line: 1293, column: 5, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !1599, line: 1293, column: 5)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !1599, line: 1293, column: 5)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !1599, line: 1293, column: 5)
!10944 = !DILocation(line: 1291, column: 60, scope: !10931)
!10945 = !DILocation(line: 1295, column: 5, scope: !10931)
!10946 = !DILocation(line: 1296, column: 1, scope: !10931)
!10947 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1599, file: !1599, line: 3452, type: !10589, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10948)
!10948 = !{!10949, !10950}
!10949 = !DILocalVariable(name: "D", arg: 1, scope: !10947, file: !1599, line: 3452, type: !1769)
!10950 = !DILocalVariable(name: "savedMask", scope: !10947, file: !1599, line: 3454, type: !61)
!10951 = !DILocation(line: 0, scope: !10947)
!10952 = !DILocation(line: 3456, column: 17, scope: !10947)
!10953 = !DILocation(line: 3462, column: 24, scope: !10947)
!10954 = !DILocation(line: 3462, column: 31, scope: !10947)
!10955 = !DILocation(line: 3462, column: 36, scope: !10947)
!10956 = !DILocation(line: 3462, column: 28, scope: !10947)
!10957 = !DILocation(line: 3462, column: 5, scope: !10947)
!10958 = !DILocation(line: 3463, column: 12, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10947, file: !1599, line: 3463, column: 9)
!10960 = !DILocation(line: 3463, column: 27, scope: !10959)
!10961 = !DILocation(line: 3463, column: 9, scope: !10947)
!10962 = !DILocation(line: 3464, column: 28, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10959, file: !1599, line: 3463, column: 33)
!10964 = !DILocation(line: 3465, column: 5, scope: !10963)
!10965 = !DILocation(line: 3467, column: 5, scope: !10947)
!10966 = !DILocation(line: 3468, column: 5, scope: !10947)
!10967 = !DILocation(line: 3469, column: 1, scope: !10947)
!10968 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1599, file: !1599, line: 2417, type: !343, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10969)
!10969 = !{!10970}
!10970 = !DILocalVariable(name: "savedMask", scope: !10968, file: !1599, line: 2419, type: !61)
!10971 = !DILocation(line: 2420, column: 17, scope: !10968)
!10972 = !DILocation(line: 0, scope: !10968)
!10973 = !DILocation(line: 2425, column: 25, scope: !10968)
!10974 = !DILocation(line: 2426, column: 5, scope: !10968)
!10975 = !DILocation(line: 2427, column: 1, scope: !10968)
!10976 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1599, file: !1599, line: 1308, type: !343, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !10977)
!10977 = !{!10978, !10979}
!10978 = !DILocalVariable(name: "D", scope: !10976, file: !1599, line: 1310, type: !1769)
!10979 = !DILocalVariable(name: "status", scope: !10976, file: !1599, line: 1311, type: !1821)
!10980 = !DILocation(line: 1310, column: 60, scope: !10976)
!10981 = !DILocation(line: 0, scope: !10976)
!10982 = !DILocation(line: 1313, column: 5, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !1599, line: 1313, column: 5)
!10984 = distinct !DILexicalBlock(scope: !10976, file: !1599, line: 1313, column: 5)
!10985 = !DILocation(line: 1313, column: 5, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10983, file: !1599, line: 1313, column: 5)
!10987 = !DILocation(line: 1313, column: 5, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !1599, line: 1313, column: 5)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !1599, line: 1313, column: 5)
!10990 = distinct !DILexicalBlock(scope: !10986, file: !1599, line: 1313, column: 5)
!10991 = !DILocation(line: 1315, column: 5, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10993, file: !1599, line: 1315, column: 5)
!10993 = distinct !DILexicalBlock(scope: !10976, file: !1599, line: 1315, column: 5)
!10994 = !DILocation(line: 1315, column: 5, scope: !10993)
!10995 = !DILocation(line: 1315, column: 5, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10992, file: !1599, line: 1315, column: 5)
!10997 = !DILocation(line: 1317, column: 5, scope: !10976)
!10998 = !DILocation(line: 1319, column: 5, scope: !10976)
!10999 = !DILocation(line: 1320, column: 46, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10976, file: !1599, line: 1319, column: 15)
!11001 = !DILocation(line: 1320, column: 51, scope: !11000)
!11002 = !DILocation(line: 1320, column: 18, scope: !11000)
!11003 = !DILocation(line: 1322, column: 31, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !1599, line: 1322, column: 13)
!11005 = !DILocation(line: 1322, column: 28, scope: !11004)
!11006 = !DILocation(line: 1322, column: 26, scope: !11004)
!11007 = !DILocation(line: 1322, column: 15, scope: !11004)
!11008 = !DILocation(line: 1322, column: 13, scope: !11000)
!11009 = distinct !{!11009, !10998, !11010}
!11010 = !DILocation(line: 1325, column: 5, scope: !10976)
!11011 = !DILocation(line: 1327, column: 5, scope: !10976)
!11012 = !DILocation(line: 1328, column: 1, scope: !10976)
!11013 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1599, file: !1599, line: 1394, type: !10589, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11014)
!11014 = !{!11015}
!11015 = !DILocalVariable(name: "D", arg: 1, scope: !11013, file: !1599, line: 1394, type: !1769)
!11016 = !DILocation(line: 0, scope: !11013)
!11017 = !DILocation(line: 1401, column: 1, scope: !11013)
!11018 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1599, file: !1599, line: 1556, type: !11019, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11040)
!11019 = !DISubroutineType(types: !11020)
!11020 = !{!1320, !11021, !1769}
!11021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11022, size: 32)
!11022 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1795, line: 121, baseType: !11023)
!11023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 105, size: 480, elements: !11024)
!11024 = !{!11025, !11026, !11027, !11028, !11029, !11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037, !11038, !11039}
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !11023, file: !1795, line: 106, baseType: !2064, size: 32)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !11023, file: !1795, line: 107, baseType: !1868, size: 32, offset: 32)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !11023, file: !1795, line: 108, baseType: !2069, size: 32, offset: 64)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !11023, file: !1795, line: 109, baseType: !2073, size: 32, offset: 96)
!11029 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !11023, file: !1795, line: 110, baseType: !2077, size: 32, offset: 128)
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !11023, file: !1795, line: 111, baseType: !2073, size: 32, offset: 160)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !11023, file: !1795, line: 112, baseType: !2082, size: 32, offset: 192)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !11023, file: !1795, line: 113, baseType: !2073, size: 32, offset: 224)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !11023, file: !1795, line: 114, baseType: !2073, size: 32, offset: 256)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !11023, file: !1795, line: 115, baseType: !2073, size: 32, offset: 288)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !11023, file: !1795, line: 116, baseType: !2089, size: 32, offset: 320)
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !11023, file: !1795, line: 117, baseType: !2094, size: 32, offset: 352)
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !11023, file: !1795, line: 118, baseType: !2099, size: 32, offset: 384)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !11023, file: !1795, line: 119, baseType: !2103, size: 32, offset: 416)
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !11023, file: !1795, line: 120, baseType: !2107, size: 32, offset: 448)
!11040 = !{!11041, !11042, !11043}
!11041 = !DILocalVariable(name: "driver", arg: 1, scope: !11018, file: !1599, line: 1556, type: !11021)
!11042 = !DILocalVariable(name: "D", arg: 2, scope: !11018, file: !1599, line: 1556, type: !1769)
!11043 = !DILocalVariable(name: "smap", scope: !11018, file: !1599, line: 1558, type: !1820)
!11044 = !DILocation(line: 0, scope: !11018)
!11045 = !DILocation(line: 1561, column: 15, scope: !11018)
!11046 = !DILocation(line: 1562, column: 22, scope: !11018)
!11047 = !DILocation(line: 1563, column: 5, scope: !11018)
!11048 = !DILocation(line: 1563, column: 22, scope: !11018)
!11049 = !DILocation(line: 1565, column: 5, scope: !11018)
!11050 = !DILocation(line: 1565, column: 22, scope: !11018)
!11051 = !DILocation(line: 1566, column: 5, scope: !11018)
!11052 = !DILocation(line: 1566, column: 22, scope: !11018)
!11053 = !DILocation(line: 1568, column: 5, scope: !11018)
!11054 = !DILocation(line: 1568, column: 22, scope: !11018)
!11055 = !DILocation(line: 1569, column: 5, scope: !11018)
!11056 = !DILocation(line: 1569, column: 22, scope: !11018)
!11057 = !DILocation(line: 1570, column: 5, scope: !11018)
!11058 = !DILocation(line: 1570, column: 22, scope: !11018)
!11059 = !DILocation(line: 1573, column: 8, scope: !11018)
!11060 = !DILocation(line: 1573, column: 13, scope: !11018)
!11061 = !DILocation(line: 1573, column: 28, scope: !11018)
!11062 = !DILocation(line: 1574, column: 8, scope: !11018)
!11063 = !DILocation(line: 1574, column: 13, scope: !11018)
!11064 = !DILocation(line: 1574, column: 29, scope: !11018)
!11065 = !DILocation(line: 1575, column: 8, scope: !11018)
!11066 = !DILocation(line: 1575, column: 13, scope: !11018)
!11067 = !DILocation(line: 1575, column: 30, scope: !11018)
!11068 = !DILocation(line: 1576, column: 8, scope: !11018)
!11069 = !DILocation(line: 1576, column: 13, scope: !11018)
!11070 = !DILocation(line: 1576, column: 23, scope: !11018)
!11071 = !DILocation(line: 1577, column: 8, scope: !11018)
!11072 = !DILocation(line: 1577, column: 13, scope: !11018)
!11073 = !DILocation(line: 1577, column: 24, scope: !11018)
!11074 = !DILocation(line: 1578, column: 8, scope: !11018)
!11075 = !DILocation(line: 1578, column: 13, scope: !11018)
!11076 = !DILocation(line: 1578, column: 25, scope: !11018)
!11077 = !DILocation(line: 1579, column: 8, scope: !11018)
!11078 = !DILocation(line: 1579, column: 23, scope: !11018)
!11079 = !DILocation(line: 1583, column: 10, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11018, file: !1599, line: 1583, column: 9)
!11081 = !DILocation(line: 1583, column: 24, scope: !11080)
!11082 = !DILocation(line: 1583, column: 32, scope: !11080)
!11083 = !DILocation(line: 1583, column: 35, scope: !11080)
!11084 = !DILocation(line: 1583, column: 49, scope: !11080)
!11085 = !DILocation(line: 1583, column: 9, scope: !11018)
!11086 = !DILocation(line: 1586, column: 12, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11080, file: !1599, line: 1583, column: 59)
!11088 = !DILocation(line: 1586, column: 17, scope: !11087)
!11089 = !DILocation(line: 1586, column: 25, scope: !11087)
!11090 = !DILocation(line: 1587, column: 12, scope: !11087)
!11091 = !DILocation(line: 1587, column: 17, scope: !11087)
!11092 = !DILocation(line: 1587, column: 24, scope: !11087)
!11093 = !DILocation(line: 1591, column: 10, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11018, file: !1599, line: 1591, column: 9)
!11095 = !DILocation(line: 1589, column: 5, scope: !11087)
!11096 = !DILocation(line: 1600, column: 32, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11018, file: !1599, line: 1600, column: 9)
!11098 = !DILocation(line: 1600, column: 35, scope: !11097)
!11099 = !DILocation(line: 1600, column: 49, scope: !11097)
!11100 = !DILocation(line: 1600, column: 9, scope: !11018)
!11101 = !DILocation(line: 1601, column: 12, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11097, file: !1599, line: 1600, column: 59)
!11103 = !DILocation(line: 1601, column: 17, scope: !11102)
!11104 = !DILocation(line: 1601, column: 25, scope: !11102)
!11105 = !DILocation(line: 1602, column: 12, scope: !11102)
!11106 = !DILocation(line: 1602, column: 17, scope: !11102)
!11107 = !DILocation(line: 1602, column: 24, scope: !11102)
!11108 = !DILocation(line: 1603, column: 5, scope: !11102)
!11109 = !DILocation(line: 1607, column: 8, scope: !11018)
!11110 = !DILocation(line: 1607, column: 20, scope: !11018)
!11111 = !DILocation(line: 1622, column: 5, scope: !11018)
!11112 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1599, file: !1599, line: 4553, type: !1869, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11113)
!11113 = !{!11114, !11115, !11116, !11117}
!11114 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11112, file: !1599, line: 4553, type: !88)
!11115 = !DILocalVariable(name: "D", scope: !11112, file: !1599, line: 4555, type: !1769)
!11116 = !DILocalVariable(name: "unlock", scope: !11112, file: !1599, line: 4556, type: !61)
!11117 = !DILocalVariable(name: "cmd", scope: !11112, file: !1599, line: 4557, type: !159)
!11118 = !DILocation(line: 0, scope: !11112)
!11119 = !DILocation(line: 4555, column: 24, scope: !11112)
!11120 = !DILocation(line: 4557, column: 5, scope: !11112)
!11121 = !DILocation(line: 4558, column: 12, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11112, file: !1599, line: 4558, column: 9)
!11123 = !DILocation(line: 4558, column: 9, scope: !11122)
!11124 = !DILocation(line: 4558, column: 23, scope: !11122)
!11125 = !DILocation(line: 4558, column: 31, scope: !11122)
!11126 = !DILocation(line: 4558, column: 34, scope: !11122)
!11127 = !DILocation(line: 4558, column: 48, scope: !11122)
!11128 = !DILocation(line: 4558, column: 56, scope: !11122)
!11129 = !DILocation(line: 4558, column: 59, scope: !11122)
!11130 = !DILocation(line: 4558, column: 73, scope: !11122)
!11131 = !DILocation(line: 4558, column: 9, scope: !11112)
!11132 = !DILocation(line: 4563, column: 24, scope: !11112)
!11133 = !DILocation(line: 4563, column: 31, scope: !11112)
!11134 = !DILocation(line: 4563, column: 36, scope: !11112)
!11135 = !DILocation(line: 4563, column: 28, scope: !11112)
!11136 = !DILocation(line: 4563, column: 5, scope: !11112)
!11137 = !DILocation(line: 4564, column: 5, scope: !11112)
!11138 = !DILocation(line: 4567, column: 28, scope: !11112)
!11139 = !DILocation(line: 4567, column: 36, scope: !11112)
!11140 = !DILocation(line: 4567, column: 41, scope: !11112)
!11141 = !DILocation(line: 4567, column: 5, scope: !11112)
!11142 = !DILocation(line: 4568, column: 17, scope: !11112)
!11143 = !DILocation(line: 4568, column: 22, scope: !11112)
!11144 = !DILocation(line: 4568, column: 14, scope: !11112)
!11145 = !DILocation(line: 4569, column: 22, scope: !11112)
!11146 = !DILocation(line: 4569, column: 54, scope: !11112)
!11147 = !DILocation(line: 4569, column: 65, scope: !11112)
!11148 = !DILocation(line: 4569, column: 62, scope: !11112)
!11149 = !DILocation(line: 4569, column: 87, scope: !11112)
!11150 = !DILocation(line: 4569, column: 85, scope: !11112)
!11151 = !DILocation(line: 4569, column: 60, scope: !11112)
!11152 = !DILocation(line: 4569, column: 58, scope: !11112)
!11153 = !DILocation(line: 4569, column: 51, scope: !11112)
!11154 = !DILocation(line: 4572, column: 24, scope: !11112)
!11155 = !DILocation(line: 4572, column: 5, scope: !11112)
!11156 = !DILocation(line: 4573, column: 5, scope: !11112)
!11157 = !DILocation(line: 4575, column: 5, scope: !11112)
!11158 = !DILocation(line: 4576, column: 1, scope: !11112)
!11159 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1599, file: !1599, line: 4488, type: !10589, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11160)
!11160 = !{!11161, !11162}
!11161 = !DILocalVariable(name: "D", arg: 1, scope: !11159, file: !1599, line: 4488, type: !1769)
!11162 = !DILocalVariable(name: "status", scope: !11159, file: !1599, line: 4490, type: !1821)
!11163 = !DILocation(line: 0, scope: !11159)
!11164 = !DILocation(line: 4490, column: 5, scope: !11159)
!11165 = !DILocation(line: 4491, column: 5, scope: !11159)
!11166 = !DILocation(line: 4492, column: 32, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11159, file: !1599, line: 4491, column: 10)
!11168 = !DILocation(line: 4492, column: 40, scope: !11167)
!11169 = !DILocation(line: 4492, column: 45, scope: !11167)
!11170 = !DILocation(line: 4492, column: 9, scope: !11167)
!11171 = !DILocation(line: 4493, column: 20, scope: !11159)
!11172 = !DILocation(line: 4493, column: 32, scope: !11159)
!11173 = !DILocation(line: 4493, column: 29, scope: !11159)
!11174 = !DILocation(line: 4493, column: 27, scope: !11159)
!11175 = !DILocation(line: 4493, column: 16, scope: !11159)
!11176 = !DILocation(line: 4493, column: 5, scope: !11167)
!11177 = distinct !{!11177, !11165, !11178}
!11178 = !DILocation(line: 4493, column: 54, scope: !11159)
!11179 = !DILocation(line: 4494, column: 1, scope: !11159)
!11180 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1599, file: !1599, line: 1742, type: !11019, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11181)
!11181 = !{!11182, !11183, !11184}
!11182 = !DILocalVariable(name: "driver", arg: 1, scope: !11180, file: !1599, line: 1742, type: !11021)
!11183 = !DILocalVariable(name: "D", arg: 2, scope: !11180, file: !1599, line: 1742, type: !1769)
!11184 = !DILocalVariable(name: "smap", scope: !11180, file: !1599, line: 1744, type: !1820)
!11185 = !DILocation(line: 0, scope: !11180)
!11186 = !DILocation(line: 1747, column: 15, scope: !11180)
!11187 = !DILocation(line: 1748, column: 22, scope: !11180)
!11188 = !DILocation(line: 1749, column: 5, scope: !11180)
!11189 = !DILocation(line: 1749, column: 22, scope: !11180)
!11190 = !DILocation(line: 1750, column: 5, scope: !11180)
!11191 = !DILocation(line: 1750, column: 22, scope: !11180)
!11192 = !DILocation(line: 1751, column: 5, scope: !11180)
!11193 = !DILocation(line: 1751, column: 22, scope: !11180)
!11194 = !DILocation(line: 1752, column: 5, scope: !11180)
!11195 = !DILocation(line: 1752, column: 22, scope: !11180)
!11196 = !DILocation(line: 1753, column: 5, scope: !11180)
!11197 = !DILocation(line: 1753, column: 22, scope: !11180)
!11198 = !DILocation(line: 1756, column: 8, scope: !11180)
!11199 = !DILocation(line: 1756, column: 13, scope: !11180)
!11200 = !DILocation(line: 1756, column: 24, scope: !11180)
!11201 = !DILocation(line: 1758, column: 8, scope: !11180)
!11202 = !DILocation(line: 1758, column: 13, scope: !11180)
!11203 = !DILocation(line: 1758, column: 28, scope: !11180)
!11204 = !DILocation(line: 1759, column: 8, scope: !11180)
!11205 = !DILocation(line: 1759, column: 13, scope: !11180)
!11206 = !DILocation(line: 1759, column: 29, scope: !11180)
!11207 = !DILocation(line: 1760, column: 8, scope: !11180)
!11208 = !DILocation(line: 1760, column: 13, scope: !11180)
!11209 = !DILocation(line: 1760, column: 23, scope: !11180)
!11210 = !DILocation(line: 1761, column: 8, scope: !11180)
!11211 = !DILocation(line: 1761, column: 13, scope: !11180)
!11212 = !DILocation(line: 1761, column: 24, scope: !11180)
!11213 = !DILocation(line: 1762, column: 8, scope: !11180)
!11214 = !DILocation(line: 1762, column: 13, scope: !11180)
!11215 = !DILocation(line: 1762, column: 21, scope: !11180)
!11216 = !DILocation(line: 1763, column: 8, scope: !11180)
!11217 = !DILocation(line: 1763, column: 13, scope: !11180)
!11218 = !DILocation(line: 1763, column: 20, scope: !11180)
!11219 = !DILocation(line: 1764, column: 8, scope: !11180)
!11220 = !DILocation(line: 1764, column: 23, scope: !11180)
!11221 = !DILocation(line: 1768, column: 8, scope: !11180)
!11222 = !DILocation(line: 1768, column: 20, scope: !11180)
!11223 = !DILocation(line: 1770, column: 5, scope: !11180)
!11224 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1599, file: !1599, line: 1775, type: !11019, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11225)
!11225 = !{!11226, !11227}
!11226 = !DILocalVariable(name: "driver", arg: 1, scope: !11224, file: !1599, line: 1775, type: !11021)
!11227 = !DILocalVariable(name: "D", arg: 2, scope: !11224, file: !1599, line: 1775, type: !1769)
!11228 = !DILocation(line: 0, scope: !11224)
!11229 = !DILocation(line: 1793, column: 5, scope: !11224)
!11230 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1599, file: !1599, line: 1932, type: !11019, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11231)
!11231 = !{!11232, !11233}
!11232 = !DILocalVariable(name: "driver", arg: 1, scope: !11230, file: !1599, line: 1932, type: !11021)
!11233 = !DILocalVariable(name: "D", arg: 2, scope: !11230, file: !1599, line: 1932, type: !1769)
!11234 = !DILocation(line: 0, scope: !11230)
!11235 = !DILocation(line: 1935, column: 13, scope: !11230)
!11236 = !DILocation(line: 1935, column: 25, scope: !11230)
!11237 = !DILocation(line: 1936, column: 13, scope: !11230)
!11238 = !DILocation(line: 1936, column: 22, scope: !11230)
!11239 = !DILocation(line: 1937, column: 13, scope: !11230)
!11240 = !DILocation(line: 1937, column: 23, scope: !11230)
!11241 = !DILocation(line: 1939, column: 13, scope: !11230)
!11242 = !DILocation(line: 1939, column: 24, scope: !11230)
!11243 = !DILocation(line: 1940, column: 13, scope: !11230)
!11244 = !DILocation(line: 1940, column: 25, scope: !11230)
!11245 = !DILocation(line: 1945, column: 13, scope: !11230)
!11246 = !DILocation(line: 1945, column: 32, scope: !11230)
!11247 = !DILocation(line: 1946, column: 13, scope: !11230)
!11248 = !DILocation(line: 1946, column: 30, scope: !11230)
!11249 = !DILocation(line: 1947, column: 13, scope: !11230)
!11250 = !DILocation(line: 1947, column: 26, scope: !11230)
!11251 = !DILocation(line: 1948, column: 13, scope: !11230)
!11252 = !DILocation(line: 1948, column: 25, scope: !11230)
!11253 = !DILocation(line: 1949, column: 13, scope: !11230)
!11254 = !DILocation(line: 1949, column: 24, scope: !11230)
!11255 = !DILocation(line: 1956, column: 13, scope: !11230)
!11256 = !DILocation(line: 1956, column: 23, scope: !11230)
!11257 = !DILocation(line: 1957, column: 13, scope: !11230)
!11258 = !DILocation(line: 1957, column: 28, scope: !11230)
!11259 = !DILocation(line: 1960, column: 13, scope: !11230)
!11260 = !DILocation(line: 1960, column: 30, scope: !11230)
!11261 = !DILocation(line: 1961, column: 13, scope: !11230)
!11262 = !DILocation(line: 1961, column: 30, scope: !11230)
!11263 = !DILocation(line: 1962, column: 13, scope: !11230)
!11264 = !DILocation(line: 1962, column: 20, scope: !11230)
!11265 = !DILocation(line: 1968, column: 9, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11230, file: !1599, line: 1968, column: 9)
!11267 = !DILocation(line: 1968, column: 36, scope: !11266)
!11268 = !DILocation(line: 1968, column: 9, scope: !11230)
!11269 = !DILocation(line: 1971, column: 12, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11266, file: !1599, line: 1970, column: 5)
!11271 = !DILocation(line: 1971, column: 25, scope: !11270)
!11272 = !DILocation(line: 1979, column: 8, scope: !11230)
!11273 = !DILocation(line: 1979, column: 13, scope: !11230)
!11274 = !DILocation(line: 1979, column: 25, scope: !11230)
!11275 = !DILocation(line: 1980, column: 8, scope: !11230)
!11276 = !DILocation(line: 1980, column: 13, scope: !11230)
!11277 = !DILocation(line: 1980, column: 24, scope: !11230)
!11278 = !DILocation(line: 1981, column: 8, scope: !11230)
!11279 = !DILocation(line: 1981, column: 13, scope: !11230)
!11280 = !DILocation(line: 1981, column: 24, scope: !11230)
!11281 = !DILocation(line: 1982, column: 8, scope: !11230)
!11282 = !DILocation(line: 1982, column: 13, scope: !11230)
!11283 = !DILocation(line: 1982, column: 22, scope: !11230)
!11284 = !DILocation(line: 1983, column: 8, scope: !11230)
!11285 = !DILocation(line: 1983, column: 13, scope: !11230)
!11286 = !DILocation(line: 1983, column: 21, scope: !11230)
!11287 = !DILocation(line: 1984, column: 8, scope: !11230)
!11288 = !DILocation(line: 1984, column: 13, scope: !11230)
!11289 = !DILocation(line: 1984, column: 22, scope: !11230)
!11290 = !DILocation(line: 1985, column: 8, scope: !11230)
!11291 = !DILocation(line: 1985, column: 13, scope: !11230)
!11292 = !DILocation(line: 1985, column: 22, scope: !11230)
!11293 = !DILocation(line: 1986, column: 8, scope: !11230)
!11294 = !DILocation(line: 1986, column: 13, scope: !11230)
!11295 = !DILocation(line: 1986, column: 21, scope: !11230)
!11296 = !DILocation(line: 1987, column: 8, scope: !11230)
!11297 = !DILocation(line: 1987, column: 13, scope: !11230)
!11298 = !DILocation(line: 1987, column: 20, scope: !11230)
!11299 = !DILocation(line: 1988, column: 8, scope: !11230)
!11300 = !DILocation(line: 1988, column: 13, scope: !11230)
!11301 = !DILocation(line: 1988, column: 25, scope: !11230)
!11302 = !DILocation(line: 1989, column: 8, scope: !11230)
!11303 = !DILocation(line: 1989, column: 13, scope: !11230)
!11304 = !DILocation(line: 1989, column: 22, scope: !11230)
!11305 = !DILocation(line: 1990, column: 8, scope: !11230)
!11306 = !DILocation(line: 1990, column: 13, scope: !11230)
!11307 = !DILocation(line: 1990, column: 22, scope: !11230)
!11308 = !DILocation(line: 1993, column: 8, scope: !11230)
!11309 = !DILocation(line: 1993, column: 13, scope: !11230)
!11310 = !DILocation(line: 1993, column: 26, scope: !11230)
!11311 = !DILocation(line: 1996, column: 8, scope: !11230)
!11312 = !DILocation(line: 1996, column: 20, scope: !11230)
!11313 = !DILocation(line: 1999, column: 8, scope: !11230)
!11314 = !DILocation(line: 1999, column: 24, scope: !11230)
!11315 = !DILocation(line: 2000, column: 8, scope: !11230)
!11316 = !DILocation(line: 2000, column: 19, scope: !11230)
!11317 = !DILocation(line: 2001, column: 8, scope: !11230)
!11318 = !DILocation(line: 2001, column: 24, scope: !11230)
!11319 = !DILocation(line: 2002, column: 8, scope: !11230)
!11320 = !DILocation(line: 2002, column: 23, scope: !11230)
!11321 = !DILocation(line: 2004, column: 5, scope: !11230)
!11322 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1599, file: !1599, line: 2160, type: !2065, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11323)
!11323 = !{!11324, !11325, !11326, !11339, !11340, !11341}
!11324 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11322, file: !1599, line: 2160, type: !88)
!11325 = !DILocalVariable(name: "Info", arg: 2, scope: !11322, file: !1599, line: 2160, type: !88)
!11326 = !DILocalVariable(name: "FlashInfo", scope: !11322, file: !1599, line: 2162, type: !11327)
!11327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11328, size: 32)
!11328 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1795, line: 99, baseType: !11329)
!11329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 90, size: 928, elements: !11330)
!11330 = !{!11331, !11332, !11333, !11334, !11335, !11336, !11337, !11338}
!11331 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !11329, file: !1795, line: 91, baseType: !61, size: 32)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !11329, file: !1795, line: 92, baseType: !2121, size: 256, offset: 32)
!11333 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !11329, file: !1795, line: 93, baseType: !2121, size: 256, offset: 288)
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !11329, file: !1795, line: 94, baseType: !2121, size: 256, offset: 544)
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !11329, file: !1795, line: 95, baseType: !61, size: 32, offset: 800)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !11329, file: !1795, line: 96, baseType: !2113, size: 16, offset: 832)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !11329, file: !1795, line: 97, baseType: !61, size: 32, offset: 864)
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !11329, file: !1795, line: 98, baseType: !61, size: 32, offset: 896)
!11339 = !DILocalVariable(name: "D", scope: !11322, file: !1599, line: 2163, type: !1769)
!11340 = !DILocalVariable(name: "i", scope: !11322, file: !1599, line: 2164, type: !61)
!11341 = !DILocalVariable(name: "result", scope: !11322, file: !1599, line: 2166, type: !1320)
!11342 = !DILocation(line: 0, scope: !11322)
!11343 = !DILocation(line: 2163, column: 37, scope: !11322)
!11344 = !DILocation(line: 2202, column: 16, scope: !11322)
!11345 = !DILocation(line: 2202, column: 28, scope: !11322)
!11346 = !DILocation(line: 2204, column: 15, scope: !11322)
!11347 = !DILocation(line: 2204, column: 29, scope: !11322)
!11348 = !DILocation(line: 2204, column: 39, scope: !11322)
!11349 = !DILocation(line: 2204, column: 5, scope: !11322)
!11350 = !DILocation(line: 2205, column: 9, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11322, file: !1599, line: 2204, column: 45)
!11352 = !DILocation(line: 2205, column: 33, scope: !11351)
!11353 = !DILocation(line: 2206, column: 41, scope: !11351)
!11354 = !DILocation(line: 2206, column: 55, scope: !11351)
!11355 = !DILocation(line: 2206, column: 9, scope: !11351)
!11356 = !DILocation(line: 2206, column: 36, scope: !11351)
!11357 = !DILocation(line: 2207, column: 38, scope: !11351)
!11358 = !DILocation(line: 2207, column: 52, scope: !11351)
!11359 = !DILocation(line: 2207, column: 32, scope: !11351)
!11360 = !DILocation(line: 2209, column: 10, scope: !11351)
!11361 = distinct !{!11361, !11349, !11362}
!11362 = !DILocation(line: 2210, column: 5, scope: !11322)
!11363 = !DILocation(line: 2212, column: 16, scope: !11322)
!11364 = !DILocation(line: 2212, column: 32, scope: !11322)
!11365 = !DILocation(line: 2213, column: 16, scope: !11322)
!11366 = !DILocation(line: 2213, column: 25, scope: !11322)
!11367 = !DILocation(line: 2236, column: 5, scope: !11322)
!11368 = !DILocation(line: 2238, column: 5, scope: !11322)
!11369 = !DILocation(line: 2239, column: 18, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11322, file: !1599, line: 2238, column: 10)
!11371 = !DILocation(line: 2240, column: 34, scope: !11322)
!11372 = !DILocation(line: 2240, column: 5, scope: !11370)
!11373 = distinct !{!11373, !11368, !11374}
!11374 = !DILocation(line: 2240, column: 43, scope: !11322)
!11375 = !DILocation(line: 2259, column: 5, scope: !11322)
!11376 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1599, file: !1599, line: 2275, type: !1869, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11377)
!11377 = !{!11378, !11379, !11380, !11381}
!11378 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11376, file: !1599, line: 2275, type: !88)
!11379 = !DILocalVariable(name: "D", scope: !11376, file: !1599, line: 2278, type: !1769)
!11380 = !DILocalVariable(name: "status", scope: !11376, file: !1599, line: 2279, type: !1821)
!11381 = !DILocalVariable(name: "saved_mask", scope: !11376, file: !1599, line: 2280, type: !61)
!11382 = !DILocation(line: 0, scope: !11376)
!11383 = !DILocation(line: 2278, column: 33, scope: !11376)
!11384 = !DILocation(line: 2286, column: 5, scope: !11376)
!11385 = !DILocation(line: 2293, column: 9, scope: !11376)
!11386 = !DILocation(line: 2294, column: 26, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11376, file: !1599, line: 2293, column: 19)
!11388 = !DILocation(line: 2297, column: 17, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11387, file: !1599, line: 2297, column: 17)
!11390 = !DILocation(line: 2297, column: 17, scope: !11387)
!11391 = !DILocation(line: 2298, column: 17, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11389, file: !1599, line: 2297, column: 36)
!11393 = !DILocation(line: 2299, column: 37, scope: !11392)
!11394 = !DILocation(line: 2300, column: 13, scope: !11392)
!11395 = !DILocation(line: 2303, column: 50, scope: !11387)
!11396 = !DILocation(line: 2303, column: 55, scope: !11387)
!11397 = !DILocation(line: 2303, column: 22, scope: !11387)
!11398 = !DILocation(line: 2306, column: 35, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11387, file: !1599, line: 2306, column: 17)
!11400 = !DILocation(line: 2306, column: 32, scope: !11399)
!11401 = !DILocation(line: 2306, column: 30, scope: !11399)
!11402 = !DILocation(line: 2306, column: 19, scope: !11399)
!11403 = !DILocation(line: 2306, column: 17, scope: !11387)
!11404 = !DILocation(line: 2307, column: 17, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11399, file: !1599, line: 2306, column: 59)
!11406 = !DILocation(line: 2308, column: 17, scope: !11405)
!11407 = !DILocation(line: 2315, column: 12, scope: !11376)
!11408 = !DILocation(line: 2315, column: 21, scope: !11376)
!11409 = !DILocation(line: 2325, column: 9, scope: !11376)
!11410 = !DILocation(line: 2326, column: 5, scope: !11376)
!11411 = !DILocation(line: 2311, column: 17, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11399, file: !1599, line: 2310, column: 20)
!11413 = distinct !{!11413, !11385, !11414}
!11414 = !DILocation(line: 2313, column: 9, scope: !11376)
!11415 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1599, file: !1599, line: 2819, type: !2074, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11416)
!11416 = !{!11417, !11418, !11419, !11420, !11421, !11422, !11423, !11424, !11425, !11426, !11429, !11430}
!11417 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11415, file: !1599, line: 2819, type: !88)
!11418 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11415, file: !1599, line: 2819, type: !61)
!11419 = !DILocalVariable(name: "result", scope: !11415, file: !1599, line: 2821, type: !1320)
!11420 = !DILocalVariable(name: "blocksize", scope: !11415, file: !1599, line: 2822, type: !61)
!11421 = !DILocalVariable(name: "eraseunit", scope: !11415, file: !1599, line: 2823, type: !61)
!11422 = !DILocalVariable(name: "eraseaddr", scope: !11415, file: !1599, line: 2824, type: !61)
!11423 = !DILocalVariable(name: "iteration", scope: !11415, file: !1599, line: 2825, type: !61)
!11424 = !DILocalVariable(name: "D", scope: !11415, file: !1599, line: 2826, type: !1769)
!11425 = !DILocalVariable(name: "erase_block", scope: !11415, file: !1599, line: 2827, type: !61)
!11426 = !DILocalVariable(name: "a", scope: !11427, file: !1599, line: 2853, type: !61)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !1599, line: 2852, column: 56)
!11428 = distinct !DILexicalBlock(scope: !11415, file: !1599, line: 2852, column: 9)
!11429 = !DILocalVariable(name: "b", scope: !11427, file: !1599, line: 2853, type: !61)
!11430 = !DILocalVariable(name: "c", scope: !11427, file: !1599, line: 2853, type: !61)
!11431 = !DILocation(line: 0, scope: !11415)
!11432 = !DILocation(line: 2826, column: 30, scope: !11415)
!11433 = !DILocation(line: 2829, column: 5, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !1599, line: 2829, column: 5)
!11435 = distinct !DILexicalBlock(scope: !11415, file: !1599, line: 2829, column: 5)
!11436 = !DILocation(line: 2829, column: 5, scope: !11435)
!11437 = !DILocation(line: 2829, column: 5, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11434, file: !1599, line: 2829, column: 5)
!11439 = !DILocation(line: 2836, column: 9, scope: !11415)
!11440 = !DILocation(line: 2838, column: 8, scope: !11415)
!11441 = !DILocation(line: 2838, column: 21, scope: !11415)
!11442 = !DILocation(line: 2847, column: 5, scope: !11415)
!11443 = !DILocation(line: 2848, column: 18, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11415, file: !1599, line: 2847, column: 10)
!11445 = !DILocation(line: 2850, column: 34, scope: !11415)
!11446 = !DILocation(line: 2850, column: 5, scope: !11444)
!11447 = distinct !{!11447, !11442, !11448}
!11448 = !DILocation(line: 2850, column: 43, scope: !11415)
!11449 = !DILocation(line: 2839, column: 32, scope: !11415)
!11450 = !DILocation(line: 2861, column: 53, scope: !11427)
!11451 = !DILocation(line: 2861, column: 40, scope: !11427)
!11452 = !DILocation(line: 2861, column: 25, scope: !11427)
!11453 = !DILocation(line: 2874, column: 16, scope: !11427)
!11454 = !DILocation(line: 2874, column: 13, scope: !11427)
!11455 = !DILocation(line: 0, scope: !11427)
!11456 = !DILocation(line: 2875, column: 24, scope: !11427)
!11457 = !DILocation(line: 2877, column: 21, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11427, file: !1599, line: 2877, column: 13)
!11459 = !DILocation(line: 2877, column: 13, scope: !11427)
!11460 = !DILocation(line: 2879, column: 23, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1599, line: 2879, column: 21)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1599, line: 2878, column: 120)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !1599, line: 2878, column: 13)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !1599, line: 2878, column: 13)
!11465 = distinct !DILexicalBlock(scope: !11458, file: !1599, line: 2877, column: 27)
!11466 = !DILocation(line: 2879, column: 21, scope: !11462)
!11467 = !DILocation(line: 2878, column: 48, scope: !11463)
!11468 = !DILocation(line: 2878, column: 83, scope: !11463)
!11469 = !DILocation(line: 2878, column: 113, scope: !11463)
!11470 = !DILocation(line: 2878, column: 35, scope: !11463)
!11471 = !DILocation(line: 2878, column: 13, scope: !11464)
!11472 = distinct !{!11472, !11471, !11473}
!11473 = !DILocation(line: 2883, column: 13, scope: !11464)
!11474 = !DILocation(line: 2863, column: 19, scope: !11427)
!11475 = !DILocation(line: 2825, column: 24, scope: !11415)
!11476 = !DILocation(line: 2886, column: 9, scope: !11427)
!11477 = !DILocation(line: 2888, column: 36, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11427, file: !1599, line: 2886, column: 31)
!11479 = !DILocation(line: 2888, column: 41, scope: !11478)
!11480 = !DILocation(line: 2889, column: 17, scope: !11478)
!11481 = !DILocation(line: 2891, column: 36, scope: !11478)
!11482 = !DILocation(line: 2891, column: 41, scope: !11478)
!11483 = !DILocation(line: 2892, column: 17, scope: !11478)
!11484 = !DILocation(line: 2894, column: 36, scope: !11478)
!11485 = !DILocation(line: 2894, column: 41, scope: !11478)
!11486 = !DILocation(line: 2895, column: 17, scope: !11478)
!11487 = !DILocation(line: 2897, column: 17, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !1599, line: 2897, column: 17)
!11489 = distinct !DILexicalBlock(scope: !11490, file: !1599, line: 2897, column: 17)
!11490 = distinct !DILexicalBlock(scope: !11478, file: !1599, line: 2897, column: 17)
!11491 = !DILocation(line: 0, scope: !11478)
!11492 = !DILocation(line: 2906, column: 5, scope: !11415)
!11493 = !DILocation(line: 2908, column: 32, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11415, file: !1599, line: 2906, column: 27)
!11495 = !DILocation(line: 2908, column: 37, scope: !11494)
!11496 = !DILocation(line: 2909, column: 13, scope: !11494)
!11497 = !DILocation(line: 2911, column: 32, scope: !11494)
!11498 = !DILocation(line: 2911, column: 37, scope: !11494)
!11499 = !DILocation(line: 2912, column: 13, scope: !11494)
!11500 = !DILocation(line: 2914, column: 32, scope: !11494)
!11501 = !DILocation(line: 2914, column: 37, scope: !11494)
!11502 = !DILocation(line: 2915, column: 13, scope: !11494)
!11503 = !DILocation(line: 0, scope: !11494)
!11504 = !DILocation(line: 2921, column: 56, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !1599, line: 2921, column: 5)
!11506 = distinct !DILexicalBlock(scope: !11415, file: !1599, line: 2921, column: 5)
!11507 = !DILocation(line: 2921, column: 5, scope: !11506)
!11508 = !DILocation(line: 2921, column: 35, scope: !11506)
!11509 = !DILocation(line: 2921, column: 22, scope: !11506)
!11510 = !DILocation(line: 2922, column: 9, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11505, file: !1599, line: 2921, column: 99)
!11512 = !DILocation(line: 2929, column: 9, scope: !11511)
!11513 = !DILocation(line: 2938, column: 26, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11511, file: !1599, line: 2929, column: 26)
!11515 = !DILocation(line: 2939, column: 37, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11514, file: !1599, line: 2939, column: 17)
!11517 = !DILocation(line: 2939, column: 17, scope: !11514)
!11518 = distinct !{!11518, !11512, !11519}
!11519 = !DILocation(line: 2943, column: 9, scope: !11511)
!11520 = !DILocation(line: 2921, column: 71, scope: !11505)
!11521 = !DILocation(line: 2921, column: 85, scope: !11505)
!11522 = distinct !{!11522, !11507, !11523}
!11523 = !DILocation(line: 2983, column: 5, scope: !11506)
!11524 = !DILocation(line: 2985, column: 21, scope: !11415)
!11525 = !DILocation(line: 2992, column: 9, scope: !11415)
!11526 = !DILocation(line: 3000, column: 5, scope: !11415)
!11527 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1599, file: !1599, line: 2533, type: !2078, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11528)
!11528 = !{!11529, !11530, !11531, !11532, !11533, !11534, !11535, !11536, !11537, !11538, !11539, !11540, !11541, !11542}
!11529 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11527, file: !1599, line: 2533, type: !88)
!11530 = !DILocalVariable(name: "Address", arg: 2, scope: !11527, file: !1599, line: 2533, type: !88)
!11531 = !DILocalVariable(name: "Data", arg: 3, scope: !11527, file: !1599, line: 2533, type: !88)
!11532 = !DILocalVariable(name: "Length", arg: 4, scope: !11527, file: !1599, line: 2533, type: !61)
!11533 = !DILocalVariable(name: "D", scope: !11527, file: !1599, line: 2535, type: !1769)
!11534 = !DILocalVariable(name: "savedMask", scope: !11527, file: !1599, line: 2536, type: !61)
!11535 = !DILocalVariable(name: "address", scope: !11527, file: !1599, line: 2537, type: !61)
!11536 = !DILocalVariable(name: "p_data", scope: !11527, file: !1599, line: 2538, type: !849)
!11537 = !DILocalVariable(name: "p_data_first", scope: !11527, file: !1599, line: 2539, type: !849)
!11538 = !DILocalVariable(name: "result", scope: !11527, file: !1599, line: 2540, type: !1320)
!11539 = !DILocalVariable(name: "written", scope: !11527, file: !1599, line: 2541, type: !61)
!11540 = !DILocalVariable(name: "length", scope: !11527, file: !1599, line: 2542, type: !61)
!11541 = !DILocalVariable(name: "cmd1", scope: !11527, file: !1599, line: 2543, type: !61)
!11542 = !DILocalVariable(name: "j", scope: !11543, file: !1599, line: 2599, type: !61)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !1599, line: 2597, column: 61)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !1599, line: 2597, column: 13)
!11545 = distinct !DILexicalBlock(scope: !11527, file: !1599, line: 2583, column: 25)
!11546 = !DILocation(line: 0, scope: !11527)
!11547 = !DILocation(line: 2535, column: 26, scope: !11527)
!11548 = !DILocation(line: 2537, column: 37, scope: !11527)
!11549 = !DILocation(line: 2538, column: 5, scope: !11527)
!11550 = !DILocation(line: 2538, column: 19, scope: !11527)
!11551 = !DILocation(line: 2542, column: 5, scope: !11527)
!11552 = !DILocation(line: 2545, column: 5, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !1599, line: 2545, column: 5)
!11554 = distinct !DILexicalBlock(scope: !11527, file: !1599, line: 2545, column: 5)
!11555 = !DILocation(line: 2545, column: 5, scope: !11554)
!11556 = !DILocation(line: 2545, column: 5, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11553, file: !1599, line: 2545, column: 5)
!11558 = !DILocation(line: 2567, column: 9, scope: !11527)
!11559 = !DILocation(line: 2569, column: 8, scope: !11527)
!11560 = !DILocation(line: 2569, column: 21, scope: !11527)
!11561 = !DILocation(line: 2576, column: 5, scope: !11527)
!11562 = !DILocation(line: 2577, column: 18, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11527, file: !1599, line: 2576, column: 10)
!11564 = !DILocation(line: 2579, column: 34, scope: !11527)
!11565 = !DILocation(line: 2579, column: 5, scope: !11563)
!11566 = distinct !{!11566, !11561, !11567}
!11567 = !DILocation(line: 2579, column: 43, scope: !11527)
!11568 = !DILocation(line: 2583, column: 14, scope: !11527)
!11569 = !DILocation(line: 2583, column: 5, scope: !11527)
!11570 = !DILocation(line: 2584, column: 27, scope: !11545)
!11571 = !DILocation(line: 2592, column: 18, scope: !11545)
!11572 = !DILocation(line: 2592, column: 35, scope: !11545)
!11573 = !DILocation(line: 2592, column: 74, scope: !11545)
!11574 = !DILocation(line: 2592, column: 50, scope: !11545)
!11575 = !DILocation(line: 2592, column: 39, scope: !11545)
!11576 = !DILocation(line: 2595, column: 37, scope: !11545)
!11577 = !DILocation(line: 2595, column: 29, scope: !11545)
!11578 = !DILocation(line: 2595, column: 16, scope: !11545)
!11579 = !DILocation(line: 2597, column: 13, scope: !11544)
!11580 = !DILocation(line: 2597, column: 30, scope: !11544)
!11581 = !DILocation(line: 2597, column: 13, scope: !11545)
!11582 = !DILocation(line: 0, scope: !11543)
!11583 = !DILocation(line: 2600, column: 27, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11585, file: !1599, line: 2600, column: 13)
!11585 = distinct !DILexicalBlock(scope: !11543, file: !1599, line: 2600, column: 13)
!11586 = !DILocation(line: 2600, column: 13, scope: !11585)
!11587 = !DILocation(line: 2601, column: 38, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11584, file: !1599, line: 2600, column: 42)
!11589 = !DILocation(line: 2601, column: 17, scope: !11588)
!11590 = !DILocation(line: 2601, column: 36, scope: !11588)
!11591 = !DILocation(line: 2600, column: 38, scope: !11584)
!11592 = distinct !{!11592, !11586, !11593}
!11593 = !DILocation(line: 2602, column: 13, scope: !11585)
!11594 = !DILocation(line: 0, scope: !11545)
!11595 = !DILocation(line: 2606, column: 18, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11545, file: !1599, line: 2606, column: 13)
!11597 = !DILocation(line: 2606, column: 29, scope: !11596)
!11598 = !DILocation(line: 2606, column: 13, scope: !11545)
!11599 = !DILocation(line: 2607, column: 13, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11596, file: !1599, line: 2606, column: 55)
!11601 = !DILocation(line: 2608, column: 9, scope: !11600)
!11602 = !DILocation(line: 2613, column: 16, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11545, file: !1599, line: 2613, column: 13)
!11604 = !DILocation(line: 2613, column: 29, scope: !11603)
!11605 = !DILocation(line: 0, scope: !11603)
!11606 = !DILocation(line: 2613, column: 13, scope: !11545)
!11607 = !DILocation(line: 2614, column: 20, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11603, file: !1599, line: 2613, column: 35)
!11609 = !DILocation(line: 2615, column: 32, scope: !11608)
!11610 = !DILocation(line: 2615, column: 40, scope: !11608)
!11611 = !DILocation(line: 2615, column: 13, scope: !11608)
!11612 = !DILocation(line: 2616, column: 9, scope: !11608)
!11613 = !DILocation(line: 2619, column: 20, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11603, file: !1599, line: 2618, column: 9)
!11615 = !DILocation(line: 2620, column: 32, scope: !11614)
!11616 = !DILocation(line: 2620, column: 40, scope: !11614)
!11617 = !DILocation(line: 2620, column: 13, scope: !11614)
!11618 = !DILocation(line: 2626, column: 21, scope: !11545)
!11619 = !DILocation(line: 2633, column: 37, scope: !11545)
!11620 = !DILocation(line: 2634, column: 45, scope: !11545)
!11621 = !DILocation(line: 2634, column: 42, scope: !11545)
!11622 = !DILocation(line: 2634, column: 40, scope: !11545)
!11623 = !DILocation(line: 2634, column: 58, scope: !11545)
!11624 = !DILocation(line: 2634, column: 29, scope: !11545)
!11625 = !DILocation(line: 2635, column: 28, scope: !11545)
!11626 = !DILocation(line: 2636, column: 9, scope: !11545)
!11627 = !DILocation(line: 2638, column: 26, scope: !11545)
!11628 = !DILocation(line: 2638, column: 9, scope: !11545)
!11629 = !DILocation(line: 2639, column: 29, scope: !11545)
!11630 = !DILocation(line: 2639, column: 9, scope: !11545)
!11631 = !DILocation(line: 2662, column: 9, scope: !11545)
!11632 = !DILocation(line: 2670, column: 9, scope: !11545)
!11633 = !DILocation(line: 2676, column: 89, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11545, file: !1599, line: 2670, column: 13)
!11635 = !DILocation(line: 2676, column: 26, scope: !11634)
!11636 = !DILocation(line: 2678, column: 36, scope: !11545)
!11637 = !DILocation(line: 2678, column: 9, scope: !11634)
!11638 = distinct !{!11638, !11632, !11639}
!11639 = !DILocation(line: 2678, column: 45, scope: !11545)
!11640 = !DILocation(line: 2718, column: 19, scope: !11545)
!11641 = !DILocation(line: 2718, column: 16, scope: !11545)
!11642 = !DILocation(line: 2719, column: 16, scope: !11545)
!11643 = !DILocation(line: 2722, column: 31, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11545, file: !1599, line: 2722, column: 13)
!11645 = !DILocation(line: 2722, column: 13, scope: !11545)
!11646 = distinct !{!11646, !11569, !11647}
!11647 = !DILocation(line: 2725, column: 5, scope: !11527)
!11648 = !DILocation(line: 2748, column: 21, scope: !11527)
!11649 = !DILocation(line: 2755, column: 9, scope: !11527)
!11650 = !DILocation(line: 2757, column: 16, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11527, file: !1599, line: 2757, column: 9)
!11652 = !DILocation(line: 2761, column: 1, scope: !11527)
!11653 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1599, file: !1599, line: 3019, type: !2074, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11654)
!11654 = !{!11655, !11656}
!11655 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11653, file: !1599, line: 3019, type: !88)
!11656 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11653, file: !1599, line: 3019, type: !61)
!11657 = !DILocation(line: 0, scope: !11653)
!11658 = !DILocation(line: 3021, column: 5, scope: !11653)
!11659 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1599, file: !1599, line: 3124, type: !2083, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11660)
!11660 = !{!11661, !11662, !11663, !11664, !11665, !11666, !11667, !11668}
!11661 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11659, file: !1599, line: 3124, type: !88)
!11662 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11659, file: !1599, line: 3124, type: !61)
!11663 = !DILocalVariable(name: "result", scope: !11659, file: !1599, line: 3126, type: !1320)
!11664 = !DILocalVariable(name: "savedMask", scope: !11659, file: !1599, line: 3127, type: !61)
!11665 = !DILocalVariable(name: "D", scope: !11659, file: !1599, line: 3128, type: !1769)
!11666 = !DILocalVariable(name: "status_busy", scope: !11659, file: !1599, line: 3129, type: !1821)
!11667 = !DILocalVariable(name: "status_suspend", scope: !11659, file: !1599, line: 3129, type: !1821)
!11668 = !DILocalVariable(name: "check_status", scope: !11669, file: !1599, line: 3141, type: !1821)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !1599, line: 3140, column: 56)
!11670 = distinct !DILexicalBlock(scope: !11659, file: !1599, line: 3140, column: 9)
!11671 = !DILocation(line: 0, scope: !11659)
!11672 = !DILocation(line: 3128, column: 47, scope: !11659)
!11673 = !DILocation(line: 3131, column: 5, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !1599, line: 3131, column: 5)
!11675 = distinct !DILexicalBlock(scope: !11659, file: !1599, line: 3131, column: 5)
!11676 = !DILocation(line: 3131, column: 5, scope: !11675)
!11677 = !DILocation(line: 3131, column: 5, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11674, file: !1599, line: 3131, column: 5)
!11679 = !DILocation(line: 3134, column: 50, scope: !11659)
!11680 = !DILocation(line: 3134, column: 55, scope: !11659)
!11681 = !DILocation(line: 3134, column: 22, scope: !11659)
!11682 = !DILocation(line: 3135, column: 50, scope: !11659)
!11683 = !DILocation(line: 3135, column: 55, scope: !11659)
!11684 = !DILocation(line: 3135, column: 22, scope: !11659)
!11685 = !DILocation(line: 3138, column: 17, scope: !11659)
!11686 = !DILocation(line: 3140, column: 32, scope: !11670)
!11687 = !DILocation(line: 3140, column: 29, scope: !11670)
!11688 = !DILocation(line: 3140, column: 27, scope: !11670)
!11689 = !DILocation(line: 3140, column: 11, scope: !11670)
!11690 = !DILocation(line: 3140, column: 9, scope: !11659)
!11691 = !DILocation(line: 3141, column: 34, scope: !11669)
!11692 = !DILocation(line: 3141, column: 60, scope: !11669)
!11693 = !DILocation(line: 3141, column: 58, scope: !11669)
!11694 = !DILocation(line: 0, scope: !11669)
!11695 = !DILocation(line: 3144, column: 37, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11669, file: !1599, line: 3144, column: 13)
!11697 = !DILocation(line: 3144, column: 35, scope: !11696)
!11698 = !DILocation(line: 3144, column: 16, scope: !11696)
!11699 = !DILocation(line: 3144, column: 52, scope: !11696)
!11700 = !DILocation(line: 3145, column: 21, scope: !11696)
!11701 = !DILocation(line: 3145, column: 38, scope: !11696)
!11702 = !DILocation(line: 3147, column: 13, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !1599, line: 3147, column: 13)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !1599, line: 3147, column: 13)
!11705 = distinct !DILexicalBlock(scope: !11696, file: !1599, line: 3145, column: 61)
!11706 = !DILocation(line: 3147, column: 13, scope: !11704)
!11707 = !DILocation(line: 3147, column: 13, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11703, file: !1599, line: 3147, column: 13)
!11709 = !DILocation(line: 3150, column: 13, scope: !11705)
!11710 = !DILocation(line: 3151, column: 33, scope: !11705)
!11711 = !DILocation(line: 3153, column: 9, scope: !11705)
!11712 = !DILocation(line: 3155, column: 20, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !1599, line: 3155, column: 17)
!11714 = distinct !DILexicalBlock(scope: !11696, file: !1599, line: 3153, column: 16)
!11715 = !DILocation(line: 3155, column: 31, scope: !11713)
!11716 = !DILocation(line: 3155, column: 17, scope: !11714)
!11717 = !DILocation(line: 3156, column: 36, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11713, file: !1599, line: 3155, column: 54)
!11719 = !DILocation(line: 3156, column: 17, scope: !11718)
!11720 = !DILocation(line: 3157, column: 36, scope: !11718)
!11721 = !DILocation(line: 3157, column: 17, scope: !11718)
!11722 = !DILocation(line: 3158, column: 13, scope: !11718)
!11723 = !DILocation(line: 3191, column: 5, scope: !11659)
!11724 = !DILocation(line: 3193, column: 9, scope: !11659)
!11725 = !DILocation(line: 3160, column: 13, scope: !11714)
!11726 = !DILocation(line: 3173, column: 13, scope: !11714)
!11727 = !DILocation(line: 3194, column: 18, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !1599, line: 3193, column: 32)
!11729 = distinct !DILexicalBlock(scope: !11659, file: !1599, line: 3193, column: 9)
!11730 = !DILocation(line: 3195, column: 5, scope: !11728)
!11731 = !DILocation(line: 3197, column: 5, scope: !11659)
!11732 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1599, file: !1599, line: 3225, type: !2074, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11733)
!11733 = !{!11734, !11735, !11736, !11737, !11738}
!11734 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11732, file: !1599, line: 3225, type: !88)
!11735 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11732, file: !1599, line: 3225, type: !61)
!11736 = !DILocalVariable(name: "D", scope: !11732, file: !1599, line: 3227, type: !1769)
!11737 = !DILocalVariable(name: "status", scope: !11732, file: !1599, line: 3228, type: !1821)
!11738 = !DILocalVariable(name: "savedMask", scope: !11732, file: !1599, line: 3229, type: !61)
!11739 = !DILocation(line: 0, scope: !11732)
!11740 = !DILocation(line: 3227, column: 30, scope: !11732)
!11741 = !DILocation(line: 3231, column: 17, scope: !11732)
!11742 = !DILocation(line: 3234, column: 5, scope: !11732)
!11743 = !DILocation(line: 3238, column: 5, scope: !11732)
!11744 = !DILocation(line: 3239, column: 46, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11732, file: !1599, line: 3238, column: 15)
!11746 = !DILocation(line: 3239, column: 51, scope: !11745)
!11747 = !DILocation(line: 3239, column: 18, scope: !11745)
!11748 = !DILocation(line: 3241, column: 31, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11745, file: !1599, line: 3241, column: 13)
!11750 = !DILocation(line: 3241, column: 28, scope: !11749)
!11751 = !DILocation(line: 3241, column: 26, scope: !11749)
!11752 = !DILocation(line: 3241, column: 15, scope: !11749)
!11753 = !DILocation(line: 3241, column: 13, scope: !11745)
!11754 = distinct !{!11754, !11743, !11755}
!11755 = !DILocation(line: 3244, column: 5, scope: !11732)
!11756 = !DILocation(line: 3246, column: 5, scope: !11732)
!11757 = !DILocation(line: 3248, column: 5, scope: !11732)
!11758 = !DILocation(line: 3250, column: 5, scope: !11732)
!11759 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1599, file: !1599, line: 3277, type: !2074, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11760)
!11760 = !{!11761, !11762, !11763}
!11761 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11759, file: !1599, line: 3277, type: !88)
!11762 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11759, file: !1599, line: 3277, type: !61)
!11763 = !DILocalVariable(name: "D", scope: !11759, file: !1599, line: 3279, type: !1769)
!11764 = !DILocation(line: 0, scope: !11759)
!11765 = !DILocation(line: 3279, column: 29, scope: !11759)
!11766 = !DILocation(line: 3281, column: 5, scope: !11759)
!11767 = !DILocation(line: 3282, column: 5, scope: !11759)
!11768 = !DILocation(line: 3283, column: 5, scope: !11759)
!11769 = !DILocation(line: 3285, column: 5, scope: !11759)
!11770 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1599, file: !1599, line: 3332, type: !2100, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11771)
!11771 = !{!11772, !11773, !11774}
!11772 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11770, file: !1599, line: 3332, type: !88)
!11773 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !11770, file: !1599, line: 3332, type: !88)
!11774 = !DILocalVariable(name: "ACTION", arg: 3, scope: !11770, file: !1599, line: 3332, type: !61)
!11775 = !DILocation(line: 0, scope: !11770)
!11776 = !DILocation(line: 3334, column: 5, scope: !11770)
!11777 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1599, file: !1599, line: 2350, type: !2108, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11778)
!11778 = !{!11779, !11780, !11781, !11782}
!11779 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11777, file: !1599, line: 2350, type: !88)
!11780 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !11777, file: !1599, line: 2350, type: !61)
!11781 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !11777, file: !1599, line: 2350, type: !88)
!11782 = !DILocalVariable(name: "D", scope: !11777, file: !1599, line: 2352, type: !1769)
!11783 = !DILocation(line: 0, scope: !11777)
!11784 = !DILocation(line: 2353, column: 9, scope: !11777)
!11785 = !DILocation(line: 2354, column: 12, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !1599, line: 2353, column: 51)
!11787 = distinct !DILexicalBlock(scope: !11777, file: !1599, line: 2353, column: 9)
!11788 = !DILocation(line: 2354, column: 9, scope: !11786)
!11789 = !DILocation(line: 2355, column: 5, scope: !11786)
!11790 = !DILocation(line: 2356, column: 17, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11792, file: !1599, line: 2356, column: 13)
!11792 = distinct !DILexicalBlock(scope: !11793, file: !1599, line: 2355, column: 71)
!11793 = distinct !DILexicalBlock(scope: !11787, file: !1599, line: 2355, column: 16)
!11794 = !DILocation(line: 2356, column: 14, scope: !11791)
!11795 = !DILocation(line: 2356, column: 28, scope: !11791)
!11796 = !DILocation(line: 2356, column: 49, scope: !11791)
!11797 = !DILocation(line: 2356, column: 56, scope: !11791)
!11798 = !DILocation(line: 2356, column: 70, scope: !11791)
!11799 = !DILocation(line: 2356, column: 80, scope: !11791)
!11800 = !DILocation(line: 2356, column: 13, scope: !11792)
!11801 = !DILocation(line: 2361, column: 9, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11803, file: !1599, line: 2361, column: 9)
!11803 = distinct !DILexicalBlock(scope: !11804, file: !1599, line: 2361, column: 9)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !1599, line: 2361, column: 9)
!11805 = distinct !DILexicalBlock(scope: !11793, file: !1599, line: 2359, column: 12)
!11806 = !DILocation(line: 2363, column: 5, scope: !11777)
!11807 = !DILocation(line: 2364, column: 1, scope: !11777)
!11808 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1599, file: !1599, line: 3355, type: !1869, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11809)
!11809 = !{!11810, !11811, !11812}
!11810 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11808, file: !1599, line: 3355, type: !88)
!11811 = !DILocalVariable(name: "D", scope: !11808, file: !1599, line: 3357, type: !1769)
!11812 = !DILocalVariable(name: "status", scope: !11808, file: !1599, line: 3358, type: !1018)
!11813 = !DILocation(line: 0, scope: !11808)
!11814 = !DILocation(line: 3366, column: 12, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11808, file: !1599, line: 3366, column: 9)
!11816 = !DILocation(line: 3366, column: 17, scope: !11815)
!11817 = !DILocation(line: 3366, column: 9, scope: !11815)
!11818 = !DILocation(line: 3366, column: 9, scope: !11808)
!11819 = !DILocation(line: 3357, column: 25, scope: !11808)
!11820 = !DILocation(line: 3367, column: 18, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11815, file: !1599, line: 3366, column: 33)
!11822 = !DILocation(line: 3368, column: 25, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11821, file: !1599, line: 3368, column: 13)
!11824 = !DILocation(line: 3368, column: 22, scope: !11823)
!11825 = !DILocation(line: 3368, column: 20, scope: !11823)
!11826 = !DILocation(line: 3368, column: 13, scope: !11821)
!11827 = !DILocation(line: 3373, column: 5, scope: !11808)
!11828 = !DILocation(line: 3374, column: 1, scope: !11808)
!11829 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1599, file: !1599, line: 3044, type: !11830, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11832)
!11830 = !DISubroutineType(types: !11831)
!11831 = !{!1320, !88, !61, !159}
!11832 = !{!11833, !11834, !11835, !11836, !11837, !11838, !11839, !11840}
!11833 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11829, file: !1599, line: 3044, type: !88)
!11834 = !DILocalVariable(name: "addr", arg: 2, scope: !11829, file: !1599, line: 3044, type: !61)
!11835 = !DILocalVariable(name: "data", arg: 3, scope: !11829, file: !1599, line: 3044, type: !159)
!11836 = !DILocalVariable(name: "savedMask", scope: !11829, file: !1599, line: 3046, type: !61)
!11837 = !DILocalVariable(name: "D", scope: !11829, file: !1599, line: 3047, type: !1769)
!11838 = !DILocalVariable(name: "result", scope: !11829, file: !1599, line: 3048, type: !1320)
!11839 = !DILocalVariable(name: "check_data", scope: !11829, file: !1599, line: 3049, type: !159)
!11840 = !DILocalVariable(name: "status_busy", scope: !11829, file: !1599, line: 3050, type: !1018)
!11841 = !DILocation(line: 0, scope: !11829)
!11842 = !DILocation(line: 3047, column: 43, scope: !11829)
!11843 = !DILocation(line: 3053, column: 47, scope: !11829)
!11844 = !DILocation(line: 3053, column: 52, scope: !11829)
!11845 = !DILocation(line: 3053, column: 19, scope: !11829)
!11846 = !DILocation(line: 3056, column: 9, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11829, file: !1599, line: 3056, column: 9)
!11848 = !DILocation(line: 3056, column: 9, scope: !11829)
!11849 = !DILocation(line: 3058, column: 9, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !1599, line: 3058, column: 9)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !1599, line: 3058, column: 9)
!11852 = distinct !DILexicalBlock(scope: !11847, file: !1599, line: 3056, column: 28)
!11853 = !DILocation(line: 3058, column: 9, scope: !11851)
!11854 = !DILocation(line: 3058, column: 9, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !1599, line: 3058, column: 9)
!11856 = !DILocation(line: 3060, column: 9, scope: !11852)
!11857 = !DILocation(line: 3062, column: 29, scope: !11852)
!11858 = !DILocation(line: 3063, column: 5, scope: !11852)
!11859 = !DILocation(line: 3065, column: 38, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11847, file: !1599, line: 3065, column: 15)
!11861 = !DILocation(line: 3065, column: 35, scope: !11860)
!11862 = !DILocation(line: 3065, column: 33, scope: !11860)
!11863 = !DILocation(line: 3065, column: 17, scope: !11860)
!11864 = !DILocation(line: 3065, column: 15, scope: !11847)
!11865 = !DILocation(line: 3066, column: 21, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11860, file: !1599, line: 3065, column: 62)
!11867 = !DILocation(line: 3068, column: 9, scope: !11866)
!11868 = !DILocation(line: 3071, column: 23, scope: !11866)
!11869 = !DILocation(line: 3071, column: 22, scope: !11866)
!11870 = !DILocation(line: 3073, column: 24, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11866, file: !1599, line: 3073, column: 13)
!11872 = !DILocation(line: 3073, column: 13, scope: !11866)
!11873 = !DILocation(line: 3078, column: 16, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !1599, line: 3078, column: 16)
!11875 = distinct !DILexicalBlock(scope: !11871, file: !1599, line: 3075, column: 16)
!11876 = !DILocation(line: 3078, column: 16, scope: !11875)
!11877 = !DILocation(line: 3081, column: 58, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11874, file: !1599, line: 3078, column: 46)
!11879 = !DILocation(line: 3081, column: 17, scope: !11878)
!11880 = !DILocation(line: 3082, column: 22, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11878, file: !1599, line: 3082, column: 21)
!11882 = !DILocation(line: 3082, column: 49, scope: !11881)
!11883 = !DILocation(line: 3082, column: 21, scope: !11878)
!11884 = !DILocation(line: 3088, column: 9, scope: !11866)
!11885 = !DILocation(line: 3091, column: 9, scope: !11829)
!11886 = !DILocation(line: 3092, column: 13, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !1599, line: 3092, column: 13)
!11888 = distinct !DILexicalBlock(scope: !11829, file: !1599, line: 3091, column: 9)
!11889 = !DILocation(line: 3092, column: 33, scope: !11887)
!11890 = !DILocation(line: 3092, column: 13, scope: !11888)
!11891 = !DILocation(line: 3106, column: 5, scope: !11829)
!11892 = !DILocation(line: 3107, column: 1, scope: !11829)
!11893 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1599, file: !1599, line: 3497, type: !11894, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11896)
!11894 = !DISubroutineType(types: !11895)
!11895 = !{null, !1769, !61}
!11896 = !{!11897, !11898, !11899}
!11897 = !DILocalVariable(name: "D", arg: 1, scope: !11893, file: !1599, line: 3497, type: !1769)
!11898 = !DILocalVariable(name: "addr", arg: 2, scope: !11893, file: !1599, line: 3497, type: !61)
!11899 = !DILocalVariable(name: "savedMask", scope: !11893, file: !1599, line: 3499, type: !61)
!11900 = !DILocation(line: 0, scope: !11893)
!11901 = !DILocation(line: 3501, column: 14, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11893, file: !1599, line: 3501, column: 9)
!11903 = !DILocation(line: 3501, column: 25, scope: !11902)
!11904 = !DILocation(line: 3501, column: 9, scope: !11893)
!11905 = !DILocation(line: 3502, column: 9, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11902, file: !1599, line: 3501, column: 51)
!11907 = !DILocation(line: 3503, column: 5, scope: !11906)
!11908 = !DILocation(line: 3507, column: 17, scope: !11893)
!11909 = !DILocation(line: 3516, column: 5, scope: !11893)
!11910 = !DILocation(line: 3517, column: 31, scope: !11893)
!11911 = !DILocation(line: 3517, column: 38, scope: !11893)
!11912 = !DILocation(line: 3517, column: 43, scope: !11893)
!11913 = !DILocation(line: 3517, column: 59, scope: !11893)
!11914 = !DILocation(line: 3517, column: 56, scope: !11893)
!11915 = !DILocation(line: 3517, column: 5, scope: !11893)
!11916 = !DILocation(line: 3523, column: 5, scope: !11893)
!11917 = !DILocation(line: 3524, column: 1, scope: !11893)
!11918 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1599, file: !1599, line: 2018, type: !11019, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11919)
!11919 = !{!11920, !11921, !11922}
!11920 = !DILocalVariable(name: "driver", arg: 1, scope: !11918, file: !1599, line: 2018, type: !11021)
!11921 = !DILocalVariable(name: "D", arg: 2, scope: !11918, file: !1599, line: 2018, type: !1769)
!11922 = !DILocalVariable(name: "result", scope: !11918, file: !1599, line: 2020, type: !1320)
!11923 = !DILocation(line: 0, scope: !11918)
!11924 = !DILocation(line: 2022, column: 13, scope: !11918)
!11925 = !DILocation(line: 2022, column: 5, scope: !11918)
!11926 = !DILocation(line: 2031, column: 16, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11918, file: !1599, line: 2022, column: 31)
!11928 = !DILocation(line: 2031, column: 27, scope: !11927)
!11929 = !DILocation(line: 2033, column: 22, scope: !11927)
!11930 = !DILocation(line: 2034, column: 13, scope: !11927)
!11931 = !DILocation(line: 2049, column: 16, scope: !11927)
!11932 = !DILocation(line: 2049, column: 27, scope: !11927)
!11933 = !DILocation(line: 2051, column: 23, scope: !11927)
!11934 = !DILocation(line: 2053, column: 13, scope: !11927)
!11935 = !DILocation(line: 2058, column: 22, scope: !11927)
!11936 = !DILocation(line: 2059, column: 13, scope: !11927)
!11937 = !DILocation(line: 2079, column: 13, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11939, file: !1599, line: 2079, column: 13)
!11939 = distinct !DILexicalBlock(scope: !11940, file: !1599, line: 2079, column: 13)
!11940 = distinct !DILexicalBlock(scope: !11927, file: !1599, line: 2079, column: 13)
!11941 = !DILocation(line: 2083, column: 5, scope: !11918)
!11942 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1599, file: !1599, line: 2100, type: !11943, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11945)
!11943 = !DISubroutineType(types: !11944)
!11944 = !{!1320, !11021, !1769, !61, !61}
!11945 = !{!11946, !11947, !11948, !11949, !11950}
!11946 = !DILocalVariable(name: "driver", arg: 1, scope: !11942, file: !1599, line: 2100, type: !11021)
!11947 = !DILocalVariable(name: "D", arg: 2, scope: !11942, file: !1599, line: 2100, type: !1769)
!11948 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !11942, file: !1599, line: 2100, type: !61)
!11949 = !DILocalVariable(name: "parameter", arg: 4, scope: !11942, file: !1599, line: 2100, type: !61)
!11950 = !DILocalVariable(name: "result", scope: !11942, file: !1599, line: 2102, type: !1320)
!11951 = !DILocation(line: 0, scope: !11942)
!11952 = !DILocation(line: 2105, column: 16, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11942, file: !1599, line: 2105, column: 9)
!11954 = !DILocation(line: 2105, column: 24, scope: !11953)
!11955 = !DILocation(line: 2109, column: 12, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11942, file: !1599, line: 2109, column: 9)
!11957 = !DILocation(line: 2109, column: 16, scope: !11956)
!11958 = !DILocation(line: 2109, column: 24, scope: !11956)
!11959 = !DILocation(line: 2109, column: 30, scope: !11956)
!11960 = !DILocation(line: 2109, column: 40, scope: !11956)
!11961 = !DILocation(line: 2109, column: 9, scope: !11942)
!11962 = !DILocation(line: 2118, column: 19, scope: !11942)
!11963 = !DILocation(line: 2118, column: 8, scope: !11942)
!11964 = !DILocation(line: 2118, column: 17, scope: !11942)
!11965 = !DILocation(line: 2119, column: 23, scope: !11942)
!11966 = !DILocation(line: 2119, column: 8, scope: !11942)
!11967 = !DILocation(line: 2119, column: 21, scope: !11942)
!11968 = !DILocation(line: 2122, column: 5, scope: !11942)
!11969 = !DILocation(line: 2125, column: 8, scope: !11942)
!11970 = !DILocation(line: 2125, column: 13, scope: !11942)
!11971 = !DILocation(line: 2125, column: 24, scope: !11942)
!11972 = !DILocation(line: 2126, column: 26, scope: !11942)
!11973 = !DILocation(line: 2126, column: 5, scope: !11942)
!11974 = !DILocation(line: 2128, column: 9, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11942, file: !1599, line: 2128, column: 9)
!11976 = !DILocation(line: 2128, column: 31, scope: !11975)
!11977 = !DILocation(line: 2128, column: 60, scope: !11975)
!11978 = !DILocation(line: 2128, column: 9, scope: !11942)
!11979 = !DILocation(line: 2129, column: 12, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11975, file: !1599, line: 2128, column: 110)
!11981 = !DILocation(line: 2129, column: 17, scope: !11980)
!11982 = !DILocation(line: 2129, column: 28, scope: !11980)
!11983 = !DILocation(line: 2130, column: 9, scope: !11980)
!11984 = !DILocation(line: 2131, column: 5, scope: !11980)
!11985 = !DILocation(line: 2134, column: 14, scope: !11942)
!11986 = !DILocation(line: 2136, column: 5, scope: !11942)
!11987 = !DILocation(line: 2137, column: 1, scope: !11942)
!11988 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1599, file: !1599, line: 3387, type: !11989, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{null, !1769, !849}
!11991 = !{!11992, !11993, !11994}
!11992 = !DILocalVariable(name: "D", arg: 1, scope: !11988, file: !1599, line: 3387, type: !1769)
!11993 = !DILocalVariable(name: "id", arg: 2, scope: !11988, file: !1599, line: 3387, type: !849)
!11994 = !DILocalVariable(name: "cmd", scope: !11988, file: !1599, line: 3389, type: !159)
!11995 = !DILocation(line: 0, scope: !11988)
!11996 = !DILocation(line: 3389, column: 5, scope: !11988)
!11997 = !DILocation(line: 3405, column: 9, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11988, file: !1599, line: 3405, column: 9)
!11999 = !DILocation(line: 3405, column: 21, scope: !11998)
!12000 = !DILocation(line: 0, scope: !11998)
!12001 = !DILocation(line: 3405, column: 9, scope: !11988)
!12002 = !DILocation(line: 3411, column: 31, scope: !11988)
!12003 = !DILocation(line: 3411, column: 5, scope: !11988)
!12004 = !DILocation(line: 3412, column: 1, scope: !11988)
!12005 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1599, file: !1599, line: 3585, type: !12006, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1598, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{null, !9788, !849, !849, !9788, !9788}
!12008 = !{!12009, !12010, !12011, !12012, !12013, !12014}
!12009 = !DILocalVariable(name: "CS", arg: 1, scope: !12005, file: !1599, line: 3585, type: !9788)
!12010 = !DILocalVariable(name: "cmd", arg: 2, scope: !12005, file: !1599, line: 3585, type: !849)
!12011 = !DILocalVariable(name: "data", arg: 3, scope: !12005, file: !1599, line: 3585, type: !849)
!12012 = !DILocalVariable(name: "outl", arg: 4, scope: !12005, file: !1599, line: 3585, type: !9788)
!12013 = !DILocalVariable(name: "inl", arg: 5, scope: !12005, file: !1599, line: 3585, type: !9788)
!12014 = !DILocalVariable(name: "savedMask", scope: !12005, file: !1599, line: 3587, type: !61)
!12015 = !DILocation(line: 0, scope: !12005)
!12016 = !DILocation(line: 3589, column: 17, scope: !12005)
!12017 = !DILocation(line: 3590, column: 5, scope: !12005)
!12018 = !DILocation(line: 3591, column: 5, scope: !12005)
!12019 = !DILocation(line: 3593, column: 1, scope: !12005)
!12020 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1922, file: !1922, line: 110, type: !10266, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12021)
!12021 = !{!12022, !12023, !12024, !12025}
!12022 = !DILocalVariable(name: "id", arg: 1, scope: !12020, file: !1922, line: 110, type: !849)
!12023 = !DILocalVariable(name: "i", scope: !12020, file: !1922, line: 114, type: !1320)
!12024 = !DILocalVariable(name: "j", scope: !12020, file: !1922, line: 114, type: !1320)
!12025 = !DILocalVariable(name: "id_list", scope: !12020, file: !1922, line: 115, type: !12026)
!12026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12027, size: 32)
!12027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1999)
!12028 = !DILocation(line: 0, scope: !12020)
!12029 = !DILocation(line: 119, column: 5, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12020, file: !1922, line: 119, column: 5)
!12031 = !DILocation(line: 119, column: 46, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12030, file: !1922, line: 119, column: 5)
!12033 = !DILocation(line: 119, column: 19, scope: !12032)
!12034 = distinct !{!12034, !12029, !12035}
!12035 = !DILocation(line: 131, column: 5, scope: !12030)
!12036 = !DILocation(line: 121, column: 23, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !1922, line: 121, column: 9)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !1922, line: 121, column: 9)
!12039 = distinct !DILexicalBlock(scope: !12032, file: !1922, line: 119, column: 50)
!12040 = !DILocation(line: 121, column: 9, scope: !12038)
!12041 = !DILocation(line: 122, column: 17, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !1922, line: 122, column: 17)
!12043 = distinct !DILexicalBlock(scope: !12037, file: !1922, line: 121, column: 51)
!12044 = !DILocation(line: 122, column: 37, scope: !12042)
!12045 = !DILocation(line: 122, column: 34, scope: !12042)
!12046 = !DILocation(line: 122, column: 17, scope: !12043)
!12047 = !DILocation(line: 121, column: 47, scope: !12037)
!12048 = distinct !{!12048, !12040, !12049}
!12049 = !DILocation(line: 125, column: 9, scope: !12038)
!12050 = !DILocation(line: 0, scope: !12038)
!12051 = !DILocation(line: 127, column: 15, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12039, file: !1922, line: 127, column: 13)
!12053 = !DILocation(line: 127, column: 13, scope: !12039)
!12054 = !DILocation(line: 134, column: 1, scope: !12020)
!12055 = distinct !DISubprogram(name: "CMEM_Index", scope: !1922, file: !1922, line: 153, type: !10421, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12056)
!12056 = !{!12057, !12058, !12059, !12066}
!12057 = !DILocalVariable(name: "i", scope: !12055, file: !1922, line: 156, type: !1320)
!12058 = !DILocalVariable(name: "j", scope: !12055, file: !1922, line: 156, type: !1320)
!12059 = !DILocalVariable(name: "id", scope: !12055, file: !1922, line: 157, type: !12060)
!12060 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1992, line: 89, baseType: !12061)
!12061 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1992, line: 86, size: 64, elements: !12062)
!12062 = !{!12063, !12064}
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !12061, file: !1992, line: 87, baseType: !2005, size: 64)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !12061, file: !1992, line: 88, baseType: !12065, size: 64)
!12065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 64, elements: !506)
!12066 = !DILocalVariable(name: "id_list", scope: !12055, file: !1922, line: 158, type: !12026)
!12067 = !DILocation(line: 157, column: 5, scope: !12055)
!12068 = !DILocation(line: 157, column: 17, scope: !12055)
!12069 = !DILocation(line: 0, scope: !12055)
!12070 = !DILocation(line: 161, column: 9, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12055, file: !1922, line: 161, column: 9)
!12072 = !DILocation(line: 161, column: 20, scope: !12071)
!12073 = !DILocation(line: 161, column: 9, scope: !12055)
!12074 = !DILocation(line: 172, column: 58, scope: !12055)
!12075 = !DILocation(line: 172, column: 5, scope: !12055)
!12076 = !DILocation(line: 178, column: 5, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12055, file: !1922, line: 178, column: 5)
!12078 = !DILocation(line: 180, column: 23, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !1922, line: 180, column: 9)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !1922, line: 180, column: 9)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !1922, line: 178, column: 53)
!12082 = distinct !DILexicalBlock(scope: !12077, file: !1922, line: 178, column: 5)
!12083 = !DILocation(line: 180, column: 9, scope: !12080)
!12084 = !DILocation(line: 181, column: 17, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !1922, line: 181, column: 17)
!12086 = distinct !DILexicalBlock(scope: !12079, file: !1922, line: 180, column: 51)
!12087 = !DILocation(line: 181, column: 37, scope: !12085)
!12088 = !DILocation(line: 181, column: 34, scope: !12085)
!12089 = !DILocation(line: 181, column: 17, scope: !12086)
!12090 = !DILocation(line: 180, column: 47, scope: !12079)
!12091 = distinct !{!12091, !12083, !12092}
!12092 = !DILocation(line: 184, column: 9, scope: !12080)
!12093 = !DILocation(line: 0, scope: !12080)
!12094 = !DILocation(line: 186, column: 15, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12081, file: !1922, line: 186, column: 13)
!12096 = !DILocation(line: 186, column: 13, scope: !12081)
!12097 = !DILocation(line: 188, column: 26, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12095, file: !1922, line: 186, column: 41)
!12099 = !DILocation(line: 188, column: 24, scope: !12098)
!12100 = !DILocation(line: 189, column: 13, scope: !12098)
!12101 = !DILocation(line: 178, column: 46, scope: !12082)
!12102 = !DILocation(line: 178, column: 19, scope: !12082)
!12103 = distinct !{!12103, !12076, !12104}
!12104 = !DILocation(line: 191, column: 5, scope: !12077)
!12105 = !DILocation(line: 222, column: 12, scope: !12055)
!12106 = !DILocation(line: 223, column: 1, scope: !12055)
!12107 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1922, file: !1922, line: 240, type: !12108, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12110)
!12108 = !DISubroutineType(types: !12109)
!12109 = !{!12026, !61}
!12110 = !{!12111}
!12111 = !DILocalVariable(name: "index", arg: 1, scope: !12107, file: !1922, line: 240, type: !61)
!12112 = !DILocation(line: 0, scope: !12107)
!12113 = !DILocation(line: 242, column: 13, scope: !12107)
!12114 = !DILocation(line: 242, column: 5, scope: !12107)
!12115 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1922, file: !1922, line: 254, type: !12116, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12118)
!12116 = !DISubroutineType(types: !12117)
!12117 = !{null, !9788, !88, !1427}
!12118 = !{!12119, !12120, !12121, !12122, !12124, !12125}
!12119 = !DILocalVariable(name: "CS", arg: 1, scope: !12115, file: !1922, line: 254, type: !9788)
!12120 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !12115, file: !1922, line: 254, type: !88)
!12121 = !DILocalVariable(name: "flashid", arg: 3, scope: !12115, file: !1922, line: 254, type: !1427)
!12122 = !DILocalVariable(name: "cmd", scope: !12123, file: !1922, line: 258, type: !159)
!12123 = distinct !DILexicalBlock(scope: !12115, file: !1922, line: 257, column: 5)
!12124 = !DILocalVariable(name: "id", scope: !12123, file: !1922, line: 258, type: !1859)
!12125 = !DILocalVariable(name: "i", scope: !12123, file: !1922, line: 258, type: !159)
!12126 = !DILocation(line: 0, scope: !12115)
!12127 = !DILocation(line: 258, column: 9, scope: !12123)
!12128 = !DILocation(line: 258, column: 22, scope: !12123)
!12129 = !DILocation(line: 0, scope: !12123)
!12130 = !DILocation(line: 260, column: 13, scope: !12123)
!12131 = !DILocation(line: 261, column: 9, scope: !12123)
!12132 = !DILocation(line: 263, column: 13, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12123, file: !1922, line: 263, column: 13)
!12134 = !DILocation(line: 263, column: 27, scope: !12133)
!12135 = !DILocation(line: 263, column: 48, scope: !12133)
!12136 = !DILocation(line: 263, column: 13, scope: !12123)
!12137 = !DILocation(line: 264, column: 17, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12133, file: !1922, line: 263, column: 95)
!12139 = !DILocation(line: 265, column: 13, scope: !12138)
!12140 = !DILocation(line: 266, column: 9, scope: !12138)
!12141 = !DILocation(line: 268, column: 9, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12123, file: !1922, line: 268, column: 9)
!12143 = !DILocation(line: 269, column: 26, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !1922, line: 268, column: 50)
!12145 = distinct !DILexicalBlock(scope: !12142, file: !1922, line: 268, column: 9)
!12146 = !DILocation(line: 269, column: 13, scope: !12144)
!12147 = !DILocation(line: 269, column: 24, scope: !12144)
!12148 = !DILocation(line: 268, column: 46, scope: !12145)
!12149 = !DILocation(line: 268, column: 23, scope: !12145)
!12150 = distinct !{!12150, !12141, !12151}
!12151 = !DILocation(line: 270, column: 9, scope: !12142)
!12152 = !DILocation(line: 271, column: 5, scope: !12115)
!12153 = !DILocation(line: 272, column: 5, scope: !12115)
!12154 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1922, file: !1922, line: 285, type: !10266, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12155)
!12155 = !{!12156, !12157, !12158, !12159}
!12156 = !DILocalVariable(name: "id", arg: 1, scope: !12154, file: !1922, line: 285, type: !849)
!12157 = !DILocalVariable(name: "i", scope: !12154, file: !1922, line: 289, type: !1320)
!12158 = !DILocalVariable(name: "j", scope: !12154, file: !1922, line: 289, type: !1320)
!12159 = !DILocalVariable(name: "id_list", scope: !12154, file: !1922, line: 290, type: !12026)
!12160 = !DILocation(line: 0, scope: !12154)
!12161 = !DILocation(line: 294, column: 5, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12154, file: !1922, line: 294, column: 5)
!12163 = !DILocation(line: 294, column: 46, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12162, file: !1922, line: 294, column: 5)
!12165 = !DILocation(line: 294, column: 19, scope: !12164)
!12166 = distinct !{!12166, !12161, !12167}
!12167 = !DILocation(line: 306, column: 5, scope: !12162)
!12168 = !DILocation(line: 296, column: 23, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !1922, line: 296, column: 9)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !1922, line: 296, column: 9)
!12171 = distinct !DILexicalBlock(scope: !12164, file: !1922, line: 294, column: 53)
!12172 = !DILocation(line: 296, column: 9, scope: !12170)
!12173 = !DILocation(line: 297, column: 17, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !1922, line: 297, column: 17)
!12175 = distinct !DILexicalBlock(scope: !12169, file: !1922, line: 296, column: 51)
!12176 = !DILocation(line: 297, column: 37, scope: !12174)
!12177 = !DILocation(line: 297, column: 34, scope: !12174)
!12178 = !DILocation(line: 297, column: 17, scope: !12175)
!12179 = !DILocation(line: 296, column: 47, scope: !12169)
!12180 = distinct !{!12180, !12172, !12181}
!12181 = !DILocation(line: 300, column: 9, scope: !12170)
!12182 = !DILocation(line: 0, scope: !12170)
!12183 = !DILocation(line: 302, column: 15, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12171, file: !1922, line: 302, column: 13)
!12185 = !DILocation(line: 302, column: 13, scope: !12171)
!12186 = !DILocation(line: 310, column: 1, scope: !12154)
!12187 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1922, file: !1922, line: 328, type: !10421, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12188)
!12188 = !{!12189, !12190, !12191, !12192}
!12189 = !DILocalVariable(name: "i", scope: !12187, file: !1922, line: 331, type: !1320)
!12190 = !DILocalVariable(name: "j", scope: !12187, file: !1922, line: 331, type: !1320)
!12191 = !DILocalVariable(name: "id", scope: !12187, file: !1922, line: 332, type: !12060)
!12192 = !DILocalVariable(name: "id_list", scope: !12187, file: !1922, line: 333, type: !12026)
!12193 = !DILocation(line: 332, column: 5, scope: !12187)
!12194 = !DILocation(line: 332, column: 17, scope: !12187)
!12195 = !DILocation(line: 0, scope: !12187)
!12196 = !DILocation(line: 336, column: 9, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12187, file: !1922, line: 336, column: 9)
!12198 = !DILocation(line: 336, column: 28, scope: !12197)
!12199 = !DILocation(line: 336, column: 9, scope: !12187)
!12200 = !DILocation(line: 344, column: 60, scope: !12187)
!12201 = !DILocation(line: 344, column: 5, scope: !12187)
!12202 = !DILocation(line: 350, column: 5, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12187, file: !1922, line: 350, column: 5)
!12204 = !DILocation(line: 352, column: 23, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !1922, line: 352, column: 9)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !1922, line: 352, column: 9)
!12207 = distinct !DILexicalBlock(scope: !12208, file: !1922, line: 350, column: 53)
!12208 = distinct !DILexicalBlock(scope: !12203, file: !1922, line: 350, column: 5)
!12209 = !DILocation(line: 352, column: 9, scope: !12206)
!12210 = !DILocation(line: 353, column: 17, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !1922, line: 353, column: 17)
!12212 = distinct !DILexicalBlock(scope: !12205, file: !1922, line: 352, column: 51)
!12213 = !DILocation(line: 353, column: 37, scope: !12211)
!12214 = !DILocation(line: 353, column: 34, scope: !12211)
!12215 = !DILocation(line: 353, column: 17, scope: !12212)
!12216 = !DILocation(line: 352, column: 47, scope: !12205)
!12217 = distinct !{!12217, !12209, !12218}
!12218 = !DILocation(line: 356, column: 9, scope: !12206)
!12219 = !DILocation(line: 0, scope: !12206)
!12220 = !DILocation(line: 358, column: 15, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12207, file: !1922, line: 358, column: 13)
!12222 = !DILocation(line: 358, column: 13, scope: !12207)
!12223 = !DILocation(line: 360, column: 34, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12221, file: !1922, line: 358, column: 41)
!12225 = !DILocation(line: 360, column: 32, scope: !12224)
!12226 = !DILocation(line: 361, column: 13, scope: !12224)
!12227 = !DILocation(line: 350, column: 46, scope: !12208)
!12228 = !DILocation(line: 350, column: 19, scope: !12208)
!12229 = distinct !{!12229, !12202, !12230}
!12230 = !DILocation(line: 363, column: 5, scope: !12203)
!12231 = !DILocation(line: 364, column: 12, scope: !12187)
!12232 = !DILocation(line: 365, column: 1, scope: !12187)
!12233 = distinct !DISubprogram(name: "NOR_ReadID", scope: !3252, file: !3252, line: 64, type: !12234, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3251, retainedNodes: !12240)
!12234 = !DISubroutineType(types: !12235)
!12235 = !{null, !9788, !12236, !1427}
!12236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12237, size: 32)
!12237 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !12238)
!12238 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !12239, line: 158, baseType: !1018)
!12239 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!12240 = !{!12241, !12242, !12243, !12244, !12245, !12247, !12248}
!12241 = !DILocalVariable(name: "CS", arg: 1, scope: !12233, file: !3252, line: 64, type: !9788)
!12242 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !12233, file: !3252, line: 64, type: !12236)
!12243 = !DILocalVariable(name: "flashid", arg: 3, scope: !12233, file: !3252, line: 64, type: !1427)
!12244 = !DILocalVariable(name: "savedMask", scope: !12233, file: !3252, line: 66, type: !61)
!12245 = !DILocalVariable(name: "cmd", scope: !12246, file: !3252, line: 70, type: !159)
!12246 = distinct !DILexicalBlock(scope: !12233, file: !3252, line: 69, column: 5)
!12247 = !DILocalVariable(name: "id", scope: !12246, file: !3252, line: 70, type: !1859)
!12248 = !DILocalVariable(name: "i", scope: !12246, file: !3252, line: 70, type: !159)
!12249 = !DILocation(line: 0, scope: !12233)
!12250 = !DILocation(line: 70, column: 9, scope: !12246)
!12251 = !DILocation(line: 70, column: 22, scope: !12246)
!12252 = !DILocation(line: 0, scope: !12246)
!12253 = !DILocation(line: 72, column: 13, scope: !12246)
!12254 = !DILocation(line: 73, column: 21, scope: !12246)
!12255 = !DILocation(line: 74, column: 9, scope: !12246)
!12256 = !DILocation(line: 75, column: 9, scope: !12246)
!12257 = !DILocation(line: 77, column: 13, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12246, file: !3252, line: 77, column: 13)
!12259 = !DILocation(line: 77, column: 27, scope: !12258)
!12260 = !DILocation(line: 77, column: 48, scope: !12258)
!12261 = !DILocation(line: 77, column: 13, scope: !12246)
!12262 = !DILocation(line: 78, column: 17, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12258, file: !3252, line: 77, column: 87)
!12264 = !DILocation(line: 79, column: 25, scope: !12263)
!12265 = !DILocation(line: 80, column: 13, scope: !12263)
!12266 = !DILocation(line: 81, column: 13, scope: !12263)
!12267 = !DILocation(line: 82, column: 9, scope: !12263)
!12268 = !DILocation(line: 84, column: 9, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12246, file: !3252, line: 84, column: 9)
!12270 = !DILocation(line: 85, column: 26, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !3252, line: 84, column: 50)
!12272 = distinct !DILexicalBlock(scope: !12269, file: !3252, line: 84, column: 9)
!12273 = !DILocation(line: 85, column: 13, scope: !12271)
!12274 = !DILocation(line: 85, column: 24, scope: !12271)
!12275 = !DILocation(line: 84, column: 46, scope: !12272)
!12276 = !DILocation(line: 84, column: 23, scope: !12272)
!12277 = distinct !{!12277, !12268, !12278}
!12278 = !DILocation(line: 86, column: 9, scope: !12269)
!12279 = !DILocation(line: 87, column: 5, scope: !12233)
!12280 = !DILocation(line: 89, column: 1, scope: !12233)
!12281 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !2009, file: !2009, line: 248, type: !4512, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12282 = !DILocation(line: 250, column: 5, scope: !12281)
!12283 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !2009, file: !2009, line: 270, type: !4512, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12284 = !DILocation(line: 272, column: 5, scope: !12283)
!12285 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !2009, file: !2009, line: 294, type: !343, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12286 = !DILocation(line: 296, column: 5, scope: !12285)
!12287 = !DILocation(line: 297, column: 5, scope: !12285)
!12288 = distinct !DISubprogram(name: "nor_sweep_device", scope: !2009, file: !2009, line: 304, type: !343, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12289 = !DILocation(line: 309, column: 5, scope: !12288)
!12290 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !2009, file: !2009, line: 312, type: !343, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12291 = !DILocation(line: 317, column: 5, scope: !12290)
!12292 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !2009, file: !2009, line: 334, type: !4512, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12293 = !DILocation(line: 336, column: 5, scope: !12292)
!12294 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !2009, file: !2009, line: 353, type: !4512, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12295 = !DILocation(line: 355, column: 5, scope: !12294)
!12296 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !2009, file: !2009, line: 374, type: !343, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12297 = !DILocation(line: 376, column: 5, scope: !12296)
!12298 = !DILocation(line: 377, column: 1, scope: !12296)
!12299 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !2009, file: !2009, line: 395, type: !4512, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12300 = !DILocation(line: 397, column: 5, scope: !12299)
!12301 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !2009, file: !2009, line: 416, type: !4512, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !345)
!12302 = !DILocation(line: 418, column: 5, scope: !12301)
!12303 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !2018, file: !2018, line: 254, type: !4512, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !345)
!12304 = !DILocation(line: 256, column: 32, scope: !12303)
!12305 = !DILocation(line: 257, column: 5, scope: !12303)
!12306 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !2018, file: !2018, line: 269, type: !10421, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !345)
!12307 = !DILocation(line: 275, column: 24, scope: !12306)
!12308 = !DILocation(line: 278, column: 24, scope: !12306)
!12309 = !DILocation(line: 278, column: 33, scope: !12306)
!12310 = !DILocation(line: 278, column: 49, scope: !12306)
!12311 = !DILocation(line: 278, column: 22, scope: !12306)
!12312 = !DILocation(line: 281, column: 5, scope: !12306)
!12313 = !DILocation(line: 283, column: 34, scope: !12306)
!12314 = !DILocation(line: 283, column: 23, scope: !12306)
!12315 = !DILocation(line: 286, column: 25, scope: !12306)
!12316 = !DILocation(line: 321, column: 5, scope: !12306)
!12317 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !2018, file: !2018, line: 332, type: !10421, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12318)
!12318 = !{!12319}
!12319 = !DILocalVariable(name: "result", scope: !12317, file: !2018, line: 334, type: !1320)
!12320 = !DILocation(line: 340, column: 30, scope: !12317)
!12321 = !DILocation(line: 343, column: 24, scope: !12317)
!12322 = !DILocation(line: 344, column: 18, scope: !12317)
!12323 = !DILocation(line: 348, column: 17, scope: !12317)
!12324 = !DILocation(line: 353, column: 19, scope: !12317)
!12325 = !DILocation(line: 354, column: 18, scope: !12317)
!12326 = !DILocation(line: 354, column: 27, scope: !12317)
!12327 = !DILocation(line: 354, column: 43, scope: !12317)
!12328 = !DILocation(line: 350, column: 14, scope: !12317)
!12329 = !DILocation(line: 0, scope: !12317)
!12330 = !DILocation(line: 356, column: 16, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12317, file: !2018, line: 356, column: 9)
!12332 = !DILocation(line: 395, column: 1, scope: !12317)
!12333 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !2018, file: !2018, line: 406, type: !12334, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !345)
!12334 = !DISubroutineType(types: !3185)
!12335 = !DILocation(line: 408, column: 5, scope: !12333)
!12336 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !2018, file: !2018, line: 420, type: !12337, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12339)
!12337 = !DISubroutineType(types: !12338)
!12338 = !{!61, !159}
!12339 = !{!12340, !12341, !12342}
!12340 = !DILocalVariable(name: "CS", arg: 1, scope: !12336, file: !2018, line: 420, type: !159)
!12341 = !DILocalVariable(name: "index", scope: !12336, file: !2018, line: 422, type: !61)
!12342 = !DILocalVariable(name: "list", scope: !12336, file: !2018, line: 423, type: !2335)
!12343 = !DILocation(line: 0, scope: !12336)
!12344 = !DILocation(line: 427, column: 13, scope: !12336)
!12345 = !DILocation(line: 430, column: 34, scope: !12336)
!12346 = !DILocation(line: 430, column: 5, scope: !12336)
!12347 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !2018, file: !2018, line: 442, type: !12348, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12350)
!12348 = !DISubroutineType(types: !12349)
!12349 = !{!61, !61, !2207}
!12350 = !{!12351, !12352, !12353}
!12351 = !DILocalVariable(name: "address", arg: 1, scope: !12347, file: !2018, line: 442, type: !61)
!12352 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !12347, file: !2018, line: 442, type: !2207)
!12353 = !DILocalVariable(name: "i", scope: !12347, file: !2018, line: 444, type: !1018)
!12354 = !DILocation(line: 0, scope: !12347)
!12355 = !DILocation(line: 446, column: 23, scope: !12347)
!12356 = !DILocation(line: 448, column: 36, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !2018, line: 448, column: 5)
!12358 = distinct !DILexicalBlock(scope: !12347, file: !2018, line: 448, column: 5)
!12359 = !DILocation(line: 448, column: 41, scope: !12357)
!12360 = !DILocation(line: 448, column: 5, scope: !12358)
!12361 = !DILocation(line: 449, column: 39, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !2018, line: 449, column: 13)
!12363 = distinct !DILexicalBlock(scope: !12357, file: !2018, line: 448, column: 54)
!12364 = !DILocation(line: 449, column: 21, scope: !12362)
!12365 = !DILocation(line: 449, column: 46, scope: !12362)
!12366 = !DILocation(line: 450, column: 46, scope: !12362)
!12367 = !DILocation(line: 450, column: 25, scope: !12362)
!12368 = !DILocation(line: 449, column: 13, scope: !12363)
!12369 = !DILocation(line: 448, column: 48, scope: !12357)
!12370 = !DILocation(line: 448, column: 29, scope: !12357)
!12371 = !DILocation(line: 448, column: 31, scope: !12357)
!12372 = distinct !{!12372, !12360, !12373}
!12373 = !DILocation(line: 453, column: 5, scope: !12358)
!12374 = !DILocation(line: 454, column: 27, scope: !12347)
!12375 = !DILocation(line: 454, column: 5, scope: !12347)
!12376 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !2018, file: !2018, line: 462, type: !4260, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12377)
!12377 = !{!12378}
!12378 = !DILocalVariable(name: "address", arg: 1, scope: !12376, file: !2018, line: 462, type: !61)
!12379 = !DILocation(line: 0, scope: !12376)
!12380 = !DILocation(line: 464, column: 45, scope: !12376)
!12381 = !DILocation(line: 464, column: 12, scope: !12376)
!12382 = !DILocation(line: 464, column: 5, scope: !12376)
!12383 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !2018, file: !2018, line: 487, type: !4260, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12384)
!12384 = !{!12385, !12386, !12387}
!12385 = !DILocalVariable(name: "address", arg: 1, scope: !12383, file: !2018, line: 487, type: !61)
!12386 = !DILocalVariable(name: "index", scope: !12383, file: !2018, line: 490, type: !61)
!12387 = !DILocalVariable(name: "list", scope: !12383, file: !2018, line: 491, type: !2335)
!12388 = !DILocation(line: 0, scope: !12383)
!12389 = !DILocation(line: 490, column: 22, scope: !12383)
!12390 = !DILocation(line: 495, column: 45, scope: !12383)
!12391 = !DILocation(line: 495, column: 12, scope: !12383)
!12392 = !DILocation(line: 495, column: 5, scope: !12383)
!12393 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !2018, file: !2018, line: 517, type: !12394, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12398)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{!1320, !12396}
!12396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12397, size: 32)
!12397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!12398 = !{!12399, !12400, !12401}
!12399 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !12393, file: !2018, line: 517, type: !12396)
!12400 = !DILocalVariable(name: "result", scope: !12393, file: !2018, line: 519, type: !61)
!12401 = !DILocalVariable(name: "i", scope: !12393, file: !2018, line: 519, type: !61)
!12402 = !DILocation(line: 0, scope: !12393)
!12403 = !DILocation(line: 522, column: 29, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !2018, line: 522, column: 5)
!12405 = distinct !DILexicalBlock(scope: !12393, file: !2018, line: 522, column: 5)
!12406 = !DILocation(line: 522, column: 38, scope: !12404)
!12407 = !DILocation(line: 522, column: 5, scope: !12405)
!12408 = !DILocation(line: 523, column: 31, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12404, file: !2018, line: 522, column: 51)
!12410 = !DILocation(line: 523, column: 37, scope: !12409)
!12411 = !DILocation(line: 523, column: 16, scope: !12409)
!12412 = !DILocation(line: 522, column: 45, scope: !12404)
!12413 = distinct !{!12413, !12407, !12414}
!12414 = !DILocation(line: 524, column: 5, scope: !12405)
!12415 = !DILocation(line: 525, column: 5, scope: !12393)
!12416 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !2018, file: !2018, line: 535, type: !12417, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!61, !61, !61, !2033, !2207}
!12419 = !{!12420, !12421, !12422, !12423, !12424, !12425, !12426, !12427, !12428}
!12420 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !12416, file: !2018, line: 536, type: !61)
!12421 = !DILocalVariable(name: "length", arg: 2, scope: !12416, file: !2018, line: 537, type: !61)
!12422 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !12416, file: !2018, line: 538, type: !2033)
!12423 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !12416, file: !2018, line: 539, type: !2207)
!12424 = !DILocalVariable(name: "addr", scope: !12416, file: !2018, line: 541, type: !61)
!12425 = !DILocalVariable(name: "ptr", scope: !12416, file: !2018, line: 541, type: !61)
!12426 = !DILocalVariable(name: "blksize", scope: !12416, file: !2018, line: 541, type: !61)
!12427 = !DILocalVariable(name: "total_blocks", scope: !12416, file: !2018, line: 541, type: !61)
!12428 = !DILocalVariable(name: "endaddr", scope: !12416, file: !2018, line: 542, type: !61)
!12429 = !DILocation(line: 0, scope: !12416)
!12430 = !DILocation(line: 542, column: 33, scope: !12416)
!12431 = !DILocation(line: 557, column: 59, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !2018, line: 557, column: 5)
!12433 = distinct !DILexicalBlock(scope: !12416, file: !2018, line: 557, column: 5)
!12434 = !DILocation(line: 557, column: 5, scope: !12433)
!12435 = !DILocation(line: 560, column: 19, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12432, file: !2018, line: 559, column: 5)
!12437 = !DILocation(line: 562, column: 26, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12436, file: !2018, line: 562, column: 13)
!12439 = !DILocation(line: 0, scope: !12438)
!12440 = !DILocation(line: 562, column: 13, scope: !12436)
!12441 = !DILocation(line: 563, column: 39, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12438, file: !2018, line: 562, column: 34)
!12443 = !DILocation(line: 564, column: 29, scope: !12442)
!12444 = !DILocation(line: 564, column: 42, scope: !12442)
!12445 = !DILocation(line: 565, column: 9, scope: !12442)
!12446 = !DILocation(line: 567, column: 45, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12438, file: !2018, line: 567, column: 18)
!12448 = !DILocation(line: 567, column: 26, scope: !12447)
!12449 = !DILocation(line: 567, column: 18, scope: !12438)
!12450 = !DILocation(line: 568, column: 29, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12447, file: !2018, line: 567, column: 59)
!12452 = !DILocation(line: 568, column: 41, scope: !12451)
!12453 = !DILocation(line: 569, column: 9, scope: !12451)
!12454 = !DILocation(line: 572, column: 16, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12447, file: !2018, line: 571, column: 14)
!12456 = !DILocation(line: 573, column: 21, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12455, file: !2018, line: 573, column: 17)
!12458 = !DILocation(line: 573, column: 17, scope: !12455)
!12459 = !DILocation(line: 576, column: 29, scope: !12455)
!12460 = !DILocation(line: 576, column: 39, scope: !12455)
!12461 = !DILocation(line: 577, column: 29, scope: !12455)
!12462 = !DILocation(line: 577, column: 42, scope: !12455)
!12463 = !DILocation(line: 0, scope: !12433)
!12464 = !DILocation(line: 579, column: 14, scope: !12436)
!12465 = !DILocation(line: 580, column: 21, scope: !12436)
!12466 = distinct !{!12466, !12434, !12467}
!12467 = !DILocation(line: 581, column: 5, scope: !12433)
!12468 = !DILocation(line: 586, column: 1, scope: !12416)
!12469 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !2018, file: !2018, line: 593, type: !12470, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12472)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{!1320, !61, !61, !2033}
!12472 = !{!12473, !12474, !12475}
!12473 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !12469, file: !2018, line: 593, type: !61)
!12474 = !DILocalVariable(name: "length", arg: 2, scope: !12469, file: !2018, line: 593, type: !61)
!12475 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !12469, file: !2018, line: 593, type: !2033)
!12476 = !DILocation(line: 0, scope: !12469)
!12477 = !DILocation(line: 595, column: 12, scope: !12469)
!12478 = !DILocation(line: 595, column: 5, scope: !12469)
!12479 = !DILocation(line: 597, column: 81, scope: !12469)
!12480 = !DILocation(line: 597, column: 12, scope: !12469)
!12481 = !DILocation(line: 597, column: 5, scope: !12469)
!12482 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !2018, file: !2018, line: 606, type: !12470, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12483)
!12483 = !{!12484, !12485, !12486}
!12484 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !12482, file: !2018, line: 606, type: !61)
!12485 = !DILocalVariable(name: "length", arg: 2, scope: !12482, file: !2018, line: 606, type: !61)
!12486 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !12482, file: !2018, line: 606, type: !2033)
!12487 = !DILocation(line: 0, scope: !12482)
!12488 = !DILocation(line: 624, column: 5, scope: !12482)
!12489 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !2018, file: !2018, line: 637, type: !12470, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12490)
!12490 = !{!12491, !12492, !12493, !12494, !12495}
!12491 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !12489, file: !2018, line: 637, type: !61)
!12492 = !DILocalVariable(name: "length", arg: 2, scope: !12489, file: !2018, line: 637, type: !61)
!12493 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !12489, file: !2018, line: 637, type: !2033)
!12494 = !DILocalVariable(name: "index", scope: !12489, file: !2018, line: 642, type: !61)
!12495 = !DILocalVariable(name: "list", scope: !12489, file: !2018, line: 644, type: !2335)
!12496 = !DILocation(line: 0, scope: !12489)
!12497 = !DILocation(line: 642, column: 22, scope: !12489)
!12498 = !DILocation(line: 648, column: 81, scope: !12489)
!12499 = !DILocation(line: 648, column: 12, scope: !12489)
!12500 = !DILocation(line: 648, column: 5, scope: !12489)
!12501 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !2018, file: !2018, line: 658, type: !12470, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12502)
!12502 = !{!12503, !12504, !12505}
!12503 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !12501, file: !2018, line: 658, type: !61)
!12504 = !DILocalVariable(name: "length", arg: 2, scope: !12501, file: !2018, line: 658, type: !61)
!12505 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !12501, file: !2018, line: 658, type: !2033)
!12506 = !DILocation(line: 0, scope: !12501)
!12507 = !DILocation(line: 688, column: 5, scope: !12501)
!12508 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !2018, file: !2018, line: 700, type: !9855, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12509)
!12509 = !{!12510, !12511, !12512}
!12510 = !DILocalVariable(name: "CS", arg: 1, scope: !12508, file: !2018, line: 700, type: !9788)
!12511 = !DILocalVariable(name: "index", scope: !12508, file: !2018, line: 705, type: !61)
!12512 = !DILocalVariable(name: "list", scope: !12508, file: !2018, line: 707, type: !2335)
!12513 = !DILocation(line: 0, scope: !12508)
!12514 = !DILocation(line: 705, column: 22, scope: !12508)
!12515 = !DILocation(line: 711, column: 24, scope: !12508)
!12516 = !DILocation(line: 711, column: 5, scope: !12508)
!12517 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !2018, file: !2018, line: 721, type: !12518, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12520)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{null, !2253, !1541, !61}
!12520 = !{!12521, !12522, !12523}
!12521 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !12517, file: !2018, line: 721, type: !2253)
!12522 = !DILocalVariable(name: "index", arg: 2, scope: !12517, file: !2018, line: 721, type: !1541)
!12523 = !DILocalVariable(name: "bankSize", arg: 3, scope: !12517, file: !2018, line: 721, type: !61)
!12524 = !DILocation(line: 0, scope: !12517)
!12525 = !DILocation(line: 723, column: 18, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12517, file: !2018, line: 723, column: 9)
!12527 = !DILocation(line: 723, column: 26, scope: !12526)
!12528 = !DILocation(line: 723, column: 35, scope: !12526)
!12529 = !DILocation(line: 723, column: 9, scope: !12517)
!12530 = !DILocation(line: 724, column: 26, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !2018, line: 723, column: 48)
!12532 = !DILocation(line: 724, column: 32, scope: !12531)
!12533 = !DILocation(line: 725, column: 5, scope: !12531)
!12534 = !DILocation(line: 726, column: 18, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12526, file: !2018, line: 725, column: 12)
!12536 = !DILocation(line: 727, column: 26, scope: !12535)
!12537 = !DILocation(line: 727, column: 32, scope: !12535)
!12538 = !DILocation(line: 728, column: 18, scope: !12535)
!12539 = !DILocation(line: 728, column: 26, scope: !12535)
!12540 = !DILocation(line: 728, column: 35, scope: !12535)
!12541 = !DILocation(line: 731, column: 1, scope: !12517)
!12542 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !2018, file: !2018, line: 739, type: !12543, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12545)
!12543 = !DISubroutineType(types: !12544)
!12544 = !{!61, !61, !61, !2253, !12396}
!12545 = !{!12546, !12547, !12548, !12549, !12550, !12551, !12552, !12553, !12554}
!12546 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !12542, file: !2018, line: 740, type: !61)
!12547 = !DILocalVariable(name: "length", arg: 2, scope: !12542, file: !2018, line: 741, type: !61)
!12548 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !12542, file: !2018, line: 742, type: !2253)
!12549 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !12542, file: !2018, line: 743, type: !12396)
!12550 = !DILocalVariable(name: "Partition", scope: !12542, file: !2018, line: 745, type: !61)
!12551 = !DILocalVariable(name: "Index", scope: !12542, file: !2018, line: 746, type: !1320)
!12552 = !DILocalVariable(name: "bankSize", scope: !12542, file: !2018, line: 747, type: !61)
!12553 = !DILocalVariable(name: "NextBankAddr", scope: !12542, file: !2018, line: 748, type: !61)
!12554 = !DILocalVariable(name: "srcBankIdx", scope: !12542, file: !2018, line: 748, type: !61)
!12555 = !DILocation(line: 0, scope: !12542)
!12556 = !DILocation(line: 750, column: 12, scope: !12542)
!12557 = !DILocation(line: 750, column: 5, scope: !12542)
!12558 = !DILocation(line: 752, column: 51, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !2018, line: 752, column: 5)
!12560 = distinct !DILexicalBlock(scope: !12542, file: !2018, line: 752, column: 5)
!12561 = !DILocation(line: 752, column: 5, scope: !12560)
!12562 = !DILocation(line: 753, column: 51, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !2018, line: 753, column: 13)
!12564 = distinct !DILexicalBlock(scope: !12559, file: !2018, line: 752, column: 70)
!12565 = !DILocation(line: 753, column: 24, scope: !12563)
!12566 = !DILocation(line: 753, column: 13, scope: !12564)
!12567 = !DILocation(line: 758, column: 49, scope: !12564)
!12568 = !DILocation(line: 758, column: 22, scope: !12564)
!12569 = !DILocation(line: 760, column: 22, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12564, file: !2018, line: 760, column: 13)
!12571 = !DILocation(line: 760, column: 13, scope: !12564)
!12572 = !DILocation(line: 761, column: 37, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12570, file: !2018, line: 760, column: 39)
!12574 = !DILocation(line: 762, column: 24, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12573, file: !2018, line: 762, column: 17)
!12576 = !DILocation(line: 762, column: 17, scope: !12573)
!12577 = !DILocation(line: 767, column: 33, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12573, file: !2018, line: 767, column: 17)
!12579 = !DILocation(line: 767, column: 42, scope: !12578)
!12580 = !DILocation(line: 767, column: 17, scope: !12573)
!12581 = !DILocation(line: 768, column: 33, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12578, file: !2018, line: 767, column: 55)
!12583 = !DILocation(line: 768, column: 39, scope: !12582)
!12584 = !DILocation(line: 769, column: 13, scope: !12582)
!12585 = !DILocation(line: 770, column: 46, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !2018, line: 770, column: 21)
!12587 = distinct !DILexicalBlock(scope: !12578, file: !2018, line: 769, column: 20)
!12588 = !DILocation(line: 770, column: 21, scope: !12587)
!12589 = !DILocation(line: 773, column: 33, scope: !12587)
!12590 = !DILocation(line: 773, column: 39, scope: !12587)
!12591 = !DILocation(line: 774, column: 33, scope: !12587)
!12592 = !DILocation(line: 774, column: 42, scope: !12587)
!12593 = !DILocation(line: 777, column: 22, scope: !12573)
!12594 = !DILocation(line: 778, column: 20, scope: !12573)
!12595 = !DILocation(line: 779, column: 9, scope: !12573)
!12596 = !DILocation(line: 746, column: 13, scope: !12542)
!12597 = !DILocation(line: 752, column: 66, scope: !12559)
!12598 = distinct !{!12598, !12561, !12599}
!12599 = !DILocation(line: 781, column: 5, scope: !12560)
!12600 = !DILocation(line: 784, column: 5, scope: !12542)
!12601 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !2018, file: !2018, line: 796, type: !10421, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12602)
!12602 = !{!12603, !12604}
!12603 = !DILocalVariable(name: "result", scope: !12601, file: !2018, line: 798, type: !1320)
!12604 = !DILocalVariable(name: "i", scope: !12601, file: !2018, line: 799, type: !1320)
!12605 = !DILocation(line: 803, column: 19, scope: !12601)
!12606 = !DILocation(line: 803, column: 28, scope: !12601)
!12607 = !DILocation(line: 803, column: 17, scope: !12601)
!12608 = !DILocation(line: 822, column: 33, scope: !12601)
!12609 = !DILocation(line: 822, column: 56, scope: !12601)
!12610 = !DILocation(line: 822, column: 88, scope: !12601)
!12611 = !DILocation(line: 822, column: 97, scope: !12601)
!12612 = !DILocation(line: 822, column: 5, scope: !12601)
!12613 = !DILocation(line: 829, column: 39, scope: !12601)
!12614 = !DILocation(line: 829, column: 62, scope: !12601)
!12615 = !DILocation(line: 829, column: 14, scope: !12601)
!12616 = !DILocation(line: 0, scope: !12601)
!12617 = !DILocation(line: 834, column: 16, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12601, file: !2018, line: 834, column: 9)
!12619 = !DILocation(line: 834, column: 9, scope: !12601)
!12620 = !DILocation(line: 838, column: 30, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12601, file: !2018, line: 838, column: 5)
!12622 = !DILocation(line: 838, column: 58, scope: !12621)
!12623 = !DILocation(line: 838, column: 78, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12621, file: !2018, line: 838, column: 5)
!12625 = !DILocation(line: 838, column: 88, scope: !12624)
!12626 = !DILocation(line: 838, column: 5, scope: !12621)
!12627 = !DILocation(line: 839, column: 39, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12624, file: !2018, line: 838, column: 102)
!12629 = !DILocation(line: 839, column: 22, scope: !12628)
!12630 = !DILocation(line: 840, column: 37, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12628, file: !2018, line: 840, column: 13)
!12632 = !DILocation(line: 840, column: 13, scope: !12628)
!12633 = !DILocation(line: 841, column: 36, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12631, file: !2018, line: 840, column: 63)
!12635 = !DILocation(line: 842, column: 9, scope: !12634)
!12636 = !DILocation(line: 838, column: 95, scope: !12624)
!12637 = distinct !{!12637, !12626, !12638}
!12638 = !DILocation(line: 843, column: 5, scope: !12621)
!12639 = !DILocation(line: 871, column: 49, scope: !12601)
!12640 = !DILocation(line: 871, column: 72, scope: !12601)
!12641 = !DILocation(line: 871, column: 47, scope: !12601)
!12642 = !DILocation(line: 871, column: 97, scope: !12601)
!12643 = !DILocation(line: 871, column: 19, scope: !12601)
!12644 = !DILocation(line: 882, column: 14, scope: !12601)
!12645 = !DILocation(line: 887, column: 13, scope: !12601)
!12646 = !DILocation(line: 887, column: 22, scope: !12601)
!12647 = !DILocation(line: 887, column: 5, scope: !12601)
!12648 = !DILocation(line: 889, column: 22, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12601, file: !2018, line: 887, column: 34)
!12650 = !DILocation(line: 890, column: 13, scope: !12649)
!12651 = !DILocation(line: 902, column: 1, scope: !12601)
!12652 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !2018, file: !2018, line: 912, type: !12653, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12655)
!12653 = !DISubroutineType(types: !12654)
!12654 = !{null, !859}
!12655 = !{!12656}
!12656 = !DILocalVariable(name: "CS", arg: 1, scope: !12652, file: !2018, line: 912, type: !859)
!12657 = !DILocation(line: 0, scope: !12652)
!12658 = !DILocation(line: 914, column: 12, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12652, file: !2018, line: 914, column: 9)
!12660 = !DILocation(line: 914, column: 9, scope: !12652)
!12661 = !DILocation(line: 918, column: 26, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12659, file: !2018, line: 914, column: 18)
!12663 = !DILocation(line: 918, column: 24, scope: !12662)
!12664 = !DILocation(line: 920, column: 28, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12662, file: !2018, line: 920, column: 13)
!12666 = !DILocation(line: 920, column: 13, scope: !12662)
!12667 = !DILocation(line: 921, column: 13, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !2018, line: 921, column: 13)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !2018, line: 921, column: 13)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !2018, line: 921, column: 13)
!12671 = distinct !DILexicalBlock(scope: !12665, file: !2018, line: 920, column: 33)
!12672 = !DILocation(line: 923, column: 19, scope: !12662)
!12673 = !DILocation(line: 923, column: 17, scope: !12662)
!12674 = !DILocation(line: 924, column: 5, scope: !12662)
!12675 = !DILocation(line: 935, column: 14, scope: !12652)
!12676 = !DILocation(line: 936, column: 1, scope: !12652)
!12677 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !2018, file: !2018, line: 952, type: !10421, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !345)
!12678 = !DILocation(line: 955, column: 5, scope: !12677)
!12679 = !DILocation(line: 956, column: 12, scope: !12677)
!12680 = !DILocation(line: 956, column: 5, scope: !12677)
!12681 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !2018, file: !2018, line: 974, type: !10421, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2017, retainedNodes: !12682)
!12682 = !{!12683}
!12683 = !DILocalVariable(name: "result", scope: !12681, file: !2018, line: 976, type: !1320)
!12684 = !DILocation(line: 981, column: 5, scope: !12681)
!12685 = !DILocation(line: 986, column: 24, scope: !12681)
!12686 = !DILocation(line: 986, column: 33, scope: !12681)
!12687 = !DILocation(line: 986, column: 49, scope: !12681)
!12688 = !DILocation(line: 986, column: 22, scope: !12681)
!12689 = !DILocation(line: 1002, column: 19, scope: !12681)
!12690 = !DILocation(line: 1002, column: 17, scope: !12681)
!12691 = !DILocation(line: 1014, column: 22, scope: !12681)
!12692 = !DILocation(line: 1014, column: 5, scope: !12681)
!12693 = !DILocation(line: 1024, column: 33, scope: !12681)
!12694 = !DILocation(line: 1026, column: 27, scope: !12681)
!12695 = !DILocation(line: 1027, column: 26, scope: !12681)
!12696 = !DILocation(line: 1042, column: 33, scope: !12681)
!12697 = !DILocation(line: 1044, column: 32, scope: !12681)
!12698 = !DILocation(line: 1052, column: 18, scope: !12681)
!12699 = !DILocation(line: 1052, column: 27, scope: !12681)
!12700 = !DILocation(line: 1052, column: 43, scope: !12681)
!12701 = !DILocation(line: 1048, column: 14, scope: !12681)
!12702 = !DILocation(line: 0, scope: !12681)
!12703 = !DILocation(line: 1063, column: 5, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !2018, line: 1063, column: 5)
!12705 = distinct !DILexicalBlock(scope: !12681, file: !2018, line: 1063, column: 5)
!12706 = !DILocation(line: 1063, column: 5, scope: !12705)
!12707 = !DILocation(line: 1063, column: 5, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !2018, line: 1063, column: 5)
!12709 = !DILocation(line: 1096, column: 36, scope: !12681)
!12710 = !DILocation(line: 1096, column: 34, scope: !12681)
!12711 = !DILocation(line: 1101, column: 5, scope: !12681)
!12712 = !DILocation(line: 1103, column: 34, scope: !12681)
!12713 = !DILocation(line: 1109, column: 35, scope: !12681)
!12714 = !DILocation(line: 1110, column: 33, scope: !12681)
!12715 = !DILocation(line: 1111, column: 34, scope: !12681)
!12716 = !DILocation(line: 1113, column: 5, scope: !12681)
!12717 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2376, file: !2376, line: 84, type: !343, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!12718 = !DILocation(line: 86, column: 1, scope: !12717)
!12719 = distinct !DISubprogram(name: "GetFDMLock", scope: !2376, file: !2376, line: 87, type: !10887, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12720)
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "savedMask", scope: !12719, file: !2376, line: 89, type: !1320)
!12722 = !DILocation(line: 90, column: 17, scope: !12719)
!12723 = !DILocation(line: 0, scope: !12719)
!12724 = !DILocation(line: 91, column: 9, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12719, file: !2376, line: 91, column: 9)
!12726 = !DILocation(line: 91, column: 9, scope: !12719)
!12727 = !DILocation(line: 92, column: 17, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12725, file: !2376, line: 91, column: 24)
!12729 = !DILocation(line: 94, column: 9, scope: !12728)
!12730 = !DILocation(line: 0, scope: !12725)
!12731 = !DILocation(line: 102, column: 1, scope: !12719)
!12732 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2376, file: !2376, line: 103, type: !343, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12733)
!12733 = !{!12734}
!12734 = !DILocalVariable(name: "savedMask", scope: !12732, file: !2376, line: 105, type: !1320)
!12735 = !DILocation(line: 106, column: 17, scope: !12732)
!12736 = !DILocation(line: 0, scope: !12732)
!12737 = !DILocation(line: 107, column: 9, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12732, file: !2376, line: 107, column: 9)
!12739 = !DILocation(line: 107, column: 9, scope: !12732)
!12740 = !DILocation(line: 108, column: 17, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12738, file: !2376, line: 107, column: 24)
!12742 = !DILocation(line: 109, column: 9, scope: !12741)
!12743 = !DILocation(line: 114, column: 1, scope: !12732)
!12744 = !DILocation(line: 111, column: 9, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12738, file: !2376, line: 110, column: 12)
!12746 = !DILocation(line: 112, column: 9, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !2376, line: 112, column: 9)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !2376, line: 112, column: 9)
!12749 = distinct !DILexicalBlock(scope: !12745, file: !2376, line: 112, column: 9)
!12750 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2376, file: !2376, line: 119, type: !343, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!12751 = !DILocation(line: 123, column: 1, scope: !12750)
!12752 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2376, file: !2376, line: 130, type: !343, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12753)
!12753 = !{!12754}
!12754 = !DILocalVariable(name: "Result", scope: !12752, file: !2376, line: 132, type: !2432)
!12755 = !DILocation(line: 133, column: 5, scope: !12752)
!12756 = !DILocation(line: 134, column: 18, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12752, file: !2376, line: 133, column: 8)
!12758 = !DILocation(line: 0, scope: !12752)
!12759 = !DILocation(line: 135, column: 21, scope: !12752)
!12760 = !DILocation(line: 135, column: 5, scope: !12757)
!12761 = distinct !{!12761, !12755, !12762}
!12762 = !DILocation(line: 135, column: 43, scope: !12752)
!12763 = !DILocation(line: 136, column: 1, scope: !12752)
!12764 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2376, file: !2376, line: 143, type: !343, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!12765 = !DILocation(line: 147, column: 5, scope: !12764)
!12766 = !DILocation(line: 148, column: 1, scope: !12764)
!12767 = distinct !DISubprogram(name: "readRawDiskData", scope: !2376, file: !2376, line: 216, type: !12768, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12809)
!12768 = !DISubroutineType(types: !12769)
!12769 = !{!1320, !12770, !61, !849, !61}
!12770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12771, size: 32)
!12771 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2323, line: 93, baseType: !12772)
!12772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2323, line: 83, size: 1056, elements: !12773)
!12773 = !{!12774, !12775, !12795, !12796, !12808}
!12774 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !12772, file: !2323, line: 84, baseType: !61, size: 32)
!12775 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !12772, file: !2323, line: 85, baseType: !12776, size: 32, offset: 32)
!12776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12777, size: 32)
!12777 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1795, line: 121, baseType: !12778)
!12778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 105, size: 480, elements: !12779)
!12779 = !{!12780, !12781, !12782, !12783, !12784, !12785, !12786, !12787, !12788, !12789, !12790, !12791, !12792, !12793, !12794}
!12780 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !12778, file: !1795, line: 106, baseType: !2064, size: 32)
!12781 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !12778, file: !1795, line: 107, baseType: !1868, size: 32, offset: 32)
!12782 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !12778, file: !1795, line: 108, baseType: !2069, size: 32, offset: 64)
!12783 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !12778, file: !1795, line: 109, baseType: !2073, size: 32, offset: 96)
!12784 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !12778, file: !1795, line: 110, baseType: !2077, size: 32, offset: 128)
!12785 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !12778, file: !1795, line: 111, baseType: !2073, size: 32, offset: 160)
!12786 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !12778, file: !1795, line: 112, baseType: !2082, size: 32, offset: 192)
!12787 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !12778, file: !1795, line: 113, baseType: !2073, size: 32, offset: 224)
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !12778, file: !1795, line: 114, baseType: !2073, size: 32, offset: 256)
!12789 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !12778, file: !1795, line: 115, baseType: !2073, size: 32, offset: 288)
!12790 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !12778, file: !1795, line: 116, baseType: !2089, size: 32, offset: 320)
!12791 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !12778, file: !1795, line: 117, baseType: !2094, size: 32, offset: 352)
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !12778, file: !1795, line: 118, baseType: !2099, size: 32, offset: 384)
!12793 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !12778, file: !1795, line: 119, baseType: !2103, size: 32, offset: 416)
!12794 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !12778, file: !1795, line: 120, baseType: !2107, size: 32, offset: 448)
!12795 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !12772, file: !2323, line: 86, baseType: !88, size: 32, offset: 64)
!12796 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !12772, file: !2323, line: 87, baseType: !12797, size: 928, offset: 96)
!12797 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1795, line: 99, baseType: !12798)
!12798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1795, line: 90, size: 928, elements: !12799)
!12799 = !{!12800, !12801, !12802, !12803, !12804, !12805, !12806, !12807}
!12800 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !12798, file: !1795, line: 91, baseType: !61, size: 32)
!12801 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !12798, file: !1795, line: 92, baseType: !2121, size: 256, offset: 32)
!12802 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !12798, file: !1795, line: 93, baseType: !2121, size: 256, offset: 288)
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !12798, file: !1795, line: 94, baseType: !2121, size: 256, offset: 544)
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !12798, file: !1795, line: 95, baseType: !61, size: 32, offset: 800)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !12798, file: !1795, line: 96, baseType: !2113, size: 16, offset: 832)
!12806 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !12798, file: !1795, line: 97, baseType: !61, size: 32, offset: 864)
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !12798, file: !1795, line: 98, baseType: !61, size: 32, offset: 896)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !12772, file: !2323, line: 92, baseType: !91, size: 8, offset: 1024)
!12809 = !{!12810, !12811, !12812, !12813, !12814, !12815}
!12810 = !DILocalVariable(name: "D", arg: 1, scope: !12767, file: !2376, line: 216, type: !12770)
!12811 = !DILocalVariable(name: "addr", arg: 2, scope: !12767, file: !2376, line: 216, type: !61)
!12812 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !12767, file: !2376, line: 216, type: !849)
!12813 = !DILocalVariable(name: "len", arg: 4, scope: !12767, file: !2376, line: 216, type: !61)
!12814 = !DILocalVariable(name: "phyAddr", scope: !12767, file: !2376, line: 219, type: !61)
!12815 = !DILocalVariable(name: "diskSize", scope: !12767, file: !2376, line: 220, type: !61)
!12816 = !DILocation(line: 0, scope: !12767)
!12817 = !DILocation(line: 220, column: 28, scope: !12767)
!12818 = !DILocation(line: 222, column: 14, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12767, file: !2376, line: 222, column: 9)
!12820 = !DILocation(line: 222, column: 26, scope: !12819)
!12821 = !DILocation(line: 225, column: 51, scope: !12767)
!12822 = !DILocation(line: 225, column: 61, scope: !12767)
!12823 = !DILocation(line: 225, column: 15, scope: !12767)
!12824 = !DILocation(line: 225, column: 70, scope: !12767)
!12825 = !DILocation(line: 227, column: 13, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12767, file: !2376, line: 227, column: 9)
!12827 = !DILocation(line: 227, column: 9, scope: !12767)
!12828 = !DILocation(line: 228, column: 9, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12826, file: !2376, line: 227, column: 23)
!12830 = !DILocation(line: 229, column: 5, scope: !12829)
!12831 = !DILocation(line: 231, column: 5, scope: !12767)
!12832 = !DILocation(line: 233, column: 22, scope: !12767)
!12833 = !DILocation(line: 233, column: 5, scope: !12767)
!12834 = !DILocation(line: 235, column: 5, scope: !12767)
!12835 = !DILocation(line: 237, column: 5, scope: !12767)
!12836 = !DILocation(line: 238, column: 1, scope: !12767)
!12837 = distinct !DISubprogram(name: "MountDevice", scope: !2376, file: !2376, line: 165, type: !12838, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12840)
!12838 = !DISubroutineType(types: !12839)
!12839 = !{null, !12770}
!12840 = !{!12841, !12842}
!12841 = !DILocalVariable(name: "D", arg: 1, scope: !12837, file: !2376, line: 165, type: !12770)
!12842 = !DILocalVariable(name: "Result", scope: !12837, file: !2376, line: 167, type: !1320)
!12843 = !DILocation(line: 0, scope: !12837)
!12844 = !DILocation(line: 171, column: 12, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12837, file: !2376, line: 171, column: 9)
!12846 = !DILocation(line: 171, column: 9, scope: !12837)
!12847 = !DILocation(line: 176, column: 5, scope: !12837)
!12848 = !DILocation(line: 186, column: 17, scope: !12837)
!12849 = !DILocation(line: 186, column: 28, scope: !12837)
!12850 = !DILocation(line: 186, column: 43, scope: !12837)
!12851 = !DILocation(line: 186, column: 64, scope: !12837)
!12852 = !DILocation(line: 186, column: 52, scope: !12837)
!12853 = !DILocation(line: 186, column: 14, scope: !12837)
!12854 = !DILocation(line: 188, column: 5, scope: !12837)
!12855 = !DILocation(line: 190, column: 16, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12837, file: !2376, line: 190, column: 9)
!12857 = !DILocation(line: 190, column: 9, scope: !12837)
!12858 = !DILocation(line: 191, column: 9, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !2376, line: 191, column: 9)
!12860 = distinct !DILexicalBlock(scope: !12861, file: !2376, line: 191, column: 9)
!12861 = distinct !DILexicalBlock(scope: !12862, file: !2376, line: 191, column: 9)
!12862 = distinct !DILexicalBlock(scope: !12856, file: !2376, line: 190, column: 31)
!12863 = !DILocation(line: 194, column: 17, scope: !12837)
!12864 = !DILocation(line: 195, column: 1, scope: !12837)
!12865 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2376, file: !2376, line: 277, type: !12768, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12866)
!12866 = !{!12867, !12868, !12869, !12870, !12871, !12872, !12873, !12874, !12875, !12876, !12880, !12881, !12882, !12887}
!12867 = !DILocalVariable(name: "D", arg: 1, scope: !12865, file: !2376, line: 277, type: !12770)
!12868 = !DILocalVariable(name: "addr", arg: 2, scope: !12865, file: !2376, line: 277, type: !61)
!12869 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !12865, file: !2376, line: 277, type: !849)
!12870 = !DILocalVariable(name: "len", arg: 4, scope: !12865, file: !2376, line: 277, type: !61)
!12871 = !DILocalVariable(name: "dest", scope: !12865, file: !2376, line: 279, type: !61)
!12872 = !DILocalVariable(name: "src", scope: !12865, file: !2376, line: 279, type: !61)
!12873 = !DILocalVariable(name: "diskSize", scope: !12865, file: !2376, line: 280, type: !61)
!12874 = !DILocalVariable(name: "result", scope: !12865, file: !2376, line: 281, type: !1320)
!12875 = !DILocalVariable(name: "DoneLength", scope: !12865, file: !2376, line: 282, type: !61)
!12876 = !DILocalVariable(name: "blockSize", scope: !12877, file: !2376, line: 313, type: !61)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !2376, line: 312, column: 14)
!12878 = distinct !DILexicalBlock(scope: !12879, file: !2376, line: 305, column: 13)
!12879 = distinct !DILexicalBlock(scope: !12865, file: !2376, line: 298, column: 30)
!12880 = !DILocalVariable(name: "programBytes", scope: !12877, file: !2376, line: 314, type: !61)
!12881 = !DILocalVariable(name: "nextBlkAddr", scope: !12877, file: !2376, line: 316, type: !61)
!12882 = !DILocalVariable(name: "Cell", scope: !12883, file: !2376, line: 346, type: !12885)
!12883 = distinct !DILexicalBlock(scope: !12884, file: !2376, line: 345, column: 83)
!12884 = distinct !DILexicalBlock(scope: !12877, file: !2376, line: 345, column: 17)
!12885 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !12886, line: 76, baseType: !1018)
!12886 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/rtc_set_alarm/GCC")
!12887 = !DILocalVariable(name: "b", scope: !12883, file: !2376, line: 347, type: !849)
!12888 = !DILocation(line: 0, scope: !12865)
!12889 = !DILocation(line: 280, column: 28, scope: !12865)
!12890 = !DILocation(line: 284, column: 14, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12865, file: !2376, line: 284, column: 9)
!12892 = !DILocation(line: 284, column: 9, scope: !12865)
!12893 = !DILocation(line: 288, column: 14, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12865, file: !2376, line: 288, column: 9)
!12895 = !DILocation(line: 288, column: 20, scope: !12894)
!12896 = !DILocation(line: 288, column: 9, scope: !12865)
!12897 = !DILocation(line: 292, column: 13, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12865, file: !2376, line: 292, column: 9)
!12899 = !DILocation(line: 292, column: 9, scope: !12865)
!12900 = !DILocation(line: 293, column: 9, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12898, file: !2376, line: 292, column: 23)
!12902 = !DILocation(line: 294, column: 5, scope: !12901)
!12903 = !DILocation(line: 296, column: 5, scope: !12865)
!12904 = !DILocation(line: 346, column: 17, scope: !12883)
!12905 = !DILocation(line: 298, column: 23, scope: !12865)
!12906 = !DILocation(line: 298, column: 5, scope: !12865)
!12907 = !DILocation(line: 299, column: 52, scope: !12879)
!12908 = !DILocation(line: 299, column: 62, scope: !12879)
!12909 = !DILocation(line: 299, column: 16, scope: !12879)
!12910 = !DILocation(line: 299, column: 71, scope: !12879)
!12911 = !DILocation(line: 299, column: 78, scope: !12879)
!12912 = !DILocation(line: 300, column: 34, scope: !12879)
!12913 = !DILocation(line: 302, column: 12, scope: !12879)
!12914 = !DILocation(line: 302, column: 23, scope: !12879)
!12915 = !DILocation(line: 302, column: 81, scope: !12879)
!12916 = !DILocation(line: 302, column: 45, scope: !12879)
!12917 = !DILocation(line: 302, column: 9, scope: !12879)
!12918 = !DILocation(line: 305, column: 29, scope: !12878)
!12919 = !DILocation(line: 305, column: 57, scope: !12878)
!12920 = !DILocation(line: 305, column: 66, scope: !12878)
!12921 = !DILocation(line: 305, column: 80, scope: !12878)
!12922 = !DILocation(line: 305, column: 13, scope: !12879)
!12923 = !DILocation(line: 306, column: 25, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12878, file: !2376, line: 305, column: 87)
!12925 = !DILocation(line: 306, column: 36, scope: !12924)
!12926 = !DILocation(line: 306, column: 51, scope: !12924)
!12927 = !DILocation(line: 306, column: 60, scope: !12924)
!12928 = !DILocation(line: 306, column: 74, scope: !12924)
!12929 = !DILocation(line: 306, column: 22, scope: !12924)
!12930 = !DILocation(line: 307, column: 24, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12924, file: !2376, line: 307, column: 17)
!12932 = !DILocation(line: 307, column: 17, scope: !12924)
!12933 = !DILocation(line: 310, column: 23, scope: !12924)
!12934 = !DILocation(line: 311, column: 9, scope: !12924)
!12935 = !DILocation(line: 313, column: 47, scope: !12877)
!12936 = !DILocation(line: 313, column: 56, scope: !12877)
!12937 = !DILocation(line: 313, column: 34, scope: !12877)
!12938 = !DILocation(line: 0, scope: !12877)
!12939 = !DILocation(line: 316, column: 42, scope: !12877)
!12940 = !DILocation(line: 316, column: 58, scope: !12877)
!12941 = !DILocation(line: 316, column: 55, scope: !12877)
!12942 = !DILocation(line: 326, column: 22, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12877, file: !2376, line: 326, column: 17)
!12944 = !DILocation(line: 326, column: 37, scope: !12943)
!12945 = !DILocation(line: 326, column: 17, scope: !12877)
!12946 = !DILocation(line: 332, column: 43, scope: !12877)
!12947 = !DILocation(line: 345, column: 30, scope: !12884)
!12948 = !DILocation(line: 345, column: 52, scope: !12884)
!12949 = !DILocation(line: 0, scope: !12883)
!12950 = !DILocation(line: 348, column: 26, scope: !12883)
!12951 = !DILocation(line: 348, column: 24, scope: !12883)
!12952 = !DILocation(line: 348, column: 22, scope: !12883)
!12953 = !DILocation(line: 349, column: 41, scope: !12883)
!12954 = !DILocation(line: 349, column: 24, scope: !12883)
!12955 = !DILocation(line: 349, column: 22, scope: !12883)
!12956 = !DILocation(line: 350, column: 29, scope: !12883)
!12957 = !DILocation(line: 350, column: 40, scope: !12883)
!12958 = !DILocation(line: 350, column: 55, scope: !12883)
!12959 = !DILocation(line: 350, column: 64, scope: !12883)
!12960 = !DILocation(line: 350, column: 26, scope: !12883)
!12961 = !DILocation(line: 351, column: 28, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12883, file: !2376, line: 351, column: 21)
!12963 = !DILocation(line: 354, column: 13, scope: !12884)
!12964 = !DILocation(line: 362, column: 33, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12966, file: !2376, line: 361, column: 24)
!12966 = distinct !DILexicalBlock(scope: !12967, file: !2376, line: 355, column: 21)
!12967 = distinct !DILexicalBlock(scope: !12884, file: !2376, line: 354, column: 20)
!12968 = !DILocation(line: 362, column: 44, scope: !12965)
!12969 = !DILocation(line: 362, column: 59, scope: !12965)
!12970 = !DILocation(line: 362, column: 68, scope: !12965)
!12971 = !DILocation(line: 362, column: 82, scope: !12965)
!12972 = !DILocation(line: 362, column: 30, scope: !12965)
!12973 = !DILocation(line: 364, column: 28, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12967, file: !2376, line: 364, column: 21)
!12975 = !DILocation(line: 364, column: 21, scope: !12967)
!12976 = !DILocation(line: 368, column: 24, scope: !12877)
!12977 = !DILocation(line: 0, scope: !12878)
!12978 = distinct !{!12978, !12906, !12979}
!12979 = !DILocation(line: 370, column: 5, scope: !12865)
!12980 = !DILocation(line: 372, column: 5, scope: !12865)
!12981 = !DILocation(line: 379, column: 1, scope: !12865)
!12982 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2376, file: !2376, line: 398, type: !12983, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12985)
!12983 = !DISubroutineType(types: !12984)
!12984 = !{!1320, !12770, !61}
!12985 = !{!12986, !12987, !12988, !12989}
!12986 = !DILocalVariable(name: "D", arg: 1, scope: !12982, file: !2376, line: 398, type: !12770)
!12987 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !12982, file: !2376, line: 398, type: !61)
!12988 = !DILocalVariable(name: "result", scope: !12982, file: !2376, line: 401, type: !1320)
!12989 = !DILocalVariable(name: "block_index", scope: !12982, file: !2376, line: 402, type: !61)
!12990 = !DILocation(line: 0, scope: !12982)
!12991 = !DILocation(line: 402, column: 36, scope: !12982)
!12992 = !DILocation(line: 403, column: 13, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12982, file: !2376, line: 403, column: 9)
!12994 = !DILocation(line: 403, column: 9, scope: !12982)
!12995 = !DILocation(line: 404, column: 9, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12993, file: !2376, line: 403, column: 23)
!12997 = !DILocation(line: 405, column: 5, scope: !12996)
!12998 = !DILocation(line: 407, column: 37, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12982, file: !2376, line: 407, column: 9)
!13000 = !DILocation(line: 407, column: 21, scope: !12999)
!13001 = !DILocation(line: 407, column: 9, scope: !12982)
!13002 = !DILocation(line: 412, column: 5, scope: !12982)
!13003 = !DILocation(line: 414, column: 8, scope: !12982)
!13004 = !DILocation(line: 414, column: 19, scope: !12982)
!13005 = !DILocation(line: 414, column: 32, scope: !12982)
!13006 = !DILocation(line: 414, column: 5, scope: !12982)
!13007 = !DILocation(line: 416, column: 17, scope: !12982)
!13008 = !DILocation(line: 416, column: 28, scope: !12982)
!13009 = !DILocation(line: 416, column: 42, scope: !12982)
!13010 = !DILocation(line: 416, column: 14, scope: !12982)
!13011 = !DILocation(line: 418, column: 5, scope: !12982)
!13012 = !DILocation(line: 420, column: 16, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !12982, file: !2376, line: 420, column: 9)
!13014 = !DILocation(line: 424, column: 1, scope: !12982)
!13015 = distinct !DISubprogram(name: "NOR_init", scope: !2376, file: !2376, line: 433, type: !10421, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!13016 = !DILocation(line: 436, column: 9, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13015, file: !2376, line: 436, column: 9)
!13018 = !DILocation(line: 436, column: 9, scope: !13015)
!13019 = !DILocation(line: 437, column: 9, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13017, file: !2376, line: 436, column: 62)
!13021 = !DILocation(line: 438, column: 9, scope: !13020)
!13022 = !DILocation(line: 439, column: 27, scope: !13020)
!13023 = !DILocation(line: 440, column: 5, scope: !13020)
!13024 = !DILocation(line: 441, column: 5, scope: !13015)
!13025 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2376, file: !2376, line: 444, type: !10887, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!13026 = !DILocation(line: 446, column: 12, scope: !13025)
!13027 = !DILocation(line: 446, column: 5, scope: !13025)
!13028 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2376, file: !2376, line: 449, type: !13029, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{!1320, !61, !61, !849}
!13031 = !{!13032, !13033, !13034, !13035, !13036, !13037, !13038}
!13032 = !DILocalVariable(name: "block_idx", arg: 1, scope: !13028, file: !2376, line: 449, type: !61)
!13033 = !DILocalVariable(name: "page_idx", arg: 2, scope: !13028, file: !2376, line: 449, type: !61)
!13034 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !13028, file: !2376, line: 449, type: !849)
!13035 = !DILocalVariable(name: "D", scope: !13028, file: !2376, line: 451, type: !12770)
!13036 = !DILocalVariable(name: "mtdData", scope: !13028, file: !2376, line: 452, type: !2384)
!13037 = !DILocalVariable(name: "result", scope: !13028, file: !2376, line: 453, type: !1320)
!13038 = !DILocalVariable(name: "addr", scope: !13028, file: !2376, line: 455, type: !61)
!13039 = !DILocation(line: 0, scope: !13028)
!13040 = !DILocation(line: 452, column: 60, scope: !13028)
!13041 = !DILocation(line: 455, column: 32, scope: !13028)
!13042 = !DILocation(line: 455, column: 22, scope: !13028)
!13043 = !DILocation(line: 455, column: 95, scope: !13028)
!13044 = !DILocation(line: 455, column: 76, scope: !13028)
!13045 = !DILocation(line: 455, column: 118, scope: !13028)
!13046 = !DILocation(line: 455, column: 74, scope: !13028)
!13047 = !DILocation(line: 455, column: 106, scope: !13028)
!13048 = !DILocation(line: 457, column: 14, scope: !13028)
!13049 = !DILocation(line: 459, column: 16, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13028, file: !2376, line: 459, column: 9)
!13051 = !DILocation(line: 463, column: 1, scope: !13028)
!13052 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2376, file: !2376, line: 466, type: !13029, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13053)
!13053 = !{!13054, !13055, !13056, !13057, !13058, !13059, !13060}
!13054 = !DILocalVariable(name: "block_idx", arg: 1, scope: !13052, file: !2376, line: 466, type: !61)
!13055 = !DILocalVariable(name: "page_idx", arg: 2, scope: !13052, file: !2376, line: 466, type: !61)
!13056 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !13052, file: !2376, line: 466, type: !849)
!13057 = !DILocalVariable(name: "D", scope: !13052, file: !2376, line: 468, type: !12770)
!13058 = !DILocalVariable(name: "mtdData", scope: !13052, file: !2376, line: 469, type: !2384)
!13059 = !DILocalVariable(name: "result", scope: !13052, file: !2376, line: 470, type: !1320)
!13060 = !DILocalVariable(name: "addr", scope: !13052, file: !2376, line: 472, type: !61)
!13061 = !DILocation(line: 0, scope: !13052)
!13062 = !DILocation(line: 469, column: 60, scope: !13052)
!13063 = !DILocation(line: 472, column: 32, scope: !13052)
!13064 = !DILocation(line: 472, column: 22, scope: !13052)
!13065 = !DILocation(line: 472, column: 95, scope: !13052)
!13066 = !DILocation(line: 472, column: 76, scope: !13052)
!13067 = !DILocation(line: 472, column: 118, scope: !13052)
!13068 = !DILocation(line: 472, column: 74, scope: !13052)
!13069 = !DILocation(line: 472, column: 106, scope: !13052)
!13070 = !DILocation(line: 474, column: 14, scope: !13052)
!13071 = !DILocation(line: 475, column: 16, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13052, file: !2376, line: 475, column: 9)
!13073 = !DILocation(line: 479, column: 1, scope: !13052)
!13074 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2376, file: !2376, line: 481, type: !13075, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13077)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!1320, !61}
!13077 = !{!13078, !13079}
!13078 = !DILocalVariable(name: "block_idx", arg: 1, scope: !13074, file: !2376, line: 481, type: !61)
!13079 = !DILocalVariable(name: "result", scope: !13074, file: !2376, line: 483, type: !1320)
!13080 = !DILocation(line: 0, scope: !13074)
!13081 = !DILocation(line: 484, column: 14, scope: !13074)
!13082 = !DILocation(line: 485, column: 16, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13074, file: !2376, line: 485, column: 9)
!13084 = !DILocation(line: 489, column: 1, scope: !13074)
!13085 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2376, file: !2376, line: 492, type: !4260, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13086)
!13086 = !{!13087, !13088, !13089}
!13087 = !DILocalVariable(name: "block_idx", arg: 1, scope: !13085, file: !2376, line: 492, type: !61)
!13088 = !DILocalVariable(name: "D", scope: !13085, file: !2376, line: 494, type: !12770)
!13089 = !DILocalVariable(name: "mtdData", scope: !13085, file: !2376, line: 495, type: !2384)
!13090 = !DILocation(line: 0, scope: !13085)
!13091 = !DILocation(line: 495, column: 60, scope: !13085)
!13092 = !DILocation(line: 496, column: 12, scope: !13085)
!13093 = !DILocation(line: 496, column: 5, scope: !13085)
!13094 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2376, file: !2376, line: 499, type: !4260, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13095)
!13095 = !{!13096, !13097, !13098}
!13096 = !DILocalVariable(name: "block_addr", arg: 1, scope: !13094, file: !2376, line: 499, type: !61)
!13097 = !DILocalVariable(name: "D", scope: !13094, file: !2376, line: 501, type: !12770)
!13098 = !DILocalVariable(name: "mtdData", scope: !13094, file: !2376, line: 502, type: !2384)
!13099 = !DILocation(line: 0, scope: !13094)
!13100 = !DILocation(line: 502, column: 60, scope: !13094)
!13101 = !DILocation(line: 504, column: 12, scope: !13094)
!13102 = !DILocation(line: 504, column: 5, scope: !13094)
!13103 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2376, file: !2376, line: 510, type: !13104, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13106)
!13104 = !DISubroutineType(types: !13105)
!13105 = !{!1320, !61, !1541, !1541}
!13106 = !{!13107, !13108, !13109, !13110, !13111}
!13107 = !DILocalVariable(name: "block_addr", arg: 1, scope: !13103, file: !2376, line: 510, type: !61)
!13108 = !DILocalVariable(name: "block_index", arg: 2, scope: !13103, file: !2376, line: 510, type: !1541)
!13109 = !DILocalVariable(name: "offset", arg: 3, scope: !13103, file: !2376, line: 510, type: !1541)
!13110 = !DILocalVariable(name: "D", scope: !13103, file: !2376, line: 512, type: !12770)
!13111 = !DILocalVariable(name: "mtdData", scope: !13103, file: !2376, line: 513, type: !2384)
!13112 = !DILocation(line: 0, scope: !13103)
!13113 = !DILocation(line: 513, column: 60, scope: !13103)
!13114 = !DILocation(line: 519, column: 20, scope: !13103)
!13115 = !DILocation(line: 519, column: 18, scope: !13103)
!13116 = !DILocation(line: 520, column: 22, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13103, file: !2376, line: 520, column: 9)
!13118 = !DILocation(line: 520, column: 9, scope: !13103)
!13119 = !DILocation(line: 524, column: 28, scope: !13103)
!13120 = !DILocation(line: 524, column: 26, scope: !13103)
!13121 = !DILocation(line: 524, column: 13, scope: !13103)
!13122 = !DILocation(line: 526, column: 5, scope: !13103)
!13123 = !DILocation(line: 527, column: 1, scope: !13103)
!13124 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2376, file: !2376, line: 532, type: !13125, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13127)
!13125 = !DISubroutineType(types: !13126)
!13126 = !{!1320, !61, !61, !1541}
!13127 = !{!13128, !13129, !13130, !13131, !13132}
!13128 = !DILocalVariable(name: "block_index", arg: 1, scope: !13124, file: !2376, line: 532, type: !61)
!13129 = !DILocalVariable(name: "offset", arg: 2, scope: !13124, file: !2376, line: 532, type: !61)
!13130 = !DILocalVariable(name: "addr", arg: 3, scope: !13124, file: !2376, line: 532, type: !1541)
!13131 = !DILocalVariable(name: "D", scope: !13124, file: !2376, line: 534, type: !12770)
!13132 = !DILocalVariable(name: "mtdData", scope: !13124, file: !2376, line: 535, type: !2384)
!13133 = !DILocation(line: 0, scope: !13124)
!13134 = !DILocation(line: 535, column: 60, scope: !13124)
!13135 = !DILocation(line: 537, column: 23, scope: !13124)
!13136 = !DILocation(line: 537, column: 13, scope: !13124)
!13137 = !DILocation(line: 537, column: 79, scope: !13124)
!13138 = !DILocation(line: 537, column: 60, scope: !13124)
!13139 = !DILocation(line: 537, column: 58, scope: !13124)
!13140 = !DILocation(line: 537, column: 88, scope: !13124)
!13141 = !DILocation(line: 537, column: 11, scope: !13124)
!13142 = !DILocation(line: 539, column: 5, scope: !13124)
!13143 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2376, file: !2376, line: 545, type: !13144, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13146)
!13144 = !DISubroutineType(types: !13145)
!13145 = !{!2432, !1320}
!13146 = !{!13147}
!13147 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !13143, file: !2376, line: 545, type: !1320)
!13148 = !DILocation(line: 0, scope: !13143)
!13149 = !DILocation(line: 547, column: 9, scope: !13143)
!13150 = !DILocation(line: 558, column: 9, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13152, file: !2376, line: 558, column: 9)
!13152 = distinct !DILexicalBlock(scope: !13153, file: !2376, line: 558, column: 9)
!13153 = distinct !DILexicalBlock(scope: !13154, file: !2376, line: 558, column: 9)
!13154 = distinct !DILexicalBlock(scope: !13155, file: !2376, line: 557, column: 12)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !2376, line: 555, column: 16)
!13156 = distinct !DILexicalBlock(scope: !13157, file: !2376, line: 553, column: 16)
!13157 = distinct !DILexicalBlock(scope: !13158, file: !2376, line: 551, column: 16)
!13158 = distinct !DILexicalBlock(scope: !13159, file: !2376, line: 549, column: 16)
!13159 = distinct !DILexicalBlock(scope: !13143, file: !2376, line: 547, column: 9)
!13160 = !DILocation(line: 560, column: 1, scope: !13143)
!13161 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2376, file: !2376, line: 561, type: !13162, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13165)
!13162 = !DISubroutineType(types: !13163)
!13163 = !{!13164, !61}
!13164 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1718, line: 127, baseType: !2378)
!13165 = !{!13166, !13167, !13168}
!13166 = !DILocalVariable(name: "address", arg: 1, scope: !13161, file: !2376, line: 561, type: !61)
!13167 = !DILocalVariable(name: "block_size", scope: !13161, file: !2376, line: 563, type: !61)
!13168 = !DILocalVariable(name: "block_index", scope: !13161, file: !2376, line: 564, type: !61)
!13169 = !DILocation(line: 0, scope: !13161)
!13170 = !DILocation(line: 566, column: 19, scope: !13161)
!13171 = !DILocation(line: 567, column: 21, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13161, file: !2376, line: 567, column: 9)
!13173 = !DILocation(line: 567, column: 9, scope: !13161)
!13174 = !DILocation(line: 568, column: 9, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !2376, line: 568, column: 9)
!13176 = distinct !DILexicalBlock(scope: !13177, file: !2376, line: 568, column: 9)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !2376, line: 568, column: 9)
!13178 = distinct !DILexicalBlock(scope: !13172, file: !2376, line: 567, column: 45)
!13179 = !DILocation(line: 570, column: 18, scope: !13161)
!13180 = !DILocation(line: 571, column: 9, scope: !13161)
!13181 = !DILocation(line: 574, column: 9, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13183, file: !2376, line: 573, column: 38)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !2376, line: 573, column: 16)
!13184 = distinct !DILexicalBlock(scope: !13161, file: !2376, line: 571, column: 9)
!13185 = !DILocation(line: 576, column: 9, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !2376, line: 575, column: 39)
!13187 = distinct !DILexicalBlock(scope: !13183, file: !2376, line: 575, column: 16)
!13188 = !DILocation(line: 578, column: 9, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !2376, line: 578, column: 9)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !2376, line: 578, column: 9)
!13191 = distinct !DILexicalBlock(scope: !13192, file: !2376, line: 578, column: 9)
!13192 = distinct !DILexicalBlock(scope: !13187, file: !2376, line: 577, column: 12)
!13193 = !DILocation(line: 0, scope: !13184)
!13194 = !DILocation(line: 580, column: 1, scope: !13161)
!13195 = distinct !DISubprogram(name: "hal_flash_init", scope: !2376, file: !2376, line: 583, type: !10887, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!13196 = !DILocation(line: 585, column: 5, scope: !13195)
!13197 = !DILocation(line: 586, column: 5, scope: !13195)
!13198 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2376, file: !2376, line: 589, type: !10887, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !345)
!13199 = !DILocation(line: 591, column: 5, scope: !13198)
!13200 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2376, file: !2376, line: 595, type: !13201, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13203)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{!2432, !61, !13164}
!13203 = !{!13204, !13205, !13206, !13207, !13208}
!13204 = !DILocalVariable(name: "start_address", arg: 1, scope: !13200, file: !2376, line: 595, type: !61)
!13205 = !DILocalVariable(name: "block", arg: 2, scope: !13200, file: !2376, line: 595, type: !13164)
!13206 = !DILocalVariable(name: "result", scope: !13200, file: !2376, line: 597, type: !1320)
!13207 = !DILocalVariable(name: "block_index", scope: !13200, file: !2376, line: 598, type: !61)
!13208 = !DILocalVariable(name: "erase_type", scope: !13200, file: !2376, line: 599, type: !61)
!13209 = !DILocation(line: 0, scope: !13200)
!13210 = !DILocation(line: 601, column: 9, scope: !13200)
!13211 = !DILocation(line: 602, column: 28, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13213, file: !2376, line: 602, column: 13)
!13213 = distinct !DILexicalBlock(scope: !13214, file: !2376, line: 601, column: 38)
!13214 = distinct !DILexicalBlock(scope: !13200, file: !2376, line: 601, column: 9)
!13215 = !DILocation(line: 602, column: 37, scope: !13212)
!13216 = !DILocation(line: 602, column: 13, scope: !13213)
!13217 = !DILocation(line: 607, column: 28, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13219, file: !2376, line: 607, column: 13)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !2376, line: 606, column: 46)
!13220 = distinct !DILexicalBlock(scope: !13214, file: !2376, line: 606, column: 16)
!13221 = !DILocation(line: 607, column: 38, scope: !13218)
!13222 = !DILocation(line: 607, column: 13, scope: !13219)
!13223 = !DILocation(line: 612, column: 28, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13225, file: !2376, line: 612, column: 13)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !2376, line: 611, column: 46)
!13226 = distinct !DILexicalBlock(scope: !13220, file: !2376, line: 611, column: 16)
!13227 = !DILocation(line: 612, column: 38, scope: !13224)
!13228 = !DILocation(line: 612, column: 13, scope: !13225)
!13229 = !DILocation(line: 0, scope: !13214)
!13230 = !DILocation(line: 621, column: 19, scope: !13200)
!13231 = !DILocation(line: 622, column: 21, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13200, file: !2376, line: 622, column: 9)
!13233 = !DILocation(line: 622, column: 9, scope: !13200)
!13234 = !DILocation(line: 626, column: 17, scope: !13200)
!13235 = !DILocation(line: 627, column: 14, scope: !13200)
!13236 = !DILocation(line: 628, column: 16, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13200, file: !2376, line: 628, column: 9)
!13238 = !DILocation(line: 628, column: 9, scope: !13200)
!13239 = !DILocation(line: 629, column: 16, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13237, file: !2376, line: 628, column: 38)
!13241 = !DILocation(line: 629, column: 9, scope: !13240)
!13242 = !DILocation(line: 632, column: 1, scope: !13200)
!13243 = distinct !DISubprogram(name: "hal_flash_read", scope: !2376, file: !2376, line: 634, type: !13244, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13246)
!13244 = !DISubroutineType(types: !13245)
!13245 = !{!2432, !61, !849, !61}
!13246 = !{!13247, !13248, !13249, !13250, !13251}
!13247 = !DILocalVariable(name: "start_address", arg: 1, scope: !13243, file: !2376, line: 634, type: !61)
!13248 = !DILocalVariable(name: "buffer", arg: 2, scope: !13243, file: !2376, line: 634, type: !849)
!13249 = !DILocalVariable(name: "length", arg: 3, scope: !13243, file: !2376, line: 634, type: !61)
!13250 = !DILocalVariable(name: "D", scope: !13243, file: !2376, line: 636, type: !12770)
!13251 = !DILocalVariable(name: "result", scope: !13243, file: !2376, line: 637, type: !1320)
!13252 = !DILocation(line: 0, scope: !13243)
!13253 = !DILocation(line: 639, column: 14, scope: !13243)
!13254 = !DILocation(line: 641, column: 16, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13243, file: !2376, line: 641, column: 9)
!13256 = !DILocation(line: 641, column: 9, scope: !13243)
!13257 = !DILocation(line: 642, column: 16, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13255, file: !2376, line: 641, column: 38)
!13259 = !DILocation(line: 642, column: 9, scope: !13258)
!13260 = !DILocation(line: 645, column: 1, scope: !13243)
!13261 = distinct !DISubprogram(name: "hal_flash_write", scope: !2376, file: !2376, line: 647, type: !13262, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !13264)
!13262 = !DISubroutineType(types: !13263)
!13263 = !{!2432, !61, !6125, !61}
!13264 = !{!13265, !13266, !13267, !13268, !13269, !13270}
!13265 = !DILocalVariable(name: "address", arg: 1, scope: !13261, file: !2376, line: 647, type: !61)
!13266 = !DILocalVariable(name: "data", arg: 2, scope: !13261, file: !2376, line: 647, type: !6125)
!13267 = !DILocalVariable(name: "length", arg: 3, scope: !13261, file: !2376, line: 647, type: !61)
!13268 = !DILocalVariable(name: "D", scope: !13261, file: !2376, line: 649, type: !12770)
!13269 = !DILocalVariable(name: "result", scope: !13261, file: !2376, line: 650, type: !1320)
!13270 = !DILocalVariable(name: "addr", scope: !13271, file: !2376, line: 660, type: !61)
!13271 = distinct !DILexicalBlock(scope: !13272, file: !2376, line: 659, column: 40)
!13272 = distinct !DILexicalBlock(scope: !13261, file: !2376, line: 659, column: 8)
!13273 = !DILocation(line: 0, scope: !13261)
!13274 = !DILocation(line: 652, column: 14, scope: !13261)
!13275 = !DILocation(line: 653, column: 16, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13261, file: !2376, line: 653, column: 9)
!13277 = !DILocation(line: 653, column: 9, scope: !13261)
!13278 = !DILocation(line: 654, column: 16, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13276, file: !2376, line: 653, column: 38)
!13280 = !DILocation(line: 654, column: 9, scope: !13279)
!13281 = !DILocation(line: 659, column: 8, scope: !13272)
!13282 = !DILocation(line: 659, column: 8, scope: !13261)
!13283 = !DILocation(line: 661, column: 25, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13271, file: !2376, line: 661, column: 8)
!13285 = !DILocation(line: 0, scope: !13271)
!13286 = !DILocation(line: 661, column: 58, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13284, file: !2376, line: 661, column: 8)
!13288 = !DILocation(line: 661, column: 8, scope: !13284)
!13289 = !DILocation(line: 662, column: 13, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13287, file: !2376, line: 661, column: 147)
!13291 = !DILocation(line: 661, column: 128, scope: !13287)
!13292 = distinct !{!13292, !13288, !13293}
!13293 = !DILocation(line: 663, column: 8, scope: !13284)
!13294 = !DILocation(line: 668, column: 1, scope: !13261)
!13295 = distinct !DISubprogram(name: "BlockAddress", scope: !2437, file: !2437, line: 111, type: !13296, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !13298)
!13296 = !DISubroutineType(types: !13297)
!13297 = !{!88, !88, !61}
!13298 = !{!13299, !13300, !13301, !13302, !13303, !13304}
!13299 = !DILocalVariable(name: "DriverData", arg: 1, scope: !13295, file: !2437, line: 111, type: !88)
!13300 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !13295, file: !2437, line: 111, type: !61)
!13301 = !DILocalVariable(name: "D", scope: !13295, file: !2437, line: 113, type: !2458)
!13302 = !DILocalVariable(name: "addr", scope: !13295, file: !2437, line: 114, type: !61)
!13303 = !DILocalVariable(name: "region", scope: !13295, file: !2437, line: 115, type: !61)
!13304 = !DILocalVariable(name: "BlockUpperBound", scope: !13295, file: !2437, line: 115, type: !61)
!13305 = !DILocation(line: 0, scope: !13295)
!13306 = !DILocation(line: 117, column: 26, scope: !13295)
!13307 = !DILocation(line: 117, column: 40, scope: !13295)
!13308 = !DILocation(line: 118, column: 28, scope: !13295)
!13309 = !DILocation(line: 118, column: 5, scope: !13295)
!13310 = !DILocation(line: 119, column: 39, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13295, file: !2437, line: 118, column: 43)
!13312 = !DILocation(line: 119, column: 76, scope: !13311)
!13313 = !DILocation(line: 119, column: 52, scope: !13311)
!13314 = !DILocation(line: 119, column: 14, scope: !13311)
!13315 = !DILocation(line: 120, column: 15, scope: !13311)
!13316 = !DILocation(line: 121, column: 50, scope: !13311)
!13317 = !DILocation(line: 121, column: 25, scope: !13311)
!13318 = distinct !{!13318, !13309, !13319}
!13319 = !DILocation(line: 122, column: 5, scope: !13295)
!13320 = !DILocation(line: 123, column: 68, scope: !13295)
!13321 = !DILocation(line: 123, column: 44, scope: !13295)
!13322 = !DILocation(line: 123, column: 25, scope: !13295)
!13323 = !DILocation(line: 123, column: 107, scope: !13295)
!13324 = !DILocation(line: 123, column: 83, scope: !13295)
!13325 = !DILocation(line: 123, column: 10, scope: !13295)
!13326 = !DILocation(line: 125, column: 16, scope: !13295)
!13327 = !DILocation(line: 125, column: 25, scope: !13295)
!13328 = !DILocation(line: 125, column: 5, scope: !13295)
!13329 = distinct !DISubprogram(name: "MapWindow", scope: !2437, file: !2437, line: 180, type: !2070, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !13330)
!13330 = !{!13331, !13332, !13333, !13334}
!13331 = !DILocalVariable(name: "DriveData", arg: 1, scope: !13329, file: !2437, line: 180, type: !88)
!13332 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !13329, file: !2437, line: 180, type: !61)
!13333 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !13329, file: !2437, line: 180, type: !61)
!13334 = !DILocalVariable(name: "D", scope: !13329, file: !2437, line: 182, type: !2458)
!13335 = !DILocation(line: 0, scope: !13329)
!13336 = !DILocation(line: 185, column: 5, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !2437, line: 185, column: 5)
!13338 = distinct !DILexicalBlock(scope: !13329, file: !2437, line: 185, column: 5)
!13339 = !DILocation(line: 185, column: 5, scope: !13338)
!13340 = !DILocation(line: 185, column: 5, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13337, file: !2437, line: 185, column: 5)
!13342 = !DILocation(line: 186, column: 27, scope: !13329)
!13343 = !DILocation(line: 186, column: 19, scope: !13329)
!13344 = !DILocation(line: 186, column: 8, scope: !13329)
!13345 = !DILocation(line: 186, column: 17, scope: !13329)
!13346 = !DILocation(line: 188, column: 5, scope: !13329)
!13347 = !DILocation(line: 0, scope: !2451)
!13348 = !DILocation(line: 142, column: 12, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !2451, file: !2437, line: 142, column: 9)
!13350 = !DILocation(line: 142, column: 34, scope: !13349)
!13351 = !DILocation(line: 142, column: 64, scope: !13349)
!13352 = !DILocation(line: 142, column: 75, scope: !13349)
!13353 = !DILocation(line: 142, column: 9, scope: !2451)
!13354 = !DILocation(line: 143, column: 79, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !2437, line: 143, column: 13)
!13356 = distinct !DILexicalBlock(scope: !13349, file: !2437, line: 142, column: 99)
!13357 = !DILocation(line: 143, column: 13, scope: !13356)
!13358 = !DILocation(line: 144, column: 72, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13360, file: !2437, line: 144, column: 17)
!13360 = distinct !DILexicalBlock(scope: !13355, file: !2437, line: 143, column: 94)
!13361 = !DILocation(line: 144, column: 83, scope: !13359)
!13362 = !DILocation(line: 144, column: 17, scope: !13360)
!13363 = !DILocation(line: 145, column: 87, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13365, file: !2437, line: 145, column: 21)
!13365 = distinct !DILexicalBlock(scope: !13359, file: !2437, line: 144, column: 107)
!13366 = !DILocation(line: 145, column: 21, scope: !13365)
!13367 = !DILocation(line: 146, column: 33, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13364, file: !2437, line: 145, column: 102)
!13369 = !DILocation(line: 147, column: 25, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13368, file: !2437, line: 147, column: 25)
!13371 = !DILocation(line: 147, column: 62, scope: !13370)
!13372 = !DILocation(line: 147, column: 34, scope: !13370)
!13373 = !DILocation(line: 147, column: 25, scope: !13368)
!13374 = !DILocation(line: 148, column: 91, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13370, file: !2437, line: 147, column: 106)
!13376 = !DILocation(line: 149, column: 111, scope: !13375)
!13377 = !DILocation(line: 149, column: 101, scope: !13375)
!13378 = !DILocation(line: 149, column: 87, scope: !13375)
!13379 = !DILocation(line: 149, column: 99, scope: !13375)
!13380 = !DILocation(line: 150, column: 37, scope: !13375)
!13381 = !DILocation(line: 150, column: 34, scope: !13375)
!13382 = !DILocation(line: 151, column: 21, scope: !13375)
!13383 = !DILocation(line: 152, column: 91, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13370, file: !2437, line: 151, column: 28)
!13385 = !DILocation(line: 153, column: 111, scope: !13384)
!13386 = !DILocation(line: 153, column: 101, scope: !13384)
!13387 = !DILocation(line: 153, column: 87, scope: !13384)
!13388 = !DILocation(line: 153, column: 99, scope: !13384)
!13389 = !DILocation(line: 154, column: 34, scope: !13384)
!13390 = !DILocation(line: 157, column: 32, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13364, file: !2437, line: 156, column: 24)
!13392 = !DILocation(line: 158, column: 83, scope: !13391)
!13393 = !DILocation(line: 159, column: 60, scope: !13391)
!13394 = !DILocation(line: 159, column: 33, scope: !13391)
!13395 = !DILocation(line: 159, column: 30, scope: !13391)
!13396 = !DILocation(line: 162, column: 29, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13359, file: !2437, line: 161, column: 20)
!13398 = !DILocation(line: 163, column: 83, scope: !13397)
!13399 = !DILocation(line: 164, column: 103, scope: !13397)
!13400 = !DILocation(line: 164, column: 93, scope: !13397)
!13401 = !DILocation(line: 164, column: 79, scope: !13397)
!13402 = !DILocation(line: 164, column: 91, scope: !13397)
!13403 = !DILocation(line: 165, column: 56, scope: !13397)
!13404 = !DILocation(line: 165, column: 29, scope: !13397)
!13405 = !DILocation(line: 165, column: 26, scope: !13397)
!13406 = !DILocation(line: 168, column: 24, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13355, file: !2437, line: 167, column: 16)
!13408 = !DILocation(line: 169, column: 75, scope: !13407)
!13409 = !DILocation(line: 170, column: 50, scope: !13407)
!13410 = !DILocation(line: 170, column: 22, scope: !13407)
!13411 = !DILocation(line: 173, column: 21, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13349, file: !2437, line: 172, column: 12)
!13413 = !DILocation(line: 174, column: 75, scope: !13412)
!13414 = !DILocation(line: 175, column: 95, scope: !13412)
!13415 = !DILocation(line: 175, column: 85, scope: !13412)
!13416 = !DILocation(line: 175, column: 71, scope: !13412)
!13417 = !DILocation(line: 175, column: 83, scope: !13412)
!13418 = !DILocation(line: 176, column: 46, scope: !13412)
!13419 = !DILocation(line: 176, column: 18, scope: !13412)
!13420 = !DILocation(line: 0, scope: !13349)
!13421 = !DILocation(line: 178, column: 5, scope: !2451)
!13422 = distinct !DISubprogram(name: "BlockSize", scope: !2437, file: !2437, line: 191, type: !2452, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !13423)
!13423 = !{!13424, !13425, !13426, !13427, !13428}
!13424 = !DILocalVariable(name: "DriveData", arg: 1, scope: !13422, file: !2437, line: 191, type: !88)
!13425 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !13422, file: !2437, line: 191, type: !61)
!13426 = !DILocalVariable(name: "D", scope: !13422, file: !2437, line: 193, type: !2458)
!13427 = !DILocalVariable(name: "region", scope: !13422, file: !2437, line: 194, type: !61)
!13428 = !DILocalVariable(name: "BlockUpperBound", scope: !13422, file: !2437, line: 194, type: !61)
!13429 = !DILocation(line: 0, scope: !13422)
!13430 = !DILocation(line: 196, column: 26, scope: !13422)
!13431 = !DILocation(line: 196, column: 45, scope: !13422)
!13432 = !DILocation(line: 197, column: 28, scope: !13422)
!13433 = !DILocation(line: 197, column: 5, scope: !13422)
!13434 = !DILocation(line: 198, column: 15, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13422, file: !2437, line: 197, column: 43)
!13436 = !DILocation(line: 199, column: 50, scope: !13435)
!13437 = !DILocation(line: 199, column: 25, scope: !13435)
!13438 = distinct !{!13438, !13433, !13439}
!13439 = !DILocation(line: 200, column: 5, scope: !13422)
!13440 = !DILocation(line: 202, column: 35, scope: !13422)
!13441 = !DILocation(line: 202, column: 5, scope: !13422)
!13442 = distinct !DISubprogram(name: "BlockIndex", scope: !2437, file: !2437, line: 205, type: !2452, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !13443)
!13443 = !{!13444, !13445, !13446, !13447, !13448, !13449}
!13444 = !DILocalVariable(name: "DriveData", arg: 1, scope: !13442, file: !2437, line: 205, type: !88)
!13445 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !13442, file: !2437, line: 205, type: !61)
!13446 = !DILocalVariable(name: "D", scope: !13442, file: !2437, line: 207, type: !2458)
!13447 = !DILocalVariable(name: "region", scope: !13442, file: !2437, line: 208, type: !61)
!13448 = !DILocalVariable(name: "BlockUpperAddr", scope: !13442, file: !2437, line: 208, type: !61)
!13449 = !DILocalVariable(name: "blk_idx", scope: !13442, file: !2437, line: 209, type: !61)
!13450 = !DILocation(line: 0, scope: !13442)
!13451 = !DILocation(line: 211, column: 25, scope: !13442)
!13452 = !DILocation(line: 211, column: 44, scope: !13442)
!13453 = !DILocation(line: 211, column: 81, scope: !13442)
!13454 = !DILocation(line: 211, column: 57, scope: !13442)
!13455 = !DILocation(line: 213, column: 28, scope: !13442)
!13456 = !DILocation(line: 213, column: 40, scope: !13442)
!13457 = !DILocation(line: 213, column: 66, scope: !13442)
!13458 = !DILocation(line: 213, column: 5, scope: !13442)
!13459 = !DILocation(line: 214, column: 17, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13442, file: !2437, line: 213, column: 78)
!13461 = !DILocation(line: 215, column: 18, scope: !13460)
!13462 = !DILocation(line: 216, column: 15, scope: !13460)
!13463 = !DILocation(line: 217, column: 48, scope: !13460)
!13464 = !DILocation(line: 217, column: 85, scope: !13460)
!13465 = !DILocation(line: 217, column: 61, scope: !13460)
!13466 = distinct !{!13466, !13458, !13467}
!13467 = !DILocation(line: 218, column: 5, scope: !13442)
!13468 = !DILocation(line: 221, column: 53, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13470, file: !2437, line: 220, column: 37)
!13470 = distinct !DILexicalBlock(scope: !13442, file: !2437, line: 220, column: 9)
!13471 = !DILocation(line: 221, column: 29, scope: !13469)
!13472 = !DILocation(line: 221, column: 17, scope: !13469)
!13473 = !DILocation(line: 222, column: 5, scope: !13469)
!13474 = !DILocation(line: 0, scope: !13470)
!13475 = !DILocation(line: 225, column: 5, scope: !13442)
!13476 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2437, file: !2437, line: 232, type: !4512, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !345)
!13477 = !DILocation(line: 238, column: 5, scope: !13476)
!13478 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2437, file: !2437, line: 243, type: !4512, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !345)
!13479 = !DILocation(line: 245, column: 5, scope: !13478)
!13480 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2437, file: !2437, line: 249, type: !4512, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !345)
!13481 = !DILocation(line: 254, column: 5, scope: !13480)
!13482 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2437, file: !2437, line: 259, type: !4512, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !345)
!13483 = !DILocation(line: 261, column: 5, scope: !13482)
!13484 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2437, file: !2437, line: 271, type: !7382, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !13485)
!13485 = !{!13486, !13487}
!13486 = !DILocalVariable(name: "delay", arg: 1, scope: !13484, file: !2437, line: 271, type: !61)
!13487 = !DILocalVariable(name: "ret", scope: !13484, file: !2437, line: 276, type: !3668)
!13488 = !DILocation(line: 0, scope: !13484)
!13489 = !DILocation(line: 277, column: 11, scope: !13484)
!13490 = !DILocation(line: 278, column: 13, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13484, file: !2437, line: 278, column: 9)
!13492 = !DILocation(line: 278, column: 9, scope: !13484)
!13493 = !DILocation(line: 279, column: 9, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !2437, line: 279, column: 9)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !2437, line: 279, column: 9)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !2437, line: 279, column: 9)
!13497 = distinct !DILexicalBlock(scope: !13491, file: !2437, line: 278, column: 35)
!13498 = !DILocation(line: 282, column: 1, scope: !13484)
!13499 = !DILocation(line: 96, column: 5, scope: !2509)
!13500 = !DILocation(line: 96, column: 23, scope: !2509)
!13501 = !DILocation(line: 98, column: 9, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !2509, file: !2510, line: 98, column: 9)
!13503 = !DILocation(line: 98, column: 9, scope: !2509)
!13504 = !DILocation(line: 101, column: 10, scope: !2509)
!13505 = !DILocation(line: 103, column: 12, scope: !2509)
!13506 = !DILocation(line: 103, column: 31, scope: !2509)
!13507 = !DILocation(line: 104, column: 5, scope: !2509)
!13508 = !DILocation(line: 106, column: 5, scope: !2509)
!13509 = !DILocation(line: 108, column: 12, scope: !2509)
!13510 = !DILocation(line: 0, scope: !2509)
!13511 = !DILocation(line: 109, column: 12, scope: !2509)
!13512 = !DILocation(line: 110, column: 15, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !2509, file: !2510, line: 110, column: 9)
!13514 = !DILocation(line: 110, column: 24, scope: !13513)
!13515 = !DILocation(line: 111, column: 9, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13513, file: !2510, line: 110, column: 43)
!13517 = !DILocation(line: 113, column: 24, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !2509, file: !2510, line: 113, column: 9)
!13519 = !DILocation(line: 113, column: 15, scope: !13518)
!13520 = !DILocation(line: 114, column: 9, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13518, file: !2510, line: 113, column: 43)
!13522 = !DILocation(line: 115, column: 5, scope: !13521)
!13523 = !DILocation(line: 118, column: 9, scope: !2509)
!13524 = !DILocation(line: 119, column: 9, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !2510, line: 118, column: 23)
!13526 = distinct !DILexicalBlock(scope: !2509, file: !2510, line: 118, column: 9)
!13527 = !DILocation(line: 122, column: 9, scope: !13525)
!13528 = !DILocation(line: 128, column: 9, scope: !13525)
!13529 = !DILocation(line: 131, column: 9, scope: !13525)
!13530 = !DILocation(line: 134, column: 9, scope: !13525)
!13531 = !DILocation(line: 137, column: 9, scope: !13525)
!13532 = !DILocation(line: 140, column: 9, scope: !13525)
!13533 = !DILocation(line: 142, column: 9, scope: !13525)
!13534 = !DILocation(line: 143, column: 9, scope: !13525)
!13535 = !DILocation(line: 144, column: 9, scope: !13525)
!13536 = !DILocation(line: 147, column: 9, scope: !13525)
!13537 = !DILocation(line: 149, column: 9, scope: !13525)
!13538 = !DILocation(line: 150, column: 5, scope: !13525)
!13539 = !DILocation(line: 153, column: 9, scope: !2509)
!13540 = !DILocation(line: 155, column: 9, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !2510, line: 153, column: 23)
!13542 = distinct !DILexicalBlock(scope: !2509, file: !2510, line: 153, column: 9)
!13543 = !DILocation(line: 160, column: 9, scope: !13541)
!13544 = !DILocation(line: 162, column: 9, scope: !13541)
!13545 = !DILocation(line: 164, column: 9, scope: !13541)
!13546 = !DILocation(line: 166, column: 9, scope: !13541)
!13547 = !DILocation(line: 168, column: 9, scope: !13541)
!13548 = !DILocation(line: 170, column: 9, scope: !13541)
!13549 = !DILocation(line: 172, column: 9, scope: !13541)
!13550 = !DILocation(line: 174, column: 9, scope: !13541)
!13551 = !DILocation(line: 176, column: 9, scope: !13541)
!13552 = !DILocation(line: 179, column: 9, scope: !13541)
!13553 = !DILocation(line: 181, column: 9, scope: !13541)
!13554 = !DILocation(line: 183, column: 9, scope: !13541)
!13555 = !DILocation(line: 185, column: 9, scope: !13541)
!13556 = !DILocation(line: 186, column: 9, scope: !13541)
!13557 = !DILocation(line: 188, column: 9, scope: !13541)
!13558 = !DILocation(line: 189, column: 5, scope: !13541)
!13559 = !DILocation(line: 192, column: 5, scope: !2509)
!13560 = !DILocation(line: 195, column: 5, scope: !2509)
!13561 = !DILocation(line: 197, column: 5, scope: !2509)
!13562 = !DILocation(line: 199, column: 5, scope: !2509)
!13563 = !DILocation(line: 200, column: 1, scope: !2509)
!13564 = distinct !DISubprogram(name: "pmu_init_power_mode", scope: !2510, file: !2510, line: 650, type: !13565, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !13569)
!13565 = !DISubroutineType(types: !13566)
!13566 = !{null, !13567}
!13567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13568, size: 32)
!13568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !840)
!13569 = !{!13570, !13571}
!13570 = !DILocalVariable(name: "power_mode_setting", arg: 1, scope: !13564, file: !2510, line: 650, type: !13567)
!13571 = !DILocalVariable(name: "i", scope: !13564, file: !2510, line: 652, type: !18)
!13572 = !DILocation(line: 0, scope: !13564)
!13573 = !DILocation(line: 655, column: 5, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13564, file: !2510, line: 655, column: 5)
!13575 = !DILocation(line: 656, column: 70, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !2510, line: 655, column: 29)
!13577 = distinct !DILexicalBlock(scope: !13574, file: !2510, line: 655, column: 5)
!13578 = !DILocation(line: 656, column: 91, scope: !13576)
!13579 = !DILocation(line: 656, column: 76, scope: !13576)
!13580 = !DILocation(line: 656, column: 9, scope: !13576)
!13581 = !DILocation(line: 657, column: 91, scope: !13576)
!13582 = !DILocation(line: 657, column: 76, scope: !13576)
!13583 = !DILocation(line: 657, column: 9, scope: !13576)
!13584 = !DILocation(line: 658, column: 91, scope: !13576)
!13585 = !DILocation(line: 658, column: 76, scope: !13576)
!13586 = !DILocation(line: 658, column: 9, scope: !13576)
!13587 = !DILocation(line: 659, column: 91, scope: !13576)
!13588 = !DILocation(line: 659, column: 76, scope: !13576)
!13589 = !DILocation(line: 659, column: 9, scope: !13576)
!13590 = !DILocation(line: 660, column: 91, scope: !13576)
!13591 = !DILocation(line: 660, column: 76, scope: !13576)
!13592 = !DILocation(line: 660, column: 9, scope: !13576)
!13593 = !DILocation(line: 661, column: 91, scope: !13576)
!13594 = !DILocation(line: 661, column: 76, scope: !13576)
!13595 = !DILocation(line: 661, column: 9, scope: !13576)
!13596 = !DILocation(line: 662, column: 91, scope: !13576)
!13597 = !DILocation(line: 662, column: 76, scope: !13576)
!13598 = !DILocation(line: 662, column: 9, scope: !13576)
!13599 = !DILocation(line: 663, column: 91, scope: !13576)
!13600 = !DILocation(line: 663, column: 76, scope: !13576)
!13601 = !DILocation(line: 663, column: 9, scope: !13576)
!13602 = !DILocation(line: 664, column: 91, scope: !13576)
!13603 = !DILocation(line: 664, column: 76, scope: !13576)
!13604 = !DILocation(line: 664, column: 9, scope: !13576)
!13605 = !DILocation(line: 665, column: 91, scope: !13576)
!13606 = !DILocation(line: 665, column: 76, scope: !13576)
!13607 = !DILocation(line: 665, column: 9, scope: !13576)
!13608 = !DILocation(line: 655, column: 19, scope: !13577)
!13609 = distinct !{!13609, !13573, !13610}
!13610 = !DILocation(line: 666, column: 5, scope: !13574)
!13611 = !DILocation(line: 667, column: 5, scope: !13564)
!13612 = !DILocation(line: 668, column: 5, scope: !13564)
!13613 = !DILocation(line: 671, column: 5, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13564, file: !2510, line: 671, column: 5)
!13615 = !DILocation(line: 672, column: 74, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13617, file: !2510, line: 671, column: 29)
!13617 = distinct !DILexicalBlock(scope: !13614, file: !2510, line: 671, column: 5)
!13618 = !DILocation(line: 672, column: 100, scope: !13616)
!13619 = !DILocation(line: 672, column: 80, scope: !13616)
!13620 = !DILocation(line: 672, column: 155, scope: !13616)
!13621 = !DILocation(line: 672, column: 131, scope: !13616)
!13622 = !DILocation(line: 672, column: 126, scope: !13616)
!13623 = !DILocation(line: 672, column: 9, scope: !13616)
!13624 = !DILocation(line: 673, column: 100, scope: !13616)
!13625 = !DILocation(line: 673, column: 80, scope: !13616)
!13626 = !DILocation(line: 673, column: 131, scope: !13616)
!13627 = !DILocation(line: 673, column: 126, scope: !13616)
!13628 = !DILocation(line: 673, column: 9, scope: !13616)
!13629 = !DILocation(line: 674, column: 100, scope: !13616)
!13630 = !DILocation(line: 674, column: 80, scope: !13616)
!13631 = !DILocation(line: 674, column: 131, scope: !13616)
!13632 = !DILocation(line: 674, column: 126, scope: !13616)
!13633 = !DILocation(line: 674, column: 9, scope: !13616)
!13634 = !DILocation(line: 675, column: 100, scope: !13616)
!13635 = !DILocation(line: 675, column: 80, scope: !13616)
!13636 = !DILocation(line: 675, column: 131, scope: !13616)
!13637 = !DILocation(line: 675, column: 126, scope: !13616)
!13638 = !DILocation(line: 675, column: 9, scope: !13616)
!13639 = !DILocation(line: 676, column: 100, scope: !13616)
!13640 = !DILocation(line: 676, column: 80, scope: !13616)
!13641 = !DILocation(line: 676, column: 131, scope: !13616)
!13642 = !DILocation(line: 676, column: 126, scope: !13616)
!13643 = !DILocation(line: 676, column: 9, scope: !13616)
!13644 = !DILocation(line: 677, column: 100, scope: !13616)
!13645 = !DILocation(line: 677, column: 80, scope: !13616)
!13646 = !DILocation(line: 677, column: 131, scope: !13616)
!13647 = !DILocation(line: 677, column: 126, scope: !13616)
!13648 = !DILocation(line: 677, column: 9, scope: !13616)
!13649 = !DILocation(line: 678, column: 100, scope: !13616)
!13650 = !DILocation(line: 678, column: 80, scope: !13616)
!13651 = !DILocation(line: 678, column: 131, scope: !13616)
!13652 = !DILocation(line: 678, column: 126, scope: !13616)
!13653 = !DILocation(line: 678, column: 9, scope: !13616)
!13654 = distinct !{!13654, !13613, !13655}
!13655 = !DILocation(line: 679, column: 5, scope: !13614)
!13656 = !DILocation(line: 680, column: 5, scope: !13564)
!13657 = !DILocation(line: 681, column: 5, scope: !13564)
!13658 = !DILocation(line: 682, column: 5, scope: !13564)
!13659 = !DILocation(line: 683, column: 5, scope: !13564)
!13660 = !DILocation(line: 686, column: 48, scope: !13564)
!13661 = !DILocation(line: 686, column: 35, scope: !13564)
!13662 = !DILocation(line: 686, column: 5, scope: !13564)
!13663 = !DILocation(line: 687, column: 48, scope: !13564)
!13664 = !DILocation(line: 687, column: 35, scope: !13564)
!13665 = !DILocation(line: 687, column: 5, scope: !13564)
!13666 = !DILocation(line: 688, column: 48, scope: !13564)
!13667 = !DILocation(line: 688, column: 35, scope: !13564)
!13668 = !DILocation(line: 688, column: 5, scope: !13564)
!13669 = !DILocation(line: 689, column: 48, scope: !13564)
!13670 = !DILocation(line: 689, column: 35, scope: !13564)
!13671 = !DILocation(line: 689, column: 5, scope: !13564)
!13672 = !DILocation(line: 690, column: 48, scope: !13564)
!13673 = !DILocation(line: 690, column: 35, scope: !13564)
!13674 = !DILocation(line: 690, column: 5, scope: !13564)
!13675 = !DILocation(line: 691, column: 48, scope: !13564)
!13676 = !DILocation(line: 691, column: 35, scope: !13564)
!13677 = !DILocation(line: 691, column: 5, scope: !13564)
!13678 = !DILocation(line: 692, column: 48, scope: !13564)
!13679 = !DILocation(line: 692, column: 35, scope: !13564)
!13680 = !DILocation(line: 692, column: 5, scope: !13564)
!13681 = !DILocation(line: 693, column: 5, scope: !13564)
!13682 = !DILocation(line: 694, column: 5, scope: !13564)
!13683 = !DILocation(line: 695, column: 5, scope: !13564)
!13684 = !DILocation(line: 696, column: 5, scope: !13564)
!13685 = !DILocation(line: 697, column: 5, scope: !13564)
!13686 = !DILocation(line: 699, column: 5, scope: !13564)
!13687 = !DILocation(line: 700, column: 5, scope: !13564)
!13688 = !DILocation(line: 703, column: 5, scope: !13564)
!13689 = !DILocation(line: 705, column: 5, scope: !13564)
!13690 = !DILocation(line: 709, column: 5, scope: !13564)
!13691 = !DILocation(line: 710, column: 5, scope: !13564)
!13692 = !DILocation(line: 717, column: 5, scope: !13564)
!13693 = !DILocation(line: 718, column: 5, scope: !13564)
!13694 = !DILocation(line: 720, column: 5, scope: !13564)
!13695 = !DILocation(line: 721, column: 5, scope: !13564)
!13696 = !DILocation(line: 722, column: 1, scope: !13564)
!13697 = distinct !DISubprogram(name: "pmu_eint_init", scope: !2510, file: !2510, line: 278, type: !343, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !13698)
!13698 = !{!13699}
!13699 = !DILocalVariable(name: "config", scope: !13697, file: !2510, line: 280, type: !13700)
!13700 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !1088, line: 225, baseType: !13701)
!13701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1088, line: 222, size: 64, elements: !13702)
!13702 = !{!13703, !13704}
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !13701, file: !1088, line: 223, baseType: !1160, size: 32)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !13701, file: !1088, line: 224, baseType: !61, size: 32, offset: 32)
!13705 = !DILocation(line: 280, column: 5, scope: !13697)
!13706 = !DILocation(line: 280, column: 23, scope: !13697)
!13707 = !DILocation(line: 281, column: 12, scope: !13697)
!13708 = !DILocation(line: 281, column: 25, scope: !13697)
!13709 = !DILocation(line: 282, column: 12, scope: !13697)
!13710 = !DILocation(line: 282, column: 26, scope: !13697)
!13711 = !DILocation(line: 284, column: 5, scope: !13697)
!13712 = !DILocation(line: 285, column: 5, scope: !13697)
!13713 = !DILocation(line: 287, column: 5, scope: !13697)
!13714 = !DILocation(line: 288, column: 1, scope: !13697)
!13715 = !DILocation(line: 0, scope: !2630)
!13716 = !DILocation(line: 297, column: 5, scope: !2630)
!13717 = !DILocation(line: 298, column: 12, scope: !2630)
!13718 = !DILocation(line: 0, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 300, column: 5)
!13720 = !DILocation(line: 300, column: 5, scope: !13719)
!13721 = !DILocation(line: 0, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 305, column: 5)
!13723 = !DILocation(line: 306, column: 26, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !2510, line: 305, column: 41)
!13725 = distinct !DILexicalBlock(scope: !13722, file: !2510, line: 305, column: 5)
!13726 = !DILocation(line: 305, column: 5, scope: !13722)
!13727 = !DILocation(line: 301, column: 49, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13729, file: !2510, line: 300, column: 41)
!13729 = distinct !DILexicalBlock(scope: !13719, file: !2510, line: 300, column: 5)
!13730 = !DILocation(line: 301, column: 26, scope: !13728)
!13731 = !DILocation(line: 301, column: 17, scope: !13728)
!13732 = !DILocation(line: 301, column: 9, scope: !13728)
!13733 = !DILocation(line: 301, column: 24, scope: !13728)
!13734 = !DILocation(line: 300, column: 37, scope: !13729)
!13735 = !DILocation(line: 300, column: 27, scope: !13729)
!13736 = distinct !{!13736, !13720, !13737}
!13737 = !DILocation(line: 302, column: 5, scope: !13719)
!13738 = !DILocation(line: 0, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 313, column: 5)
!13740 = !DILocation(line: 314, column: 26, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !2510, line: 313, column: 41)
!13742 = distinct !DILexicalBlock(scope: !13739, file: !2510, line: 313, column: 5)
!13743 = !DILocation(line: 313, column: 5, scope: !13739)
!13744 = !DILocation(line: 306, column: 47, scope: !13724)
!13745 = !DILocation(line: 306, column: 37, scope: !13724)
!13746 = !DILocation(line: 306, column: 53, scope: !13724)
!13747 = !DILocation(line: 307, column: 28, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13724, file: !2510, line: 307, column: 13)
!13749 = !DILocation(line: 307, column: 34, scope: !13748)
!13750 = !DILocation(line: 307, column: 64, scope: !13748)
!13751 = !DILocation(line: 307, column: 13, scope: !13724)
!13752 = !DILocation(line: 308, column: 39, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13748, file: !2510, line: 307, column: 90)
!13754 = !DILocation(line: 308, column: 52, scope: !13753)
!13755 = !DILocation(line: 308, column: 93, scope: !13753)
!13756 = !DILocation(line: 308, column: 13, scope: !13753)
!13757 = !DILocation(line: 305, column: 37, scope: !13725)
!13758 = !DILocation(line: 309, column: 9, scope: !13753)
!13759 = !DILocation(line: 305, column: 27, scope: !13725)
!13760 = distinct !{!13760, !13726, !13761}
!13761 = !DILocation(line: 310, column: 5, scope: !13722)
!13762 = !DILocation(line: 0, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 321, column: 5)
!13764 = !DILocation(line: 322, column: 26, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13766, file: !2510, line: 321, column: 41)
!13766 = distinct !DILexicalBlock(scope: !13763, file: !2510, line: 321, column: 5)
!13767 = !DILocation(line: 321, column: 5, scope: !13763)
!13768 = !DILocation(line: 314, column: 47, scope: !13741)
!13769 = !DILocation(line: 314, column: 37, scope: !13741)
!13770 = !DILocation(line: 314, column: 53, scope: !13741)
!13771 = !DILocation(line: 315, column: 28, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13741, file: !2510, line: 315, column: 13)
!13773 = !DILocation(line: 315, column: 34, scope: !13772)
!13774 = !DILocation(line: 315, column: 63, scope: !13772)
!13775 = !DILocation(line: 315, column: 68, scope: !13772)
!13776 = !DILocation(line: 315, column: 13, scope: !13741)
!13777 = !DILocation(line: 316, column: 43, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13772, file: !2510, line: 315, column: 94)
!13779 = !DILocation(line: 316, column: 56, scope: !13778)
!13780 = !DILocation(line: 316, column: 101, scope: !13778)
!13781 = !DILocation(line: 316, column: 13, scope: !13778)
!13782 = !DILocation(line: 313, column: 37, scope: !13742)
!13783 = !DILocation(line: 317, column: 9, scope: !13778)
!13784 = !DILocation(line: 313, column: 27, scope: !13742)
!13785 = distinct !{!13785, !13743, !13786}
!13786 = !DILocation(line: 318, column: 5, scope: !13739)
!13787 = !DILocation(line: 0, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 329, column: 5)
!13789 = !DILocation(line: 330, column: 26, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13791, file: !2510, line: 329, column: 41)
!13791 = distinct !DILexicalBlock(scope: !13788, file: !2510, line: 329, column: 5)
!13792 = !DILocation(line: 329, column: 5, scope: !13788)
!13793 = !DILocation(line: 322, column: 47, scope: !13765)
!13794 = !DILocation(line: 322, column: 37, scope: !13765)
!13795 = !DILocation(line: 322, column: 53, scope: !13765)
!13796 = !DILocation(line: 323, column: 28, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13765, file: !2510, line: 323, column: 13)
!13798 = !DILocation(line: 323, column: 34, scope: !13797)
!13799 = !DILocation(line: 323, column: 63, scope: !13797)
!13800 = !DILocation(line: 323, column: 68, scope: !13797)
!13801 = !DILocation(line: 323, column: 13, scope: !13765)
!13802 = !DILocation(line: 324, column: 43, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13797, file: !2510, line: 323, column: 94)
!13804 = !DILocation(line: 324, column: 56, scope: !13803)
!13805 = !DILocation(line: 324, column: 101, scope: !13803)
!13806 = !DILocation(line: 324, column: 13, scope: !13803)
!13807 = !DILocation(line: 321, column: 37, scope: !13766)
!13808 = !DILocation(line: 325, column: 9, scope: !13803)
!13809 = !DILocation(line: 321, column: 27, scope: !13766)
!13810 = distinct !{!13810, !13767, !13811}
!13811 = !DILocation(line: 326, column: 5, scope: !13763)
!13812 = !DILocation(line: 0, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 337, column: 5)
!13814 = !DILocation(line: 338, column: 26, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13816, file: !2510, line: 337, column: 41)
!13816 = distinct !DILexicalBlock(scope: !13813, file: !2510, line: 337, column: 5)
!13817 = !DILocation(line: 337, column: 5, scope: !13813)
!13818 = !DILocation(line: 330, column: 47, scope: !13790)
!13819 = !DILocation(line: 330, column: 37, scope: !13790)
!13820 = !DILocation(line: 330, column: 53, scope: !13790)
!13821 = !DILocation(line: 331, column: 28, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13790, file: !2510, line: 331, column: 13)
!13823 = !DILocation(line: 331, column: 34, scope: !13822)
!13824 = !DILocation(line: 331, column: 63, scope: !13822)
!13825 = !DILocation(line: 331, column: 69, scope: !13822)
!13826 = !DILocation(line: 331, column: 13, scope: !13790)
!13827 = !DILocation(line: 332, column: 44, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13822, file: !2510, line: 331, column: 95)
!13829 = !DILocation(line: 332, column: 57, scope: !13828)
!13830 = !DILocation(line: 332, column: 103, scope: !13828)
!13831 = !DILocation(line: 332, column: 13, scope: !13828)
!13832 = !DILocation(line: 329, column: 37, scope: !13791)
!13833 = !DILocation(line: 333, column: 9, scope: !13828)
!13834 = !DILocation(line: 329, column: 27, scope: !13791)
!13835 = distinct !{!13835, !13792, !13836}
!13836 = !DILocation(line: 334, column: 5, scope: !13788)
!13837 = !DILocation(line: 0, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 345, column: 5)
!13839 = !DILocation(line: 346, column: 26, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !2510, line: 345, column: 41)
!13841 = distinct !DILexicalBlock(scope: !13838, file: !2510, line: 345, column: 5)
!13842 = !DILocation(line: 345, column: 5, scope: !13838)
!13843 = !DILocation(line: 338, column: 47, scope: !13815)
!13844 = !DILocation(line: 338, column: 37, scope: !13815)
!13845 = !DILocation(line: 338, column: 53, scope: !13815)
!13846 = !DILocation(line: 339, column: 28, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13815, file: !2510, line: 339, column: 13)
!13848 = !DILocation(line: 339, column: 34, scope: !13847)
!13849 = !DILocation(line: 339, column: 63, scope: !13847)
!13850 = !DILocation(line: 339, column: 69, scope: !13847)
!13851 = !DILocation(line: 339, column: 13, scope: !13815)
!13852 = !DILocation(line: 340, column: 44, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13847, file: !2510, line: 339, column: 95)
!13854 = !DILocation(line: 340, column: 57, scope: !13853)
!13855 = !DILocation(line: 340, column: 103, scope: !13853)
!13856 = !DILocation(line: 340, column: 13, scope: !13853)
!13857 = !DILocation(line: 337, column: 37, scope: !13816)
!13858 = !DILocation(line: 341, column: 9, scope: !13853)
!13859 = !DILocation(line: 337, column: 27, scope: !13816)
!13860 = distinct !{!13860, !13817, !13861}
!13861 = !DILocation(line: 342, column: 5, scope: !13813)
!13862 = !DILocation(line: 0, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 353, column: 5)
!13864 = !DILocation(line: 354, column: 26, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13866, file: !2510, line: 353, column: 41)
!13866 = distinct !DILexicalBlock(scope: !13863, file: !2510, line: 353, column: 5)
!13867 = !DILocation(line: 353, column: 5, scope: !13863)
!13868 = !DILocation(line: 347, column: 28, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13840, file: !2510, line: 347, column: 13)
!13870 = !DILocation(line: 347, column: 34, scope: !13869)
!13871 = !DILocation(line: 347, column: 63, scope: !13869)
!13872 = !DILocation(line: 347, column: 69, scope: !13869)
!13873 = !DILocation(line: 347, column: 13, scope: !13840)
!13874 = !DILocation(line: 348, column: 44, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13869, file: !2510, line: 347, column: 95)
!13876 = !DILocation(line: 348, column: 103, scope: !13875)
!13877 = !DILocation(line: 348, column: 13, scope: !13875)
!13878 = !DILocation(line: 345, column: 37, scope: !13841)
!13879 = !DILocation(line: 349, column: 9, scope: !13875)
!13880 = !DILocation(line: 345, column: 27, scope: !13841)
!13881 = distinct !{!13881, !13842, !13882}
!13882 = !DILocation(line: 350, column: 5, scope: !13838)
!13883 = !DILocation(line: 0, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 360, column: 5)
!13885 = !DILocation(line: 360, column: 5, scope: !13884)
!13886 = !DILocation(line: 355, column: 28, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13865, file: !2510, line: 355, column: 13)
!13888 = !DILocation(line: 355, column: 34, scope: !13887)
!13889 = !DILocation(line: 355, column: 63, scope: !13887)
!13890 = !DILocation(line: 355, column: 69, scope: !13887)
!13891 = !DILocation(line: 355, column: 13, scope: !13865)
!13892 = !DILocation(line: 356, column: 44, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13887, file: !2510, line: 355, column: 95)
!13894 = !DILocation(line: 356, column: 103, scope: !13893)
!13895 = !DILocation(line: 356, column: 13, scope: !13893)
!13896 = !DILocation(line: 353, column: 37, scope: !13866)
!13897 = !DILocation(line: 357, column: 9, scope: !13893)
!13898 = !DILocation(line: 353, column: 27, scope: !13866)
!13899 = distinct !{!13899, !13867, !13900}
!13900 = !DILocation(line: 358, column: 5, scope: !13863)
!13901 = !DILocation(line: 0, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !2630, file: !2510, line: 363, column: 5)
!13903 = !DILocation(line: 363, column: 5, scope: !13902)
!13904 = !DILocation(line: 361, column: 32, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !2510, line: 360, column: 41)
!13906 = distinct !DILexicalBlock(scope: !13884, file: !2510, line: 360, column: 5)
!13907 = !DILocation(line: 361, column: 9, scope: !13905)
!13908 = !DILocation(line: 360, column: 37, scope: !13906)
!13909 = !DILocation(line: 360, column: 27, scope: !13906)
!13910 = distinct !{!13910, !13885, !13911}
!13911 = !DILocation(line: 362, column: 5, scope: !13884)
!13912 = !DILocation(line: 364, column: 49, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !2510, line: 363, column: 41)
!13914 = distinct !DILexicalBlock(scope: !13902, file: !2510, line: 363, column: 5)
!13915 = !DILocation(line: 364, column: 26, scope: !13913)
!13916 = !DILocation(line: 364, column: 17, scope: !13913)
!13917 = !DILocation(line: 364, column: 9, scope: !13913)
!13918 = !DILocation(line: 364, column: 24, scope: !13913)
!13919 = !DILocation(line: 365, column: 28, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13913, file: !2510, line: 365, column: 13)
!13921 = !DILocation(line: 365, column: 13, scope: !13913)
!13922 = !DILocation(line: 366, column: 36, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13920, file: !2510, line: 365, column: 34)
!13924 = !DILocation(line: 366, column: 13, scope: !13923)
!13925 = !DILocation(line: 363, column: 37, scope: !13914)
!13926 = !DILocation(line: 367, column: 9, scope: !13923)
!13927 = !DILocation(line: 363, column: 27, scope: !13914)
!13928 = distinct !{!13928, !13903, !13929}
!13929 = !DILocation(line: 368, column: 5, scope: !13902)
!13930 = !DILocation(line: 369, column: 5, scope: !2630)
!13931 = !DILocation(line: 370, column: 5, scope: !2630)
!13932 = !DILocation(line: 371, column: 1, scope: !2630)
!13933 = distinct !DISubprogram(name: "pmu_set_register_value_mt6385", scope: !2510, file: !2510, line: 202, type: !3277, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !13934)
!13934 = !{!13935, !13936, !13937, !13938, !13939, !13940, !13941}
!13935 = !DILocalVariable(name: "address", arg: 1, scope: !13933, file: !2510, line: 202, type: !1020)
!13936 = !DILocalVariable(name: "mask", arg: 2, scope: !13933, file: !2510, line: 202, type: !1020)
!13937 = !DILocalVariable(name: "shift", arg: 3, scope: !13933, file: !2510, line: 202, type: !1020)
!13938 = !DILocalVariable(name: "value", arg: 4, scope: !13933, file: !2510, line: 202, type: !1020)
!13939 = !DILocalVariable(name: "send_buffer", scope: !13933, file: !2510, line: 204, type: !2911)
!13940 = !DILocalVariable(name: "receive_buffer", scope: !13933, file: !2510, line: 204, type: !2913)
!13941 = !DILocalVariable(name: "mask_pri", scope: !13933, file: !2510, line: 205, type: !18)
!13942 = !DILocation(line: 0, scope: !13933)
!13943 = !DILocation(line: 204, column: 5, scope: !13933)
!13944 = !DILocation(line: 204, column: 19, scope: !13933)
!13945 = !DILocation(line: 204, column: 35, scope: !13933)
!13946 = !DILocation(line: 207, column: 22, scope: !13933)
!13947 = !DILocation(line: 207, column: 5, scope: !13933)
!13948 = !DILocation(line: 207, column: 20, scope: !13933)
!13949 = !DILocation(line: 208, column: 32, scope: !13933)
!13950 = !DILocation(line: 208, column: 22, scope: !13933)
!13951 = !DILocation(line: 208, column: 20, scope: !13933)
!13952 = !DILocation(line: 210, column: 16, scope: !13933)
!13953 = !DILocation(line: 212, column: 5, scope: !13933)
!13954 = !DILocation(line: 214, column: 29, scope: !13933)
!13955 = !DILocation(line: 214, column: 37, scope: !13933)
!13956 = !DILocation(line: 214, column: 34, scope: !13933)
!13957 = !DILocation(line: 214, column: 23, scope: !13933)
!13958 = !DILocation(line: 215, column: 43, scope: !13933)
!13959 = !DILocation(line: 215, column: 49, scope: !13933)
!13960 = !DILocation(line: 215, column: 22, scope: !13933)
!13961 = !DILocation(line: 215, column: 5, scope: !13933)
!13962 = !DILocation(line: 215, column: 20, scope: !13933)
!13963 = !DILocation(line: 217, column: 9, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13933, file: !2510, line: 217, column: 9)
!13965 = !DILocation(line: 217, column: 41, scope: !13964)
!13966 = !DILocation(line: 0, scope: !13964)
!13967 = !DILocation(line: 224, column: 1, scope: !13933)
!13968 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Read", scope: !2510, file: !2510, line: 257, type: !13969, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !13971)
!13969 = !DISubroutineType(types: !13970)
!13970 = !{!161, !2875, !2875}
!13971 = !{!13972, !13973, !13974, !13983, !13984}
!13972 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !13968, file: !2510, line: 257, type: !2875)
!13973 = !DILocalVariable(name: "ptr_read", arg: 2, scope: !13968, file: !2510, line: 257, type: !2875)
!13974 = !DILocalVariable(name: "config", scope: !13968, file: !2510, line: 259, type: !13975)
!13975 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !2514, line: 100, baseType: !13976)
!13976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2514, line: 94, size: 160, elements: !13977)
!13977 = !{!13978, !13979, !13980, !13981, !13982}
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !13976, file: !2514, line: 95, baseType: !159, size: 8)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !13976, file: !2514, line: 96, baseType: !6125, size: 32, offset: 32)
!13980 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !13976, file: !2514, line: 97, baseType: !61, size: 32, offset: 64)
!13981 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !13976, file: !2514, line: 98, baseType: !849, size: 32, offset: 96)
!13982 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !13976, file: !2514, line: 99, baseType: !61, size: 32, offset: 128)
!13983 = !DILocalVariable(name: "retry_cnt", scope: !13968, file: !2510, line: 260, type: !161)
!13984 = !DILocalVariable(name: "result_read", scope: !13968, file: !2510, line: 260, type: !161)
!13985 = !DILocation(line: 0, scope: !13968)
!13986 = !DILocation(line: 259, column: 5, scope: !13968)
!13987 = !DILocation(line: 259, column: 39, scope: !13968)
!13988 = !DILocation(line: 262, column: 19, scope: !13968)
!13989 = !DILocation(line: 262, column: 31, scope: !13968)
!13990 = !DILocation(line: 262, column: 17, scope: !13968)
!13991 = !DILocation(line: 263, column: 31, scope: !13968)
!13992 = !DILocation(line: 264, column: 12, scope: !13968)
!13993 = !DILocation(line: 264, column: 31, scope: !13968)
!13994 = !DILocation(line: 265, column: 12, scope: !13968)
!13995 = !DILocation(line: 265, column: 31, scope: !13968)
!13996 = !DILocation(line: 266, column: 12, scope: !13968)
!13997 = !DILocation(line: 266, column: 31, scope: !13968)
!13998 = !DILocation(line: 267, column: 12, scope: !13968)
!13999 = !DILocation(line: 267, column: 31, scope: !13968)
!14000 = !DILocation(line: 269, column: 5, scope: !13968)
!14001 = !DILocation(line: 270, column: 23, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13968, file: !2510, line: 269, column: 8)
!14003 = !DILocation(line: 271, column: 18, scope: !14002)
!14004 = !DILocation(line: 272, column: 15, scope: !13968)
!14005 = !DILocation(line: 272, column: 27, scope: !13968)
!14006 = !DILocation(line: 272, column: 33, scope: !13968)
!14007 = !DILocation(line: 272, column: 5, scope: !14002)
!14008 = distinct !{!14008, !14000, !14009}
!14009 = !DILocation(line: 272, column: 53, scope: !13968)
!14010 = !DILocation(line: 276, column: 1, scope: !13968)
!14011 = !DILocation(line: 275, column: 5, scope: !13968)
!14012 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Write", scope: !2510, file: !2510, line: 241, type: !14013, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !14015)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{!161, !2875}
!14015 = !{!14016, !14017, !14018}
!14016 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !14012, file: !2510, line: 241, type: !2875)
!14017 = !DILocalVariable(name: "retry_cnt", scope: !14012, file: !2510, line: 243, type: !161)
!14018 = !DILocalVariable(name: "result_read", scope: !14012, file: !2510, line: 243, type: !161)
!14019 = !DILocation(line: 0, scope: !14012)
!14020 = !DILocation(line: 245, column: 19, scope: !14012)
!14021 = !DILocation(line: 245, column: 31, scope: !14012)
!14022 = !DILocation(line: 245, column: 17, scope: !14012)
!14023 = !DILocation(line: 247, column: 5, scope: !14012)
!14024 = !DILocation(line: 248, column: 23, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14012, file: !2510, line: 247, column: 8)
!14026 = !DILocation(line: 249, column: 18, scope: !14025)
!14027 = !DILocation(line: 250, column: 15, scope: !14012)
!14028 = !DILocation(line: 250, column: 27, scope: !14012)
!14029 = !DILocation(line: 250, column: 33, scope: !14012)
!14030 = !DILocation(line: 250, column: 5, scope: !14025)
!14031 = distinct !{!14031, !14023, !14032}
!14032 = !DILocation(line: 250, column: 53, scope: !14012)
!14033 = !DILocation(line: 253, column: 5, scope: !14012)
!14034 = distinct !DISubprogram(name: "pmu_get_register_value_mt6385", scope: !2510, file: !2510, line: 226, type: !3281, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !14035)
!14035 = !{!14036, !14037, !14038, !14039, !14041, !14042}
!14036 = !DILocalVariable(name: "address", arg: 1, scope: !14034, file: !2510, line: 226, type: !1020)
!14037 = !DILocalVariable(name: "mask", arg: 2, scope: !14034, file: !2510, line: 226, type: !1020)
!14038 = !DILocalVariable(name: "shift", arg: 3, scope: !14034, file: !2510, line: 226, type: !1020)
!14039 = !DILocalVariable(name: "send_buffer", scope: !14034, file: !2510, line: 228, type: !14040)
!14040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 16, elements: !508)
!14041 = !DILocalVariable(name: "receive_buffer", scope: !14034, file: !2510, line: 228, type: !2913)
!14042 = !DILocalVariable(name: "mask_pri", scope: !14034, file: !2510, line: 229, type: !18)
!14043 = !DILocation(line: 0, scope: !14034)
!14044 = !DILocation(line: 228, column: 5, scope: !14034)
!14045 = !DILocation(line: 228, column: 19, scope: !14034)
!14046 = !DILocation(line: 228, column: 35, scope: !14034)
!14047 = !DILocation(line: 231, column: 22, scope: !14034)
!14048 = !DILocation(line: 231, column: 5, scope: !14034)
!14049 = !DILocation(line: 231, column: 20, scope: !14034)
!14050 = !DILocation(line: 232, column: 32, scope: !14034)
!14051 = !DILocation(line: 232, column: 22, scope: !14034)
!14052 = !DILocation(line: 232, column: 20, scope: !14034)
!14053 = !DILocation(line: 234, column: 16, scope: !14034)
!14054 = !DILocation(line: 235, column: 5, scope: !14034)
!14055 = !DILocation(line: 236, column: 5, scope: !14034)
!14056 = !DILocation(line: 237, column: 14, scope: !14034)
!14057 = !DILocation(line: 237, column: 35, scope: !14034)
!14058 = !DILocation(line: 237, column: 32, scope: !14034)
!14059 = !DILocation(line: 237, column: 42, scope: !14034)
!14060 = !DILocation(line: 237, column: 41, scope: !14034)
!14061 = !DILocation(line: 237, column: 12, scope: !14034)
!14062 = !DILocation(line: 238, column: 1, scope: !14034)
!14063 = !DILocation(line: 237, column: 5, scope: !14034)
!14064 = distinct !DISubprogram(name: "pmu_register_callback", scope: !2510, file: !2510, line: 373, type: !14065, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !14071)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!14067, !14068, !14069, !14070, !88}
!14067 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_status_t", file: !2528, line: 99, baseType: !2532)
!14068 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_ch_t", file: !2528, line: 91, baseType: !2538)
!14069 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_trigger_mode_t", file: !2528, line: 50, baseType: !2573)
!14070 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_callback_t", file: !2528, line: 108, baseType: !2646)
!14071 = !{!14072, !14073, !14074, !14075, !14076, !14077}
!14072 = !DILocalVariable(name: "pmu_int_ch", arg: 1, scope: !14064, file: !2510, line: 373, type: !14068)
!14073 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !14064, file: !2510, line: 373, type: !14069)
!14074 = !DILocalVariable(name: "callback", arg: 3, scope: !14064, file: !2510, line: 373, type: !14070)
!14075 = !DILocalVariable(name: "user_data", arg: 4, scope: !14064, file: !2510, line: 373, type: !88)
!14076 = !DILocalVariable(name: "status", scope: !14064, file: !2510, line: 375, type: !14067)
!14077 = !DILocalVariable(name: "mask", scope: !14064, file: !2510, line: 376, type: !18)
!14078 = !DILocation(line: 0, scope: !14064)
!14079 = !DILocation(line: 378, column: 20, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14064, file: !2510, line: 378, column: 9)
!14081 = !DILocation(line: 378, column: 35, scope: !14080)
!14082 = !DILocation(line: 383, column: 12, scope: !14064)
!14083 = !DILocation(line: 385, column: 36, scope: !14064)
!14084 = !DILocation(line: 385, column: 49, scope: !14064)
!14085 = !DILocation(line: 386, column: 36, scope: !14064)
!14086 = !DILocation(line: 386, column: 46, scope: !14064)
!14087 = !DILocation(line: 387, column: 51, scope: !14064)
!14088 = !DILocation(line: 387, column: 36, scope: !14064)
!14089 = !DILocation(line: 387, column: 49, scope: !14064)
!14090 = !DILocation(line: 388, column: 36, scope: !14064)
!14091 = !DILocation(line: 388, column: 48, scope: !14064)
!14092 = !DILocation(line: 390, column: 5, scope: !14064)
!14093 = !DILocation(line: 392, column: 5, scope: !14064)
!14094 = !DILocation(line: 395, column: 5, scope: !14064)
!14095 = !DILocation(line: 396, column: 1, scope: !14064)
!14096 = distinct !DISubprogram(name: "pmu_enable_interrupt", scope: !2510, file: !2510, line: 414, type: !14097, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !14099)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{!14067, !14068, !14069, !161}
!14099 = !{!14100, !14101, !14102, !14103}
!14100 = !DILocalVariable(name: "int_ch", arg: 1, scope: !14096, file: !2510, line: 414, type: !14068)
!14101 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !14096, file: !2510, line: 414, type: !14069)
!14102 = !DILocalVariable(name: "enable", arg: 3, scope: !14096, file: !2510, line: 414, type: !161)
!14103 = !DILocalVariable(name: "Channel", scope: !14096, file: !2510, line: 416, type: !161)
!14104 = !DILocation(line: 0, scope: !14096)
!14105 = !DILocation(line: 418, column: 9, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14096, file: !2510, line: 418, column: 9)
!14107 = !DILocation(line: 418, column: 17, scope: !14106)
!14108 = !DILocation(line: 418, column: 9, scope: !14096)
!14109 = !DILocation(line: 422, column: 5, scope: !14096)
!14110 = !DILocation(line: 424, column: 31, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 424, column: 17)
!14112 = distinct !DILexicalBlock(scope: !14096, file: !2510, line: 422, column: 22)
!14113 = !DILocation(line: 424, column: 39, scope: !14111)
!14114 = !DILocation(line: 424, column: 17, scope: !14112)
!14115 = !DILocation(line: 425, column: 94, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14111, file: !2510, line: 424, column: 48)
!14117 = !DILocation(line: 425, column: 17, scope: !14116)
!14118 = !DILocation(line: 426, column: 13, scope: !14116)
!14119 = !DILocation(line: 427, column: 31, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 427, column: 17)
!14121 = !DILocation(line: 427, column: 39, scope: !14120)
!14122 = !DILocation(line: 427, column: 17, scope: !14112)
!14123 = !DILocation(line: 428, column: 94, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14120, file: !2510, line: 427, column: 48)
!14125 = !DILocation(line: 428, column: 17, scope: !14124)
!14126 = !DILocation(line: 429, column: 13, scope: !14124)
!14127 = !DILocation(line: 433, column: 31, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 433, column: 17)
!14129 = !DILocation(line: 433, column: 39, scope: !14128)
!14130 = !DILocation(line: 433, column: 17, scope: !14112)
!14131 = !DILocation(line: 434, column: 94, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14128, file: !2510, line: 433, column: 48)
!14133 = !DILocation(line: 434, column: 17, scope: !14132)
!14134 = !DILocation(line: 435, column: 13, scope: !14132)
!14135 = !DILocation(line: 436, column: 31, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 436, column: 17)
!14137 = !DILocation(line: 436, column: 39, scope: !14136)
!14138 = !DILocation(line: 436, column: 17, scope: !14112)
!14139 = !DILocation(line: 437, column: 94, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14136, file: !2510, line: 436, column: 48)
!14141 = !DILocation(line: 437, column: 17, scope: !14140)
!14142 = !DILocation(line: 438, column: 13, scope: !14140)
!14143 = !DILocation(line: 442, column: 31, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 442, column: 17)
!14145 = !DILocation(line: 442, column: 39, scope: !14144)
!14146 = !DILocation(line: 442, column: 17, scope: !14112)
!14147 = !DILocation(line: 443, column: 94, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14144, file: !2510, line: 442, column: 48)
!14149 = !DILocation(line: 443, column: 17, scope: !14148)
!14150 = !DILocation(line: 444, column: 13, scope: !14148)
!14151 = !DILocation(line: 445, column: 31, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 445, column: 17)
!14153 = !DILocation(line: 445, column: 39, scope: !14152)
!14154 = !DILocation(line: 445, column: 17, scope: !14112)
!14155 = !DILocation(line: 446, column: 94, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14152, file: !2510, line: 445, column: 48)
!14157 = !DILocation(line: 446, column: 17, scope: !14156)
!14158 = !DILocation(line: 447, column: 13, scope: !14156)
!14159 = !DILocation(line: 451, column: 31, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 451, column: 17)
!14161 = !DILocation(line: 451, column: 39, scope: !14160)
!14162 = !DILocation(line: 451, column: 17, scope: !14112)
!14163 = !DILocation(line: 452, column: 94, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14160, file: !2510, line: 451, column: 48)
!14165 = !DILocation(line: 452, column: 17, scope: !14164)
!14166 = !DILocation(line: 453, column: 13, scope: !14164)
!14167 = !DILocation(line: 454, column: 31, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 454, column: 17)
!14169 = !DILocation(line: 454, column: 39, scope: !14168)
!14170 = !DILocation(line: 454, column: 17, scope: !14112)
!14171 = !DILocation(line: 455, column: 94, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14168, file: !2510, line: 454, column: 48)
!14173 = !DILocation(line: 455, column: 17, scope: !14172)
!14174 = !DILocation(line: 456, column: 13, scope: !14172)
!14175 = !DILocation(line: 460, column: 31, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 460, column: 17)
!14177 = !DILocation(line: 460, column: 39, scope: !14176)
!14178 = !DILocation(line: 460, column: 17, scope: !14112)
!14179 = !DILocation(line: 461, column: 100, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14176, file: !2510, line: 460, column: 48)
!14181 = !DILocation(line: 461, column: 17, scope: !14180)
!14182 = !DILocation(line: 462, column: 13, scope: !14180)
!14183 = !DILocation(line: 463, column: 31, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 463, column: 17)
!14185 = !DILocation(line: 463, column: 39, scope: !14184)
!14186 = !DILocation(line: 463, column: 17, scope: !14112)
!14187 = !DILocation(line: 464, column: 100, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14184, file: !2510, line: 463, column: 48)
!14189 = !DILocation(line: 464, column: 17, scope: !14188)
!14190 = !DILocation(line: 465, column: 13, scope: !14188)
!14191 = !DILocation(line: 469, column: 31, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 469, column: 17)
!14193 = !DILocation(line: 469, column: 39, scope: !14192)
!14194 = !DILocation(line: 469, column: 17, scope: !14112)
!14195 = !DILocation(line: 470, column: 96, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14192, file: !2510, line: 469, column: 48)
!14197 = !DILocation(line: 470, column: 17, scope: !14196)
!14198 = !DILocation(line: 471, column: 13, scope: !14196)
!14199 = !DILocation(line: 472, column: 31, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 472, column: 17)
!14201 = !DILocation(line: 472, column: 39, scope: !14200)
!14202 = !DILocation(line: 472, column: 17, scope: !14112)
!14203 = !DILocation(line: 473, column: 96, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14200, file: !2510, line: 472, column: 48)
!14205 = !DILocation(line: 473, column: 17, scope: !14204)
!14206 = !DILocation(line: 474, column: 13, scope: !14204)
!14207 = !DILocation(line: 478, column: 31, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 478, column: 17)
!14209 = !DILocation(line: 478, column: 39, scope: !14208)
!14210 = !DILocation(line: 478, column: 17, scope: !14112)
!14211 = !DILocation(line: 479, column: 98, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14208, file: !2510, line: 478, column: 48)
!14213 = !DILocation(line: 479, column: 17, scope: !14212)
!14214 = !DILocation(line: 480, column: 13, scope: !14212)
!14215 = !DILocation(line: 481, column: 31, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 481, column: 17)
!14217 = !DILocation(line: 481, column: 39, scope: !14216)
!14218 = !DILocation(line: 481, column: 17, scope: !14112)
!14219 = !DILocation(line: 482, column: 98, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14216, file: !2510, line: 481, column: 48)
!14221 = !DILocation(line: 482, column: 17, scope: !14220)
!14222 = !DILocation(line: 483, column: 13, scope: !14220)
!14223 = !DILocation(line: 487, column: 31, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 487, column: 17)
!14225 = !DILocation(line: 487, column: 39, scope: !14224)
!14226 = !DILocation(line: 487, column: 17, scope: !14112)
!14227 = !DILocation(line: 488, column: 92, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14224, file: !2510, line: 487, column: 48)
!14229 = !DILocation(line: 488, column: 17, scope: !14228)
!14230 = !DILocation(line: 489, column: 13, scope: !14228)
!14231 = !DILocation(line: 490, column: 31, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 490, column: 17)
!14233 = !DILocation(line: 490, column: 39, scope: !14232)
!14234 = !DILocation(line: 490, column: 17, scope: !14112)
!14235 = !DILocation(line: 491, column: 92, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14232, file: !2510, line: 490, column: 48)
!14237 = !DILocation(line: 491, column: 17, scope: !14236)
!14238 = !DILocation(line: 492, column: 13, scope: !14236)
!14239 = !DILocation(line: 496, column: 31, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 496, column: 17)
!14241 = !DILocation(line: 496, column: 39, scope: !14240)
!14242 = !DILocation(line: 496, column: 17, scope: !14112)
!14243 = !DILocation(line: 497, column: 88, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !2510, line: 496, column: 48)
!14245 = !DILocation(line: 497, column: 17, scope: !14244)
!14246 = !DILocation(line: 498, column: 13, scope: !14244)
!14247 = !DILocation(line: 499, column: 31, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 499, column: 17)
!14249 = !DILocation(line: 499, column: 39, scope: !14248)
!14250 = !DILocation(line: 499, column: 17, scope: !14112)
!14251 = !DILocation(line: 500, column: 88, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14248, file: !2510, line: 499, column: 48)
!14253 = !DILocation(line: 500, column: 17, scope: !14252)
!14254 = !DILocation(line: 501, column: 13, scope: !14252)
!14255 = !DILocation(line: 505, column: 31, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 505, column: 17)
!14257 = !DILocation(line: 505, column: 39, scope: !14256)
!14258 = !DILocation(line: 505, column: 17, scope: !14112)
!14259 = !DILocation(line: 506, column: 88, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14256, file: !2510, line: 505, column: 48)
!14261 = !DILocation(line: 506, column: 17, scope: !14260)
!14262 = !DILocation(line: 507, column: 13, scope: !14260)
!14263 = !DILocation(line: 508, column: 31, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 508, column: 17)
!14265 = !DILocation(line: 508, column: 39, scope: !14264)
!14266 = !DILocation(line: 508, column: 17, scope: !14112)
!14267 = !DILocation(line: 509, column: 88, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14264, file: !2510, line: 508, column: 48)
!14269 = !DILocation(line: 509, column: 17, scope: !14268)
!14270 = !DILocation(line: 510, column: 13, scope: !14268)
!14271 = !DILocation(line: 514, column: 31, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 514, column: 17)
!14273 = !DILocation(line: 514, column: 39, scope: !14272)
!14274 = !DILocation(line: 514, column: 17, scope: !14112)
!14275 = !DILocation(line: 515, column: 92, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14272, file: !2510, line: 514, column: 48)
!14277 = !DILocation(line: 515, column: 17, scope: !14276)
!14278 = !DILocation(line: 516, column: 13, scope: !14276)
!14279 = !DILocation(line: 517, column: 31, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 517, column: 17)
!14281 = !DILocation(line: 517, column: 39, scope: !14280)
!14282 = !DILocation(line: 517, column: 17, scope: !14112)
!14283 = !DILocation(line: 518, column: 92, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14280, file: !2510, line: 517, column: 48)
!14285 = !DILocation(line: 518, column: 17, scope: !14284)
!14286 = !DILocation(line: 519, column: 13, scope: !14284)
!14287 = !DILocation(line: 523, column: 31, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 523, column: 17)
!14289 = !DILocation(line: 523, column: 39, scope: !14288)
!14290 = !DILocation(line: 523, column: 17, scope: !14112)
!14291 = !DILocation(line: 524, column: 92, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14288, file: !2510, line: 523, column: 48)
!14293 = !DILocation(line: 524, column: 17, scope: !14292)
!14294 = !DILocation(line: 525, column: 13, scope: !14292)
!14295 = !DILocation(line: 526, column: 31, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 526, column: 17)
!14297 = !DILocation(line: 526, column: 39, scope: !14296)
!14298 = !DILocation(line: 526, column: 17, scope: !14112)
!14299 = !DILocation(line: 527, column: 92, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14296, file: !2510, line: 526, column: 48)
!14301 = !DILocation(line: 527, column: 17, scope: !14300)
!14302 = !DILocation(line: 528, column: 13, scope: !14300)
!14303 = !DILocation(line: 532, column: 31, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 532, column: 17)
!14305 = !DILocation(line: 532, column: 39, scope: !14304)
!14306 = !DILocation(line: 532, column: 17, scope: !14112)
!14307 = !DILocation(line: 533, column: 90, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14304, file: !2510, line: 532, column: 48)
!14309 = !DILocation(line: 533, column: 17, scope: !14308)
!14310 = !DILocation(line: 534, column: 13, scope: !14308)
!14311 = !DILocation(line: 535, column: 31, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 535, column: 17)
!14313 = !DILocation(line: 535, column: 39, scope: !14312)
!14314 = !DILocation(line: 535, column: 17, scope: !14112)
!14315 = !DILocation(line: 536, column: 90, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14312, file: !2510, line: 535, column: 48)
!14317 = !DILocation(line: 536, column: 17, scope: !14316)
!14318 = !DILocation(line: 537, column: 13, scope: !14316)
!14319 = !DILocation(line: 541, column: 31, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 541, column: 17)
!14321 = !DILocation(line: 541, column: 39, scope: !14320)
!14322 = !DILocation(line: 541, column: 17, scope: !14112)
!14323 = !DILocation(line: 542, column: 92, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14320, file: !2510, line: 541, column: 48)
!14325 = !DILocation(line: 542, column: 17, scope: !14324)
!14326 = !DILocation(line: 543, column: 13, scope: !14324)
!14327 = !DILocation(line: 544, column: 31, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 544, column: 17)
!14329 = !DILocation(line: 544, column: 39, scope: !14328)
!14330 = !DILocation(line: 544, column: 17, scope: !14112)
!14331 = !DILocation(line: 545, column: 92, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14328, file: !2510, line: 544, column: 48)
!14333 = !DILocation(line: 545, column: 17, scope: !14332)
!14334 = !DILocation(line: 546, column: 13, scope: !14332)
!14335 = !DILocation(line: 550, column: 31, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 550, column: 17)
!14337 = !DILocation(line: 550, column: 39, scope: !14336)
!14338 = !DILocation(line: 550, column: 17, scope: !14112)
!14339 = !DILocation(line: 551, column: 90, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14336, file: !2510, line: 550, column: 48)
!14341 = !DILocation(line: 551, column: 17, scope: !14340)
!14342 = !DILocation(line: 552, column: 13, scope: !14340)
!14343 = !DILocation(line: 553, column: 31, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 553, column: 17)
!14345 = !DILocation(line: 553, column: 39, scope: !14344)
!14346 = !DILocation(line: 553, column: 17, scope: !14112)
!14347 = !DILocation(line: 554, column: 90, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14344, file: !2510, line: 553, column: 48)
!14349 = !DILocation(line: 554, column: 17, scope: !14348)
!14350 = !DILocation(line: 555, column: 13, scope: !14348)
!14351 = !DILocation(line: 559, column: 31, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 559, column: 17)
!14353 = !DILocation(line: 559, column: 39, scope: !14352)
!14354 = !DILocation(line: 559, column: 17, scope: !14112)
!14355 = !DILocation(line: 560, column: 90, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14352, file: !2510, line: 559, column: 48)
!14357 = !DILocation(line: 560, column: 17, scope: !14356)
!14358 = !DILocation(line: 561, column: 13, scope: !14356)
!14359 = !DILocation(line: 562, column: 31, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 562, column: 17)
!14361 = !DILocation(line: 562, column: 39, scope: !14360)
!14362 = !DILocation(line: 562, column: 17, scope: !14112)
!14363 = !DILocation(line: 563, column: 90, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14360, file: !2510, line: 562, column: 48)
!14365 = !DILocation(line: 563, column: 17, scope: !14364)
!14366 = !DILocation(line: 564, column: 13, scope: !14364)
!14367 = !DILocation(line: 568, column: 31, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 568, column: 17)
!14369 = !DILocation(line: 568, column: 39, scope: !14368)
!14370 = !DILocation(line: 568, column: 17, scope: !14112)
!14371 = !DILocation(line: 569, column: 94, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14368, file: !2510, line: 568, column: 48)
!14373 = !DILocation(line: 569, column: 17, scope: !14372)
!14374 = !DILocation(line: 570, column: 13, scope: !14372)
!14375 = !DILocation(line: 571, column: 31, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 571, column: 17)
!14377 = !DILocation(line: 571, column: 39, scope: !14376)
!14378 = !DILocation(line: 571, column: 17, scope: !14112)
!14379 = !DILocation(line: 572, column: 94, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14376, file: !2510, line: 571, column: 48)
!14381 = !DILocation(line: 572, column: 17, scope: !14380)
!14382 = !DILocation(line: 573, column: 13, scope: !14380)
!14383 = !DILocation(line: 577, column: 31, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 577, column: 17)
!14385 = !DILocation(line: 577, column: 39, scope: !14384)
!14386 = !DILocation(line: 577, column: 17, scope: !14112)
!14387 = !DILocation(line: 578, column: 92, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14384, file: !2510, line: 577, column: 48)
!14389 = !DILocation(line: 578, column: 17, scope: !14388)
!14390 = !DILocation(line: 579, column: 13, scope: !14388)
!14391 = !DILocation(line: 580, column: 31, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 580, column: 17)
!14393 = !DILocation(line: 580, column: 39, scope: !14392)
!14394 = !DILocation(line: 580, column: 17, scope: !14112)
!14395 = !DILocation(line: 581, column: 92, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14392, file: !2510, line: 580, column: 48)
!14397 = !DILocation(line: 581, column: 17, scope: !14396)
!14398 = !DILocation(line: 582, column: 13, scope: !14396)
!14399 = !DILocation(line: 586, column: 31, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 586, column: 17)
!14401 = !DILocation(line: 586, column: 39, scope: !14400)
!14402 = !DILocation(line: 586, column: 17, scope: !14112)
!14403 = !DILocation(line: 587, column: 92, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14400, file: !2510, line: 586, column: 48)
!14405 = !DILocation(line: 587, column: 17, scope: !14404)
!14406 = !DILocation(line: 588, column: 13, scope: !14404)
!14407 = !DILocation(line: 589, column: 31, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14112, file: !2510, line: 589, column: 17)
!14409 = !DILocation(line: 589, column: 39, scope: !14408)
!14410 = !DILocation(line: 589, column: 17, scope: !14112)
!14411 = !DILocation(line: 590, column: 92, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14408, file: !2510, line: 589, column: 48)
!14413 = !DILocation(line: 590, column: 17, scope: !14412)
!14414 = !DILocation(line: 591, column: 13, scope: !14412)
!14415 = !DILocation(line: 595, column: 88, scope: !14112)
!14416 = !DILocation(line: 595, column: 13, scope: !14112)
!14417 = !DILocation(line: 596, column: 13, scope: !14112)
!14418 = !DILocation(line: 599, column: 88, scope: !14112)
!14419 = !DILocation(line: 599, column: 13, scope: !14112)
!14420 = !DILocation(line: 600, column: 13, scope: !14112)
!14421 = !DILocation(line: 603, column: 96, scope: !14112)
!14422 = !DILocation(line: 603, column: 13, scope: !14112)
!14423 = !DILocation(line: 604, column: 13, scope: !14112)
!14424 = !DILocation(line: 607, column: 98, scope: !14112)
!14425 = !DILocation(line: 607, column: 13, scope: !14112)
!14426 = !DILocation(line: 608, column: 13, scope: !14112)
!14427 = !DILocation(line: 611, column: 98, scope: !14112)
!14428 = !DILocation(line: 611, column: 13, scope: !14112)
!14429 = !DILocation(line: 612, column: 13, scope: !14112)
!14430 = !DILocation(line: 615, column: 90, scope: !14112)
!14431 = !DILocation(line: 615, column: 13, scope: !14112)
!14432 = !DILocation(line: 616, column: 13, scope: !14112)
!14433 = !DILocation(line: 619, column: 84, scope: !14112)
!14434 = !DILocation(line: 619, column: 13, scope: !14112)
!14435 = !DILocation(line: 620, column: 13, scope: !14112)
!14436 = !DILocation(line: 623, column: 86, scope: !14112)
!14437 = !DILocation(line: 623, column: 13, scope: !14112)
!14438 = !DILocation(line: 624, column: 13, scope: !14112)
!14439 = !DILocation(line: 627, column: 86, scope: !14112)
!14440 = !DILocation(line: 627, column: 13, scope: !14112)
!14441 = !DILocation(line: 628, column: 13, scope: !14112)
!14442 = !DILocation(line: 631, column: 86, scope: !14112)
!14443 = !DILocation(line: 631, column: 13, scope: !14112)
!14444 = !DILocation(line: 632, column: 13, scope: !14112)
!14445 = !DILocation(line: 635, column: 84, scope: !14112)
!14446 = !DILocation(line: 635, column: 13, scope: !14112)
!14447 = !DILocation(line: 636, column: 13, scope: !14112)
!14448 = !DILocation(line: 639, column: 88, scope: !14112)
!14449 = !DILocation(line: 639, column: 13, scope: !14112)
!14450 = !DILocation(line: 640, column: 13, scope: !14112)
!14451 = !DILocation(line: 643, column: 92, scope: !14112)
!14452 = !DILocation(line: 643, column: 13, scope: !14112)
!14453 = !DILocation(line: 644, column: 13, scope: !14112)
!14454 = !DILocation(line: 648, column: 1, scope: !14096)
!14455 = distinct !DISubprogram(name: "pmu_disable_interrupt", scope: !2510, file: !2510, line: 398, type: !14456, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !14458)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{!14067, !14068, !14069}
!14458 = !{!14459, !14460, !14461, !14462}
!14459 = !DILocalVariable(name: "int_ch", arg: 1, scope: !14455, file: !2510, line: 398, type: !14068)
!14460 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !14455, file: !2510, line: 398, type: !14069)
!14461 = !DILocalVariable(name: "status", scope: !14455, file: !2510, line: 400, type: !14067)
!14462 = !DILocalVariable(name: "mask", scope: !14455, file: !2510, line: 401, type: !18)
!14463 = !DILocation(line: 0, scope: !14455)
!14464 = !DILocation(line: 403, column: 12, scope: !14455)
!14465 = !DILocation(line: 405, column: 5, scope: !14455)
!14466 = !DILocation(line: 406, column: 32, scope: !14455)
!14467 = !DILocation(line: 406, column: 44, scope: !14455)
!14468 = !DILocation(line: 408, column: 5, scope: !14455)
!14469 = !DILocation(line: 411, column: 5, scope: !14455)
!14470 = distinct !DISubprogram(name: "pmu_init", scope: !3254, file: !3254, line: 93, type: !343, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14471 = !DILocation(line: 98, column: 5, scope: !14470)
!14472 = !DILocation(line: 100, column: 5, scope: !14470)
!14473 = !DILocation(line: 101, column: 1, scope: !14470)
!14474 = distinct !DISubprogram(name: "pmu_set_register_value", scope: !3254, file: !3254, line: 104, type: !3277, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14475)
!14475 = !{!14476, !14477, !14478, !14479}
!14476 = !DILocalVariable(name: "address", arg: 1, scope: !14474, file: !3254, line: 104, type: !1020)
!14477 = !DILocalVariable(name: "mask", arg: 2, scope: !14474, file: !3254, line: 104, type: !1020)
!14478 = !DILocalVariable(name: "shift", arg: 3, scope: !14474, file: !3254, line: 104, type: !1020)
!14479 = !DILocalVariable(name: "value", arg: 4, scope: !14474, file: !3254, line: 104, type: !1020)
!14480 = !DILocation(line: 0, scope: !14474)
!14481 = !DILocation(line: 106, column: 13, scope: !14474)
!14482 = !DILocation(line: 106, column: 5, scope: !14474)
!14483 = distinct !DISubprogram(name: "pmu_get_register_value", scope: !3254, file: !3254, line: 110, type: !3281, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14484)
!14484 = !{!14485, !14486, !14487}
!14485 = !DILocalVariable(name: "address", arg: 1, scope: !14483, file: !3254, line: 110, type: !1020)
!14486 = !DILocalVariable(name: "mask", arg: 2, scope: !14483, file: !3254, line: 110, type: !1020)
!14487 = !DILocalVariable(name: "shift", arg: 3, scope: !14483, file: !3254, line: 110, type: !1020)
!14488 = !DILocation(line: 0, scope: !14483)
!14489 = !DILocation(line: 112, column: 13, scope: !14483)
!14490 = !DILocation(line: 112, column: 5, scope: !14483)
!14491 = distinct !DISubprogram(name: "pmu_control_mtcmos", scope: !3254, file: !3254, line: 116, type: !343, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14492 = !DILocation(line: 118, column: 5, scope: !14491)
!14493 = !DILocation(line: 119, column: 1, scope: !14491)
!14494 = distinct !DISubprogram(name: "pmu_get_vcore_voltage", scope: !3254, file: !3254, line: 123, type: !3286, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14495 = !DILocation(line: 125, column: 13, scope: !14494)
!14496 = !DILocation(line: 125, column: 5, scope: !14494)
!14497 = distinct !DISubprogram(name: "pmu_set_vcore_voltage", scope: !3254, file: !3254, line: 131, type: !3290, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14498)
!14498 = !{!14499, !14500}
!14499 = !DILocalVariable(name: "lock", arg: 1, scope: !14497, file: !3254, line: 131, type: !161)
!14500 = !DILocalVariable(name: "vcore", arg: 2, scope: !14497, file: !3254, line: 131, type: !161)
!14501 = !DILocation(line: 0, scope: !14497)
!14502 = !DILocation(line: 133, column: 13, scope: !14497)
!14503 = !DILocation(line: 133, column: 5, scope: !14497)
!14504 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck", scope: !3254, file: !3254, line: 137, type: !343, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14505 = !DILocation(line: 139, column: 5, scope: !14504)
!14506 = !DILocation(line: 140, column: 1, scope: !14504)
!14507 = distinct !DISubprogram(name: "pmu_ctrl_driver_power", scope: !3254, file: !3254, line: 143, type: !3295, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14508)
!14508 = !{!14509, !14510}
!14509 = !DILocalVariable(name: "driver_name", arg: 1, scope: !14507, file: !3254, line: 143, type: !161)
!14510 = !DILocalVariable(name: "enable", arg: 2, scope: !14507, file: !3254, line: 143, type: !161)
!14511 = !DILocation(line: 0, scope: !14507)
!14512 = !DILocation(line: 145, column: 5, scope: !14507)
!14513 = !DILocation(line: 146, column: 1, scope: !14507)
!14514 = distinct !DISubprogram(name: "internal_pmu_ctrl_power", scope: !3254, file: !3254, line: 189, type: !3295, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14515)
!14515 = !{!14516, !14517}
!14516 = !DILocalVariable(name: "driver_name", arg: 1, scope: !14514, file: !3254, line: 189, type: !161)
!14517 = !DILocalVariable(name: "enable", arg: 2, scope: !14514, file: !3254, line: 189, type: !161)
!14518 = !DILocation(line: 0, scope: !14514)
!14519 = !DILocation(line: 191, column: 5, scope: !14514)
!14520 = !DILocation(line: 193, column: 13, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14514, file: !3254, line: 191, column: 26)
!14522 = !DILocation(line: 194, column: 13, scope: !14521)
!14523 = !DILocation(line: 197, column: 13, scope: !14521)
!14524 = !DILocation(line: 198, column: 13, scope: !14521)
!14525 = !DILocation(line: 201, column: 40, scope: !14521)
!14526 = !DILocation(line: 201, column: 13, scope: !14521)
!14527 = !DILocation(line: 202, column: 13, scope: !14521)
!14528 = !DILocation(line: 205, column: 41, scope: !14521)
!14529 = !DILocation(line: 205, column: 13, scope: !14521)
!14530 = !DILocation(line: 206, column: 13, scope: !14521)
!14531 = !DILocation(line: 209, column: 39, scope: !14521)
!14532 = !DILocation(line: 209, column: 13, scope: !14521)
!14533 = !DILocation(line: 210, column: 13, scope: !14521)
!14534 = !DILocation(line: 213, column: 13, scope: !14521)
!14535 = !DILocation(line: 214, column: 13, scope: !14521)
!14536 = !DILocation(line: 217, column: 13, scope: !14521)
!14537 = !DILocation(line: 218, column: 13, scope: !14521)
!14538 = !DILocation(line: 221, column: 13, scope: !14521)
!14539 = !DILocation(line: 222, column: 13, scope: !14521)
!14540 = !DILocation(line: 225, column: 13, scope: !14521)
!14541 = !DILocation(line: 226, column: 13, scope: !14521)
!14542 = !DILocation(line: 228, column: 1, scope: !14514)
!14543 = distinct !DISubprogram(name: "pmu_audio_lock_voltage", scope: !3254, file: !3254, line: 149, type: !343, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14544 = !DILocation(line: 151, column: 5, scope: !14543)
!14545 = !DILocation(line: 152, column: 1, scope: !14543)
!14546 = distinct !DISubprogram(name: "internal_pmu_audio_lock_voltage", scope: !3254, file: !3254, line: 230, type: !343, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14547 = !DILocation(line: 232, column: 5, scope: !14546)
!14548 = !DILocation(line: 233, column: 5, scope: !14546)
!14549 = !DILocation(line: 234, column: 1, scope: !14546)
!14550 = distinct !DISubprogram(name: "pmu_audio_unlock_voltage", scope: !3254, file: !3254, line: 155, type: !343, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14551 = !DILocation(line: 158, column: 1, scope: !14550)
!14552 = distinct !DISubprogram(name: "pmu_get_usb_input_status", scope: !3254, file: !3254, line: 161, type: !3286, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14553 = !DILocation(line: 163, column: 13, scope: !14552)
!14554 = !DILocation(line: 163, column: 5, scope: !14552)
!14555 = distinct !DISubprogram(name: "pmu_enter_power_off", scope: !3254, file: !3254, line: 167, type: !343, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14556 = !DILocation(line: 169, column: 5, scope: !14555)
!14557 = !DILocation(line: 170, column: 1, scope: !14555)
!14558 = distinct !DISubprogram(name: "pmu_reset", scope: !3254, file: !3254, line: 173, type: !343, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14559 = !DILocation(line: 175, column: 5, scope: !14558)
!14560 = !DILocation(line: 176, column: 1, scope: !14558)
!14561 = distinct !DISubprogram(name: "pmu_get_type", scope: !3254, file: !3254, line: 178, type: !14562, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14562 = !DISubroutineType(types: !14563)
!14563 = !{!18}
!14564 = !DILocation(line: 183, column: 5, scope: !14561)
!14565 = distinct !DISubprogram(name: "null_pmu_set_register_value", scope: !3254, file: !3254, line: 238, type: !3277, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14566)
!14566 = !{!14567, !14568, !14569, !14570}
!14567 = !DILocalVariable(name: "address", arg: 1, scope: !14565, file: !3254, line: 238, type: !1020)
!14568 = !DILocalVariable(name: "mask", arg: 2, scope: !14565, file: !3254, line: 238, type: !1020)
!14569 = !DILocalVariable(name: "shift", arg: 3, scope: !14565, file: !3254, line: 238, type: !1020)
!14570 = !DILocalVariable(name: "value", arg: 4, scope: !14565, file: !3254, line: 238, type: !1020)
!14571 = !DILocation(line: 0, scope: !14565)
!14572 = !DILocation(line: 240, column: 5, scope: !14565)
!14573 = distinct !DISubprogram(name: "null_pmu_get_register_value", scope: !3254, file: !3254, line: 244, type: !3281, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !14574)
!14574 = !{!14575, !14576, !14577}
!14575 = !DILocalVariable(name: "address", arg: 1, scope: !14573, file: !3254, line: 244, type: !1020)
!14576 = !DILocalVariable(name: "mask", arg: 2, scope: !14573, file: !3254, line: 244, type: !1020)
!14577 = !DILocalVariable(name: "shift", arg: 3, scope: !14573, file: !3254, line: 244, type: !1020)
!14578 = !DILocation(line: 0, scope: !14573)
!14579 = !DILocation(line: 246, column: 5, scope: !14573)
!14580 = distinct !DISubprogram(name: "null_function", scope: !3254, file: !3254, line: 250, type: !343, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3253, retainedNodes: !345)
!14581 = !DILocation(line: 252, column: 1, scope: !14580)
!14582 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !3303, file: !3303, line: 58, type: !14583, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !14585)
!14583 = !DISubroutineType(types: !14584)
!14584 = !{null, !165, !7, !165, null}
!14585 = !{!14586, !14587, !14588, !14589, !14598}
!14586 = !DILocalVariable(name: "func", arg: 1, scope: !14582, file: !3303, line: 58, type: !165)
!14587 = !DILocalVariable(name: "line", arg: 2, scope: !14582, file: !3303, line: 58, type: !7)
!14588 = !DILocalVariable(name: "message", arg: 3, scope: !14582, file: !3303, line: 58, type: !165)
!14589 = !DILocalVariable(name: "ap", scope: !14582, file: !3303, line: 60, type: !14590)
!14590 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !14591, line: 46, baseType: !14592)
!14591 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!14592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !14593, line: 32, baseType: !14594)
!14593 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!14594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3303, baseType: !14595)
!14595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !14596)
!14596 = !{!14597}
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !14595, file: !3303, line: 60, baseType: !88, size: 32)
!14598 = !DILocalVariable(name: "mask", scope: !14582, file: !3303, line: 62, type: !61)
!14599 = !DILocation(line: 0, scope: !14582)
!14600 = !DILocation(line: 60, column: 5, scope: !14582)
!14601 = !DILocation(line: 60, column: 13, scope: !14582)
!14602 = !DILocation(line: 62, column: 5, scope: !14582)
!14603 = !DILocation(line: 63, column: 5, scope: !14582)
!14604 = !DILocation(line: 65, column: 5, scope: !14582)
!14605 = !DILocation(line: 66, column: 5, scope: !14582)
!14606 = !DILocation(line: 67, column: 5, scope: !14582)
!14607 = !DILocation(line: 69, column: 37, scope: !14582)
!14608 = !DILocation(line: 69, column: 5, scope: !14582)
!14609 = !DILocation(line: 71, column: 1, scope: !14582)
!14610 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !3303, file: !3303, line: 72, type: !14583, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !14611)
!14611 = !{!14612, !14613, !14614, !14615, !14616}
!14612 = !DILocalVariable(name: "func", arg: 1, scope: !14610, file: !3303, line: 72, type: !165)
!14613 = !DILocalVariable(name: "line", arg: 2, scope: !14610, file: !3303, line: 72, type: !7)
!14614 = !DILocalVariable(name: "message", arg: 3, scope: !14610, file: !3303, line: 72, type: !165)
!14615 = !DILocalVariable(name: "ap", scope: !14610, file: !3303, line: 74, type: !14590)
!14616 = !DILocalVariable(name: "mask", scope: !14610, file: !3303, line: 76, type: !61)
!14617 = !DILocation(line: 0, scope: !14610)
!14618 = !DILocation(line: 74, column: 5, scope: !14610)
!14619 = !DILocation(line: 74, column: 13, scope: !14610)
!14620 = !DILocation(line: 76, column: 5, scope: !14610)
!14621 = !DILocation(line: 77, column: 5, scope: !14610)
!14622 = !DILocation(line: 79, column: 5, scope: !14610)
!14623 = !DILocation(line: 80, column: 5, scope: !14610)
!14624 = !DILocation(line: 81, column: 5, scope: !14610)
!14625 = !DILocation(line: 83, column: 37, scope: !14610)
!14626 = !DILocation(line: 83, column: 5, scope: !14610)
!14627 = !DILocation(line: 85, column: 1, scope: !14610)
!14628 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !3303, file: !3303, line: 86, type: !14583, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !14629)
!14629 = !{!14630, !14631, !14632, !14633, !14634}
!14630 = !DILocalVariable(name: "func", arg: 1, scope: !14628, file: !3303, line: 86, type: !165)
!14631 = !DILocalVariable(name: "line", arg: 2, scope: !14628, file: !3303, line: 86, type: !7)
!14632 = !DILocalVariable(name: "message", arg: 3, scope: !14628, file: !3303, line: 86, type: !165)
!14633 = !DILocalVariable(name: "ap", scope: !14628, file: !3303, line: 88, type: !14590)
!14634 = !DILocalVariable(name: "mask", scope: !14628, file: !3303, line: 90, type: !61)
!14635 = !DILocation(line: 0, scope: !14628)
!14636 = !DILocation(line: 88, column: 5, scope: !14628)
!14637 = !DILocation(line: 88, column: 13, scope: !14628)
!14638 = !DILocation(line: 90, column: 5, scope: !14628)
!14639 = !DILocation(line: 91, column: 5, scope: !14628)
!14640 = !DILocation(line: 93, column: 5, scope: !14628)
!14641 = !DILocation(line: 94, column: 5, scope: !14628)
!14642 = !DILocation(line: 95, column: 5, scope: !14628)
!14643 = !DILocation(line: 97, column: 37, scope: !14628)
!14644 = !DILocation(line: 97, column: 5, scope: !14628)
!14645 = !DILocation(line: 99, column: 1, scope: !14628)
!14646 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !3303, file: !3303, line: 101, type: !14647, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !14651)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{null, !165, !7, !165, !14649, !7, null}
!14649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14650, size: 32)
!14650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!14651 = !{!14652, !14653, !14654, !14655, !14656}
!14652 = !DILocalVariable(name: "func", arg: 1, scope: !14646, file: !3303, line: 101, type: !165)
!14653 = !DILocalVariable(name: "line", arg: 2, scope: !14646, file: !3303, line: 101, type: !7)
!14654 = !DILocalVariable(name: "message", arg: 3, scope: !14646, file: !3303, line: 101, type: !165)
!14655 = !DILocalVariable(name: "data", arg: 4, scope: !14646, file: !3303, line: 101, type: !14649)
!14656 = !DILocalVariable(name: "length", arg: 5, scope: !14646, file: !3303, line: 101, type: !7)
!14657 = !DILocation(line: 0, scope: !14646)
!14658 = !DILocation(line: 103, column: 1, scope: !14646)
!14659 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2670, file: !2670, line: 87, type: !4260, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !14660)
!14660 = !{!14661, !14662}
!14661 = !DILocalVariable(name: "bank_no", arg: 1, scope: !14659, file: !2670, line: 87, type: !61)
!14662 = !DILocalVariable(name: "value", scope: !14659, file: !2670, line: 89, type: !61)
!14663 = !DILocation(line: 0, scope: !14659)
!14664 = !DILocation(line: 91, column: 41, scope: !14659)
!14665 = !DILocation(line: 91, column: 5, scope: !14659)
!14666 = !DILocation(line: 91, column: 19, scope: !14659)
!14667 = !DILocation(line: 91, column: 31, scope: !14659)
!14668 = !DILocation(line: 92, column: 77, scope: !14659)
!14669 = !DILocation(line: 92, column: 60, scope: !14659)
!14670 = !DILocation(line: 92, column: 31, scope: !14659)
!14671 = !DILocation(line: 94, column: 5, scope: !14659)
!14672 = !DILocation(line: 94, column: 27, scope: !14659)
!14673 = !DILocation(line: 94, column: 39, scope: !14659)
!14674 = !DILocation(line: 94, column: 65, scope: !14659)
!14675 = distinct !{!14675, !14671, !14676}
!14676 = !DILocation(line: 94, column: 70, scope: !14659)
!14677 = !DILocation(line: 96, column: 29, scope: !14659)
!14678 = !DILocation(line: 96, column: 64, scope: !14659)
!14679 = !DILocation(line: 98, column: 5, scope: !14659)
!14680 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2670, file: !2670, line: 102, type: !6939, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !14681)
!14681 = !{!14682, !14683}
!14682 = !DILocalVariable(name: "bank_no", arg: 1, scope: !14680, file: !2670, line: 102, type: !61)
!14683 = !DILocalVariable(name: "value", arg: 2, scope: !14680, file: !2670, line: 102, type: !61)
!14684 = !DILocation(line: 0, scope: !14680)
!14685 = !DILocation(line: 106, column: 40, scope: !14680)
!14686 = !DILocation(line: 106, column: 77, scope: !14680)
!14687 = !DILocation(line: 106, column: 102, scope: !14680)
!14688 = !DILocation(line: 106, column: 5, scope: !14680)
!14689 = !DILocation(line: 106, column: 19, scope: !14680)
!14690 = !DILocation(line: 106, column: 31, scope: !14680)
!14691 = !DILocation(line: 107, column: 77, scope: !14680)
!14692 = !DILocation(line: 107, column: 60, scope: !14680)
!14693 = !DILocation(line: 107, column: 31, scope: !14680)
!14694 = !DILocation(line: 109, column: 5, scope: !14680)
!14695 = !DILocation(line: 109, column: 27, scope: !14680)
!14696 = !DILocation(line: 109, column: 39, scope: !14680)
!14697 = !DILocation(line: 109, column: 65, scope: !14680)
!14698 = distinct !{!14698, !14694, !14699}
!14699 = !DILocation(line: 109, column: 70, scope: !14680)
!14700 = !DILocation(line: 111, column: 5, scope: !14680)
!14701 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2670, file: !2670, line: 114, type: !343, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14702 = !DILocation(line: 117, column: 36, scope: !14701)
!14703 = !DILocation(line: 117, column: 18, scope: !14701)
!14704 = !DILocation(line: 118, column: 37, scope: !14701)
!14705 = !DILocation(line: 118, column: 18, scope: !14701)
!14706 = !DILocation(line: 119, column: 37, scope: !14701)
!14707 = !DILocation(line: 119, column: 19, scope: !14701)
!14708 = !DILocation(line: 120, column: 37, scope: !14701)
!14709 = !DILocation(line: 120, column: 19, scope: !14701)
!14710 = !DILocation(line: 121, column: 37, scope: !14701)
!14711 = !DILocation(line: 121, column: 19, scope: !14701)
!14712 = !DILocation(line: 122, column: 37, scope: !14701)
!14713 = !DILocation(line: 122, column: 19, scope: !14701)
!14714 = !DILocation(line: 123, column: 37, scope: !14701)
!14715 = !DILocation(line: 123, column: 19, scope: !14701)
!14716 = !DILocation(line: 125, column: 37, scope: !14701)
!14717 = !DILocation(line: 125, column: 19, scope: !14701)
!14718 = !DILocation(line: 126, column: 37, scope: !14701)
!14719 = !DILocation(line: 126, column: 19, scope: !14701)
!14720 = !DILocation(line: 127, column: 37, scope: !14701)
!14721 = !DILocation(line: 127, column: 19, scope: !14701)
!14722 = !DILocation(line: 128, column: 37, scope: !14701)
!14723 = !DILocation(line: 128, column: 19, scope: !14701)
!14724 = !DILocation(line: 130, column: 36, scope: !14701)
!14725 = !DILocation(line: 130, column: 18, scope: !14701)
!14726 = !DILocation(line: 131, column: 36, scope: !14701)
!14727 = !DILocation(line: 131, column: 18, scope: !14701)
!14728 = !DILocation(line: 133, column: 5, scope: !14701)
!14729 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2670, file: !2670, line: 140, type: !14730, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14730 = !DISubroutineType(types: !14731)
!14731 = !{!7}
!14732 = !DILocation(line: 144, column: 5, scope: !14729)
!14733 = !DILocation(line: 144, column: 19, scope: !14729)
!14734 = !DILocation(line: 144, column: 28, scope: !14729)
!14735 = !DILocation(line: 147, column: 19, scope: !14729)
!14736 = !DILocation(line: 147, column: 28, scope: !14729)
!14737 = !DILocation(line: 150, column: 19, scope: !14729)
!14738 = !DILocation(line: 150, column: 28, scope: !14729)
!14739 = !DILocation(line: 152, column: 5, scope: !14729)
!14740 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2670, file: !2670, line: 157, type: !10421, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !14741)
!14741 = !{!14742, !14743, !14744, !14745, !14746, !14747}
!14742 = !DILocalVariable(name: "mbist_src", scope: !14740, file: !2670, line: 159, type: !61)
!14743 = !DILocalVariable(name: "mbist_len", scope: !14740, file: !2670, line: 159, type: !61)
!14744 = !DILocalVariable(name: "mbist_data", scope: !14740, file: !2670, line: 159, type: !4233)
!14745 = !DILocalVariable(name: "i", scope: !14740, file: !2670, line: 160, type: !61)
!14746 = !DILocalVariable(name: "bist_data_inv", scope: !14740, file: !2670, line: 160, type: !61)
!14747 = !DILocalVariable(name: "bist_data_random", scope: !14740, file: !2670, line: 160, type: !61)
!14748 = !DILocation(line: 159, column: 36, scope: !14740)
!14749 = !DILocation(line: 0, scope: !14740)
!14750 = !DILocation(line: 165, column: 5, scope: !14740)
!14751 = !DILocation(line: 165, column: 19, scope: !14740)
!14752 = !DILocation(line: 165, column: 30, scope: !14740)
!14753 = !DILocation(line: 166, column: 5, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14740, file: !2670, line: 166, column: 5)
!14755 = !DILocation(line: 167, column: 9, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14757, file: !2670, line: 167, column: 9)
!14757 = distinct !DILexicalBlock(scope: !14758, file: !2670, line: 166, column: 66)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !2670, line: 166, column: 5)
!14759 = !DILocation(line: 168, column: 13, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !2670, line: 168, column: 13)
!14761 = distinct !DILexicalBlock(scope: !14762, file: !2670, line: 167, column: 34)
!14762 = distinct !DILexicalBlock(scope: !14756, file: !2670, line: 167, column: 9)
!14763 = !DILocation(line: 168, column: 57, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14760, file: !2670, line: 168, column: 13)
!14765 = distinct !{!14765, !14759, !14766}
!14766 = !DILocation(line: 183, column: 13, scope: !14760)
!14767 = !DILocation(line: 170, column: 42, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14764, file: !2670, line: 168, column: 83)
!14769 = !DILocation(line: 172, column: 42, scope: !14768)
!14770 = !DILocation(line: 174, column: 45, scope: !14768)
!14771 = !DILocation(line: 174, column: 59, scope: !14768)
!14772 = !DILocation(line: 174, column: 154, scope: !14768)
!14773 = !DILocation(line: 174, column: 87, scope: !14768)
!14774 = !DILocation(line: 174, column: 134, scope: !14768)
!14775 = !DILocation(line: 174, column: 42, scope: !14768)
!14776 = !DILocation(line: 175, column: 42, scope: !14768)
!14777 = !DILocation(line: 177, column: 17, scope: !14768)
!14778 = !DILocation(line: 177, column: 39, scope: !14768)
!14779 = !DILocation(line: 177, column: 50, scope: !14768)
!14780 = !DILocation(line: 177, column: 71, scope: !14768)
!14781 = distinct !{!14781, !14777, !14782}
!14782 = !DILocation(line: 177, column: 78, scope: !14768)
!14783 = !DILocation(line: 179, column: 36, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14768, file: !2670, line: 179, column: 21)
!14785 = !DILocation(line: 179, column: 47, scope: !14784)
!14786 = !DILocation(line: 179, column: 69, scope: !14784)
!14787 = !DILocation(line: 168, column: 79, scope: !14764)
!14788 = !DILocation(line: 179, column: 21, scope: !14768)
!14789 = !DILocation(line: 167, column: 30, scope: !14762)
!14790 = !DILocation(line: 167, column: 23, scope: !14762)
!14791 = distinct !{!14791, !14755, !14792}
!14792 = !DILocation(line: 184, column: 9, scope: !14756)
!14793 = !DILocation(line: 166, column: 62, scope: !14758)
!14794 = !DILocation(line: 166, column: 43, scope: !14758)
!14795 = distinct !{!14795, !14753, !14796}
!14796 = !DILocation(line: 185, column: 5, scope: !14754)
!14797 = !DILocation(line: 189, column: 1, scope: !14740)
!14798 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2670, file: !2670, line: 190, type: !10421, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14799 = !DILocation(line: 192, column: 9, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14798, file: !2670, line: 192, column: 9)
!14801 = !DILocation(line: 192, column: 26, scope: !14800)
!14802 = !DILocation(line: 0, scope: !14798)
!14803 = !DILocation(line: 197, column: 1, scope: !14798)
!14804 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2670, file: !2670, line: 201, type: !343, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !14805)
!14805 = !{!14806, !14807}
!14806 = !DILocalVariable(name: "dqy_in_del", scope: !14804, file: !2670, line: 203, type: !1320)
!14807 = !DILocalVariable(name: "dqs_in_del", scope: !14804, file: !2670, line: 204, type: !1320)
!14808 = !DILocation(line: 0, scope: !14804)
!14809 = !DILocation(line: 206, column: 5, scope: !14804)
!14810 = !DILocation(line: 206, column: 19, scope: !14804)
!14811 = !DILocation(line: 206, column: 28, scope: !14804)
!14812 = !DILocation(line: 207, column: 19, scope: !14804)
!14813 = !DILocation(line: 207, column: 28, scope: !14804)
!14814 = !DILocation(line: 208, column: 19, scope: !14804)
!14815 = !DILocation(line: 208, column: 28, scope: !14804)
!14816 = !DILocation(line: 209, column: 19, scope: !14804)
!14817 = !DILocation(line: 209, column: 28, scope: !14804)
!14818 = !DILocation(line: 212, column: 23, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !2670, line: 211, column: 78)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !2670, line: 211, column: 5)
!14821 = distinct !DILexicalBlock(scope: !14804, file: !2670, line: 211, column: 5)
!14822 = !DILocation(line: 212, column: 32, scope: !14819)
!14823 = !DILocation(line: 213, column: 23, scope: !14819)
!14824 = !DILocation(line: 213, column: 32, scope: !14819)
!14825 = !DILocation(line: 215, column: 19, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14819, file: !2670, line: 215, column: 13)
!14827 = !DILocation(line: 215, column: 15, scope: !14826)
!14828 = !DILocation(line: 215, column: 13, scope: !14819)
!14829 = !DILocation(line: 211, column: 40, scope: !14820)
!14830 = !DILocation(line: 211, column: 5, scope: !14821)
!14831 = distinct !{!14831, !14830, !14832}
!14832 = !DILocation(line: 218, column: 5, scope: !14821)
!14833 = !DILocation(line: 211, column: 57, scope: !14820)
!14834 = !DILocation(line: 212, column: 9, scope: !14819)
!14835 = !DILocation(line: 212, column: 45, scope: !14819)
!14836 = !DILocation(line: 212, column: 83, scope: !14819)
!14837 = !DILocation(line: 212, column: 121, scope: !14819)
!14838 = !DILocation(line: 212, column: 70, scope: !14819)
!14839 = !DILocation(line: 212, column: 108, scope: !14819)
!14840 = !DILocation(line: 212, column: 146, scope: !14819)
!14841 = !DILocation(line: 222, column: 49, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14843, file: !2670, line: 221, column: 84)
!14843 = distinct !DILexicalBlock(scope: !14844, file: !2670, line: 221, column: 9)
!14844 = distinct !DILexicalBlock(scope: !14845, file: !2670, line: 221, column: 9)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !2670, line: 220, column: 25)
!14846 = distinct !DILexicalBlock(scope: !14804, file: !2670, line: 220, column: 9)
!14847 = !DILocation(line: 222, column: 13, scope: !14842)
!14848 = !DILocation(line: 222, column: 27, scope: !14842)
!14849 = !DILocation(line: 222, column: 36, scope: !14842)
!14850 = !DILocation(line: 224, column: 23, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14842, file: !2670, line: 224, column: 17)
!14852 = !DILocation(line: 224, column: 19, scope: !14851)
!14853 = !DILocation(line: 224, column: 17, scope: !14842)
!14854 = distinct !{!14854, !14855, !14856}
!14855 = !DILocation(line: 221, column: 9, scope: !14844)
!14856 = !DILocation(line: 227, column: 9, scope: !14844)
!14857 = !DILocation(line: 230, column: 1, scope: !14804)
!14858 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2670, file: !2670, line: 253, type: !343, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14859 = !DILocation(line: 257, column: 26, scope: !14858)
!14860 = !DILocation(line: 259, column: 5, scope: !14858)
!14861 = !DILocation(line: 259, column: 19, scope: !14858)
!14862 = !DILocation(line: 259, column: 29, scope: !14858)
!14863 = !DILocation(line: 260, column: 5, scope: !14858)
!14864 = !DILocation(line: 260, column: 27, scope: !14858)
!14865 = !DILocation(line: 260, column: 93, scope: !14858)
!14866 = distinct !{!14866, !14863, !14867}
!14867 = !DILocation(line: 260, column: 98, scope: !14858)
!14868 = !DILocation(line: 261, column: 29, scope: !14858)
!14869 = !DILocation(line: 262, column: 5, scope: !14858)
!14870 = !DILocation(line: 262, column: 27, scope: !14858)
!14871 = !DILocation(line: 262, column: 93, scope: !14858)
!14872 = distinct !{!14872, !14869, !14873}
!14873 = !DILocation(line: 262, column: 98, scope: !14858)
!14874 = !DILocation(line: 264, column: 42, scope: !14858)
!14875 = !DILocation(line: 265, column: 48, scope: !14858)
!14876 = !DILocation(line: 267, column: 5, scope: !14858)
!14877 = !DILocation(line: 267, column: 27, scope: !14858)
!14878 = !DILocation(line: 267, column: 39, scope: !14858)
!14879 = !DILocation(line: 267, column: 65, scope: !14858)
!14880 = distinct !{!14880, !14876, !14881}
!14881 = !DILocation(line: 267, column: 70, scope: !14858)
!14882 = !DILocation(line: 269, column: 5, scope: !14858)
!14883 = !DILocation(line: 273, column: 8, scope: !14858)
!14884 = !DILocation(line: 275, column: 5, scope: !14858)
!14885 = !DILocation(line: 275, column: 27, scope: !14858)
!14886 = !DILocation(line: 275, column: 39, scope: !14858)
!14887 = !DILocation(line: 275, column: 65, scope: !14858)
!14888 = distinct !{!14888, !14884, !14889}
!14889 = !DILocation(line: 275, column: 70, scope: !14858)
!14890 = !DILocation(line: 278, column: 9, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14858, file: !2670, line: 278, column: 9)
!14892 = !DILocation(line: 278, column: 44, scope: !14891)
!14893 = !DILocation(line: 278, column: 9, scope: !14858)
!14894 = !DILocation(line: 279, column: 13, scope: !14895)
!14895 = distinct !DILexicalBlock(scope: !14896, file: !2670, line: 279, column: 12)
!14896 = distinct !DILexicalBlock(scope: !14891, file: !2670, line: 278, column: 55)
!14897 = !DILocation(line: 279, column: 48, scope: !14895)
!14898 = !DILocation(line: 279, column: 56, scope: !14895)
!14899 = !DILocation(line: 0, scope: !14895)
!14900 = !DILocation(line: 288, column: 1, scope: !14858)
!14901 = distinct !DISubprogram(name: "custom_setEMI", scope: !2670, file: !2670, line: 294, type: !14902, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14902 = !DISubroutineType(types: !14903)
!14903 = !{!1789}
!14904 = !DILocation(line: 298, column: 5, scope: !14901)
!14905 = !DILocation(line: 300, column: 5, scope: !14901)
!14906 = !DILocation(line: 302, column: 20, scope: !14901)
!14907 = !DILocation(line: 302, column: 18, scope: !14901)
!14908 = !DILocation(line: 303, column: 20, scope: !14901)
!14909 = !DILocation(line: 303, column: 18, scope: !14901)
!14910 = !DILocation(line: 304, column: 20, scope: !14901)
!14911 = !DILocation(line: 304, column: 18, scope: !14901)
!14912 = !DILocation(line: 307, column: 5, scope: !14901)
!14913 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2670, file: !2670, line: 312, type: !14902, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14914 = !DILocation(line: 319, column: 29, scope: !14913)
!14915 = !DILocation(line: 319, column: 5, scope: !14913)
!14916 = !DILocation(line: 319, column: 19, scope: !14913)
!14917 = !DILocation(line: 319, column: 27, scope: !14913)
!14918 = !DILocation(line: 320, column: 29, scope: !14913)
!14919 = !DILocation(line: 320, column: 19, scope: !14913)
!14920 = !DILocation(line: 320, column: 27, scope: !14913)
!14921 = !DILocation(line: 322, column: 30, scope: !14913)
!14922 = !DILocation(line: 322, column: 19, scope: !14913)
!14923 = !DILocation(line: 322, column: 28, scope: !14913)
!14924 = !DILocation(line: 324, column: 30, scope: !14913)
!14925 = !DILocation(line: 324, column: 19, scope: !14913)
!14926 = !DILocation(line: 324, column: 28, scope: !14913)
!14927 = !DILocation(line: 326, column: 31, scope: !14913)
!14928 = !DILocation(line: 326, column: 19, scope: !14913)
!14929 = !DILocation(line: 326, column: 29, scope: !14913)
!14930 = !DILocation(line: 327, column: 31, scope: !14913)
!14931 = !DILocation(line: 327, column: 19, scope: !14913)
!14932 = !DILocation(line: 327, column: 29, scope: !14913)
!14933 = !DILocation(line: 332, column: 30, scope: !14913)
!14934 = !DILocation(line: 332, column: 19, scope: !14913)
!14935 = !DILocation(line: 332, column: 28, scope: !14913)
!14936 = !DILocation(line: 333, column: 30, scope: !14913)
!14937 = !DILocation(line: 333, column: 19, scope: !14913)
!14938 = !DILocation(line: 333, column: 28, scope: !14913)
!14939 = !DILocation(line: 334, column: 30, scope: !14913)
!14940 = !DILocation(line: 334, column: 19, scope: !14913)
!14941 = !DILocation(line: 334, column: 28, scope: !14913)
!14942 = !DILocation(line: 336, column: 30, scope: !14913)
!14943 = !DILocation(line: 336, column: 19, scope: !14913)
!14944 = !DILocation(line: 336, column: 28, scope: !14913)
!14945 = !DILocation(line: 337, column: 30, scope: !14913)
!14946 = !DILocation(line: 337, column: 19, scope: !14913)
!14947 = !DILocation(line: 337, column: 28, scope: !14913)
!14948 = !DILocation(line: 338, column: 30, scope: !14913)
!14949 = !DILocation(line: 338, column: 19, scope: !14913)
!14950 = !DILocation(line: 338, column: 28, scope: !14913)
!14951 = !DILocation(line: 339, column: 30, scope: !14913)
!14952 = !DILocation(line: 339, column: 19, scope: !14913)
!14953 = !DILocation(line: 339, column: 28, scope: !14913)
!14954 = !DILocation(line: 341, column: 5, scope: !14913)
!14955 = !DILocation(line: 345, column: 5, scope: !14913)
!14956 = !DILocation(line: 345, column: 19, scope: !14913)
!14957 = !DILocation(line: 345, column: 28, scope: !14913)
!14958 = !DILocation(line: 346, column: 5, scope: !14913)
!14959 = !DILocation(line: 346, column: 28, scope: !14913)
!14960 = !DILocation(line: 346, column: 82, scope: !14913)
!14961 = distinct !{!14961, !14958, !14962}
!14962 = !DILocation(line: 346, column: 87, scope: !14913)
!14963 = !DILocation(line: 347, column: 28, scope: !14913)
!14964 = !DILocation(line: 348, column: 5, scope: !14913)
!14965 = !DILocation(line: 348, column: 28, scope: !14913)
!14966 = !DILocation(line: 348, column: 82, scope: !14913)
!14967 = distinct !{!14967, !14964, !14968}
!14968 = !DILocation(line: 348, column: 87, scope: !14913)
!14969 = !DILocation(line: 349, column: 28, scope: !14913)
!14970 = !DILocation(line: 351, column: 5, scope: !14913)
!14971 = !DILocation(line: 353, column: 5, scope: !14913)
!14972 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2670, file: !2670, line: 358, type: !343, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!14973 = !DILocation(line: 361, column: 36, scope: !14972)
!14974 = !DILocation(line: 361, column: 50, scope: !14972)
!14975 = !DILocation(line: 361, column: 34, scope: !14972)
!14976 = !DILocation(line: 362, column: 50, scope: !14972)
!14977 = !DILocation(line: 362, column: 34, scope: !14972)
!14978 = !DILocation(line: 363, column: 50, scope: !14972)
!14979 = !DILocation(line: 363, column: 34, scope: !14972)
!14980 = !DILocation(line: 364, column: 50, scope: !14972)
!14981 = !DILocation(line: 364, column: 34, scope: !14972)
!14982 = !DILocation(line: 365, column: 50, scope: !14972)
!14983 = !DILocation(line: 365, column: 34, scope: !14972)
!14984 = !DILocation(line: 366, column: 50, scope: !14972)
!14985 = !DILocation(line: 366, column: 34, scope: !14972)
!14986 = !DILocation(line: 367, column: 50, scope: !14972)
!14987 = !DILocation(line: 367, column: 34, scope: !14972)
!14988 = !DILocation(line: 368, column: 50, scope: !14972)
!14989 = !DILocation(line: 368, column: 34, scope: !14972)
!14990 = !DILocation(line: 369, column: 50, scope: !14972)
!14991 = !DILocation(line: 369, column: 34, scope: !14972)
!14992 = !DILocation(line: 370, column: 50, scope: !14972)
!14993 = !DILocation(line: 370, column: 34, scope: !14972)
!14994 = !DILocation(line: 371, column: 50, scope: !14972)
!14995 = !DILocation(line: 371, column: 34, scope: !14972)
!14996 = !DILocation(line: 372, column: 50, scope: !14972)
!14997 = !DILocation(line: 372, column: 34, scope: !14972)
!14998 = !DILocation(line: 373, column: 51, scope: !14972)
!14999 = !DILocation(line: 373, column: 35, scope: !14972)
!15000 = !DILocation(line: 374, column: 51, scope: !14972)
!15001 = !DILocation(line: 374, column: 35, scope: !14972)
!15002 = !DILocation(line: 375, column: 50, scope: !14972)
!15003 = !DILocation(line: 375, column: 34, scope: !14972)
!15004 = !DILocation(line: 376, column: 50, scope: !14972)
!15005 = !DILocation(line: 376, column: 34, scope: !14972)
!15006 = !DILocation(line: 377, column: 50, scope: !14972)
!15007 = !DILocation(line: 377, column: 34, scope: !14972)
!15008 = !DILocation(line: 378, column: 50, scope: !14972)
!15009 = !DILocation(line: 378, column: 34, scope: !14972)
!15010 = !DILocation(line: 379, column: 50, scope: !14972)
!15011 = !DILocation(line: 379, column: 34, scope: !14972)
!15012 = !DILocation(line: 380, column: 50, scope: !14972)
!15013 = !DILocation(line: 380, column: 34, scope: !14972)
!15014 = !DILocation(line: 382, column: 1, scope: !14972)
!15015 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2670, file: !2670, line: 384, type: !343, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!15016 = !DILocation(line: 387, column: 5, scope: !15015)
!15017 = !DILocation(line: 387, column: 27, scope: !15015)
!15018 = !DILocation(line: 387, column: 36, scope: !15015)
!15019 = !DILocation(line: 387, column: 76, scope: !15015)
!15020 = distinct !{!15020, !15016, !15021}
!15021 = !DILocation(line: 387, column: 84, scope: !15015)
!15022 = !DILocation(line: 388, column: 50, scope: !15015)
!15023 = !DILocation(line: 388, column: 19, scope: !15015)
!15024 = !DILocation(line: 388, column: 28, scope: !15015)
!15025 = !DILocation(line: 389, column: 50, scope: !15015)
!15026 = !DILocation(line: 389, column: 19, scope: !15015)
!15027 = !DILocation(line: 389, column: 28, scope: !15015)
!15028 = !DILocation(line: 390, column: 50, scope: !15015)
!15029 = !DILocation(line: 390, column: 19, scope: !15015)
!15030 = !DILocation(line: 390, column: 28, scope: !15015)
!15031 = !DILocation(line: 391, column: 50, scope: !15015)
!15032 = !DILocation(line: 391, column: 19, scope: !15015)
!15033 = !DILocation(line: 391, column: 28, scope: !15015)
!15034 = !DILocation(line: 392, column: 50, scope: !15015)
!15035 = !DILocation(line: 392, column: 19, scope: !15015)
!15036 = !DILocation(line: 392, column: 28, scope: !15015)
!15037 = !DILocation(line: 393, column: 50, scope: !15015)
!15038 = !DILocation(line: 393, column: 19, scope: !15015)
!15039 = !DILocation(line: 393, column: 28, scope: !15015)
!15040 = !DILocation(line: 394, column: 51, scope: !15015)
!15041 = !DILocation(line: 394, column: 19, scope: !15015)
!15042 = !DILocation(line: 394, column: 29, scope: !15015)
!15043 = !DILocation(line: 395, column: 51, scope: !15015)
!15044 = !DILocation(line: 395, column: 19, scope: !15015)
!15045 = !DILocation(line: 395, column: 29, scope: !15015)
!15046 = !DILocation(line: 396, column: 50, scope: !15015)
!15047 = !DILocation(line: 396, column: 19, scope: !15015)
!15048 = !DILocation(line: 396, column: 28, scope: !15015)
!15049 = !DILocation(line: 397, column: 50, scope: !15015)
!15050 = !DILocation(line: 397, column: 19, scope: !15015)
!15051 = !DILocation(line: 397, column: 28, scope: !15015)
!15052 = !DILocation(line: 398, column: 50, scope: !15015)
!15053 = !DILocation(line: 398, column: 19, scope: !15015)
!15054 = !DILocation(line: 398, column: 28, scope: !15015)
!15055 = !DILocation(line: 399, column: 50, scope: !15015)
!15056 = !DILocation(line: 399, column: 19, scope: !15015)
!15057 = !DILocation(line: 399, column: 28, scope: !15015)
!15058 = !DILocation(line: 400, column: 50, scope: !15015)
!15059 = !DILocation(line: 400, column: 19, scope: !15015)
!15060 = !DILocation(line: 400, column: 28, scope: !15015)
!15061 = !DILocation(line: 401, column: 50, scope: !15015)
!15062 = !DILocation(line: 401, column: 19, scope: !15015)
!15063 = !DILocation(line: 401, column: 28, scope: !15015)
!15064 = !DILocation(line: 402, column: 50, scope: !15015)
!15065 = !DILocation(line: 402, column: 19, scope: !15015)
!15066 = !DILocation(line: 402, column: 28, scope: !15015)
!15067 = !DILocation(line: 403, column: 50, scope: !15015)
!15068 = !DILocation(line: 403, column: 19, scope: !15015)
!15069 = !DILocation(line: 403, column: 28, scope: !15015)
!15070 = !DILocation(line: 404, column: 50, scope: !15015)
!15071 = !DILocation(line: 404, column: 19, scope: !15015)
!15072 = !DILocation(line: 404, column: 28, scope: !15015)
!15073 = !DILocation(line: 405, column: 50, scope: !15015)
!15074 = !DILocation(line: 405, column: 19, scope: !15015)
!15075 = !DILocation(line: 405, column: 28, scope: !15015)
!15076 = !DILocation(line: 406, column: 50, scope: !15015)
!15077 = !DILocation(line: 406, column: 19, scope: !15015)
!15078 = !DILocation(line: 406, column: 28, scope: !15015)
!15079 = !DILocation(line: 408, column: 1, scope: !15015)
!15080 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2670, file: !2670, line: 410, type: !343, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!15081 = !DILocation(line: 413, column: 29, scope: !15080)
!15082 = !DILocation(line: 413, column: 43, scope: !15080)
!15083 = !DILocation(line: 413, column: 51, scope: !15080)
!15084 = !DILocation(line: 413, column: 27, scope: !15080)
!15085 = !DILocation(line: 416, column: 19, scope: !15080)
!15086 = !DILocation(line: 416, column: 29, scope: !15080)
!15087 = !DILocation(line: 417, column: 5, scope: !15080)
!15088 = !DILocation(line: 417, column: 27, scope: !15080)
!15089 = !DILocation(line: 417, column: 93, scope: !15080)
!15090 = distinct !{!15090, !15087, !15091}
!15091 = !DILocation(line: 417, column: 98, scope: !15080)
!15092 = !DILocation(line: 418, column: 29, scope: !15080)
!15093 = !DILocation(line: 419, column: 5, scope: !15080)
!15094 = !DILocation(line: 419, column: 27, scope: !15080)
!15095 = !DILocation(line: 419, column: 93, scope: !15080)
!15096 = distinct !{!15096, !15093, !15097}
!15097 = !DILocation(line: 419, column: 98, scope: !15080)
!15098 = !DILocation(line: 421, column: 5, scope: !15080)
!15099 = !DILocation(line: 422, column: 5, scope: !15080)
!15100 = !DILocation(line: 422, column: 19, scope: !15080)
!15101 = !DILocation(line: 422, column: 28, scope: !15080)
!15102 = !DILocation(line: 423, column: 5, scope: !15080)
!15103 = !DILocation(line: 423, column: 28, scope: !15080)
!15104 = !DILocation(line: 423, column: 82, scope: !15080)
!15105 = distinct !{!15105, !15102, !15106}
!15106 = !DILocation(line: 423, column: 87, scope: !15080)
!15107 = !DILocation(line: 424, column: 28, scope: !15080)
!15108 = !DILocation(line: 425, column: 5, scope: !15080)
!15109 = !DILocation(line: 425, column: 28, scope: !15080)
!15110 = !DILocation(line: 425, column: 82, scope: !15080)
!15111 = distinct !{!15111, !15108, !15112}
!15112 = !DILocation(line: 425, column: 87, scope: !15080)
!15113 = !DILocation(line: 426, column: 28, scope: !15080)
!15114 = !DILocation(line: 428, column: 50, scope: !15080)
!15115 = !DILocation(line: 428, column: 19, scope: !15080)
!15116 = !DILocation(line: 428, column: 28, scope: !15080)
!15117 = !DILocation(line: 432, column: 1, scope: !15080)
!15118 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2670, file: !2670, line: 434, type: !343, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!15119 = !DILocation(line: 437, column: 5, scope: !15118)
!15120 = !DILocation(line: 440, column: 5, scope: !15118)
!15121 = !DILocation(line: 440, column: 27, scope: !15118)
!15122 = !DILocation(line: 440, column: 36, scope: !15118)
!15123 = !DILocation(line: 440, column: 76, scope: !15118)
!15124 = distinct !{!15124, !15120, !15125}
!15125 = !DILocation(line: 440, column: 84, scope: !15118)
!15126 = !DILocation(line: 441, column: 45, scope: !15118)
!15127 = !DILocation(line: 441, column: 54, scope: !15118)
!15128 = !DILocation(line: 441, column: 28, scope: !15118)
!15129 = !DILocation(line: 442, column: 19, scope: !15118)
!15130 = !DILocation(line: 442, column: 31, scope: !15118)
!15131 = !DILocation(line: 443, column: 5, scope: !15118)
!15132 = !DILocation(line: 443, column: 27, scope: !15118)
!15133 = !DILocation(line: 443, column: 39, scope: !15118)
!15134 = !DILocation(line: 443, column: 65, scope: !15118)
!15135 = distinct !{!15135, !15131, !15136}
!15136 = !DILocation(line: 443, column: 70, scope: !15118)
!15137 = !DILocation(line: 444, column: 19, scope: !15118)
!15138 = !DILocation(line: 444, column: 28, scope: !15118)
!15139 = !DILocation(line: 445, column: 5, scope: !15118)
!15140 = !DILocation(line: 445, column: 27, scope: !15118)
!15141 = !DILocation(line: 445, column: 91, scope: !15118)
!15142 = distinct !{!15142, !15139, !15143}
!15143 = !DILocation(line: 445, column: 96, scope: !15118)
!15144 = !DILocation(line: 447, column: 43, scope: !15118)
!15145 = !DILocation(line: 447, column: 51, scope: !15118)
!15146 = !DILocation(line: 447, column: 27, scope: !15118)
!15147 = !DILocation(line: 450, column: 1, scope: !15118)
!15148 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2670, file: !2670, line: 452, type: !15149, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !15152)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!1320, !15151}
!15151 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2673, line: 43, baseType: !2672)
!15152 = !{!15153, !15154}
!15153 = !DILocalVariable(name: "clock", arg: 1, scope: !15148, file: !2670, line: 452, type: !15151)
!15154 = !DILocalVariable(name: "delay", scope: !15148, file: !2670, line: 457, type: !60)
!15155 = !DILocation(line: 0, scope: !15148)
!15156 = !DILocation(line: 457, column: 5, scope: !15148)
!15157 = !DILocation(line: 457, column: 23, scope: !15148)
!15158 = !DILocation(line: 458, column: 9, scope: !15148)
!15159 = !DILocation(line: 465, column: 9, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15161, file: !2670, line: 458, column: 39)
!15161 = distinct !DILexicalBlock(scope: !15148, file: !2670, line: 458, column: 9)
!15162 = !DILocation(line: 465, column: 23, scope: !15160)
!15163 = !DILocation(line: 465, column: 32, scope: !15160)
!15164 = !DILocation(line: 466, column: 32, scope: !15160)
!15165 = !DILocation(line: 467, column: 9, scope: !15160)
!15166 = !DILocation(line: 467, column: 32, scope: !15160)
!15167 = !DILocation(line: 467, column: 86, scope: !15160)
!15168 = distinct !{!15168, !15165, !15169}
!15169 = !DILocation(line: 467, column: 91, scope: !15160)
!15170 = !DILocation(line: 468, column: 32, scope: !15160)
!15171 = !DILocation(line: 469, column: 9, scope: !15160)
!15172 = !DILocation(line: 469, column: 32, scope: !15160)
!15173 = !DILocation(line: 469, column: 86, scope: !15160)
!15174 = distinct !{!15174, !15171, !15175}
!15175 = !DILocation(line: 469, column: 91, scope: !15160)
!15176 = !DILocation(line: 470, column: 32, scope: !15160)
!15177 = !DILocation(line: 472, column: 20, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15160, file: !2670, line: 472, column: 9)
!15179 = !DILocation(line: 472, column: 25, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15178, file: !2670, line: 472, column: 9)
!15181 = !DILocation(line: 472, column: 31, scope: !15180)
!15182 = !DILocation(line: 472, column: 9, scope: !15178)
!15183 = !DILocation(line: 472, column: 44, scope: !15180)
!15184 = distinct !{!15184, !15182, !15185}
!15185 = !DILocation(line: 472, column: 47, scope: !15178)
!15186 = !DILocation(line: 478, column: 9, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15188, file: !2670, line: 477, column: 12)
!15188 = distinct !DILexicalBlock(scope: !15161, file: !2670, line: 475, column: 16)
!15189 = !DILocation(line: 483, column: 1, scope: !15148)
!15190 = distinct !DISubprogram(name: "emi_mask_master", scope: !2670, file: !2670, line: 487, type: !343, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!15191 = !DILocation(line: 490, column: 30, scope: !15190)
!15192 = !DILocation(line: 490, column: 44, scope: !15190)
!15193 = !DILocation(line: 490, column: 53, scope: !15190)
!15194 = !DILocation(line: 490, column: 28, scope: !15190)
!15195 = !DILocation(line: 492, column: 1, scope: !15190)
!15196 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2670, file: !2670, line: 494, type: !343, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !345)
!15197 = !DILocation(line: 497, column: 30, scope: !15196)
!15198 = !DILocation(line: 497, column: 44, scope: !15196)
!15199 = !DILocation(line: 497, column: 53, scope: !15196)
!15200 = !DILocation(line: 497, column: 28, scope: !15196)
!15201 = !DILocation(line: 500, column: 1, scope: !15196)
!15202 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2836, file: !2836, line: 56, type: !10902, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !345)
!15203 = !DILocation(line: 61, column: 5, scope: !15202)
!15204 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2836, file: !2836, line: 65, type: !10902, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !345)
!15205 = !DILocation(line: 70, column: 5, scope: !15204)
!15206 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2836, file: !2836, line: 74, type: !343, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !345)
!15207 = !DILocation(line: 79, column: 9, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !2836, line: 78, column: 12)
!15209 = distinct !DILexicalBlock(scope: !15206, file: !2836, line: 76, column: 9)
!15210 = !DILocation(line: 81, column: 1, scope: !15206)
!15211 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2836, file: !2836, line: 83, type: !343, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !345)
!15212 = !DILocation(line: 88, column: 9, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15214, file: !2836, line: 87, column: 12)
!15214 = distinct !DILexicalBlock(scope: !15211, file: !2836, line: 85, column: 9)
!15215 = !DILocation(line: 90, column: 1, scope: !15211)
!15216 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2836, file: !2836, line: 92, type: !343, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !345)
!15217 = !DILocation(line: 97, column: 9, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15219, file: !2836, line: 96, column: 12)
!15219 = distinct !DILexicalBlock(scope: !15216, file: !2836, line: 94, column: 9)
!15220 = !DILocation(line: 99, column: 1, scope: !15216)
!15221 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2836, file: !2836, line: 101, type: !343, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !345)
!15222 = !DILocation(line: 106, column: 9, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15224, file: !2836, line: 105, column: 12)
!15224 = distinct !DILexicalBlock(scope: !15221, file: !2836, line: 103, column: 9)
!15225 = !DILocation(line: 108, column: 1, scope: !15221)
!15226 = distinct !DISubprogram(name: "__io_putchar", scope: !2848, file: !2848, line: 72, type: !15227, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !15229)
!15227 = !DISubroutineType(types: !15228)
!15228 = !{!7, !7}
!15229 = !{!15230}
!15230 = !DILocalVariable(name: "ch", arg: 1, scope: !15226, file: !2848, line: 72, type: !7)
!15231 = !DILocation(line: 0, scope: !15226)
!15232 = !DILocation(line: 79, column: 35, scope: !15226)
!15233 = !DILocation(line: 79, column: 5, scope: !15226)
!15234 = !DILocation(line: 80, column: 5, scope: !15226)
!15235 = distinct !DISubprogram(name: "main", scope: !2848, file: !2848, line: 234, type: !14730, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !345)
!15236 = !DILocation(line: 237, column: 5, scope: !15235)
!15237 = !DILocation(line: 239, column: 5, scope: !15235)
!15238 = !DILocation(line: 242, column: 5, scope: !15235)
!15239 = !DILocation(line: 319, column: 3, scope: !15240, inlinedAt: !15241)
!15240 = distinct !DISubprogram(name: "__enable_irq", scope: !8073, file: !8073, line: 317, type: !343, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !345)
!15241 = distinct !DILocation(line: 245, column: 5, scope: !15235)
!15242 = !{i64 661744}
!15243 = !DILocation(line: 496, column: 3, scope: !15244, inlinedAt: !15245)
!15244 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !8073, file: !8073, line: 494, type: !343, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !345)
!15245 = distinct !DILocation(line: 246, column: 5, scope: !15235)
!15246 = !{i64 666019}
!15247 = !DILocation(line: 249, column: 5, scope: !15235)
!15248 = !DILocation(line: 252, column: 5, scope: !15235)
!15249 = !DILocation(line: 253, column: 5, scope: !15235)
!15250 = !DILocation(line: 255, column: 5, scope: !15235)
!15251 = !DILocation(line: 257, column: 5, scope: !15235)
!15252 = !DILocation(line: 257, column: 5, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !2848, line: 257, column: 5)
!15254 = distinct !DILexicalBlock(scope: !15235, file: !2848, line: 257, column: 5)
!15255 = distinct !{!15255, !15256, !15257}
!15256 = !DILocation(line: 257, column: 5, scope: !15254)
!15257 = !DILocation(line: 257, column: 13, scope: !15254)
!15258 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2848, file: !2848, line: 111, type: !343, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !345)
!15259 = !DILocation(line: 113, column: 5, scope: !15258)
!15260 = !DILocation(line: 114, column: 1, scope: !15258)
!15261 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2848, file: !2848, line: 121, type: !343, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !345)
!15262 = !DILocation(line: 124, column: 5, scope: !15261)
!15263 = !DILocation(line: 125, column: 5, scope: !15261)
!15264 = !DILocation(line: 126, column: 5, scope: !15261)
!15265 = !DILocation(line: 127, column: 1, scope: !15261)
!15266 = distinct !DISubprogram(name: "rtc_set_alarm_example", scope: !2848, file: !2848, line: 177, type: !343, scopeLine: 178, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !15267)
!15267 = !{!15268}
!15268 = !DILocalVariable(name: "rtc_time", scope: !15266, file: !2848, line: 179, type: !15269)
!15269 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_rtc_time_t", file: !106, line: 738, baseType: !15270)
!15270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !106, line: 730, size: 56, elements: !15271)
!15271 = !{!15272, !15273, !15274, !15275, !15276, !15277, !15278}
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_sec", scope: !15270, file: !106, line: 731, baseType: !159, size: 8)
!15273 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_min", scope: !15270, file: !106, line: 732, baseType: !159, size: 8, offset: 8)
!15274 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_hour", scope: !15270, file: !106, line: 733, baseType: !159, size: 8, offset: 16)
!15275 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_day", scope: !15270, file: !106, line: 734, baseType: !159, size: 8, offset: 24)
!15276 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_mon", scope: !15270, file: !106, line: 735, baseType: !159, size: 8, offset: 32)
!15277 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_week", scope: !15270, file: !106, line: 736, baseType: !159, size: 8, offset: 40)
!15278 = !DIDerivedType(tag: DW_TAG_member, name: "rtc_year", scope: !15270, file: !106, line: 737, baseType: !159, size: 8, offset: 48)
!15279 = !DILocation(line: 179, column: 5, scope: !15266)
!15280 = !DILocation(line: 179, column: 20, scope: !15266)
!15281 = !DILocation(line: 181, column: 5, scope: !15266)
!15282 = !DILocation(line: 184, column: 5, scope: !15266)
!15283 = !DILocation(line: 187, column: 5, scope: !15266)
!15284 = !DILocation(line: 188, column: 5, scope: !15266)
!15285 = !DILocation(line: 189, column: 65, scope: !15266)
!15286 = !DILocation(line: 189, column: 56, scope: !15266)
!15287 = !DILocation(line: 190, column: 21, scope: !15266)
!15288 = !DILocation(line: 190, column: 12, scope: !15266)
!15289 = !DILocation(line: 191, column: 21, scope: !15266)
!15290 = !DILocation(line: 191, column: 12, scope: !15266)
!15291 = !DILocation(line: 192, column: 21, scope: !15266)
!15292 = !DILocation(line: 192, column: 12, scope: !15266)
!15293 = !DILocation(line: 193, column: 21, scope: !15266)
!15294 = !DILocation(line: 193, column: 12, scope: !15266)
!15295 = !DILocation(line: 194, column: 21, scope: !15266)
!15296 = !DILocation(line: 194, column: 12, scope: !15266)
!15297 = !DILocation(line: 195, column: 21, scope: !15266)
!15298 = !DILocation(line: 195, column: 12, scope: !15266)
!15299 = !DILocation(line: 189, column: 5, scope: !15266)
!15300 = !DILocation(line: 198, column: 5, scope: !15266)
!15301 = !DILocation(line: 199, column: 5, scope: !15266)
!15302 = !DILocation(line: 200, column: 5, scope: !15266)
!15303 = !DILocation(line: 201, column: 71, scope: !15266)
!15304 = !DILocation(line: 201, column: 62, scope: !15266)
!15305 = !DILocation(line: 202, column: 21, scope: !15266)
!15306 = !DILocation(line: 202, column: 12, scope: !15266)
!15307 = !DILocation(line: 203, column: 21, scope: !15266)
!15308 = !DILocation(line: 203, column: 12, scope: !15266)
!15309 = !DILocation(line: 204, column: 21, scope: !15266)
!15310 = !DILocation(line: 204, column: 12, scope: !15266)
!15311 = !DILocation(line: 205, column: 21, scope: !15266)
!15312 = !DILocation(line: 205, column: 12, scope: !15266)
!15313 = !DILocation(line: 206, column: 21, scope: !15266)
!15314 = !DILocation(line: 206, column: 12, scope: !15266)
!15315 = !DILocation(line: 207, column: 21, scope: !15266)
!15316 = !DILocation(line: 207, column: 12, scope: !15266)
!15317 = !DILocation(line: 201, column: 5, scope: !15266)
!15318 = !DILocation(line: 209, column: 5, scope: !15266)
!15319 = !DILocation(line: 210, column: 5, scope: !15266)
!15320 = !DILocation(line: 211, column: 5, scope: !15266)
!15321 = !DILocation(line: 213, column: 5, scope: !15266)
!15322 = !DILocation(line: 213, column: 12, scope: !15266)
!15323 = !DILocation(line: 213, column: 30, scope: !15266)
!15324 = distinct !{!15324, !15321, !15325}
!15325 = !DILocation(line: 213, column: 35, scope: !15266)
!15326 = !DILocation(line: 214, column: 5, scope: !15266)
!15327 = !DILocation(line: 217, column: 5, scope: !15266)
!15328 = !DILocation(line: 218, column: 5, scope: !15266)
!15329 = !DILocation(line: 219, column: 69, scope: !15266)
!15330 = !DILocation(line: 219, column: 60, scope: !15266)
!15331 = !DILocation(line: 220, column: 21, scope: !15266)
!15332 = !DILocation(line: 220, column: 12, scope: !15266)
!15333 = !DILocation(line: 221, column: 21, scope: !15266)
!15334 = !DILocation(line: 221, column: 12, scope: !15266)
!15335 = !DILocation(line: 222, column: 21, scope: !15266)
!15336 = !DILocation(line: 222, column: 12, scope: !15266)
!15337 = !DILocation(line: 223, column: 21, scope: !15266)
!15338 = !DILocation(line: 223, column: 12, scope: !15266)
!15339 = !DILocation(line: 224, column: 21, scope: !15266)
!15340 = !DILocation(line: 224, column: 12, scope: !15266)
!15341 = !DILocation(line: 225, column: 21, scope: !15266)
!15342 = !DILocation(line: 225, column: 12, scope: !15266)
!15343 = !DILocation(line: 219, column: 5, scope: !15266)
!15344 = !DILocation(line: 227, column: 5, scope: !15266)
!15345 = !DILocation(line: 230, column: 5, scope: !15266)
!15346 = !DILocation(line: 232, column: 1, scope: !15266)
!15347 = distinct !DISubprogram(name: "rtc_fill_time", scope: !2848, file: !2848, line: 161, type: !15348, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !15351)
!15348 = !DISubroutineType(types: !15349)
!15349 = !{null, !15350, !849}
!15350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15269, size: 32)
!15351 = !{!15352, !15353}
!15352 = !DILocalVariable(name: "rtc_time", arg: 1, scope: !15347, file: !2848, line: 161, type: !15350)
!15353 = !DILocalVariable(name: "param", arg: 2, scope: !15347, file: !2848, line: 161, type: !849)
!15354 = !DILocation(line: 0, scope: !15347)
!15355 = !DILocation(line: 163, column: 26, scope: !15347)
!15356 = !DILocation(line: 163, column: 15, scope: !15347)
!15357 = !DILocation(line: 163, column: 24, scope: !15347)
!15358 = !DILocation(line: 164, column: 25, scope: !15347)
!15359 = !DILocation(line: 164, column: 15, scope: !15347)
!15360 = !DILocation(line: 164, column: 23, scope: !15347)
!15361 = !DILocation(line: 165, column: 25, scope: !15347)
!15362 = !DILocation(line: 165, column: 15, scope: !15347)
!15363 = !DILocation(line: 165, column: 23, scope: !15347)
!15364 = !DILocation(line: 166, column: 26, scope: !15347)
!15365 = !DILocation(line: 166, column: 15, scope: !15347)
!15366 = !DILocation(line: 166, column: 24, scope: !15347)
!15367 = !DILocation(line: 167, column: 26, scope: !15347)
!15368 = !DILocation(line: 167, column: 15, scope: !15347)
!15369 = !DILocation(line: 167, column: 24, scope: !15347)
!15370 = !DILocation(line: 168, column: 25, scope: !15347)
!15371 = !DILocation(line: 168, column: 15, scope: !15347)
!15372 = !DILocation(line: 168, column: 23, scope: !15347)
!15373 = !DILocation(line: 169, column: 25, scope: !15347)
!15374 = !DILocation(line: 169, column: 15, scope: !15347)
!15375 = !DILocation(line: 169, column: 23, scope: !15347)
!15376 = !DILocation(line: 170, column: 1, scope: !15347)
!15377 = distinct !DISubprogram(name: "rtc_clear_time", scope: !2848, file: !2848, line: 144, type: !15378, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !15380)
!15378 = !DISubroutineType(types: !15379)
!15379 = !{null, !15350}
!15380 = !{!15381}
!15381 = !DILocalVariable(name: "rtc_time", arg: 1, scope: !15377, file: !2848, line: 144, type: !15350)
!15382 = !DILocation(line: 0, scope: !15377)
!15383 = !DILocation(line: 146, column: 15, scope: !15377)
!15384 = !DILocation(line: 146, column: 24, scope: !15377)
!15385 = !DILocation(line: 147, column: 15, scope: !15377)
!15386 = !DILocation(line: 147, column: 23, scope: !15377)
!15387 = !DILocation(line: 148, column: 15, scope: !15377)
!15388 = !DILocation(line: 148, column: 23, scope: !15377)
!15389 = !DILocation(line: 149, column: 15, scope: !15377)
!15390 = !DILocation(line: 149, column: 24, scope: !15377)
!15391 = !DILocation(line: 150, column: 15, scope: !15377)
!15392 = !DILocation(line: 150, column: 24, scope: !15377)
!15393 = !DILocation(line: 151, column: 15, scope: !15377)
!15394 = !DILocation(line: 151, column: 23, scope: !15377)
!15395 = !DILocation(line: 152, column: 15, scope: !15377)
!15396 = !DILocation(line: 152, column: 23, scope: !15377)
!15397 = !DILocation(line: 153, column: 1, scope: !15377)
!15398 = distinct !DISubprogram(name: "test_rtc_alarm_callback", scope: !2848, file: !2848, line: 134, type: !153, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !15399)
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "parameter", arg: 1, scope: !15398, file: !2848, line: 134, type: !88)
!15401 = !DILocation(line: 0, scope: !15398)
!15402 = !DILocation(line: 136, column: 23, scope: !15398)
!15403 = !DILocation(line: 137, column: 1, scope: !15398)
!15404 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2848, file: !2848, line: 88, type: !343, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !15405)
!15405 = !{!15406}
!15406 = !DILocalVariable(name: "uart_config", scope: !15404, file: !2848, line: 90, type: !15407)
!15407 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !697, line: 378, baseType: !15408)
!15408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 373, size: 128, elements: !15409)
!15409 = !{!15410, !15411, !15412, !15413}
!15410 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !15408, file: !697, line: 374, baseType: !815, size: 32)
!15411 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !15408, file: !697, line: 375, baseType: !817, size: 32, offset: 32)
!15412 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !15408, file: !697, line: 376, baseType: !819, size: 32, offset: 64)
!15413 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !15408, file: !697, line: 377, baseType: !821, size: 32, offset: 96)
!15414 = !DILocation(line: 90, column: 5, scope: !15404)
!15415 = !DILocation(line: 90, column: 23, scope: !15404)
!15416 = !DILocation(line: 93, column: 5, scope: !15404)
!15417 = !DILocation(line: 94, column: 5, scope: !15404)
!15418 = !DILocation(line: 95, column: 5, scope: !15404)
!15419 = !DILocation(line: 96, column: 5, scope: !15404)
!15420 = !DILocation(line: 99, column: 17, scope: !15404)
!15421 = !DILocation(line: 99, column: 26, scope: !15404)
!15422 = !DILocation(line: 100, column: 17, scope: !15404)
!15423 = !DILocation(line: 100, column: 29, scope: !15404)
!15424 = !DILocation(line: 101, column: 17, scope: !15404)
!15425 = !DILocation(line: 101, column: 26, scope: !15404)
!15426 = !DILocation(line: 102, column: 17, scope: !15404)
!15427 = !DILocation(line: 102, column: 24, scope: !15404)
!15428 = !DILocation(line: 103, column: 5, scope: !15404)
!15429 = !DILocation(line: 104, column: 1, scope: !15404)
!15430 = distinct !DISubprogram(name: "_close", scope: !2859, file: !2859, line: 5, type: !15227, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15431)
!15431 = !{!15432}
!15432 = !DILocalVariable(name: "file", arg: 1, scope: !15430, file: !2859, line: 5, type: !7)
!15433 = !DILocation(line: 0, scope: !15430)
!15434 = !DILocation(line: 7, column: 5, scope: !15430)
!15435 = distinct !DISubprogram(name: "_fstat", scope: !2859, file: !2859, line: 10, type: !15436, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15484)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{!7, !7, !15438}
!15438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15439, size: 32)
!15439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !15440, line: 27, size: 704, elements: !15441)
!15440 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!15441 = !{!15442, !15445, !15448, !15451, !15454, !15457, !15460, !15461, !15464, !15474, !15475, !15476, !15479, !15482}
!15442 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15439, file: !15440, line: 29, baseType: !15443, size: 16)
!15443 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2863, line: 161, baseType: !15444)
!15444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2901, line: 56, baseType: !1430)
!15445 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15439, file: !15440, line: 30, baseType: !15446, size: 16, offset: 16)
!15446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2863, line: 139, baseType: !15447)
!15447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2901, line: 75, baseType: !1020)
!15448 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15439, file: !15440, line: 31, baseType: !15449, size: 32, offset: 32)
!15449 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2863, line: 189, baseType: !15450)
!15450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2901, line: 90, baseType: !63)
!15451 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15439, file: !15440, line: 32, baseType: !15452, size: 16, offset: 64)
!15452 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2863, line: 194, baseType: !15453)
!15453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2901, line: 209, baseType: !1020)
!15454 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15439, file: !15440, line: 33, baseType: !15455, size: 16, offset: 80)
!15455 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2863, line: 165, baseType: !15456)
!15456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2901, line: 60, baseType: !1020)
!15457 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15439, file: !15440, line: 34, baseType: !15458, size: 16, offset: 96)
!15458 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2863, line: 169, baseType: !15459)
!15459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2901, line: 63, baseType: !1020)
!15460 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15439, file: !15440, line: 35, baseType: !15443, size: 16, offset: 112)
!15461 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15439, file: !15440, line: 36, baseType: !15462, size: 32, offset: 128)
!15462 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2863, line: 157, baseType: !15463)
!15463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2901, line: 102, baseType: !2917)
!15464 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15439, file: !15440, line: 42, baseType: !15465, size: 128, offset: 192)
!15465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !15466, line: 47, size: 128, elements: !15467)
!15466 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!15467 = !{!15468, !15473}
!15468 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15465, file: !15466, line: 48, baseType: !15469, size: 64)
!15469 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !15470, line: 42, baseType: !15471)
!15470 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!15471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !15472)
!15472 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!15473 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15465, file: !15466, line: 49, baseType: !2902, size: 32, offset: 64)
!15474 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15439, file: !15440, line: 43, baseType: !15465, size: 128, offset: 320)
!15475 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15439, file: !15440, line: 44, baseType: !15465, size: 128, offset: 448)
!15476 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15439, file: !15440, line: 45, baseType: !15477, size: 32, offset: 576)
!15477 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2863, line: 102, baseType: !15478)
!15478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2901, line: 34, baseType: !2902)
!15479 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15439, file: !15440, line: 46, baseType: !15480, size: 32, offset: 608)
!15480 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2863, line: 97, baseType: !15481)
!15481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2901, line: 30, baseType: !2902)
!15482 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !15439, file: !15440, line: 48, baseType: !15483, size: 64, offset: 640)
!15483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2902, size: 64, elements: !508)
!15484 = !{!15485, !15486}
!15485 = !DILocalVariable(name: "file", arg: 1, scope: !15435, file: !2859, line: 10, type: !7)
!15486 = !DILocalVariable(name: "st", arg: 2, scope: !15435, file: !2859, line: 10, type: !15438)
!15487 = !DILocation(line: 0, scope: !15435)
!15488 = !DILocation(line: 12, column: 5, scope: !15435)
!15489 = distinct !DISubprogram(name: "_isatty", scope: !2859, file: !2859, line: 15, type: !15227, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15490)
!15490 = !{!15491}
!15491 = !DILocalVariable(name: "file", arg: 1, scope: !15489, file: !2859, line: 15, type: !7)
!15492 = !DILocation(line: 0, scope: !15489)
!15493 = !DILocation(line: 17, column: 5, scope: !15489)
!15494 = distinct !DISubprogram(name: "_lseek", scope: !2859, file: !2859, line: 20, type: !15495, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15497)
!15495 = !DISubroutineType(types: !15496)
!15496 = !{!7, !7, !7, !7}
!15497 = !{!15498, !15499, !15500}
!15498 = !DILocalVariable(name: "file", arg: 1, scope: !15494, file: !2859, line: 20, type: !7)
!15499 = !DILocalVariable(name: "ptr", arg: 2, scope: !15494, file: !2859, line: 20, type: !7)
!15500 = !DILocalVariable(name: "dir", arg: 3, scope: !15494, file: !2859, line: 20, type: !7)
!15501 = !DILocation(line: 0, scope: !15494)
!15502 = !DILocation(line: 22, column: 5, scope: !15494)
!15503 = distinct !DISubprogram(name: "_open", scope: !2859, file: !2859, line: 25, type: !15504, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15506)
!15504 = !DISubroutineType(types: !15505)
!15505 = !{!7, !165, !7, !7}
!15506 = !{!15507, !15508, !15509}
!15507 = !DILocalVariable(name: "name", arg: 1, scope: !15503, file: !2859, line: 25, type: !165)
!15508 = !DILocalVariable(name: "flags", arg: 2, scope: !15503, file: !2859, line: 25, type: !7)
!15509 = !DILocalVariable(name: "mode", arg: 3, scope: !15503, file: !2859, line: 25, type: !7)
!15510 = !DILocation(line: 0, scope: !15503)
!15511 = !DILocation(line: 27, column: 5, scope: !15503)
!15512 = distinct !DISubprogram(name: "_read", scope: !2859, file: !2859, line: 30, type: !15513, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15515)
!15513 = !DISubroutineType(types: !15514)
!15514 = !{!7, !7, !776, !7}
!15515 = !{!15516, !15517, !15518}
!15516 = !DILocalVariable(name: "file", arg: 1, scope: !15512, file: !2859, line: 30, type: !7)
!15517 = !DILocalVariable(name: "ptr", arg: 2, scope: !15512, file: !2859, line: 30, type: !776)
!15518 = !DILocalVariable(name: "len", arg: 3, scope: !15512, file: !2859, line: 30, type: !7)
!15519 = !DILocation(line: 0, scope: !15512)
!15520 = !DILocation(line: 32, column: 5, scope: !15512)
!15521 = distinct !DISubprogram(name: "_getpid", scope: !2859, file: !2859, line: 48, type: !14730, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !345)
!15522 = !DILocation(line: 50, column: 5, scope: !15521)
!15523 = distinct !DISubprogram(name: "_kill", scope: !2859, file: !2859, line: 56, type: !15524, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15526)
!15524 = !DISubroutineType(types: !15525)
!15525 = !{!7, !7, !7}
!15526 = !{!15527, !15528}
!15527 = !DILocalVariable(name: "pid", arg: 1, scope: !15523, file: !2859, line: 56, type: !7)
!15528 = !DILocalVariable(name: "sig", arg: 2, scope: !15523, file: !2859, line: 56, type: !7)
!15529 = !DILocation(line: 0, scope: !15523)
!15530 = !DILocation(line: 58, column: 5, scope: !15523)
!15531 = distinct !DISubprogram(name: "_exit", scope: !2859, file: !2859, line: 61, type: !15227, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15532)
!15532 = !{!15533}
!15533 = !DILocalVariable(name: "val", arg: 1, scope: !15531, file: !2859, line: 61, type: !7)
!15534 = !DILocation(line: 0, scope: !15531)
!15535 = !DILocation(line: 63, column: 5, scope: !15531)
!15536 = !DILocation(line: 0, scope: !2858)
!15537 = !DILocation(line: 73, column: 5, scope: !2858)
!15538 = !{i64 1127}
!15539 = !DILocation(line: 75, column: 14, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !2858, file: !2859, line: 75, column: 9)
!15541 = !DILocation(line: 75, column: 11, scope: !15540)
!15542 = !DILocation(line: 75, column: 9, scope: !2858)
!15543 = !DILocation(line: 81, column: 32, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !2858, file: !2859, line: 81, column: 9)
!15545 = !DILocation(line: 81, column: 15, scope: !15544)
!15546 = !DILocation(line: 92, column: 1, scope: !2858)
!15547 = !DILocation(line: 81, column: 9, scope: !2858)
!15548 = distinct !DISubprogram(name: "_write", scope: !2859, file: !2859, line: 94, type: !15513, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !15549)
!15549 = !{!15550, !15551, !15552, !15553}
!15550 = !DILocalVariable(name: "file", arg: 1, scope: !15548, file: !2859, line: 94, type: !7)
!15551 = !DILocalVariable(name: "ptr", arg: 2, scope: !15548, file: !2859, line: 94, type: !776)
!15552 = !DILocalVariable(name: "len", arg: 3, scope: !15548, file: !2859, line: 94, type: !7)
!15553 = !DILocalVariable(name: "DataIdx", scope: !15548, file: !2859, line: 96, type: !7)
!15554 = !DILocation(line: 0, scope: !15548)
!15555 = !DILocation(line: 98, column: 31, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15557, file: !2859, line: 98, column: 5)
!15557 = distinct !DILexicalBlock(scope: !15548, file: !2859, line: 98, column: 5)
!15558 = !DILocation(line: 98, column: 5, scope: !15557)
!15559 = !DILocation(line: 99, column: 26, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15556, file: !2859, line: 98, column: 49)
!15561 = !DILocation(line: 99, column: 22, scope: !15560)
!15562 = !DILocation(line: 99, column: 9, scope: !15560)
!15563 = !DILocation(line: 98, column: 45, scope: !15556)
!15564 = distinct !{!15564, !15558, !15565}
!15565 = !DILocation(line: 100, column: 5, scope: !15557)
!15566 = !DILocation(line: 101, column: 5, scope: !15548)
!15567 = distinct !DISubprogram(name: "SysTick_Set", scope: !3061, file: !3061, line: 62, type: !4260, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !15568)
!15568 = !{!15569, !15570}
!15569 = !DILocalVariable(name: "ticks", arg: 1, scope: !15567, file: !3061, line: 62, type: !61)
!15570 = !DILocalVariable(name: "val", scope: !15567, file: !3061, line: 64, type: !61)
!15571 = !DILocation(line: 0, scope: !15567)
!15572 = !DILocation(line: 67, column: 16, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15567, file: !3061, line: 67, column: 9)
!15574 = !DILocation(line: 67, column: 21, scope: !15573)
!15575 = !DILocation(line: 67, column: 9, scope: !15567)
!15576 = !DILocation(line: 72, column: 20, scope: !15567)
!15577 = !DILocation(line: 75, column: 19, scope: !15567)
!15578 = !DILocation(line: 79, column: 20, scope: !15567)
!15579 = !DILocation(line: 80, column: 20, scope: !15567)
!15580 = !DILocation(line: 83, column: 19, scope: !15567)
!15581 = !DILocation(line: 85, column: 5, scope: !15567)
!15582 = !DILocation(line: 86, column: 1, scope: !15567)
!15583 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !3061, file: !3061, line: 95, type: !343, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !345)
!15584 = !DILocation(line: 97, column: 28, scope: !15583)
!15585 = !DILocation(line: 98, column: 1, scope: !15583)
!15586 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !3061, file: !3061, line: 107, type: !4512, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !345)
!15587 = !DILocation(line: 109, column: 12, scope: !15586)
!15588 = !DILocation(line: 109, column: 5, scope: !15586)
!15589 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !3061, file: !3061, line: 119, type: !343, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !15590)
!15590 = !{!15591}
!15591 = !DILocalVariable(name: "cm_mux_sel", scope: !15589, file: !3061, line: 121, type: !159)
!15592 = !DILocation(line: 121, column: 38, scope: !15589)
!15593 = !DILocation(line: 121, column: 26, scope: !15589)
!15594 = !DILocation(line: 0, scope: !15589)
!15595 = !DILocation(line: 123, column: 5, scope: !15589)
!15596 = !DILocation(line: 132, column: 13, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15589, file: !3061, line: 123, column: 25)
!15598 = !DILocation(line: 140, column: 13, scope: !15597)
!15599 = !DILocation(line: 0, scope: !15597)
!15600 = !DILocation(line: 146, column: 26, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15589, file: !3061, line: 146, column: 9)
!15602 = !DILocation(line: 146, column: 50, scope: !15601)
!15603 = !DILocation(line: 146, column: 41, scope: !15601)
!15604 = !DILocation(line: 148, column: 25, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15601, file: !3061, line: 147, column: 52)
!15606 = !DILocation(line: 149, column: 5, scope: !15605)
!15607 = !DILocation(line: 150, column: 1, scope: !15589)
!15608 = distinct !DISubprogram(name: "SystemInit", scope: !3061, file: !3061, line: 158, type: !343, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !345)
!15609 = !DILocation(line: 162, column: 16, scope: !15608)
!15610 = !DILocation(line: 166, column: 16, scope: !15608)
!15611 = !DILocation(line: 169, column: 16, scope: !15608)
!15612 = !DILocation(line: 172, column: 1, scope: !15608)
!15613 = distinct !DISubprogram(name: "CachePreInit", scope: !3061, file: !3061, line: 180, type: !343, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !345)
!15614 = !DILocation(line: 183, column: 22, scope: !15613)
!15615 = !DILocation(line: 186, column: 21, scope: !15613)
!15616 = !DILocation(line: 189, column: 21, scope: !15613)
!15617 = !DILocation(line: 192, column: 29, scope: !15613)
!15618 = !DILocation(line: 193, column: 33, scope: !15613)
!15619 = !DILocation(line: 195, column: 28, scope: !15613)
!15620 = !DILocation(line: 200, column: 30, scope: !15613)
!15621 = !DILocation(line: 214, column: 1, scope: !15613)
