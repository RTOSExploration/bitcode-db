; ModuleID = './build/i2c_control_EEPROM_with_polling.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.i2c_dma_callback_parameter_t = type { i32, i8, i8 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.11 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.11*, %struct.anon.11*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.i2c_transaction_size_t = type { i32, i32, i32, i32, i32 }
%struct.pdma_config_t = type { i8, i32, i32, i32 }
%struct.hal_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%struct.hal_i2c_send_config_t = type { i8, i8*, i32, i32 }
%struct.hal_i2c_send_to_receive_config_ex_t = type { i8, i8*, i8*, i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.11*, %struct.anon.11*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !343
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !626
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !737
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !755
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !769
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !780
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !750
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !781
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !853
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !858
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@s_i2c_master_status = internal global [3 x i8] zeroinitializer, align 1, !dbg !866
@__FUNCTION__.hal_i2c_master_init = private unnamed_addr constant [20 x i8] c"hal_i2c_master_init\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"[I2C%d][init]:busy\0D\0A\00", align 1
@s_i2c_irq_table = internal unnamed_addr constant [3 x i32] [i32 24, i32 25, i32 26], align 4, !dbg !967
@s_i2c_callback = internal unnamed_addr global [3 x void (i8, i32, i8*)*] zeroinitializer, align 4, !dbg !970
@s_i2c_dma_parameter = internal global [3 x %struct.i2c_dma_callback_parameter_t] zeroinitializer, align 4, !dbg !961
@__FUNCTION__.hal_i2c_master_set_frequency = private unnamed_addr constant [29 x i8] c"hal_i2c_master_set_frequency\00", align 1
@.str.1.84 = private unnamed_addr constant [25 x i8] c"[I2C%d][set_freq]:busy\0D\0A\00", align 1
@s_i2c_callback_parameter = internal unnamed_addr global [3 x i8*] zeroinitializer, align 4, !dbg !977
@__FUNCTION__.hal_i2c_master_send_polling = private unnamed_addr constant [28 x i8] c"hal_i2c_master_send_polling\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"[I2C%d][send_polling]:busy\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"[I2C%d][send_polling]:status=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_dma = private unnamed_addr constant [24 x i8] c"hal_i2c_master_send_dma\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"[I2C%d][send_dma]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_receive_polling = private unnamed_addr constant [31 x i8] c"hal_i2c_master_receive_polling\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"[I2C%d][receive_polling]:busy\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"[I2C%d][receive_polling]:status=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_receive_dma = private unnamed_addr constant [27 x i8] c"hal_i2c_master_receive_dma\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"[I2C%d][receive_dma]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_to_receive_polling = private unnamed_addr constant [39 x i8] c"hal_i2c_master_send_to_receive_polling\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"[I2C%d][send2receive_polling]:busy\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"[I2C%d][send2receive_polling]:status=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_to_receive_dma = private unnamed_addr constant [35 x i8] c"hal_i2c_master_send_to_receive_dma\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"[I2C%d][send2receive_dma]:busy\0D\0A\00", align 1
@i2c_dma_callback_count = internal global [3 x i8] zeroinitializer, align 1, !dbg !980
@__FUNCTION__.hal_i2c_master_send_dma_ex = private unnamed_addr constant [27 x i8] c"hal_i2c_master_send_dma_ex\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"[I2C%d][send_dma_enhanced]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_receive_dma_ex = private unnamed_addr constant [30 x i8] c"hal_i2c_master_receive_dma_ex\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"[I2C%d][receive_dma_enhanced]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_to_receive_dma_ex = private unnamed_addr constant [38 x i8] c"hal_i2c_master_send_to_receive_dma_ex\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"[I2C%d][send2receive_dma_enhanced]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_isr_handler = private unnamed_addr constant [20 x i8] c"hal_i2c_isr_handler\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"[I2C%d][isr]:status=%d\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"[I2C%d][isr]:NO isr callback\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_isr = private unnamed_addr constant [19 x i8] c"hal_i2c_master_isr\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"[I2C%d][isr]:port=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_wait_transaction_finish = private unnamed_addr constant [39 x i8] c"hal_i2c_master_wait_transaction_finish\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"[I2C%d][type=%d]:timeout!\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_wait_dma_finish = private unnamed_addr constant [24 x i8] c"hal_i2c_wait_dma_finish\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"[I2C%d][isr]:dma timeout!\0D\0A\00", align 1
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !984
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !1009
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !1014
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !1016
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !1018
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1083
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1173
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1160
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.107 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1178
@.str.117 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.118 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1254
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1256
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1258
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1260
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1262
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1264
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1266
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1268
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1270
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1272
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1274
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1585
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1587
@.str.121 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.122 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1596
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1589
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1597
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1649
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1652
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1685
@nor_egid = dso_local local_unnamed_addr global %struct.anon.11* null, align 4, !dbg !1696
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2012
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1883
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1911
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !2014
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1721
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1907
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1909
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1733
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1994
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1997
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !2027
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1886
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1899
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1870
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1874
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1872
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1723
@.str.137 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.138 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1999
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1878
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1895
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1897
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2054
@.str.143 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.144 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2114
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !2001
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2115
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2129
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2131
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2133
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2135
@.str.159 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.160 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2137
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2191
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2193
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2195
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2207
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2209
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2211
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2213
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2316
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2318
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2320
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2322
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2324
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2326
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2328
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2330
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2332
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2334
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2336
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2338
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2340
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2342
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2314
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2361
@test_length = dso_local global i32 5, align 4, !dbg !2373
@i2c_send_data = dso_local constant [32 x i8] c"\00U\FF\AA\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./", align 1, !dbg !2379
@i2c_receive_data = dso_local global [32 x i8] zeroinitializer, align 1, !dbg !2383
@.str.171 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.172 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.173 = private unnamed_addr constant [34 x i8] c"pls add your own code from here\0D\0A\00", align 1
@.str.3.174 = private unnamed_addr constant [24 x i8] c"\0D\0AI2C test case begin\0D\0A\00", align 1
@.str.4.175 = private unnamed_addr constant [24 x i8] c"I2C initialize failed\0D\0A\00", align 1
@.str.5.176 = private unnamed_addr constant [18 x i8] c"I2C send failed\0D\0A\00", align 1
@.str.6.177 = private unnamed_addr constant [26 x i8] c"I2C deinitialize failed\0D\0A\00", align 1
@.str.7.178 = private unnamed_addr constant [25 x i8] c"I2C initialize2 failed\0D\0A\00", align 1
@.str.8.179 = private unnamed_addr constant [19 x i8] c"I2C send2 failed\0D\0A\00", align 1
@.str.9.180 = private unnamed_addr constant [27 x i8] c"I2C deinitialize2 failed\0D\0A\00", align 1
@.str.10.181 = private unnamed_addr constant [25 x i8] c"I2C initialize3 failed\0D\0A\00", align 1
@.str.11.182 = private unnamed_addr constant [22 x i8] c"I2C receive3 failed\0D\0A\00", align 1
@.str.12.183 = private unnamed_addr constant [27 x i8] c"I2C deinitialize3 failed\0D\0A\00", align 1
@.str.13.184 = private unnamed_addr constant [19 x i8] c"begin compare...\0D\0A\00", align 1
@.str.14.187 = private unnamed_addr constant [18 x i8] c"I2C test failed\0D\0A\00", align 1
@.str.15.185 = private unnamed_addr constant [25 x i8] c"I2C test is successful\0D\0A\00", align 1
@.str.16.186 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2386
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2590
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2698
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:01:06 GMT +00:00\00", align 1, !dbg !2700
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2705
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2711

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2800 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2808
  call void @llvm.dbg.value(metadata i32 %1, metadata !2807, metadata !DIExpression()), !dbg !2809
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2810, !range !2812
  %3 = icmp eq i8 %2, 0, !dbg !2810
  br i1 %3, label %5, label %4, !dbg !2813

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2814
  br label %15, !dbg !2816

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2817
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2819
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2820
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2821
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2822
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2823
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2824
  call void @llvm.dbg.value(metadata i32 0, metadata !2805, metadata !DIExpression()), !dbg !2809
  br label %7, !dbg !2825

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2805, metadata !DIExpression()), !dbg !2809
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2827
  store volatile i32 0, i32* %9, align 4, !dbg !2830
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2831
  store volatile i32 0, i32* %10, align 4, !dbg !2832
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2833
  store i32 0, i32* %11, align 4, !dbg !2834
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2835
  store i32 0, i32* %12, align 4, !dbg !2836
  %13 = add nuw nsw i32 %8, 1, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %13, metadata !2805, metadata !DIExpression()), !dbg !2809
  %14 = icmp eq i32 %13, 16, !dbg !2838
  br i1 %14, label %15, label %7, !dbg !2825, !llvm.loop !2839

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2809
  ret i32 %16, !dbg !2841
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2842 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2845
  call void @llvm.dbg.value(metadata i32 %1, metadata !2844, metadata !DIExpression()), !dbg !2846
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2847
  %3 = and i32 %2, -31, !dbg !2847
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2847
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2848
  %5 = or i32 %4, 19, !dbg !2848
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2848
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2849
  %7 = and i32 %6, -31, !dbg !2849
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2849
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2850
  %9 = or i32 %8, 3, !dbg !2850
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2850
  tail call void asm sideeffect "isb", ""() #22, !dbg !2851, !srcloc !2855
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2856
  ret i32 0, !dbg !2857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2858 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2861
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2862
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2863
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2864
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2865
  call void @llvm.dbg.value(metadata i32 0, metadata !2860, metadata !DIExpression()), !dbg !2866
  br label %2, !dbg !2867

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2860, metadata !DIExpression()), !dbg !2866
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2869
  store volatile i32 0, i32* %4, align 4, !dbg !2872
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2873
  store volatile i32 0, i32* %5, align 4, !dbg !2874
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2875
  store i32 0, i32* %6, align 4, !dbg !2876
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2877
  store i32 0, i32* %7, align 4, !dbg !2878
  %8 = add nuw nsw i32 %3, 1, !dbg !2879
  call void @llvm.dbg.value(metadata i32 %8, metadata !2860, metadata !DIExpression()), !dbg !2866
  %9 = icmp eq i32 %8, 16, !dbg !2880
  br i1 %9, label %10, label %2, !dbg !2867, !llvm.loop !2881

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2883
  ret i32 0, !dbg !2884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2885 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2886
  %2 = and i32 %1, 768, !dbg !2888
  %3 = icmp eq i32 %2, 0, !dbg !2888
  br i1 %3, label %8, label %4, !dbg !2889

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2890
  %6 = or i32 %5, 13, !dbg !2890
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2890
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2891
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2892
  br label %8, !dbg !2893

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2894
  ret i32 %9, !dbg !2895
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2896 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2899
  call void @llvm.dbg.value(metadata i32 %1, metadata !2898, metadata !DIExpression()), !dbg !2900
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2901
  %3 = and i32 %2, 1, !dbg !2903
  %4 = icmp eq i32 %3, 0, !dbg !2903
  br i1 %4, label %7, label %5, !dbg !2904

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2905
  br label %7, !dbg !2907

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2908
  %9 = and i32 %8, -2, !dbg !2908
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2908
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2909
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2910
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2911
  ret i32 0, !dbg !2912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2917, metadata !DIExpression()), !dbg !2918
  %2 = icmp ugt i32 %0, 15, !dbg !2919
  br i1 %2, label %13, label %3, !dbg !2921

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2922
  %5 = load volatile i32, i32* %4, align 4, !dbg !2922
  %6 = and i32 %5, 256, !dbg !2924
  %7 = icmp eq i32 %6, 0, !dbg !2924
  br i1 %7, label %13, label %8, !dbg !2925

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2926
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2928
  %11 = or i32 %10, %9, !dbg !2928
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2928
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2929
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2930
  br label %13, !dbg !2931

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2918
  ret i32 %14, !dbg !2932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2935, metadata !DIExpression()), !dbg !2936
  %2 = icmp ugt i32 %0, 15, !dbg !2937
  br i1 %2, label %11, label %3, !dbg !2939

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2940
  %5 = xor i32 %4, -1, !dbg !2941
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2942
  %7 = and i32 %6, %5, !dbg !2942
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2942
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2943
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2944
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2945
  store i32 0, i32* %9, align 4, !dbg !2946
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2947
  store i32 0, i32* %10, align 4, !dbg !2948
  br label %11, !dbg !2949

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2936
  ret i32 %12, !dbg !2950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2956, metadata !DIExpression()), !dbg !2957
  %2 = icmp ugt i32 %0, 3, !dbg !2958
  br i1 %2, label %13, label %3, !dbg !2960

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2961
  %5 = and i32 %4, -769, !dbg !2961
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2961
  %6 = shl nuw nsw i32 %0, 8, !dbg !2962
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2963
  %8 = or i32 %7, %6, !dbg !2963
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2963
  %9 = icmp eq i32 %0, 0, !dbg !2964
  br i1 %9, label %10, label %11, !dbg !2966

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2967
  br label %11, !dbg !2969

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2970
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2971
  br label %13, !dbg !2972

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2957
  ret i32 %14, !dbg !2973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2985, metadata !DIExpression()), !dbg !2987
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2986, metadata !DIExpression()), !dbg !2987
  %3 = icmp ugt i32 %0, 15, !dbg !2988
  br i1 %3, label %30, label %4, !dbg !2990

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2991
  br i1 %5, label %30, label %6, !dbg !2993

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2994
  %8 = load i32, i32* %7, align 4, !dbg !2994
  %9 = and i32 %8, 4095, !dbg !2996
  %10 = icmp eq i32 %9, 0, !dbg !2996
  br i1 %10, label %12, label %11, !dbg !2997

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2998
  unreachable, !dbg !2998

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !3000
  %14 = load i32, i32* %13, align 4, !dbg !3000
  %15 = and i32 %14, 4095, !dbg !3002
  %16 = icmp eq i32 %15, 0, !dbg !3002
  br i1 %16, label %18, label %17, !dbg !3003

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3004
  unreachable, !dbg !3004

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3006
  store volatile i32 %8, i32* %19, align 4, !dbg !3007
  %20 = load i32, i32* %7, align 4, !dbg !3008
  %21 = load i32, i32* %13, align 4, !dbg !3009
  %22 = add i32 %21, %20, !dbg !3010
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !3011
  store volatile i32 %22, i32* %23, align 4, !dbg !3012
  %24 = load volatile i32, i32* %19, align 4, !dbg !3013
  %25 = or i32 %24, 256, !dbg !3013
  store volatile i32 %25, i32* %19, align 4, !dbg !3013
  %26 = load volatile i32, i32* %19, align 4, !dbg !3014
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3015
  store i32 %26, i32* %27, align 4, !dbg !3016
  %28 = load volatile i32, i32* %23, align 4, !dbg !3017
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3018
  store i32 %28, i32* %29, align 4, !dbg !3019
  br label %30, !dbg !3020

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2987
  ret i32 %31, !dbg !3021
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3026, metadata !DIExpression()), !dbg !3028
  %2 = and i32 %0, 31, !dbg !3029
  %3 = icmp eq i32 %2, 0, !dbg !3029
  br i1 %3, label %4, label %9, !dbg !3031

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3032
  call void @llvm.dbg.value(metadata i32 %5, metadata !3027, metadata !DIExpression()), !dbg !3028
  %6 = and i32 %0, -32, !dbg !3033
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3034
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3035
  %8 = or i32 %7, 5, !dbg !3035
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3035
  tail call void asm sideeffect "isb", ""() #22, !dbg !3036, !srcloc !2855
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3038
  br label %9, !dbg !3039

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3028
  ret i32 %10, !dbg !3040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3045, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.value(metadata i32 %1, metadata !3046, metadata !DIExpression()), !dbg !3049
  %3 = add i32 %1, %0, !dbg !3050
  call void @llvm.dbg.value(metadata i32 %3, metadata !3048, metadata !DIExpression()), !dbg !3049
  %4 = or i32 %1, %0, !dbg !3051
  %5 = and i32 %4, 31, !dbg !3051
  %6 = icmp eq i32 %5, 0, !dbg !3051
  br i1 %6, label %7, label %16, !dbg !3051

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3053
  call void @llvm.dbg.value(metadata i32 %8, metadata !3047, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.value(metadata i32 %0, metadata !3045, metadata !DIExpression()), !dbg !3049
  %9 = icmp ugt i32 %3, %0, !dbg !3054
  br i1 %9, label %10, label %15, !dbg !3055

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3045, metadata !DIExpression()), !dbg !3049
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3056
  %13 = add i32 %11, 32, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %13, metadata !3045, metadata !DIExpression()), !dbg !3049
  %14 = icmp ult i32 %13, %3, !dbg !3054
  br i1 %14, label %10, label %15, !dbg !3055, !llvm.loop !3059

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3061, !srcloc !2855
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3063
  br label %16, !dbg !3064

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3049
  ret i32 %17, !dbg !3065
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3068, metadata !DIExpression()), !dbg !3070
  %2 = and i32 %0, 31, !dbg !3071
  %3 = icmp eq i32 %2, 0, !dbg !3071
  br i1 %3, label %4, label %9, !dbg !3073

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3074
  call void @llvm.dbg.value(metadata i32 %5, metadata !3069, metadata !DIExpression()), !dbg !3070
  %6 = and i32 %0, -32, !dbg !3075
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3076
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3077
  %8 = or i32 %7, 21, !dbg !3077
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3077
  tail call void asm sideeffect "isb", ""() #22, !dbg !3078, !srcloc !2855
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3080
  br label %9, !dbg !3081

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3070
  ret i32 %10, !dbg !3082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3085, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 %1, metadata !3086, metadata !DIExpression()), !dbg !3089
  %3 = add i32 %1, %0, !dbg !3090
  call void @llvm.dbg.value(metadata i32 %3, metadata !3088, metadata !DIExpression()), !dbg !3089
  %4 = or i32 %1, %0, !dbg !3091
  %5 = and i32 %4, 31, !dbg !3091
  %6 = icmp eq i32 %5, 0, !dbg !3091
  br i1 %6, label %7, label %16, !dbg !3091

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3093
  call void @llvm.dbg.value(metadata i32 %8, metadata !3087, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 %0, metadata !3085, metadata !DIExpression()), !dbg !3089
  %9 = icmp ugt i32 %3, %0, !dbg !3094
  br i1 %9, label %10, label %15, !dbg !3095

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3085, metadata !DIExpression()), !dbg !3089
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3096
  %13 = add i32 %11, 32, !dbg !3098
  call void @llvm.dbg.value(metadata i32 %13, metadata !3085, metadata !DIExpression()), !dbg !3089
  %14 = icmp ult i32 %13, %3, !dbg !3094
  br i1 %14, label %10, label %15, !dbg !3095, !llvm.loop !3099

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3101, !srcloc !2855
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3103
  br label %16, !dbg !3104

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3089
  ret i32 %17, !dbg !3105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3106 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %1, metadata !3108, metadata !DIExpression()), !dbg !3110
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3111
  %3 = and i32 %2, -31, !dbg !3111
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3111
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3112
  %5 = or i32 %4, 19, !dbg !3112
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3112
  tail call void asm sideeffect "isb", ""() #22, !dbg !3113, !srcloc !2855
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3115
  ret i32 0, !dbg !3116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3121, metadata !DIExpression()), !dbg !3123
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3124
  %3 = and i32 %2, 8, !dbg !3126
  %4 = icmp eq i32 %3, 0, !dbg !3126
  br i1 %4, label %23, label %5, !dbg !3127

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3122, metadata !DIExpression()), !dbg !3123
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3128
  %8 = shl nuw nsw i32 1, %6, !dbg !3133
  %9 = and i32 %7, %8, !dbg !3134
  %10 = icmp eq i32 %9, 0, !dbg !3134
  br i1 %10, label %20, label %11, !dbg !3135

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3136
  %13 = load volatile i32, i32* %12, align 4, !dbg !3136
  %14 = and i32 %13, -257, !dbg !3139
  %15 = icmp ugt i32 %14, %0, !dbg !3140
  br i1 %15, label %20, label %16, !dbg !3141

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3142
  %18 = load volatile i32, i32* %17, align 4, !dbg !3142
  %19 = icmp ugt i32 %18, %0, !dbg !3143
  br i1 %19, label %23, label %20, !dbg !3144

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3145
  call void @llvm.dbg.value(metadata i32 %21, metadata !3122, metadata !DIExpression()), !dbg !3123
  %22 = icmp eq i32 %21, 16, !dbg !3146
  br i1 %22, label %23, label %5, !dbg !3147, !llvm.loop !3148

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3123
  ret i1 %24, !dbg !3150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3157, metadata !DIExpression()), !dbg !3158
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3159
  br i1 %2, label %3, label %26, !dbg !3161

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3162
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3164
  %6 = load i32, i32* %5, align 4, !dbg !3164
  %7 = icmp eq i32 %6, 1, !dbg !3165
  br i1 %7, label %26, label %8, !dbg !3166

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3167
  %10 = load i8, i8* %9, align 4, !dbg !3167, !range !2812
  %11 = icmp eq i8 %10, 0, !dbg !3167
  br i1 %11, label %12, label %26, !dbg !3168

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3169
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3170
  tail call void @gpt_open_clock_source() #20, !dbg !3171
  store i8 1, i8* %9, align 4, !dbg !3172
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3173
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3173
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3174
  %18 = load volatile i32, i32* %17, align 4, !dbg !3175
  %19 = and i32 %18, -2, !dbg !3175
  store volatile i32 %19, i32* %17, align 4, !dbg !3175
  %20 = shl nuw i32 1, %0, !dbg !3176
  %21 = xor i32 %20, -1, !dbg !3177
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3178
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3179
  %24 = load volatile i32, i32* %23, align 4, !dbg !3180
  %25 = and i32 %24, %21, !dbg !3180
  store volatile i32 %25, i32* %23, align 4, !dbg !3180
  br label %26, !dbg !3181

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3158
  ret i32 %27, !dbg !3182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3187, metadata !DIExpression()), !dbg !3188
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3189, !range !2812
  %3 = icmp ne i8 %2, 0, !dbg !3191
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3192
  %7 = and i1 %5, %6, !dbg !3192
  ret i1 %7, !dbg !3193
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3196, metadata !DIExpression()), !dbg !3197
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3198
  br i1 %2, label %3, label %14, !dbg !3200

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3201
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3203
  %6 = load i32, i32* %5, align 4, !dbg !3203
  %7 = icmp eq i32 %6, 1, !dbg !3204
  br i1 %7, label %14, label %8, !dbg !3205

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3206
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3207
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3208
  store i8 0, i8* %11, align 4, !dbg !3209
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3210
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3210
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3211
  br label %14, !dbg !3212

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3197
  ret i32 %15, !dbg !3213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3219, metadata !DIExpression()), !dbg !3221
  call void @llvm.dbg.value(metadata i32* %1, metadata !3220, metadata !DIExpression()), !dbg !3221
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3222

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3223
  %5 = icmp eq i32 %4, 1, !dbg !3227
  br i1 %5, label %8, label %6, !dbg !3228

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3229
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3231
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3232
  br label %8, !dbg !3233

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3234
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3235
  br label %20, !dbg !3236

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3237
  %13 = icmp eq i32 %12, 1, !dbg !3241
  br i1 %13, label %16, label %14, !dbg !3242

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3243
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3245
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3246
  br label %16, !dbg !3247

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3248
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3249
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3250
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3251
  store i32 %21, i32* %1, align 4, !dbg !3251
  br label %22, !dbg !3252

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3221
  ret i32 %23, !dbg !3253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3258, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.value(metadata i32 %1, metadata !3259, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.value(metadata i32* %2, metadata !3260, metadata !DIExpression()), !dbg !3261
  %4 = icmp eq i32* %2, null, !dbg !3262
  br i1 %4, label %7, label %5, !dbg !3264

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3265
  store i32 %6, i32* %2, align 4, !dbg !3265
  br label %7, !dbg !3267

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3261
  ret i32 %8, !dbg !3268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3274, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32* %1, metadata !3275, metadata !DIExpression()), !dbg !3276
  %3 = icmp ugt i32 %0, 5, !dbg !3277
  br i1 %3, label %7, label %4, !dbg !3279

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3280
  %6 = load i32, i32* %5, align 4, !dbg !3280
  store i32 %6, i32* %1, align 4, !dbg !3281
  br label %7, !dbg !3282

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3276
  ret i32 %8, !dbg !3283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3288, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3289, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata i8* %2, metadata !3290, metadata !DIExpression()), !dbg !3291
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3292
  br i1 %4, label %5, label %18, !dbg !3294

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3295
  %7 = load i32, i32* %6, align 4, !dbg !3295
  %8 = icmp eq i32 %7, 1, !dbg !3297
  br i1 %8, label %18, label %9, !dbg !3298

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3299
  %11 = load i8, i8* %10, align 4, !dbg !3299, !range !2812
  %12 = icmp eq i8 %11, 1, !dbg !3300
  br i1 %12, label %13, label %18, !dbg !3301

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3302
  br i1 %14, label %18, label %15, !dbg !3304

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3305
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3306
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3307
  store i8* %2, i8** %17, align 4, !dbg !3308
  tail call void @gpt_nvic_register() #20, !dbg !3309
  br label %18, !dbg !3310

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3291
  ret i32 %19, !dbg !3311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3312 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3317, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata i32 %1, metadata !3318, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata i32 %2, metadata !3319, metadata !DIExpression()), !dbg !3321
  %5 = bitcast i32* %4 to i8*, !dbg !3322
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3322
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3320, metadata !DIExpression()), !dbg !3323
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3324
  br i1 %6, label %7, label %51, !dbg !3326

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3327
  %9 = load i32, i32* %8, align 4, !dbg !3327
  %10 = icmp eq i32 %9, 1, !dbg !3329
  br i1 %10, label %51, label %11, !dbg !3330

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3331
  %13 = load i8, i8* %12, align 4, !dbg !3331, !range !2812
  %14 = icmp eq i8 %13, 1, !dbg !3332
  br i1 %14, label %15, label %51, !dbg !3333

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3334
  br i1 %16, label %51, label %17, !dbg !3336

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3337
  store volatile i32 %18, i32* %4, align 4, !dbg !3338
  tail call void @gpt_open_clock_source() #20, !dbg !3339
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3340
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3340
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3341
  %22 = load volatile i32, i32* %21, align 4, !dbg !3342
  %23 = and i32 %22, -2, !dbg !3342
  store volatile i32 %23, i32* %21, align 4, !dbg !3342
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3343
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3344
  %26 = load volatile i32, i32* %25, align 4, !dbg !3345
  %27 = and i32 %26, -2, !dbg !3345
  store volatile i32 %27, i32* %25, align 4, !dbg !3345
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3346
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3347
  store volatile i32 16, i32* %29, align 4, !dbg !3348
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3349
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3350
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3351
  store volatile i32 %30, i32* %32, align 4, !dbg !3352
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3353
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3354
  store volatile i32 1, i32* %34, align 4, !dbg !3355
  %35 = shl i32 %2, 4, !dbg !3356
  %36 = or i32 %35, 2, !dbg !3357
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3358
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3359
  store volatile i32 %36, i32* %38, align 4, !dbg !3360
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3361

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3362
  %43 = icmp eq i32 %42, 0, !dbg !3361
  br i1 %43, label %44, label %41, !dbg !3361, !llvm.loop !3363

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3365
  %46 = load volatile i32, i32* %45, align 4, !dbg !3366
  %47 = or i32 %46, 1, !dbg !3366
  store volatile i32 %47, i32* %45, align 4, !dbg !3366
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3367
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3368
  store volatile i32 1, i32* %49, align 4, !dbg !3369
  store i32 1, i32* %8, align 4, !dbg !3370
  %50 = load volatile i32, i32* %4, align 4, !dbg !3371
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3372
  br label %51, !dbg !3373

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3321
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3374
  ret i32 %52, !dbg !3374
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3379, metadata !DIExpression()), !dbg !3380
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3381
  %3 = icmp eq i32 %2, 1, !dbg !3383
  br i1 %3, label %6, label %4, !dbg !3384

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3385
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3387
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3388
  br label %6, !dbg !3389

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3390
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3391
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3392
  ret i32 0, !dbg !3393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3394 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3396, metadata !DIExpression()), !dbg !3400
  call void @llvm.dbg.value(metadata i32 %1, metadata !3397, metadata !DIExpression()), !dbg !3400
  call void @llvm.dbg.value(metadata i32 %2, metadata !3398, metadata !DIExpression()), !dbg !3400
  %5 = bitcast i32* %4 to i8*, !dbg !3401
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3401
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3399, metadata !DIExpression()), !dbg !3402
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3403
  br i1 %6, label %7, label %50, !dbg !3405

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3406
  %9 = load i32, i32* %8, align 4, !dbg !3406
  %10 = icmp eq i32 %9, 1, !dbg !3408
  br i1 %10, label %50, label %11, !dbg !3409

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3410
  %13 = load i8, i8* %12, align 4, !dbg !3410, !range !2812
  %14 = icmp eq i8 %13, 1, !dbg !3411
  br i1 %14, label %15, label %50, !dbg !3412

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3413
  store i8 1, i8* %16, align 1, !dbg !3414
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3415
  store volatile i32 %17, i32* %4, align 4, !dbg !3416
  tail call void @gpt_open_clock_source() #20, !dbg !3417
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3418
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3418
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3419
  %21 = load volatile i32, i32* %20, align 4, !dbg !3420
  %22 = and i32 %21, -2, !dbg !3420
  store volatile i32 %22, i32* %20, align 4, !dbg !3420
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3421
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3422
  %25 = load volatile i32, i32* %24, align 4, !dbg !3423
  %26 = and i32 %25, -2, !dbg !3423
  store volatile i32 %26, i32* %24, align 4, !dbg !3423
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3424
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3425
  store volatile i32 12, i32* %28, align 4, !dbg !3426
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3427
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3428
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3429
  store volatile i32 %29, i32* %31, align 4, !dbg !3430
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3431
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3432
  store volatile i32 1, i32* %33, align 4, !dbg !3433
  %34 = shl i32 %2, 4, !dbg !3434
  %35 = or i32 %34, 2, !dbg !3435
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3436
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3437
  store volatile i32 %35, i32* %37, align 4, !dbg !3438
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3439

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3440
  %42 = icmp eq i32 %41, 0, !dbg !3439
  br i1 %42, label %43, label %40, !dbg !3439, !llvm.loop !3441

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3443
  %45 = load volatile i32, i32* %44, align 4, !dbg !3444
  %46 = or i32 %45, 1, !dbg !3444
  store volatile i32 %46, i32* %44, align 4, !dbg !3444
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3445
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3446
  store volatile i32 1, i32* %48, align 4, !dbg !3447
  %49 = load volatile i32, i32* %4, align 4, !dbg !3448
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3449
  store i32 1, i32* %8, align 4, !dbg !3450
  br label %50, !dbg !3451

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3400
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3452
  ret i32 %51, !dbg !3452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3455, metadata !DIExpression()), !dbg !3456
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3457
  %3 = icmp eq i32 %2, 1, !dbg !3459
  br i1 %3, label %6, label %4, !dbg !3460

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3461
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3463
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3464
  br label %6, !dbg !3465

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3466
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3467
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3468
  ret i32 0, !dbg !3469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3470 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3472, metadata !DIExpression()), !dbg !3474
  %3 = bitcast i32* %2 to i8*, !dbg !3475
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3475
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3473, metadata !DIExpression()), !dbg !3476
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3477
  br i1 %4, label %5, label %24, !dbg !3479

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3480
  store volatile i32 %6, i32* %2, align 4, !dbg !3481
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3482
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3482
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3483
  %10 = load volatile i32, i32* %9, align 4, !dbg !3484
  %11 = and i32 %10, -2, !dbg !3484
  store volatile i32 %11, i32* %9, align 4, !dbg !3484
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3485
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3486
  %14 = load volatile i32, i32* %13, align 4, !dbg !3487
  %15 = and i32 %14, -2, !dbg !3487
  store volatile i32 %15, i32* %13, align 4, !dbg !3487
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3488
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3489
  store volatile i32 1, i32* %17, align 4, !dbg !3490
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3491
  store i32 0, i32* %18, align 4, !dbg !3492
  %19 = load volatile i32, i32* %2, align 4, !dbg !3493
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3494
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3495
  %21 = load i8, i8* %20, align 1, !dbg !3495, !range !2812
  %22 = icmp eq i8 %21, 0, !dbg !3495
  br i1 %22, label %24, label %23, !dbg !3497

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3498
  br label %24, !dbg !3500

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3474
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3501
  ret i32 %25, !dbg !3501
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3502 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3506, metadata !DIExpression()), !dbg !3509
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3510
  %3 = icmp ugt i32 %2, 31, !dbg !3512
  br i1 %3, label %13, label %4, !dbg !3513

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3514
  br i1 %5, label %13, label %6, !dbg !3516

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3517
  call void @llvm.dbg.value(metadata i32 %7, metadata !3508, metadata !DIExpression()), !dbg !3509
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3518
  call void @llvm.dbg.value(metadata i32 %8, metadata !3507, metadata !DIExpression()), !dbg !3509
  %9 = or i32 %8, -559087616, !dbg !3519
  store i32 %9, i32* %0, align 4, !dbg !3520
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3521
  store i8 1, i8* %10, align 4, !dbg !3522
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3523
  %12 = add i32 %11, 1, !dbg !3523
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3523
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3524
  br label %13, !dbg !3525

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3509
  ret i32 %14, !dbg !3526
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3527 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3529, metadata !DIExpression()), !dbg !3531
  %3 = bitcast i32* %2 to i8*, !dbg !3532
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3532
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3530, metadata !DIExpression()), !dbg !3533
  %4 = and i32 %0, -559087616, !dbg !3534
  %5 = icmp eq i32 %4, -559087616, !dbg !3536
  br i1 %5, label %6, label %24, !dbg !3537

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3538
  store volatile i32 %7, i32* %2, align 4, !dbg !3539
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3540
  %9 = icmp eq i32 %8, 0, !dbg !3542
  br i1 %9, label %24, label %10, !dbg !3543

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3544
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3546
  %13 = load i8, i8* %12, align 1, !dbg !3546, !range !2812
  %14 = icmp eq i8 %13, 0, !dbg !3546
  br i1 %14, label %15, label %24, !dbg !3547

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3548
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3550
  %18 = load i8, i8* %17, align 4, !dbg !3550, !range !2812
  %19 = icmp eq i8 %18, 1, !dbg !3551
  br i1 %19, label %20, label %24, !dbg !3552

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3553
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3554
  store i8 0, i8* %22, align 4, !dbg !3555
  %23 = add i32 %8, -1, !dbg !3556
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3556
  br label %24, !dbg !3557

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3531
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3558
  ret i32 %25, !dbg !3558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3563, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i32 %1, metadata !3564, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3565, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i8* %3, metadata !3566, metadata !DIExpression()), !dbg !3570
  %5 = and i32 %0, -559087616, !dbg !3571
  %6 = icmp ne i32 %5, -559087616, !dbg !3573
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %0, metadata !3569, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3570
  br i1 %8, label %44, label %9, !dbg !3574

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %10, metadata !3569, metadata !DIExpression()), !dbg !3570
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3576
  %12 = load i8, i8* %11, align 1, !dbg !3576, !range !2812
  %13 = icmp eq i8 %12, 0, !dbg !3576
  br i1 %13, label %14, label %44, !dbg !3578

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3579
  %16 = load i8, i8* %15, align 4, !dbg !3579, !range !2812
  %17 = icmp eq i8 %16, 1, !dbg !3581
  br i1 %17, label %18, label %44, !dbg !3582

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3583
  br i1 %19, label %44, label %20, !dbg !3585

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %21, metadata !3568, metadata !DIExpression()), !dbg !3570
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3587
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3588, !range !2812
  %23 = icmp eq i8 %22, 0, !dbg !3590
  br i1 %23, label %24, label %27, !dbg !3591

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3592
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3594
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3595
  br label %27, !dbg !3596

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3597
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3598, !range !2812
  %30 = icmp eq i8 %29, 0, !dbg !3600
  br i1 %30, label %31, label %34, !dbg !3601

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3602
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %33, metadata !3567, metadata !DIExpression()), !dbg !3570
  br label %34, !dbg !3605

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3606
  call void @llvm.dbg.value(metadata i32 %35, metadata !3567, metadata !DIExpression()), !dbg !3570
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3607
  %37 = add i32 %36, %35, !dbg !3607
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3607
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3608
  %39 = add i32 %38, 1, !dbg !3608
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3608
  store i8 1, i8* %11, align 1, !dbg !3609
  %40 = add i32 %37, %1, !dbg !3610
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3611
  store i32 %40, i32* %41, align 4, !dbg !3612
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3613
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3614
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3615
  store i8* %3, i8** %43, align 4, !dbg !3616
  tail call void @gpt_sw_start_timer() #20, !dbg !3617
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3618
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3619
  br label %44, !dbg !3620

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3570
  ret i32 %45, !dbg !3621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3624, metadata !DIExpression()), !dbg !3628
  %2 = and i32 %0, -559087616, !dbg !3629
  %3 = icmp eq i32 %2, -559087616, !dbg !3631
  br i1 %3, label %4, label %31, !dbg !3632

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %5, metadata !3627, metadata !DIExpression()), !dbg !3628
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3634
  %7 = load i8, i8* %6, align 1, !dbg !3634, !range !2812
  %8 = icmp eq i8 %7, 1, !dbg !3636
  br i1 %8, label %9, label %31, !dbg !3637

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3638
  %11 = load i8, i8* %10, align 4, !dbg !3638, !range !2812
  %12 = icmp eq i8 %11, 1, !dbg !3640
  br i1 %12, label %13, label %31, !dbg !3641

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3642
  call void @llvm.dbg.value(metadata i32 %14, metadata !3626, metadata !DIExpression()), !dbg !3628
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3643
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3644
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3645
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3646, !range !2812
  %17 = icmp eq i8 %16, 0, !dbg !3648
  br i1 %17, label %18, label %21, !dbg !3649

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3650
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %20, metadata !3625, metadata !DIExpression()), !dbg !3628
  br label %21, !dbg !3653

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3654
  call void @llvm.dbg.value(metadata i32 %22, metadata !3625, metadata !DIExpression()), !dbg !3628
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3655
  %24 = add i32 %23, %22, !dbg !3655
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3655
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3656
  %26 = add i32 %25, -1, !dbg !3656
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3656
  store i8 0, i8* %6, align 1, !dbg !3657
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3658
  %28 = icmp eq i32 %27, 0, !dbg !3660
  br i1 %28, label %30, label %29, !dbg !3661

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3662
  br label %30, !dbg !3664

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3665
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3666
  br label %31, !dbg !3667

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3628
  ret i32 %32, !dbg !3668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3673, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i32* %1, metadata !3674, metadata !DIExpression()), !dbg !3678
  %3 = and i32 %0, -559087616, !dbg !3679
  %4 = icmp eq i32 %3, -559087616, !dbg !3681
  br i1 %4, label %5, label %20, !dbg !3682

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3683
  call void @llvm.dbg.value(metadata i32 %6, metadata !3677, metadata !DIExpression()), !dbg !3678
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3684
  %8 = load i8, i8* %7, align 4, !dbg !3684, !range !2812
  %9 = icmp eq i8 %8, 1, !dbg !3686
  br i1 %9, label %10, label %20, !dbg !3687

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %11, metadata !3676, metadata !DIExpression()), !dbg !3678
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3689
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3690
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3691
  %15 = load volatile i32, i32* %14, align 4, !dbg !3691
  %16 = add i32 %15, %12, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %16, metadata !3675, metadata !DIExpression()), !dbg !3678
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3693
  %18 = load i32, i32* %17, align 4, !dbg !3693
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3695
  store i32 %19, i32* %1, align 4, !dbg !3696
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3697
  br label %20, !dbg !3698

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3678
  ret i32 %21, !dbg !3699
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3704, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 %1, metadata !3705, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 %2, metadata !3706, metadata !DIExpression()), !dbg !3711
  %4 = and i32 %0, 65535, !dbg !3712
  %5 = mul i32 %4, %1, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %5, metadata !3707, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3711
  %6 = lshr i32 %0, 16, !dbg !3714
  %7 = mul i32 %6, %1, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %7, metadata !3707, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3711
  %8 = and i32 %5, 65535, !dbg !3716
  call void @llvm.dbg.value(metadata i32 %8, metadata !3709, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3711
  %9 = lshr i32 %5, 16, !dbg !3717
  %10 = add i32 %9, %7, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %10, metadata !3709, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3711
  %11 = udiv i32 %10, %2, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %11, metadata !3710, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3711
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3720
  %15 = or i32 %14, %8, !dbg !3721
  %16 = udiv i32 %15, %2, !dbg !3722
  call void @llvm.dbg.value(metadata i32 %16, metadata !3710, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3711
  %17 = shl i32 %11, 16, !dbg !3723
  %18 = add i32 %16, %17, !dbg !3724
  ret i32 %18, !dbg !3725
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3726 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3730, metadata !DIExpression()), !dbg !3731
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3732
  %3 = load volatile i32, i32* %2, align 4, !dbg !3732
  ret i32 %3, !dbg !3733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3738, metadata !DIExpression()), !dbg !3739
  %2 = shl i32 %0, 5, !dbg !3740
  %3 = mul i32 %0, 7, !dbg !3741
  %4 = udiv i32 %3, 10, !dbg !3742
  %5 = add i32 %4, %2, !dbg !3743
  %6 = mul i32 %0, 6, !dbg !3744
  %7 = udiv i32 %6, 100, !dbg !3745
  %8 = add i32 %5, %7, !dbg !3746
  %9 = shl i32 %0, 3, !dbg !3747
  %10 = udiv i32 %9, 1000, !dbg !3748
  %11 = add i32 %8, %10, !dbg !3749
  ret i32 %11, !dbg !3750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3751
  br i1 %1, label %10, label %2, !dbg !3753

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3754
  br i1 %3, label %4, label %6, !dbg !3757

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3758
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3760
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3761

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3763
  br label %8, !dbg !3763

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3763
  br label %10, !dbg !3764

10:                                               ; preds = %8, %0
  ret void, !dbg !3764
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3765 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3766
  br i1 %1, label %4, label %2, !dbg !3768

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3769
  br label %4, !dbg !3771

4:                                                ; preds = %2, %0
  ret void, !dbg !3772
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3775, metadata !DIExpression()), !dbg !3776
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3777
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3778
  br i1 %2, label %3, label %6, !dbg !3780

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3781
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3783
  br label %6, !dbg !3784

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3785
  ret i32 %7, !dbg !3786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3789, metadata !DIExpression()), !dbg !3790
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3791
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3792
  br i1 %2, label %3, label %6, !dbg !3794

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3795
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3797
  br label %6, !dbg !3798

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3799
  ret i32 %7, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3801 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3805, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata i32 %2, metadata !3807, metadata !DIExpression()), !dbg !3808
  tail call void @gpt_open_clock_source() #21, !dbg !3809
  %4 = or i32 %2, %1, !dbg !3810
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3811
  store volatile i32 %4, i32* %5, align 4, !dbg !3812
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3813
  store volatile i32 49, i32* %6, align 4, !dbg !3814
  ret void, !dbg !3815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3816 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3820, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i32 %1, metadata !3821, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i32 0, metadata !3822, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i32 0, metadata !3823, metadata !DIExpression()), !dbg !3824
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %3, metadata !3823, metadata !DIExpression()), !dbg !3824
  %4 = add i32 %1, 1, !dbg !3826
  %5 = add i32 %4, %3, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %5, metadata !3822, metadata !DIExpression()), !dbg !3824
  %6 = icmp ugt i32 %5, %3, !dbg !3828
  br i1 %6, label %7, label %10, !dbg !3830

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3831
  %9 = icmp ult i32 %8, %5, !dbg !3833
  br i1 %9, label %7, label %16, !dbg !3834, !llvm.loop !3835

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3837
  %12 = icmp ult i32 %11, %3, !dbg !3839
  br i1 %12, label %13, label %10, !dbg !3840, !llvm.loop !3841

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3843
  %15 = icmp ult i32 %14, %5, !dbg !3844
  br i1 %15, label %13, label %16, !dbg !3845, !llvm.loop !3846

16:                                               ; preds = %13, %7
  ret void, !dbg !3848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3849 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3853, metadata !DIExpression()), !dbg !3854
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3855
  store volatile i32 0, i32* %2, align 4, !dbg !3856
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3857
  store volatile i32 0, i32* %3, align 4, !dbg !3858
  %4 = load volatile i32, i32* %3, align 4, !dbg !3859
  %5 = or i32 %4, 2, !dbg !3859
  store volatile i32 %5, i32* %3, align 4, !dbg !3859
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3860

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3861
  %9 = icmp eq i32 %8, 0, !dbg !3860
  br i1 %9, label %10, label %7, !dbg !3860, !llvm.loop !3862

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3864
  store volatile i32 16, i32* %11, align 4, !dbg !3865
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3866
  store volatile i32 1, i32* %12, align 4, !dbg !3867
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3868
  store volatile i32 -1, i32* %13, align 4, !dbg !3869
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3870
  br i1 %14, label %15, label %16, !dbg !3872

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3873
  br label %16, !dbg !3875

16:                                               ; preds = %15, %10
  ret void, !dbg !3876
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3877 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3879, metadata !DIExpression()), !dbg !3881
  %3 = bitcast i32* %2 to i8*, !dbg !3882
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3882
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3880, metadata !DIExpression()), !dbg !3883
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3884
  %5 = load volatile i32, i32* %4, align 4, !dbg !3884
  store volatile i32 %5, i32* %2, align 4, !dbg !3885
  %6 = load volatile i32, i32* %4, align 4, !dbg !3886
  %7 = and i32 %6, -2, !dbg !3886
  store volatile i32 %7, i32* %4, align 4, !dbg !3886
  %8 = load volatile i32, i32* %2, align 4, !dbg !3887
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3888
  ret i32 %8, !dbg !3889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3894, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i32 %1, metadata !3895, metadata !DIExpression()), !dbg !3896
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3897
  store volatile i32 %1, i32* %3, align 4, !dbg !3898
  ret void, !dbg !3899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3900 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3902, metadata !DIExpression()), !dbg !3907
  %5 = bitcast i32* %2 to i8*, !dbg !3908
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3908
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3904, metadata !DIExpression()), !dbg !3909
  %6 = bitcast i32* %3 to i8*, !dbg !3910
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3910
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3905, metadata !DIExpression()), !dbg !3911
  %7 = bitcast i32* %4 to i8*, !dbg !3912
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3912
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3906, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 undef, metadata !3902, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 0, metadata !3903, metadata !DIExpression()), !dbg !3907
  br label %8, !dbg !3914

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3903, metadata !DIExpression()), !dbg !3907
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3916
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3916
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3919
  %13 = load volatile i32, i32* %12, align 4, !dbg !3919
  store volatile i32 %13, i32* %3, align 4, !dbg !3920
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3921
  %15 = load volatile i32, i32* %14, align 4, !dbg !3921
  store volatile i32 %15, i32* %4, align 4, !dbg !3922
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3923
  store volatile i32 %16, i32* %2, align 4, !dbg !3924
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3925
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3926
  store volatile i32 1, i32* %18, align 4, !dbg !3927
  %19 = load volatile i32, i32* %3, align 4, !dbg !3928
  %20 = and i32 %19, 1, !dbg !3930
  %21 = icmp eq i32 %20, 0, !dbg !3930
  br i1 %21, label %33, label %22, !dbg !3931

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3932
  %24 = and i32 %23, 1, !dbg !3933
  %25 = icmp eq i32 %24, 0, !dbg !3933
  br i1 %25, label %33, label %26, !dbg !3934

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3935
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3935
  %29 = icmp eq void (i8*)* %28, null, !dbg !3938
  br i1 %29, label %33, label %30, !dbg !3939

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3940
  %32 = load i8*, i8** %31, align 4, !dbg !3940
  tail call void %28(i8* noundef %32) #20, !dbg !3942
  br label %33, !dbg !3943

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3944
  %35 = load volatile i32, i32* %2, align 4, !dbg !3945
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3946
  %36 = add nuw nsw i32 %9, 1, !dbg !3947
  call void @llvm.dbg.value(metadata i32 %36, metadata !3903, metadata !DIExpression()), !dbg !3907
  %37 = icmp eq i32 %36, 6, !dbg !3948
  br i1 %37, label %38, label %8, !dbg !3914, !llvm.loop !3949

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3951
  ret void, !dbg !3951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3952 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3953
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3954
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3955
  ret void, !dbg !3956
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3957 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3959, metadata !DIExpression()), !dbg !3964
  %3 = bitcast i32* %2 to i8*, !dbg !3965
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3965
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3960, metadata !DIExpression()), !dbg !3966
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3967
  call void @llvm.dbg.value(metadata i32 %4, metadata !3961, metadata !DIExpression()), !dbg !3964
  %5 = lshr i32 %4, 15, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %5, metadata !3962, metadata !DIExpression()), !dbg !3964
  %6 = and i32 %4, 32767, !dbg !3969
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3970
  %8 = add nuw nsw i32 %7, 16384, !dbg !3971
  %9 = lshr i32 %8, 15, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %9, metadata !3963, metadata !DIExpression()), !dbg !3964
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3973
  %11 = add nuw nsw i32 %9, %10, !dbg !3974
  store volatile i32 %11, i32* %2, align 4, !dbg !3975
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3976
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3977
  %14 = load volatile i32, i32* %13, align 4, !dbg !3978
  %15 = or i32 %14, 2, !dbg !3978
  store volatile i32 %15, i32* %13, align 4, !dbg !3978
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3979

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3980
  %20 = icmp eq i32 %19, 0, !dbg !3979
  br i1 %20, label %21, label %18, !dbg !3979, !llvm.loop !3981

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3984
  ret i32 %22, !dbg !3985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3986 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3990, metadata !DIExpression()), !dbg !3991
  br label %1, !dbg !3992

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3990, metadata !DIExpression()), !dbg !3991
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3994
  %4 = load i8, i8* %3, align 4, !dbg !3994, !range !2812
  %5 = icmp eq i8 %4, 1, !dbg !3998
  br i1 %5, label %6, label %9, !dbg !3999

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %7, metadata !3990, metadata !DIExpression()), !dbg !3991
  %8 = icmp eq i32 %7, 32, !dbg !4001
  br i1 %8, label %9, label %1, !dbg !3992, !llvm.loop !4002

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3991
  ret i32 %10, !dbg !4004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4005 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4009
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4009
  %4 = bitcast i32* %2 to i8*, !dbg !4009
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4009
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4010, !range !2812
  %6 = icmp eq i8 %5, 0, !dbg !4010
  br i1 %6, label %7, label %11, !dbg !4012

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4007, metadata !DIExpression(DW_OP_deref)), !dbg !4013
  call void @llvm.dbg.value(metadata i32* %2, metadata !4008, metadata !DIExpression(DW_OP_deref)), !dbg !4013
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !4014
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4015
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4016
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4017
  %9 = load i32, i32* %1, align 4, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %9, metadata !4007, metadata !DIExpression()), !dbg !4013
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !4019
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4020
  br label %11, !dbg !4021

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4021
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4021
  ret void, !dbg !4021
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !4022 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4026, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i32* %1, metadata !4027, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i32 -1, metadata !4029, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i32 0, metadata !4028, metadata !DIExpression()), !dbg !4031
  br label %3, !dbg !4032

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4028, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i32 %5, metadata !4029, metadata !DIExpression()), !dbg !4031
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4034
  %7 = load i8, i8* %6, align 1, !dbg !4034, !range !2812
  %8 = icmp eq i8 %7, 0, !dbg !4034
  br i1 %8, label %13, label %9, !dbg !4038

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %10, metadata !4030, metadata !DIExpression()), !dbg !4031
  %11 = icmp ult i32 %10, %5, !dbg !4041
  br i1 %11, label %12, label %13, !dbg !4043

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4029, metadata !DIExpression()), !dbg !4031
  store i32 %4, i32* %1, align 4, !dbg !4044
  br label %13, !dbg !4046

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4031
  call void @llvm.dbg.value(metadata i32 %14, metadata !4029, metadata !DIExpression()), !dbg !4031
  %15 = add nuw nsw i32 %4, 1, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %15, metadata !4028, metadata !DIExpression()), !dbg !4031
  %16 = icmp eq i32 %15, 32, !dbg !4048
  br i1 %16, label %17, label %3, !dbg !4032, !llvm.loop !4049

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4051
  ret void, !dbg !4052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4055, metadata !DIExpression()), !dbg !4059
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4060
  %3 = load i32, i32* %2, align 4, !dbg !4060
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4060
  %5 = sub i32 %3, %4, !dbg !4060
  call void @llvm.dbg.value(metadata i32 %5, metadata !4056, metadata !DIExpression()), !dbg !4059
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4061
  %7 = sub i32 %6, %4, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %7, metadata !4057, metadata !DIExpression()), !dbg !4059
  %8 = icmp ugt i32 %5, %7, !dbg !4062
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %10, metadata !4058, metadata !DIExpression()), !dbg !4059
  ret i32 %10, !dbg !4065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4066 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4068, metadata !DIExpression()), !dbg !4072
  %4 = bitcast i32* %2 to i8*, !dbg !4073
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4073
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4070, metadata !DIExpression()), !dbg !4074
  %5 = bitcast i32* %3 to i8*, !dbg !4075
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4075
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4071, metadata !DIExpression()), !dbg !4076
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4077
  %7 = icmp eq i32 %6, 0, !dbg !4079
  br i1 %7, label %38, label %8, !dbg !4080

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4081
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4083
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4084
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4085
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4086
  store volatile i32 %11, i32* %2, align 4, !dbg !4087
  %12 = load volatile i32, i32* %2, align 4, !dbg !4088
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4089
  %14 = add i32 %13, %12, !dbg !4089
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4089
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4090
  call void @llvm.dbg.value(metadata i32 0, metadata !4069, metadata !DIExpression()), !dbg !4072
  br label %15, !dbg !4091

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4069, metadata !DIExpression()), !dbg !4072
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4093
  %18 = load i8, i8* %17, align 1, !dbg !4093, !range !2812
  %19 = icmp eq i8 %18, 0, !dbg !4093
  br i1 %19, label %31, label %20, !dbg !4097

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4098
  store volatile i32 %21, i32* %3, align 4, !dbg !4100
  %22 = load volatile i32, i32* %3, align 4, !dbg !4101
  %23 = icmp eq i32 %22, 0, !dbg !4103
  br i1 %23, label %24, label %31, !dbg !4104

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4105
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4107
  %26 = add i32 %25, -1, !dbg !4107
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4107
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4108
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4108
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4109
  %30 = load i8*, i8** %29, align 4, !dbg !4109
  tail call void %28(i8* noundef %30) #20, !dbg !4110
  br label %31, !dbg !4111

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %32, metadata !4069, metadata !DIExpression()), !dbg !4072
  %33 = icmp eq i32 %32, 32, !dbg !4113
  br i1 %33, label %34, label %15, !dbg !4091, !llvm.loop !4114

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4116
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4117
  %36 = icmp eq i32 %35, 0, !dbg !4119
  br i1 %36, label %38, label %37, !dbg !4120

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4121
  br label %38, !dbg !4123

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4124
  ret void, !dbg !4124
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4130, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4132, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 0, metadata !4131, metadata !DIExpression()), !dbg !4133
  br label %5, !dbg !4135

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %3, metadata !4131, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i32 %6, metadata !4131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4133
  %4 = icmp eq i32 %3, 5, !dbg !4139
  br i1 %4, label %10, label %5, !dbg !4135, !llvm.loop !4140

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4131, metadata !DIExpression()), !dbg !4133
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4142
  %8 = load i32, i32* %7, align 4, !dbg !4142
  %9 = icmp eq i32 %8, %0, !dbg !4145
  call void @llvm.dbg.value(metadata i32 %6, metadata !4131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4133
  br i1 %9, label %10, label %2, !dbg !4146

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4133
  ret i32 %11, !dbg !4147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4153, metadata !DIExpression()), !dbg !4154
  ret i32 0, !dbg !4155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4158, metadata !DIExpression()), !dbg !4159
  ret i32 0, !dbg !4160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4165, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 %1, metadata !4166, metadata !DIExpression()), !dbg !4169
  %3 = icmp ugt i32 %0, 48, !dbg !4170
  br i1 %3, label %13, label %4, !dbg !4172

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %5, metadata !4167, metadata !DIExpression()), !dbg !4169
  %6 = and i32 %0, 31, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %6, metadata !4168, metadata !DIExpression()), !dbg !4169
  %7 = icmp eq i32 %1, 0, !dbg !4175
  %8 = shl nuw i32 1, %6, !dbg !4177
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4177
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4178
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4178
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4178
  store volatile i32 %8, i32* %12, align 4, !dbg !4177
  br label %13, !dbg !4179

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4169
  ret i32 %14, !dbg !4179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4185, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32* %1, metadata !4186, metadata !DIExpression()), !dbg !4190
  %3 = icmp ugt i32 %0, 48, !dbg !4191
  br i1 %3, label %15, label %4, !dbg !4193

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4194
  br i1 %5, label %15, label %6, !dbg !4196

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %7, metadata !4187, metadata !DIExpression()), !dbg !4190
  %8 = and i32 %0, 31, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %8, metadata !4188, metadata !DIExpression()), !dbg !4190
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4199
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4200
  %11 = load volatile i32, i32* %10, align 4, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %11, metadata !4189, metadata !DIExpression()), !dbg !4190
  %12 = shl nuw i32 1, %8, !dbg !4201
  %13 = and i32 %11, %12, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %13, metadata !4189, metadata !DIExpression()), !dbg !4190
  %14 = lshr i32 %13, %8, !dbg !4203
  store i32 %14, i32* %1, align 4, !dbg !4204
  br label %15, !dbg !4205

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4190
  ret i32 %16, !dbg !4206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4212, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 %1, metadata !4213, metadata !DIExpression()), !dbg !4217
  %3 = icmp ugt i32 %0, 48, !dbg !4218
  br i1 %3, label %18, label %4, !dbg !4220

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4221
  br i1 %5, label %18, label %6, !dbg !4223

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4224
  %8 = lshr i32 %0, 3, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %8, metadata !4214, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %0, metadata !4215, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4217
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %9, metadata !4216, metadata !DIExpression()), !dbg !4217
  %10 = shl nuw nsw i32 %0, 2, !dbg !4227
  %11 = and i32 %10, 28, !dbg !4227
  %12 = shl nuw i32 15, %11, !dbg !4228
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4229
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4230
  store volatile i32 %12, i32* %14, align 4, !dbg !4231
  %15 = shl nuw i32 %7, %11, !dbg !4232
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4233
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4234
  store volatile i32 %15, i32* %17, align 4, !dbg !4235
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4236
  br label %18, !dbg !4237

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4217
  ret i32 %19, !dbg !4238
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4244, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata i32* %1, metadata !4245, metadata !DIExpression()), !dbg !4249
  %3 = icmp ugt i32 %0, 48, !dbg !4250
  br i1 %3, label %15, label %4, !dbg !4252

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4253
  br i1 %5, label %15, label %6, !dbg !4255

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %7, metadata !4246, metadata !DIExpression()), !dbg !4249
  %8 = and i32 %0, 31, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %8, metadata !4247, metadata !DIExpression()), !dbg !4249
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4258
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4259
  %11 = load volatile i32, i32* %10, align 4, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %11, metadata !4248, metadata !DIExpression()), !dbg !4249
  %12 = shl nuw i32 1, %8, !dbg !4260
  %13 = and i32 %11, %12, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %13, metadata !4248, metadata !DIExpression()), !dbg !4249
  %14 = lshr i32 %13, %8, !dbg !4262
  store i32 %14, i32* %1, align 4, !dbg !4263
  br label %15, !dbg !4264

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4249
  ret i32 %16, !dbg !4265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4270, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %1, metadata !4271, metadata !DIExpression()), !dbg !4274
  %3 = icmp ugt i32 %0, 48, !dbg !4275
  br i1 %3, label %13, label %4, !dbg !4277

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %5, metadata !4272, metadata !DIExpression()), !dbg !4274
  %6 = and i32 %0, 31, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %6, metadata !4273, metadata !DIExpression()), !dbg !4274
  %7 = icmp eq i32 %1, 0, !dbg !4280
  %8 = shl nuw i32 1, %6, !dbg !4282
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4282
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4283
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4283
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4283
  store volatile i32 %8, i32* %12, align 4, !dbg !4282
  br label %13, !dbg !4284

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4274
  ret i32 %14, !dbg !4284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4287, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32* %1, metadata !4288, metadata !DIExpression()), !dbg !4292
  %3 = icmp ugt i32 %0, 48, !dbg !4293
  br i1 %3, label %15, label %4, !dbg !4295

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4296
  br i1 %5, label %15, label %6, !dbg !4298

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %7, metadata !4289, metadata !DIExpression()), !dbg !4292
  %8 = and i32 %0, 31, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %8, metadata !4290, metadata !DIExpression()), !dbg !4292
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4301
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4302
  %11 = load volatile i32, i32* %10, align 4, !dbg !4302
  call void @llvm.dbg.value(metadata i32 %11, metadata !4291, metadata !DIExpression()), !dbg !4292
  %12 = shl nuw i32 1, %8, !dbg !4303
  %13 = and i32 %11, %12, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %13, metadata !4291, metadata !DIExpression()), !dbg !4292
  %14 = lshr i32 %13, %8, !dbg !4305
  store i32 %14, i32* %1, align 4, !dbg !4306
  br label %15, !dbg !4307

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4292
  ret i32 %16, !dbg !4308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4311, metadata !DIExpression()), !dbg !4315
  %2 = icmp ugt i32 %0, 48, !dbg !4316
  br i1 %2, label %16, label %3, !dbg !4318

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %4, metadata !4312, metadata !DIExpression()), !dbg !4315
  %5 = and i32 %0, 31, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %5, metadata !4313, metadata !DIExpression()), !dbg !4315
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4321
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4322
  %8 = load volatile i32, i32* %7, align 4, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %8, metadata !4314, metadata !DIExpression()), !dbg !4315
  %9 = shl nuw i32 1, %5, !dbg !4323
  %10 = and i32 %8, %9, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %10, metadata !4314, metadata !DIExpression()), !dbg !4315
  %11 = lshr i32 %10, %5, !dbg !4325
  %12 = icmp eq i32 %11, 0, !dbg !4325
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4327
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4327
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4327
  store volatile i32 %9, i32* %15, align 4, !dbg !4328
  br label %16, !dbg !4329

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4315
  ret i32 %17, !dbg !4329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4332, metadata !DIExpression()), !dbg !4335
  %2 = icmp ugt i32 %0, 48, !dbg !4336
  br i1 %2, label %9, label %3, !dbg !4338

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %4, metadata !4333, metadata !DIExpression()), !dbg !4335
  %5 = and i32 %0, 31, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %5, metadata !4334, metadata !DIExpression()), !dbg !4335
  %6 = shl nuw i32 1, %5, !dbg !4341
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4342
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4343
  store volatile i32 %6, i32* %8, align 4, !dbg !4344
  br label %9, !dbg !4345

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4335
  ret i32 %10, !dbg !4346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4349, metadata !DIExpression()), !dbg !4352
  %2 = icmp ugt i32 %0, 48, !dbg !4353
  br i1 %2, label %9, label %3, !dbg !4355

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %4, metadata !4350, metadata !DIExpression()), !dbg !4352
  %5 = and i32 %0, 31, !dbg !4357
  call void @llvm.dbg.value(metadata i32 %5, metadata !4351, metadata !DIExpression()), !dbg !4352
  %6 = shl nuw i32 1, %5, !dbg !4358
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4359
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4360
  store volatile i32 %6, i32* %8, align 4, !dbg !4361
  br label %9, !dbg !4362

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4352
  ret i32 %10, !dbg !4363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4366, metadata !DIExpression()), !dbg !4369
  %2 = icmp ugt i32 %0, 48, !dbg !4370
  br i1 %2, label %14, label %3, !dbg !4372

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4373
  %5 = icmp eq i32 %4, 0, !dbg !4373
  br i1 %5, label %14, label %6, !dbg !4374

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %7, metadata !4367, metadata !DIExpression()), !dbg !4369
  %8 = and i32 %0, 31, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %8, metadata !4368, metadata !DIExpression()), !dbg !4369
  %9 = shl nuw i32 1, %8, !dbg !4377
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4378
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4379
  store volatile i32 %9, i32* %11, align 4, !dbg !4380
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4381
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4382
  store volatile i32 %9, i32* %13, align 4, !dbg !4383
  br label %14, !dbg !4384

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4369
  ret i32 %15, !dbg !4385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4388, metadata !DIExpression()), !dbg !4391
  %2 = icmp ugt i32 %0, 48, !dbg !4392
  br i1 %2, label %14, label %3, !dbg !4394

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4395
  %5 = icmp eq i32 %4, 0, !dbg !4395
  br i1 %5, label %14, label %6, !dbg !4396

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %7, metadata !4389, metadata !DIExpression()), !dbg !4391
  %8 = and i32 %0, 31, !dbg !4398
  call void @llvm.dbg.value(metadata i32 %8, metadata !4390, metadata !DIExpression()), !dbg !4391
  %9 = shl nuw i32 1, %8, !dbg !4399
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4400
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4401
  store volatile i32 %9, i32* %11, align 4, !dbg !4402
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4403
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4404
  store volatile i32 %9, i32* %13, align 4, !dbg !4405
  br label %14, !dbg !4406

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4391
  ret i32 %15, !dbg !4407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4410, metadata !DIExpression()), !dbg !4413
  %2 = icmp ugt i32 %0, 48, !dbg !4414
  br i1 %2, label %12, label %3, !dbg !4416

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4417
  %5 = icmp eq i32 %4, 0, !dbg !4417
  br i1 %5, label %12, label %6, !dbg !4418

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %7, metadata !4411, metadata !DIExpression()), !dbg !4413
  %8 = and i32 %0, 31, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %8, metadata !4412, metadata !DIExpression()), !dbg !4413
  %9 = shl nuw i32 1, %8, !dbg !4421
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4422
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4423
  store volatile i32 %9, i32* %11, align 4, !dbg !4424
  br label %12, !dbg !4425

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4413
  ret i32 %13, !dbg !4426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %1, metadata !4434, metadata !DIExpression()), !dbg !4435
  %3 = icmp ugt i32 %0, 5, !dbg !4436
  br i1 %3, label %7, label %4, !dbg !4438

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4439
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4440
  store volatile i32 %1, i32* %6, align 4, !dbg !4441
  br label %7, !dbg !4442

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4435
  ret i32 %8, !dbg !4443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4448, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i8 %1, metadata !4449, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i8 %2, metadata !4450, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i8 %3, metadata !4451, metadata !DIExpression()), !dbg !4454
  %5 = icmp ugt i32 %0, 48, !dbg !4455
  br i1 %5, label %30, label %6, !dbg !4457

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4458
  %8 = icmp eq i32 %7, 0, !dbg !4458
  br i1 %8, label %9, label %30, !dbg !4459

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %10, metadata !4452, metadata !DIExpression()), !dbg !4454
  %11 = and i32 %0, 31, !dbg !4461
  call void @llvm.dbg.value(metadata i32 %11, metadata !4453, metadata !DIExpression()), !dbg !4454
  %12 = icmp eq i8 %1, 0, !dbg !4462
  %13 = shl nuw i32 1, %11, !dbg !4464
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4464
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4465
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4465
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4465
  store volatile i32 %13, i32* %17, align 4, !dbg !4464
  %18 = icmp eq i8 %2, 0, !dbg !4466
  %19 = shl nuw i32 1, %11, !dbg !4468
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4468
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4469
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4469
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4469
  store volatile i32 %19, i32* %23, align 4, !dbg !4468
  %24 = icmp eq i8 %3, 0, !dbg !4470
  %25 = shl nuw i32 1, %11, !dbg !4472
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4472
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4473
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4473
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4473
  store volatile i32 %25, i32* %29, align 4, !dbg !4472
  br label %30, !dbg !4474

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4454
  ret i32 %31, !dbg !4474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4477, metadata !DIExpression()), !dbg !4484
  %2 = icmp ugt i32 %0, 48, !dbg !4485
  br i1 %2, label %40, label %3, !dbg !4487

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %4, metadata !4478, metadata !DIExpression()), !dbg !4484
  %5 = and i32 %0, 31, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %5, metadata !4481, metadata !DIExpression()), !dbg !4484
  %6 = lshr i32 %0, 4, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %6, metadata !4479, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.value(metadata i32 %0, metadata !4482, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4484
  %7 = lshr i32 %0, 3, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %7, metadata !4480, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.value(metadata i32 %0, metadata !4483, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4484
  %8 = shl nuw nsw i32 %0, 2, !dbg !4492
  %9 = and i32 %8, 28, !dbg !4492
  %10 = shl nuw i32 15, %9, !dbg !4493
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4494
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4495
  store volatile i32 %10, i32* %12, align 4, !dbg !4496
  %13 = shl nuw i32 1, %5, !dbg !4497
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4498
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4499
  store volatile i32 %13, i32* %15, align 4, !dbg !4500
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4501
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4502
  store volatile i32 %13, i32* %17, align 4, !dbg !4503
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4504
  %19 = icmp eq i32 %18, 0, !dbg !4504
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4506
  br i1 %19, label %23, label %21, !dbg !4507

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4508
  br label %29, !dbg !4510

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4511
  store volatile i32 %13, i32* %24, align 4, !dbg !4513
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4514
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4515
  store volatile i32 %13, i32* %26, align 4, !dbg !4516
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4517
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4518
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4506
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4519
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4520
  store volatile i32 %13, i32* %32, align 4, !dbg !4521
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4522
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4523
  store volatile i32 %13, i32* %34, align 4, !dbg !4524
  %35 = shl nuw nsw i32 %0, 1, !dbg !4525
  %36 = and i32 %35, 30, !dbg !4525
  %37 = shl nuw i32 3, %36, !dbg !4526
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4527
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4528
  store volatile i32 %37, i32* %39, align 4, !dbg !4529
  br label %40, !dbg !4530

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4484
  ret i32 %41, !dbg !4531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4534, metadata !DIExpression()), !dbg !4539
  %2 = icmp ugt i32 %0, 48, !dbg !4540
  br i1 %2, label %34, label %3, !dbg !4542

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4543
  call void @llvm.dbg.value(metadata i32 %4, metadata !4535, metadata !DIExpression()), !dbg !4539
  %5 = and i32 %0, 31, !dbg !4544
  call void @llvm.dbg.value(metadata i32 %5, metadata !4537, metadata !DIExpression()), !dbg !4539
  %6 = lshr i32 %0, 3, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %6, metadata !4536, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %0, metadata !4538, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4539
  %7 = shl nuw nsw i32 %0, 2, !dbg !4546
  %8 = and i32 %7, 28, !dbg !4546
  %9 = shl nuw i32 15, %8, !dbg !4547
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4548
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4549
  store volatile i32 %9, i32* %11, align 4, !dbg !4550
  %12 = shl nuw i32 1, %5, !dbg !4551
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4552
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4553
  store volatile i32 %12, i32* %14, align 4, !dbg !4554
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4555
  %16 = icmp eq i32 %15, 0, !dbg !4555
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4557
  br i1 %16, label %22, label %18, !dbg !4558

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4559
  store volatile i32 %12, i32* %19, align 4, !dbg !4561
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4562
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4563
  br label %28, !dbg !4564

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4565
  store volatile i32 %12, i32* %23, align 4, !dbg !4567
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4568
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4569
  store volatile i32 %12, i32* %25, align 4, !dbg !4570
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4571
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4572
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4557
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4573
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4574
  store volatile i32 %12, i32* %31, align 4, !dbg !4575
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4576
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4577
  store volatile i32 %12, i32* %33, align 4, !dbg !4578
  br label %34, !dbg !4579

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4539
  ret i32 %35, !dbg !4580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4585, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %1, metadata !4586, metadata !DIExpression()), !dbg !4589
  %3 = icmp ugt i32 %0, 48, !dbg !4590
  br i1 %3, label %14, label %4, !dbg !4592

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %5, metadata !4587, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %0, metadata !4588, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4589
  %6 = shl nuw nsw i32 %0, 1, !dbg !4594
  %7 = and i32 %6, 30, !dbg !4594
  %8 = shl nuw i32 3, %7, !dbg !4595
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4596
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4597
  store volatile i32 %8, i32* %10, align 4, !dbg !4598
  %11 = shl i32 %1, %7, !dbg !4599
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4600
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4601
  store volatile i32 %11, i32* %13, align 4, !dbg !4602
  br label %14, !dbg !4603

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4589
  ret i32 %15, !dbg !4604
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4610, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i32* %1, metadata !4611, metadata !DIExpression()), !dbg !4615
  %3 = icmp ugt i32 %0, 48, !dbg !4616
  br i1 %3, label %18, label %4, !dbg !4618

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4619
  br i1 %5, label %18, label %6, !dbg !4621

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %7, metadata !4612, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i32 %0, metadata !4613, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4615
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4623
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4624
  %10 = load volatile i32, i32* %9, align 4, !dbg !4624
  call void @llvm.dbg.value(metadata i32 %10, metadata !4614, metadata !DIExpression()), !dbg !4615
  %11 = shl nuw nsw i32 %0, 1, !dbg !4625
  %12 = and i32 %11, 30, !dbg !4625
  %13 = shl nuw i32 3, %12, !dbg !4626
  %14 = and i32 %10, %13, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %14, metadata !4614, metadata !DIExpression()), !dbg !4615
  %15 = lshr i32 %14, %12, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %15, metadata !4614, metadata !DIExpression()), !dbg !4615
  %16 = shl i32 %15, 2, !dbg !4629
  %17 = add i32 %16, 4, !dbg !4629
  store i32 %17, i32* %1, align 4, !dbg !4630
  br label %18, !dbg !4631

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4615
  ret i32 %19, !dbg !4632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4633 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4637, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i1 %1, metadata !4638, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4702
  %4 = bitcast i32* %3 to i8*, !dbg !4703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4703
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4704
  %6 = load volatile i32, i32* %5, align 4, !dbg !4704
  %7 = icmp eq i32 %6, 2, !dbg !4706
  br i1 %7, label %9, label %8, !dbg !4707

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4708
  unreachable, !dbg !4708

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4710
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4710
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4644, metadata !DIExpression()), !dbg !4702
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %12, metadata !4639, metadata !DIExpression()), !dbg !4702
  br i1 %1, label %13, label %14, !dbg !4712

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4713
  br label %14, !dbg !4716

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4641, metadata !DIExpression(DW_OP_deref)), !dbg !4702
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %15, metadata !4700, metadata !DIExpression()), !dbg !4702
  %16 = icmp eq i32 %15, 0, !dbg !4718
  br i1 %16, label %18, label %17, !dbg !4720

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4721
  unreachable, !dbg !4721

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %19, metadata !4641, metadata !DIExpression()), !dbg !4702
  %20 = icmp eq i32 %19, 0, !dbg !4725
  br i1 %20, label %43, label %21, !dbg !4726

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4727
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4727
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4642, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i8* undef, metadata !4643, metadata !DIExpression()), !dbg !4702
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4728
  br i1 %24, label %25, label %26, !dbg !4730

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4731
  unreachable, !dbg !4731

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4733
  %28 = load i8*, i8** %27, align 4, !dbg !4733
  call void @llvm.dbg.value(metadata i8* %28, metadata !4643, metadata !DIExpression()), !dbg !4702
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4734
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4735
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4736
  call void @llvm.dbg.value(metadata i32* %3, metadata !4641, metadata !DIExpression(DW_OP_deref)), !dbg !4702
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %31, metadata !4700, metadata !DIExpression()), !dbg !4702
  %32 = icmp eq i32 %31, 0, !dbg !4738
  br i1 %32, label %34, label %33, !dbg !4740

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4741
  unreachable, !dbg !4741

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4743
  call void @llvm.dbg.value(metadata i32 %35, metadata !4641, metadata !DIExpression()), !dbg !4702
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4745
  %37 = load i32, i32* %36, align 4, !dbg !4745
  %38 = icmp ult i32 %35, %37, !dbg !4746
  br i1 %38, label %43, label %39, !dbg !4747

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %40, metadata !4700, metadata !DIExpression()), !dbg !4702
  %41 = icmp eq i32 %40, 0, !dbg !4750
  br i1 %41, label %43, label %42, !dbg !4752

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4753
  unreachable, !dbg !4753

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4755
  ret void, !dbg !4755
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4756 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4758, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i1 %1, metadata !4759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4766
  %4 = bitcast i32* %3 to i8*, !dbg !4767
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4767
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4768
  %6 = load volatile i32, i32* %5, align 4, !dbg !4768
  %7 = icmp eq i32 %6, 2, !dbg !4770
  br i1 %7, label %9, label %8, !dbg !4771

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4772
  unreachable, !dbg !4772

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %10, metadata !4760, metadata !DIExpression()), !dbg !4766
  br i1 %1, label %36, label %11, !dbg !4775

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4776
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4776
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4764, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i8* undef, metadata !4765, metadata !DIExpression()), !dbg !4766
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4779
  br i1 %14, label %15, label %16, !dbg !4781

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4782
  unreachable, !dbg !4782

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4784
  %18 = load i8*, i8** %17, align 4, !dbg !4784
  call void @llvm.dbg.value(metadata i8* %18, metadata !4765, metadata !DIExpression()), !dbg !4766
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4785
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4786
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4787
  call void @llvm.dbg.value(metadata i32* %3, metadata !4763, metadata !DIExpression(DW_OP_deref)), !dbg !4766
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %21, metadata !4761, metadata !DIExpression()), !dbg !4766
  %22 = icmp eq i32 %21, 0, !dbg !4789
  br i1 %22, label %24, label %23, !dbg !4791

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4792
  unreachable, !dbg !4792

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4794
  %26 = load i32, i32* %25, align 4, !dbg !4794
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4795
  %28 = load i32, i32* %27, align 4, !dbg !4795
  %29 = sub i32 %26, %28, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %29, metadata !4762, metadata !DIExpression()), !dbg !4766
  %30 = load i32, i32* %3, align 4, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %30, metadata !4763, metadata !DIExpression()), !dbg !4766
  %31 = icmp ult i32 %30, %29, !dbg !4799
  br i1 %31, label %36, label %32, !dbg !4800

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %33, metadata !4761, metadata !DIExpression()), !dbg !4766
  %34 = icmp eq i32 %33, 0, !dbg !4803
  br i1 %34, label %36, label %35, !dbg !4805

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4806
  unreachable, !dbg !4806

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4808
  ret void, !dbg !4808
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4813, metadata !DIExpression()), !dbg !4817
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4818
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4818
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4814, metadata !DIExpression()), !dbg !4817
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4819
  %5 = icmp eq i32 %4, 0, !dbg !4819
  br i1 %5, label %6, label %14, !dbg !4821

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4822
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4824
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4825
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4825
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4815, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.value(metadata i8* undef, metadata !4816, metadata !DIExpression()), !dbg !4817
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4826
  br i1 %9, label %10, label %11, !dbg !4828

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4829
  unreachable, !dbg !4829

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4831
  %13 = load i8*, i8** %12, align 4, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %13, metadata !4816, metadata !DIExpression()), !dbg !4817
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4832
  br label %14, !dbg !4833

14:                                               ; preds = %11, %1
  ret void, !dbg !4834
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4841, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i32 %1, metadata !4842, metadata !DIExpression()), !dbg !4846
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4847
  br i1 %3, label %4, label %16, !dbg !4849

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4850
  br i1 %5, label %6, label %16, !dbg !4851

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4852
  %8 = load volatile i32, i32* %7, align 4, !dbg !4852
  %9 = icmp eq i32 %8, 0, !dbg !4854
  br i1 %9, label %16, label %10, !dbg !4855

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %11, metadata !4844, metadata !DIExpression()), !dbg !4846
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4857
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4858
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4858
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4845, metadata !DIExpression()), !dbg !4846
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4859
  %15 = load i32, i32* %14, align 4, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %15, metadata !4843, metadata !DIExpression()), !dbg !4846
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4860
  br label %16, !dbg !4861

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4846
  ret i32 %17, !dbg !4862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4867, metadata !DIExpression()), !dbg !4868
  %2 = icmp ult i32 %0, 4, !dbg !4869
  ret i1 %2, !dbg !4870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4875, metadata !DIExpression()), !dbg !4876
  %2 = icmp ult i32 %0, 13, !dbg !4877
  ret i1 %2, !dbg !4878
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4895, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4896, metadata !DIExpression()), !dbg !4899
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4900
  br i1 %3, label %4, label %23, !dbg !4902

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4903
  br i1 %5, label %6, label %23, !dbg !4904

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4905
  %8 = load volatile i32, i32* %7, align 4, !dbg !4905
  %9 = icmp eq i32 %8, 0, !dbg !4907
  br i1 %9, label %23, label %10, !dbg !4908

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %11, metadata !4897, metadata !DIExpression()), !dbg !4899
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4910
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4911
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4911
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4898, metadata !DIExpression()), !dbg !4899
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4912
  %15 = load i32, i32* %14, align 4, !dbg !4912
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4913
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4914
  %18 = load i32, i32* %17, align 4, !dbg !4914
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4915
  %20 = load i32, i32* %19, align 4, !dbg !4915
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4916
  %22 = load i32, i32* %21, align 4, !dbg !4916
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !4917
  br label %23, !dbg !4918

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4899
  ret i32 %24, !dbg !4919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4920 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4924, metadata !DIExpression()), !dbg !4925
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4926
  %3 = load i32, i32* %2, align 4, !dbg !4926
  %4 = icmp ult i32 %3, 13, !dbg !4927
  br i1 %4, label %5, label %17, !dbg !4928

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4929
  %7 = load i32, i32* %6, align 4, !dbg !4929
  %8 = icmp ult i32 %7, 4, !dbg !4930
  br i1 %8, label %9, label %17, !dbg !4931

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4932
  %11 = load i32, i32* %10, align 4, !dbg !4932
  %12 = icmp ult i32 %11, 2, !dbg !4933
  br i1 %12, label %13, label %17, !dbg !4934

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4935
  %15 = load i32, i32* %14, align 4, !dbg !4935
  %16 = icmp ult i32 %15, 3, !dbg !4936
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4925
  ret i1 %18, !dbg !4937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4943, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4944, metadata !DIExpression()), !dbg !4951
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4952
  br i1 %3, label %4, label %41, !dbg !4954

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4955
  br i1 %5, label %6, label %41, !dbg !4956

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %7, metadata !4948, metadata !DIExpression()), !dbg !4951
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4958
  %9 = load volatile i32, i32* %8, align 4, !dbg !4958
  %10 = icmp eq i32 %9, 0, !dbg !4960
  br i1 %10, label %12, label %11, !dbg !4961

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4962
  br label %41, !dbg !4964

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4965
  br i1 %13, label %22, label %14, !dbg !4967

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4946, metadata !DIExpression()), !dbg !4951
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4968
  store volatile i32 0, i32* %16, align 4, !dbg !4973
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4974
  store i8* null, i8** %17, align 4, !dbg !4975
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4976
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4977
  %19 = add nuw nsw i32 %15, 1, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %19, metadata !4946, metadata !DIExpression()), !dbg !4951
  %20 = icmp eq i32 %19, 4, !dbg !4979
  br i1 %20, label %21, label %14, !dbg !4980, !llvm.loop !4981

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4983
  br label %22, !dbg !4984

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4985
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4986
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4987
  %24 = load i32, i32* %23, align 4, !dbg !4987
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %25, metadata !4949, metadata !DIExpression()), !dbg !4951
  %26 = icmp eq i32 %25, 0, !dbg !4989
  br i1 %26, label %28, label %27, !dbg !4991

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4992
  unreachable, !dbg !4992

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4994
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4994
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4945, metadata !DIExpression()), !dbg !4951
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4995
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4996
  %32 = load i32, i32* %31, align 4, !dbg !4996
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4997
  %34 = load i32, i32* %33, align 4, !dbg !4997
  call void @llvm.dbg.value(metadata i32 %34, metadata !4947, metadata !DIExpression()), !dbg !4951
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !4998
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4999
  %36 = load i32, i32* %35, align 4, !dbg !4999
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5000
  %38 = load i32, i32* %37, align 4, !dbg !5000
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5001
  %40 = load i32, i32* %39, align 4, !dbg !5001
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !5002
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !5003
  br label %41, !dbg !5004

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4951
  ret i32 %42, !dbg !5005
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5010, metadata !DIExpression()), !dbg !5017
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5018
  br i1 %2, label %3, label %54, !dbg !5020

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %4, metadata !5014, metadata !DIExpression()), !dbg !5017
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5022
  %6 = load volatile i32, i32* %5, align 4, !dbg !5022
  %7 = icmp eq i32 %6, 0, !dbg !5024
  br i1 %7, label %52, label %8, !dbg !5025

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5026
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5026
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5011, metadata !DIExpression()), !dbg !5017
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5027
  %11 = load volatile i32, i32* %5, align 4, !dbg !5028
  %12 = icmp eq i32 %11, 2, !dbg !5030
  br i1 %12, label %13, label %43, !dbg !5031

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %14, metadata !5012, metadata !DIExpression()), !dbg !5017
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %15, metadata !5013, metadata !DIExpression()), !dbg !5017
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %16, metadata !5015, metadata !DIExpression()), !dbg !5017
  %17 = icmp eq i32 %16, 0, !dbg !5036
  br i1 %17, label %19, label %18, !dbg !5038

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5039
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5041
  unreachable, !dbg !5041

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %20, metadata !5015, metadata !DIExpression()), !dbg !5017
  %21 = icmp eq i32 %20, 0, !dbg !5043
  br i1 %21, label %23, label %22, !dbg !5045

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5046
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5048
  unreachable, !dbg !5048

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %24, metadata !5015, metadata !DIExpression()), !dbg !5017
  %25 = icmp eq i32 %24, 0, !dbg !5050
  br i1 %25, label %27, label %26, !dbg !5052

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5053
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5055
  unreachable, !dbg !5055

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !5056
  call void @llvm.dbg.value(metadata i32 %28, metadata !5015, metadata !DIExpression()), !dbg !5017
  %29 = icmp eq i32 %28, 0, !dbg !5057
  br i1 %29, label %31, label %30, !dbg !5059

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5060
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5062
  unreachable, !dbg !5062

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !5063
  call void @llvm.dbg.value(metadata i32 %32, metadata !5015, metadata !DIExpression()), !dbg !5017
  %33 = icmp eq i32 %32, 0, !dbg !5064
  br i1 %33, label %35, label %34, !dbg !5066

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5067
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5069
  unreachable, !dbg !5069

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %36, metadata !5015, metadata !DIExpression()), !dbg !5017
  %37 = icmp eq i32 %36, 0, !dbg !5071
  br i1 %37, label %39, label %38, !dbg !5073

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5074
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5076
  unreachable, !dbg !5076

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5077
  %41 = load i32, i32* %40, align 4, !dbg !5077
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5078
  br label %43, !dbg !5079

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5080
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5081
  %45 = load i32, i32* %44, align 4, !dbg !5081
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %46, metadata !5016, metadata !DIExpression()), !dbg !5017
  %47 = icmp eq i32 %46, 0, !dbg !5083
  br i1 %47, label %49, label %48, !dbg !5085

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5086
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5088
  unreachable, !dbg !5088

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5089
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5090
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5091
  store i8* null, i8** %51, align 4, !dbg !5092
  store volatile i32 0, i32* %5, align 4, !dbg !5093
  br label %52, !dbg !5094

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5017
  br label %54, !dbg !5095

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !5017
  ret i32 %55, !dbg !5095
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5100, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i8 %1, metadata !5101, metadata !DIExpression()), !dbg !5103
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5104
  br i1 %3, label %4, label %11, !dbg !5106

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5107
  %6 = load volatile i32, i32* %5, align 4, !dbg !5107
  %7 = icmp eq i32 %6, 1, !dbg !5109
  br i1 %7, label %8, label %11, !dbg !5110

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5111
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5111
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5102, metadata !DIExpression()), !dbg !5103
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5112
  br label %11, !dbg !5113

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5119, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %1, metadata !5120, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %2, metadata !5121, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 0, metadata !5122, metadata !DIExpression()), !dbg !5123
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5124
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5126
  br i1 %6, label %7, label %20, !dbg !5126

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5127
  %9 = load volatile i32, i32* %8, align 4, !dbg !5127
  %10 = icmp ne i32 %9, 1, !dbg !5129
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5130
  call void @llvm.dbg.value(metadata i32 0, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %1, metadata !5120, metadata !DIExpression()), !dbg !5123
  br i1 %12, label %20, label %13, !dbg !5130

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %15, metadata !5120, metadata !DIExpression()), !dbg !5123
  %16 = load i8, i8* %15, align 1, !dbg !5131
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5135
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5136
  call void @llvm.dbg.value(metadata i8* %17, metadata !5120, metadata !DIExpression()), !dbg !5123
  %18 = add nuw i32 %14, 1, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %18, metadata !5122, metadata !DIExpression()), !dbg !5123
  %19 = icmp eq i32 %18, %2, !dbg !5138
  br i1 %19, label %20, label %13, !dbg !5139, !llvm.loop !5140

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5123
  ret i32 %21, !dbg !5142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5143 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5145, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8* %1, metadata !5146, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32 %2, metadata !5147, metadata !DIExpression()), !dbg !5153
  %5 = bitcast i32* %4 to i8*, !dbg !5154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5154
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5155
  %7 = xor i1 %6, true, !dbg !5157
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5157
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5157
  br i1 %11, label %45, label %12, !dbg !5157

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5158
  %14 = load volatile i32, i32* %13, align 4, !dbg !5158
  %15 = icmp eq i32 %14, 2, !dbg !5160
  br i1 %15, label %16, label %45, !dbg !5161

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %17, metadata !5148, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32* %4, metadata !5151, metadata !DIExpression(DW_OP_deref)), !dbg !5153
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %18, metadata !5152, metadata !DIExpression()), !dbg !5153
  %19 = icmp eq i32 %18, 0, !dbg !5164
  br i1 %19, label %21, label %20, !dbg !5166

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5167
  unreachable, !dbg !5167

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %22, metadata !5151, metadata !DIExpression()), !dbg !5153
  %23 = icmp ult i32 %22, %2, !dbg !5171
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5150, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32 0, metadata !5149, metadata !DIExpression()), !dbg !5153
  %25 = icmp eq i32 %24, 0, !dbg !5172
  br i1 %25, label %38, label %28, !dbg !5175

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !5149, metadata !DIExpression()), !dbg !5153
  %27 = icmp eq i32 %34, %24, !dbg !5172
  br i1 %27, label %36, label %28, !dbg !5175, !llvm.loop !5176

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5149, metadata !DIExpression()), !dbg !5153
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5178
  %31 = load i8, i8* %30, align 1, !dbg !5178
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5180
  call void @llvm.dbg.value(metadata i32 %32, metadata !5152, metadata !DIExpression()), !dbg !5153
  %33 = icmp eq i32 %32, 0, !dbg !5181
  %34 = add nuw i32 %29, 1, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %34, metadata !5149, metadata !DIExpression()), !dbg !5153
  br i1 %33, label %26, label %35, !dbg !5184

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5185
  unreachable, !dbg !5185

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5187
  br label %38, !dbg !5187

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5187
  call void @llvm.dbg.value(metadata i32 %39, metadata !5151, metadata !DIExpression()), !dbg !5153
  %40 = icmp eq i32 %24, %39, !dbg !5189
  br i1 %40, label %41, label %45, !dbg !5190

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %42, metadata !5152, metadata !DIExpression()), !dbg !5153
  %43 = icmp eq i32 %42, 0, !dbg !5193
  br i1 %43, label %45, label %44, !dbg !5195

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5196
  unreachable, !dbg !5196

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !5153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5198
  ret i32 %46, !dbg !5198
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5203, metadata !DIExpression()), !dbg !5206
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5207
  br i1 %2, label %3, label %11, !dbg !5209

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5210
  %5 = load volatile i32, i32* %4, align 4, !dbg !5210
  %6 = icmp eq i32 %5, 1, !dbg !5212
  br i1 %6, label %7, label %11, !dbg !5213

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5214
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5214
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5205, metadata !DIExpression()), !dbg !5206
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5215
  call void @llvm.dbg.value(metadata i8 %10, metadata !5204, metadata !DIExpression()), !dbg !5206
  br label %11, !dbg !5216

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5206
  ret i8 %12, !dbg !5217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5222, metadata !DIExpression()), !dbg !5225
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5226
  br i1 %2, label %3, label %11, !dbg !5228

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5229
  %5 = load volatile i32, i32* %4, align 4, !dbg !5229
  %6 = icmp eq i32 %5, 1, !dbg !5231
  br i1 %6, label %7, label %11, !dbg !5232

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5233
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5233
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5224, metadata !DIExpression()), !dbg !5225
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5234
  call void @llvm.dbg.value(metadata i32 %10, metadata !5223, metadata !DIExpression()), !dbg !5225
  br label %11, !dbg !5235

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5225
  ret i32 %12, !dbg !5236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5241, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.value(metadata i8* %1, metadata !5242, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.value(metadata i32 %2, metadata !5243, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.value(metadata i8* %1, metadata !5245, metadata !DIExpression()), !dbg !5246
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5247
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5249
  br i1 %6, label %7, label %19, !dbg !5249

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5250
  %9 = load volatile i32, i32* %8, align 4, !dbg !5250
  %10 = icmp ne i32 %9, 1, !dbg !5252
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5253
  call void @llvm.dbg.value(metadata i32 0, metadata !5244, metadata !DIExpression()), !dbg !5246
  br i1 %12, label %19, label %13, !dbg !5253

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5244, metadata !DIExpression()), !dbg !5246
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5254
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5258
  store i8 %15, i8* %16, align 1, !dbg !5259
  %17 = add nuw i32 %14, 1, !dbg !5260
  call void @llvm.dbg.value(metadata i32 %17, metadata !5244, metadata !DIExpression()), !dbg !5246
  %18 = icmp eq i32 %17, %2, !dbg !5261
  br i1 %18, label %19, label %13, !dbg !5262, !llvm.loop !5263

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5246
  ret i32 %20, !dbg !5265
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5266 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5268, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i8* %1, metadata !5269, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i32 %2, metadata !5270, metadata !DIExpression()), !dbg !5276
  %5 = bitcast i32* %4 to i8*, !dbg !5277
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5277
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5278
  %7 = xor i1 %6, true, !dbg !5280
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5280
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5280
  br i1 %11, label %44, label %12, !dbg !5280

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5281
  %14 = load volatile i32, i32* %13, align 4, !dbg !5281
  %15 = icmp eq i32 %14, 2, !dbg !5283
  br i1 %15, label %16, label %44, !dbg !5284

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5285
  call void @llvm.dbg.value(metadata i32 %17, metadata !5271, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i32* %4, metadata !5273, metadata !DIExpression(DW_OP_deref)), !dbg !5276
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5286
  call void @llvm.dbg.value(metadata i32 %18, metadata !5275, metadata !DIExpression()), !dbg !5276
  %19 = icmp eq i32 %18, 0, !dbg !5287
  br i1 %19, label %21, label %20, !dbg !5289

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5290
  unreachable, !dbg !5290

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5292
  call void @llvm.dbg.value(metadata i32 %22, metadata !5273, metadata !DIExpression()), !dbg !5276
  %23 = icmp ult i32 %22, %2, !dbg !5294
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5272, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i32 0, metadata !5274, metadata !DIExpression()), !dbg !5276
  %25 = icmp eq i32 %24, 0, !dbg !5295
  br i1 %25, label %37, label %28, !dbg !5298

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5274, metadata !DIExpression()), !dbg !5276
  %27 = icmp eq i32 %33, %24, !dbg !5295
  br i1 %27, label %35, label %28, !dbg !5298, !llvm.loop !5299

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5274, metadata !DIExpression()), !dbg !5276
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5301
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5303
  call void @llvm.dbg.value(metadata i32 %31, metadata !5275, metadata !DIExpression()), !dbg !5276
  %32 = icmp eq i32 %31, 0, !dbg !5304
  %33 = add nuw i32 %29, 1, !dbg !5306
  call void @llvm.dbg.value(metadata i32 %33, metadata !5274, metadata !DIExpression()), !dbg !5276
  br i1 %32, label %26, label %34, !dbg !5307

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5308
  unreachable, !dbg !5308

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5310
  br label %37, !dbg !5310

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5310
  call void @llvm.dbg.value(metadata i32 %38, metadata !5273, metadata !DIExpression()), !dbg !5276
  %39 = icmp eq i32 %24, %38, !dbg !5312
  br i1 %39, label %40, label %44, !dbg !5313

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %41, metadata !5275, metadata !DIExpression()), !dbg !5276
  %42 = icmp eq i32 %41, 0, !dbg !5316
  br i1 %42, label %44, label %43, !dbg !5318

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5319
  unreachable, !dbg !5319

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5276
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5321
  ret i32 %45, !dbg !5321
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5326, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5327, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i8* %2, metadata !5328, metadata !DIExpression()), !dbg !5334
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5335
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5337
  br i1 %6, label %7, label %39, !dbg !5337

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5338
  call void @llvm.dbg.value(metadata i32 %8, metadata !5331, metadata !DIExpression()), !dbg !5334
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5339
  %10 = load volatile i32, i32* %9, align 4, !dbg !5339
  %11 = icmp eq i32 %10, 1, !dbg !5341
  br i1 %11, label %12, label %37, !dbg !5342

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %13, metadata !5329, metadata !DIExpression()), !dbg !5334
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %14, metadata !5330, metadata !DIExpression()), !dbg !5334
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5345
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5346
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5347
  store i8* %2, i8** %16, align 4, !dbg !5348
  %17 = shl i32 %0, 1, !dbg !5349
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5350
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5351
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5352
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5353
  call void @llvm.dbg.value(metadata i32 %20, metadata !5332, metadata !DIExpression()), !dbg !5334
  %21 = icmp eq i32 %20, 0, !dbg !5354
  br i1 %21, label %23, label %22, !dbg !5356

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5357
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5359
  unreachable, !dbg !5359

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5360
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5361
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5362
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5363
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %27, metadata !5332, metadata !DIExpression()), !dbg !5334
  %28 = icmp eq i32 %27, 0, !dbg !5365
  br i1 %28, label %30, label %29, !dbg !5367

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5368
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5370
  unreachable, !dbg !5370

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5371
  %32 = load i32, i32* %31, align 4, !dbg !5371
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5372
  call void @llvm.dbg.value(metadata i32 %33, metadata !5333, metadata !DIExpression()), !dbg !5334
  %34 = icmp eq i32 %33, 0, !dbg !5373
  br i1 %34, label %36, label %35, !dbg !5375

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5376
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5378
  unreachable, !dbg !5378

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5379
  store volatile i32 2, i32* %9, align 4, !dbg !5380
  br label %37, !dbg !5381

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5334
  br label %39, !dbg !5382

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5334
  ret i32 %40, !dbg !5382
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5388, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i8* %1, metadata !5389, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i8* %1, metadata !5390, metadata !DIExpression()), !dbg !5391
  %3 = load i8, i8* %1, align 4, !dbg !5392, !range !2812
  %4 = icmp eq i8 %3, 0, !dbg !5392
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5394
  %6 = bitcast i8* %5 to i32*, !dbg !5394
  %7 = load i32, i32* %6, align 4, !dbg !5394
  br i1 %4, label %9, label %8, !dbg !5395

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5390, metadata !DIExpression()), !dbg !5391
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5396
  br label %10, !dbg !5398

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5399
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5401
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5404, metadata !DIExpression()), !dbg !5409
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5410
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5410
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5405, metadata !DIExpression()), !dbg !5409
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %4, metadata !5406, metadata !DIExpression()), !dbg !5409
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %5, metadata !5407, metadata !DIExpression()), !dbg !5409
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5413
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5414
  %7 = load i32, i32* %6, align 4, !dbg !5414
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5415
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5416
  call void @llvm.dbg.value(metadata i32 %9, metadata !5408, metadata !DIExpression()), !dbg !5409
  %10 = icmp eq i32 %9, 0, !dbg !5417
  br i1 %10, label %12, label %11, !dbg !5419

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5420
  unreachable, !dbg !5420

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5422
  call void @llvm.dbg.value(metadata i32 %13, metadata !5408, metadata !DIExpression()), !dbg !5409
  %14 = icmp eq i32 %13, 0, !dbg !5423
  br i1 %14, label %16, label %15, !dbg !5425

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5426
  unreachable, !dbg !5426

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %17, metadata !5408, metadata !DIExpression()), !dbg !5409
  %18 = icmp eq i32 %17, 0, !dbg !5429
  br i1 %18, label %20, label %19, !dbg !5431

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5432
  unreachable, !dbg !5432

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5434
  call void @llvm.dbg.value(metadata i32 %21, metadata !5408, metadata !DIExpression()), !dbg !5409
  %22 = icmp eq i32 %21, 0, !dbg !5435
  br i1 %22, label %24, label %23, !dbg !5437

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5438
  unreachable, !dbg !5438

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5440
  ret void, !dbg !5441
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5442 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5444, metadata !DIExpression()), !dbg !5448
  %3 = bitcast i32* %2 to i8*, !dbg !5449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5449
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5450
  br i1 %4, label %5, label %16, !dbg !5452

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5453
  %7 = load volatile i32, i32* %6, align 4, !dbg !5453
  %8 = icmp eq i32 %7, 2, !dbg !5455
  br i1 %8, label %9, label %16, !dbg !5456

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %10, metadata !5445, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i32* %2, metadata !5446, metadata !DIExpression(DW_OP_deref)), !dbg !5448
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5458
  call void @llvm.dbg.value(metadata i32 %11, metadata !5447, metadata !DIExpression()), !dbg !5448
  %12 = icmp eq i32 %11, 0, !dbg !5459
  br i1 %12, label %14, label %13, !dbg !5461

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5462
  unreachable, !dbg !5462

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %15, metadata !5446, metadata !DIExpression()), !dbg !5448
  br label %16, !dbg !5465

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5448
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5466
  ret i32 %17, !dbg !5466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5467 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5469, metadata !DIExpression()), !dbg !5473
  %3 = bitcast i32* %2 to i8*, !dbg !5474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5474
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5475
  br i1 %4, label %5, label %16, !dbg !5477

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5478
  %7 = load volatile i32, i32* %6, align 4, !dbg !5478
  %8 = icmp eq i32 %7, 2, !dbg !5480
  br i1 %8, label %9, label %16, !dbg !5481

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %10, metadata !5470, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.value(metadata i32* %2, metadata !5471, metadata !DIExpression(DW_OP_deref)), !dbg !5473
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5483
  call void @llvm.dbg.value(metadata i32 %11, metadata !5472, metadata !DIExpression()), !dbg !5473
  %12 = icmp eq i32 %11, 0, !dbg !5484
  br i1 %12, label %14, label %13, !dbg !5486

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5487
  unreachable, !dbg !5487

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5489
  call void @llvm.dbg.value(metadata i32 %15, metadata !5471, metadata !DIExpression()), !dbg !5473
  br label %16, !dbg !5490

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5473
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5491
  ret i32 %17, !dbg !5491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5494, metadata !DIExpression()), !dbg !5496
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5497
  br i1 %2, label %3, label %10, !dbg !5499

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5500
  %5 = load volatile i32, i32* %4, align 4, !dbg !5500
  %6 = icmp eq i32 %5, 0, !dbg !5502
  br i1 %6, label %10, label %7, !dbg !5503

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5504
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5504
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5495, metadata !DIExpression()), !dbg !5496
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5505
  br label %10, !dbg !5506

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5496
  ret i32 %11, !dbg !5507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5512, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i8 %1, metadata !5513, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i8 %2, metadata !5514, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i8 %3, metadata !5515, metadata !DIExpression()), !dbg !5517
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5518
  br i1 %5, label %6, label %13, !dbg !5520

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5521
  %8 = load volatile i32, i32* %7, align 4, !dbg !5521
  %9 = icmp eq i32 %8, 0, !dbg !5523
  br i1 %9, label %13, label %10, !dbg !5524

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5525
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5525
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5516, metadata !DIExpression()), !dbg !5517
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5526
  br label %13, !dbg !5527

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5517
  ret i32 %14, !dbg !5528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5531, metadata !DIExpression()), !dbg !5533
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5534
  br i1 %2, label %3, label %10, !dbg !5536

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5537
  %5 = load volatile i32, i32* %4, align 4, !dbg !5537
  %6 = icmp eq i32 %5, 0, !dbg !5539
  br i1 %6, label %10, label %7, !dbg !5540

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5541
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5541
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5532, metadata !DIExpression()), !dbg !5533
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5542
  br label %10, !dbg !5543

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5533
  ret i32 %11, !dbg !5544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5545 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5551, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5552, metadata !DIExpression()), !dbg !5563
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5564
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5564
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5554, metadata !DIExpression()), !dbg !5565
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5566
  br i1 %5, label %6, label %101, !dbg !5568

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5569
  %8 = load i8*, i8** %7, align 4, !dbg !5569
  %9 = icmp eq i8* %8, null, !dbg !5571
  br i1 %9, label %101, label %10, !dbg !5572

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5573
  %12 = load i8*, i8** %11, align 4, !dbg !5573
  %13 = icmp eq i8* %12, null, !dbg !5574
  br i1 %13, label %101, label %14, !dbg !5575

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5576
  %16 = load i32, i32* %15, align 4, !dbg !5576
  %17 = icmp ugt i32 %16, 131071, !dbg !5578
  br i1 %17, label %101, label %18, !dbg !5579

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5580
  %20 = load i32, i32* %19, align 4, !dbg !5580
  %21 = icmp ugt i32 %20, 131071, !dbg !5581
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5582
  br i1 %23, label %101, label %24, !dbg !5582

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5583
  %26 = load i32, i32* %25, align 4, !dbg !5583
  %27 = icmp ugt i32 %26, 131071, !dbg !5585
  br i1 %27, label %101, label %28, !dbg !5586

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5587
  %30 = load i32, i32* %29, align 4, !dbg !5587
  %31 = icmp ugt i32 %30, 131071, !dbg !5588
  br i1 %31, label %101, label %32, !dbg !5589

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5590
  %34 = load i32, i32* %33, align 4, !dbg !5590
  %35 = icmp ugt i32 %34, 131071, !dbg !5591
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5592
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5592
  br i1 %39, label %101, label %40, !dbg !5592

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5593
  %42 = load volatile i32, i32* %41, align 4, !dbg !5593
  %43 = icmp eq i32 %42, 1, !dbg !5595
  br i1 %43, label %44, label %101, !dbg !5596

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5597
  call void @llvm.dbg.value(metadata i32 %45, metadata !5560, metadata !DIExpression()), !dbg !5563
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %46, metadata !5561, metadata !DIExpression()), !dbg !5563
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5599
  call void @llvm.dbg.value(metadata i32 %47, metadata !5562, metadata !DIExpression()), !dbg !5563
  %48 = icmp eq i32 %47, 0, !dbg !5600
  br i1 %48, label %50, label %49, !dbg !5602

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5603
  unreachable, !dbg !5603

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5605
  %52 = ptrtoint i8* %51 to i32, !dbg !5606
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5607
  store i32 %52, i32* %53, align 4, !dbg !5608
  %54 = load i32, i32* %15, align 4, !dbg !5609
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5610
  store i32 %54, i32* %55, align 4, !dbg !5611
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %56, metadata !5562, metadata !DIExpression()), !dbg !5563
  %57 = icmp eq i32 %56, 0, !dbg !5613
  br i1 %57, label %59, label %58, !dbg !5615

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5616
  unreachable, !dbg !5616

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5618
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %61, metadata !5562, metadata !DIExpression()), !dbg !5563
  %62 = icmp eq i32 %61, 0, !dbg !5620
  br i1 %62, label %64, label %63, !dbg !5622

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5623
  unreachable, !dbg !5623

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5625
  call void @llvm.dbg.value(metadata i32 %65, metadata !5562, metadata !DIExpression()), !dbg !5563
  %66 = icmp eq i32 %65, 0, !dbg !5626
  br i1 %66, label %68, label %67, !dbg !5628

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5629
  unreachable, !dbg !5629

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5631
  %70 = ptrtoint i8* %69 to i32, !dbg !5632
  store i32 %70, i32* %53, align 4, !dbg !5633
  %71 = load i32, i32* %25, align 4, !dbg !5634
  store i32 %71, i32* %55, align 4, !dbg !5635
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5636
  call void @llvm.dbg.value(metadata i32 %72, metadata !5562, metadata !DIExpression()), !dbg !5563
  %73 = icmp eq i32 %72, 0, !dbg !5637
  br i1 %73, label %75, label %74, !dbg !5639

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5640
  unreachable, !dbg !5640

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5642
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5643
  call void @llvm.dbg.value(metadata i32 %77, metadata !5562, metadata !DIExpression()), !dbg !5563
  %78 = icmp eq i32 %77, 0, !dbg !5644
  br i1 %78, label %80, label %79, !dbg !5646

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5647
  unreachable, !dbg !5647

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5649
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5650
  call void @llvm.dbg.value(metadata i32 %82, metadata !5562, metadata !DIExpression()), !dbg !5563
  %83 = icmp eq i32 %82, 0, !dbg !5651
  br i1 %83, label %85, label %84, !dbg !5653

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5654
  unreachable, !dbg !5654

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %86, metadata !5553, metadata !DIExpression()), !dbg !5563
  %87 = load i8*, i8** %7, align 4, !dbg !5657
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5658
  store i8* %87, i8** %88, align 4, !dbg !5659
  %89 = load i32, i32* %15, align 4, !dbg !5660
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5661
  store i32 %89, i32* %90, align 4, !dbg !5662
  %91 = load i32, i32* %19, align 4, !dbg !5663
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5664
  store i32 %91, i32* %92, align 4, !dbg !5665
  %93 = load i32, i32* %33, align 4, !dbg !5666
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5667
  store i32 %93, i32* %94, align 4, !dbg !5668
  %95 = load i8*, i8** %11, align 4, !dbg !5669
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5670
  store i8* %95, i8** %96, align 4, !dbg !5671
  %97 = load i32, i32* %25, align 4, !dbg !5672
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5673
  store i32 %97, i32* %98, align 4, !dbg !5674
  %99 = load i32, i32* %29, align 4, !dbg !5675
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5676
  store i32 %99, i32* %100, align 4, !dbg !5677
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5678
  br label %101, !dbg !5679

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5563
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5680
  ret i32 %102, !dbg !5680
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5681 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5740, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.value(metadata i32 %1, metadata !5741, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5750, metadata !DIExpression()), !dbg !5756
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5757
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5757
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5754, metadata !DIExpression()), !dbg !5758
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5758
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5758
  store i32 1, i32* %5, align 4, !dbg !5758
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5758
  store i32 1, i32* %6, align 4, !dbg !5758
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5758
  store i32 1, i32* %7, align 4, !dbg !5758
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5758
  store i32 1, i32* %8, align 4, !dbg !5758
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5758
  store i32 1, i32* %9, align 4, !dbg !5758
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5759
  store volatile i32 0, i32* %10, align 4, !dbg !5760
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5761
  store volatile i32 0, i32* %11, align 4, !dbg !5762
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5763
  store volatile i32 0, i32* %12, align 4, !dbg !5764
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5765
  br i1 %13, label %14, label %17, !dbg !5767

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5768
  %16 = mul i32 %15, 1000, !dbg !5770
  call void @llvm.dbg.value(metadata i32 %16, metadata !5742, metadata !DIExpression()), !dbg !5755
  br label %17, !dbg !5771

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5772
  call void @llvm.dbg.value(metadata i32 %18, metadata !5742, metadata !DIExpression()), !dbg !5755
  %19 = shl i32 %1, 8, !dbg !5773
  %20 = udiv i32 %18, %19, !dbg !5774
  call void @llvm.dbg.value(metadata i32 %20, metadata !5743, metadata !DIExpression()), !dbg !5755
  %21 = mul i32 %18, 10, !dbg !5775
  %22 = udiv i32 %21, %19, !dbg !5776
  %23 = urem i32 %22, 10, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %23, metadata !5744, metadata !DIExpression()), !dbg !5755
  %24 = icmp ne i32 %23, 0, !dbg !5778
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5780
  %27 = zext i1 %26 to i32, !dbg !5780
  %28 = add i32 %20, %27, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %28, metadata !5743, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.value(metadata i32 %28, metadata !5746, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.value(metadata i32 undef, metadata !5747, metadata !DIExpression()), !dbg !5755
  br label %29, !dbg !5781

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5755
  %31 = mul i32 %30, %1, !dbg !5755
  %32 = udiv i32 %18, %31, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %32, metadata !5747, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.value(metadata i32 %30, metadata !5746, metadata !DIExpression()), !dbg !5755
  %33 = icmp ugt i32 %32, 256, !dbg !5782
  %34 = add i32 %30, 1, !dbg !5783
  call void @llvm.dbg.value(metadata i32 %34, metadata !5746, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.value(metadata i32 undef, metadata !5747, metadata !DIExpression()), !dbg !5755
  br i1 %33, label %29, label %35, !dbg !5781, !llvm.loop !5785

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5787
  %37 = urem i32 %36, 10, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %37, metadata !5745, metadata !DIExpression()), !dbg !5755
  %38 = add nsw i32 %32, -1, !dbg !5789
  call void @llvm.dbg.value(metadata i32 %38, metadata !5747, metadata !DIExpression()), !dbg !5755
  %39 = add nsw i32 %32, -2, !dbg !5790
  %40 = lshr i32 %39, 1, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %40, metadata !5748, metadata !DIExpression()), !dbg !5755
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5792
  store volatile i32 3, i32* %41, align 4, !dbg !5793
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5794
  %43 = load volatile i32, i32* %42, align 4, !dbg !5794
  call void @llvm.dbg.value(metadata i32 %43, metadata !5749, metadata !DIExpression()), !dbg !5755
  %44 = or i32 %43, 128, !dbg !5795
  store volatile i32 %44, i32* %42, align 4, !dbg !5796
  %45 = and i32 %30, 255, !dbg !5797
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5798
  store volatile i32 %45, i32* %46, align 4, !dbg !5799
  %47 = lshr i32 %30, 8, !dbg !5800
  %48 = and i32 %47, 255, !dbg !5801
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5802
  store volatile i32 %48, i32* %49, align 4, !dbg !5803
  store volatile i32 %43, i32* %42, align 4, !dbg !5804
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5805
  store volatile i32 %38, i32* %50, align 4, !dbg !5806
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5807
  store volatile i32 %40, i32* %51, align 4, !dbg !5808
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5809
  %53 = load i32, i32* %52, align 4, !dbg !5809
  store volatile i32 %53, i32* %11, align 4, !dbg !5810
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5811
  %55 = load i32, i32* %54, align 4, !dbg !5811
  store volatile i32 %55, i32* %12, align 4, !dbg !5812
  %56 = icmp ugt i32 %1, 2999999, !dbg !5813
  br i1 %56, label %57, label %59, !dbg !5815

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5816
  store volatile i32 18, i32* %58, align 4, !dbg !5818
  br label %59, !dbg !5819

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5820
  ret void, !dbg !5820
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5821 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5825, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 %1, metadata !5826, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 %2, metadata !5827, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 %3, metadata !5828, metadata !DIExpression()), !dbg !5830
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5831
  %6 = load volatile i32, i32* %5, align 4, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %6, metadata !5829, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5830
  store volatile i32 128, i32* %5, align 4, !dbg !5832
  %7 = trunc i32 %6 to i16, !dbg !5833
  %8 = and i16 %7, -4, !dbg !5833
  call void @llvm.dbg.value(metadata i16 %7, metadata !5829, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5830
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5834

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5835
  call void @llvm.dbg.value(metadata i16 %10, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %15, !dbg !5837

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5838
  call void @llvm.dbg.value(metadata i16 %12, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %15, !dbg !5839

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5840
  call void @llvm.dbg.value(metadata i16 %14, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %15, !dbg !5841

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5830
  call void @llvm.dbg.value(metadata i16 %16, metadata !5829, metadata !DIExpression()), !dbg !5830
  %17 = and i16 %16, -61, !dbg !5842
  call void @llvm.dbg.value(metadata i16 %16, metadata !5829, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5830
  %18 = icmp eq i32 %2, 1, !dbg !5843
  %19 = select i1 %18, i16 4, i16 0, !dbg !5843
  %20 = or i16 %17, %19, !dbg !5843
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5829, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5830
  call void @llvm.dbg.value(metadata i16 %20, metadata !5829, metadata !DIExpression()), !dbg !5830
  %21 = icmp eq i32 %3, 2, !dbg !5844
  %22 = or i16 %20, 16, !dbg !5844
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5844
  call void @llvm.dbg.value(metadata i16 %23, metadata !5829, metadata !DIExpression()), !dbg !5830
  %24 = zext i16 %23 to i32, !dbg !5845
  store volatile i32 %24, i32* %5, align 4, !dbg !5846
  ret void, !dbg !5847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5848 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5852, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.value(metadata i8 %1, metadata !5853, metadata !DIExpression()), !dbg !5855
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5856

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %5, metadata !5854, metadata !DIExpression()), !dbg !5855
  %6 = and i32 %5, 32, !dbg !5859
  %7 = icmp eq i32 %6, 0, !dbg !5859
  br i1 %7, label %4, label %8, !dbg !5861, !llvm.loop !5862

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5864
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5866
  store volatile i32 %9, i32* %10, align 4, !dbg !5867
  ret void, !dbg !5868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5869 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5873, metadata !DIExpression()), !dbg !5876
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5877

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %4, metadata !5874, metadata !DIExpression()), !dbg !5876
  %5 = and i32 %4, 1, !dbg !5880
  %6 = icmp eq i32 %5, 0, !dbg !5880
  br i1 %6, label %3, label %7, !dbg !5882, !llvm.loop !5883

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5885
  %9 = load volatile i32, i32* %8, align 4, !dbg !5885
  %10 = trunc i32 %9 to i8, !dbg !5887
  call void @llvm.dbg.value(metadata i8 %10, metadata !5875, metadata !DIExpression()), !dbg !5876
  ret i8 %10, !dbg !5888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5889 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5893, metadata !DIExpression()), !dbg !5896
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5897
  %3 = load volatile i32, i32* %2, align 4, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %3, metadata !5894, metadata !DIExpression()), !dbg !5896
  %4 = and i32 %3, 1, !dbg !5898
  %5 = icmp eq i32 %4, 0, !dbg !5898
  br i1 %5, label %9, label %6, !dbg !5900

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5901
  %8 = load volatile i32, i32* %7, align 4, !dbg !5901
  call void @llvm.dbg.value(metadata i32 %8, metadata !5895, metadata !DIExpression()), !dbg !5896
  br label %9, !dbg !5903

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5904
  call void @llvm.dbg.value(metadata i32 %10, metadata !5895, metadata !DIExpression()), !dbg !5896
  ret i32 %10, !dbg !5905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5906 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5910, metadata !DIExpression()), !dbg !5913
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5914
  %3 = load volatile i32, i32* %2, align 4, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %3, metadata !5912, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5913
  store volatile i32 191, i32* %2, align 4, !dbg !5915
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5916
  %5 = load volatile i32, i32* %4, align 4, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %5, metadata !5911, metadata !DIExpression()), !dbg !5913
  %6 = and i32 %5, 65343, !dbg !5917
  %7 = or i32 %6, 192, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %5, metadata !5911, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5913
  store volatile i32 %7, i32* %4, align 4, !dbg !5918
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5919
  store volatile i32 0, i32* %8, align 4, !dbg !5920
  store volatile i32 0, i32* %2, align 4, !dbg !5921
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5922
  store volatile i32 2, i32* %9, align 4, !dbg !5923
  %10 = and i32 %3, 65535, !dbg !5924
  store volatile i32 %10, i32* %2, align 4, !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5927 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5931, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.value(metadata i8 %1, metadata !5932, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.value(metadata i8 %2, metadata !5933, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.value(metadata i8 %3, metadata !5934, metadata !DIExpression()), !dbg !5937
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5938
  %6 = load volatile i32, i32* %5, align 4, !dbg !5938
  call void @llvm.dbg.value(metadata i32 %6, metadata !5936, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5937
  store volatile i32 191, i32* %5, align 4, !dbg !5939
  %7 = zext i8 %1 to i32, !dbg !5940
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5941
  store volatile i32 %7, i32* %8, align 4, !dbg !5942
  %9 = zext i8 %2 to i32, !dbg !5943
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5944
  store volatile i32 %9, i32* %10, align 4, !dbg !5945
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5946
  %12 = load volatile i32, i32* %11, align 4, !dbg !5946
  call void @llvm.dbg.value(metadata i32 %12, metadata !5935, metadata !DIExpression()), !dbg !5937
  %13 = and i32 %12, 65509, !dbg !5947
  %14 = or i32 %13, 26, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %12, metadata !5935, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5937
  store volatile i32 %14, i32* %11, align 4, !dbg !5948
  %15 = zext i8 %3 to i32, !dbg !5949
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5950
  store volatile i32 %15, i32* %16, align 4, !dbg !5951
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5952
  store volatile i32 1, i32* %17, align 4, !dbg !5953
  %18 = and i32 %6, 65535, !dbg !5954
  store volatile i32 %18, i32* %5, align 4, !dbg !5955
  ret void, !dbg !5956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5957 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5959, metadata !DIExpression()), !dbg !5961
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5962
  %3 = load volatile i32, i32* %2, align 4, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %3, metadata !5960, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5961
  store volatile i32 191, i32* %2, align 4, !dbg !5963
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5964
  store volatile i32 0, i32* %4, align 4, !dbg !5965
  store volatile i32 0, i32* %2, align 4, !dbg !5966
  %5 = and i32 %3, 65535, !dbg !5967
  store volatile i32 %5, i32* %2, align 4, !dbg !5968
  ret void, !dbg !5969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5970 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5972, metadata !DIExpression()), !dbg !5975
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5976
  %3 = load volatile i32, i32* %2, align 4, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %3, metadata !5974, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5975
  store volatile i32 191, i32* %2, align 4, !dbg !5977
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5978
  %5 = load volatile i32, i32* %4, align 4, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %5, metadata !5973, metadata !DIExpression()), !dbg !5975
  %6 = and i32 %5, 65519, !dbg !5979
  %7 = or i32 %6, 16, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %5, metadata !5973, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5975
  store volatile i32 %7, i32* %4, align 4, !dbg !5980
  store volatile i32 0, i32* %2, align 4, !dbg !5981
  store volatile i32 135, i32* %4, align 4, !dbg !5982
  %8 = and i32 %3, 65535, !dbg !5983
  store volatile i32 %8, i32* %2, align 4, !dbg !5984
  ret void, !dbg !5985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5986 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5988, metadata !DIExpression()), !dbg !5991
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5992
  %3 = load volatile i32, i32* %2, align 4, !dbg !5992
  call void @llvm.dbg.value(metadata i32 %3, metadata !5990, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5991
  %4 = load volatile i32, i32* %2, align 4, !dbg !5993
  %5 = and i32 %4, -129, !dbg !5993
  store volatile i32 %5, i32* %2, align 4, !dbg !5993
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5994
  %7 = load volatile i32, i32* %6, align 4, !dbg !5994
  call void @llvm.dbg.value(metadata i32 %7, metadata !5989, metadata !DIExpression()), !dbg !5991
  %8 = and i32 %7, 65530, !dbg !5995
  %9 = or i32 %8, 5, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %7, metadata !5989, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5991
  store volatile i32 %9, i32* %6, align 4, !dbg !5996
  %10 = and i32 %3, 65535, !dbg !5997
  %11 = load volatile i32, i32* %2, align 4, !dbg !5998
  %12 = and i32 %10, %11, !dbg !5998
  store volatile i32 %12, i32* %2, align 4, !dbg !5998
  ret void, !dbg !5999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6000 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6004, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.value(metadata i32 %1, metadata !6005, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.value(metadata i16 145, metadata !6006, metadata !DIExpression()), !dbg !6007
  %3 = icmp eq i32 %1, 0, !dbg !6008
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !6006, metadata !DIExpression()), !dbg !6007
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6010
  store volatile i32 %4, i32* %5, align 4, !dbg !6011
  ret void, !dbg !6012
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6013 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6018, metadata !DIExpression()), !dbg !6022
  call void @llvm.dbg.value(metadata i32 0, metadata !6021, metadata !DIExpression()), !dbg !6022
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6023
  %3 = load volatile i32, i32* %2, align 4, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %3, metadata !6019, metadata !DIExpression()), !dbg !6022
  %4 = and i32 %3, 1, !dbg !6024
  %5 = icmp eq i32 %4, 0, !dbg !6024
  br i1 %5, label %6, label %16, !dbg !6026

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !6027
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !6028

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %16, !dbg !6029

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6031
  %11 = load volatile i32, i32* %10, align 4, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %11, metadata !6020, metadata !DIExpression()), !dbg !6022
  %12 = and i32 %11, 16, !dbg !6032
  %13 = icmp eq i32 %12, 0, !dbg !6032
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %16, !dbg !6034

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !6022
  ret i32 %17, !dbg !6035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6036 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6040, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.value(metadata i32 0, metadata !6042, metadata !DIExpression()), !dbg !6043
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6044
  %3 = load volatile i32, i32* %2, align 4, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %3, metadata !6041, metadata !DIExpression()), !dbg !6043
  %4 = and i32 %3, 14, !dbg !6045
  %5 = icmp eq i32 %4, 0, !dbg !6045
  %6 = sext i1 %5 to i32, !dbg !6047
  call void @llvm.dbg.value(metadata i32 %6, metadata !6042, metadata !DIExpression()), !dbg !6043
  ret i32 %6, !dbg !6048
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6049 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6051, metadata !DIExpression()), !dbg !6053
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6054
  %3 = load volatile i32, i32* %2, align 4, !dbg !6054
  call void @llvm.dbg.value(metadata i32 %3, metadata !6052, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6053
  call void @llvm.dbg.value(metadata i32 %3, metadata !6052, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6053
  ret void, !dbg !6055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6056 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6058, metadata !DIExpression()), !dbg !6059
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6060
  store volatile i32 191, i32* %2, align 4, !dbg !6061
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6062
  store volatile i32 16, i32* %3, align 4, !dbg !6063
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6064
  store volatile i32 0, i32* %4, align 4, !dbg !6065
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6066
  store volatile i32 0, i32* %5, align 4, !dbg !6067
  store volatile i32 128, i32* %2, align 4, !dbg !6068
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6069
  store volatile i32 0, i32* %6, align 4, !dbg !6070
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6071
  store volatile i32 0, i32* %7, align 4, !dbg !6072
  store volatile i32 0, i32* %2, align 4, !dbg !6073
  store volatile i32 0, i32* %7, align 4, !dbg !6074
  store volatile i32 0, i32* %3, align 4, !dbg !6075
  store volatile i32 191, i32* %2, align 4, !dbg !6076
  store volatile i32 0, i32* %3, align 4, !dbg !6077
  store volatile i32 0, i32* %2, align 4, !dbg !6078
  store volatile i32 0, i32* %4, align 4, !dbg !6079
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6080
  store volatile i32 0, i32* %8, align 4, !dbg !6081
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6082
  store volatile i32 0, i32* %9, align 4, !dbg !6083
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6084
  store volatile i32 0, i32* %10, align 4, !dbg !6085
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6086
  store volatile i32 0, i32* %11, align 4, !dbg !6087
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6088
  store volatile i32 0, i32* %12, align 4, !dbg !6089
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6090
  store volatile i32 0, i32* %13, align 4, !dbg !6091
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6092
  store volatile i32 0, i32* %14, align 4, !dbg !6093
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6094
  store volatile i32 0, i32* %15, align 4, !dbg !6095
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6096
  store volatile i32 0, i32* %16, align 4, !dbg !6097
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6098
  store volatile i32 0, i32* %17, align 4, !dbg !6099
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6100
  store volatile i32 0, i32* %18, align 4, !dbg !6101
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6102
  store volatile i32 0, i32* %19, align 4, !dbg !6103
  store volatile i32 0, i32* %13, align 4, !dbg !6104
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6105
  store volatile i32 0, i32* %20, align 4, !dbg !6106
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6107
  store volatile i32 0, i32* %21, align 4, !dbg !6108
  ret void, !dbg !6109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6110 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6112, metadata !DIExpression()), !dbg !6113
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6114

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6115
  %5 = and i32 %4, 64, !dbg !6116
  %6 = icmp eq i32 %5, 0, !dbg !6117
  br i1 %6, label %3, label %7, !dbg !6114, !llvm.loop !6118

7:                                                ; preds = %3
  ret void, !dbg !6120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6125, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata i32 %1, metadata !6126, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata i32 15, metadata !6127, metadata !DIExpression()), !dbg !6128
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6129

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6130
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6133
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6135
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6137
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6128
  call void @llvm.dbg.value(metadata i32 %16, metadata !6127, metadata !DIExpression()), !dbg !6128
  ret i32 %16, !dbg !6139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6151, metadata !DIExpression()), !dbg !6152
  %3 = add i32 %0, -8, !dbg !6153
  %4 = icmp ult i32 %3, 8, !dbg !6153
  br i1 %4, label %5, label %12, !dbg !6153

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6153
  %7 = load i8, i8* %6, align 1, !dbg !6153
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !6153
  %9 = load i32, i32* %8, align 4, !dbg !6153
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6154
  store i8 %7, i8* %10, align 4, !dbg !6154
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6154
  store i32 %9, i32* %11, align 4, !dbg !6154
  br label %12, !dbg !6156

12:                                               ; preds = %2, %5
  ret void, !dbg !6156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6157 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6161, metadata !DIExpression()), !dbg !6162
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6163
  store volatile i32 3, i32* %2, align 4, !dbg !6164
  ret void, !dbg !6165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6168, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6171, metadata !DIExpression()), !dbg !6172
  %2 = add i32 %0, -30, !dbg !6173
  %3 = icmp ult i32 %2, 3, !dbg !6173
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %5, metadata !6169, metadata !DIExpression()), !dbg !6172
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6174
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6174
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6171, metadata !DIExpression()), !dbg !6172
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %8, metadata !6170, metadata !DIExpression()), !dbg !6172
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6176

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6177
  br label %13, !dbg !6179

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6180
  br label %13, !dbg !6181

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6182
  br label %13, !dbg !6183

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #23, !dbg !6184
  unreachable, !dbg !6184

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_init(i32 noundef %0, %struct.anon* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6197, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata %struct.anon* %1, metadata !6198, metadata !DIExpression()), !dbg !6202
  %3 = icmp ugt i32 %0, 2, !dbg !6203
  br i1 %3, label %19, label %4, !dbg !6205

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !6206
  %6 = load i32, i32* %5, align 4, !dbg !6206
  %7 = icmp ugt i32 %6, 5, !dbg !6208
  br i1 %7, label %19, label %8, !dbg !6209

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6210
  call void @llvm.dbg.value(metadata i32 %9, metadata !6200, metadata !DIExpression()), !dbg !6211
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* @s_i2c_master_status, i32 0, i32 %0, !dbg !6212
  %11 = load volatile i8, i8* %10, align 1, !dbg !6212
  %12 = icmp eq i8 %11, 1, !dbg !6212
  br i1 %12, label %18, label %13, !dbg !6210

13:                                               ; preds = %8
  store volatile i8 1, i8* %10, align 1, !dbg !6214
  call void @llvm.dbg.value(metadata i32 0, metadata !6199, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i32 undef, metadata !6199, metadata !DIExpression()), !dbg !6202
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !6210
  %14 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_pdn_table to [0 x i32]*), i32 0, i32 %0, !dbg !6216
  %15 = load i32, i32* %14, align 4, !dbg !6216
  %16 = tail call i32 @hal_clock_enable(i32 noundef %15) #20, !dbg !6217
  %17 = load i32, i32* %5, align 4, !dbg !6218
  tail call void @i2c_set_frequency(i32 noundef %0, i32 noundef %17) #20, !dbg !6219
  br label %19, !dbg !6220

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !6199, metadata !DIExpression()), !dbg !6202
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !6210
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_i2c_master_init, i32 0, i32 0), i32 noundef 165, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i32 0, i32 0), i32 noundef %0) #20, !dbg !6221
  br label %19, !dbg !6224

19:                                               ; preds = %4, %2, %13, %18
  %20 = phi i32 [ -3, %18 ], [ 0, %13 ], [ -2, %2 ], [ -1, %4 ], !dbg !6202
  ret i32 %20, !dbg !6225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6230, metadata !DIExpression()), !dbg !6231
  %2 = icmp ugt i32 %0, 2, !dbg !6232
  br i1 %2, label %18, label %3, !dbg !6234

3:                                                ; preds = %1
  %4 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6235
  %5 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %4, align 4, !dbg !6235
  %6 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %5, i32 0, i32 18, !dbg !6235
  store volatile i16 0, i16* %6, align 2, !dbg !6235
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* @s_i2c_irq_table, i32 0, i32 %0, !dbg !6236
  %8 = load i32, i32* %7, align 4, !dbg !6236
  %9 = tail call i32 @hal_nvic_disable_irq(i32 noundef %8) #20, !dbg !6237
  %10 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %4, align 4, !dbg !6238
  %11 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %10, i32 0, i32 4, !dbg !6238
  store volatile i16 0, i16* %11, align 2, !dbg !6238
  %12 = getelementptr inbounds [3 x void (i8, i32, i8*)*], [3 x void (i8, i32, i8*)*]* @s_i2c_callback, i32 0, i32 %0, !dbg !6239
  store void (i8, i32, i8*)* null, void (i8, i32, i8*)** %12, align 4, !dbg !6240
  %13 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !6241
  store volatile i8 0, i8* %13, align 4, !dbg !6242
  %14 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_pdn_table to [0 x i32]*), i32 0, i32 %0, !dbg !6243
  %15 = load i32, i32* %14, align 4, !dbg !6243
  %16 = tail call i32 @hal_clock_disable(i32 noundef %15) #20, !dbg !6244
  %17 = getelementptr inbounds [3 x i8], [3 x i8]* @s_i2c_master_status, i32 0, i32 %0, !dbg !6245
  store volatile i8 0, i8* %17, align 1, !dbg !6245
  br label %18, !dbg !6247

18:                                               ; preds = %1, %3
  %19 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6231
  ret i32 %19, !dbg !6248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6253, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata i32 %1, metadata !6254, metadata !DIExpression()), !dbg !6255
  %3 = icmp ugt i32 %0, 2, !dbg !6256
  br i1 %3, label %15, label %4, !dbg !6258

4:                                                ; preds = %2
  %5 = icmp ugt i32 %1, 5, !dbg !6259
  br i1 %5, label %15, label %6, !dbg !6261

6:                                                ; preds = %4
  %7 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6262
  %8 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %7, align 4, !dbg !6262
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %8, i32 0, i32 18, !dbg !6262
  %10 = load volatile i16, i16* %9, align 2, !dbg !6262
  %11 = and i16 %10, 1, !dbg !6262
  %12 = icmp eq i16 %11, 0, !dbg !6264
  br i1 %12, label %14, label %13, !dbg !6265

13:                                               ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__.hal_i2c_master_set_frequency, i32 0, i32 0), i32 noundef 231, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.84, i32 0, i32 0), i32 noundef %0) #20, !dbg !6266
  br label %15, !dbg !6268

14:                                               ; preds = %6
  tail call void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) #20, !dbg !6269
  br label %15, !dbg !6270

15:                                               ; preds = %4, %2, %14, %13
  %16 = phi i32 [ -3, %13 ], [ 0, %14 ], [ -2, %2 ], [ -1, %4 ], !dbg !6255
  ret i32 %16, !dbg !6271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_register_callback(i32 noundef %0, void (i8, i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6276, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata void (i8, i32, i8*)* %1, metadata !6277, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata i8* %2, metadata !6278, metadata !DIExpression()), !dbg !6279
  %4 = icmp ugt i32 %0, 2, !dbg !6280
  br i1 %4, label %14, label %5, !dbg !6282

5:                                                ; preds = %3
  %6 = icmp eq void (i8, i32, i8*)* %1, null, !dbg !6283
  br i1 %6, label %14, label %7, !dbg !6285

7:                                                ; preds = %5
  %8 = getelementptr inbounds [3 x void (i8, i32, i8*)*], [3 x void (i8, i32, i8*)*]* @s_i2c_callback, i32 0, i32 %0, !dbg !6286
  store void (i8, i32, i8*)* %1, void (i8, i32, i8*)** %8, align 4, !dbg !6287
  %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* @s_i2c_callback_parameter, i32 0, i32 %0, !dbg !6288
  store i8* %2, i8** %9, align 4, !dbg !6289
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* @s_i2c_irq_table, i32 0, i32 %0, !dbg !6290
  %11 = load i32, i32* %10, align 4, !dbg !6290
  %12 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %11, void (i32)* noundef nonnull @hal_i2c_master_isr) #20, !dbg !6291
  %13 = tail call i32 @hal_nvic_enable_irq(i32 noundef %11) #20, !dbg !6292
  br label %14, !dbg !6293

14:                                               ; preds = %5, %3, %7
  %15 = phi i32 [ 0, %7 ], [ -2, %3 ], [ -1, %5 ], !dbg !6279
  ret i32 %15, !dbg !6294
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_i2c_master_isr(i32 noundef %0) #0 !dbg !6295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6297, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 3, metadata !6298, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 0, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 0, metadata !6299, metadata !DIExpression()), !dbg !6300
  br label %2, !dbg !6301

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6299, metadata !DIExpression()), !dbg !6300
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @s_i2c_irq_table, i32 0, i32 %3, !dbg !6303
  %5 = load i32, i32* %4, align 4, !dbg !6303
  %6 = icmp eq i32 %5, %0, !dbg !6307
  br i1 %6, label %11, label %7, !dbg !6308

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !6309
  call void @llvm.dbg.value(metadata i32 %8, metadata !6299, metadata !DIExpression()), !dbg !6300
  %9 = icmp eq i32 %8, 3, !dbg !6310
  br i1 %9, label %10, label %2, !dbg !6301, !llvm.loop !6311

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !6298, metadata !DIExpression()), !dbg !6300
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_i2c_master_isr, i32 0, i32 0), i32 noundef 857, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i32 noundef 3, i32 noundef 3) #20, !dbg !6313
  br label %16, !dbg !6316

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !6298, metadata !DIExpression()), !dbg !6300
  %12 = getelementptr inbounds [3 x void (i8, i32, i8*)*], [3 x void (i8, i32, i8*)*]* @s_i2c_callback, i32 0, i32 %3, !dbg !6317
  %13 = load void (i8, i32, i8*)*, void (i8, i32, i8*)** %12, align 4, !dbg !6317
  %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* @s_i2c_callback_parameter, i32 0, i32 %3, !dbg !6318
  %15 = load i8*, i8** %14, align 4, !dbg !6318
  tail call void @hal_i2c_isr_handler(i32 noundef %3, void (i8, i32, i8*)* noundef %13, i8* noundef %15) #21, !dbg !6319
  br label %16, !dbg !6320

16:                                               ; preds = %11, %10
  ret void, !dbg !6320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_i2c_isr_handler(i32 noundef %0, void (i8, i32, i8*)* noundef readonly %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6325, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata void (i8, i32, i8*)* %1, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %2, metadata !6327, metadata !DIExpression()), !dbg !6330
  %4 = tail call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !6331
  call void @llvm.dbg.value(metadata i32 %4, metadata !6328, metadata !DIExpression()), !dbg !6330
  %5 = icmp eq i32 %4, 0, !dbg !6332
  br i1 %5, label %8, label %6, !dbg !6334

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_i2c_isr_handler, i32 0, i32 0), i32 noundef 877, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0), i32 noundef %0, i32 noundef %4) #20, !dbg !6335
  %7 = icmp eq i32 %4, -4, !dbg !6337
  br i1 %7, label %18, label %8, !dbg !6339

8:                                                ; preds = %6, %3
  tail call fastcc void @hal_i2c_wait_dma_finish(i32 noundef %0) #21, !dbg !6340
  %9 = icmp eq void (i8, i32, i8*)* %1, null, !dbg !6341
  br i1 %9, label %17, label %10, !dbg !6343

10:                                               ; preds = %8
  %11 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6344
  %12 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %11, align 4, !dbg !6344
  %13 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %12, i32 0, i32 2, !dbg !6344
  %14 = load volatile i16, i16* %13, align 2, !dbg !6344
  %15 = lshr i16 %14, 1, !dbg !6344
  %16 = trunc i16 %15 to i8, !dbg !6344
  tail call void %1(i8 noundef zeroext %16, i32 noundef %4, i8* noundef %2) #20, !dbg !6346
  br label %18, !dbg !6347

17:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_i2c_isr_handler, i32 0, i32 0), i32 noundef 900, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %0) #20, !dbg !6348
  br label %18

18:                                               ; preds = %10, %17, %6
  ret void, !dbg !6350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_i2c_wait_dma_finish(i32 noundef %0) unnamed_addr #0 !dbg !6351 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6355, metadata !DIExpression()), !dbg !6361
  %5 = bitcast i32* %2 to i8*, !dbg !6362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6362
  %6 = bitcast i32* %3 to i8*, !dbg !6362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6362
  %7 = bitcast i32* %4 to i8*, !dbg !6362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6362
  %8 = icmp ugt i32 %0, 1, !dbg !6363
  br i1 %8, label %43, label %9, !dbg !6365

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !6356, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %10 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #20, !dbg !6366
  %11 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %11, metadata !6359, metadata !DIExpression()), !dbg !6368
  %12 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !6369
  %13 = load volatile i8, i8* %12, align 4, !dbg !6369, !range !2812
  %14 = icmp eq i8 %13, 0, !dbg !6369
  br i1 %14, label %17, label %15, !dbg !6371

15:                                               ; preds = %39, %9
  %16 = phi i32 [ %11, %9 ], [ %40, %39 ], !dbg !6367
  call void @restore_interrupt_mask(i32 noundef %16) #20, !dbg !6372
  br label %43, !dbg !6374

17:                                               ; preds = %9, %39
  %18 = phi i32 [ %40, %39 ], [ %11, %9 ]
  call void @llvm.dbg.value(metadata i32* %3, metadata !6357, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %19 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #20, !dbg !6375
  %20 = load i32, i32* %2, align 4, !dbg !6376
  call void @llvm.dbg.value(metadata i32 %20, metadata !6356, metadata !DIExpression()), !dbg !6361
  %21 = load i32, i32* %3, align 4, !dbg !6377
  call void @llvm.dbg.value(metadata i32 %21, metadata !6357, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32* %4, metadata !6358, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %22 = call i32 @hal_gpt_get_duration_count(i32 noundef %20, i32 noundef %21, i32* noundef nonnull %4) #20, !dbg !6378
  %23 = load i32, i32* %4, align 4, !dbg !6379
  call void @llvm.dbg.value(metadata i32 %23, metadata !6358, metadata !DIExpression()), !dbg !6361
  %24 = icmp ugt i32 %23, 20000, !dbg !6381
  br i1 %24, label %25, label %39, !dbg !6382

25:                                               ; preds = %17
  %26 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !6369
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_i2c_wait_dma_finish, i32 0, i32 0), i32 noundef 984, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i32 0, i32 0), i32 noundef %0) #20, !dbg !6383
  call void @restore_interrupt_mask(i32 noundef %18) #20, !dbg !6385
  %27 = bitcast %struct.i2c_dma_callback_parameter_t* %26 to i8*, !dbg !6386
  call void @hal_i2c_master_dma_callback(i32 noundef 0, i8* noundef nonnull %27) #21, !dbg !6387
  %28 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %26, i32 0, i32 0, !dbg !6388
  %29 = load volatile i32, i32* %28, align 4, !dbg !6388
  %30 = icmp eq i32 %29, 11, !dbg !6390
  br i1 %30, label %34, label %31, !dbg !6391

31:                                               ; preds = %25
  %32 = load volatile i32, i32* %28, align 4, !dbg !6392
  %33 = icmp eq i32 %32, 14, !dbg !6393
  br i1 %33, label %34, label %43, !dbg !6394

34:                                               ; preds = %31, %25
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %0, !dbg !6395
  %36 = load volatile i8, i8* %35, align 1, !dbg !6395
  %37 = icmp eq i8 %36, 1, !dbg !6396
  br i1 %37, label %38, label %43, !dbg !6397

38:                                               ; preds = %34
  call void @hal_i2c_master_dma_callback(i32 noundef 0, i8* noundef nonnull %27) #21, !dbg !6398
  br label %43, !dbg !6400

39:                                               ; preds = %17
  call void @restore_interrupt_mask(i32 noundef %18) #20, !dbg !6401
  %40 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %40, metadata !6359, metadata !DIExpression()), !dbg !6368
  %41 = load volatile i8, i8* %12, align 4, !dbg !6369, !range !2812
  %42 = icmp eq i8 %41, 0, !dbg !6369
  br i1 %42, label %17, label %15, !dbg !6371

43:                                               ; preds = %31, %34, %38, %15, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6402
  ret void, !dbg !6402
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_i2c_master_dma_callback(i32 noundef %0, i8* nocapture noundef %1) #0 !dbg !6403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i8* %1, metadata !6409, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i8* %1, metadata !6410, metadata !DIExpression()), !dbg !6411
  %3 = bitcast i8* %1 to i32*, !dbg !6412
  %4 = load i32, i32* %3, align 4, !dbg !6412
  switch i32 %4, label %63 [
    i32 7, label %5
    i32 12, label %5
    i32 9, label %18
    i32 13, label %18
    i32 11, label %31
    i32 14, label %31
  ], !dbg !6414

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !6415
  %7 = load i8, i8* %6, align 1, !dbg !6415
  %8 = zext i8 %7 to i32, !dbg !6417
  %9 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %8, !dbg !6417
  %10 = load i32, i32* %9, align 4, !dbg !6417
  %11 = tail call i32 @pdma_stop(i32 noundef %10) #20, !dbg !6418
  %12 = load i8, i8* %6, align 1, !dbg !6419
  %13 = zext i8 %12 to i32, !dbg !6420
  %14 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %13, !dbg !6420
  %15 = load i32, i32* %14, align 4, !dbg !6420
  %16 = tail call i32 @pdma_deinit(i32 noundef %15) #20, !dbg !6421
  %17 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6422
  store i8 1, i8* %17, align 4, !dbg !6423
  br label %63, !dbg !6424

18:                                               ; preds = %2, %2
  %19 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !6425
  %20 = load i8, i8* %19, align 1, !dbg !6425
  %21 = zext i8 %20 to i32, !dbg !6428
  %22 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %21, !dbg !6428
  %23 = load i32, i32* %22, align 4, !dbg !6428
  %24 = tail call i32 @pdma_stop(i32 noundef %23) #20, !dbg !6429
  %25 = load i8, i8* %19, align 1, !dbg !6430
  %26 = zext i8 %25 to i32, !dbg !6431
  %27 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %26, !dbg !6431
  %28 = load i32, i32* %27, align 4, !dbg !6431
  %29 = tail call i32 @pdma_deinit(i32 noundef %28) #20, !dbg !6432
  %30 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6433
  store i8 1, i8* %30, align 4, !dbg !6434
  br label %63, !dbg !6435

31:                                               ; preds = %2, %2
  %32 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !6436
  %33 = load i8, i8* %32, align 1, !dbg !6436
  %34 = zext i8 %33 to i32, !dbg !6439
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %34, !dbg !6439
  %36 = load volatile i8, i8* %35, align 1, !dbg !6440
  %37 = add i8 %36, 1, !dbg !6440
  store volatile i8 %37, i8* %35, align 1, !dbg !6440
  %38 = load volatile i8, i8* %35, align 1, !dbg !6441
  %39 = icmp eq i8 %38, 2, !dbg !6443
  br i1 %39, label %40, label %63, !dbg !6444

40:                                               ; preds = %31
  %41 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %34, !dbg !6445
  %42 = load i32, i32* %41, align 4, !dbg !6445
  %43 = tail call i32 @pdma_stop(i32 noundef %42) #20, !dbg !6447
  %44 = load i8, i8* %32, align 1, !dbg !6448
  %45 = zext i8 %44 to i32, !dbg !6449
  %46 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %45, !dbg !6449
  %47 = load i32, i32* %46, align 4, !dbg !6449
  %48 = tail call i32 @pdma_stop(i32 noundef %47) #20, !dbg !6450
  %49 = load i8, i8* %32, align 1, !dbg !6451
  %50 = zext i8 %49 to i32, !dbg !6452
  %51 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %50, !dbg !6452
  %52 = load i32, i32* %51, align 4, !dbg !6452
  %53 = tail call i32 @pdma_deinit(i32 noundef %52) #20, !dbg !6453
  %54 = load i8, i8* %32, align 1, !dbg !6454
  %55 = zext i8 %54 to i32, !dbg !6455
  %56 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %55, !dbg !6455
  %57 = load i32, i32* %56, align 4, !dbg !6455
  %58 = tail call i32 @pdma_deinit(i32 noundef %57) #20, !dbg !6456
  %59 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6457
  store i8 1, i8* %59, align 4, !dbg !6458
  %60 = load i8, i8* %32, align 1, !dbg !6459
  %61 = zext i8 %60 to i32, !dbg !6460
  %62 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %61, !dbg !6460
  store volatile i8 0, i8* %62, align 1, !dbg !6461
  br label %63, !dbg !6462

63:                                               ; preds = %2, %18, %31, %40, %5
  ret void, !dbg !6463
}

; Function Attrs: optsize
declare dso_local i32 @pdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @pdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !6464 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6468, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata i8 %1, metadata !6469, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata i8* %2, metadata !6470, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata i32 %3, metadata !6471, metadata !DIExpression()), !dbg !6482
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !6483
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !6483
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !6473, metadata !DIExpression()), !dbg !6484
  %7 = icmp ugt i32 %0, 2, !dbg !6485
  br i1 %7, label %30, label %8, !dbg !6487

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !6488
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !6490
  br i1 %11, label %30, label %12, !dbg !6490

12:                                               ; preds = %8
  %13 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6491
  %14 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !6491
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 18, !dbg !6491
  %16 = load volatile i16, i16* %15, align 2, !dbg !6491
  %17 = and i16 %16, 1, !dbg !6491
  %18 = icmp eq i16 %17, 0, !dbg !6493
  br i1 %18, label %20, label %19, !dbg !6494

19:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_i2c_master_send_polling, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i32 noundef %0) #20, !dbg !6495
  br label %30, !dbg !6497

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 4, !dbg !6498
  store volatile i16 0, i16* %21, align 2, !dbg !6498
  %22 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !6499
  store i32 %3, i32* %22, align 4, !dbg !6500
  %23 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !6501
  store i32 0, i32* %23, align 4, !dbg !6502
  %24 = shl i8 %1, 1, !dbg !6503
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 6, i8 noundef zeroext %24, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !6504
  call void @i2c_write_fifo(i32 noundef %0, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !6505
  %25 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !6506
  %26 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %25, i32 0, i32 18, !dbg !6506
  store volatile i16 1, i16* %26, align 2, !dbg !6506
  call fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef 6) #21, !dbg !6507
  %27 = call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !6508
  call void @llvm.dbg.value(metadata i32 %27, metadata !6472, metadata !DIExpression()), !dbg !6482
  %28 = icmp eq i32 %27, 0, !dbg !6509
  br i1 %28, label %30, label %29, !dbg !6511

29:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_i2c_master_send_polling, i32 0, i32 0), i32 noundef 317, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0, i32 noundef %27) #20, !dbg !6512
  br label %30, !dbg !6514

30:                                               ; preds = %20, %8, %4, %29, %19
  %31 = phi i32 [ -3, %19 ], [ -4, %29 ], [ -2, %4 ], [ -1, %8 ], [ 0, %20 ], !dbg !6482
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !6515
  ret i32 %31, !dbg !6515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !6516 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6520, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 %1, metadata !6521, metadata !DIExpression()), !dbg !6527
  %6 = bitcast i32* %3 to i8*, !dbg !6528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6528
  %7 = bitcast i32* %4 to i8*, !dbg !6528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6528
  %8 = bitcast i32* %5 to i8*, !dbg !6528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !6528
  call void @llvm.dbg.value(metadata i32* %3, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  %9 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #20, !dbg !6529
  %10 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6530
  call void @llvm.dbg.value(metadata i32 %10, metadata !6525, metadata !DIExpression()), !dbg !6531
  %11 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6532
  %12 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %11, align 4, !dbg !6532
  %13 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %12, i32 0, i32 6, !dbg !6532
  %14 = load volatile i16, i16* %13, align 2, !dbg !6532
  %15 = icmp eq i16 %14, 0, !dbg !6534
  br i1 %15, label %16, label %31, !dbg !6535

16:                                               ; preds = %2, %25
  %17 = phi i32 [ %26, %25 ], [ %10, %2 ]
  call void @llvm.dbg.value(metadata i32* %4, metadata !6523, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  %18 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %4) #20, !dbg !6536
  %19 = load i32, i32* %3, align 4, !dbg !6537
  call void @llvm.dbg.value(metadata i32 %19, metadata !6522, metadata !DIExpression()), !dbg !6527
  %20 = load i32, i32* %4, align 4, !dbg !6538
  call void @llvm.dbg.value(metadata i32 %20, metadata !6523, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32* %5, metadata !6524, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  %21 = call i32 @hal_gpt_get_duration_count(i32 noundef %19, i32 noundef %20, i32* noundef nonnull %5) #20, !dbg !6539
  %22 = load i32, i32* %5, align 4, !dbg !6540
  call void @llvm.dbg.value(metadata i32 %22, metadata !6524, metadata !DIExpression()), !dbg !6527
  %23 = icmp ugt i32 %22, 20000, !dbg !6542
  br i1 %23, label %24, label %25, !dbg !6543

24:                                               ; preds = %16
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__FUNCTION__.hal_i2c_master_wait_transaction_finish, i32 0, i32 0), i32 noundef 957, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0), i32 noundef %0, i32 noundef %1) #20, !dbg !6544
  br label %25, !dbg !6546

25:                                               ; preds = %16, %24
  call void @restore_interrupt_mask(i32 noundef %17) #20, !dbg !6547
  %26 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6530
  call void @llvm.dbg.value(metadata i32 %26, metadata !6525, metadata !DIExpression()), !dbg !6531
  %27 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %11, align 4, !dbg !6532
  %28 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %27, i32 0, i32 6, !dbg !6532
  %29 = load volatile i16, i16* %28, align 2, !dbg !6532
  %30 = icmp eq i16 %29, 0, !dbg !6534
  br i1 %30, label %16, label %31, !dbg !6535

31:                                               ; preds = %25, %2
  %32 = phi i32 [ %10, %2 ], [ %26, %25 ], !dbg !6530
  call void @restore_interrupt_mask(i32 noundef %32) #20, !dbg !6548
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !6550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6550
  ret void, !dbg !6550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_dma(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !6551 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  %6 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6553, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i8 %1, metadata !6554, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i8* %2, metadata !6555, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i32 %3, metadata !6556, metadata !DIExpression()), !dbg !6568
  %7 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !6569
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #22, !dbg !6569
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !6557, metadata !DIExpression()), !dbg !6570
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 0, !dbg !6571
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !6571
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %6, metadata !6558, metadata !DIExpression()), !dbg !6572
  %9 = icmp ugt i32 %0, 2, !dbg !6573
  br i1 %9, label %49, label %10, !dbg !6575

10:                                               ; preds = %4
  %11 = icmp eq i8* %2, null, !dbg !6576
  br i1 %11, label %49, label %12, !dbg !6578

12:                                               ; preds = %10
  %13 = icmp ugt i32 %0, 1, !dbg !6579
  br i1 %13, label %49, label %14, !dbg !6581

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6582
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6582
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !6582
  %18 = load volatile i16, i16* %17, align 2, !dbg !6582
  %19 = and i16 %18, 1, !dbg !6582
  %20 = icmp eq i16 %19, 0, !dbg !6584
  br i1 %20, label %22, label %21, !dbg !6585

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_i2c_master_send_dma, i32 0, i32 0), i32 noundef 342, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !6586
  br label %49, !dbg !6588

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !6589
  %24 = load i32, i32* %23, align 4, !dbg !6589
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !6590
  store i8 0, i8* %8, align 4, !dbg !6591
  %26 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 2, !dbg !6592
  store i32 %3, i32* %26, align 4, !dbg !6593
  %27 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 3, !dbg !6594
  store i32 0, i32* %27, align 4, !dbg !6595
  %28 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 1, !dbg !6596
  store i32 0, i32* %28, align 4, !dbg !6597
  %29 = load i32, i32* %23, align 4, !dbg !6598
  %30 = call i32 @pdma_configure(i32 noundef %29, %struct.pdma_config_t* noundef nonnull %6) #20, !dbg !6599
  %31 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !6600
  %32 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %31, i32 0, i32 0, !dbg !6601
  store volatile i32 7, i32* %32, align 4, !dbg !6602
  %33 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !6603
  store volatile i8 0, i8* %33, align 4, !dbg !6604
  %34 = trunc i32 %0 to i8, !dbg !6605
  %35 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !6606
  store volatile i8 %34, i8* %35, align 1, !dbg !6607
  %36 = load i32, i32* %23, align 4, !dbg !6608
  %37 = bitcast %struct.i2c_dma_callback_parameter_t* %31 to i8*, !dbg !6609
  %38 = call i32 @pdma_register_callback(i32 noundef %36, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %37) #20, !dbg !6610
  %39 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !6611
  store i32 %3, i32* %39, align 4, !dbg !6612
  %40 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !6613
  store i32 0, i32* %40, align 4, !dbg !6614
  %41 = shl i8 %1, 1, !dbg !6615
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 7, i8 noundef zeroext %41, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !6616
  %42 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6617
  %43 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %42, i32 0, i32 4, !dbg !6617
  store volatile i16 31, i16* %43, align 2, !dbg !6617
  %44 = load i32, i32* %23, align 4, !dbg !6618
  %45 = ptrtoint i8* %2 to i32, !dbg !6619
  %46 = call i32 @pdma_start_interrupt(i32 noundef %44, i32 noundef %45) #20, !dbg !6620
  %47 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6621
  %48 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %47, i32 0, i32 18, !dbg !6621
  store volatile i16 1, i16* %48, align 2, !dbg !6621
  br label %49, !dbg !6622

49:                                               ; preds = %12, %10, %4, %22, %21
  %50 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %4 ], [ -1, %10 ], [ -2, %12 ], !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !6623
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #22, !dbg !6623
  ret i32 %50, !dbg !6623
}

; Function Attrs: optsize
declare dso_local i32 @pdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @pdma_configure(i32 noundef, %struct.pdma_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @pdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @pdma_start_interrupt(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !6624 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6628, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8 %1, metadata !6629, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8* %2, metadata !6630, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 %3, metadata !6631, metadata !DIExpression()), !dbg !6634
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !6635
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !6635
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !6633, metadata !DIExpression()), !dbg !6636
  %7 = icmp ugt i32 %0, 2, !dbg !6637
  br i1 %7, label %32, label %8, !dbg !6639

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !6640
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !6642
  br i1 %11, label %32, label %12, !dbg !6642

12:                                               ; preds = %8
  %13 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6643
  %14 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !6643
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 18, !dbg !6643
  %16 = load volatile i16, i16* %15, align 2, !dbg !6643
  %17 = and i16 %16, 1, !dbg !6643
  %18 = icmp eq i16 %17, 0, !dbg !6645
  br i1 %18, label %20, label %19, !dbg !6646

19:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.hal_i2c_master_receive_polling, i32 0, i32 0), i32 noundef 398, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !6647
  br label %32, !dbg !6649

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 4, !dbg !6650
  store volatile i16 0, i16* %21, align 2, !dbg !6650
  %22 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !6651
  store i32 0, i32* %22, align 4, !dbg !6652
  %23 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !6653
  store i32 %3, i32* %23, align 4, !dbg !6654
  %24 = shl i8 %1, 1, !dbg !6655
  %25 = or i8 %24, 1, !dbg !6655
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 8, i8 noundef zeroext %25, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !6656
  %26 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !6657
  %27 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %26, i32 0, i32 18, !dbg !6657
  store volatile i16 1, i16* %27, align 2, !dbg !6657
  call fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef 8) #21, !dbg !6658
  %28 = call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !6659
  call void @llvm.dbg.value(metadata i32 %28, metadata !6632, metadata !DIExpression()), !dbg !6634
  %29 = icmp eq i32 %28, 0, !dbg !6660
  br i1 %29, label %31, label %30, !dbg !6662

30:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.hal_i2c_master_receive_polling, i32 0, i32 0), i32 noundef 430, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i32 0, i32 0), i32 noundef %0, i32 noundef %28) #20, !dbg !6663
  br label %32, !dbg !6665

31:                                               ; preds = %20
  call void @i2c_read_fifo(i32 noundef %0, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !6666
  br label %32, !dbg !6668

32:                                               ; preds = %8, %4, %31, %30, %19
  %33 = phi i32 [ -3, %19 ], [ -4, %30 ], [ 0, %31 ], [ -2, %4 ], [ -1, %8 ], !dbg !6634
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !6669
  ret i32 %33, !dbg !6669
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_receive_dma(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !6670 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  %6 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6672, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i8 %1, metadata !6673, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i8* %2, metadata !6674, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i32 %3, metadata !6675, metadata !DIExpression()), !dbg !6678
  %7 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !6679
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #22, !dbg !6679
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !6676, metadata !DIExpression()), !dbg !6680
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 0, !dbg !6681
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !6681
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %6, metadata !6677, metadata !DIExpression()), !dbg !6682
  %9 = icmp ugt i32 %0, 2, !dbg !6683
  br i1 %9, label %50, label %10, !dbg !6685

10:                                               ; preds = %4
  %11 = icmp eq i8* %2, null, !dbg !6686
  br i1 %11, label %50, label %12, !dbg !6688

12:                                               ; preds = %10
  %13 = icmp ugt i32 %0, 1, !dbg !6689
  br i1 %13, label %50, label %14, !dbg !6691

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6692
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6692
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !6692
  %18 = load volatile i16, i16* %17, align 2, !dbg !6692
  %19 = and i16 %18, 1, !dbg !6692
  %20 = icmp eq i16 %19, 0, !dbg !6694
  br i1 %20, label %22, label %21, !dbg !6695

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_i2c_master_receive_dma, i32 0, i32 0), i32 noundef 459, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i32 noundef %0) #20, !dbg !6696
  br label %50, !dbg !6698

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !6699
  %24 = load i32, i32* %23, align 4, !dbg !6699
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !6700
  store i8 0, i8* %8, align 4, !dbg !6701
  %26 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 2, !dbg !6702
  store i32 %3, i32* %26, align 4, !dbg !6703
  %27 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 3, !dbg !6704
  store i32 1, i32* %27, align 4, !dbg !6705
  %28 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 1, !dbg !6706
  store i32 0, i32* %28, align 4, !dbg !6707
  %29 = load i32, i32* %23, align 4, !dbg !6708
  %30 = call i32 @pdma_configure(i32 noundef %29, %struct.pdma_config_t* noundef nonnull %6) #20, !dbg !6709
  %31 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !6710
  %32 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %31, i32 0, i32 0, !dbg !6711
  store volatile i32 9, i32* %32, align 4, !dbg !6712
  %33 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !6713
  store volatile i8 0, i8* %33, align 4, !dbg !6714
  %34 = trunc i32 %0 to i8, !dbg !6715
  %35 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !6716
  store volatile i8 %34, i8* %35, align 1, !dbg !6717
  %36 = load i32, i32* %23, align 4, !dbg !6718
  %37 = bitcast %struct.i2c_dma_callback_parameter_t* %31 to i8*, !dbg !6719
  %38 = call i32 @pdma_register_callback(i32 noundef %36, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %37) #20, !dbg !6720
  %39 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !6721
  store i32 0, i32* %39, align 4, !dbg !6722
  %40 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !6723
  store i32 %3, i32* %40, align 4, !dbg !6724
  %41 = shl i8 %1, 1, !dbg !6725
  %42 = or i8 %41, 1, !dbg !6725
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 9, i8 noundef zeroext %42, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !6726
  %43 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6727
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %43, i32 0, i32 4, !dbg !6727
  store volatile i16 31, i16* %44, align 2, !dbg !6727
  %45 = load i32, i32* %23, align 4, !dbg !6728
  %46 = ptrtoint i8* %2 to i32, !dbg !6729
  %47 = call i32 @pdma_start_interrupt(i32 noundef %45, i32 noundef %46) #20, !dbg !6730
  %48 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6731
  %49 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %48, i32 0, i32 18, !dbg !6731
  store volatile i16 1, i16* %49, align 2, !dbg !6731
  br label %50, !dbg !6732

50:                                               ; preds = %12, %10, %4, %22, %21
  %51 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %4 ], [ -1, %10 ], [ -2, %12 ], !dbg !6678
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !6733
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #22, !dbg !6733
  ret i32 %51, !dbg !6733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_to_receive_polling(i32 noundef %0, %struct.hal_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6734 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6747, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_to_receive_config_t* %1, metadata !6748, metadata !DIExpression()), !dbg !6751
  %4 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !6752
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !6752
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !6750, metadata !DIExpression()), !dbg !6753
  %5 = icmp ugt i32 %0, 2, !dbg !6754
  br i1 %5, label %49, label %6, !dbg !6756

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !6757
  %8 = load i8*, i8** %7, align 4, !dbg !6757
  %9 = icmp eq i8* %8, null, !dbg !6759
  br i1 %9, label %49, label %10, !dbg !6760

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !6761
  %12 = load i8*, i8** %11, align 4, !dbg !6761
  %13 = icmp eq i8* %12, null, !dbg !6762
  br i1 %13, label %49, label %14, !dbg !6763

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !6764
  %16 = load i32, i32* %15, align 4, !dbg !6764
  %17 = icmp ugt i32 %16, 8, !dbg !6766
  br i1 %17, label %49, label %18, !dbg !6767

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !6768
  %20 = load i32, i32* %19, align 4, !dbg !6768
  %21 = icmp ugt i32 %20, 8, !dbg !6769
  br i1 %21, label %49, label %22, !dbg !6770

22:                                               ; preds = %18
  %23 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6771
  %24 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %23, align 4, !dbg !6771
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %24, i32 0, i32 18, !dbg !6771
  %26 = load volatile i16, i16* %25, align 2, !dbg !6771
  %27 = and i16 %26, 1, !dbg !6771
  %28 = icmp eq i16 %27, 0, !dbg !6773
  br i1 %28, label %30, label %29, !dbg !6774

29:                                               ; preds = %22
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_polling, i32 0, i32 0), i32 noundef 518, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i32 0, i32 0), i32 noundef %0) #20, !dbg !6775
  br label %49, !dbg !6777

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %24, i32 0, i32 4, !dbg !6778
  store volatile i16 0, i16* %31, align 2, !dbg !6778
  %32 = load i32, i32* %15, align 4, !dbg !6779
  %33 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6780
  store i32 %32, i32* %33, align 4, !dbg !6781
  %34 = load i32, i32* %19, align 4, !dbg !6782
  %35 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6783
  store i32 %34, i32* %35, align 4, !dbg !6784
  %36 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !6785
  %37 = load i8, i8* %36, align 4, !dbg !6785
  %38 = shl i8 %37, 1, !dbg !6785
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 10, i8 noundef zeroext %38, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !6786
  %39 = load i8*, i8** %7, align 4, !dbg !6787
  %40 = load i32, i32* %15, align 4, !dbg !6788
  call void @i2c_write_fifo(i32 noundef %0, i8* noundef %39, i32 noundef %40) #20, !dbg !6789
  %41 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %23, align 4, !dbg !6790
  %42 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %41, i32 0, i32 18, !dbg !6790
  store volatile i16 1, i16* %42, align 2, !dbg !6790
  call fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef 10) #21, !dbg !6791
  %43 = call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %43, metadata !6749, metadata !DIExpression()), !dbg !6751
  %44 = icmp eq i32 %43, 0, !dbg !6793
  br i1 %44, label %46, label %45, !dbg !6795

45:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_polling, i32 0, i32 0), i32 noundef 552, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i32 0, i32 0), i32 noundef %0, i32 noundef %43) #20, !dbg !6796
  br label %49, !dbg !6798

46:                                               ; preds = %30
  %47 = load i8*, i8** %11, align 4, !dbg !6799
  %48 = load i32, i32* %19, align 4, !dbg !6801
  call void @i2c_read_fifo(i32 noundef %0, i8* noundef %47, i32 noundef %48) #20, !dbg !6802
  br label %49, !dbg !6803

49:                                               ; preds = %14, %18, %6, %10, %2, %46, %45, %29
  %50 = phi i32 [ -3, %29 ], [ -4, %45 ], [ 0, %46 ], [ -2, %2 ], [ -1, %10 ], [ -1, %6 ], [ -1, %18 ], [ -1, %14 ], !dbg !6751
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !6804
  ret i32 %50, !dbg !6804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_to_receive_dma(i32 noundef %0, %struct.hal_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6805 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6807, metadata !DIExpression()), !dbg !6811
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_to_receive_config_t* %1, metadata !6808, metadata !DIExpression()), !dbg !6811
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !6812
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !6812
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !6809, metadata !DIExpression()), !dbg !6813
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !6814
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !6814
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !6810, metadata !DIExpression()), !dbg !6815
  %7 = icmp ugt i32 %0, 2, !dbg !6816
  br i1 %7, label %74, label %8, !dbg !6818

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !6819
  %10 = load i8*, i8** %9, align 4, !dbg !6819
  %11 = icmp eq i8* %10, null, !dbg !6821
  br i1 %11, label %74, label %12, !dbg !6822

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !6823
  %14 = load i8*, i8** %13, align 4, !dbg !6823
  %15 = icmp eq i8* %14, null, !dbg !6824
  br i1 %15, label %74, label %16, !dbg !6825

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 1, !dbg !6826
  br i1 %17, label %74, label %18, !dbg !6828

18:                                               ; preds = %16
  %19 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6829
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !6829
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !6829
  %22 = load volatile i16, i16* %21, align 2, !dbg !6829
  %23 = and i16 %22, 1, !dbg !6829
  %24 = icmp eq i16 %23, 0, !dbg !6831
  br i1 %24, label %26, label %25, !dbg !6832

25:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_dma, i32 0, i32 0), i32 noundef 579, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0), i32 noundef %0) #20, !dbg !6833
  br label %74, !dbg !6835

26:                                               ; preds = %18
  %27 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !6836
  %28 = load i32, i32* %27, align 4, !dbg !6836
  %29 = tail call i32 @pdma_init(i32 noundef %28) #20, !dbg !6837
  store i8 0, i8* %6, align 4, !dbg !6838
  %30 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !6839
  %31 = load i32, i32* %30, align 4, !dbg !6839
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !6840
  store i32 %31, i32* %32, align 4, !dbg !6841
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !6842
  store i32 0, i32* %33, align 4, !dbg !6843
  %34 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !6844
  store i32 0, i32* %34, align 4, !dbg !6845
  %35 = load i32, i32* %27, align 4, !dbg !6846
  %36 = call i32 @pdma_configure(i32 noundef %35, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !6847
  %37 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !6848
  %38 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %37, i32 0, i32 0, !dbg !6849
  store volatile i32 11, i32* %38, align 4, !dbg !6850
  %39 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !6851
  store volatile i8 0, i8* %39, align 4, !dbg !6852
  %40 = trunc i32 %0 to i8, !dbg !6853
  %41 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !6854
  store volatile i8 %40, i8* %41, align 1, !dbg !6855
  %42 = load i32, i32* %27, align 4, !dbg !6856
  %43 = bitcast %struct.i2c_dma_callback_parameter_t* %37 to i8*, !dbg !6857
  %44 = call i32 @pdma_register_callback(i32 noundef %42, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !6858
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !6859
  %46 = load i32, i32* %45, align 4, !dbg !6859
  %47 = call i32 @pdma_init(i32 noundef %46) #20, !dbg !6860
  store i8 0, i8* %6, align 4, !dbg !6861
  %48 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !6862
  %49 = load i32, i32* %48, align 4, !dbg !6862
  store i32 %49, i32* %32, align 4, !dbg !6863
  store i32 1, i32* %33, align 4, !dbg !6864
  store i32 0, i32* %34, align 4, !dbg !6865
  %50 = load i32, i32* %45, align 4, !dbg !6866
  %51 = call i32 @pdma_configure(i32 noundef %50, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !6867
  store volatile i32 11, i32* %38, align 4, !dbg !6868
  store volatile i8 0, i8* %39, align 4, !dbg !6869
  store volatile i8 %40, i8* %41, align 1, !dbg !6870
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %0, !dbg !6871
  store volatile i8 0, i8* %52, align 1, !dbg !6872
  %53 = load i32, i32* %45, align 4, !dbg !6873
  %54 = call i32 @pdma_register_callback(i32 noundef %53, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !6874
  %55 = load i32, i32* %30, align 4, !dbg !6875
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6876
  store i32 %55, i32* %56, align 4, !dbg !6877
  %57 = load i32, i32* %48, align 4, !dbg !6878
  %58 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6879
  store i32 %57, i32* %58, align 4, !dbg !6880
  %59 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !6881
  %60 = load i8, i8* %59, align 4, !dbg !6881
  %61 = shl i8 %60, 1, !dbg !6881
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 11, i8 noundef zeroext %61, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !6882
  %62 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !6883
  %63 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %62, i32 0, i32 4, !dbg !6883
  store volatile i16 31, i16* %63, align 2, !dbg !6883
  %64 = load i32, i32* %27, align 4, !dbg !6884
  %65 = load i8*, i8** %9, align 4, !dbg !6885
  %66 = ptrtoint i8* %65 to i32, !dbg !6886
  %67 = call i32 @pdma_start_interrupt(i32 noundef %64, i32 noundef %66) #20, !dbg !6887
  %68 = load i32, i32* %45, align 4, !dbg !6888
  %69 = load i8*, i8** %13, align 4, !dbg !6889
  %70 = ptrtoint i8* %69 to i32, !dbg !6890
  %71 = call i32 @pdma_start_interrupt(i32 noundef %68, i32 noundef %70) #20, !dbg !6891
  %72 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !6892
  %73 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %72, i32 0, i32 18, !dbg !6892
  store volatile i16 1, i16* %73, align 2, !dbg !6892
  br label %74, !dbg !6893

74:                                               ; preds = %16, %8, %12, %2, %26, %25
  %75 = phi i32 [ -3, %25 ], [ 0, %26 ], [ -2, %2 ], [ -1, %12 ], [ -1, %8 ], [ -2, %16 ], !dbg !6811
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !6894
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !6894
  ret i32 %75, !dbg !6894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_dma_ex(i32 noundef %0, %struct.hal_i2c_send_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6895 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6907, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_config_t* %1, metadata !6908, metadata !DIExpression()), !dbg !6911
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !6912
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !6912
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !6909, metadata !DIExpression()), !dbg !6913
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !6914
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !6914
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !6910, metadata !DIExpression()), !dbg !6915
  %7 = icmp ugt i32 %0, 2, !dbg !6916
  br i1 %7, label %59, label %8, !dbg !6918

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 1, !dbg !6919
  %10 = load i8*, i8** %9, align 4, !dbg !6919
  %11 = icmp eq i8* %10, null, !dbg !6921
  br i1 %11, label %59, label %12, !dbg !6922

12:                                               ; preds = %8
  %13 = icmp ugt i32 %0, 1, !dbg !6923
  br i1 %13, label %59, label %14, !dbg !6925

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !6926
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6926
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !6926
  %18 = load volatile i16, i16* %17, align 2, !dbg !6926
  %19 = and i16 %18, 1, !dbg !6926
  %20 = icmp eq i16 %19, 0, !dbg !6928
  br i1 %20, label %22, label %21, !dbg !6929

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_i2c_master_send_dma_ex, i32 0, i32 0), i32 noundef 659, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i32 0, i32 0), i32 noundef %0) #20, !dbg !6930
  br label %59, !dbg !6932

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !6933
  %24 = load i32, i32* %23, align 4, !dbg !6933
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !6934
  store i8 0, i8* %6, align 4, !dbg !6935
  %26 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 2, !dbg !6936
  %27 = load i32, i32* %26, align 4, !dbg !6936
  %28 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 3, !dbg !6937
  %29 = load i32, i32* %28, align 4, !dbg !6937
  %30 = mul i32 %29, %27, !dbg !6938
  %31 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !6939
  store i32 %30, i32* %31, align 4, !dbg !6940
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !6941
  store i32 0, i32* %32, align 4, !dbg !6942
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !6943
  store i32 0, i32* %33, align 4, !dbg !6944
  %34 = load i32, i32* %23, align 4, !dbg !6945
  %35 = call i32 @pdma_configure(i32 noundef %34, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !6946
  %36 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !6947
  %37 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %36, i32 0, i32 0, !dbg !6948
  store volatile i32 12, i32* %37, align 4, !dbg !6949
  %38 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !6950
  store volatile i8 0, i8* %38, align 4, !dbg !6951
  %39 = trunc i32 %0 to i8, !dbg !6952
  %40 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !6953
  store volatile i8 %39, i8* %40, align 1, !dbg !6954
  %41 = load i32, i32* %23, align 4, !dbg !6955
  %42 = bitcast %struct.i2c_dma_callback_parameter_t* %36 to i8*, !dbg !6956
  %43 = call i32 @pdma_register_callback(i32 noundef %41, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %42) #20, !dbg !6957
  %44 = load i32, i32* %28, align 4, !dbg !6958
  %45 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !6959
  store i32 %44, i32* %45, align 4, !dbg !6960
  %46 = load i32, i32* %26, align 4, !dbg !6961
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !6962
  store i32 %46, i32* %47, align 4, !dbg !6963
  %48 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 0, !dbg !6964
  %49 = load i8, i8* %48, align 4, !dbg !6964
  %50 = shl i8 %49, 1, !dbg !6964
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 12, i8 noundef zeroext %50, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !6965
  %51 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6966
  %52 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %51, i32 0, i32 4, !dbg !6966
  store volatile i16 31, i16* %52, align 2, !dbg !6966
  %53 = load i32, i32* %23, align 4, !dbg !6967
  %54 = load i8*, i8** %9, align 4, !dbg !6968
  %55 = ptrtoint i8* %54 to i32, !dbg !6969
  %56 = call i32 @pdma_start_interrupt(i32 noundef %53, i32 noundef %55) #20, !dbg !6970
  %57 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !6971
  %58 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %57, i32 0, i32 18, !dbg !6971
  store volatile i16 1, i16* %58, align 2, !dbg !6971
  br label %59, !dbg !6972

59:                                               ; preds = %12, %8, %2, %22, %21
  %60 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %2 ], [ -1, %8 ], [ -2, %12 ], !dbg !6911
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !6973
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !6973
  ret i32 %60, !dbg !6973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_receive_dma_ex(i32 noundef %0, %struct.hal_i2c_send_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6974 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6986, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_config_t* %1, metadata !6987, metadata !DIExpression()), !dbg !6990
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !6991
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !6991
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !6988, metadata !DIExpression()), !dbg !6992
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !6993
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !6993
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !6989, metadata !DIExpression()), !dbg !6994
  %7 = icmp ugt i32 %0, 2, !dbg !6995
  br i1 %7, label %60, label %8, !dbg !6997

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 1, !dbg !6998
  %10 = load i8*, i8** %9, align 4, !dbg !6998
  %11 = icmp eq i8* %10, null, !dbg !7000
  br i1 %11, label %60, label %12, !dbg !7001

12:                                               ; preds = %8
  %13 = icmp ugt i32 %0, 1, !dbg !7002
  br i1 %13, label %60, label %14, !dbg !7004

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7005
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7005
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !7005
  %18 = load volatile i16, i16* %17, align 2, !dbg !7005
  %19 = and i16 %18, 1, !dbg !7005
  %20 = icmp eq i16 %19, 0, !dbg !7007
  br i1 %20, label %22, label %21, !dbg !7008

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.hal_i2c_master_receive_dma_ex, i32 0, i32 0), i32 noundef 718, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i32 0, i32 0), i32 noundef %0) #20, !dbg !7009
  br label %60, !dbg !7011

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !7012
  %24 = load i32, i32* %23, align 4, !dbg !7012
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !7013
  store i8 0, i8* %6, align 4, !dbg !7014
  %26 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 2, !dbg !7015
  %27 = load i32, i32* %26, align 4, !dbg !7015
  %28 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 3, !dbg !7016
  %29 = load i32, i32* %28, align 4, !dbg !7016
  %30 = mul i32 %29, %27, !dbg !7017
  %31 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !7018
  store i32 %30, i32* %31, align 4, !dbg !7019
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !7020
  store i32 1, i32* %32, align 4, !dbg !7021
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !7022
  store i32 0, i32* %33, align 4, !dbg !7023
  %34 = load i32, i32* %23, align 4, !dbg !7024
  %35 = call i32 @pdma_configure(i32 noundef %34, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !7025
  %36 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !7026
  %37 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %36, i32 0, i32 0, !dbg !7027
  store volatile i32 13, i32* %37, align 4, !dbg !7028
  %38 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !7029
  store volatile i8 0, i8* %38, align 4, !dbg !7030
  %39 = trunc i32 %0 to i8, !dbg !7031
  %40 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !7032
  store volatile i8 %39, i8* %40, align 1, !dbg !7033
  %41 = load i32, i32* %23, align 4, !dbg !7034
  %42 = bitcast %struct.i2c_dma_callback_parameter_t* %36 to i8*, !dbg !7035
  %43 = call i32 @pdma_register_callback(i32 noundef %41, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %42) #20, !dbg !7036
  %44 = load i32, i32* %28, align 4, !dbg !7037
  %45 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7038
  store i32 %44, i32* %45, align 4, !dbg !7039
  %46 = load i32, i32* %26, align 4, !dbg !7040
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7041
  store i32 %46, i32* %47, align 4, !dbg !7042
  %48 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 0, !dbg !7043
  %49 = load i8, i8* %48, align 4, !dbg !7043
  %50 = shl i8 %49, 1, !dbg !7043
  %51 = or i8 %50, 1, !dbg !7043
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 13, i8 noundef zeroext %51, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !7044
  %52 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7045
  %53 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %52, i32 0, i32 4, !dbg !7045
  store volatile i16 31, i16* %53, align 2, !dbg !7045
  %54 = load i32, i32* %23, align 4, !dbg !7046
  %55 = load i8*, i8** %9, align 4, !dbg !7047
  %56 = ptrtoint i8* %55 to i32, !dbg !7048
  %57 = call i32 @pdma_start_interrupt(i32 noundef %54, i32 noundef %56) #20, !dbg !7049
  %58 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7050
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %58, i32 0, i32 18, !dbg !7050
  store volatile i16 1, i16* %59, align 2, !dbg !7050
  br label %60, !dbg !7051

60:                                               ; preds = %12, %8, %2, %22, %21
  %61 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %2 ], [ -1, %8 ], [ -2, %12 ], !dbg !6990
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !7052
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !7052
  ret i32 %61, !dbg !7052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_to_receive_dma_ex(i32 noundef %0, %struct.hal_i2c_send_to_receive_config_ex_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7053 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7068, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_to_receive_config_ex_t* %1, metadata !7069, metadata !DIExpression()), !dbg !7072
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !7073
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !7073
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !7070, metadata !DIExpression()), !dbg !7074
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !7075
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !7075
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !7071, metadata !DIExpression()), !dbg !7076
  %7 = icmp ugt i32 %0, 2, !dbg !7077
  br i1 %7, label %80, label %8, !dbg !7079

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 1, !dbg !7080
  %10 = load i8*, i8** %9, align 4, !dbg !7080
  %11 = icmp eq i8* %10, null, !dbg !7082
  br i1 %11, label %80, label %12, !dbg !7083

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 2, !dbg !7084
  %14 = load i8*, i8** %13, align 4, !dbg !7084
  %15 = icmp eq i8* %14, null, !dbg !7085
  br i1 %15, label %80, label %16, !dbg !7086

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 1, !dbg !7087
  br i1 %17, label %80, label %18, !dbg !7089

18:                                               ; preds = %16
  %19 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7090
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !7090
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !7090
  %22 = load volatile i16, i16* %21, align 2, !dbg !7090
  %23 = and i16 %22, 1, !dbg !7090
  %24 = icmp eq i16 %23, 0, !dbg !7092
  br i1 %24, label %26, label %25, !dbg !7093

25:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_dma_ex, i32 0, i32 0), i32 noundef 773, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i32 0, i32 0), i32 noundef %0) #20, !dbg !7094
  br label %80, !dbg !7096

26:                                               ; preds = %18
  %27 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !7097
  %28 = load i32, i32* %27, align 4, !dbg !7097
  %29 = tail call i32 @pdma_init(i32 noundef %28) #20, !dbg !7098
  store i8 0, i8* %6, align 4, !dbg !7099
  %30 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 4, !dbg !7100
  %31 = load i32, i32* %30, align 4, !dbg !7100
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !7101
  store i32 %31, i32* %32, align 4, !dbg !7102
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !7103
  store i32 0, i32* %33, align 4, !dbg !7104
  %34 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !7105
  store i32 0, i32* %34, align 4, !dbg !7106
  %35 = load i32, i32* %27, align 4, !dbg !7107
  %36 = call i32 @pdma_configure(i32 noundef %35, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !7108
  %37 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !7109
  %38 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %37, i32 0, i32 0, !dbg !7110
  store volatile i32 14, i32* %38, align 4, !dbg !7111
  %39 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !7112
  store volatile i8 0, i8* %39, align 4, !dbg !7113
  %40 = trunc i32 %0 to i8, !dbg !7114
  %41 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !7115
  store volatile i8 %40, i8* %41, align 1, !dbg !7116
  %42 = load i32, i32* %27, align 4, !dbg !7117
  %43 = bitcast %struct.i2c_dma_callback_parameter_t* %37 to i8*, !dbg !7118
  %44 = call i32 @pdma_register_callback(i32 noundef %42, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !7119
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !7120
  %46 = load i32, i32* %45, align 4, !dbg !7120
  %47 = call i32 @pdma_init(i32 noundef %46) #20, !dbg !7121
  store i8 0, i8* %6, align 4, !dbg !7122
  %48 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 5, !dbg !7123
  %49 = load i32, i32* %48, align 4, !dbg !7123
  %50 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 6, !dbg !7124
  %51 = load i32, i32* %50, align 4, !dbg !7124
  %52 = mul i32 %51, %49, !dbg !7125
  store i32 %52, i32* %32, align 4, !dbg !7126
  store i32 1, i32* %33, align 4, !dbg !7127
  store i32 0, i32* %34, align 4, !dbg !7128
  %53 = load i32, i32* %45, align 4, !dbg !7129
  %54 = call i32 @pdma_configure(i32 noundef %53, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !7130
  store volatile i32 14, i32* %38, align 4, !dbg !7131
  store volatile i8 0, i8* %39, align 4, !dbg !7132
  store volatile i8 %40, i8* %41, align 1, !dbg !7133
  %55 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %0, !dbg !7134
  store volatile i8 0, i8* %55, align 1, !dbg !7135
  %56 = load i32, i32* %45, align 4, !dbg !7136
  %57 = call i32 @pdma_register_callback(i32 noundef %56, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !7137
  %58 = load i32, i32* %30, align 4, !dbg !7138
  %59 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7139
  store i32 %58, i32* %59, align 4, !dbg !7140
  %60 = load i32, i32* %50, align 4, !dbg !7141
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !7142
  store i32 %60, i32* %61, align 4, !dbg !7143
  %62 = load i32, i32* %48, align 4, !dbg !7144
  %63 = add i32 %62, 1, !dbg !7145
  %64 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7146
  store i32 %63, i32* %64, align 4, !dbg !7147
  %65 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 0, !dbg !7148
  %66 = load i8, i8* %65, align 4, !dbg !7148
  %67 = shl i8 %66, 1, !dbg !7148
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 14, i8 noundef zeroext %67, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !7149
  %68 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !7150
  %69 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %68, i32 0, i32 4, !dbg !7150
  store volatile i16 31, i16* %69, align 2, !dbg !7150
  %70 = load i32, i32* %27, align 4, !dbg !7151
  %71 = load i8*, i8** %9, align 4, !dbg !7152
  %72 = ptrtoint i8* %71 to i32, !dbg !7153
  %73 = call i32 @pdma_start_interrupt(i32 noundef %70, i32 noundef %72) #20, !dbg !7154
  %74 = load i32, i32* %45, align 4, !dbg !7155
  %75 = load i8*, i8** %13, align 4, !dbg !7156
  %76 = ptrtoint i8* %75 to i32, !dbg !7157
  %77 = call i32 @pdma_start_interrupt(i32 noundef %74, i32 noundef %76) #20, !dbg !7158
  %78 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !7159
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %78, i32 0, i32 18, !dbg !7159
  store volatile i16 1, i16* %79, align 2, !dbg !7159
  br label %80, !dbg !7160

80:                                               ; preds = %16, %8, %12, %2, %26, %25
  %81 = phi i32 [ -3, %25 ], [ 0, %26 ], [ -2, %2 ], [ -1, %12 ], [ -1, %8 ], [ -2, %16 ], !dbg !7072
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !7161
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !7161
  ret i32 %81, !dbg !7161
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_i2c_master_get_running_status(i32 noundef %0, %struct.anon* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !7162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7171, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata %struct.anon* %1, metadata !7172, metadata !DIExpression()), !dbg !7173
  %3 = icmp ugt i32 %0, 2, !dbg !7174
  br i1 %3, label %12, label %4, !dbg !7176

4:                                                ; preds = %2
  %5 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7177
  %6 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %5, align 4, !dbg !7177
  %7 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %6, i32 0, i32 18, !dbg !7177
  %8 = load volatile i16, i16* %7, align 2, !dbg !7177
  %9 = and i16 %8, 1, !dbg !7177
  %10 = zext i16 %9 to i32, !dbg !7177
  %11 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !7178
  store i32 %10, i32* %11, align 4, !dbg !7179
  br label %12, !dbg !7180

12:                                               ; preds = %2, %4
  %13 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !7173
  ret i32 %13, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7186, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 %1, metadata !7187, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7194
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7195
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !7195
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !7196
  store volatile i16 0, i16* %5, align 2, !dbg !7197
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !7198

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !7199
  call void @llvm.dbg.value(metadata i32 100, metadata !7188, metadata !DIExpression()), !dbg !7194
  br label %13, !dbg !7201

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !7188, metadata !DIExpression()), !dbg !7194
  br label %13, !dbg !7202

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !7188, metadata !DIExpression()), !dbg !7194
  br label %13, !dbg !7203

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !7188, metadata !DIExpression()), !dbg !7194
  br label %13, !dbg !7204

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !7188, metadata !DIExpression()), !dbg !7194
  br label %13, !dbg !7205

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !7188, metadata !DIExpression()), !dbg !7194
  %12 = shl i32 %1, 1, !dbg !7206
  br label %13, !dbg !7206

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7188, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 1, metadata !7190, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 undef, metadata !7189, metadata !DIExpression()), !dbg !7194
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !7207

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !7190, metadata !DIExpression()), !dbg !7194
  %19 = mul i32 %18, %14, !dbg !7209
  call void @llvm.dbg.value(metadata i32 %19, metadata !7193, metadata !DIExpression()), !dbg !7194
  %20 = add i32 %19, -1, !dbg !7212
  %21 = add i32 %20, %16, !dbg !7213
  %22 = udiv i32 %21, %19, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %22, metadata !7189, metadata !DIExpression()), !dbg !7194
  %23 = icmp ult i32 %22, 65, !dbg !7215
  br i1 %23, label %27, label %24, !dbg !7217

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !7218
  call void @llvm.dbg.value(metadata i32 %22, metadata !7189, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 %25, metadata !7190, metadata !DIExpression()), !dbg !7194
  %26 = icmp eq i32 %25, 9, !dbg !7219
  br i1 %26, label %27, label %17, !dbg !7207, !llvm.loop !7220

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !7222
  call void @llvm.dbg.value(metadata i32 %22, metadata !7189, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 %28, metadata !7190, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !7194
  %29 = add i32 %22, 63, !dbg !7223
  call void @llvm.dbg.value(metadata i32 %22, metadata !7189, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !7194
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !7224
  %31 = load volatile i16, i16* %30, align 2, !dbg !7224
  %32 = and i16 %31, -1856, !dbg !7225
  call void @llvm.dbg.value(metadata i16 %32, metadata !7191, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7194
  %33 = shl i32 %28, 8, !dbg !7226
  %34 = add i32 %33, 1792, !dbg !7226
  %35 = and i32 %34, 1792, !dbg !7227
  %36 = and i32 %29, 63, !dbg !7228
  %37 = or i32 %36, %35, !dbg !7229
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !7192, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7194
  %38 = trunc i32 %37 to i16, !dbg !7230
  %39 = or i16 %32, %38, !dbg !7230
  store volatile i16 %39, i16* %30, align 2, !dbg !7231
  ret void, !dbg !7232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.i2c_transaction_size_t* nocapture noundef readonly %3) local_unnamed_addr #2 !dbg !7233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7246, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 %1, metadata !7247, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i8 %2, metadata !7248, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata %struct.i2c_transaction_size_t* %3, metadata !7249, metadata !DIExpression()), !dbg !7250
  %5 = zext i8 %2 to i16, !dbg !7251
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7252
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !7252
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !7253
  store volatile i16 %5, i16* %8, align 2, !dbg !7254
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !7255
  store volatile i16 1, i16* %9, align 2, !dbg !7255
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !7256
  store volatile i16 31, i16* %10, align 2, !dbg !7256
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !7257

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7258
  store volatile i16 %13, i16* %14, align 2, !dbg !7258
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7258
  store volatile i16 32, i16* %15, align 2, !dbg !7258
  %16 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7261
  %17 = load i32, i32* %16, align 4, !dbg !7261
  %18 = trunc i32 %17 to i16, !dbg !7262
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7263
  store volatile i16 %18, i16* %19, align 2, !dbg !7264
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7265
  store volatile i16 1, i16* %20, align 2, !dbg !7266
  br label %114, !dbg !7267

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7268
  store volatile i16 %23, i16* %24, align 2, !dbg !7268
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7268
  store volatile i16 36, i16* %25, align 2, !dbg !7268
  %26 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7270
  %27 = load i32, i32* %26, align 4, !dbg !7270
  %28 = trunc i32 %27 to i16, !dbg !7271
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7272
  store volatile i16 %28, i16* %29, align 2, !dbg !7273
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7274
  store volatile i16 1, i16* %30, align 2, !dbg !7275
  br label %114, !dbg !7276

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7277
  store volatile i16 %33, i16* %34, align 2, !dbg !7277
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7277
  store volatile i16 32, i16* %35, align 2, !dbg !7277
  %36 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7279
  %37 = load i32, i32* %36, align 4, !dbg !7279
  %38 = trunc i32 %37 to i16, !dbg !7280
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7281
  store volatile i16 %38, i16* %39, align 2, !dbg !7282
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7283
  store volatile i16 1, i16* %40, align 2, !dbg !7284
  br label %114, !dbg !7285

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7286
  store volatile i16 %43, i16* %44, align 2, !dbg !7286
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7286
  store volatile i16 36, i16* %45, align 2, !dbg !7286
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7288
  store volatile i16 1, i16* %46, align 2, !dbg !7289
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7290
  %48 = load i32, i32* %47, align 4, !dbg !7290
  %49 = trunc i32 %48 to i16, !dbg !7291
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7292
  store volatile i16 %49, i16* %50, align 2, !dbg !7293
  br label %114, !dbg !7294

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7295
  store volatile i16 %53, i16* %54, align 2, !dbg !7295
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7295
  store volatile i16 114, i16* %55, align 2, !dbg !7295
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7297
  %57 = load i32, i32* %56, align 4, !dbg !7297
  %58 = trunc i32 %57 to i16, !dbg !7298
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7299
  store volatile i16 %58, i16* %59, align 2, !dbg !7300
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7301
  store volatile i16 2, i16* %60, align 2, !dbg !7302
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7303
  %62 = load i32, i32* %61, align 4, !dbg !7303
  %63 = trunc i32 %62 to i16, !dbg !7304
  br label %114, !dbg !7305

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7306
  store volatile i16 %66, i16* %67, align 2, !dbg !7306
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7306
  store volatile i16 118, i16* %68, align 2, !dbg !7306
  %69 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7308
  %70 = load i32, i32* %69, align 4, !dbg !7308
  %71 = trunc i32 %70 to i16, !dbg !7309
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7310
  store volatile i16 %71, i16* %72, align 2, !dbg !7311
  %73 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7312
  %74 = load i32, i32* %73, align 4, !dbg !7312
  %75 = trunc i32 %74 to i16, !dbg !7313
  %76 = add i16 %75, 1, !dbg !7313
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7314
  store volatile i16 %76, i16* %77, align 2, !dbg !7315
  br label %114, !dbg !7316

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7317
  store volatile i16 3, i16* %79, align 2, !dbg !7318
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7319
  store volatile i16 38, i16* %80, align 2, !dbg !7320
  %81 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7321
  %82 = load i32, i32* %81, align 4, !dbg !7321
  %83 = trunc i32 %82 to i16, !dbg !7322
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7323
  store volatile i16 %83, i16* %84, align 2, !dbg !7324
  %85 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7325
  %86 = load i32, i32* %85, align 4, !dbg !7325
  %87 = trunc i32 %86 to i16, !dbg !7326
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7327
  store volatile i16 %87, i16* %88, align 2, !dbg !7328
  br label %114, !dbg !7329

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7330
  store volatile i16 3, i16* %90, align 2, !dbg !7331
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7332
  store volatile i16 38, i16* %91, align 2, !dbg !7333
  %92 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7334
  %93 = load i32, i32* %92, align 4, !dbg !7334
  %94 = trunc i32 %93 to i16, !dbg !7335
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7336
  store volatile i16 %94, i16* %95, align 2, !dbg !7337
  %96 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7338
  %97 = load i32, i32* %96, align 4, !dbg !7338
  %98 = trunc i32 %97 to i16, !dbg !7339
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7340
  store volatile i16 %98, i16* %99, align 2, !dbg !7341
  br label %114, !dbg !7342

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7343
  store volatile i16 3, i16* %101, align 2, !dbg !7344
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7345
  store volatile i16 118, i16* %102, align 2, !dbg !7346
  %103 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7347
  %104 = load i32, i32* %103, align 4, !dbg !7347
  %105 = trunc i32 %104 to i16, !dbg !7348
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7349
  store volatile i16 %105, i16* %106, align 2, !dbg !7350
  %107 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7351
  %108 = load i32, i32* %107, align 4, !dbg !7351
  %109 = trunc i32 %108 to i16, !dbg !7352
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7353
  store volatile i16 %109, i16* %110, align 2, !dbg !7354
  %111 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !7355
  %112 = load i32, i32* %111, align 4, !dbg !7355
  %113 = trunc i32 %112 to i16, !dbg !7356
  br label %114, !dbg !7357

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !7358
  store volatile i16 %115, i16* %116, align 2, !dbg !7358
  br label %117, !dbg !7359

117:                                              ; preds = %114, %4
  ret void, !dbg !7359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !7360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7364, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i8* %1, metadata !7365, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i32 %2, metadata !7366, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i32 0, metadata !7367, metadata !DIExpression()), !dbg !7368
  %4 = icmp eq i32 %2, 0, !dbg !7369
  br i1 %4, label %16, label %5, !dbg !7372

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !7372

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7367, metadata !DIExpression()), !dbg !7368
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !7373
  %12 = load i8, i8* %11, align 1, !dbg !7375
  %13 = zext i8 %12 to i16, !dbg !7375
  store volatile i16 %13, i16* %8, align 2, !dbg !7376
  %14 = add nuw i32 %10, 1, !dbg !7377
  call void @llvm.dbg.value(metadata i32 %14, metadata !7367, metadata !DIExpression()), !dbg !7368
  %15 = icmp eq i32 %14, %2, !dbg !7369
  br i1 %15, label %16, label %9, !dbg !7372, !llvm.loop !7378

16:                                               ; preds = %9, %3
  ret void, !dbg !7380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !7381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7385, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %1, metadata !7386, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 %2, metadata !7387, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 0, metadata !7388, metadata !DIExpression()), !dbg !7389
  %4 = icmp eq i32 %2, 0, !dbg !7390
  br i1 %4, label %16, label %5, !dbg !7393

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !7393

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7388, metadata !DIExpression()), !dbg !7389
  %11 = load volatile i16, i16* %8, align 2, !dbg !7394
  %12 = trunc i16 %11 to i8, !dbg !7396
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !7397
  store i8 %12, i8* %13, align 1, !dbg !7398
  %14 = add nuw i32 %10, 1, !dbg !7399
  call void @llvm.dbg.value(metadata i32 %14, metadata !7388, metadata !DIExpression()), !dbg !7389
  %15 = icmp eq i32 %14, %2, !dbg !7390
  br i1 %15, label %16, label %9, !dbg !7393, !llvm.loop !7400

16:                                               ; preds = %9, %3
  ret void, !dbg !7402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #2 !dbg !7403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7407, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i32 -4, metadata !7409, metadata !DIExpression()), !dbg !7410
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7411
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !7411
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !7412
  %5 = load volatile i16, i16* %4, align 2, !dbg !7412
  call void @llvm.dbg.value(metadata i16 %5, metadata !7408, metadata !DIExpression()), !dbg !7410
  %6 = zext i16 %5 to i32, !dbg !7413
  %7 = and i32 %6, 2, !dbg !7415
  %8 = icmp eq i32 %7, 0, !dbg !7416
  br i1 %8, label %9, label %18, !dbg !7417

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !7418
  %11 = icmp eq i32 %10, 0, !dbg !7420
  br i1 %11, label %12, label %18, !dbg !7421

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !7422
  %14 = icmp eq i32 %13, 0, !dbg !7424
  br i1 %14, label %15, label %18, !dbg !7425

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !7426
  %17 = select i1 %16, i32 0, i32 -4, !dbg !7428
  br label %18, !dbg !7428

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !7410
  call void @llvm.dbg.value(metadata i32 %19, metadata !7409, metadata !DIExpression()), !dbg !7410
  store volatile i16 31, i16* %4, align 2, !dbg !7429
  ret i32 %19, !dbg !7430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1085 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !7431
  br i1 %1, label %9, label %2, !dbg !7433

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1177, metadata !DIExpression()), !dbg !7434
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !7435
  %5 = load i32, i32* %4, align 4, !dbg !7435
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !7440
  %6 = add nuw nsw i32 %3, 1, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %6, metadata !1177, metadata !DIExpression()), !dbg !7434
  %7 = icmp eq i32 %6, 64, !dbg !7442
  br i1 %7, label %8, label %2, !dbg !7443, !llvm.loop !7444

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !7446
  br label %9, !dbg !7447

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !7448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !7449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7453, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 %1, metadata !7454, metadata !DIExpression()), !dbg !7455
  %3 = trunc i32 %1 to i8, !dbg !7456
  %4 = shl i8 %3, 2, !dbg !7456
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7459
  store volatile i8 %4, i8* %5, align 1, !dbg !7460
  ret void, !dbg !7461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 -1, metadata !7467, metadata !DIExpression()), !dbg !7468
  %2 = icmp ugt i32 %0, 63, !dbg !7469
  br i1 %2, label %4, label %3, !dbg !7469

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !7471
  call void @llvm.dbg.value(metadata i32 0, metadata !7467, metadata !DIExpression()), !dbg !7468
  br label %4, !dbg !7473

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7468
  ret i32 %5, !dbg !7474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7479, metadata !DIExpression()), !dbg !7480
  %2 = and i32 %0, 31, !dbg !7481
  %3 = shl nuw i32 1, %2, !dbg !7482
  %4 = lshr i32 %0, 5, !dbg !7483
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7484
  store volatile i32 %3, i32* %5, align 4, !dbg !7485
  ret void, !dbg !7486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7489, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 -1, metadata !7490, metadata !DIExpression()), !dbg !7491
  %2 = icmp ugt i32 %0, 63, !dbg !7492
  br i1 %2, label %4, label %3, !dbg !7492

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !7494
  call void @llvm.dbg.value(metadata i32 0, metadata !7490, metadata !DIExpression()), !dbg !7491
  br label %4, !dbg !7496

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7491
  ret i32 %5, !dbg !7497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7500, metadata !DIExpression()), !dbg !7501
  %2 = and i32 %0, 31, !dbg !7502
  %3 = shl nuw i32 1, %2, !dbg !7503
  %4 = lshr i32 %0, 5, !dbg !7504
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7505
  store volatile i32 %3, i32* %5, align 4, !dbg !7506
  ret void, !dbg !7507
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !7508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7512, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i32 255, metadata !7513, metadata !DIExpression()), !dbg !7514
  %2 = icmp ugt i32 %0, 63, !dbg !7515
  br i1 %2, label %5, label %3, !dbg !7515

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !7517
  call void @llvm.dbg.value(metadata i32 %4, metadata !7513, metadata !DIExpression()), !dbg !7514
  br label %5, !dbg !7519

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7514
  ret i32 %6, !dbg !7520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !7521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7525, metadata !DIExpression()), !dbg !7526
  %2 = lshr i32 %0, 5, !dbg !7527
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7528
  %4 = load volatile i32, i32* %3, align 4, !dbg !7528
  %5 = and i32 %0, 31, !dbg !7529
  %6 = lshr i32 %4, %5, !dbg !7530
  %7 = and i32 %6, 1, !dbg !7530
  ret i32 %7, !dbg !7531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 -1, metadata !7535, metadata !DIExpression()), !dbg !7536
  %2 = icmp ugt i32 %0, 63, !dbg !7537
  br i1 %2, label %4, label %3, !dbg !7537

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !7539
  call void @llvm.dbg.value(metadata i32 0, metadata !7535, metadata !DIExpression()), !dbg !7536
  br label %4, !dbg !7541

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7536
  ret i32 %5, !dbg !7542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7545, metadata !DIExpression()), !dbg !7546
  %2 = and i32 %0, 31, !dbg !7547
  %3 = shl nuw i32 1, %2, !dbg !7548
  %4 = lshr i32 %0, 5, !dbg !7549
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7550
  store volatile i32 %3, i32* %5, align 4, !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7555, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata i32 -1, metadata !7556, metadata !DIExpression()), !dbg !7557
  %2 = icmp ugt i32 %0, 63, !dbg !7558
  br i1 %2, label %4, label %3, !dbg !7558

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7560
  call void @llvm.dbg.value(metadata i32 0, metadata !7556, metadata !DIExpression()), !dbg !7557
  br label %4, !dbg !7562

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7557
  ret i32 %5, !dbg !7563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7566, metadata !DIExpression()), !dbg !7567
  %2 = and i32 %0, 31, !dbg !7568
  %3 = shl nuw i32 1, %2, !dbg !7569
  %4 = lshr i32 %0, 5, !dbg !7570
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7571
  store volatile i32 %3, i32* %5, align 4, !dbg !7572
  ret void, !dbg !7573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7578, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.value(metadata i32 %1, metadata !7579, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.value(metadata i32 -1, metadata !7580, metadata !DIExpression()), !dbg !7581
  %3 = icmp ugt i32 %0, 63, !dbg !7582
  br i1 %3, label %5, label %4, !dbg !7582

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !7584
  call void @llvm.dbg.value(metadata i32 0, metadata !7580, metadata !DIExpression()), !dbg !7581
  br label %5, !dbg !7586

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7581
  ret i32 %6, !dbg !7587
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !7588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7590, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.value(metadata i32 68, metadata !7591, metadata !DIExpression()), !dbg !7592
  %2 = icmp ugt i32 %0, 63, !dbg !7593
  br i1 %2, label %5, label %3, !dbg !7593

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !7595
  call void @llvm.dbg.value(metadata i32 %4, metadata !7591, metadata !DIExpression()), !dbg !7592
  br label %5, !dbg !7597

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7592
  ret i32 %6, !dbg !7598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !7599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7601, metadata !DIExpression()), !dbg !7602
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7603
  %3 = load volatile i8, i8* %2, align 1, !dbg !7603
  %4 = lshr i8 %3, 2, !dbg !7606
  %5 = zext i8 %4 to i32, !dbg !7606
  ret i32 %5, !dbg !7607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7608 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7610, metadata !DIExpression()), !dbg !7612
  tail call void @Flash_ReturnReady() #20, !dbg !7613
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()), !dbg !7612
  %2 = icmp ugt i32 %1, 63, !dbg !7615
  br i1 %2, label %12, label %3, !dbg !7615

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !7617
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !7617
  %6 = icmp eq void (i32)* %5, null, !dbg !7619
  br i1 %6, label %7, label %8, !dbg !7620

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7610, metadata !DIExpression()), !dbg !7612
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.107, i32 0, i32 0)) #20, !dbg !7621
  br label %12, !dbg !7623

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !7624
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !7626
  store i32 %9, i32* %10, align 4, !dbg !7627
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !7628
  tail call void %11(i32 noundef %1) #20, !dbg !7629
  call void @llvm.dbg.value(metadata i32 0, metadata !7610, metadata !DIExpression()), !dbg !7612
  br label %12, !dbg !7630

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7612
  ret i32 %13, !dbg !7631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !7632 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7635
  %2 = and i32 %1, 511, !dbg !7636
  call void @llvm.dbg.value(metadata i32 %2, metadata !7634, metadata !DIExpression()), !dbg !7637
  %3 = add nsw i32 %2, -16, !dbg !7638
  ret i32 %3, !dbg !7639
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !7640 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7641
  %2 = lshr i32 %1, 22, !dbg !7642
  %3 = and i32 %2, 1, !dbg !7642
  ret i32 %3, !dbg !7643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !7644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7649, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !7650, metadata !DIExpression()), !dbg !7652
  %3 = icmp ugt i32 %0, 63, !dbg !7653
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !7653
  br i1 %5, label %10, label %6, !dbg !7653

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7655
  call void @llvm.dbg.value(metadata i32 %7, metadata !7651, metadata !DIExpression()), !dbg !7652
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7656
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !7657
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !7658
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !7659
  store i32 0, i32* %9, align 4, !dbg !7660
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !7661
  br label %10, !dbg !7662

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !7652
  ret i32 %11, !dbg !7663
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !7664 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7668, metadata !DIExpression()), !dbg !7669
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7670
  store i32 %2, i32* %0, align 4, !dbg !7671
  ret i32 0, !dbg !7672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7679
  ret i32 0, !dbg !7680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !7681 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !7685, !srcloc !7691
  call void @llvm.dbg.value(metadata i32 %1, metadata !7689, metadata !DIExpression()) #22, !dbg !7692
  call void @llvm.dbg.value(metadata i32 %1, metadata !7683, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i32 1, metadata !7684, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i32 4, metadata !7694, metadata !DIExpression()) #22, !dbg !7699
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !7701, !srcloc !7702
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7703, !srcloc !7706
  tail call void asm sideeffect "isb", ""() #22, !dbg !7707, !srcloc !7710
  ret i32 %1, !dbg !7711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7714, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %0, metadata !7694, metadata !DIExpression()) #22, !dbg !7716
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !7718, !srcloc !7702
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7719, !srcloc !7706
  tail call void asm sideeffect "isb", ""() #22, !dbg !7721, !srcloc !7710
  ret void, !dbg !7723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !7724 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %1, metadata !7727, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 0, metadata !7726, metadata !DIExpression()), !dbg !7729
  br label %2, !dbg !7730

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7726, metadata !DIExpression()), !dbg !7729
  tail call fastcc void @NVIC_DisableIRQ.114(i32 noundef %3) #21, !dbg !7732
  %4 = add nuw nsw i32 %3, 1, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %4, metadata !7726, metadata !DIExpression()), !dbg !7729
  %5 = icmp eq i32 %4, 64, !dbg !7736
  br i1 %5, label %6, label %2, !dbg !7730, !llvm.loop !7737

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7739
  ret void, !dbg !7740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.114(i32 noundef %0) unnamed_addr #2 !dbg !7741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7743, metadata !DIExpression()), !dbg !7744
  %2 = and i32 %0, 31, !dbg !7745
  %3 = shl nuw i32 1, %2, !dbg !7746
  %4 = lshr i32 %0, 5, !dbg !7747
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7748
  store volatile i32 %3, i32* %5, align 4, !dbg !7749
  ret void, !dbg !7750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !7751 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %1, metadata !7754, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.value(metadata i32 0, metadata !7753, metadata !DIExpression()), !dbg !7756
  br label %2, !dbg !7757

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7753, metadata !DIExpression()), !dbg !7756
  tail call fastcc void @NVIC_EnableIRQ.115(i32 noundef %3) #21, !dbg !7759
  %4 = add nuw nsw i32 %3, 1, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %4, metadata !7753, metadata !DIExpression()), !dbg !7756
  %5 = icmp eq i32 %4, 64, !dbg !7763
  br i1 %5, label %6, label %2, !dbg !7757, !llvm.loop !7764

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.115(i32 noundef %0) unnamed_addr #2 !dbg !7768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7770, metadata !DIExpression()), !dbg !7771
  %2 = and i32 %0, 31, !dbg !7772
  %3 = shl nuw i32 1, %2, !dbg !7773
  %4 = lshr i32 %0, 5, !dbg !7774
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7775
  store volatile i32 %3, i32* %5, align 4, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !7778 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7780, metadata !DIExpression()), !dbg !7781
  br label %1, !dbg !7782

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7780, metadata !DIExpression()), !dbg !7781
  tail call fastcc void @NVIC_ClearPendingIRQ.116(i32 noundef %2) #21, !dbg !7784
  %3 = add nuw nsw i32 %2, 1, !dbg !7787
  call void @llvm.dbg.value(metadata i32 %3, metadata !7780, metadata !DIExpression()), !dbg !7781
  %4 = icmp eq i32 %3, 64, !dbg !7788
  br i1 %4, label %5, label %1, !dbg !7782, !llvm.loop !7789

5:                                                ; preds = %1
  ret void, !dbg !7791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.116(i32 noundef %0) unnamed_addr #2 !dbg !7792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7794, metadata !DIExpression()), !dbg !7795
  %2 = and i32 %0, 31, !dbg !7796
  %3 = shl nuw i32 1, %2, !dbg !7797
  %4 = lshr i32 %0, 5, !dbg !7798
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7799
  store volatile i32 %3, i32* %5, align 4, !dbg !7800
  ret void, !dbg !7801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7805
  %2 = icmp ugt i32 %0, 63, !dbg !7806
  br i1 %2, label %4, label %3, !dbg !7806

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !7808
  br label %4, !dbg !7809

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7805
  ret i32 %5, !dbg !7810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !7811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7813, metadata !DIExpression()), !dbg !7814
  %2 = and i32 %0, 511, !dbg !7815
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !7816
  tail call void asm sideeffect "dsb", ""() #22, !dbg !7817, !srcloc !7820
  ret void, !dbg !7821
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !7822 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7823
  %2 = and i32 %1, 511, !dbg !7824
  ret i32 %2, !dbg !7825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !7826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7830, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32 %1, metadata !7831, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i8* %0, metadata !7832, metadata !DIExpression()), !dbg !7929
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !7930
  call void @llvm.dbg.value(metadata i32 %3, metadata !7927, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7929
  call void @llvm.dbg.value(metadata i32 0, metadata !7926, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32* undef, metadata !7928, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32 0, metadata !7926, metadata !DIExpression()), !dbg !7929
  %4 = icmp ult i32 %3, 4, !dbg !7931
  br i1 %4, label %20, label %5, !dbg !7934

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7935
  %7 = bitcast i8* %6 to i32**, !dbg !7935
  %8 = load i32*, i32** %7, align 4, !dbg !7935
  call void @llvm.dbg.value(metadata i32* %8, metadata !7928, metadata !DIExpression()), !dbg !7929
  %9 = lshr i32 %3, 2, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %9, metadata !7927, metadata !DIExpression()), !dbg !7929
  br label %10, !dbg !7934

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !7928, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32 %12, metadata !7926, metadata !DIExpression()), !dbg !7929
  %13 = load i32, i32* %11, align 4, !dbg !7937
  %14 = icmp eq i32 %13, -1, !dbg !7940
  br i1 %14, label %16, label %15, !dbg !7941

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !7942
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.117, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7942
  unreachable, !dbg !7942

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !7947
  call void @llvm.dbg.value(metadata i32 %17, metadata !7926, metadata !DIExpression()), !dbg !7929
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !7948
  call void @llvm.dbg.value(metadata i32* %18, metadata !7928, metadata !DIExpression()), !dbg !7929
  %19 = icmp eq i32 %17, %9, !dbg !7931
  br i1 %19, label %20, label %10, !dbg !7934, !llvm.loop !7949

20:                                               ; preds = %16, %2
  ret void, !dbg !7951
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !7952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 0, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %0, metadata !7955, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !7956
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !7955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7956
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !7955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7956
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %2, metadata !7955, metadata !DIExpression()), !dbg !7956
  ret i32 %2, !dbg !7958
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7959 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7964, metadata !DIExpression()), !dbg !7966
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7967
  %3 = or i32 %2, 512, !dbg !7967
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7967
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %4, metadata !7965, metadata !DIExpression()), !dbg !7966
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !7971

5:                                                ; preds = %1
  br label %7, !dbg !7972

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !7976
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.117, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7976
  unreachable, !dbg !7976

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !7981
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7965, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7966
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7965, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7966
  br label %10, !dbg !7982

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7983
  %12 = and i32 %11, 8192, !dbg !7984
  %13 = icmp eq i32 %12, 0, !dbg !7985
  br i1 %13, label %10, label %14, !dbg !7982, !llvm.loop !7986

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7988
  %16 = and i32 %15, 256, !dbg !7989
  %17 = icmp eq i32 %16, 0, !dbg !7990
  br i1 %17, label %14, label %18, !dbg !7991, !llvm.loop !7992

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !7981
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !7965, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7966
  %20 = and i32 %19, 16, !dbg !7981
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !7965, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7966
  call void @llvm.dbg.value(metadata i32 undef, metadata !7965, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7966
  %21 = or i32 %4, %20, !dbg !7994
  %22 = or i32 %21, 8, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %22, metadata !7965, metadata !DIExpression()), !dbg !7966
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7995
  ret void, !dbg !7996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7997 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !7999, metadata !DIExpression()), !dbg !8001
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8002
  call void @llvm.dbg.value(metadata i32 %2, metadata !8000, metadata !DIExpression()), !dbg !8001
  %3 = and i32 %2, -268435477, !dbg !8003
  call void @llvm.dbg.value(metadata i32 %3, metadata !8000, metadata !DIExpression()), !dbg !8001
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8004
  br label %4, !dbg !8005

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8006
  %6 = and i32 %5, 2, !dbg !8007
  %7 = icmp eq i32 %6, 0, !dbg !8005
  br i1 %7, label %8, label %4, !dbg !8005, !llvm.loop !8008

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8010
  call void @llvm.dbg.value(metadata i32 %9, metadata !8000, metadata !DIExpression()), !dbg !8001
  %10 = and i32 %9, -9, !dbg !8011
  call void @llvm.dbg.value(metadata i32 %10, metadata !8000, metadata !DIExpression()), !dbg !8001
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8012
  br label %11, !dbg !8013

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8014
  %13 = and i32 %12, 8, !dbg !8015
  %14 = icmp eq i32 %13, 0, !dbg !8013
  br i1 %14, label %15, label %11, !dbg !8013, !llvm.loop !8016

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8018, !range !2812
  %17 = icmp eq i8 %16, 0, !dbg !8020
  br i1 %17, label %18, label %21, !dbg !8021

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8022
  %20 = and i32 %19, -513, !dbg !8022
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8022
  br label %21, !dbg !8026

21:                                               ; preds = %18, %15
  ret void, !dbg !8027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8028 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8032, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8033, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8034, metadata !DIExpression()), !dbg !8035
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8036
  call void @llvm.dbg.value(metadata i32 %2, metadata !8033, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %2, metadata !8033, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !8035
  %3 = icmp eq i16 %0, 1, !dbg !8037
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !8039
  %5 = or i32 %2, %4, !dbg !8039
  call void @llvm.dbg.value(metadata i32 %5, metadata !8033, metadata !DIExpression()), !dbg !8035
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8040
  br label %6, !dbg !8041

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8042
  %8 = and i32 %7, 2, !dbg !8043
  %9 = icmp eq i32 %8, 0, !dbg !8044
  br i1 %9, label %6, label %10, !dbg !8041, !llvm.loop !8045

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8047
  %12 = and i32 %11, 1, !dbg !8048
  %13 = icmp eq i32 %12, 0, !dbg !8049
  br i1 %13, label %14, label %10, !dbg !8049, !llvm.loop !8050

14:                                               ; preds = %10
  ret i32 0, !dbg !8052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8053 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8055, metadata !DIExpression()), !dbg !8056
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !8057
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !8058
  ret void, !dbg !8059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !8060 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8064, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !8065, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !8066, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i8 0, metadata !8068, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 0, metadata !8067, metadata !DIExpression()), !dbg !8069
  %3 = icmp eq i32 %1, 0, !dbg !8070
  br i1 %3, label %16, label %4, !dbg !8073

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !8068, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %6, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %7, metadata !8066, metadata !DIExpression()), !dbg !8069
  %8 = shl i32 %6, 8, !dbg !8074
  %9 = and i32 %7, 255, !dbg !8076
  %10 = or i32 %8, %9, !dbg !8077
  call void @llvm.dbg.value(metadata i32 %10, metadata !8067, metadata !DIExpression()), !dbg !8069
  %11 = lshr i32 %7, 8, !dbg !8078
  call void @llvm.dbg.value(metadata i32 %11, metadata !8066, metadata !DIExpression()), !dbg !8069
  %12 = add nuw nsw i8 %5, 1, !dbg !8079
  call void @llvm.dbg.value(metadata i8 %12, metadata !8068, metadata !DIExpression()), !dbg !8069
  %13 = icmp ult i32 %7, 256, !dbg !8070
  br i1 %13, label %14, label %4, !dbg !8073, !llvm.loop !8080

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !8082
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8084
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8085
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8086
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8087
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8088
  br label %16, !dbg !8089

16:                                               ; preds = %2, %14
  ret void, !dbg !8090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !8091 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8095, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8 %1, metadata !8096, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8097, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %3, metadata !8098, metadata !DIExpression()), !dbg !8101
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !8102
  call void @llvm.dbg.value(metadata i32 %5, metadata !8100, metadata !DIExpression()), !dbg !8101
  %6 = icmp eq i32 %3, 3, !dbg !8103
  br i1 %6, label %7, label %11, !dbg !8105

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !8106
  %9 = zext i8 %1 to i32, !dbg !8108
  %10 = or i32 %8, %9, !dbg !8109
  call void @llvm.dbg.value(metadata i32 %10, metadata !8099, metadata !DIExpression()), !dbg !8101
  br label %16, !dbg !8110

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !8111
  %13 = zext i8 %1 to i32, !dbg !8113
  %14 = or i32 %12, %13, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %14, metadata !8099, metadata !DIExpression()), !dbg !8101
  %15 = lshr i32 %5, 24, !dbg !8115
  call void @llvm.dbg.value(metadata i32 %15, metadata !8100, metadata !DIExpression()), !dbg !8101
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !8116
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !8101
  call void @llvm.dbg.value(metadata i32 %18, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %17, metadata !8099, metadata !DIExpression()), !dbg !8101
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8117
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8118
  %19 = add i32 %3, 1, !dbg !8119
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8120
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8121
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8122
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8123
  ret void, !dbg !8124
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !8125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8129, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.value(metadata i32 %1, metadata !8130, metadata !DIExpression()), !dbg !8131
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8132
  %4 = and i32 %3, -256, !dbg !8133
  %5 = and i32 %0, 255, !dbg !8134
  %6 = or i32 %4, %5, !dbg !8135
  ret i32 %6, !dbg !8136
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !8137 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8142, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %1, metadata !8143, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8** %2, metadata !8144, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32* %3, metadata !8145, metadata !DIExpression()), !dbg !8157
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !8158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8158
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !8146, metadata !DIExpression()), !dbg !8159
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8160
  call void @llvm.dbg.value(metadata i32 %7, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !8154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8157
  %8 = lshr i32 %7, 24, !dbg !8161
  call void @llvm.dbg.value(metadata i32 %8, metadata !8155, metadata !DIExpression()), !dbg !8157
  %9 = trunc i32 %8 to i8, !dbg !8162
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !8163
  store i8 %9, i8* %6, align 4, !dbg !8164
  call void @llvm.dbg.value(metadata i32 1, metadata !8156, metadata !DIExpression()), !dbg !8157
  %11 = load i8*, i8** %2, align 4, !dbg !8165
  br label %12, !dbg !8169

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !8165
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8156, metadata !DIExpression()), !dbg !8157
  %15 = load i8, i8* %13, align 1, !dbg !8170
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !8171
  store i8 %15, i8* %16, align 1, !dbg !8172
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8173
  store i8* %17, i8** %2, align 4, !dbg !8173
  %18 = add nuw nsw i32 %14, 1, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %18, metadata !8156, metadata !DIExpression()), !dbg !8157
  %19 = icmp eq i32 %18, 4, !dbg !8175
  br i1 %19, label %20, label %12, !dbg !8169, !llvm.loop !8176

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !8178
  %22 = load i32, i32* %21, align 4, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %22, metadata !8155, metadata !DIExpression()), !dbg !8157
  %23 = load i32, i32* %3, align 4, !dbg !8179
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !8180
  %25 = shl i32 %7, 8, !dbg !8181
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !8154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8157
  %26 = and i32 %0, 255, !dbg !8182
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !8154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8157
  %27 = or i32 %25, %26, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %27, metadata !8154, metadata !DIExpression()), !dbg !8157
  store i32 %24, i32* %3, align 4, !dbg !8184
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8185
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8186
  ret i32 %27, !dbg !8187
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !8188 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8192, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8* %1, metadata !8193, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %2, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8198
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !8199
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8199
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !8197, metadata !DIExpression()), !dbg !8200
  %6 = add i32 %0, -1610348544, !dbg !8201
  call void @llvm.dbg.value(metadata i32 %6, metadata !8192, metadata !DIExpression()), !dbg !8198
  %7 = ptrtoint i8* %1 to i32, !dbg !8202
  %8 = and i32 %7, 3, !dbg !8204
  %9 = icmp eq i32 %8, 0, !dbg !8205
  br i1 %9, label %10, label %23, !dbg !8206

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %2, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %6, metadata !8192, metadata !DIExpression()), !dbg !8198
  %11 = icmp sgt i32 %2, 0, !dbg !8207
  br i1 %11, label %12, label %72, !dbg !8211

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %14, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %15, metadata !8192, metadata !DIExpression()), !dbg !8198
  %16 = bitcast i8* %13 to i32*, !dbg !8212
  %17 = load i32, i32* %16, align 4, !dbg !8212
  %18 = inttoptr i32 %15 to i32*, !dbg !8212
  store volatile i32 %17, i32* %18, align 4, !dbg !8212
  %19 = add i32 %15, 4, !dbg !8214
  call void @llvm.dbg.value(metadata i32 %19, metadata !8192, metadata !DIExpression()), !dbg !8198
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !8215
  call void @llvm.dbg.value(metadata i8* %20, metadata !8196, metadata !DIExpression()), !dbg !8198
  %21 = add nsw i32 %14, -4, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %21, metadata !8194, metadata !DIExpression()), !dbg !8198
  %22 = icmp ugt i32 %14, 4, !dbg !8207
  br i1 %22, label %12, label %72, !dbg !8211, !llvm.loop !8217

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !8219
  %25 = icmp eq i32 %24, 0, !dbg !8221
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %2, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %2, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %6, metadata !8192, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %6, metadata !8192, metadata !DIExpression()), !dbg !8198
  %26 = icmp sgt i32 %2, 0, !dbg !8222
  br i1 %25, label %31, label %27, !dbg !8223

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !8224

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !8224

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8227

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !8227

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %39, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %40, metadata !8192, metadata !DIExpression()), !dbg !8198
  %41 = bitcast i8* %38 to i16*, !dbg !8230
  %42 = load i16, i16* %41, align 2, !dbg !8230
  store i16 %42, i16* %34, align 4, !dbg !8233
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8234
  %44 = bitcast i8* %43 to i16*, !dbg !8234
  %45 = load i16, i16* %44, align 2, !dbg !8235
  store i16 %45, i16* %35, align 2, !dbg !8236
  %46 = load i32, i32* %36, align 4, !dbg !8237
  %47 = inttoptr i32 %40 to i32*, !dbg !8237
  store volatile i32 %46, i32* %47, align 4, !dbg !8237
  %48 = add i32 %40, 4, !dbg !8238
  call void @llvm.dbg.value(metadata i32 %48, metadata !8192, metadata !DIExpression()), !dbg !8198
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8239
  call void @llvm.dbg.value(metadata i8* %49, metadata !8196, metadata !DIExpression()), !dbg !8198
  %50 = add nsw i32 %39, -4, !dbg !8240
  call void @llvm.dbg.value(metadata i32 %50, metadata !8194, metadata !DIExpression()), !dbg !8198
  %51 = icmp ugt i32 %39, 4, !dbg !8241
  br i1 %51, label %37, label %72, !dbg !8227, !llvm.loop !8242

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %54, metadata !8194, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %55, metadata !8192, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8* %53, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 0, metadata !8195, metadata !DIExpression()), !dbg !8198
  br label %56, !dbg !8244

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %58, metadata !8195, metadata !DIExpression()), !dbg !8198
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8248
  call void @llvm.dbg.value(metadata i8* %59, metadata !8196, metadata !DIExpression()), !dbg !8198
  %60 = load i8, i8* %57, align 1, !dbg !8251
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8252
  store i8 %60, i8* %61, align 1, !dbg !8253
  %62 = add nuw nsw i32 %58, 1, !dbg !8254
  call void @llvm.dbg.value(metadata i32 %62, metadata !8195, metadata !DIExpression()), !dbg !8198
  %63 = icmp ult i32 %58, 3, !dbg !8255
  %64 = icmp ult i32 %62, %54, !dbg !8256
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8256
  br i1 %65, label %56, label %66, !dbg !8244, !llvm.loop !8257

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8259
  %68 = inttoptr i32 %55 to i32*, !dbg !8259
  store volatile i32 %67, i32* %68, align 4, !dbg !8259
  %69 = add i32 %55, 4, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %69, metadata !8192, metadata !DIExpression()), !dbg !8198
  %70 = add nsw i32 %54, -4, !dbg !8261
  call void @llvm.dbg.value(metadata i8* %59, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 %70, metadata !8194, metadata !DIExpression()), !dbg !8198
  %71 = icmp sgt i32 %54, 4, !dbg !8262
  br i1 %71, label %52, label %72, !dbg !8224, !llvm.loop !8263

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8265
  ret void, !dbg !8265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8266 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8270, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i8* %1, metadata !8271, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i8* %2, metadata !8272, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i16 %3, metadata !8273, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i16 %4, metadata !8274, metadata !DIExpression()), !dbg !8280
  %7 = bitcast i32* %6 to i8*, !dbg !8281
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8281
  call void @llvm.dbg.value(metadata i8* %7, metadata !8279, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 0, metadata !8276, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8278, metadata !DIExpression()), !dbg !8280
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8278, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 0, metadata !8276, metadata !DIExpression()), !dbg !8280
  %9 = icmp eq i16 %3, 0, !dbg !8282
  br i1 %9, label %33, label %10, !dbg !8285

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8278, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 %12, metadata !8276, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 0, metadata !8277, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 0, metadata !8275, metadata !DIExpression()), !dbg !8280
  store i32 0, i32* %6, align 4, !dbg !8286
  call void @llvm.dbg.value(metadata i32 0, metadata !8277, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 %12, metadata !8276, metadata !DIExpression()), !dbg !8280
  %13 = icmp ult i32 %12, %8, !dbg !8289
  br i1 %13, label %14, label %27, !dbg !8291

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8277, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 %16, metadata !8276, metadata !DIExpression()), !dbg !8280
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8292
  %18 = load i8, i8* %17, align 1, !dbg !8292
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !8294
  store i8 %18, i8* %19, align 1, !dbg !8295
  %20 = add nuw nsw i32 %16, 1, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %20, metadata !8276, metadata !DIExpression()), !dbg !8280
  %21 = add nuw nsw i32 %15, 1, !dbg !8297
  call void @llvm.dbg.value(metadata i32 %21, metadata !8277, metadata !DIExpression()), !dbg !8280
  %22 = icmp ult i32 %20, %8, !dbg !8289
  %23 = icmp ult i32 %15, 3, !dbg !8298
  %24 = select i1 %22, i1 %23, i1 false, !dbg !8298
  br i1 %24, label %14, label %25, !dbg !8291, !llvm.loop !8299

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !8301
  br label %27, !dbg !8301

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !8301
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !8302
  call void @llvm.dbg.value(metadata i32 %28, metadata !8275, metadata !DIExpression()), !dbg !8280
  %30 = bitcast i8* %11 to i32*, !dbg !8301
  store volatile i32 %28, i32* %30, align 4, !dbg !8301
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !8303
  call void @llvm.dbg.value(metadata i8* %31, metadata !8278, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 %29, metadata !8276, metadata !DIExpression()), !dbg !8280
  %32 = icmp ult i32 %29, %8, !dbg !8282
  br i1 %32, label %10, label %33, !dbg !8285, !llvm.loop !8304

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8306
  %34 = zext i16 %4 to i32, !dbg !8307
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8308
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8309
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8310
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !8278, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8280
  call void @llvm.dbg.value(metadata i8* %2, metadata !8272, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 0, metadata !8276, metadata !DIExpression()), !dbg !8280
  %35 = icmp eq i16 %4, 0, !dbg !8311
  br i1 %35, label %47, label %36, !dbg !8314

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !8315
  call void @llvm.dbg.value(metadata i8* %37, metadata !8278, metadata !DIExpression()), !dbg !8280
  br label %38, !dbg !8314

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !8272, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i8* %40, metadata !8278, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.value(metadata i32 %41, metadata !8276, metadata !DIExpression()), !dbg !8280
  %42 = load volatile i8, i8* %40, align 1, !dbg !8316
  store i8 %42, i8* %39, align 1, !dbg !8318
  %43 = add nuw nsw i32 %41, 1, !dbg !8319
  call void @llvm.dbg.value(metadata i32 %43, metadata !8276, metadata !DIExpression()), !dbg !8280
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8320
  call void @llvm.dbg.value(metadata i8* %44, metadata !8272, metadata !DIExpression()), !dbg !8280
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8321
  call void @llvm.dbg.value(metadata i8* %45, metadata !8278, metadata !DIExpression()), !dbg !8280
  %46 = icmp eq i32 %43, %34, !dbg !8311
  br i1 %46, label %47, label %38, !dbg !8314, !llvm.loop !8322

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8324
  ret void, !dbg !8324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8325 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8329, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8* %1, metadata !8330, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i32 0, metadata !8331, metadata !DIExpression()), !dbg !8337
  %4 = icmp eq i8* %1, null, !dbg !8338
  br i1 %4, label %67, label %5, !dbg !8340

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8341
  call void @llvm.dbg.value(metadata i32 %27, metadata !8332, metadata !DIExpression()), !dbg !8337
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !8342

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !8337
  call void @llvm.dbg.value(metadata i32 %9, metadata !8331, metadata !DIExpression()), !dbg !8337
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8343
  %11 = load i8, i8* %10, align 1, !dbg !8343
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !8344

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !8345

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8348
  %15 = and i32 %14, -2, !dbg !8348
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8348
  br label %41, !dbg !8352

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8353
  %18 = and i32 %17, -2, !dbg !8353
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8353
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !8356

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8358
  %22 = or i32 %21, 1, !dbg !8358
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8358
  br label %41, !dbg !8362

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8363
  %25 = or i32 %24, 1, !dbg !8363
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8363
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !8341
  %28 = icmp eq i32 %27, 0, !dbg !8366
  br i1 %7, label %29, label %35, !dbg !8369

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8370
  br i1 %28, label %33, label %31, !dbg !8373

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !8370
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8370
  br label %67, !dbg !8370

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !8370
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8370
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8374
  br i1 %28, label %39, label %37, !dbg !8377

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !8374
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8374
  br label %67, !dbg !8374

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !8374
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8374
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !8378
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !8379
  %44 = load i8, i8* %43, align 1, !dbg !8379
  %45 = icmp eq i8 %44, 5, !dbg !8380
  br i1 %45, label %46, label %56, !dbg !8381

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8382
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !8383

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !8333, metadata !DIExpression(DW_OP_deref)), !dbg !8384
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8385
  %50 = load i8, i8* %3, align 1, !dbg !8387
  call void @llvm.dbg.value(metadata i8 %50, metadata !8333, metadata !DIExpression()), !dbg !8384
  %51 = load i8, i8* %48, align 1, !dbg !8388
  %52 = and i8 %51, %50, !dbg !8389
  %53 = icmp eq i8 %52, 0, !dbg !8390
  br i1 %53, label %54, label %49, !dbg !8390, !llvm.loop !8391

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8393
  %55 = add i32 %9, 1, !dbg !8394
  br label %61, !dbg !8395

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !8396
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !8398
  %59 = load i8, i8* %58, align 1, !dbg !8398
  %60 = zext i8 %59 to i16, !dbg !8398
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !8399
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !8394
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !8400
  %64 = load i8, i8* %63, align 1, !dbg !8400
  %65 = zext i8 %64 to i32, !dbg !8400
  %66 = add i32 %42, %65, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %66, metadata !8331, metadata !DIExpression()), !dbg !8337
  br label %8, !dbg !8342, !llvm.loop !8402

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !8404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8405 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8409, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i8* %1, metadata !8410, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i8 %2, metadata !8411, metadata !DIExpression()), !dbg !8412
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !8411, metadata !DIExpression(DW_OP_deref)), !dbg !8412
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8413
  ret void, !dbg !8414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8415 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8419, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i8* %1, metadata !8420, metadata !DIExpression()), !dbg !8421
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !8424 {
  ret i32 78, !dbg !8428
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !8429 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8433
  %2 = and i32 %1, 7340032, !dbg !8435
  %3 = icmp ult i32 %2, 2097153, !dbg !8436
  %4 = select i1 %3, i32 30, i32 18, !dbg !8437
  ret i32 %4, !dbg !8438
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !8439 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8443, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 0, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 0, metadata !8444, metadata !DIExpression()), !dbg !8445
  br label %2, !dbg !8446

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8444, metadata !DIExpression()), !dbg !8445
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8448
  store i8 -1, i8* %4, align 1, !dbg !8451
  %5 = add nuw nsw i32 %3, 1, !dbg !8452
  call void @llvm.dbg.value(metadata i32 %5, metadata !8444, metadata !DIExpression()), !dbg !8445
  %6 = icmp eq i32 %5, 8, !dbg !8453
  br i1 %6, label %7, label %2, !dbg !8446, !llvm.loop !8454

7:                                                ; preds = %2
  ret i1 true, !dbg !8456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !8457 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !8459, metadata !DIExpression()), !dbg !8460
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8461
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !8462
  %3 = load i8, i8* %2, align 1, !dbg !8462
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8463
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8464
  %5 = ptrtoint i8* %4 to i32, !dbg !8465
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8466
  %6 = bitcast i8* %4 to i32*, !dbg !8467
  %7 = load volatile i32, i32* %6, align 4, !dbg !8468
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8469
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8470
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8471
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8472
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8473
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8474
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8475
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8476
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8477
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8478
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8479
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8480
  %14 = or i32 %13, 986880, !dbg !8481
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8482
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8483
  %16 = or i32 %15, 252645135, !dbg !8484
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8485
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8486
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8487
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !8488
  %20 = load i8, i8* %19, align 1, !dbg !8488
  %21 = zext i8 %20 to i32, !dbg !8489
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !8490
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !8493 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8494
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8495
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8496
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8497
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8498
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8499
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8500
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8501
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8502
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8503
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8504
  %7 = and i32 %6, -252645136, !dbg !8505
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8506
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8507
  %9 = zext i8 %8 to i32, !dbg !8507
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !8508
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8509
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8510
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8512
  %13 = inttoptr i32 %12 to i32*, !dbg !8513
  %14 = load volatile i32, i32* %13, align 4, !dbg !8514
  %15 = icmp eq i32 %11, %14, !dbg !8515
  br i1 %15, label %17, label %16, !dbg !8516

16:                                               ; preds = %0, %16
  br label %16, !dbg !8517, !llvm.loop !8518

17:                                               ; preds = %0
  ret void, !dbg !8520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8521 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8522
  %2 = icmp eq i32 %1, 0, !dbg !8524
  br i1 %2, label %3, label %5, !dbg !8525

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8526
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8528
  br label %5, !dbg !8529

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8530
  %7 = icmp eq i32 %6, 0, !dbg !8532
  br i1 %7, label %8, label %10, !dbg !8533

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8534
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8536
  br label %10, !dbg !8537

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8538
  %12 = and i32 %11, -256, !dbg !8539
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8540
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8541
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8544 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8545
  %2 = icmp eq i32 %1, 0, !dbg !8547
  br i1 %2, label %4, label %3, !dbg !8548

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8549
  br label %4, !dbg !8551

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8552
  %6 = icmp eq i32 %5, 0, !dbg !8554
  br i1 %6, label %8, label %7, !dbg !8555

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8556
  br label %8, !dbg !8558

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !8559
  ret void, !dbg !8560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !8561 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8563, metadata !DIExpression()), !dbg !8564
  ret i32 0, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !8566 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8568, metadata !DIExpression()), !dbg !8569
  ret i32 0, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8573, metadata !DIExpression()), !dbg !8574
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !8575
  ret void, !dbg !8576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !8577 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %1, metadata !8579, metadata !DIExpression()), !dbg !8581
  ret i32 %1, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8585, metadata !DIExpression()), !dbg !8586
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8587
  ret void, !dbg !8588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !8589 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8591, metadata !DIExpression()), !dbg !8592
  ret i32 0, !dbg !8593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !8594 {
  ret i32 0, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !8598 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8602, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i8* %1, metadata !8603, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 %2, metadata !8604, metadata !DIExpression()), !dbg !8617
  %4 = ptrtoint i8* %0 to i32, !dbg !8618
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !8619
  %7 = and i32 %6, 3, !dbg !8619
  %8 = icmp eq i32 %7, 0, !dbg !8619
  br i1 %8, label %9, label %26, !dbg !8619

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !8620
  call void @llvm.dbg.value(metadata i32* %10, metadata !8606, metadata !DIExpression()), !dbg !8621
  %11 = bitcast i8* %1 to i32*, !dbg !8622
  call void @llvm.dbg.value(metadata i32* %11, metadata !8609, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8617
  %12 = icmp ult i32 %2, 4, !dbg !8623
  br i1 %12, label %65, label %13, !dbg !8626

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !8626

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8605, metadata !DIExpression()), !dbg !8617
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !8627
  %18 = load i32, i32* %17, align 4, !dbg !8627
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !8630
  %20 = load i32, i32* %19, align 4, !dbg !8630
  %21 = icmp eq i32 %18, %20, !dbg !8631
  %22 = add nuw nsw i32 %16, 1, !dbg !8632
  call void @llvm.dbg.value(metadata i32 %22, metadata !8605, metadata !DIExpression()), !dbg !8617
  %23 = xor i1 %21, true, !dbg !8633
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !8633
  call void @llvm.dbg.value(metadata i32 %22, metadata !8605, metadata !DIExpression()), !dbg !8617
  br i1 %25, label %59, label %15, !dbg !8633, !llvm.loop !8634

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !8636
  %28 = icmp eq i32 %27, 0, !dbg !8636
  br i1 %28, label %31, label %29, !dbg !8636

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8617
  %30 = icmp eq i32 %2, 0, !dbg !8637
  br i1 %30, label %65, label %48, !dbg !8640

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !8641
  call void @llvm.dbg.value(metadata i16* %32, metadata !8610, metadata !DIExpression()), !dbg !8642
  %33 = bitcast i8* %1 to i16*, !dbg !8643
  call void @llvm.dbg.value(metadata i16* %33, metadata !8613, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8617
  %34 = icmp ult i32 %2, 2, !dbg !8644
  br i1 %34, label %65, label %35, !dbg !8647

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !8647

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8605, metadata !DIExpression()), !dbg !8617
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !8648
  %40 = load i16, i16* %39, align 2, !dbg !8648
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !8651
  %42 = load i16, i16* %41, align 2, !dbg !8651
  %43 = icmp eq i16 %40, %42, !dbg !8652
  %44 = add nuw nsw i32 %38, 1, !dbg !8653
  call void @llvm.dbg.value(metadata i32 %44, metadata !8605, metadata !DIExpression()), !dbg !8617
  %45 = xor i1 %43, true, !dbg !8654
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !8654
  call void @llvm.dbg.value(metadata i32 %44, metadata !8605, metadata !DIExpression()), !dbg !8617
  br i1 %47, label %61, label %37, !dbg !8654, !llvm.loop !8655

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8605, metadata !DIExpression()), !dbg !8617
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !8657
  %51 = load i8, i8* %50, align 1, !dbg !8657
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !8660
  %53 = load i8, i8* %52, align 1, !dbg !8660
  %54 = icmp eq i8 %51, %53, !dbg !8661
  %55 = add nuw i32 %49, 1, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %55, metadata !8605, metadata !DIExpression()), !dbg !8617
  %56 = xor i1 %54, true, !dbg !8663
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !8663
  call void @llvm.dbg.value(metadata i32 %55, metadata !8605, metadata !DIExpression()), !dbg !8617
  br i1 %58, label %63, label %48, !dbg !8663, !llvm.loop !8664

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !8666
  br label %65, !dbg !8666

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !8666
  br label %65, !dbg !8666

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !8666
  br label %65, !dbg !8666

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !8617
  ret i1 %66, !dbg !8666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !8667 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8671, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %1, metadata !8672, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %2, metadata !8673, metadata !DIExpression()), !dbg !8682
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8683
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !8674, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %0, metadata !8675, metadata !DIExpression()), !dbg !8682
  %7 = bitcast i8** %4 to i8*, !dbg !8684
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8684
  call void @llvm.dbg.value(metadata i8* %1, metadata !8676, metadata !DIExpression()), !dbg !8682
  store i8* %1, i8** %4, align 4, !dbg !8685
  call void @llvm.dbg.value(metadata i32 0, metadata !8677, metadata !DIExpression()), !dbg !8682
  %8 = bitcast i32* %5 to i8*, !dbg !8686
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8686
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8687
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !8688
  store i8 1, i8* %9, align 4, !dbg !8689
  call void @llvm.dbg.value(metadata i32 %2, metadata !8673, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %0, metadata !8675, metadata !DIExpression()), !dbg !8682
  %10 = icmp eq i32 %2, 0, !dbg !8690
  br i1 %10, label %73, label %11, !dbg !8691

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !8692
  call void @llvm.dbg.value(metadata i32 %12, metadata !8675, metadata !DIExpression()), !dbg !8682
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !8691

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8673, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %20, metadata !8675, metadata !DIExpression()), !dbg !8682
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8693
  %22 = shl i32 %21, 1, !dbg !8695
  %23 = add i32 %22, -1, !dbg !8696
  %24 = and i32 %23, %20, !dbg !8697
  %25 = sub i32 %22, %24, !dbg !8698
  %26 = icmp ugt i32 %19, %25, !dbg !8699
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %27, metadata !8679, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %27, metadata !8678, metadata !DIExpression()), !dbg !8682
  store i32 %27, i32* %5, align 4, !dbg !8701
  %28 = load i32, i32* %13, align 4, !dbg !8702
  %29 = and i32 %28, 16, !dbg !8704
  %30 = icmp eq i32 %29, 0, !dbg !8704
  br i1 %30, label %31, label %32, !dbg !8705

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !8706
  br label %32, !dbg !8708

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !8709
  %34 = icmp eq i8 %33, 4, !dbg !8711
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8712
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !8712
  %37 = load i8, i8* %36, align 1, !dbg !8712
  %38 = zext i8 %37 to i32, !dbg !8712
  br i1 %34, label %39, label %43, !dbg !8713

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !8676, metadata !DIExpression(DW_OP_deref)), !dbg !8682
  call void @llvm.dbg.value(metadata i32* %5, metadata !8678, metadata !DIExpression(DW_OP_deref)), !dbg !8682
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !8714
  call void @llvm.dbg.value(metadata i32 %40, metadata !8677, metadata !DIExpression()), !dbg !8682
  %41 = load i8*, i8** %4, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata i8* %41, metadata !8676, metadata !DIExpression()), !dbg !8682
  %42 = load i32, i32* %5, align 4, !dbg !8717
  call void @llvm.dbg.value(metadata i32 %42, metadata !8678, metadata !DIExpression()), !dbg !8682
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !8718
  br label %47, !dbg !8719

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !8720
  call void @llvm.dbg.value(metadata i32 %44, metadata !8677, metadata !DIExpression()), !dbg !8682
  %45 = load i8*, i8** %4, align 4, !dbg !8722
  call void @llvm.dbg.value(metadata i8* %45, metadata !8676, metadata !DIExpression()), !dbg !8682
  %46 = load i32, i32* %5, align 4, !dbg !8723
  call void @llvm.dbg.value(metadata i32 %46, metadata !8678, metadata !DIExpression()), !dbg !8682
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !8724
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !8712
  call void @llvm.dbg.value(metadata i32 %48, metadata !8677, metadata !DIExpression()), !dbg !8682
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !8725
  call void @llvm.dbg.value(metadata i32 %49, metadata !8681, metadata !DIExpression()), !dbg !8682
  %50 = load i8, i8* %14, align 1, !dbg !8726
  %51 = zext i8 %50 to i32, !dbg !8727
  %52 = add i32 %27, 1, !dbg !8728
  %53 = add i32 %52, %51, !dbg !8729
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8730
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8731
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8732
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8733
  %54 = load i16, i16* %16, align 2, !dbg !8734
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !8735
  %55 = load i16, i16* %16, align 2, !dbg !8736
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !8737
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !8738
  br label %56, !dbg !8739

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8740
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !8742
  %59 = load i8, i8* %58, align 1, !dbg !8742
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %60, metadata !8680, metadata !DIExpression()), !dbg !8682
  %61 = load i8*, i8** %17, align 4, !dbg !8744
  %62 = load i8, i8* %61, align 1, !dbg !8746
  %63 = zext i8 %62 to i32, !dbg !8746
  %64 = and i32 %60, %63, !dbg !8747
  %65 = icmp eq i32 %64, 0, !dbg !8748
  br i1 %65, label %66, label %56, !dbg !8749, !llvm.loop !8750

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8752
  %67 = load i32, i32* %5, align 4, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %67, metadata !8678, metadata !DIExpression()), !dbg !8682
  %68 = load i8*, i8** %4, align 4, !dbg !8754
  call void @llvm.dbg.value(metadata i8* %68, metadata !8676, metadata !DIExpression()), !dbg !8682
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !8754
  call void @llvm.dbg.value(metadata i8* %69, metadata !8676, metadata !DIExpression()), !dbg !8682
  store i8* %69, i8** %4, align 4, !dbg !8754
  %70 = sub i32 %19, %27, !dbg !8755
  call void @llvm.dbg.value(metadata i32 %70, metadata !8673, metadata !DIExpression()), !dbg !8682
  %71 = add i32 %27, %20, !dbg !8756
  call void @llvm.dbg.value(metadata i32 %71, metadata !8675, metadata !DIExpression()), !dbg !8682
  %72 = icmp eq i32 %70, 0, !dbg !8690
  br i1 %72, label %73, label %18, !dbg !8691, !llvm.loop !8757

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !8759
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8760
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8761
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8761
  ret void, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8766, metadata !DIExpression()), !dbg !8768
  br label %2, !dbg !8769

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !8770
  call void @llvm.dbg.value(metadata i32 %3, metadata !8767, metadata !DIExpression()), !dbg !8768
  %4 = icmp eq i32 %3, 0, !dbg !8772
  br i1 %4, label %5, label %2, !dbg !8773, !llvm.loop !8774

5:                                                ; preds = %2
  ret void, !dbg !8776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8777 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8779, metadata !DIExpression()), !dbg !8780
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8781
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !8781
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !8782
  %5 = load i8, i8* %4, align 1, !dbg !8782
  %6 = zext i8 %5 to i32, !dbg !8783
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !8784
  ret void, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8786 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8789
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()), !dbg !8790
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8791
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8792
  ret void, !dbg !8793
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !8794 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8798, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i8 %1, metadata !8799, metadata !DIExpression()), !dbg !8802
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8803
  call void @llvm.dbg.value(metadata i32 %3, metadata !8800, metadata !DIExpression()), !dbg !8802
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8804
  %5 = load i16, i16* %4, align 2, !dbg !8804
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !8805
  %6 = zext i8 %1 to i32, !dbg !8806
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8807
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8808
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8809
  %7 = load i16, i16* %4, align 2, !dbg !8810
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !8811
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8812
  %9 = lshr i32 %8, 8, !dbg !8813
  %10 = and i32 %9, 255, !dbg !8814
  call void @llvm.dbg.value(metadata i32 %10, metadata !8801, metadata !DIExpression()), !dbg !8802
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !8815
  ret i32 %10, !dbg !8816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8817 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8820
  call void @llvm.dbg.value(metadata i32 %1, metadata !8819, metadata !DIExpression()), !dbg !8821
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8822
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8823
  %3 = and i32 %2, -513, !dbg !8823
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8823
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8828 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8830, metadata !DIExpression()), !dbg !8832
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %2, metadata !8831, metadata !DIExpression()), !dbg !8832
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8834
  br i1 %3, label %4, label %5, !dbg !8836

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8837
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8839
  ret void, !dbg !8840

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8841
  tail call void @Flash_ReturnReady() #21, !dbg !8843
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !8843
  unreachable, !dbg !8843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8847 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8849, metadata !DIExpression()), !dbg !8854
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %1, metadata !8851, metadata !DIExpression()), !dbg !8854
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !8856
  %3 = icmp eq i32 %2, 0, !dbg !8858
  br i1 %3, label %4, label %125, !dbg !8859

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8860
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8861
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8849, metadata !DIExpression()), !dbg !8854
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8863
  %7 = load i32, i32* %6, align 4, !dbg !8863
  %8 = xor i32 %7, -1, !dbg !8863
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8863
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !8863
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !8863
  %12 = icmp eq i32 %8, %11, !dbg !8863
  br i1 %12, label %14, label %13, !dbg !8866

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8867
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !8867
  unreachable, !dbg !8867

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8869
  %16 = icmp ult i32 %15, 16, !dbg !8871
  br i1 %16, label %17, label %34, !dbg !8872

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8873
  %19 = load i8, i8* %18, align 4, !dbg !8873
  %20 = icmp eq i8 %19, 1, !dbg !8874
  br i1 %20, label %21, label %34, !dbg !8875

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8876

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8878
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8880
  %27 = load i8, i8* %26, align 1, !dbg !8880
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %28, metadata !8850, metadata !DIExpression()), !dbg !8854
  %29 = load i8*, i8** %23, align 4, !dbg !8882
  %30 = load i8, i8* %29, align 1, !dbg !8884
  %31 = zext i8 %30 to i32, !dbg !8884
  %32 = and i32 %28, %31, !dbg !8885
  %33 = icmp eq i32 %32, 0, !dbg !8886
  br i1 %33, label %34, label %24, !dbg !8887, !llvm.loop !8888

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8890, !range !2812
  %36 = icmp ne i8 %35, 0, !dbg !8890
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !8892
  br i1 %39, label %116, label %40, !dbg !8892

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !8893
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8893
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !8895
  %44 = load i8, i8* %43, align 1, !dbg !8895
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !8896
  call void @llvm.dbg.value(metadata i32 %45, metadata !8850, metadata !DIExpression()), !dbg !8854
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !8897
  %47 = load i8*, i8** %46, align 4, !dbg !8897
  %48 = load i8, i8* %47, align 1, !dbg !8899
  %49 = zext i8 %48 to i32, !dbg !8899
  %50 = and i32 %45, %49, !dbg !8900
  %51 = icmp eq i32 %50, 0, !dbg !8901
  br i1 %51, label %85, label %52, !dbg !8902

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !8903
  br label %53, !dbg !8905

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8906
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !8908
  %56 = load i8, i8* %55, align 1, !dbg !8908
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !8909
  call void @llvm.dbg.value(metadata i32 %57, metadata !8850, metadata !DIExpression()), !dbg !8854
  %58 = load i8*, i8** %46, align 4, !dbg !8910
  %59 = load i8, i8* %58, align 1, !dbg !8912
  %60 = zext i8 %59 to i32, !dbg !8912
  %61 = and i32 %57, %60, !dbg !8913
  %62 = icmp eq i32 %61, 0, !dbg !8914
  br i1 %62, label %63, label %53, !dbg !8915, !llvm.loop !8916

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8918
  %65 = load i32, i32* %64, align 4, !dbg !8918
  %66 = and i32 %65, 4, !dbg !8920
  %67 = icmp eq i32 %66, 0, !dbg !8920
  br i1 %67, label %84, label %68, !dbg !8921

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8922
  %70 = load i8, i8* %69, align 4, !dbg !8922
  %71 = icmp eq i8 %70, 2, !dbg !8923
  br i1 %71, label %72, label %84, !dbg !8924

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8925
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8927
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8928
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8929
  %74 = load i16, i16* %73, align 2, !dbg !8929
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !8930
  %75 = load i16, i16* %73, align 2, !dbg !8931
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !8932
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8933
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8934
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8935
  %76 = load i16, i16* %73, align 2, !dbg !8936
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !8937
  %77 = load i16, i16* %73, align 2, !dbg !8938
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !8939
  br label %78, !dbg !8940

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8941
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8943
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8944
  %79 = load i16, i16* %73, align 2, !dbg !8945
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !8946
  %80 = load i16, i16* %73, align 2, !dbg !8947
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !8948
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8949
  call void @llvm.dbg.value(metadata i32 %81, metadata !8850, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8854
  %82 = and i32 %81, 256, !dbg !8950
  %83 = icmp eq i32 %82, 0, !dbg !8950
  br i1 %83, label %84, label %78, !dbg !8950, !llvm.loop !8951

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8953
  br label %116, !dbg !8954

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8955
  %87 = load i32, i32* %86, align 4, !dbg !8955
  %88 = and i32 %87, 2, !dbg !8958
  %89 = icmp eq i32 %88, 0, !dbg !8958
  br i1 %89, label %115, label %90, !dbg !8959

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !8960
  %92 = load %struct.anon.11*, %struct.anon.11** %91, align 4, !dbg !8960
  %93 = icmp eq %struct.anon.11* %92, null, !dbg !8961
  br i1 %93, label %94, label %115, !dbg !8962

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8963
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !8965
  %97 = load i8, i8* %96, align 1, !dbg !8965
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %98, metadata !8850, metadata !DIExpression()), !dbg !8854
  %99 = load i8*, i8** %46, align 4, !dbg !8967
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !8969
  %101 = load i8, i8* %100, align 1, !dbg !8969
  %102 = zext i8 %101 to i32, !dbg !8969
  %103 = and i32 %98, %102, !dbg !8970
  %104 = icmp eq i32 %103, 0, !dbg !8971
  br i1 %104, label %105, label %115, !dbg !8972

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !8973
  %107 = load i8, i8* %106, align 1, !dbg !8973
  %108 = zext i8 %107 to i32, !dbg !8973
  %109 = and i32 %98, %108, !dbg !8974
  %110 = icmp eq i32 %109, 0, !dbg !8975
  br i1 %110, label %111, label %115, !dbg !8976

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8977
  %113 = load i16, i16* %112, align 2, !dbg !8977
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !8979
  %114 = load i16, i16* %112, align 2, !dbg !8980
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !8981
  br label %115, !dbg !8982

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8983
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8984
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8985
  %118 = sub i32 0, %117, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %118, metadata !8852, metadata !DIExpression()), !dbg !8986
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8987
  %120 = icmp ult i32 %119, %118, !dbg !8989
  br i1 %120, label %121, label %122, !dbg !8990

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8991
  br label %122, !dbg !8993

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8994
  %124 = and i32 %123, -513, !dbg !8994
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8994
  br label %125, !dbg !8997

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8854
  ret void, !dbg !8998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8999 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9001, metadata !DIExpression()), !dbg !9005
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9006
  %3 = icmp eq i32 %2, -1, !dbg !9008
  br i1 %3, label %12, label %4, !dbg !9009

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9003, metadata !DIExpression()), !dbg !9005
  %5 = sub i32 0, %2, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %5, metadata !9004, metadata !DIExpression()), !dbg !9005
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9012
  %7 = load i8, i8* %6, align 4, !dbg !9012
  %8 = zext i8 %7 to i32, !dbg !9014
  %9 = icmp ugt i32 %8, %5, !dbg !9015
  br i1 %9, label %10, label %12, !dbg !9016

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !9017
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !9019
  br label %12, !dbg !9020

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %13, metadata !9002, metadata !DIExpression()), !dbg !9005
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9022
  %15 = load i16, i16* %14, align 2, !dbg !9022
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9023
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !9023
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !9024
  %19 = load i8, i8* %18, align 1, !dbg !9024
  %20 = zext i8 %19 to i32, !dbg !9025
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !9026
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !9027
  ret void, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9029 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9032
  call void @llvm.dbg.value(metadata i32 %1, metadata !9031, metadata !DIExpression()), !dbg !9033
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9034
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9035
  %3 = and i32 %2, -513, !dbg !9035
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9035
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9038
  ret void, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9040 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9044, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata i32 %1, metadata !9045, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata i8 %2, metadata !9046, metadata !DIExpression()), !dbg !9048
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %4, metadata !9047, metadata !DIExpression()), !dbg !9048
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9050
  %6 = load i16, i16* %5, align 2, !dbg !9050
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !9051
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9052
  %7 = zext i8 %2 to i32, !dbg !9053
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9054
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9055
  %8 = load i16, i16* %5, align 2, !dbg !9056
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !9057
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9058
  ret void, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !9060 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9065
  call void @llvm.dbg.value(metadata i32 %1, metadata !9064, metadata !DIExpression()), !dbg !9066
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !9067
  br i1 %2, label %4, label %3, !dbg !9069

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !9070
  br label %4, !dbg !9072

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9073
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9073
  ret i32 %5, !dbg !9074
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !9075 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9082
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9079, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8 0, metadata !9081, metadata !DIExpression()), !dbg !9083
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9084
  %3 = load i32, i32* %2, align 4, !dbg !9084
  %4 = xor i32 %3, -1, !dbg !9084
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9084
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !9084
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !9084
  %8 = icmp eq i32 %4, %7, !dbg !9084
  br i1 %8, label %10, label %9, !dbg !9087

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9088
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9088
  unreachable, !dbg !9088

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9090
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9091
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9091
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !9092
  %14 = load i8, i8* %13, align 1, !dbg !9092
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %15, metadata !9080, metadata !DIExpression()), !dbg !9083
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9094
  %17 = load i8*, i8** %16, align 4, !dbg !9094
  %18 = load i8, i8* %17, align 1, !dbg !9096
  %19 = zext i8 %18 to i32, !dbg !9096
  %20 = and i32 %15, %19, !dbg !9097
  %21 = icmp eq i32 %20, 0, !dbg !9098
  br i1 %21, label %22, label %23, !dbg !9099

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9100
  call void @llvm.dbg.value(metadata i8 1, metadata !9081, metadata !DIExpression()), !dbg !9083
  br label %23, !dbg !9102

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !9081, metadata !DIExpression()), !dbg !9083
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9103
  ret i1 %21, !dbg !9104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9105 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9107, metadata !DIExpression()), !dbg !9108
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9109, !range !2812
  %2 = icmp eq i8 %1, 0, !dbg !9109
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9109
  %4 = icmp eq i8 %3, 0, !dbg !9109
  %5 = select i1 %2, i1 true, i1 %4, !dbg !9109
  br i1 %5, label %6, label %7, !dbg !9109

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9112
  tail call void @Flash_ReturnReady() #21, !dbg !9114
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9114
  unreachable, !dbg !9114

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9118
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !9107, metadata !DIExpression()), !dbg !9108
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !9119
  ret void, !dbg !9120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9123, metadata !DIExpression()), !dbg !9125
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %2, metadata !9124, metadata !DIExpression()), !dbg !9125
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9127
  %4 = load i16, i16* %3, align 2, !dbg !9127
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9128
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !9128
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !9129
  %8 = load i8, i8* %7, align 1, !dbg !9129
  %9 = zext i8 %8 to i32, !dbg !9130
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !9131
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9132
  %11 = load i8, i8* %10, align 4, !dbg !9132
  %12 = icmp eq i8 %11, 0, !dbg !9134
  br i1 %12, label %14, label %13, !dbg !9135

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !9136
  br label %14, !dbg !9138

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9139
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !9140
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !9142 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %1, metadata !9144, metadata !DIExpression()), !dbg !9146
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9147
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9148
  ret void, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9150 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9154
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9152, metadata !DIExpression()), !dbg !9155
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9156, !range !2812
  %3 = icmp ne i8 %2, 0, !dbg !9156
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9156
  %5 = icmp eq i8 %4, 0, !dbg !9156
  %6 = select i1 %3, i1 %5, i1 false, !dbg !9156
  br i1 %6, label %8, label %7, !dbg !9156

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9159
  tail call void @Flash_ReturnReady() #21, !dbg !9161
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9161
  unreachable, !dbg !9161

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9165
  %10 = load i32, i32* %9, align 4, !dbg !9165
  %11 = xor i32 %10, -1, !dbg !9165
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9165
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !9165
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !9165
  %15 = icmp eq i32 %11, %14, !dbg !9165
  br i1 %15, label %17, label %16, !dbg !9168

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !9169
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9169
  unreachable, !dbg !9169

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9171
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !9172

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !9173
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !9175
  %23 = load i8, i8* %22, align 1, !dbg !9175
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !9176
  call void @llvm.dbg.value(metadata i32 %24, metadata !9153, metadata !DIExpression()), !dbg !9155
  %25 = load i8*, i8** %19, align 4, !dbg !9177
  %26 = load i8, i8* %25, align 1, !dbg !9179
  %27 = zext i8 %26 to i32, !dbg !9179
  %28 = and i32 %24, %27, !dbg !9180
  %29 = icmp eq i32 %28, 0, !dbg !9181
  br i1 %29, label %30, label %20, !dbg !9182, !llvm.loop !9183

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9185
  ret void, !dbg !9186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !9187 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9189, metadata !DIExpression()), !dbg !9190
  ret void, !dbg !9191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9215, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9216, metadata !DIExpression()), !dbg !9218
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9219
  %4 = load i8*, i8** %3, align 4, !dbg !9219
  call void @llvm.dbg.value(metadata i8* %4, metadata !9217, metadata !DIExpression()), !dbg !9218
  store i8 1, i8* %4, align 1, !dbg !9220
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9221
  store i8 2, i8* %5, align 1, !dbg !9222
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9223
  store i8 8, i8* %6, align 1, !dbg !9224
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9225
  store i8 4, i8* %7, align 1, !dbg !9226
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9227
  store i8 60, i8* %8, align 1, !dbg !9228
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9229
  store i8 -128, i8* %9, align 1, !dbg !9230
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !9231
  store i8 96, i8* %10, align 1, !dbg !9232
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9233
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9233
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !9234
  store i8 43, i8* %13, align 1, !dbg !9235
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9236
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !9237
  store i8 43, i8* %15, align 1, !dbg !9238
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9239
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !9240
  store i8 47, i8* %17, align 1, !dbg !9241
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9242
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !9243
  store i8 5, i8* %19, align 1, !dbg !9244
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9245
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !9246
  store i8 1, i8* %21, align 1, !dbg !9247
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9248
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !9249
  store i8 43, i8* %23, align 1, !dbg !9250
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9251
  store i8 22, i8* %24, align 4, !dbg !9252
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !9253
  %26 = load i8, i8* %25, align 1, !dbg !9253
  %27 = icmp eq i8 %26, 32, !dbg !9255
  br i1 %27, label %28, label %49, !dbg !9256

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !9257
  %30 = load i8, i8* %29, align 1, !dbg !9257
  %31 = icmp eq i8 %30, 24, !dbg !9258
  br i1 %31, label %32, label %41, !dbg !9259

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9260
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !9262
  store i8 117, i8* %34, align 1, !dbg !9263
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9264
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !9265
  store i8 122, i8* %36, align 1, !dbg !9266
  %37 = load i8, i8* %25, align 1, !dbg !9267
  %38 = icmp eq i8 %37, 32, !dbg !9269
  br i1 %38, label %39, label %49, !dbg !9270

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !9272
  br label %41, !dbg !9272

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !9272
  %43 = icmp eq i8 %42, 22, !dbg !9273
  br i1 %43, label %44, label %49, !dbg !9274

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9275
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !9277
  store i8 117, i8* %46, align 1, !dbg !9278
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9279
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !9280
  store i8 122, i8* %48, align 1, !dbg !9281
  br label %49, !dbg !9282

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9283
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !9284
  ret i32 0, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !9286 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9288, metadata !DIExpression()), !dbg !9292
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9293
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9289, metadata !DIExpression()), !dbg !9292
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9294
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9295
  %5 = load i8, i8* %4, align 1, !dbg !9297
  %6 = icmp eq i8 %5, -62, !dbg !9298
  br i1 %6, label %7, label %15, !dbg !9299

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !9300
  %9 = load i8, i8* %8, align 1, !dbg !9300
  %10 = icmp eq i8 %9, 32, !dbg !9301
  br i1 %10, label %11, label %15, !dbg !9302

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !9303
  %13 = load i8, i8* %12, align 1, !dbg !9303
  %14 = icmp eq i8 %13, 22, !dbg !9304
  br i1 %14, label %48, label %15, !dbg !9305

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9306
  %17 = bitcast i8* %16 to i16*, !dbg !9306
  %18 = load i16, i16* %17, align 2, !dbg !9306
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9307
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !9307
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9307
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !9308
  %23 = load i8, i8* %22, align 1, !dbg !9308
  %24 = zext i8 %23 to i32, !dbg !9309
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !9310
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9311
  %25 = load i16, i16* %17, align 2, !dbg !9312
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9313
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !9314
  call void @llvm.dbg.value(metadata i8* %2, metadata !9291, metadata !DIExpression(DW_OP_deref)), !dbg !9292
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9315
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9316
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !9317
  %30 = load i8, i8* %29, align 1, !dbg !9317
  %31 = zext i8 %30 to i32, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %31, metadata !9290, metadata !DIExpression()), !dbg !9292
  %32 = shl nuw nsw i32 %31, 8, !dbg !9319
  %33 = load i8, i8* %2, align 1, !dbg !9320
  call void @llvm.dbg.value(metadata i8 %33, metadata !9291, metadata !DIExpression()), !dbg !9292
  %34 = zext i8 %33 to i32, !dbg !9320
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9321
  %36 = bitcast i8* %35 to i8**, !dbg !9321
  %37 = load i8*, i8** %36, align 4, !dbg !9321
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !9322
  %39 = load i8, i8* %38, align 1, !dbg !9322
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !9323
  %41 = load i8, i8* %40, align 1, !dbg !9323
  %42 = or i8 %41, %39, !dbg !9324
  %43 = zext i8 %42 to i32, !dbg !9324
  %44 = xor i32 %43, -1, !dbg !9325
  %45 = and i32 %44, %34, !dbg !9326
  %46 = or i32 %45, %32, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %46, metadata !9290, metadata !DIExpression()), !dbg !9292
  %47 = load i16, i16* %17, align 2, !dbg !9328
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !9329
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9330
  br label %48, !dbg !9331

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9332
  ret i32 0, !dbg !9332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9333 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9335, metadata !DIExpression()), !dbg !9337
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9338
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !9339

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !9340
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9342
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !9343
  call void @llvm.dbg.value(metadata i8* %2, metadata !9336, metadata !DIExpression(DW_OP_deref)), !dbg !9337
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9344
  %10 = load i8, i8* %2, align 1, !dbg !9345
  call void @llvm.dbg.value(metadata i8 %10, metadata !9336, metadata !DIExpression()), !dbg !9337
  %11 = load i8*, i8** %5, align 4, !dbg !9346
  %12 = load i8, i8* %11, align 1, !dbg !9347
  %13 = and i8 %12, %10, !dbg !9348
  %14 = icmp eq i8 %13, 0, !dbg !9349
  br i1 %14, label %15, label %6, !dbg !9350, !llvm.loop !9351

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9353
  ret void, !dbg !9353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9354 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9356, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9357, metadata !DIExpression()), !dbg !9359
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9360
  %4 = load i8*, i8** %3, align 4, !dbg !9360
  call void @llvm.dbg.value(metadata i8* %4, metadata !9358, metadata !DIExpression()), !dbg !9359
  store i8 1, i8* %4, align 1, !dbg !9361
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9362
  store i8 2, i8* %5, align 1, !dbg !9363
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9364
  store i8 -128, i8* %6, align 1, !dbg !9365
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9366
  store i8 -128, i8* %7, align 1, !dbg !9367
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9368
  store i8 60, i8* %8, align 1, !dbg !9369
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9370
  store i8 -128, i8* %9, align 1, !dbg !9371
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9372
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9372
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !9373
  store i8 -97, i8* %12, align 1, !dbg !9374
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9375
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !9376
  store i8 53, i8* %14, align 1, !dbg !9377
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9378
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !9379
  store i8 53, i8* %16, align 1, !dbg !9380
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9381
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !9382
  store i8 5, i8* %18, align 1, !dbg !9383
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9384
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !9385
  store i8 1, i8* %20, align 1, !dbg !9386
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9387
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !9388
  store i8 117, i8* %22, align 1, !dbg !9389
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9390
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !9391
  store i8 122, i8* %24, align 1, !dbg !9392
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9393
  store i8 22, i8* %25, align 4, !dbg !9394
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9395
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !9396
  ret i32 0, !dbg !9397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !9398 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9400, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9401, metadata !DIExpression()), !dbg !9402
  ret i32 0, !dbg !9403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9404 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9406, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9407, metadata !DIExpression()), !dbg !9408
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !9409
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !9410
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !9411
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !9412
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !9413
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !9414
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !9415
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !9416
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !9417
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !9418
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !9419
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !9420
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !9421
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !9422
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !9423
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !9424
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !9425
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !9426
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !9427
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !9428
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !9429
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !9430
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !9431
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !9432
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !9433
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !9434
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !9435
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !9436
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !9437
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !9438
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !9439
  %19 = icmp ugt i32 %18, 16777216, !dbg !9441
  %20 = select i1 %19, i8 4, i8 3, !dbg !9442
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !9443
  store i8 %20, i8* %21, align 1, !dbg !9445
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9446
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9446
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !9447
  store i8 0, i8* %24, align 1, !dbg !9448
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9449
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !9450
  store i8 -81, i8* %26, align 1, !dbg !9451
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9452
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !9453
  store i8 -97, i8* %28, align 1, !dbg !9454
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9455
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !9456
  store i8 2, i8* %30, align 1, !dbg !9457
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9458
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !9459
  store i8 32, i8* %32, align 1, !dbg !9460
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9461
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !9462
  store i8 82, i8* %34, align 1, !dbg !9463
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9464
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !9465
  store i8 -40, i8* %36, align 1, !dbg !9466
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9467
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !9468
  store i8 -80, i8* %38, align 1, !dbg !9469
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9470
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !9471
  store i8 48, i8* %40, align 1, !dbg !9472
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9473
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !9474
  store i8 6, i8* %42, align 1, !dbg !9475
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9476
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !9477
  store i8 -71, i8* %44, align 1, !dbg !9478
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9479
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !9480
  store i8 -85, i8* %46, align 1, !dbg !9481
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9482
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !9483
  store i8 5, i8* %48, align 1, !dbg !9484
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !9485
  store i16 0, i16* %49, align 4, !dbg !9486
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !9487
  store %struct.anon.11* null, %struct.anon.11** %50, align 4, !dbg !9488
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !9489
  store %struct.anon.11* null, %struct.anon.11** %51, align 4, !dbg !9490
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !9491
  store i8 0, i8* %52, align 4, !dbg !9492
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9493
  store i8 5, i8* %53, align 4, !dbg !9494
  ret i32 0, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !9496 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9498, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8* %1, metadata !9499, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8* %1, metadata !9500, metadata !DIExpression()), !dbg !9516
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9517
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9513, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i32 0, metadata !9514, metadata !DIExpression()), !dbg !9516
  %4 = bitcast i8* %1 to i32*, !dbg !9518
  store i32 0, i32* %4, align 4, !dbg !9519
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !9514, metadata !DIExpression()), !dbg !9516
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9520
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !9521
  %9 = load i32, i32* %8, align 4, !dbg !9521
  %10 = icmp eq i32 %9, 0, !dbg !9522
  br i1 %10, label %34, label %11, !dbg !9523

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !9523

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9514, metadata !DIExpression()), !dbg !9516
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !9524
  store i32 %17, i32* %19, align 4, !dbg !9526
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9527
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !9528
  %22 = load i32, i32* %21, align 4, !dbg !9528
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9529
  store i32 %22, i32* %23, align 4, !dbg !9530
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9531
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !9532
  %26 = load i32, i32* %25, align 4, !dbg !9532
  %27 = load i32, i32* %4, align 4, !dbg !9533
  %28 = add i32 %27, %26, !dbg !9533
  store i32 %28, i32* %4, align 4, !dbg !9533
  %29 = add i32 %18, 1, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %29, metadata !9514, metadata !DIExpression()), !dbg !9516
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9520
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !9521
  %32 = load i32, i32* %31, align 4, !dbg !9521
  %33 = icmp eq i32 %32, 0, !dbg !9522
  br i1 %33, label %34, label %16, !dbg !9523, !llvm.loop !9535

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !9516
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9537
  %37 = bitcast i8* %36 to i32*, !dbg !9537
  store i32 %35, i32* %37, align 4, !dbg !9538
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9539
  %39 = bitcast i8* %38 to i16*, !dbg !9539
  store i16 512, i16* %39, align 4, !dbg !9540
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9541
  br label %40, !dbg !9542

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9543
  call void @llvm.dbg.value(metadata i32 %41, metadata !9515, metadata !DIExpression()), !dbg !9516
  %42 = icmp eq i32 %41, -121, !dbg !9545
  br i1 %42, label %40, label %43, !dbg !9546, !llvm.loop !9547

43:                                               ; preds = %40
  ret i32 0, !dbg !9549
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9552, metadata !DIExpression()), !dbg !9556
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9557
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9553, metadata !DIExpression()), !dbg !9556
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9558
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9559

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %8, metadata !9555, metadata !DIExpression()), !dbg !9556
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9562, !range !2812
  %10 = icmp eq i8 %9, 0, !dbg !9562
  br i1 %10, label %12, label %11, !dbg !9564

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !9565
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9567
  br label %12, !dbg !9568

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9569
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !9570
  %15 = load i8, i8* %14, align 1, !dbg !9570
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !9571
  call void @llvm.dbg.value(metadata i32 %16, metadata !9554, metadata !DIExpression()), !dbg !9556
  %17 = load i8*, i8** %6, align 4, !dbg !9572
  %18 = load i8, i8* %17, align 1, !dbg !9574
  %19 = zext i8 %18 to i32, !dbg !9574
  %20 = and i32 %16, %19, !dbg !9575
  %21 = icmp eq i32 %20, 0, !dbg !9576
  br i1 %21, label %22, label %25, !dbg !9577

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9578
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9580
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9581
  %24 = bitcast i8* %23 to i8**, !dbg !9581
  store i8* null, i8** %24, align 4, !dbg !9582
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9583
  ret i32 0, !dbg !9584

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9585
  br label %7, !dbg !9559, !llvm.loop !9587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9589 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9591, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %1, metadata !9592, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 0, metadata !9593, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 1, metadata !9597, metadata !DIExpression()), !dbg !9605
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9606
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9598, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 0, metadata !9599, metadata !DIExpression()), !dbg !9605
  %4 = bitcast i8* %0 to i32*, !dbg !9607
  %5 = load i32, i32* %4, align 4, !dbg !9607
  %6 = xor i32 %5, -1, !dbg !9607
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9607
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9607
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9607
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9607
  %11 = icmp eq i32 %6, %10, !dbg !9607
  br i1 %11, label %13, label %12, !dbg !9610

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9611
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9611
  unreachable, !dbg !9611

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9613
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9614
  store i8 2, i8* %14, align 4, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %19, metadata !9599, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %1, metadata !9592, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9605
  br label %15, !dbg !9616

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %16, metadata !9593, metadata !DIExpression()), !dbg !9605
  %17 = icmp eq i32 %16, -121, !dbg !9619
  br i1 %17, label %15, label %18, !dbg !9620, !llvm.loop !9621

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9623
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9624
  %21 = bitcast i8* %20 to i8**, !dbg !9624
  %22 = load i8*, i8** %21, align 4, !dbg !9624
  %23 = ptrtoint i8* %22 to i32, !dbg !9625
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %24, metadata !9594, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %24, metadata !9595, metadata !DIExpression()), !dbg !9605
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9627
  %26 = bitcast i8* %25 to i16*, !dbg !9627
  %27 = load i16, i16* %26, align 2, !dbg !9627
  %28 = zext i16 %27 to i32, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %28, metadata !9600, metadata !DIExpression()), !dbg !9629
  %29 = lshr i32 %24, 10, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %29, metadata !9603, metadata !DIExpression()), !dbg !9629
  %30 = and i32 %29, %28, !dbg !9631
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9633
  %33 = icmp eq i32 %32, 0, !dbg !9633
  call void @llvm.dbg.value(metadata i32 0, metadata !9604, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 %29, metadata !9603, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 %28, metadata !9600, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 1, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %24, metadata !9595, metadata !DIExpression()), !dbg !9605
  br i1 %33, label %34, label %51, !dbg !9633

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9604, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 %36, metadata !9603, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 %37, metadata !9600, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 %38, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %39, metadata !9595, metadata !DIExpression()), !dbg !9605
  %40 = and i32 %37, 1, !dbg !9634
  %41 = icmp eq i32 %40, 0, !dbg !9634
  %42 = add i32 %35, 10, !dbg !9640
  %43 = shl nuw i32 1, %42, !dbg !9640
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9640
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %45, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %44, metadata !9595, metadata !DIExpression()), !dbg !9605
  %46 = lshr i32 %37, 1, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %46, metadata !9600, metadata !DIExpression()), !dbg !9629
  %47 = lshr i32 %36, 1, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %47, metadata !9603, metadata !DIExpression()), !dbg !9629
  %48 = add i32 %35, 1, !dbg !9643
  call void @llvm.dbg.value(metadata i32 %48, metadata !9604, metadata !DIExpression()), !dbg !9629
  %49 = and i32 %36, 2, !dbg !9644
  %50 = icmp eq i32 %49, 0, !dbg !9644
  br i1 %50, label %34, label %51, !dbg !9645, !llvm.loop !9646

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9648
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9649
  call void @llvm.dbg.value(metadata i32 %53, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %52, metadata !9595, metadata !DIExpression()), !dbg !9605
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9650

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9651
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9651
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9651
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9653
  br label %70, !dbg !9654

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9655
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9655
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9655
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9656
  br label %70, !dbg !9657

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9658
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9658
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9658
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9659
  br label %70, !dbg !9660

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !9661
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9661
  unreachable, !dbg !9661

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9665
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9665
  store i8 %73, i8* %74, align 1, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %53, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %52, metadata !9595, metadata !DIExpression()), !dbg !9605
  %75 = trunc i32 %19 to i8, !dbg !9666
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9666

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9667
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9667
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9667
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9669
  br label %91, !dbg !9670

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9671
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9671
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9671
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9672
  br label %91, !dbg !9673

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9674
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9674
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9674
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9675
  br label %91, !dbg !9676

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9677
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9677
  store i8 %94, i8* %95, align 1, !dbg !9677
  br label %96, !dbg !9678

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9596, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %53, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %16, metadata !9593, metadata !DIExpression()), !dbg !9605
  %97 = icmp eq i32 %53, 0, !dbg !9678
  br i1 %97, label %111, label %98, !dbg !9681

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9682
  call void @llvm.dbg.value(metadata i8* %99, metadata !9596, metadata !DIExpression()), !dbg !9605
  %100 = ptrtoint i8* %99 to i32, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %100, metadata !9596, metadata !DIExpression()), !dbg !9605
  br label %101, !dbg !9681

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9597, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %103, metadata !9596, metadata !DIExpression()), !dbg !9605
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !9684
  br label %104, !dbg !9686

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %105, metadata !9593, metadata !DIExpression()), !dbg !9605
  %106 = icmp eq i32 %105, -121, !dbg !9689
  br i1 %106, label %104, label %107, !dbg !9691, !llvm.loop !9692

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %108, metadata !9597, metadata !DIExpression()), !dbg !9605
  %109 = add i32 %103, %52, !dbg !9695
  call void @llvm.dbg.value(metadata i32 %109, metadata !9596, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %105, metadata !9593, metadata !DIExpression()), !dbg !9605
  %110 = icmp eq i32 %108, 0, !dbg !9678
  br i1 %110, label %111, label %101, !dbg !9681, !llvm.loop !9696

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9605
  store i8 0, i8* %14, align 4, !dbg !9698
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9699
  ret i32 %112, !dbg !9700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9701 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9703, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i8* %1, metadata !9704, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i8* %2, metadata !9705, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %3, metadata !9706, metadata !DIExpression()), !dbg !9720
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9721
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9707, metadata !DIExpression()), !dbg !9720
  %8 = ptrtoint i8* %1 to i32, !dbg !9722
  call void @llvm.dbg.value(metadata i32 %8, metadata !9709, metadata !DIExpression()), !dbg !9720
  %9 = bitcast i8** %5 to i8*, !dbg !9723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9723
  call void @llvm.dbg.value(metadata i8* %2, metadata !9710, metadata !DIExpression()), !dbg !9720
  store i8* %2, i8** %5, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata i32 0, metadata !9712, metadata !DIExpression()), !dbg !9720
  %10 = bitcast i32* %6 to i8*, !dbg !9725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9725
  %11 = bitcast i8* %0 to i32*, !dbg !9726
  %12 = load i32, i32* %11, align 4, !dbg !9726
  %13 = xor i32 %12, -1, !dbg !9726
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9726
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9726
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9726
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !9726
  %18 = icmp eq i32 %13, %17, !dbg !9726
  br i1 %18, label %20, label %19, !dbg !9729

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !9730
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9730
  unreachable, !dbg !9730

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9732
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9733
  store i8 1, i8* %21, align 4, !dbg !9734
  br label %22, !dbg !9735

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %23, metadata !9712, metadata !DIExpression()), !dbg !9720
  %24 = icmp eq i32 %23, -121, !dbg !9738
  br i1 %24, label %22, label %25, !dbg !9739, !llvm.loop !9740

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9742
  br i1 %26, label %104, label %27, !dbg !9743

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9743

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !9744
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !9720
  call void @llvm.dbg.value(metadata i32 %38, metadata !9709, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %37, metadata !9706, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i8* %36, metadata !9710, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i8* %36, metadata !9711, metadata !DIExpression()), !dbg !9720
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9745
  %40 = shl i32 %39, 1, !dbg !9746
  %41 = add i32 %40, -1, !dbg !9747
  %42 = and i32 %41, %38, !dbg !9748
  %43 = sub i32 %40, %42, !dbg !9749
  %44 = icmp ugt i32 %37, %43, !dbg !9750
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %45, metadata !9713, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 %45, metadata !9714, metadata !DIExpression()), !dbg !9720
  store i32 %45, i32* %6, align 4, !dbg !9752
  call void @llvm.dbg.value(metadata i8* %36, metadata !9710, metadata !DIExpression()), !dbg !9720
  %46 = ptrtoint i8* %36 to i32, !dbg !9753
  %47 = and i32 %46, 134217728, !dbg !9754
  %48 = icmp eq i32 %47, 0, !dbg !9754
  br i1 %48, label %58, label %49, !dbg !9755

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9716, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 %45, metadata !9714, metadata !DIExpression()), !dbg !9720
  %50 = icmp eq i32 %45, 0, !dbg !9757
  br i1 %50, label %58, label %51, !dbg !9760

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9716, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i8* %36, metadata !9710, metadata !DIExpression()), !dbg !9720
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9761
  %54 = load i8, i8* %53, align 1, !dbg !9761
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9763
  store i8 %54, i8* %55, align 1, !dbg !9764
  %56 = add nuw i32 %52, 1, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %56, metadata !9716, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 %45, metadata !9714, metadata !DIExpression()), !dbg !9720
  %57 = icmp eq i32 %56, %45, !dbg !9757
  br i1 %57, label %58, label %51, !dbg !9760, !llvm.loop !9766

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9768
  call void @llvm.dbg.value(metadata i8* %59, metadata !9711, metadata !DIExpression()), !dbg !9720
  %60 = load i32, i32* %29, align 4, !dbg !9769
  %61 = and i32 %60, 16, !dbg !9771
  %62 = icmp eq i32 %61, 0, !dbg !9771
  br i1 %62, label %63, label %64, !dbg !9772

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !9773
  br label %64, !dbg !9775

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9776
  %66 = icmp eq i8 %65, 4, !dbg !9778
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9779
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9779
  %69 = load i8, i8* %68, align 1, !dbg !9779
  %70 = zext i8 %69 to i32, !dbg !9779
  br i1 %66, label %71, label %75, !dbg !9780

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9710, metadata !DIExpression(DW_OP_deref)), !dbg !9720
  call void @llvm.dbg.value(metadata i32* %6, metadata !9714, metadata !DIExpression(DW_OP_deref)), !dbg !9720
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %72, metadata !9715, metadata !DIExpression()), !dbg !9720
  %73 = load i8*, i8** %5, align 4, !dbg !9783
  call void @llvm.dbg.value(metadata i8* %73, metadata !9710, metadata !DIExpression()), !dbg !9720
  %74 = load i32, i32* %6, align 4, !dbg !9784
  call void @llvm.dbg.value(metadata i32 %74, metadata !9714, metadata !DIExpression()), !dbg !9720
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !9785
  br label %79, !dbg !9786

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %76, metadata !9715, metadata !DIExpression()), !dbg !9720
  %77 = load i8*, i8** %5, align 4, !dbg !9789
  call void @llvm.dbg.value(metadata i8* %77, metadata !9710, metadata !DIExpression()), !dbg !9720
  %78 = load i32, i32* %6, align 4, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %78, metadata !9714, metadata !DIExpression()), !dbg !9720
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !9791
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9779
  call void @llvm.dbg.value(metadata i32 %80, metadata !9715, metadata !DIExpression()), !dbg !9720
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %81, metadata !9708, metadata !DIExpression()), !dbg !9720
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9793
  %82 = load i8, i8* %30, align 1, !dbg !9794
  %83 = zext i8 %82 to i32, !dbg !9795
  %84 = add i32 %45, 1, !dbg !9796
  %85 = add i32 %84, %83, !dbg !9797
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9798
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9799
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9800
  %86 = load i16, i16* %34, align 2, !dbg !9801
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !9802
  %87 = load i16, i16* %34, align 2, !dbg !9803
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !9804
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !9805
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !9806

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !9807
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !9809
  call void @llvm.dbg.value(metadata i32 %94, metadata !9712, metadata !DIExpression()), !dbg !9720
  %95 = icmp eq i32 %94, 0, !dbg !9810
  br i1 %95, label %92, label %96, !dbg !9811, !llvm.loop !9812

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !9814
  call void @llvm.dbg.value(metadata i32 %97, metadata !9714, metadata !DIExpression()), !dbg !9720
  %98 = load i8*, i8** %5, align 4, !dbg !9815
  call void @llvm.dbg.value(metadata i8* %98, metadata !9710, metadata !DIExpression()), !dbg !9720
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !9815
  call void @llvm.dbg.value(metadata i8* %99, metadata !9710, metadata !DIExpression()), !dbg !9720
  store i8* %99, i8** %5, align 4, !dbg !9815
  %100 = sub i32 %37, %45, !dbg !9816
  call void @llvm.dbg.value(metadata i32 %100, metadata !9706, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32 undef, metadata !9709, metadata !DIExpression()), !dbg !9720
  %101 = icmp eq i32 %94, 1, !dbg !9817
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !9819
  br i1 %103, label %35, label %104, !dbg !9819, !llvm.loop !9820

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !9720
  call void @llvm.dbg.value(metadata i32 %105, metadata !9712, metadata !DIExpression()), !dbg !9720
  store i8 0, i8* %21, align 4, !dbg !9822
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9823
  %106 = icmp eq i32 %105, 1, !dbg !9824
  %107 = select i1 %106, i32 0, i32 %105, !dbg !9720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9826
  ret i32 %107, !dbg !9826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !9827 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9829, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 undef, metadata !9830, metadata !DIExpression()), !dbg !9831
  ret i32 -12, !dbg !9832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9835, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i32 undef, metadata !9836, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i32 0, metadata !9838, metadata !DIExpression()), !dbg !9845
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9846
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9839, metadata !DIExpression()), !dbg !9845
  %4 = bitcast i8* %0 to i32*, !dbg !9847
  %5 = load i32, i32* %4, align 4, !dbg !9847
  %6 = xor i32 %5, -1, !dbg !9847
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9847
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9847
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9847
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9847
  %11 = icmp eq i32 %6, %10, !dbg !9847
  br i1 %11, label %13, label %12, !dbg !9850

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9851
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9851
  unreachable, !dbg !9851

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9853
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9853
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9853
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9854
  %18 = load i8, i8* %17, align 1, !dbg !9854
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %19, metadata !9840, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9845
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9856
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9857
  %22 = load i8, i8* %21, align 1, !dbg !9857
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %23, metadata !9841, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9845
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %24, metadata !9838, metadata !DIExpression()), !dbg !9845
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9860
  %26 = bitcast i8* %25 to i8**, !dbg !9860
  %27 = load i8*, i8** %26, align 4, !dbg !9860
  %28 = load i8, i8* %27, align 1, !dbg !9861
  %29 = zext i8 %28 to i32, !dbg !9861
  %30 = and i32 %19, %29, !dbg !9862
  %31 = icmp eq i32 %30, 0, !dbg !9863
  br i1 %31, label %32, label %62, !dbg !9864

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9841, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9845
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9865
  %34 = load i8, i8* %33, align 1, !dbg !9865
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9866
  %36 = load i8, i8* %35, align 1, !dbg !9866
  %37 = or i8 %36, %34, !dbg !9867
  call void @llvm.dbg.value(metadata i8 %37, metadata !9842, metadata !DIExpression()), !dbg !9868
  %38 = zext i8 %37 to i32, !dbg !9869
  %39 = and i32 %23, %38, !dbg !9871
  %40 = icmp eq i32 %39, 0, !dbg !9872
  br i1 %40, label %41, label %46, !dbg !9873

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9874
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9875
  br i1 %45, label %51, label %46, !dbg !9875

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9876, !range !2812
  %48 = icmp eq i8 %47, 0, !dbg !9876
  br i1 %48, label %49, label %50, !dbg !9880

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !9881
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9881
  unreachable, !dbg !9881

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9883
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9884
  call void @llvm.dbg.value(metadata i32 -121, metadata !9837, metadata !DIExpression()), !dbg !9845
  br label %62, !dbg !9885

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9886
  %53 = bitcast i8* %52 to i32*, !dbg !9886
  %54 = load i32, i32* %53, align 4, !dbg !9886
  %55 = and i32 %54, 2, !dbg !9889
  %56 = icmp eq i32 %55, 0, !dbg !9889
  br i1 %56, label %63, label %57, !dbg !9890

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9891
  %59 = bitcast i8* %58 to i16*, !dbg !9891
  %60 = load i16, i16* %59, align 2, !dbg !9891
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !9893
  %61 = load i16, i16* %59, align 2, !dbg !9894
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !9895
  br label %63, !dbg !9896

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9837, metadata !DIExpression()), !dbg !9845
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9897
  br label %65, !dbg !9898

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9899
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9900
  call void @llvm.dbg.value(metadata i32 0, metadata !9837, metadata !DIExpression()), !dbg !9845
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9897
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !9901
  call void @llvm.dbg.value(metadata i32 %64, metadata !9837, metadata !DIExpression()), !dbg !9845
  br label %65, !dbg !9904

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9845
  call void @llvm.dbg.value(metadata i32 %66, metadata !9837, metadata !DIExpression()), !dbg !9845
  ret i32 %66, !dbg !9905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9906 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9908, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 undef, metadata !9909, metadata !DIExpression()), !dbg !9913
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9914
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9910, metadata !DIExpression()), !dbg !9913
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %4, metadata !9912, metadata !DIExpression()), !dbg !9913
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !9916
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !9917

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9918
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !9920
  %12 = load i8, i8* %11, align 1, !dbg !9920
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !9921
  call void @llvm.dbg.value(metadata i32 %13, metadata !9911, metadata !DIExpression()), !dbg !9913
  %14 = load i8*, i8** %8, align 4, !dbg !9922
  %15 = load i8, i8* %14, align 1, !dbg !9924
  %16 = zext i8 %15 to i32, !dbg !9924
  %17 = and i32 %13, %16, !dbg !9925
  %18 = icmp eq i32 %17, 0, !dbg !9926
  br i1 %18, label %19, label %9, !dbg !9927, !llvm.loop !9928

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9930
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9931
  ret i32 0, !dbg !9932
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9933 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9935, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 undef, metadata !9936, metadata !DIExpression()), !dbg !9938
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9939
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9937, metadata !DIExpression()), !dbg !9938
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9940
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !9941
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9942
  ret i32 0, !dbg !9943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !9944 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9946, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* undef, metadata !9947, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i32 undef, metadata !9948, metadata !DIExpression()), !dbg !9949
  ret i32 0, !dbg !9950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !9951 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9953, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 %1, metadata !9954, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i8* undef, metadata !9955, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i8* %0, metadata !9956, metadata !DIExpression()), !dbg !9957
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !9958

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9956, metadata !DIExpression()), !dbg !9957
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !9959
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !9959
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !9959
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !9962
  br label %21, !dbg !9963

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9964
  %11 = load i8, i8* %10, align 1, !dbg !9968
  %12 = icmp eq i8 %11, -62, !dbg !9969
  br i1 %12, label %13, label %21, !dbg !9970

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9971
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9971
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9971
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !9972
  %18 = load i32, i32* %17, align 4, !dbg !9972
  %19 = icmp eq i32 %18, 262144, !dbg !9973
  br i1 %19, label %22, label %21, !dbg !9974

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !9975
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9975
  unreachable, !dbg !9975

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !9980

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !9957
  ret i32 %23, !dbg !9981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9984, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata i8* %0, metadata !9985, metadata !DIExpression()), !dbg !9987
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9988
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !9988
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !9988
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !9990
  %6 = load i8, i8* %5, align 1, !dbg !9990
  %7 = icmp eq i8 %6, 0, !dbg !9991
  br i1 %7, label %19, label %8, !dbg !9992

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9993
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !9985, metadata !DIExpression()), !dbg !9987
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !9994
  call void @llvm.dbg.value(metadata i32 %10, metadata !9986, metadata !DIExpression()), !dbg !9987
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9996
  %12 = bitcast i8* %11 to i8**, !dbg !9996
  %13 = load i8*, i8** %12, align 4, !dbg !9996
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !9998
  %15 = load i8, i8* %14, align 1, !dbg !9998
  %16 = zext i8 %15 to i32, !dbg !9998
  %17 = and i32 %10, %16, !dbg !9999
  %18 = icmp eq i32 %17, 0, !dbg !9999
  br i1 %18, label %19, label %20, !dbg !10000

19:                                               ; preds = %8, %1
  br label %20, !dbg !10001

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !9987
  ret i32 %21, !dbg !10002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10007, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i32 %1, metadata !10008, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i8 %2, metadata !10009, metadata !DIExpression()), !dbg !10015
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10016
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !10011, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i32 0, metadata !10012, metadata !DIExpression()), !dbg !10015
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10017
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !10017
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10017
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !10018
  %9 = load i8, i8* %8, align 1, !dbg !10018
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !10019
  call void @llvm.dbg.value(metadata i32 %10, metadata !10014, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10015
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10020, !range !2812
  %12 = icmp eq i8 %11, 0, !dbg !10020
  br i1 %12, label %18, label %13, !dbg !10022

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10023, !range !2812
  %15 = icmp eq i8 %14, 0, !dbg !10023
  br i1 %15, label %16, label %17, !dbg !10027

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !10028
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !10028
  unreachable, !dbg !10028

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !10030
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10031
  br label %42, !dbg !10032

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !10014, metadata !DIExpression()), !dbg !10015
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10033
  %20 = bitcast i8* %19 to i8**, !dbg !10033
  %21 = load i8*, i8** %20, align 4, !dbg !10033
  %22 = load i8, i8* %21, align 1, !dbg !10035
  %23 = zext i8 %22 to i32, !dbg !10035
  %24 = and i32 %10, %23, !dbg !10036
  %25 = icmp eq i32 %24, 0, !dbg !10037
  br i1 %25, label %26, label %42, !dbg !10038

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %27, metadata !10010, metadata !DIExpression()), !dbg !10015
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10041
  %28 = inttoptr i32 %1 to i8*, !dbg !10042
  %29 = load volatile i8, i8* %28, align 1, !dbg !10043
  call void @llvm.dbg.value(metadata i8 %29, metadata !10013, metadata !DIExpression()), !dbg !10015
  %30 = icmp eq i8 %29, %2, !dbg !10044
  br i1 %30, label %39, label %31, !dbg !10046

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10012, metadata !DIExpression()), !dbg !10015
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !10047
  br i1 %32, label %33, label %38, !dbg !10050

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !10051
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !10053
  %36 = load volatile i8, i8* %28, align 1, !dbg !10054
  %37 = icmp eq i8 %36, %2, !dbg !10056
  br i1 %37, label %39, label %38, !dbg !10057

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !10012, metadata !DIExpression()), !dbg !10015
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10058
  br label %42, !dbg !10059

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10012, metadata !DIExpression()), !dbg !10015
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10058
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !10060
  %41 = icmp eq i32 %40, 0, !dbg !10063
  br i1 %41, label %42, label %44, !dbg !10064

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !10065

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !10015
  ret i32 %45, !dbg !10066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10067 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10071, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10072, metadata !DIExpression()), !dbg !10074
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !10075
  %4 = load i32, i32* %3, align 4, !dbg !10075
  %5 = and i32 %4, 16, !dbg !10077
  %6 = icmp eq i32 %5, 0, !dbg !10077
  br i1 %6, label %7, label %8, !dbg !10078

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !10079
  br label %8, !dbg !10081

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10082
  call void @llvm.dbg.value(metadata i32 %9, metadata !10073, metadata !DIExpression()), !dbg !10074
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !10083
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10084
  %11 = load i16, i16* %10, align 2, !dbg !10084
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10085
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !10085
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !10086
  %15 = load i8, i8* %14, align 1, !dbg !10086
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !10087
  %17 = load i8, i8* %16, align 1, !dbg !10087
  %18 = zext i8 %17 to i32, !dbg !10088
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !10089
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !10090
  ret void, !dbg !10091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10092 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10094, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10095, metadata !DIExpression()), !dbg !10097
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10098
  %4 = load i8, i8* %3, align 1, !dbg !10098
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !10099

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10100
  %7 = load i32, i32* %6, align 4, !dbg !10102
  %8 = or i32 %7, 4, !dbg !10102
  store i32 %8, i32* %6, align 4, !dbg !10102
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10103
  call void @llvm.dbg.value(metadata i32 0, metadata !10096, metadata !DIExpression()), !dbg !10097
  br label %18, !dbg !10104

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10105
  %12 = load i32, i32* %11, align 4, !dbg !10106
  %13 = or i32 %12, 2, !dbg !10106
  store i32 %13, i32* %11, align 4, !dbg !10106
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10107
  call void @llvm.dbg.value(metadata i32 0, metadata !10096, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.value(metadata i32 0, metadata !10096, metadata !DIExpression()), !dbg !10097
  br label %18, !dbg !10108

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10109
  call void @llvm.dbg.value(metadata i32 0, metadata !10096, metadata !DIExpression()), !dbg !10097
  br label %18, !dbg !10110

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !10096, metadata !DIExpression()), !dbg !10097
  tail call void @Flash_ReturnReady() #21, !dbg !10111
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !10111
  unreachable, !dbg !10111

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !10096, metadata !DIExpression()), !dbg !10097
  ret i32 0, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10120, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10121, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %2, metadata !10122, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %3, metadata !10123, metadata !DIExpression()), !dbg !10125
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !10126
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !10128
  br i1 %7, label %33, label %8, !dbg !10128

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10129
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10129
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !10131
  br i1 %11, label %33, label %12, !dbg !10132

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10133
  %14 = load i8*, i8** %13, align 4, !dbg !10133
  %15 = icmp eq i8* %14, null, !dbg !10134
  br i1 %15, label %33, label %16, !dbg !10135

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !10136
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !10137
  store i8* %17, i8** %18, align 4, !dbg !10138
  %19 = trunc i32 %3 to i16, !dbg !10139
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !10140
  store i16 %19, i16* %20, align 2, !dbg !10141
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10142
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10143
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !10144
  store i8 -81, i8* %23, align 1, !dbg !10145
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10146
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10147
  %25 = load i8, i8* %24, align 1, !dbg !10148
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !10150

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !10151
  br i1 %27, label %31, label %28, !dbg !10152

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10153
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !10155
  store i8 -97, i8* %30, align 1, !dbg !10156
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10157
  br label %31, !dbg !10158

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10159
  call void @llvm.dbg.value(metadata i32 0, metadata !10124, metadata !DIExpression()), !dbg !10125
  br label %33, !dbg !10160

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !10125
  ret i32 %34, !dbg !10161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10162 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10166, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i8* %1, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10170
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10171
  %5 = and i32 %4, 1, !dbg !10171
  %6 = icmp eq i32 %5, 0, !dbg !10173
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10174
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !10174
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !10175
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !10175
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !10175
  %12 = load i8, i8* %11, align 1, !dbg !10174
  store i8 %12, i8* %3, align 1, !dbg !10174
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10176
  %14 = load i16, i16* %13, align 2, !dbg !10176
  call void @llvm.dbg.value(metadata i8* %3, metadata !10168, metadata !DIExpression(DW_OP_deref)), !dbg !10169
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !10177
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10178
  ret void, !dbg !10178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !10179 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10183, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i8* %1, metadata !10184, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i8* %2, metadata !10185, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i16 %3, metadata !10186, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i16 %4, metadata !10187, metadata !DIExpression()), !dbg !10189
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10190
  call void @llvm.dbg.value(metadata i32 %6, metadata !10188, metadata !DIExpression()), !dbg !10189
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !10191
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !10192
  ret void, !dbg !10193
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10196, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10199, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 0, metadata !10197, metadata !DIExpression()), !dbg !10202
  br label %6, !dbg !10203

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %3, metadata !10197, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %8, metadata !10197, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10202
  %4 = icmp ult i32 %8, 4, !dbg !10207
  %5 = icmp eq i32 %3, 5, !dbg !10207
  br i1 %5, label %26, label %6, !dbg !10203, !llvm.loop !10208

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10197, metadata !DIExpression()), !dbg !10202
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10198, metadata !DIExpression()), !dbg !10202
  %12 = icmp eq i8 %10, 0, !dbg !10210
  br i1 %12, label %23, label %13, !dbg !10214

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10198, metadata !DIExpression()), !dbg !10202
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10215
  %16 = load i8, i8* %15, align 1, !dbg !10215
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10218
  %18 = load i8, i8* %17, align 1, !dbg !10218
  %19 = icmp eq i8 %16, %18, !dbg !10219
  br i1 %19, label %20, label %23, !dbg !10220

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10221
  call void @llvm.dbg.value(metadata i32 %21, metadata !10198, metadata !DIExpression()), !dbg !10202
  %22 = icmp eq i32 %21, %11, !dbg !10210
  br i1 %22, label %26, label %13, !dbg !10214, !llvm.loop !10222

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10224
  %25 = icmp eq i32 %24, %11, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %8, metadata !10197, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10202
  br i1 %25, label %26, label %2, !dbg !10227

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10207
  ret i1 %27, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10229 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10241
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10241
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10233, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10240, metadata !DIExpression()), !dbg !10243
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10244
  %4 = icmp sgt i16 %3, -1, !dbg !10246
  br i1 %4, label %34, label %5, !dbg !10247

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10248
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !10249
  call void @llvm.dbg.value(metadata i32 0, metadata !10231, metadata !DIExpression()), !dbg !10243
  br label %7, !dbg !10250

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10231, metadata !DIExpression()), !dbg !10243
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10232, metadata !DIExpression()), !dbg !10243
  %12 = icmp eq i8 %10, 0, !dbg !10252
  br i1 %12, label %24, label %13, !dbg !10257

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10232, metadata !DIExpression()), !dbg !10243
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10258
  %16 = load i8, i8* %15, align 1, !dbg !10258
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10261
  %18 = load i16, i16* %17, align 2, !dbg !10261
  %19 = zext i8 %16 to i16, !dbg !10262
  %20 = icmp eq i16 %18, %19, !dbg !10262
  br i1 %20, label %21, label %24, !dbg !10263

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %22, metadata !10232, metadata !DIExpression()), !dbg !10243
  %23 = icmp eq i32 %22, %11, !dbg !10252
  br i1 %23, label %27, label %13, !dbg !10257, !llvm.loop !10265

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10267
  %26 = icmp eq i32 %25, %11, !dbg !10268
  br i1 %26, label %27, label %29, !dbg !10270

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10271
  store i16 %28, i16* @cmem_index, align 2, !dbg !10273
  br label %34, !dbg !10274

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %30, metadata !10231, metadata !DIExpression()), !dbg !10243
  %31 = icmp eq i32 %30, 5, !dbg !10276
  br i1 %31, label %32, label %7, !dbg !10250, !llvm.loop !10277

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10279
  br label %34, !dbg !10279

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10280
  ret i32 %36, !dbg !10280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !10281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10285, metadata !DIExpression()), !dbg !10286
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !10287
  ret %struct.CMEMEntryID* %2, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10289 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10293, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i8* undef, metadata !10294, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i16* %2, metadata !10295, metadata !DIExpression()), !dbg !10300
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10301
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10301
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10301
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10298, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i8 -81, metadata !10296, metadata !DIExpression()), !dbg !10303
  store i8 -81, i8* %4, align 1, !dbg !10304
  call void @llvm.dbg.value(metadata i8* %4, metadata !10296, metadata !DIExpression(DW_OP_deref)), !dbg !10303
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10305
  %7 = load i8, i8* %6, align 1, !dbg !10306
  %8 = add i8 %7, 1, !dbg !10308
  %9 = icmp ult i8 %8, 2, !dbg !10308
  br i1 %9, label %12, label %10, !dbg !10308

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !10309
  br i1 %11, label %13, label %12, !dbg !10310

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10296, metadata !DIExpression()), !dbg !10303
  store i8 -97, i8* %4, align 1, !dbg !10311
  call void @llvm.dbg.value(metadata i8* %4, metadata !10296, metadata !DIExpression(DW_OP_deref)), !dbg !10303
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10313
  br label %13, !dbg !10314

13:                                               ; preds = %12, %10
  br label %14, !dbg !10315

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10299, metadata !DIExpression()), !dbg !10303
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !10317
  %17 = load i8, i8* %16, align 1, !dbg !10317
  %18 = zext i8 %17 to i16, !dbg !10317
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !10320
  store i16 %18, i16* %19, align 2, !dbg !10321
  %20 = add nuw nsw i32 %15, 1, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %20, metadata !10299, metadata !DIExpression()), !dbg !10303
  %21 = icmp eq i32 %20, 3, !dbg !10323
  br i1 %21, label %22, label %14, !dbg !10315, !llvm.loop !10324

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10326
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10326
  ret void, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !10328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10330, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10333, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i32 0, metadata !10331, metadata !DIExpression()), !dbg !10334
  br label %6, !dbg !10335

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %3, metadata !10331, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i32 %8, metadata !10331, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10334
  %4 = icmp ult i32 %8, 4, !dbg !10339
  %5 = icmp eq i32 %3, 5, !dbg !10339
  br i1 %5, label %26, label %6, !dbg !10335, !llvm.loop !10340

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10331, metadata !DIExpression()), !dbg !10334
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10332, metadata !DIExpression()), !dbg !10334
  %12 = icmp eq i8 %10, 0, !dbg !10342
  br i1 %12, label %23, label %13, !dbg !10346

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10332, metadata !DIExpression()), !dbg !10334
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10347
  %16 = load i8, i8* %15, align 1, !dbg !10347
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10350
  %18 = load i8, i8* %17, align 1, !dbg !10350
  %19 = icmp eq i8 %16, %18, !dbg !10351
  br i1 %19, label %20, label %23, !dbg !10352

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10353
  call void @llvm.dbg.value(metadata i32 %21, metadata !10332, metadata !DIExpression()), !dbg !10334
  %22 = icmp eq i32 %21, %11, !dbg !10342
  br i1 %22, label %26, label %13, !dbg !10346, !llvm.loop !10354

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10356
  %25 = icmp eq i32 %24, %11, !dbg !10357
  call void @llvm.dbg.value(metadata i32 %8, metadata !10331, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10334
  br i1 %25, label %26, label %2, !dbg !10359

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10339
  ret i1 %27, !dbg !10360
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !10361 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10367
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10367
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10365, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10366, metadata !DIExpression()), !dbg !10369
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10370
  %4 = icmp sgt i16 %3, -1, !dbg !10372
  br i1 %4, label %34, label %5, !dbg !10373

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10374
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !10375
  call void @llvm.dbg.value(metadata i32 0, metadata !10363, metadata !DIExpression()), !dbg !10369
  br label %7, !dbg !10376

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10363, metadata !DIExpression()), !dbg !10369
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10364, metadata !DIExpression()), !dbg !10369
  %12 = icmp eq i8 %10, 0, !dbg !10378
  br i1 %12, label %24, label %13, !dbg !10383

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10364, metadata !DIExpression()), !dbg !10369
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10384
  %16 = load i8, i8* %15, align 1, !dbg !10384
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10387
  %18 = load i16, i16* %17, align 2, !dbg !10387
  %19 = zext i8 %16 to i16, !dbg !10388
  %20 = icmp eq i16 %18, %19, !dbg !10388
  br i1 %20, label %21, label %24, !dbg !10389

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10390
  call void @llvm.dbg.value(metadata i32 %22, metadata !10364, metadata !DIExpression()), !dbg !10369
  %23 = icmp eq i32 %22, %11, !dbg !10378
  br i1 %23, label %27, label %13, !dbg !10383, !llvm.loop !10391

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10393
  %26 = icmp eq i32 %25, %11, !dbg !10394
  br i1 %26, label %27, label %29, !dbg !10396

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10397
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !10399
  br label %34, !dbg !10400

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %30, metadata !10363, metadata !DIExpression()), !dbg !10369
  %31 = icmp eq i32 %30, 5, !dbg !10402
  br i1 %31, label %32, label %7, !dbg !10376, !llvm.loop !10403

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10405
  br label %34, !dbg !10405

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10406
  ret i32 %36, !dbg !10406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10407 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10415, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i16* %1, metadata !10416, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i16* %2, metadata !10417, metadata !DIExpression()), !dbg !10423
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10424
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10424
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10424
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10421, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i8 -81, metadata !10419, metadata !DIExpression()), !dbg !10426
  store i8 -81, i8* %4, align 1, !dbg !10427
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %7, metadata !10418, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i8* %4, metadata !10419, metadata !DIExpression(DW_OP_deref)), !dbg !10426
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10429
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !10430
  %8 = load i8, i8* %6, align 1, !dbg !10431
  %9 = add i8 %8, 1, !dbg !10433
  %10 = icmp ult i8 %9, 2, !dbg !10433
  br i1 %10, label %13, label %11, !dbg !10433

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !10434
  br i1 %12, label %15, label %13, !dbg !10435

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10419, metadata !DIExpression()), !dbg !10426
  store i8 -97, i8* %4, align 1, !dbg !10436
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %14, metadata !10418, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i8* %4, metadata !10419, metadata !DIExpression(DW_OP_deref)), !dbg !10426
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10439
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !10440
  br label %15, !dbg !10441

15:                                               ; preds = %13, %11
  br label %16, !dbg !10442

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10422, metadata !DIExpression()), !dbg !10426
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !10444
  %19 = load i8, i8* %18, align 1, !dbg !10444
  %20 = zext i8 %19 to i16, !dbg !10444
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !10447
  store i16 %20, i16* %21, align 2, !dbg !10448
  %22 = add nuw nsw i32 %17, 1, !dbg !10449
  call void @llvm.dbg.value(metadata i32 %22, metadata !10422, metadata !DIExpression()), !dbg !10426
  %23 = icmp eq i32 %22, 3, !dbg !10450
  br i1 %23, label %24, label %16, !dbg !10442, !llvm.loop !10451

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10453
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10453
  ret void, !dbg !10454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !10455 {
  ret i32 3932160, !dbg !10456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !10457 {
  ret i32 4194304, !dbg !10458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !10459 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !10460
  ret void, !dbg !10461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !10462 {
  ret void, !dbg !10463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !10464 {
  ret void, !dbg !10465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !10466 {
  ret i32 3932160, !dbg !10467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !10468 {
  ret i32 262144, !dbg !10469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !10470 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !10471
  ret void, !dbg !10472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !10473 {
  ret i32 134217728, !dbg !10474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !10475 {
  ret i32 4194304, !dbg !10476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !10477 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10478
  ret i32 134217728, !dbg !10479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !10480 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !10481
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10482
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10483
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10484
  %4 = load i16, i16* %3, align 2, !dbg !10484
  %5 = zext i16 %4 to i32, !dbg !10482
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10485
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !10486
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10487
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !10488
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !10489
  ret i32 0, !dbg !10490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !10491 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !10494
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !10495
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !10496
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !10497
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10498
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10499
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !10500
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !10501
  %5 = load i32, i32* %4, align 4, !dbg !10501
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %6, metadata !10493, metadata !DIExpression()), !dbg !10503
  %7 = icmp eq i32 %6, -120, !dbg !10504
  %8 = select i1 %7, i32 5, i32 0, !dbg !10503
  ret i32 %8, !dbg !10506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !10507 {
  ret i8 1, !dbg !10509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !10510 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10514, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10516, metadata !DIExpression()), !dbg !10517
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %2, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10516, metadata !DIExpression()), !dbg !10517
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !10519
  %4 = load i32, i32* %3, align 4, !dbg !10519
  ret i32 %4, !dbg !10520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !10521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10525, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !10526, metadata !DIExpression()), !dbg !10528
  %3 = and i32 %0, 134217727, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %3, metadata !10525, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata i16 0, metadata !10527, metadata !DIExpression()), !dbg !10528
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !10530
  %5 = load i32, i32* %4, align 4, !dbg !10530
  %6 = icmp eq i32 %5, 0, !dbg !10533
  br i1 %6, label %25, label %7, !dbg !10534

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !10527, metadata !DIExpression()), !dbg !10528
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !10535
  %12 = load i32, i32* %11, align 4, !dbg !10535
  %13 = icmp ult i32 %3, %12, !dbg !10538
  br i1 %13, label %18, label %14, !dbg !10539

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !10540
  %16 = load i32, i32* %15, align 4, !dbg !10540
  %17 = icmp ult i32 %3, %16, !dbg !10541
  br i1 %17, label %25, label %18, !dbg !10542

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10543
  call void @llvm.dbg.value(metadata i16 %19, metadata !10527, metadata !DIExpression()), !dbg !10528
  %20 = zext i16 %19 to i32, !dbg !10544
  %21 = add nuw nsw i32 %20, 1, !dbg !10545
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !10530
  %23 = load i32, i32* %22, align 4, !dbg !10530
  %24 = icmp eq i32 %23, 0, !dbg !10533
  br i1 %24, label %25, label %7, !dbg !10534, !llvm.loop !10546

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10544
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !10548
  %28 = load i32, i32* %27, align 4, !dbg !10548
  ret i32 %28, !dbg !10549
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !10550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10552, metadata !DIExpression()), !dbg !10553
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10554
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !10555
  ret i32 %3, !dbg !10556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10559, metadata !DIExpression()), !dbg !10562
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %2, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10561, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10561, metadata !DIExpression()), !dbg !10562
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10564
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !10565
  ret i32 %4, !dbg !10566
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10573, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 0, metadata !10574, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 0, metadata !10575, metadata !DIExpression()), !dbg !10576
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !10577
  %3 = load i32, i32* %2, align 4, !dbg !10577
  %4 = icmp eq i32 %3, 0, !dbg !10580
  br i1 %4, label %17, label %5, !dbg !10581

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10575, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 %8, metadata !10574, metadata !DIExpression()), !dbg !10576
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !10582
  %10 = load i32, i32* %9, align 4, !dbg !10582
  %11 = mul i32 %10, %6, !dbg !10584
  %12 = add i32 %11, %8, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %12, metadata !10574, metadata !DIExpression()), !dbg !10576
  %13 = add i32 %7, 1, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %13, metadata !10575, metadata !DIExpression()), !dbg !10576
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !10577
  %15 = load i32, i32* %14, align 4, !dbg !10577
  %16 = icmp eq i32 %15, 0, !dbg !10580
  br i1 %16, label %17, label %5, !dbg !10581, !llvm.loop !10587

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10576
  ret i32 %18, !dbg !10589
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10594, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 %1, metadata !10595, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10596, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10597, metadata !DIExpression()), !dbg !10603
  %5 = add i32 %1, %0, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %5, metadata !10602, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 %0, metadata !10598, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 0, metadata !10599, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 0, metadata !10601, metadata !DIExpression()), !dbg !10603
  %6 = icmp ugt i32 %5, %0, !dbg !10605
  br i1 %6, label %7, label %34, !dbg !10608

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10601, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 %9, metadata !10598, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 %10, metadata !10599, metadata !DIExpression()), !dbg !10603
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %11, metadata !10600, metadata !DIExpression()), !dbg !10603
  %12 = icmp eq i32 %8, 0, !dbg !10611
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !10613
  br i1 %12, label %14, label %16, !dbg !10614

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10615
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10617
  store i32 1, i32* %15, align 4, !dbg !10618
  br label %29, !dbg !10619

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10620
  %18 = icmp eq i32 %11, %17, !dbg !10622
  br i1 %18, label %19, label %23, !dbg !10623

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10624
  %21 = load i32, i32* %20, align 4, !dbg !10626
  %22 = add i32 %21, 1, !dbg !10626
  store i32 %22, i32* %20, align 4, !dbg !10626
  br label %29, !dbg !10627

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10628
  call void @llvm.dbg.value(metadata i32 %24, metadata !10599, metadata !DIExpression()), !dbg !10603
  %25 = icmp eq i32 %24, 9, !dbg !10630
  br i1 %25, label %34, label %26, !dbg !10632

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !10633
  store i32 %11, i32* %27, align 4, !dbg !10634
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !10635
  store i32 1, i32* %28, align 4, !dbg !10636
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10637
  call void @llvm.dbg.value(metadata i32 %30, metadata !10599, metadata !DIExpression()), !dbg !10603
  %31 = add i32 %11, %9, !dbg !10638
  call void @llvm.dbg.value(metadata i32 %31, metadata !10598, metadata !DIExpression()), !dbg !10603
  %32 = add i32 %8, 1, !dbg !10639
  call void @llvm.dbg.value(metadata i32 %32, metadata !10601, metadata !DIExpression()), !dbg !10603
  %33 = icmp ult i32 %31, %5, !dbg !10605
  br i1 %33, label %7, label %34, !dbg !10608, !llvm.loop !10640

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10603
  ret i32 %35, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !10643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10647, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 %1, metadata !10648, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10649, metadata !DIExpression()), !dbg !10650
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10651
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !10652
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10653
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !10654
  ret i32 %7, !dbg !10655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10658, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata i32 %1, metadata !10659, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10660, metadata !DIExpression()), !dbg !10661
  ret i32 0, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10665, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata i32 %1, metadata !10666, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10667, metadata !DIExpression()), !dbg !10670
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %4, metadata !10668, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10669, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10669, metadata !DIExpression()), !dbg !10670
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10672
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !10673
  ret i32 %6, !dbg !10674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10677, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 %1, metadata !10678, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10679, metadata !DIExpression()), !dbg !10680
  ret i32 0, !dbg !10681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10682 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10684, metadata !DIExpression()), !dbg !10687
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10688
  call void @llvm.dbg.value(metadata i32 %2, metadata !10685, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10686, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10686, metadata !DIExpression()), !dbg !10687
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10689
  %4 = load i32, i32* %3, align 4, !dbg !10689
  ret i32 %4, !dbg !10690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !10691 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10695, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32* %1, metadata !10696, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %2, metadata !10697, metadata !DIExpression()), !dbg !10698
  %4 = load i32, i32* %1, align 4, !dbg !10699
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !10701
  %6 = load i32, i32* %5, align 4, !dbg !10701
  %7 = icmp eq i32 %6, %2, !dbg !10702
  br i1 %7, label %8, label %12, !dbg !10703

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !10704
  %10 = load i32, i32* %9, align 4, !dbg !10706
  %11 = add i32 %10, 1, !dbg !10706
  store i32 %11, i32* %9, align 4, !dbg !10706
  br label %17, !dbg !10707

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10708
  store i32 %13, i32* %1, align 4, !dbg !10708
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !10710
  store i32 1, i32* %14, align 4, !dbg !10711
  %15 = load i32, i32* %1, align 4, !dbg !10712
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !10713
  store i32 %2, i32* %16, align 4, !dbg !10714
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10720, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %1, metadata !10721, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10722, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10723, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 0, metadata !10724, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 0, metadata !10725, metadata !DIExpression()), !dbg !10729
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10730
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !10731
  call void @llvm.dbg.value(metadata i32 0, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 0, metadata !10727, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 0, metadata !10725, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 0, metadata !10724, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %0, metadata !10720, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %1, metadata !10721, metadata !DIExpression()), !dbg !10729
  %7 = icmp eq i32 %1, 0, !dbg !10732
  br i1 %7, label %53, label %8, !dbg !10735

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %10, metadata !10727, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %11, metadata !10725, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %12, metadata !10724, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %13, metadata !10720, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %14, metadata !10721, metadata !DIExpression()), !dbg !10729
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !10736
  %16 = load i32, i32* %15, align 4, !dbg !10736
  %17 = icmp ult i32 %9, %16, !dbg !10739
  %18 = xor i1 %17, true, !dbg !10740
  %19 = zext i1 %18 to i32, !dbg !10740
  %20 = add i32 %12, %19, !dbg !10740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %20, metadata !10724, metadata !DIExpression()), !dbg !10729
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !10741
  %22 = load i32, i32* %21, align 4, !dbg !10741
  %23 = add i32 %22, %10, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %23, metadata !10727, metadata !DIExpression()), !dbg !10729
  %24 = icmp ult i32 %23, %13, !dbg !10743
  br i1 %24, label %46, label %25, !dbg !10745

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %26, metadata !10726, metadata !DIExpression()), !dbg !10729
  %27 = icmp ult i32 %14, %26, !dbg !10748
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %28, metadata !10726, metadata !DIExpression()), !dbg !10729
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !10751
  %30 = load i32, i32* %29, align 4, !dbg !10751
  %31 = icmp eq i32 %30, %28, !dbg !10753
  br i1 %31, label %32, label %36, !dbg !10754

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !10755
  %34 = load i32, i32* %33, align 4, !dbg !10757
  %35 = add i32 %34, 1, !dbg !10757
  store i32 %35, i32* %33, align 4, !dbg !10757
  br label %42, !dbg !10758

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10759
  %38 = zext i1 %37 to i32, !dbg !10762
  %39 = add nsw i32 %11, %38, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %39, metadata !10725, metadata !DIExpression()), !dbg !10729
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !10763
  store i32 1, i32* %40, align 4, !dbg !10764
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !10765
  store i32 %28, i32* %41, align 4, !dbg !10766
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10729
  call void @llvm.dbg.value(metadata i32 %43, metadata !10725, metadata !DIExpression()), !dbg !10729
  %44 = add i32 %28, %13, !dbg !10767
  call void @llvm.dbg.value(metadata i32 %44, metadata !10720, metadata !DIExpression()), !dbg !10729
  %45 = sub i32 %14, %28, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %45, metadata !10721, metadata !DIExpression()), !dbg !10729
  br label %46, !dbg !10769

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10770
  call void @llvm.dbg.value(metadata i32 %49, metadata !10725, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %48, metadata !10720, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %47, metadata !10721, metadata !DIExpression()), !dbg !10729
  %50 = add nuw i32 %9, 1, !dbg !10771
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %51, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %23, metadata !10727, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %20, metadata !10724, metadata !DIExpression()), !dbg !10729
  %52 = icmp eq i32 %47, 0, !dbg !10732
  br i1 %52, label %53, label %8, !dbg !10735, !llvm.loop !10772

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !10775 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10779
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10780
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10779
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10781
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !10782
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !10783
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10784
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !10785
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !10784
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !10786
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !10787
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !10788
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !10789
  call void @llvm.dbg.value(metadata i32 %12, metadata !10777, metadata !DIExpression()), !dbg !10790
  %13 = icmp eq i32 %12, 0, !dbg !10791
  br i1 %13, label %14, label %46, !dbg !10793

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !10778, metadata !DIExpression()), !dbg !10790
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !10794
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10796
  call void @llvm.dbg.value(metadata i32 0, metadata !10778, metadata !DIExpression()), !dbg !10790
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !10797
  %16 = icmp eq i32 %15, 0, !dbg !10799
  br i1 %16, label %34, label %17, !dbg !10800

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10778, metadata !DIExpression()), !dbg !10790
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !10801
  %23 = load i32, i32* %22, align 4, !dbg !10801
  %24 = add i32 %20, %23, !dbg !10803
  %25 = icmp ugt i32 %18, %21, !dbg !10804
  br i1 %25, label %26, label %27, !dbg !10806

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10807
  br label %27, !dbg !10809

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !10810
  call void @llvm.dbg.value(metadata i32 %29, metadata !10778, metadata !DIExpression()), !dbg !10790
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !10797
  %31 = load i32, i32* %30, align 4, !dbg !10797
  %32 = icmp eq i32 %31, 0, !dbg !10799
  br i1 %32, label %33, label %17, !dbg !10800, !llvm.loop !10811

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !10803
  br label %34, !dbg !10800

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !10813
  %36 = mul i32 %35, -5, !dbg !10814
  %37 = add i32 %36, 262144, !dbg !10815
  %38 = lshr i32 %37, 9, !dbg !10816
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !10817
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !10818
  call void @llvm.dbg.value(metadata i32 0, metadata !10777, metadata !DIExpression()), !dbg !10790
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10819
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !10820
  %42 = load i8, i8* %41, align 1, !dbg !10820
  %43 = icmp eq i8 %42, 3, !dbg !10821
  br i1 %43, label %44, label %46, !dbg !10821

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %45, metadata !10777, metadata !DIExpression()), !dbg !10790
  br label %46, !dbg !10824

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !10790
  ret i32 %47, !dbg !10825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10830, metadata !DIExpression()), !dbg !10831
  %2 = icmp eq i32 %0, 0, !dbg !10832
  br i1 %2, label %3, label %9, !dbg !10834

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !10835
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10837
  %5 = icmp slt i32 %4, 0, !dbg !10838
  br i1 %5, label %6, label %7, !dbg !10840

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10841
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.137, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !10841
  unreachable, !dbg !10841

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !10846
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10847
  br label %9, !dbg !10848

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10849
  ret void, !dbg !10850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10851 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10852
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !10853
  ret i32 %1, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10855 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10858
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10859
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10860
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10861
  %4 = load i16, i16* %3, align 2, !dbg !10861
  %5 = zext i16 %4 to i32, !dbg !10859
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10862
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10863
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10864
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10865
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !10865
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !10866
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10867
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10868
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10869
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10870
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10871
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10872
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10873
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10874
  %13 = load i32, i32* %12, align 4, !dbg !10874
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !10875
  call void @llvm.dbg.value(metadata i32 %14, metadata !10857, metadata !DIExpression()), !dbg !10876
  %15 = icmp eq i32 %14, -120, !dbg !10877
  br i1 %15, label %16, label %17, !dbg !10880

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !10881
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.137, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !10881
  unreachable, !dbg !10881

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !10883
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10884
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !10885
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10886
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10887
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10888
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10889
  ret i32 0, !dbg !10890
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !10891 {
  ret void, !dbg !10892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !10893 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10896
  call void @llvm.dbg.value(metadata i32 %1, metadata !10895, metadata !DIExpression()), !dbg !10897
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10898
  br i1 %2, label %4, label %3, !dbg !10900

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !10901
  br label %4, !dbg !10903

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10904
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10904
  ret i32 %5, !dbg !10905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !10906 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %1, metadata !10908, metadata !DIExpression()), !dbg !10910
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10911
  br i1 %2, label %3, label %4, !dbg !10913

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !10914
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10916
  ret void, !dbg !10917

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10918
  tail call void @Flash_ReturnReady() #20, !dbg !10920
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.143, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !10920
  unreachable, !dbg !10920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !10924 {
  ret void, !dbg !10925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !10926 {
  br label %1, !dbg !10929

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %2, metadata !10928, metadata !DIExpression()), !dbg !10932
  %3 = icmp eq i32 %2, 0, !dbg !10933
  br i1 %3, label %4, label %1, !dbg !10934, !llvm.loop !10935

4:                                                ; preds = %1
  ret void, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !10938 {
  tail call void @FreeFDMLock() #21, !dbg !10939
  ret void, !dbg !10940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10984, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i32 %1, metadata !10985, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i8* %2, metadata !10986, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i32 %3, metadata !10987, metadata !DIExpression()), !dbg !10990
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10991
  %6 = load i32, i32* %5, align 4, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %6, metadata !10989, metadata !DIExpression()), !dbg !10990
  %7 = icmp ule i32 %6, %1, !dbg !10992
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !10994
  br i1 %10, label %26, label %11, !dbg !10994

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10995
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !10995
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !10995
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !10996
  %16 = load i8*, i8** %15, align 4, !dbg !10996
  %17 = ptrtoint i8* %16 to i32, !dbg !10997
  %18 = add i32 %17, %1, !dbg !10998
  call void @llvm.dbg.value(metadata i32 %18, metadata !10988, metadata !DIExpression()), !dbg !10990
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10999
  %20 = load i8, i8* %19, align 4, !dbg !10999, !range !2812
  %21 = icmp eq i8 %20, 0, !dbg !10999
  br i1 %21, label %22, label %23, !dbg !11001

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11002
  br label %23, !dbg !11004

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !11005
  %24 = inttoptr i32 %18 to i8*, !dbg !11006
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !11007
  tail call void @release_FDM_lock() #21, !dbg !11008
  br label %26, !dbg !11009

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !10990
  ret i32 %27, !dbg !11010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11015, metadata !DIExpression()), !dbg !11017
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11018
  %3 = load i8, i8* %2, align 4, !dbg !11018, !range !2812
  %4 = icmp eq i8 %3, 0, !dbg !11018
  br i1 %4, label %5, label %18, !dbg !11020

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !11021
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11022
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !11022
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !11023
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !11023
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11024
  %11 = load i8*, i8** %10, align 4, !dbg !11024
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !11025
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !11026
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %14, metadata !11016, metadata !DIExpression()), !dbg !11017
  tail call void @release_FDM_lock() #21, !dbg !11028
  %15 = icmp slt i32 %14, 0, !dbg !11029
  br i1 %15, label %16, label %17, !dbg !11031

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11032
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.143, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !11032
  unreachable, !dbg !11032

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !11037
  br label %18, !dbg !11038

18:                                               ; preds = %1, %17
  ret void, !dbg !11038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11039 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11041, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %1, metadata !11042, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i8* %2, metadata !11043, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %3, metadata !11044, metadata !DIExpression()), !dbg !11062
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11063
  %7 = load i32, i32* %6, align 4, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %7, metadata !11047, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 0, metadata !11048, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 0, metadata !11049, metadata !DIExpression()), !dbg !11062
  %8 = icmp ugt i32 %7, %1, !dbg !11064
  br i1 %8, label %9, label %101, !dbg !11066

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !11067
  %11 = icmp ugt i32 %10, %7, !dbg !11069
  br i1 %11, label %101, label %12, !dbg !11070

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11071
  %14 = load i8, i8* %13, align 4, !dbg !11071, !range !2812
  %15 = icmp eq i8 %14, 0, !dbg !11071
  br i1 %15, label %16, label %17, !dbg !11073

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11074
  br label %17, !dbg !11076

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !11077
  %18 = bitcast i16* %5 to i8*, !dbg !11078
  call void @llvm.dbg.value(metadata i32 0, metadata !11048, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 0, metadata !11049, metadata !DIExpression()), !dbg !11062
  %19 = icmp eq i32 %3, 0, !dbg !11079
  br i1 %19, label %99, label %20, !dbg !11080

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !11080

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !11049, metadata !DIExpression()), !dbg !11062
  %27 = load i8*, i8** %21, align 4, !dbg !11081
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !11082
  %29 = bitcast i8* %28 to i8**, !dbg !11082
  %30 = load i8*, i8** %29, align 4, !dbg !11082
  %31 = ptrtoint i8* %30 to i32, !dbg !11083
  %32 = add i32 %31, %1, !dbg !11084
  %33 = add i32 %32, %26, !dbg !11085
  call void @llvm.dbg.value(metadata i32 %33, metadata !11045, metadata !DIExpression()), !dbg !11062
  %34 = add i32 %26, %22, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %34, metadata !11046, metadata !DIExpression()), !dbg !11062
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11087
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !11088
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !11088
  %38 = add i32 %26, %1, !dbg !11089
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !11090
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !11091
  %41 = and i32 %33, 1, !dbg !11092
  %42 = icmp eq i32 %41, 0, !dbg !11092
  br i1 %42, label %43, label %46, !dbg !11093

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !11094
  %45 = icmp eq i32 %44, 1, !dbg !11095
  br i1 %45, label %46, label %57, !dbg !11096

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11097
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !11099
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !11099
  %50 = load i8*, i8** %21, align 4, !dbg !11100
  %51 = inttoptr i32 %33 to i8*, !dbg !11101
  %52 = inttoptr i32 %34 to i8*, !dbg !11102
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %53, metadata !11048, metadata !DIExpression()), !dbg !11062
  %54 = icmp eq i32 %53, 0, !dbg !11104
  br i1 %54, label %55, label %99, !dbg !11106

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %56, metadata !11049, metadata !DIExpression()), !dbg !11062
  br label %96, !dbg !11108

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !11109
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !11110
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %60, metadata !11050, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 %44, metadata !11054, metadata !DIExpression()), !dbg !11112
  %61 = add i32 %60, %33, !dbg !11113
  %62 = sub i32 0, %60, !dbg !11114
  %63 = and i32 %61, %62, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %63, metadata !11055, metadata !DIExpression()), !dbg !11112
  %64 = add i32 %32, %3, !dbg !11116
  %65 = icmp ugt i32 %64, %63, !dbg !11118
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %67, metadata !11054, metadata !DIExpression()), !dbg !11112
  %68 = and i32 %67, -2, !dbg !11120
  call void @llvm.dbg.value(metadata i32 %68, metadata !11054, metadata !DIExpression()), !dbg !11112
  %69 = icmp ne i32 %68, 2, !dbg !11121
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !11122
  br i1 %72, label %85, label %73, !dbg !11122

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11078
  call void @llvm.dbg.value(metadata i8* %18, metadata !11061, metadata !DIExpression()), !dbg !11123
  %74 = inttoptr i32 %34 to i8*, !dbg !11124
  %75 = load i8, i8* %74, align 1, !dbg !11125
  call void @llvm.dbg.value(metadata i8 undef, metadata !11056, metadata !DIExpression()), !dbg !11123
  store i8 %75, i8* %18, align 2, !dbg !11126
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !11127
  %77 = load i8, i8* %76, align 1, !dbg !11128
  store i8 %77, i8* %24, align 1, !dbg !11129
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11130
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !11131
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !11131
  %81 = load i8*, i8** %21, align 4, !dbg !11132
  %82 = inttoptr i32 %33 to i8*, !dbg !11133
  call void @llvm.dbg.value(metadata i16* %5, metadata !11056, metadata !DIExpression(DW_OP_deref)), !dbg !11123
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !11134
  call void @llvm.dbg.value(metadata i32 %83, metadata !11048, metadata !DIExpression()), !dbg !11062
  %84 = icmp eq i32 %83, 0, !dbg !11135
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11137
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11138
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !11142
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !11142
  %89 = load i8*, i8** %21, align 4, !dbg !11143
  %90 = inttoptr i32 %33 to i8*, !dbg !11144
  %91 = inttoptr i32 %34 to i8*, !dbg !11145
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %92, metadata !11048, metadata !DIExpression()), !dbg !11062
  %93 = icmp eq i32 %92, 0, !dbg !11147
  br i1 %93, label %94, label %99, !dbg !11149

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !11048, metadata !DIExpression()), !dbg !11062
  %95 = add i32 %68, %26, !dbg !11150
  call void @llvm.dbg.value(metadata i32 %83, metadata !11048, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %26, metadata !11049, metadata !DIExpression()), !dbg !11062
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !11151
  call void @llvm.dbg.value(metadata i32 0, metadata !11048, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %97, metadata !11049, metadata !DIExpression()), !dbg !11062
  %98 = icmp ult i32 %97, %3, !dbg !11079
  br i1 %98, label %25, label %99, !dbg !11080, !llvm.loop !11152

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !11154
  br label %101, !dbg !11155

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !11062
  ret i32 %102, !dbg !11155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11156 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11160, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata i32 %1, metadata !11161, metadata !DIExpression()), !dbg !11164
  %3 = and i32 %1, 16777215, !dbg !11165
  call void @llvm.dbg.value(metadata i32 %3, metadata !11163, metadata !DIExpression()), !dbg !11164
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11166
  %5 = load i8, i8* %4, align 4, !dbg !11166, !range !2812
  %6 = icmp eq i8 %5, 0, !dbg !11166
  br i1 %6, label %7, label %8, !dbg !11168

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11169
  br label %8, !dbg !11171

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !11172
  %10 = load i32, i32* %9, align 4, !dbg !11172
  %11 = icmp ult i32 %3, %10, !dbg !11174
  br i1 %11, label %12, label %27, !dbg !11175

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !11176
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11177
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11177
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !11178
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !11178
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11179
  %18 = load i8*, i8** %17, align 4, !dbg !11179
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !11180
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11181
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !11182
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !11182
  %23 = load i8*, i8** %17, align 4, !dbg !11183
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %24, metadata !11162, metadata !DIExpression()), !dbg !11164
  tail call void @release_FDM_lock() #21, !dbg !11185
  %25 = icmp eq i32 %24, 0, !dbg !11186
  %26 = select i1 %25, i32 0, i32 6, !dbg !11164
  br label %27, !dbg !11164

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !11164
  ret i32 %28, !dbg !11188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !11189 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11190
  br i1 %1, label %3, label %2, !dbg !11192

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !11193
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !11195
  store i1 true, i1* @flash_init_status, align 4, !dbg !11196
  br label %3, !dbg !11197

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !11198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !11199 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11200
  %2 = select i1 %1, i32 0, i32 -5, !dbg !11200
  ret i32 %2, !dbg !11201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11206, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i32 %1, metadata !11207, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i8* %2, metadata !11208, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11209, metadata !DIExpression()), !dbg !11213
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11214
  call void @llvm.dbg.value(metadata i8* %4, metadata !11210, metadata !DIExpression()), !dbg !11213
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11215
  %6 = ptrtoint i8* %5 to i32, !dbg !11216
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11217
  %8 = bitcast i8* %7 to i8**, !dbg !11217
  %9 = load i8*, i8** %8, align 4, !dbg !11217
  %10 = ptrtoint i8* %9 to i32, !dbg !11218
  %11 = shl i32 %1, 9, !dbg !11219
  %12 = add i32 %11, %6, !dbg !11220
  %13 = sub i32 %12, %10, !dbg !11221
  call void @llvm.dbg.value(metadata i32 %13, metadata !11212, metadata !DIExpression()), !dbg !11213
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %14, metadata !11211, metadata !DIExpression()), !dbg !11213
  %15 = icmp eq i32 %14, 0, !dbg !11223
  %16 = select i1 %15, i32 0, i32 -13, !dbg !11213
  ret i32 %16, !dbg !11225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11228, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i32 %1, metadata !11229, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i8* %2, metadata !11230, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11231, metadata !DIExpression()), !dbg !11235
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11236
  call void @llvm.dbg.value(metadata i8* %4, metadata !11232, metadata !DIExpression()), !dbg !11235
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11237
  %6 = ptrtoint i8* %5 to i32, !dbg !11238
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11239
  %8 = bitcast i8* %7 to i8**, !dbg !11239
  %9 = load i8*, i8** %8, align 4, !dbg !11239
  %10 = ptrtoint i8* %9 to i32, !dbg !11240
  %11 = shl i32 %1, 9, !dbg !11241
  %12 = add i32 %11, %6, !dbg !11242
  %13 = sub i32 %12, %10, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %13, metadata !11234, metadata !DIExpression()), !dbg !11235
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11244
  call void @llvm.dbg.value(metadata i32 %14, metadata !11233, metadata !DIExpression()), !dbg !11235
  %15 = icmp eq i32 %14, 0, !dbg !11245
  %16 = select i1 %15, i32 0, i32 -14, !dbg !11235
  ret i32 %16, !dbg !11247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !11248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11252, metadata !DIExpression()), !dbg !11254
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !11255
  call void @llvm.dbg.value(metadata i32 %2, metadata !11253, metadata !DIExpression()), !dbg !11254
  %3 = icmp eq i32 %2, 0, !dbg !11256
  %4 = select i1 %3, i32 0, i32 -15, !dbg !11254
  ret i32 %4, !dbg !11258
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11261, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11262, metadata !DIExpression()), !dbg !11264
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11265
  call void @llvm.dbg.value(metadata i8* %2, metadata !11263, metadata !DIExpression()), !dbg !11264
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !11266
  ret i32 %3, !dbg !11267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !11268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11270, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11271, metadata !DIExpression()), !dbg !11273
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11274
  call void @llvm.dbg.value(metadata i8* %2, metadata !11272, metadata !DIExpression()), !dbg !11273
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !11275
  ret i32 %3, !dbg !11276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11281, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32* %1, metadata !11282, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32* %2, metadata !11283, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11284, metadata !DIExpression()), !dbg !11286
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11287
  call void @llvm.dbg.value(metadata i8* %4, metadata !11285, metadata !DIExpression()), !dbg !11286
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !11288
  store i32 %5, i32* %1, align 4, !dbg !11289
  %6 = icmp eq i32 %5, -1, !dbg !11290
  br i1 %6, label %10, label %7, !dbg !11292

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !11293
  %9 = urem i32 %0, %8, !dbg !11294
  store i32 %9, i32* %2, align 4, !dbg !11295
  br label %10, !dbg !11296

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !11286
  ret i32 %11, !dbg !11297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11302, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata i32 %1, metadata !11303, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata i32* %2, metadata !11304, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11305, metadata !DIExpression()), !dbg !11307
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11308
  call void @llvm.dbg.value(metadata i8* %4, metadata !11306, metadata !DIExpression()), !dbg !11307
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11309
  %6 = ptrtoint i8* %5 to i32, !dbg !11310
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11311
  %8 = bitcast i8* %7 to i8**, !dbg !11311
  %9 = load i8*, i8** %8, align 4, !dbg !11311
  %10 = ptrtoint i8* %9 to i32, !dbg !11312
  %11 = add i32 %6, %1, !dbg !11313
  %12 = sub i32 %11, %10, !dbg !11314
  store i32 %12, i32* %2, align 4, !dbg !11315
  ret i32 0, !dbg !11316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !11317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11321, metadata !DIExpression()), !dbg !11322
  %2 = add i32 %0, 2, !dbg !11323
  %3 = icmp ult i32 %2, 9, !dbg !11323
  br i1 %3, label %5, label %4, !dbg !11323

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !11324
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.143, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !11324
  unreachable, !dbg !11324

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !11323
  %7 = lshr i16 433, %6, !dbg !11323
  %8 = and i16 %7, 1, !dbg !11323
  %9 = icmp eq i16 %8, 0, !dbg !11323
  br i1 %9, label %4, label %10, !dbg !11323

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !11323
  %12 = load i32, i32* %11, align 4, !dbg !11323
  ret i32 %12, !dbg !11334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !11335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11340, metadata !DIExpression()), !dbg !11343
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11344
  call void @llvm.dbg.value(metadata i32 %2, metadata !11342, metadata !DIExpression()), !dbg !11343
  %3 = icmp eq i32 %2, -1, !dbg !11345
  br i1 %3, label %4, label %5, !dbg !11347

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11348
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.143, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !11348
  unreachable, !dbg !11348

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %6, metadata !11341, metadata !DIExpression()), !dbg !11343
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !11354

7:                                                ; preds = %5
  br label %10, !dbg !11355

8:                                                ; preds = %5
  br label %10, !dbg !11359

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11362
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.143, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !11362
  unreachable, !dbg !11362

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !11367
  ret i32 %11, !dbg !11368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !11369 {
  %1 = tail call i32 @NOR_init() #21, !dbg !11370
  ret i32 0, !dbg !11371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !11372 {
  ret i32 0, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11378, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata i32 %1, metadata !11379, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata i32 0, metadata !11382, metadata !DIExpression()), !dbg !11383
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !11384

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !11385
  %5 = icmp eq i32 %4, 0, !dbg !11389
  br i1 %5, label %12, label %22, !dbg !11390

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !11391
  %8 = icmp eq i32 %7, 0, !dbg !11395
  br i1 %8, label %12, label %22, !dbg !11396

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !11397
  %11 = icmp eq i32 %10, 0, !dbg !11401
  br i1 %11, label %12, label %22, !dbg !11402

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !11403
  call void @llvm.dbg.value(metadata i32 %13, metadata !11382, metadata !DIExpression()), !dbg !11383
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %14, metadata !11381, metadata !DIExpression()), !dbg !11383
  %15 = icmp eq i32 %14, -1, !dbg !11405
  br i1 %15, label %22, label %16, !dbg !11407

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %17, metadata !11381, metadata !DIExpression()), !dbg !11383
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %18, metadata !11380, metadata !DIExpression()), !dbg !11383
  %19 = icmp eq i32 %18, 0, !dbg !11410
  br i1 %19, label %22, label %20, !dbg !11412

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !11413
  br label %22, !dbg !11415

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !11383
  ret i32 %23, !dbg !11416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11421, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i8* %1, metadata !11422, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i32 %2, metadata !11423, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11424, metadata !DIExpression()), !dbg !11426
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11427
  call void @llvm.dbg.value(metadata i32 %4, metadata !11425, metadata !DIExpression()), !dbg !11426
  %5 = icmp eq i32 %4, 0, !dbg !11428
  br i1 %5, label %8, label %6, !dbg !11430

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11431
  br label %8, !dbg !11433

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !11426
  ret i32 %9, !dbg !11434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11439, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata i8* %1, metadata !11440, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata i32 %2, metadata !11441, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11442, metadata !DIExpression()), !dbg !11447
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11448
  call void @llvm.dbg.value(metadata i32 %4, metadata !11443, metadata !DIExpression()), !dbg !11447
  %5 = icmp eq i32 %4, 0, !dbg !11449
  br i1 %5, label %8, label %6, !dbg !11451

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11452
  br label %21, !dbg !11454

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !11455
  br i1 %9, label %10, label %21, !dbg !11456

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !11457
  call void @llvm.dbg.value(metadata i32 %11, metadata !11444, metadata !DIExpression()), !dbg !11459
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !11444, metadata !DIExpression()), !dbg !11459
  %15 = icmp ugt i32 %11, %14, !dbg !11460
  br i1 %15, label %21, label %16, !dbg !11462

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11444, metadata !DIExpression()), !dbg !11459
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !11463
  %19 = add i32 %17, 32, !dbg !11465
  call void @llvm.dbg.value(metadata i32 %19, metadata !11444, metadata !DIExpression()), !dbg !11459
  %20 = icmp ugt i32 %19, %14, !dbg !11460
  br i1 %20, label %21, label %16, !dbg !11462, !llvm.loop !11466

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !11447
  ret i32 %22, !dbg !11468
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11469 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11473, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %1, metadata !11474, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8* %0, metadata !11475, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11476, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11478, metadata !DIExpression()), !dbg !11479
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11480
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11480
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11480
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11481
  %7 = load i32, i32* %6, align 4, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %7, metadata !11478, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11476, metadata !DIExpression()), !dbg !11479
  %8 = icmp ugt i32 %7, %1, !dbg !11482
  br i1 %8, label %23, label %9, !dbg !11483

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !11484
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11478, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %12, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %13, metadata !11476, metadata !DIExpression()), !dbg !11479
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !11486
  %15 = load i32, i32* %14, align 4, !dbg !11486
  %16 = mul i32 %15, %10, !dbg !11487
  %17 = add i32 %16, %13, !dbg !11488
  call void @llvm.dbg.value(metadata i32 %17, metadata !11476, metadata !DIExpression()), !dbg !11479
  %18 = add i32 %12, 1, !dbg !11489
  call void @llvm.dbg.value(metadata i32 %18, metadata !11477, metadata !DIExpression()), !dbg !11479
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !11490
  %20 = load i32, i32* %19, align 4, !dbg !11490
  %21 = add i32 %20, %11, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %21, metadata !11478, metadata !DIExpression()), !dbg !11479
  %22 = icmp ugt i32 %21, %1, !dbg !11482
  br i1 %22, label %23, label %9, !dbg !11483, !llvm.loop !11492

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !11494
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !11479
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !11479
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !11479
  call void @llvm.dbg.value(metadata i8* %0, metadata !11475, metadata !DIExpression()), !dbg !11479
  %28 = sub i32 %1, %27, !dbg !11495
  %29 = add i32 %28, %24, !dbg !11496
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !11497
  %31 = load i32, i32* %30, align 4, !dbg !11497
  %32 = mul i32 %29, %31, !dbg !11498
  %33 = add i32 %32, %25, !dbg !11499
  call void @llvm.dbg.value(metadata i32 %33, metadata !11476, metadata !DIExpression()), !dbg !11479
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11500
  %35 = bitcast i8* %34 to i8**, !dbg !11500
  %36 = load i8*, i8** %35, align 4, !dbg !11500
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !11501
  ret i8* %37, !dbg !11502
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !11503 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11505, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata i32 %1, metadata !11506, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata i32 %2, metadata !11507, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata i8* %0, metadata !11508, metadata !DIExpression()), !dbg !11509
  %4 = icmp eq i32 %2, 0, !dbg !11510
  br i1 %4, label %6, label %5, !dbg !11513

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !11514
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.159, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.160, i32 0, i32 0)) #23, !dbg !11514
  unreachable, !dbg !11514

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11508, metadata !DIExpression()), !dbg !11509
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !11516
  %8 = inttoptr i32 %7 to i8*, !dbg !11517
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11518
  %10 = bitcast i8* %9 to i8**, !dbg !11518
  store i8* %8, i8** %10, align 4, !dbg !11519
  ret i8* %8, !dbg !11520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2143, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 %1, metadata !2144, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i8* %0, metadata !2145, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 0, metadata !2190, metadata !DIExpression()), !dbg !11521
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !11522
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !11522
  %5 = and i32 %1, 7, !dbg !11524
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !11525
  %7 = load i32, i32* %6, align 4, !dbg !11525
  %8 = icmp eq i32 %7, -1, !dbg !11526
  br i1 %8, label %62, label %9, !dbg !11527

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !11528
  br i1 %10, label %54, label %11, !dbg !11531

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !11532
  %13 = load i32, i32* %12, align 4, !dbg !11532
  %14 = icmp eq i32 %13, -1, !dbg !11535
  br i1 %14, label %44, label %15, !dbg !11536

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !11537
  br i1 %16, label %35, label %17, !dbg !11540

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11541
  %19 = add i32 %18, 1, !dbg !11541
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !11541
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11543
  %21 = shl nuw nsw i32 1, %5, !dbg !11545
  %22 = and i32 %20, %21, !dbg !11546
  %23 = icmp eq i32 %22, 0, !dbg !11546
  br i1 %23, label %30, label %24, !dbg !11547

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !11548
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11550
  %26 = ptrtoint i8* %25 to i32, !dbg !11551
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11552
  store i32 %26, i32* %27, align 4, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %26, metadata !2190, metadata !DIExpression()), !dbg !11521
  %28 = xor i32 %21, -1, !dbg !11554
  %29 = and i32 %20, %28, !dbg !11555
  br label %71, !dbg !11556

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !11557
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11559
  %32 = ptrtoint i8* %31 to i32, !dbg !11560
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11561
  store i32 %32, i32* %33, align 4, !dbg !11562
  call void @llvm.dbg.value(metadata i32 %32, metadata !2190, metadata !DIExpression()), !dbg !11521
  %34 = or i32 %20, %21, !dbg !11563
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11564
  %37 = add i32 %36, 1, !dbg !11564
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11564
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11566
  %39 = load i32, i32* %38, align 4, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %39, metadata !2190, metadata !DIExpression()), !dbg !11521
  %40 = shl nuw nsw i32 1, %5, !dbg !11567
  %41 = xor i32 %40, -1, !dbg !11568
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11569
  %43 = and i32 %42, %41, !dbg !11569
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11570
  %46 = add i32 %45, 1, !dbg !11570
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11570
  store i32 %1, i32* %12, align 4, !dbg !11572
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11573
  %48 = ptrtoint i8* %47 to i32, !dbg !11574
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11575
  store i32 %48, i32* %49, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %48, metadata !2190, metadata !DIExpression()), !dbg !11521
  %50 = shl nuw nsw i32 1, %5, !dbg !11577
  %51 = xor i32 %50, -1, !dbg !11578
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11579
  %53 = and i32 %52, %51, !dbg !11579
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11580
  %56 = add i32 %55, 1, !dbg !11580
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11580
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11582
  %58 = load i32, i32* %57, align 4, !dbg !11582
  call void @llvm.dbg.value(metadata i32 %58, metadata !2190, metadata !DIExpression()), !dbg !11521
  %59 = shl nuw nsw i32 1, %5, !dbg !11583
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11584
  %61 = or i32 %60, %59, !dbg !11584
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11585
  %64 = add i32 %63, 1, !dbg !11585
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11585
  store i32 %1, i32* %6, align 4, !dbg !11587
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11588
  %66 = ptrtoint i8* %65 to i32, !dbg !11589
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11590
  store i32 %66, i32* %67, align 4, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %66, metadata !2190, metadata !DIExpression()), !dbg !11521
  %68 = shl nuw nsw i32 1, %5, !dbg !11592
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11593
  %70 = or i32 %69, %68, !dbg !11593
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11594
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %73, metadata !2190, metadata !DIExpression()), !dbg !11521
  ret i32 %73, !dbg !11595
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11598, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %1, metadata !11599, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i8* %0, metadata !11600, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 0, metadata !11601, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 0, metadata !11602, metadata !DIExpression()), !dbg !11603
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11604
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11604
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11604
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11605
  %7 = load i32, i32* %6, align 4, !dbg !11605
  call void @llvm.dbg.value(metadata i32 %7, metadata !11602, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 0, metadata !11601, metadata !DIExpression()), !dbg !11603
  %8 = icmp ugt i32 %7, %1, !dbg !11606
  br i1 %8, label %17, label %9, !dbg !11607

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11602, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %11, metadata !11601, metadata !DIExpression()), !dbg !11603
  %12 = add i32 %11, 1, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %12, metadata !11601, metadata !DIExpression()), !dbg !11603
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !11610
  %14 = load i32, i32* %13, align 4, !dbg !11610
  %15 = add i32 %14, %10, !dbg !11611
  call void @llvm.dbg.value(metadata i32 %15, metadata !11602, metadata !DIExpression()), !dbg !11603
  %16 = icmp ugt i32 %15, %1, !dbg !11606
  br i1 %16, label %17, label %9, !dbg !11607, !llvm.loop !11612

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11603
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !11614
  %20 = load i32, i32* %19, align 4, !dbg !11614
  ret i32 %20, !dbg !11615
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11616 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11618, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %1, metadata !11619, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i8* %0, metadata !11620, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11621, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11622, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11625
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11625
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11625
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11626
  %7 = load i32, i32* %6, align 4, !dbg !11626
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !11627
  %9 = load i32, i32* %8, align 4, !dbg !11627
  %10 = mul i32 %9, %7, !dbg !11628
  call void @llvm.dbg.value(metadata i32 %10, metadata !11622, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11623, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 0, metadata !11621, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %1, metadata !11619, metadata !DIExpression()), !dbg !11624
  %11 = icmp ult i32 %10, %1, !dbg !11629
  br i1 %11, label %12, label %30, !dbg !11630

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11631
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11623, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %16, metadata !11622, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %17, metadata !11621, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata i32 %18, metadata !11619, metadata !DIExpression()), !dbg !11624
  %19 = icmp eq i32 %14, 0, !dbg !11630
  br i1 %19, label %36, label %20, !dbg !11632

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %21, metadata !11623, metadata !DIExpression()), !dbg !11624
  %22 = sub i32 %18, %16, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %22, metadata !11619, metadata !DIExpression()), !dbg !11624
  %23 = add i32 %17, 1, !dbg !11636
  call void @llvm.dbg.value(metadata i32 %23, metadata !11621, metadata !DIExpression()), !dbg !11624
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !11637
  %25 = load i32, i32* %24, align 4, !dbg !11637
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !11638
  %27 = load i32, i32* %26, align 4, !dbg !11638
  %28 = mul i32 %27, %25, !dbg !11639
  call void @llvm.dbg.value(metadata i32 %28, metadata !11622, metadata !DIExpression()), !dbg !11624
  %29 = icmp ugt i32 %22, %28, !dbg !11629
  br i1 %29, label %12, label %30, !dbg !11630, !llvm.loop !11640

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11642
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11624
  %34 = udiv i32 %32, %31, !dbg !11645
  %35 = add i32 %34, %33, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %35, metadata !11623, metadata !DIExpression()), !dbg !11624
  br label %36, !dbg !11647

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11648
  call void @llvm.dbg.value(metadata i32 %37, metadata !11623, metadata !DIExpression()), !dbg !11624
  ret i32 %37, !dbg !11649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !11650 {
  ret i32 134217728, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !11652 {
  ret i32 3932160, !dbg !11653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !11654 {
  ret i32 0, !dbg !11655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !11656 {
  ret i32 262144, !dbg !11657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11660, metadata !DIExpression()), !dbg !11662
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %2, metadata !11661, metadata !DIExpression()), !dbg !11662
  %3 = icmp eq i32 %2, 0, !dbg !11664
  br i1 %3, label %5, label %4, !dbg !11666

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11667
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.159, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.160, i32 0, i32 0)) #23, !dbg !11667
  unreachable, !dbg !11667

5:                                                ; preds = %1
  ret void, !dbg !11672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11673 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11677, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 %1, metadata !11678, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i8* %2, metadata !11679, metadata !DIExpression()), !dbg !11690
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11691
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11680, metadata !DIExpression()), !dbg !11692
  %7 = bitcast i32* %5 to i8*, !dbg !11693
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11693
  call void @llvm.dbg.value(metadata i32* %5, metadata !11689, metadata !DIExpression(DW_OP_deref)), !dbg !11690
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11694
  call void @llvm.va_start(i8* nonnull %6), !dbg !11695
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11696
  %10 = load i32, i32* %9, align 4, !dbg !11696
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11696
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11696
  call void @llvm.va_end(i8* nonnull %6), !dbg !11697
  %13 = load i32, i32* %5, align 4, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %13, metadata !11689, metadata !DIExpression()), !dbg !11690
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11699
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11700
  ret void, !dbg !11700
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11701 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11703, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata i32 %1, metadata !11704, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata i8* %2, metadata !11705, metadata !DIExpression()), !dbg !11708
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11709
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11709
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11706, metadata !DIExpression()), !dbg !11710
  %7 = bitcast i32* %5 to i8*, !dbg !11711
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11711
  call void @llvm.dbg.value(metadata i32* %5, metadata !11707, metadata !DIExpression(DW_OP_deref)), !dbg !11708
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11712
  call void @llvm.va_start(i8* nonnull %6), !dbg !11713
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11714
  %10 = load i32, i32* %9, align 4, !dbg !11714
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11714
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11714
  call void @llvm.va_end(i8* nonnull %6), !dbg !11715
  %13 = load i32, i32* %5, align 4, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %13, metadata !11707, metadata !DIExpression()), !dbg !11708
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11717
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11718
  ret void, !dbg !11718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11719 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11721, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 %1, metadata !11722, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i8* %2, metadata !11723, metadata !DIExpression()), !dbg !11726
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11727
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11724, metadata !DIExpression()), !dbg !11728
  %7 = bitcast i32* %5 to i8*, !dbg !11729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11729
  call void @llvm.dbg.value(metadata i32* %5, metadata !11725, metadata !DIExpression(DW_OP_deref)), !dbg !11726
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11730
  call void @llvm.va_start(i8* nonnull %6), !dbg !11731
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11732
  %10 = load i32, i32* %9, align 4, !dbg !11732
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11732
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11732
  call void @llvm.va_end(i8* nonnull %6), !dbg !11733
  %13 = load i32, i32* %5, align 4, !dbg !11734
  call void @llvm.dbg.value(metadata i32 %13, metadata !11725, metadata !DIExpression()), !dbg !11726
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11736
  ret void, !dbg !11736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !11737 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11743, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 %1, metadata !11744, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i8* %2, metadata !11745, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i8* %3, metadata !11746, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 %4, metadata !11747, metadata !DIExpression()), !dbg !11748
  ret void, !dbg !11749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !11750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11752, metadata !DIExpression()), !dbg !11754
  %2 = shl i32 %0, 20, !dbg !11755
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11756
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !11757
  store volatile i32 %2, i32* %4, align 4, !dbg !11758
  %5 = load volatile i32, i32* %4, align 4, !dbg !11759
  %6 = or i32 %5, 65536, !dbg !11760
  store volatile i32 %6, i32* %4, align 4, !dbg !11761
  br label %7, !dbg !11762

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !11763
  %9 = and i32 %8, 1, !dbg !11764
  %10 = icmp eq i32 %9, 0, !dbg !11765
  br i1 %10, label %7, label %11, !dbg !11762, !llvm.loop !11766

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !11768
  %13 = lshr i32 %12, 8, !dbg !11769
  %14 = and i32 %13, 255, !dbg !11769
  call void @llvm.dbg.value(metadata i32 %14, metadata !11753, metadata !DIExpression()), !dbg !11754
  ret i32 %14, !dbg !11770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !11771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11773, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %1, metadata !11774, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %1, metadata !11774, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11775
  %3 = shl i32 %1, 24, !dbg !11776
  %4 = shl i32 %0, 20, !dbg !11777
  %5 = or i32 %4, %3, !dbg !11778
  %6 = or i32 %5, 131072, !dbg !11778
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11779
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !11780
  store volatile i32 %6, i32* %8, align 4, !dbg !11781
  %9 = load volatile i32, i32* %8, align 4, !dbg !11782
  %10 = or i32 %9, 65536, !dbg !11783
  store volatile i32 %10, i32* %8, align 4, !dbg !11784
  br label %11, !dbg !11785

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !11786
  %13 = and i32 %12, 1, !dbg !11787
  %14 = icmp eq i32 %13, 0, !dbg !11788
  br i1 %14, label %11, label %15, !dbg !11785, !llvm.loop !11789

15:                                               ; preds = %11
  ret void, !dbg !11791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !11792 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !11793
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !11794
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !11795
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !11796
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !11797
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !11798
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !11799
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !11800
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !11801
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !11802
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !11803
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !11804
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !11805
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !11806
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !11807
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !11808
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !11809
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !11810
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !11811
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !11812
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !11813
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !11814
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !11815
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !11816
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !11817
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !11818
  ret void, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !11820 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11823
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11824
  store volatile i32 21553, i32* %2, align 4, !dbg !11825
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11826
  store volatile i32 20489, i32* %3, align 4, !dbg !11827
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11828
  store volatile i32 20550, i32* %4, align 4, !dbg !11829
  ret i32 0, !dbg !11830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !11831 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !11835, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.value(metadata i32 0, metadata !11833, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i32 16384, metadata !11834, metadata !DIExpression()), !dbg !11840
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11841
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !11842
  store volatile i32 0, i32* %2, align 4, !dbg !11843
  call void @llvm.dbg.value(metadata i32 0, metadata !11837, metadata !DIExpression()), !dbg !11840
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !11837, metadata !DIExpression()), !dbg !11840
  br label %5, !dbg !11844

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11837, metadata !DIExpression()), !dbg !11840
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !11836, metadata !DIExpression()), !dbg !11840
  br label %8, !dbg !11846

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11836, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i32 0, metadata !11838, metadata !DIExpression()), !dbg !11840
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !11850

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !11838, metadata !DIExpression()), !dbg !11840
  %12 = icmp eq i32 %30, 2, !dbg !11854
  br i1 %12, label %31, label %13, !dbg !11850, !llvm.loop !11856

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11838, metadata !DIExpression()), !dbg !11840
  store volatile i32 0, i32* %2, align 4, !dbg !11858
  store volatile i32 63, i32* %3, align 4, !dbg !11860
  %15 = load i32, i32* %10, align 4, !dbg !11861
  %16 = shl i32 %15, 16, !dbg !11862
  %17 = shl nuw nsw i32 %14, 13, !dbg !11863
  %18 = or i32 %17, %7, !dbg !11864
  %19 = or i32 %18, %16, !dbg !11865
  store volatile i32 %19, i32* %2, align 4, !dbg !11866
  %20 = load volatile i32, i32* %2, align 4, !dbg !11867
  %21 = or i32 %20, 805, !dbg !11867
  store volatile i32 %21, i32* %2, align 4, !dbg !11867
  br label %22, !dbg !11868

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !11869
  %24 = and i32 %23, 2, !dbg !11870
  %25 = icmp eq i32 %24, 0, !dbg !11871
  br i1 %25, label %22, label %26, !dbg !11868, !llvm.loop !11872

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !11874
  %28 = and i32 %27, 1, !dbg !11876
  %29 = icmp eq i32 %28, 0, !dbg !11877
  %30 = add nuw nsw i32 %14, 1, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %30, metadata !11838, metadata !DIExpression()), !dbg !11840
  br i1 %29, label %11, label %37, !dbg !11879

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %32, metadata !11836, metadata !DIExpression()), !dbg !11840
  %33 = icmp eq i32 %32, 2, !dbg !11881
  br i1 %33, label %34, label %8, !dbg !11846, !llvm.loop !11882

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !11884
  call void @llvm.dbg.value(metadata i32 %35, metadata !11837, metadata !DIExpression()), !dbg !11840
  %36 = icmp eq i32 %35, 2, !dbg !11885
  br i1 %36, label %37, label %5, !dbg !11844, !llvm.loop !11886

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !11840
  store volatile i32 0, i32* %2, align 4, !dbg !11840
  ret i32 %38, !dbg !11888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !11889 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !11890
  %2 = icmp ne i32 %1, 0, !dbg !11892
  %3 = sext i1 %2 to i32, !dbg !11893
  ret i32 %3, !dbg !11894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !11895 {
  call void @llvm.dbg.value(metadata i32 31, metadata !11897, metadata !DIExpression()), !dbg !11899
  call void @llvm.dbg.value(metadata i32 0, metadata !11898, metadata !DIExpression()), !dbg !11899
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11900
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11901
  store volatile i32 0, i32* %2, align 4, !dbg !11902
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11903
  store volatile i32 0, i32* %3, align 4, !dbg !11904
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11905
  store volatile i32 0, i32* %4, align 4, !dbg !11906
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11907
  store volatile i32 0, i32* %5, align 4, !dbg !11908
  call void @llvm.dbg.value(metadata i32 31, metadata !11897, metadata !DIExpression()), !dbg !11899
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11909
  store volatile i32 522133279, i32* %6, align 4, !dbg !11913
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11914
  store volatile i32 522133279, i32* %7, align 4, !dbg !11915
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11916
  %9 = icmp eq i32 %8, 0, !dbg !11918
  call void @llvm.dbg.value(metadata i32 31, metadata !11897, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11899
  br i1 %9, label %36, label %10, !dbg !11919

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11897, metadata !DIExpression()), !dbg !11899
  call void @llvm.dbg.value(metadata i32 %11, metadata !11897, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11899
  call void @llvm.dbg.value(metadata i32 %11, metadata !11897, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11899
  %12 = icmp eq i32 %11, 0, !dbg !11920
  br i1 %12, label %26, label %13, !dbg !11921, !llvm.loop !11922

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !11924
  call void @llvm.dbg.value(metadata i32 %14, metadata !11897, metadata !DIExpression()), !dbg !11899
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11925
  %16 = shl i32 %14, 24, !dbg !11926
  %17 = shl i32 %14, 16, !dbg !11927
  %18 = shl i32 %14, 8, !dbg !11928
  %19 = or i32 %17, %14, !dbg !11929
  %20 = or i32 %19, %16, !dbg !11930
  %21 = or i32 %20, %18, !dbg !11931
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !11909
  store volatile i32 %21, i32* %22, align 4, !dbg !11913
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !11914
  store volatile i32 %21, i32* %23, align 4, !dbg !11915
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11916
  %25 = icmp eq i32 %24, 0, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %14, metadata !11897, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11899
  br i1 %25, label %36, label %10, !dbg !11919

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !11898, metadata !DIExpression()), !dbg !11899
  %28 = shl nuw nsw i32 %27, 16, !dbg !11932
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11938
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !11939
  store volatile i32 %28, i32* %30, align 4, !dbg !11940
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11941
  %32 = icmp eq i32 %31, 0, !dbg !11943
  call void @llvm.dbg.value(metadata i32 %27, metadata !11898, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11899
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %33, metadata !11898, metadata !DIExpression()), !dbg !11899
  call void @llvm.dbg.value(metadata i32 %27, metadata !11898, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11899
  br i1 %35, label %36, label %26, !dbg !11944, !llvm.loop !11945

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !11948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !11949 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !11950
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11951
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11952
  store volatile i32 1, i32* %2, align 4, !dbg !11953
  br label %3, !dbg !11954

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11955
  %5 = and i32 %4, 2, !dbg !11956
  %6 = icmp eq i32 %5, 0, !dbg !11956
  br i1 %6, label %3, label %7, !dbg !11954, !llvm.loop !11957

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !11959
  br label %8, !dbg !11960

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !11961
  %10 = and i32 %9, 2, !dbg !11962
  %11 = icmp eq i32 %10, 0, !dbg !11962
  br i1 %11, label %12, label %8, !dbg !11960, !llvm.loop !11963

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !11965
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !11966
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !11967

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !11968
  %17 = and i32 %16, 1, !dbg !11969
  %18 = icmp eq i32 %17, 0, !dbg !11970
  br i1 %18, label %15, label %19, !dbg !11967, !llvm.loop !11971

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !11973
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !11974
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !11975

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !11976
  %24 = and i32 %23, 1, !dbg !11977
  %25 = icmp eq i32 %24, 0, !dbg !11978
  br i1 %25, label %22, label %26, !dbg !11975, !llvm.loop !11979

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !11981
  %28 = icmp eq i32 %27, 9507, !dbg !11983
  br i1 %28, label %29, label %37, !dbg !11984

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !11985
  %31 = and i32 %30, 15, !dbg !11988
  %32 = icmp eq i32 %31, 2, !dbg !11989
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !11990
  %34 = and i32 %33, -128, !dbg !11990
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !11990
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !11990
  br label %37, !dbg !11991

37:                                               ; preds = %29, %26
  ret void, !dbg !11991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !11992 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !11995
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !11996
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !11997
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !11998
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !11999
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !12000
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !12001
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !12002
  ret i8 0, !dbg !12003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12004 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !12005
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12006
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !12007
  store volatile i32 %1, i32* %3, align 4, !dbg !12008
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !12009
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !12010
  store volatile i32 %4, i32* %5, align 4, !dbg !12011
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !12012
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !12013
  store volatile i32 %6, i32* %7, align 4, !dbg !12014
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !12015
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !12016
  store volatile i32 %8, i32* %9, align 4, !dbg !12017
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !12018
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !12019
  store volatile i32 %10, i32* %11, align 4, !dbg !12020
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !12021
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !12022
  store volatile i32 %12, i32* %13, align 4, !dbg !12023
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !12024
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !12025
  store volatile i32 %14, i32* %15, align 4, !dbg !12026
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !12027
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !12028
  store volatile i32 %16, i32* %17, align 4, !dbg !12029
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !12030
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !12031
  store volatile i32 %18, i32* %19, align 4, !dbg !12032
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !12033
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !12034
  store volatile i32 %20, i32* %21, align 4, !dbg !12035
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !12036
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !12037
  store volatile i32 %22, i32* %23, align 4, !dbg !12038
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !12039
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !12040
  store volatile i32 %24, i32* %25, align 4, !dbg !12041
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !12042
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !12043
  store volatile i32 %26, i32* %27, align 4, !dbg !12044
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !12045
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12046
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !12047
  store volatile i32 806289408, i32* %29, align 4, !dbg !12048
  br label %30, !dbg !12049

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !12050
  %32 = and i32 %31, 128, !dbg !12051
  %33 = icmp eq i32 %32, 0, !dbg !12051
  br i1 %33, label %30, label %34, !dbg !12049, !llvm.loop !12052

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !12054
  br label %35, !dbg !12055

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !12056
  %37 = and i32 %36, 128, !dbg !12057
  %38 = icmp eq i32 %37, 0, !dbg !12057
  br i1 %38, label %39, label %35, !dbg !12055, !llvm.loop !12058

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !12060
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !12061
  ret i8 0, !dbg !12062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !12063 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12064
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12065
  %3 = load volatile i32, i32* %2, align 4, !dbg !12065
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12066
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12067
  %5 = load volatile i32, i32* %4, align 4, !dbg !12067
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12068
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12069
  %7 = load volatile i32, i32* %6, align 4, !dbg !12069
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12070
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12071
  %9 = load volatile i32, i32* %8, align 4, !dbg !12071
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12072
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12073
  %11 = load volatile i32, i32* %10, align 4, !dbg !12073
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12074
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12075
  %13 = load volatile i32, i32* %12, align 4, !dbg !12075
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12076
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12077
  %15 = load volatile i32, i32* %14, align 4, !dbg !12077
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12078
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12079
  %17 = load volatile i32, i32* %16, align 4, !dbg !12079
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12080
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12081
  %19 = load volatile i32, i32* %18, align 4, !dbg !12081
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12082
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12083
  %21 = load volatile i32, i32* %20, align 4, !dbg !12083
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12084
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12085
  %23 = load volatile i32, i32* %22, align 4, !dbg !12085
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12086
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12087
  %25 = load volatile i32, i32* %24, align 4, !dbg !12087
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12088
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12089
  %27 = load volatile i32, i32* %26, align 4, !dbg !12089
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12090
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12091
  %29 = load volatile i32, i32* %28, align 4, !dbg !12091
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12092
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12093
  %31 = load volatile i32, i32* %30, align 4, !dbg !12093
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12094
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12095
  %33 = load volatile i32, i32* %32, align 4, !dbg !12095
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12096
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12097
  %35 = load volatile i32, i32* %34, align 4, !dbg !12097
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12098
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12099
  %37 = load volatile i32, i32* %36, align 4, !dbg !12099
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12100
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12101
  %39 = load volatile i32, i32* %38, align 4, !dbg !12101
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12102
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12103
  %41 = load volatile i32, i32* %40, align 4, !dbg !12103
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12104
  ret void, !dbg !12105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !12106 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12107

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12108
  %5 = and i32 %4, 17, !dbg !12109
  %6 = icmp eq i32 %5, 17, !dbg !12110
  br i1 %6, label %7, label %3, !dbg !12107, !llvm.loop !12111

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12113
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12114
  store volatile i32 %8, i32* %9, align 4, !dbg !12115
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12116
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12117
  store volatile i32 %10, i32* %11, align 4, !dbg !12118
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12119
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12120
  store volatile i32 %12, i32* %13, align 4, !dbg !12121
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12122
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12123
  store volatile i32 %14, i32* %15, align 4, !dbg !12124
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12125
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12126
  store volatile i32 %16, i32* %17, align 4, !dbg !12127
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12128
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12129
  store volatile i32 %18, i32* %19, align 4, !dbg !12130
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12131
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12132
  store volatile i32 %20, i32* %21, align 4, !dbg !12133
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12134
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12135
  store volatile i32 %22, i32* %23, align 4, !dbg !12136
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12137
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12138
  store volatile i32 %24, i32* %25, align 4, !dbg !12139
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12140
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12141
  store volatile i32 %26, i32* %27, align 4, !dbg !12142
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12143
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12144
  store volatile i32 %28, i32* %29, align 4, !dbg !12145
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12146
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12147
  store volatile i32 %30, i32* %31, align 4, !dbg !12148
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12149
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12150
  store volatile i32 %32, i32* %33, align 4, !dbg !12151
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12152
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12153
  store volatile i32 %34, i32* %35, align 4, !dbg !12154
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12155
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12156
  store volatile i32 %36, i32* %37, align 4, !dbg !12157
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12158
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12159
  store volatile i32 %38, i32* %39, align 4, !dbg !12160
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12161
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12162
  store volatile i32 %40, i32* %41, align 4, !dbg !12163
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12164
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12165
  store volatile i32 %42, i32* %43, align 4, !dbg !12166
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12167
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12168
  store volatile i32 %44, i32* %45, align 4, !dbg !12169
  ret void, !dbg !12170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !12171 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12172
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12173
  %3 = load volatile i32, i32* %2, align 4, !dbg !12173
  %4 = and i32 %3, -2097185, !dbg !12174
  store volatile i32 %4, i32* %2, align 4, !dbg !12175
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12176
  store volatile i32 1, i32* %5, align 4, !dbg !12177
  br label %6, !dbg !12178

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !12179
  %8 = and i32 %7, 2, !dbg !12180
  %9 = icmp eq i32 %8, 0, !dbg !12180
  br i1 %9, label %6, label %10, !dbg !12178, !llvm.loop !12181

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !12183
  br label %11, !dbg !12184

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !12185
  %13 = and i32 %12, 2, !dbg !12186
  %14 = icmp eq i32 %13, 0, !dbg !12186
  br i1 %14, label %15, label %11, !dbg !12184, !llvm.loop !12187

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !12189
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12190
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !12191
  store volatile i32 806289408, i32* %17, align 4, !dbg !12192
  br label %18, !dbg !12193

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12194
  %20 = and i32 %19, 128, !dbg !12195
  %21 = icmp eq i32 %20, 0, !dbg !12195
  br i1 %21, label %18, label %22, !dbg !12193, !llvm.loop !12196

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !12198
  br label %23, !dbg !12199

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !12200
  %25 = and i32 %24, 128, !dbg !12201
  %26 = icmp eq i32 %25, 0, !dbg !12201
  br i1 %26, label %27, label %23, !dbg !12199, !llvm.loop !12202

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !12204
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12205
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !12206
  store volatile i32 %28, i32* %29, align 4, !dbg !12207
  ret void, !dbg !12208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !12209 {
  tail call void @EMI_Setting_Save() #21, !dbg !12210
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12211

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12212
  %5 = and i32 %4, 17, !dbg !12213
  %6 = icmp eq i32 %5, 17, !dbg !12214
  br i1 %6, label %7, label %3, !dbg !12211, !llvm.loop !12215

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !12217
  %9 = or i32 %8, 1792, !dbg !12218
  store volatile i32 %9, i32* %2, align 4, !dbg !12219
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !12220
  store volatile i32 -261685248, i32* %10, align 4, !dbg !12221
  br label %11, !dbg !12222

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !12223
  %13 = and i32 %12, 1, !dbg !12224
  %14 = icmp eq i32 %13, 0, !dbg !12225
  br i1 %14, label %11, label %15, !dbg !12222, !llvm.loop !12226

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12228
  store volatile i32 0, i32* %16, align 4, !dbg !12229
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !12230

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12231
  %20 = and i32 %19, 16, !dbg !12232
  %21 = icmp eq i32 %20, 0, !dbg !12232
  br i1 %21, label %18, label %22, !dbg !12230, !llvm.loop !12233

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12235
  %24 = load volatile i32, i32* %23, align 4, !dbg !12235
  %25 = or i32 %24, 2097184, !dbg !12236
  store volatile i32 %25, i32* %23, align 4, !dbg !12237
  ret void, !dbg !12238
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !12239 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12244, metadata !DIExpression()), !dbg !12246
  %3 = bitcast i32* %2 to i8*, !dbg !12247
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12247
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12245, metadata !DIExpression()), !dbg !12248
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !12249

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12250
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !12253
  store volatile i32 0, i32* %6, align 4, !dbg !12254
  store volatile i32 806289408, i32* %6, align 4, !dbg !12255
  br label %7, !dbg !12256

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !12257
  %9 = and i32 %8, 128, !dbg !12258
  %10 = icmp eq i32 %9, 0, !dbg !12258
  br i1 %10, label %7, label %11, !dbg !12256, !llvm.loop !12259

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !12261
  br label %12, !dbg !12262

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !12263
  %14 = and i32 %13, 128, !dbg !12264
  %15 = icmp eq i32 %14, 0, !dbg !12264
  br i1 %15, label %16, label %12, !dbg !12262, !llvm.loop !12265

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !12267
  store volatile i32 0, i32* %2, align 4, !dbg !12268
  %17 = load volatile i32, i32* %2, align 4, !dbg !12270
  %18 = icmp ult i32 %17, 255, !dbg !12272
  br i1 %18, label %19, label %25, !dbg !12273

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !12274
  %21 = add i32 %20, 1, !dbg !12274
  store volatile i32 %21, i32* %2, align 4, !dbg !12274
  %22 = load volatile i32, i32* %2, align 4, !dbg !12270
  %23 = icmp ult i32 %22, 255, !dbg !12272
  br i1 %23, label %19, label %25, !dbg !12273, !llvm.loop !12275

24:                                               ; preds = %1
  br label %25, !dbg !12277

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !12246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12280
  ret i32 %26, !dbg !12280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12281 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12282
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12283
  %3 = load volatile i32, i32* %2, align 4, !dbg !12283
  %4 = or i32 %3, 1792, !dbg !12284
  store volatile i32 %4, i32* %2, align 4, !dbg !12285
  ret void, !dbg !12286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12287 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12288
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12289
  %3 = load volatile i32, i32* %2, align 4, !dbg !12289
  %4 = and i32 %3, -1793, !dbg !12290
  store volatile i32 %4, i32* %2, align 4, !dbg !12291
  ret void, !dbg !12292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !12293 {
  ret i1 false, !dbg !12294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !12295 {
  ret i1 false, !dbg !12296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !12297 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !12298
  ret void, !dbg !12301
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !12302 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !12303
  ret void, !dbg !12306
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12307 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !12308
  ret void, !dbg !12311
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12312 {
  tail call void @peri_26m_dcxo() #20, !dbg !12313
  ret void, !dbg !12316
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !12317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12321, metadata !DIExpression()), !dbg !12322
  %2 = trunc i32 %0 to i8, !dbg !12323
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !12324
  ret i32 %0, !dbg !12325
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !12326 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !12327
  tail call void @SystemCoreClockUpdate() #20, !dbg !12328
  tail call fastcc void @prvSetupHardware() #21, !dbg !12329
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !12330, !srcloc !12333
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !12334, !srcloc !12337
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.171, i32 0, i32 0)) #20, !dbg !12338
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.172, i32 0, i32 0)) #20, !dbg !12339
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.173, i32 0, i32 0)) #20, !dbg !12340
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.171, i32 0, i32 0)) #20, !dbg !12341
  tail call fastcc void @i2c_control_EEPROM_with_polling_example() #21, !dbg !12342
  br label %5, !dbg !12343

5:                                                ; preds = %0, %5
  br label %5, !dbg !12343, !llvm.loop !12344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !12346 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !12347
  ret void, !dbg !12348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !12349 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !12350
  %1 = tail call i32 @hal_flash_init() #20, !dbg !12351
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !12352
  ret void, !dbg !12353
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @i2c_control_EEPROM_with_polling_example() unnamed_addr #0 !dbg !12354 {
  %1 = alloca %struct.anon, align 4
  %2 = bitcast %struct.anon* %1 to i8*, !dbg !12365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !12365
  call void @llvm.dbg.declare(metadata %struct.anon* %1, metadata !12356, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i32 4, metadata !12362, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i32 0, metadata !12363, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata i32 0, metadata !12364, metadata !DIExpression()), !dbg !12367
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.174, i32 0, i32 0)) #20, !dbg !12368
  %4 = tail call i32 @hal_gpio_init(i32 noundef 36) #20, !dbg !12369
  %5 = tail call i32 @hal_gpio_init(i32 noundef 37) #20, !dbg !12370
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 36, i8 noundef zeroext 1) #20, !dbg !12371
  %7 = tail call i32 @hal_pinmux_set_function(i32 noundef 37, i8 noundef zeroext 1) #20, !dbg !12372
  store volatile i32 5, i32* @test_length, align 4, !dbg !12373
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !12374
  store i32 4, i32* %8, align 4, !dbg !12375
  %9 = call i32 @hal_i2c_master_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !12376
  %10 = icmp eq i32 %9, 0, !dbg !12378
  br i1 %10, label %13, label %11, !dbg !12379

11:                                               ; preds = %0
  %12 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.175, i32 0, i32 0)) #20, !dbg !12380
  br label %78, !dbg !12382

13:                                               ; preds = %0
  %14 = load volatile i32, i32* @test_length, align 4, !dbg !12383
  %15 = add i32 %14, 1, !dbg !12385
  %16 = call i32 @hal_i2c_master_send_polling(i32 noundef 0, i8 noundef zeroext 80, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @i2c_send_data, i32 0, i32 0), i32 noundef %15) #20, !dbg !12386
  %17 = icmp eq i32 %16, 0, !dbg !12387
  br i1 %17, label %20, label %18, !dbg !12388

18:                                               ; preds = %13
  %19 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.176, i32 0, i32 0)) #20, !dbg !12389
  br label %78, !dbg !12391

20:                                               ; preds = %13
  %21 = call i32 @hal_i2c_master_deinit(i32 noundef 0) #20, !dbg !12392
  %22 = icmp eq i32 %21, 0, !dbg !12394
  br i1 %22, label %25, label %23, !dbg !12395

23:                                               ; preds = %20
  %24 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.177, i32 0, i32 0)) #20, !dbg !12396
  br label %78, !dbg !12398

25:                                               ; preds = %20
  %26 = call i32 @hal_gpt_delay_ms(i32 noundef 200) #20, !dbg !12399
  store i32 4, i32* %8, align 4, !dbg !12400
  %27 = call i32 @hal_i2c_master_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !12401
  %28 = icmp eq i32 %27, 0, !dbg !12403
  br i1 %28, label %31, label %29, !dbg !12404

29:                                               ; preds = %25
  %30 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7.178, i32 0, i32 0)) #20, !dbg !12405
  br label %78, !dbg !12407

31:                                               ; preds = %25
  %32 = call i32 @hal_i2c_master_send_polling(i32 noundef 0, i8 noundef zeroext 80, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @i2c_send_data, i32 0, i32 0), i32 noundef 1) #20, !dbg !12408
  %33 = icmp eq i32 %32, 0, !dbg !12410
  br i1 %33, label %36, label %34, !dbg !12411

34:                                               ; preds = %31
  %35 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8.179, i32 0, i32 0)) #20, !dbg !12412
  br label %78, !dbg !12414

36:                                               ; preds = %31
  %37 = call i32 @hal_i2c_master_deinit(i32 noundef 0) #20, !dbg !12415
  %38 = icmp eq i32 %37, 0, !dbg !12417
  br i1 %38, label %41, label %39, !dbg !12418

39:                                               ; preds = %36
  %40 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.180, i32 0, i32 0)) #20, !dbg !12419
  br label %78, !dbg !12421

41:                                               ; preds = %36
  %42 = call i32 @hal_gpt_delay_ms(i32 noundef 200) #20, !dbg !12422
  store i32 4, i32* %8, align 4, !dbg !12423
  %43 = call i32 @hal_i2c_master_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !12424
  %44 = icmp eq i32 %43, 0, !dbg !12426
  br i1 %44, label %47, label %45, !dbg !12427

45:                                               ; preds = %41
  %46 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.181, i32 0, i32 0)) #20, !dbg !12428
  br label %78, !dbg !12430

47:                                               ; preds = %41
  %48 = load volatile i32, i32* @test_length, align 4, !dbg !12431
  %49 = call i32 @hal_i2c_master_receive_polling(i32 noundef 0, i8 noundef zeroext 80, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @i2c_receive_data, i32 0, i32 0), i32 noundef %48) #20, !dbg !12433
  %50 = icmp eq i32 %49, 0, !dbg !12434
  br i1 %50, label %53, label %51, !dbg !12435

51:                                               ; preds = %47
  %52 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11.182, i32 0, i32 0)) #20, !dbg !12436
  br label %78, !dbg !12438

53:                                               ; preds = %47
  %54 = call i32 @hal_i2c_master_deinit(i32 noundef 0) #20, !dbg !12439
  %55 = icmp eq i32 %54, 0, !dbg !12441
  br i1 %55, label %58, label %56, !dbg !12442

56:                                               ; preds = %53
  %57 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12.183, i32 0, i32 0)) #20, !dbg !12443
  br label %78, !dbg !12445

58:                                               ; preds = %53
  %59 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.184, i32 0, i32 0)) #20, !dbg !12446
  call void @llvm.dbg.value(metadata i32 0, metadata !12361, metadata !DIExpression()), !dbg !12367
  br label %60, !dbg !12447

60:                                               ; preds = %64, %58
  %61 = phi i32 [ 0, %58 ], [ %65, %64 ], !dbg !12449
  call void @llvm.dbg.value(metadata i32 %61, metadata !12361, metadata !DIExpression()), !dbg !12367
  %62 = load volatile i32, i32* @test_length, align 4, !dbg !12450
  %63 = icmp ult i32 %61, %62, !dbg !12452
  br i1 %63, label %64, label %71, !dbg !12453

64:                                               ; preds = %60
  %65 = add nuw i32 %61, 1, !dbg !12454
  %66 = getelementptr inbounds [32 x i8], [32 x i8]* @i2c_send_data, i32 0, i32 %65, !dbg !12457
  %67 = load i8, i8* %66, align 1, !dbg !12457
  %68 = getelementptr inbounds [32 x i8], [32 x i8]* @i2c_receive_data, i32 0, i32 %61, !dbg !12458
  %69 = load i8, i8* %68, align 1, !dbg !12458
  %70 = icmp eq i8 %67, %69, !dbg !12459
  br i1 %70, label %60, label %73, !dbg !12460, !llvm.loop !12461

71:                                               ; preds = %60
  %72 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15.185, i32 0, i32 0)) #20, !dbg !12463
  br label %73, !dbg !12466

73:                                               ; preds = %64, %71
  %74 = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.186, i32 0, i32 0), %71 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14.187, i32 0, i32 0), %64 ]
  %75 = call i32 (i8*, ...) @printf(i8* noundef %74) #20, !dbg !12367
  %76 = call i32 @hal_gpio_deinit(i32 noundef 36) #20, !dbg !12467
  %77 = call i32 @hal_gpio_deinit(i32 noundef 37) #20, !dbg !12468
  br label %78, !dbg !12469

78:                                               ; preds = %73, %56, %51, %45, %39, %34, %29, %23, %18, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !12469
  ret void, !dbg !12469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !12470 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12480
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12480
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !12472, metadata !DIExpression()), !dbg !12481
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !12482
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !12483
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !12484
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !12485
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12486
  store i32 9, i32* %7, align 4, !dbg !12487
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12488
  store i32 3, i32* %8, align 4, !dbg !12489
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12490
  store i32 0, i32* %9, align 4, !dbg !12491
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12492
  store i32 0, i32* %10, align 4, !dbg !12493
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !12494
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12495
  ret void, !dbg !12495
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !12496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12498, metadata !DIExpression()), !dbg !12499
  ret i32 0, !dbg !12500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !12501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12551, metadata !DIExpression()), !dbg !12553
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !12552, metadata !DIExpression()), !dbg !12553
  ret i32 0, !dbg !12554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !12555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12557, metadata !DIExpression()), !dbg !12558
  ret i32 1, !dbg !12559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12564, metadata !DIExpression()), !dbg !12567
  call void @llvm.dbg.value(metadata i32 %1, metadata !12565, metadata !DIExpression()), !dbg !12567
  call void @llvm.dbg.value(metadata i32 %2, metadata !12566, metadata !DIExpression()), !dbg !12567
  ret i32 0, !dbg !12568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12569 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12573, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %1, metadata !12574, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %2, metadata !12575, metadata !DIExpression()), !dbg !12576
  ret i32 -1, !dbg !12577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12582, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %1, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %2, metadata !12584, metadata !DIExpression()), !dbg !12585
  ret i32 0, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !12587 {
  ret i32 1, !dbg !12588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !12589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12593, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 %1, metadata !12594, metadata !DIExpression()), !dbg !12595
  ret i32 -1, !dbg !12596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !12597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12599, metadata !DIExpression()), !dbg !12600
  ret i32 -1, !dbg !12601
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2388 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2586, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 %1, metadata !2587, metadata !DIExpression()), !dbg !12602
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !12603, !srcloc !12604
  call void @llvm.dbg.value(metadata i8* %3, metadata !2589, metadata !DIExpression()), !dbg !12602
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !12605
  %5 = icmp eq i8* %4, null, !dbg !12607
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !12608
  call void @llvm.dbg.value(metadata i8* %6, metadata !2588, metadata !DIExpression()), !dbg !12602
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !12609
  %8 = icmp ult i8* %3, %7, !dbg !12611
  %9 = xor i1 %8, true, !dbg !12612
  %10 = or i1 %5, %9, !dbg !12612
  br i1 %10, label %11, label %13, !dbg !12612

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !12613
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !12612
  br label %13, !dbg !12612

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !12613
  ret i8* %14, !dbg !12612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !12614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12616, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata i8* %1, metadata !12617, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata i32 %2, metadata !12618, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata i32 0, metadata !12619, metadata !DIExpression()), !dbg !12620
  %4 = icmp sgt i32 %2, 0, !dbg !12621
  br i1 %4, label %5, label %14, !dbg !12624

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12619, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata i8* %7, metadata !12617, metadata !DIExpression()), !dbg !12620
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !12625
  call void @llvm.dbg.value(metadata i8* %8, metadata !12617, metadata !DIExpression()), !dbg !12620
  %9 = load i8, i8* %7, align 1, !dbg !12627
  %10 = zext i8 %9 to i32, !dbg !12627
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !12628
  %12 = add nuw nsw i32 %6, 1, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %12, metadata !12619, metadata !DIExpression()), !dbg !12620
  %13 = icmp eq i32 %12, %2, !dbg !12621
  br i1 %13, label %14, label %5, !dbg !12624, !llvm.loop !12630

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !12632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !12633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12635, metadata !DIExpression()), !dbg !12637
  %2 = add i32 %0, -1, !dbg !12638
  %3 = icmp ugt i32 %2, 16777215, !dbg !12640
  br i1 %3, label %8, label %4, !dbg !12641

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12642
  call void @llvm.dbg.value(metadata i32 %5, metadata !12636, metadata !DIExpression()), !dbg !12637
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12643
  %7 = and i32 %6, -4, !dbg !12643
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12643
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12644
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12645
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12646
  br label %8, !dbg !12647

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !12637
  ret i32 %9, !dbg !12648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !12649 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !12650
  ret void, !dbg !12651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !12652 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !12653
  ret i32 %1, !dbg !12654
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !12655 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !12658
  %2 = lshr i32 %1, 3, !dbg !12659
  %3 = and i32 %2, 15, !dbg !12659
  call void @llvm.dbg.value(metadata i32 %3, metadata !12657, metadata !DIExpression()), !dbg !12660
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !12661

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !12662

5:                                                ; preds = %0, %0
  br label %9, !dbg !12664

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !12665
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12666
  br label %15, !dbg !12668

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !12665
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12666
  %12 = and i32 %11, 1024, !dbg !12669
  %13 = icmp eq i32 %12, 0, !dbg !12669
  br i1 %13, label %15, label %14, !dbg !12668

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !12670
  br label %15, !dbg !12672

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !12673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !12674 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12675
  %2 = or i32 %1, 15728640, !dbg !12675
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12675
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !12676
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12677
  %4 = or i32 %3, 458752, !dbg !12677
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12677
  ret void, !dbg !12678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !12679 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12680
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12681
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12682
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !12683
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !12684
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !12685
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12686
  ret void, !dbg !12687
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2714, !94, !345, !628, !2736, !783, !868, !986, !1090, !2740, !1180, !1276, !1599, !2786, !1687, !1698, !2056, !2117, !2788, !2197, !2363, !2375, !2581, !2592, !2702}
!llvm.ident = !{!2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790, !2790}
!llvm.module.flags = !{!2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !345, file: !346, line: 64, type: !446, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !441, globals: !445, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!347 = !{!348, !400, !407, !411, !417, !421, !430, !435}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!350 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!351 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!352 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!353 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!354 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!355 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!356 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!357 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!358 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!359 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!360 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!361 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!362 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!363 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!364 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!365 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!366 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!367 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!368 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!369 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!370 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!371 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!372 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!373 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!374 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!375 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!376 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!377 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!378 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!379 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!380 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!381 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!382 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!383 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!384 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!385 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!386 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!387 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!388 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!389 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!390 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!391 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!392 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!393 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!394 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!395 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!396 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!397 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!398 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!399 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 224, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!404 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!405 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!406 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 210, baseType: !18, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!410 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 233, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!414 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!415 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!416 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 217, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429}
!423 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!424 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!425 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!426 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!427 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!428 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!429 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!433 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!434 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 242, baseType: !18, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!438 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!439 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!440 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!441 = !{!88, !442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !401, line: 213, baseType: !407)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !401, line: 220, baseType: !417)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !401, line: 247, baseType: !435)
!445 = !{!343}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !449)
!449 = !{!450, !467, !471, !480, !481, !490, !491, !500, !501, !511, !512, !521, !522, !531, !532, !541, !542, !551, !555, !564, !565, !574, !575, !584, !593, !594, !605, !609, !618, !619}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !448, file: !56, line: 1523, baseType: !451, size: 256)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !465)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !453, file: !56, line: 1396, baseType: !60, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !453, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !453, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !56, line: 1399, baseType: !459, size: 32, offset: 96)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !463)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !462)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !{!464}
!464 = !DISubrange(count: 4)
!465 = !{!466}
!466 = !DISubrange(count: 2)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !448, file: !56, line: 1524, baseType: !468, size: 1792, offset: 256)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1792, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 224)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !448, file: !56, line: 1525, baseType: !472, size: 256, offset: 2048)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !465)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !474, file: !56, line: 1405, baseType: !60, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !474, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !474, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !474, file: !56, line: 1408, baseType: !459, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !448, file: !56, line: 1526, baseType: !468, size: 1792, offset: 2304)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !448, file: !56, line: 1527, baseType: !482, size: 256, offset: 4096)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !465)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !484, file: !56, line: 1413, baseType: !60, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !484, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !484, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !484, file: !56, line: 1416, baseType: !459, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !448, file: !56, line: 1528, baseType: !468, size: 1792, offset: 4352)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !448, file: !56, line: 1529, baseType: !492, size: 256, offset: 6144)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !465)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !495)
!495 = !{!496, !497, !498, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !494, file: !56, line: 1422, baseType: !60, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !494, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !494, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !494, file: !56, line: 1425, baseType: !459, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !448, file: !56, line: 1530, baseType: !468, size: 1792, offset: 6400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !448, file: !56, line: 1531, baseType: !502, size: 256, offset: 8192)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 256, elements: !465)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !504, file: !56, line: 1430, baseType: !60, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !504, file: !56, line: 1431, baseType: !508, size: 96, offset: 32)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 12)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !448, file: !56, line: 1532, baseType: !468, size: 1792, offset: 8448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !448, file: !56, line: 1533, baseType: !513, size: 256, offset: 10240)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !465)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !515, file: !56, line: 1436, baseType: !60, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !515, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !515, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !56, line: 1439, baseType: !459, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !448, file: !56, line: 1534, baseType: !468, size: 1792, offset: 10496)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !448, file: !56, line: 1535, baseType: !523, size: 256, offset: 12288)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 256, elements: !465)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !525, file: !56, line: 1444, baseType: !60, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !525, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !525, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !525, file: !56, line: 1447, baseType: !459, size: 32, offset: 96)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !448, file: !56, line: 1536, baseType: !468, size: 1792, offset: 12544)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !448, file: !56, line: 1537, baseType: !533, size: 256, offset: 14336)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 256, elements: !465)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !535, file: !56, line: 1451, baseType: !60, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !535, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !535, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !535, file: !56, line: 1454, baseType: !459, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !448, file: !56, line: 1538, baseType: !468, size: 1792, offset: 14592)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !448, file: !56, line: 1539, baseType: !543, size: 512, offset: 16384)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !463)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !545, file: !56, line: 1459, baseType: !60, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !545, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !545, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !545, file: !56, line: 1462, baseType: !459, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !448, file: !56, line: 1540, baseType: !552, size: 1536, offset: 16896)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1536, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !448, file: !56, line: 1541, baseType: !556, size: 256, offset: 18432)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !465)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !558, file: !56, line: 1467, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !558, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !558, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1470, baseType: !459, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !448, file: !56, line: 1542, baseType: !468, size: 1792, offset: 18688)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !448, file: !56, line: 1543, baseType: !566, size: 256, offset: 20480)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !465)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !568, file: !56, line: 1476, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !568, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !568, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1479, baseType: !459, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !448, file: !56, line: 1544, baseType: !468, size: 1792, offset: 20736)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !448, file: !56, line: 1545, baseType: !576, size: 256, offset: 22528)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !465)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !578, file: !56, line: 1485, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !578, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !578, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1488, baseType: !459, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !448, file: !56, line: 1546, baseType: !585, size: 256, offset: 22784)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !465)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !587, file: !56, line: 1493, baseType: !60, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !587, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !587, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !56, line: 1496, baseType: !459, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !448, file: !56, line: 1547, baseType: !552, size: 1536, offset: 23040)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !448, file: !56, line: 1548, baseType: !595, size: 896, offset: 24576)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 896, elements: !603)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !597, file: !56, line: 1501, baseType: !60, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !597, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !597, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !56, line: 1504, baseType: !459, size: 32, offset: 96)
!603 = !{!604}
!604 = !DISubrange(count: 7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !448, file: !56, line: 1549, baseType: !606, size: 1152, offset: 25472)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1152, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !448, file: !56, line: 1550, baseType: !610, size: 512, offset: 26624)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 512, elements: !463)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !613)
!613 = !{!614, !615, !616, !617}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !612, file: !56, line: 1509, baseType: !60, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !612, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !612, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !612, file: !56, line: 1512, baseType: !459, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !448, file: !56, line: 1551, baseType: !552, size: 1536, offset: 27136)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !448, file: !56, line: 1552, baseType: !620, size: 768, offset: 28672)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 768, elements: !314)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !622, file: !56, line: 1517, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1518, baseType: !508, size: 96, offset: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !628, file: !629, line: 101, type: !777, isLocal: true, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !727, globals: !736, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!630 = !{!631, !638, !653, !659, !665, !670, !677, !693, !699, !703, !708, !715, !723}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636, !637}
!633 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!637 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 189, baseType: !18, size: 32, elements: !640)
!639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!641 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!642 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!643 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!644 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!645 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!646 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!647 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!648 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!649 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!650 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!651 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!652 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 355, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!657 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!658 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 206, baseType: !7, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!662 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!663 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!664 = !DIEnumerator(name: "VDMA_OK", value: 0)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !629, line: 65, baseType: !18, size: 32, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!668 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!669 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 345, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!673 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!674 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!675 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 302, baseType: !18, size: 32, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!679 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!680 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!681 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!682 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!683 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!684 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!685 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!686 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!687 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!688 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!689 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 321, baseType: !18, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698}
!695 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!696 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!698 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 330, baseType: !18, size: 32, elements: !700)
!700 = !{!701, !702}
!701 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!702 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 337, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!706 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!707 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !709, line: 101, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!710 = !{!711, !712, !713, !714}
!711 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!712 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!713 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!714 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !716, line: 152, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!717 = !{!718, !719, !720, !721, !722}
!718 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!719 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!720 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!721 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 222, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!726 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!727 = !{!88, !61, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !731)
!730 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !731, file: !730, line: 94, baseType: !91, size: 8)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !731, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !631)
!736 = !{!626, !737, !750, !755, !769, !775}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !628, file: !629, line: 102, type: !739, isLocal: true, isDefinition: true)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !463)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !629, line: 74, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 71, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !629, line: 72, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !654, line: 410, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !748, !88}
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !654, line: 359, baseType: !653)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !741, file: !629, line: 73, baseType: !88, size: 32, offset: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !628, file: !629, line: 103, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !628, file: !629, line: 104, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !463)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !654, line: 390, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 382, size: 224, elements: !760)
!760 = !{!761, !763, !764, !765, !766, !767, !768}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !759, file: !654, line: 383, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !759, file: !654, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !759, file: !654, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !759, file: !654, line: 386, baseType: !762, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !759, file: !654, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !759, file: !654, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !759, file: !654, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !628, file: !629, line: 105, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 416, elements: !773)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !628, file: !629, line: 90, type: !91, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !463)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !629, line: 69, baseType: !665)
!780 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !783, file: !784, line: 53, type: !864, isLocal: false, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !785, retainedTypes: !796, globals: !852, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!785 = !{!97, !168, !638, !631, !786}
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 46, baseType: !18, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795}
!788 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!789 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!790 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!791 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!792 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!793 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!794 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!795 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !800)
!800 = !{!801, !807, !812, !818, !819, !824, !829, !830, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !799, file: !56, line: 547, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 543, size: 32, elements: !803)
!803 = !{!804, !805, !806}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !802, file: !56, line: 544, baseType: !272, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !802, file: !56, line: 545, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !802, file: !56, line: 546, baseType: !60, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !799, file: !56, line: 551, baseType: !808, size: 32, offset: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 548, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !808, file: !56, line: 549, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !808, file: !56, line: 550, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !799, file: !56, line: 556, baseType: !813, size: 32, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 552, size: 32, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !813, file: !56, line: 553, baseType: !272, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !813, file: !56, line: 554, baseType: !60, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !813, file: !56, line: 555, baseType: !60, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !799, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !799, file: !56, line: 561, baseType: !820, size: 32, offset: 128)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 558, size: 32, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !820, file: !56, line: 559, baseType: !60, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !820, file: !56, line: 560, baseType: !60, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !799, file: !56, line: 565, baseType: !825, size: 32, offset: 160)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 562, size: 32, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !825, file: !56, line: 563, baseType: !272, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !825, file: !56, line: 564, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !799, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !799, file: !56, line: 570, baseType: !831, size: 32, offset: 224)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 567, size: 32, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !831, file: !56, line: 568, baseType: !60, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !831, file: !56, line: 569, baseType: !60, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !799, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !799, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !799, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !799, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !799, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !799, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !799, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !799, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !799, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !799, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !799, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !799, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !799, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !799, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !799, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !799, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !799, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!852 = !{!781, !853, !858}
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !783, file: !784, line: 54, type: !855, isLocal: false, isDefinition: true)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !463)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !783, file: !784, line: 55, type: !860, isLocal: false, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 128, elements: !463)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !463)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "s_i2c_master_status", scope: !868, file: !869, line: 61, type: !982, isLocal: true, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !870, retainedTypes: !948, globals: !960, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!870 = !{!871, !879, !885, !894, !900, !908, !925, !930, !936, !168, !940, !944}
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 455, baseType: !7, size: 32, elements: !873)
!872 = !DIFile(filename: "../../../../../driver/chip/inc/hal_i2c_master.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIEnumerator(name: "HAL_I2C_STATUS_ERROR", value: -4)
!875 = !DIEnumerator(name: "HAL_I2C_STATUS_ERROR_BUSY", value: -3)
!876 = !DIEnumerator(name: "HAL_I2C_STATUS_INVALID_PORT_NUMBER", value: -2)
!877 = !DIEnumerator(name: "HAL_I2C_STATUS_INVALID_PARAMETER", value: -1)
!878 = !DIEnumerator(name: "HAL_I2C_STATUS_OK", value: 0)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 302, baseType: !18, size: 32, elements: !880)
!880 = !{!881, !882, !883, !884}
!881 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!882 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!883 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!884 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!885 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 470, baseType: !18, size: 32, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893}
!887 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_50K", value: 0)
!888 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_100K", value: 1)
!889 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_200K", value: 2)
!890 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_300K", value: 3)
!891 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_400K", value: 4)
!892 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_1M", value: 5)
!893 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_MAX", value: 6)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 446, baseType: !7, size: 32, elements: !895)
!895 = !{!896, !897, !898, !899}
!896 = !DIEnumerator(name: "HAL_I2C_EVENT_ACK_ERROR", value: -3)
!897 = !DIEnumerator(name: "HAL_I2C_EVENT_NACK_ERROR", value: -2)
!898 = !DIEnumerator(name: "HAL_I2C_EVENT_TIMEOUT_ERROR", value: -1)
!899 = !DIEnumerator(name: "HAL_I2C_EVENT_SUCCESS", value: 0)
!900 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !901, line: 162, baseType: !7, size: 32, elements: !902)
!901 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!902 = !{!903, !904, !905, !906, !907}
!903 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!904 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!905 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!906 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!907 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !901, line: 142, baseType: !18, size: 32, elements: !909)
!909 = !{!910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924}
!910 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!911 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!912 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!913 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!914 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!915 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!916 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!917 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!918 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!919 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!920 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!921 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!922 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!923 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!924 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 151, baseType: !18, size: 32, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIEnumerator(name: "PDMA_BYTE", value: 0)
!928 = !DIEnumerator(name: "PDMA_HALF_WORD", value: 1)
!929 = !DIEnumerator(name: "PDMA_WORD", value: 2)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 180, baseType: !18, size: 32, elements: !931)
!931 = !{!932, !933, !934, !935}
!932 = !DIEnumerator(name: "PDMA_TX", value: 0)
!933 = !DIEnumerator(name: "PDMA_RX", value: 1)
!934 = !DIEnumerator(name: "PDMA_TX_RINGBUFF", value: 2)
!935 = !DIEnumerator(name: "PDMA_RX_RINGBUFF", value: 3)
!936 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 464, baseType: !18, size: 32, elements: !937)
!937 = !{!938, !939}
!938 = !DIEnumerator(name: "HAL_I2C_STATUS_IDLE", value: 0)
!939 = !DIEnumerator(name: "HAL_I2C_STATUS_BUS_BUSY", value: 1)
!940 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 159, baseType: !7, size: 32, elements: !941)
!941 = !{!942, !943}
!942 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_ERROR", value: -1)
!943 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !945)
!945 = !{!946, !947}
!946 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!947 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!948 = !{!88, !61, !949, !950, !951, !952}
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_running_type_t", file: !872, line: 467, baseType: !936)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_callback_event_t", file: !872, line: 451, baseType: !894)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_port_t", file: !98, line: 307, baseType: !879)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_dma_callback_parameter_t", file: !901, line: 182, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !901, line: 178, size: 64, elements: !955)
!955 = !{!956, !958, !959}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_type", scope: !954, file: !901, line: 179, baseType: !957, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !901, line: 160, baseType: !908)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "dma_finish", scope: !954, file: !901, line: 180, baseType: !91, size: 8, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_port", scope: !954, file: !901, line: 181, baseType: !460, size: 8, offset: 40)
!960 = !{!961, !866, !967, !970, !977, !980}
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "s_i2c_dma_parameter", scope: !868, file: !869, line: 68, type: !963, isLocal: true, isDefinition: true)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 192, elements: !965)
!964 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !953)
!965 = !{!966}
!966 = !DISubrange(count: 3)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "s_i2c_irq_table", scope: !868, file: !869, line: 65, type: !969, isLocal: true, isDefinition: true)
!969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 96, elements: !965)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "s_i2c_callback", scope: !868, file: !869, line: 62, type: !972, isLocal: true, isDefinition: true)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 96, elements: !965)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_callback_t", file: !872, line: 571, baseType: !974)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !460, !950, !88}
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "s_i2c_callback_parameter", scope: !868, file: !869, line: 63, type: !979, isLocal: true, isDefinition: true)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 96, elements: !965)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "i2c_dma_callback_count", scope: !868, file: !869, line: 69, type: !982, isLocal: true, isDefinition: true)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 24, elements: !965)
!983 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !986, file: !987, line: 46, type: !1021, isLocal: false, isDefinition: true)
!986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !988, globals: !1008, splitDebugInlining: false, nameTableKind: None)
!987 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!988 = !{!989, !97, !999, !908, !900}
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 137, baseType: !18, size: 32, elements: !990)
!990 = !{!991, !992, !993, !994, !995, !996, !997, !998}
!991 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!992 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!993 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!994 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!995 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!996 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!997 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!998 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!999 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !901, line: 132, baseType: !18, size: 32, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1007}
!1001 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!1002 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!1003 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!1004 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!1005 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!1006 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!1007 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!1008 = !{!984, !1009, !1014, !1016, !1018}
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !986, file: !987, line: 47, type: !1011, isLocal: false, isDefinition: true)
!1011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 128, elements: !463)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !639, line: 147, baseType: !989)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !986, file: !987, line: 48, type: !1011, isLocal: false, isDefinition: true)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !986, file: !987, line: 49, type: !855, isLocal: false, isDefinition: true)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !986, file: !987, line: 52, type: !1020, isLocal: false, isDefinition: true)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !463)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 128, elements: !463)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !56, line: 1885, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1833, size: 960, elements: !1026)
!1026 = !{!1027, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !1025, file: !56, line: 1834, baseType: !1028, size: 16)
!1028 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1029)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1031)
!1031 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1025, file: !56, line: 1835, baseType: !1028, size: 16, offset: 16)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !1025, file: !56, line: 1836, baseType: !1028, size: 16, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1025, file: !56, line: 1837, baseType: !1028, size: 16, offset: 48)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !1025, file: !56, line: 1838, baseType: !1028, size: 16, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1025, file: !56, line: 1839, baseType: !1028, size: 16, offset: 80)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !1025, file: !56, line: 1840, baseType: !1028, size: 16, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1025, file: !56, line: 1841, baseType: !1028, size: 16, offset: 112)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !1025, file: !56, line: 1842, baseType: !1028, size: 16, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1025, file: !56, line: 1843, baseType: !1028, size: 16, offset: 144)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !1025, file: !56, line: 1844, baseType: !1028, size: 16, offset: 160)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1025, file: !56, line: 1845, baseType: !1028, size: 16, offset: 176)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !1025, file: !56, line: 1846, baseType: !1028, size: 16, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1025, file: !56, line: 1847, baseType: !1028, size: 16, offset: 208)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !1025, file: !56, line: 1848, baseType: !1028, size: 16, offset: 224)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1025, file: !56, line: 1849, baseType: !1028, size: 16, offset: 240)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !1025, file: !56, line: 1850, baseType: !1028, size: 16, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1025, file: !56, line: 1851, baseType: !1028, size: 16, offset: 272)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !1025, file: !56, line: 1852, baseType: !1028, size: 16, offset: 288)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1025, file: !56, line: 1853, baseType: !1028, size: 16, offset: 304)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1025, file: !56, line: 1854, baseType: !1052, size: 32, offset: 320)
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 32, elements: !465)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !1025, file: !56, line: 1855, baseType: !1028, size: 16, offset: 352)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1025, file: !56, line: 1856, baseType: !1028, size: 16, offset: 368)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !1025, file: !56, line: 1857, baseType: !1028, size: 16, offset: 384)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1025, file: !56, line: 1858, baseType: !1028, size: 16, offset: 400)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !1025, file: !56, line: 1859, baseType: !1028, size: 16, offset: 416)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1025, file: !56, line: 1860, baseType: !1028, size: 16, offset: 432)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !1025, file: !56, line: 1861, baseType: !1028, size: 16, offset: 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1025, file: !56, line: 1862, baseType: !1028, size: 16, offset: 464)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1025, file: !56, line: 1863, baseType: !1052, size: 32, offset: 480)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !1025, file: !56, line: 1864, baseType: !1028, size: 16, offset: 512)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1025, file: !56, line: 1865, baseType: !1028, size: 16, offset: 528)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1025, file: !56, line: 1866, baseType: !1052, size: 32, offset: 544)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !1025, file: !56, line: 1867, baseType: !1028, size: 16, offset: 576)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1025, file: !56, line: 1868, baseType: !1028, size: 16, offset: 592)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1025, file: !56, line: 1869, baseType: !1052, size: 32, offset: 608)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !1025, file: !56, line: 1870, baseType: !1028, size: 16, offset: 640)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1025, file: !56, line: 1871, baseType: !1028, size: 16, offset: 656)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1025, file: !56, line: 1872, baseType: !1071, size: 96, offset: 672)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 96, elements: !314)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !1025, file: !56, line: 1873, baseType: !1028, size: 16, offset: 768)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1025, file: !56, line: 1874, baseType: !1028, size: 16, offset: 784)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !1025, file: !56, line: 1875, baseType: !1028, size: 16, offset: 800)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1025, file: !56, line: 1876, baseType: !1028, size: 16, offset: 816)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !1025, file: !56, line: 1877, baseType: !1028, size: 16, offset: 832)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1025, file: !56, line: 1878, baseType: !1028, size: 16, offset: 848)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !1025, file: !56, line: 1879, baseType: !1028, size: 16, offset: 864)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1025, file: !56, line: 1880, baseType: !1028, size: 16, offset: 880)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1025, file: !56, line: 1881, baseType: !1052, size: 32, offset: 896)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !1025, file: !56, line: 1882, baseType: !1028, size: 16, offset: 928)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1025, file: !56, line: 1883, baseType: !1028, size: 16, offset: 944)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1084 = distinct !DIGlobalVariable(name: "priority_set", scope: !1085, file: !1086, line: 128, type: !61, isLocal: true, isDefinition: true)
!1085 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1086, file: !1086, line: 126, type: !1087, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !1176)
!1086 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !716, line: 158, baseType: !715)
!1090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1091, retainedTypes: !1092, globals: !1158, splitDebugInlining: false, nameTableKind: None)
!1091 = !{!715, !168}
!1092 = !{!862, !1093, !61, !1126, !1156}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1095, line: 418, baseType: !1096)
!1095 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 395, size: 1120, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1102, !1103, !1104, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1115, !1116, !1117, !1119, !1123, !1125}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1096, file: !1095, line: 397, baseType: !272, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1096, file: !1095, line: 398, baseType: !60, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1096, file: !1095, line: 399, baseType: !60, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1096, file: !1095, line: 400, baseType: !60, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1096, file: !1095, line: 401, baseType: !60, size: 32, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1096, file: !1095, line: 402, baseType: !60, size: 32, offset: 160)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1096, file: !1095, line: 403, baseType: !1105, size: 96, offset: 192)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 96, elements: !509)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1096, file: !1095, line: 404, baseType: !60, size: 32, offset: 288)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1096, file: !1095, line: 405, baseType: !60, size: 32, offset: 320)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1096, file: !1095, line: 406, baseType: !60, size: 32, offset: 352)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1096, file: !1095, line: 407, baseType: !60, size: 32, offset: 384)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1096, file: !1095, line: 408, baseType: !60, size: 32, offset: 416)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1096, file: !1095, line: 409, baseType: !60, size: 32, offset: 448)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1096, file: !1095, line: 410, baseType: !60, size: 32, offset: 480)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1096, file: !1095, line: 411, baseType: !1114, size: 64, offset: 512)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !465)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1096, file: !1095, line: 412, baseType: !272, size: 32, offset: 576)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1096, file: !1095, line: 413, baseType: !272, size: 32, offset: 608)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1096, file: !1095, line: 414, baseType: !1118, size: 128, offset: 640)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !463)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1096, file: !1095, line: 415, baseType: !1120, size: 160, offset: 768)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1121)
!1121 = !{!1122}
!1122 = !DISubrange(count: 5)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1096, file: !1095, line: 416, baseType: !1124, size: 160, offset: 928)
!1124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1121)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1096, file: !1095, line: 417, baseType: !60, size: 32, offset: 1088)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1095, line: 378, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 363, size: 28704, elements: !1129)
!1129 = !{!1130, !1132, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1147, !1151, !1155}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1128, file: !1095, line: 365, baseType: !1131, size: 256)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !753)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1128, file: !1095, line: 366, baseType: !1133, size: 768, offset: 256)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1134)
!1134 = !{!1135}
!1135 = !DISubrange(count: 24)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1128, file: !1095, line: 367, baseType: !1131, size: 256, offset: 1024)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1128, file: !1095, line: 368, baseType: !1133, size: 768, offset: 1280)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1128, file: !1095, line: 369, baseType: !1131, size: 256, offset: 2048)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1128, file: !1095, line: 370, baseType: !1133, size: 768, offset: 2304)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1128, file: !1095, line: 371, baseType: !1131, size: 256, offset: 3072)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1128, file: !1095, line: 372, baseType: !1133, size: 768, offset: 3328)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1128, file: !1095, line: 373, baseType: !1131, size: 256, offset: 4096)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1128, file: !1095, line: 374, baseType: !1144, size: 1792, offset: 4352)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1145)
!1145 = !{!1146}
!1146 = !DISubrange(count: 56)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1128, file: !1095, line: 375, baseType: !1148, size: 1920, offset: 6144)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 1920, elements: !1149)
!1149 = !{!1150}
!1150 = !DISubrange(count: 240)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1128, file: !1095, line: 376, baseType: !1152, size: 20608, offset: 8064)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1153)
!1153 = !{!1154}
!1154 = !DISubrange(count: 644)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1128, file: !1095, line: 377, baseType: !60, size: 32, offset: 28672)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1158 = !{!1159, !1160, !1173}
!1159 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1090, file: !1086, line: 119, type: !1162, isLocal: false, isDefinition: true)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 4096, elements: !1171)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1086, line: 50, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1086, line: 47, size: 64, elements: !1165)
!1165 = !{!1166, !1170}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1164, file: !1086, line: 48, baseType: !1167, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{null, !862}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1164, file: !1086, line: 49, baseType: !61, size: 32, offset: 32)
!1171 = !{!1172}
!1172 = !DISubrange(count: 64)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1090, file: !1086, line: 52, type: !1175, isLocal: true, isDefinition: true)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2048, elements: !1171)
!1176 = !{!1177}
!1177 = !DILocalVariable(name: "i", scope: !1085, file: !1086, line: 129, type: !61)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1180, file: !1181, line: 55, type: !91, isLocal: false, isDefinition: true)
!1180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1182, retainedTypes: !1217, globals: !1253, splitDebugInlining: false, nameTableKind: None)
!1181 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1182 = !{!1183, !1191, !1196}
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1184, line: 51, baseType: !18, size: 32, elements: !1185)
!1184 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1185 = !{!1186, !1187, !1188, !1189, !1190}
!1186 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1187 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1188 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1189 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1190 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1184, line: 62, baseType: !18, size: 32, elements: !1192)
!1192 = !{!1193, !1194, !1195}
!1193 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1194 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1195 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1197, line: 228, baseType: !18, size: 32, elements: !1198)
!1197 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216}
!1199 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1200 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1201 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1202 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1203 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1204 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1205 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1206 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1207 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1208 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1209 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1210 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1211 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1212 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1213 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1214 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1215 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1216 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1217 = !{!1218, !1219, !1241, !762, !61, !18, !1247, !1249, !1250, !1252}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1221, file: !56, line: 2759, baseType: !60, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1221, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1221, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1221, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1221, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1221, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1221, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1221, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1221, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1221, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1221, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1221, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1221, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1221, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1221, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1221, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1221, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1221, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1244)
!1244 = !{!1245, !1246}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1243, file: !56, line: 2799, baseType: !60, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1243, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !462)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1253 = !{!1178, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272}
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1180, file: !1181, line: 604, type: !460, isLocal: false, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1180, file: !1181, line: 605, type: !61, isLocal: false, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1180, file: !1181, line: 606, type: !61, isLocal: false, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1180, file: !1181, line: 607, type: !61, isLocal: false, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1180, file: !1181, line: 608, type: !61, isLocal: false, isDefinition: true)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1180, file: !1181, line: 609, type: !61, isLocal: false, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1180, file: !1181, line: 610, type: !61, isLocal: false, isDefinition: true)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1180, file: !1181, line: 611, type: !61, isLocal: false, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1180, file: !1181, line: 665, type: !61, isLocal: false, isDefinition: true)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1180, file: !1181, line: 666, type: !61, isLocal: false, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1276, file: !1277, line: 334, type: !91, isLocal: false, isDefinition: true)
!1276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1277, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1278, retainedTypes: !1446, globals: !1584, splitDebugInlining: false, nameTableKind: None)
!1277 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1278 = !{!1279, !1370, !1376, !1383, !1395, !1406, !1415, !1424, !1428, !1432}
!1279 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1280, line: 58, baseType: !7, size: 32, elements: !1281)
!1280 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1281 = !{!1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1282 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1283 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1284 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1285 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1286 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1287 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1288 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1289 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1290 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1291 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1292 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1293 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1294 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1295 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1296 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1297 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1298 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1299 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1300 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1301 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1302 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1303 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1304 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1305 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1306 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1307 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1308 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1309 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1310 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1311 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1312 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1313 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1314 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1315 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1316 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1317 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1318 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1319 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1320 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1321 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1322 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1323 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1324 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1325 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1326 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1327 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1328 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1329 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1330 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1331 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1332 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1333 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1334 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1335 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1336 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1337 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1338 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1339 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1340 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1341 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1342 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1343 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1344 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1345 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1346 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1347 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1348 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1349 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1350 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1351 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1352 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1353 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1354 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1355 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1356 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1357 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1358 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1359 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1360 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1361 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1362 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1363 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1364 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1365 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1366 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1367 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1368 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1369 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1371, line: 81, baseType: !18, size: 32, elements: !1372)
!1371 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1372 = !{!1373, !1374, !1375}
!1373 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1374 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1375 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1376 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1277, line: 298, baseType: !18, size: 32, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382}
!1378 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1379 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1380 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1381 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1382 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1383 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1384, line: 51, baseType: !18, size: 32, elements: !1385)
!1384 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1385 = !{!1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394}
!1386 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1387 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1388 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1389 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1390 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1391 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1392 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1393 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1394 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1396, line: 110, baseType: !7, size: 32, elements: !1397)
!1396 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1397 = !{!1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405}
!1398 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1399 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1400 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1401 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1402 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1403 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1404 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1405 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1406 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1384, line: 73, baseType: !18, size: 32, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1408 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1409 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1410 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1411 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1412 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1413 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1414 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1415 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1384, line: 83, baseType: !18, size: 32, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1417 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1418 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1419 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1420 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1421 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1422 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1423 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1424 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1384, line: 98, baseType: !18, size: 32, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1427 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1428 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1371, line: 76, baseType: !18, size: 32, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1431 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1432 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1371, line: 208, baseType: !18, size: 32, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445}
!1434 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1435 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1436 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1437 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1438 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1439 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1440 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1441 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1442 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1443 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1444 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1445 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1446 = !{!61, !1218, !1249, !762, !1447, !1555, !1577, !88, !1583, !462}
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1371, line: 193, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1371, line: 134, size: 1824, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1460, !1466, !1470, !1478, !1479, !1486, !1487, !1488, !1489, !1497, !1500, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1549, !1550, !1554}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1449, file: !1371, line: 136, baseType: !61, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1449, file: !1371, line: 137, baseType: !762, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1449, file: !1371, line: 138, baseType: !1454, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1455, line: 56, baseType: !1456)
!1455 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 54, size: 8, elements: !1458)
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1457, file: !1455, line: 55, baseType: !460, size: 8)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1449, file: !1371, line: 139, baseType: !1461, size: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1455, line: 46, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 44, size: 8, elements: !1464)
!1464 = !{!1465}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1463, file: !1455, line: 45, baseType: !460, size: 8)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1449, file: !1371, line: 140, baseType: !1467, size: 8, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1469)
!1469 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1449, file: !1371, line: 143, baseType: !1471, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1473, line: 146, baseType: !1474)
!1473 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 143, size: 64, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1474, file: !1473, line: 144, baseType: !61, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1474, file: !1473, line: 145, baseType: !61, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1449, file: !1371, line: 144, baseType: !762, size: 32, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1449, file: !1371, line: 145, baseType: !1480, size: 32, offset: 224)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1473, line: 152, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 149, size: 64, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1482, file: !1473, line: 150, baseType: !61, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1482, file: !1473, line: 151, baseType: !61, size: 32, offset: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1449, file: !1371, line: 146, baseType: !762, size: 32, offset: 256)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1449, file: !1371, line: 147, baseType: !61, size: 32, offset: 288)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1449, file: !1371, line: 148, baseType: !762, size: 32, offset: 320)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1449, file: !1371, line: 151, baseType: !1490, size: 1024, offset: 352)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1491, size: 1024, elements: !1496)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1473, line: 170, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 167, size: 64, elements: !1493)
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1492, file: !1473, line: 168, baseType: !61, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1492, file: !1473, line: 169, baseType: !61, size: 32, offset: 32)
!1496 = !{!754, !466}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1449, file: !1371, line: 155, baseType: !1498, size: 32, offset: 1376)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1384, line: 120, baseType: !460)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1449, file: !1371, line: 156, baseType: !1501, size: 32, offset: 1408)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1371, line: 124, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1371, line: 90, size: 200, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1503, file: !1371, line: 91, baseType: !460, size: 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1503, file: !1371, line: 92, baseType: !460, size: 8, offset: 8)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1503, file: !1371, line: 94, baseType: !460, size: 8, offset: 16)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1503, file: !1371, line: 95, baseType: !460, size: 8, offset: 24)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1503, file: !1371, line: 96, baseType: !460, size: 8, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1503, file: !1371, line: 98, baseType: !460, size: 8, offset: 40)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1503, file: !1371, line: 99, baseType: !460, size: 8, offset: 48)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1503, file: !1371, line: 100, baseType: !460, size: 8, offset: 56)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1503, file: !1371, line: 101, baseType: !460, size: 8, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1503, file: !1371, line: 103, baseType: !460, size: 8, offset: 72)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1503, file: !1371, line: 104, baseType: !460, size: 8, offset: 80)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1503, file: !1371, line: 106, baseType: !460, size: 8, offset: 88)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1503, file: !1371, line: 107, baseType: !460, size: 8, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1503, file: !1371, line: 108, baseType: !460, size: 8, offset: 104)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1503, file: !1371, line: 109, baseType: !460, size: 8, offset: 112)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1503, file: !1371, line: 110, baseType: !460, size: 8, offset: 120)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1503, file: !1371, line: 111, baseType: !460, size: 8, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1503, file: !1371, line: 112, baseType: !460, size: 8, offset: 136)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1503, file: !1371, line: 114, baseType: !460, size: 8, offset: 144)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1503, file: !1371, line: 115, baseType: !460, size: 8, offset: 152)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1503, file: !1371, line: 118, baseType: !460, size: 8, offset: 160)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1503, file: !1371, line: 119, baseType: !460, size: 8, offset: 168)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1503, file: !1371, line: 120, baseType: !460, size: 8, offset: 176)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1503, file: !1371, line: 121, baseType: !460, size: 8, offset: 184)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1503, file: !1371, line: 122, baseType: !460, size: 8, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1449, file: !1371, line: 157, baseType: !61, size: 32, offset: 1440)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1449, file: !1371, line: 158, baseType: !1029, size: 16, offset: 1472)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1449, file: !1371, line: 159, baseType: !1029, size: 16, offset: 1488)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1449, file: !1371, line: 163, baseType: !1029, size: 16, offset: 1504)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1449, file: !1371, line: 164, baseType: !1029, size: 16, offset: 1520)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1449, file: !1371, line: 167, baseType: !460, size: 8, offset: 1536)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1449, file: !1371, line: 168, baseType: !1537, size: 24, offset: 1544)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 24, elements: !965)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1449, file: !1371, line: 169, baseType: !460, size: 8, offset: 1568)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1449, file: !1371, line: 170, baseType: !460, size: 8, offset: 1576)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1449, file: !1371, line: 173, baseType: !1029, size: 16, offset: 1584)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1449, file: !1371, line: 174, baseType: !61, size: 32, offset: 1600)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1449, file: !1371, line: 175, baseType: !61, size: 32, offset: 1632)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1449, file: !1371, line: 178, baseType: !91, size: 8, offset: 1664)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1449, file: !1371, line: 179, baseType: !91, size: 8, offset: 1672)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1449, file: !1371, line: 182, baseType: !1546, size: 32, offset: 1696)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!7, !88}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1449, file: !1371, line: 186, baseType: !1546, size: 32, offset: 1728)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1449, file: !1371, line: 187, baseType: !1551, size: 32, offset: 1760)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!7, !88, !61, !88, !61}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1449, file: !1371, line: 188, baseType: !1551, size: 32, offset: 1792)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1557, file: !56, line: 2759, baseType: !60, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1557, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1557, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1557, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1557, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1557, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1557, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1557, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1557, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1557, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1557, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1557, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1557, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1557, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1557, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1557, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1557, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1557, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1579, file: !56, line: 2799, baseType: !60, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1579, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!1584 = !{!1274, !1585, !1587, !1589, !1594}
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1276, file: !1277, line: 382, type: !61, isLocal: false, isDefinition: true)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1276, file: !1277, line: 383, type: !61, isLocal: false, isDefinition: true)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1276, file: !1277, line: 369, type: !1591, isLocal: true, isDefinition: true)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 128)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1276, file: !1277, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1599, file: !1654, line: 35, type: !1655, isLocal: false, isDefinition: true)
!1599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1601, retainedTypes: !1647, globals: !1648, splitDebugInlining: false, nameTableKind: None)
!1600 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1601 = !{!1602}
!1602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1603, line: 77, baseType: !18, size: 32, elements: !1604)
!1603 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!1605 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1606 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1607 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1608 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1609 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1610 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1611 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1612 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1613 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1614 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1615 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1616 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1617 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1618 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1619 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1620 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1621 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1622 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1623 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1624 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1625 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1626 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1627 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1628 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1629 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1630 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1631 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1632 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1633 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1634 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1635 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1636 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1637 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1638 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1639 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1640 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1641 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1642 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1643 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1644 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1645 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1646 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1647 = !{!88}
!1648 = !{!1597, !1649, !1652}
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1599, file: !1600, line: 96, type: !1651, isLocal: true, isDefinition: true)
!1651 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1599, file: !1600, line: 94, type: !1651, isLocal: true, isDefinition: true)
!1654 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1600, line: 54, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1600, line: 51, size: 576, elements: !1658)
!1658 = !{!1659, !1669}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1657, file: !1600, line: 52, baseType: !1660, size: 96)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1603, line: 152, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1603, line: 144, size: 96, elements: !1662)
!1662 = !{!1663, !1665, !1667}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1661, file: !1603, line: 145, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1603, line: 61, baseType: !18)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1661, file: !1603, line: 146, baseType: !1666, size: 16, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1603, line: 62, baseType: !1031)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1661, file: !1603, line: 150, baseType: !1668, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1603, line: 127, baseType: !1602)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1657, file: !1600, line: 53, baseType: !1670, size: 480, offset: 96)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1671, line: 107, baseType: !1672)
!1671 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1671, line: 103, size: 480, elements: !1673)
!1673 = !{!1674, !1675, !1676}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1672, file: !1671, line: 104, baseType: !18, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1672, file: !1671, line: 105, baseType: !18, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1672, file: !1671, line: 106, baseType: !1677, size: 400, offset: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 400, elements: !1121)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1671, line: 100, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1671, line: 92, size: 80, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1679, file: !1671, line: 93, baseType: !460, size: 8)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1679, file: !1671, line: 94, baseType: !460, size: 8, offset: 8)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1679, file: !1671, line: 96, baseType: !1684, size: 64, offset: 16)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !753)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1687, file: !1690, line: 96, type: !1691, isLocal: false, isDefinition: true)
!1687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1689, splitDebugInlining: false, nameTableKind: None)
!1688 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1689 = !{!1685}
!1690 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 152, elements: !1694)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1694 = !{!1695}
!1695 = !DISubrange(count: 19)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1698, file: !1699, line: 168, type: !2049, isLocal: false, isDefinition: true)
!1698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1700, retainedTypes: !1711, globals: !1720, splitDebugInlining: false, nameTableKind: None)
!1699 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1700 = !{!1701, !1279, !1602}
!1701 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1702, line: 49, baseType: !18, size: 32, elements: !1703)
!1702 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710}
!1704 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1705 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1706 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1707 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1708 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1709 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1710 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1711 = !{!1712, !61, !1714}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1280, line: 47, baseType: !462)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1473, line: 146, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 143, size: 64, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1716, file: !1473, line: 144, baseType: !61, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1716, file: !1473, line: 145, baseType: !61, size: 32, offset: 32)
!1720 = !{!1696, !1721, !1723, !1733, !1870, !1872, !1874, !1876, !1878, !1883, !1886, !1895, !1897, !1899, !1907, !1909, !1911, !1994, !1997, !1999, !2001, !2012, !2014, !2027}
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1698, file: !1699, line: 94, type: !1156, isLocal: true, isDefinition: true)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1698, file: !1699, line: 95, type: !1725, isLocal: false, isDefinition: true)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1671, line: 100, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1671, line: 92, size: 80, elements: !1729)
!1729 = !{!1730, !1731, !1732}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1728, file: !1671, line: 93, baseType: !460, size: 8)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1728, file: !1671, line: 94, baseType: !460, size: 8, offset: 8)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1728, file: !1671, line: 96, baseType: !1684, size: 64, offset: 16)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1698, file: !1699, line: 127, type: !1735, isLocal: false, isDefinition: true)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1473, line: 317, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1473, line: 237, size: 2720, elements: !1737)
!1737 = !{!1738, !1739, !1791, !1792, !1795, !1796, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1837, !1838, !1839, !1844, !1845, !1846, !1847, !1848, !1852, !1856, !1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1736, file: !1473, line: 238, baseType: !61, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1736, file: !1473, line: 239, baseType: !1740, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1473, line: 121, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 105, size: 480, elements: !1743)
!1743 = !{!1744, !1748, !1749, !1753, !1757, !1761, !1762, !1766, !1767, !1768, !1769, !1774, !1779, !1783, !1787}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1742, file: !1473, line: 106, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!7, !88, !88}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1742, file: !1473, line: 107, baseType: !1546, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1742, file: !1473, line: 108, baseType: !1750, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!88, !88, !61, !61}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1742, file: !1473, line: 109, baseType: !1754, size: 32, offset: 96)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!7, !88, !61}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1742, file: !1473, line: 110, baseType: !1758, size: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!7, !88, !88, !88, !61}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1742, file: !1473, line: 111, baseType: !1754, size: 32, offset: 160)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1742, file: !1473, line: 112, baseType: !1763, size: 32, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!1156, !88, !61}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1742, file: !1473, line: 113, baseType: !1754, size: 32, offset: 224)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1742, file: !1473, line: 114, baseType: !1754, size: 32, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1742, file: !1473, line: 115, baseType: !1754, size: 32, offset: 288)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1742, file: !1473, line: 116, baseType: !1770, size: 32, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!7, !88, !7, !1773, !88, !1773}
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1280, line: 50, baseType: !18)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1742, file: !1473, line: 117, baseType: !1775, size: 32, offset: 352)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!7, !88, !1778}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1742, file: !1473, line: 118, baseType: !1780, size: 32, offset: 384)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!7, !88, !88, !61}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1742, file: !1473, line: 119, baseType: !1784, size: 32, offset: 416)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!91, !88, !61}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1742, file: !1473, line: 120, baseType: !1788, size: 32, offset: 448)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!7, !88, !61, !88}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1736, file: !1473, line: 240, baseType: !88, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1736, file: !1473, line: 241, baseType: !1793, size: 32, offset: 96)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1280, line: 46, baseType: !1031)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1736, file: !1473, line: 242, baseType: !1793, size: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1736, file: !1473, line: 243, baseType: !1797, size: 928, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1473, line: 99, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 90, size: 928, elements: !1799)
!1799 = !{!1800, !1801, !1803, !1804, !1805, !1806, !1807, !1808}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1798, file: !1473, line: 91, baseType: !61, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1798, file: !1473, line: 92, baseType: !1802, size: 256, offset: 32)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !753)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1798, file: !1473, line: 93, baseType: !1802, size: 256, offset: 288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1798, file: !1473, line: 94, baseType: !1802, size: 256, offset: 544)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1798, file: !1473, line: 95, baseType: !61, size: 32, offset: 800)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1798, file: !1473, line: 96, baseType: !1794, size: 16, offset: 832)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1798, file: !1473, line: 97, baseType: !61, size: 32, offset: 864)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1798, file: !1473, line: 98, baseType: !61, size: 32, offset: 896)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1736, file: !1473, line: 244, baseType: !1802, size: 256, offset: 1088)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1736, file: !1473, line: 245, baseType: !1802, size: 256, offset: 1344)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1736, file: !1473, line: 246, baseType: !61, size: 32, offset: 1600)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1736, file: !1473, line: 247, baseType: !61, size: 32, offset: 1632)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1736, file: !1473, line: 248, baseType: !61, size: 32, offset: 1664)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1736, file: !1473, line: 249, baseType: !61, size: 32, offset: 1696)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1736, file: !1473, line: 250, baseType: !61, size: 32, offset: 1728)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1736, file: !1473, line: 252, baseType: !61, size: 32, offset: 1760)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1736, file: !1473, line: 255, baseType: !61, size: 32, offset: 1792)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1736, file: !1473, line: 256, baseType: !61, size: 32, offset: 1824)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1736, file: !1473, line: 257, baseType: !61, size: 32, offset: 1856)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1736, file: !1473, line: 261, baseType: !61, size: 32, offset: 1888)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1736, file: !1473, line: 262, baseType: !61, size: 32, offset: 1920)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1736, file: !1473, line: 263, baseType: !61, size: 32, offset: 1952)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1736, file: !1473, line: 264, baseType: !61, size: 32, offset: 1984)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1736, file: !1473, line: 265, baseType: !61, size: 32, offset: 2016)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1736, file: !1473, line: 266, baseType: !61, size: 32, offset: 2048)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1736, file: !1473, line: 267, baseType: !61, size: 32, offset: 2080)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1736, file: !1473, line: 268, baseType: !61, size: 32, offset: 2112)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1736, file: !1473, line: 270, baseType: !61, size: 32, offset: 2144)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1736, file: !1473, line: 271, baseType: !61, size: 32, offset: 2176)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1736, file: !1473, line: 272, baseType: !1831, size: 32, offset: 2208)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1473, line: 229, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 226, size: 64, elements: !1834)
!1834 = !{!1835, !1836}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1833, file: !1473, line: 227, baseType: !61, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1833, file: !1473, line: 228, baseType: !61, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1736, file: !1473, line: 273, baseType: !1712, size: 32, offset: 2240)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1736, file: !1473, line: 274, baseType: !1712, size: 32, offset: 2272)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1736, file: !1473, line: 276, baseType: !1840, size: 32, offset: 2304)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{null, !1843}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1736, file: !1473, line: 278, baseType: !61, size: 32, offset: 2336)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1736, file: !1473, line: 280, baseType: !1840, size: 32, offset: 2368)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1736, file: !1473, line: 281, baseType: !1840, size: 32, offset: 2400)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1736, file: !1473, line: 283, baseType: !61, size: 32, offset: 2432)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1736, file: !1473, line: 284, baseType: !1849, size: 32, offset: 2464)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!61, !1843}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1736, file: !1473, line: 285, baseType: !1853, size: 32, offset: 2496)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!61, !1843, !61, !61}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1736, file: !1473, line: 293, baseType: !1857, size: 32, offset: 2528)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1473, line: 162, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 159, size: 64, elements: !1860)
!1860 = !{!1861, !1862}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1859, file: !1473, line: 160, baseType: !61, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1859, file: !1473, line: 161, baseType: !61, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1736, file: !1473, line: 295, baseType: !61, size: 32, offset: 2560)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1736, file: !1473, line: 296, baseType: !61, size: 32, offset: 2592)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1736, file: !1473, line: 297, baseType: !61, size: 32, offset: 2624)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1736, file: !1473, line: 298, baseType: !1794, size: 16, offset: 2656)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1736, file: !1473, line: 302, baseType: !1794, size: 16, offset: 2672)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1736, file: !1473, line: 310, baseType: !91, size: 8, offset: 2688)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1736, file: !1473, line: 313, baseType: !91, size: 8, offset: 2696)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1698, file: !1699, line: 129, type: !61, isLocal: false, isDefinition: true)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1698, file: !1699, line: 130, type: !61, isLocal: false, isDefinition: true)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1698, file: !1699, line: 131, type: !61, isLocal: false, isDefinition: true)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1698, file: !1699, line: 132, type: !1029, isLocal: true, isDefinition: true)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1698, file: !1699, line: 136, type: !1880, isLocal: false, isDefinition: true)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 4096, elements: !1881)
!1881 = !{!1882}
!1882 = !DISubrange(count: 512)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1698, file: !1699, line: 146, type: !1885, isLocal: true, isDefinition: true)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 512, elements: !753)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1698, file: !1699, line: 152, type: !1888, isLocal: true, isDefinition: true)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1890)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1671, line: 116, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1671, line: 113, size: 64, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1891, file: !1671, line: 114, baseType: !61, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1891, file: !1671, line: 115, baseType: !61, size: 32, offset: 32)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1698, file: !1699, line: 156, type: !61, isLocal: false, isDefinition: true)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1698, file: !1699, line: 157, type: !61, isLocal: false, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1698, file: !1699, line: 160, type: !1901, isLocal: true, isDefinition: true)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1902, size: 512, elements: !753)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1473, line: 152, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 149, size: 64, elements: !1904)
!1904 = !{!1905, !1906}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1903, file: !1473, line: 150, baseType: !61, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1903, file: !1473, line: 151, baseType: !61, size: 32, offset: 32)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1698, file: !1699, line: 173, type: !61, isLocal: false, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1698, file: !1699, line: 176, type: !1741, isLocal: false, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1698, file: !1699, line: 177, type: !1913, isLocal: false, isDefinition: true)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1371, line: 193, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1371, line: 134, size: 1824, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1924, !1930, !1931, !1932, !1933, !1935, !1936, !1937, !1938, !1945, !1946, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1914, file: !1371, line: 136, baseType: !61, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1914, file: !1371, line: 137, baseType: !762, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1914, file: !1371, line: 138, baseType: !1919, size: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1455, line: 56, baseType: !1920)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 54, size: 8, elements: !1922)
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1921, file: !1455, line: 55, baseType: !460, size: 8)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1914, file: !1371, line: 139, baseType: !1925, size: 32, offset: 96)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1455, line: 46, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 44, size: 8, elements: !1928)
!1928 = !{!1929}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1927, file: !1455, line: 45, baseType: !460, size: 8)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1914, file: !1371, line: 140, baseType: !1467, size: 8, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1914, file: !1371, line: 143, baseType: !1714, size: 32, offset: 160)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1914, file: !1371, line: 144, baseType: !762, size: 32, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1914, file: !1371, line: 145, baseType: !1934, size: 32, offset: 224)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1914, file: !1371, line: 146, baseType: !762, size: 32, offset: 256)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1914, file: !1371, line: 147, baseType: !61, size: 32, offset: 288)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1914, file: !1371, line: 148, baseType: !762, size: 32, offset: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1914, file: !1371, line: 151, baseType: !1939, size: 1024, offset: 352)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1940, size: 1024, elements: !1496)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1473, line: 170, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 167, size: 64, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1941, file: !1473, line: 168, baseType: !61, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1941, file: !1473, line: 169, baseType: !61, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1914, file: !1371, line: 155, baseType: !1498, size: 32, offset: 1376)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1914, file: !1371, line: 156, baseType: !1947, size: 32, offset: 1408)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1371, line: 124, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1371, line: 90, size: 200, elements: !1950)
!1950 = !{!1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1949, file: !1371, line: 91, baseType: !460, size: 8)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1949, file: !1371, line: 92, baseType: !460, size: 8, offset: 8)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1949, file: !1371, line: 94, baseType: !460, size: 8, offset: 16)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1949, file: !1371, line: 95, baseType: !460, size: 8, offset: 24)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1949, file: !1371, line: 96, baseType: !460, size: 8, offset: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1949, file: !1371, line: 98, baseType: !460, size: 8, offset: 40)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1949, file: !1371, line: 99, baseType: !460, size: 8, offset: 48)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1949, file: !1371, line: 100, baseType: !460, size: 8, offset: 56)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1949, file: !1371, line: 101, baseType: !460, size: 8, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1949, file: !1371, line: 103, baseType: !460, size: 8, offset: 72)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1949, file: !1371, line: 104, baseType: !460, size: 8, offset: 80)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1949, file: !1371, line: 106, baseType: !460, size: 8, offset: 88)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1949, file: !1371, line: 107, baseType: !460, size: 8, offset: 96)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1949, file: !1371, line: 108, baseType: !460, size: 8, offset: 104)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1949, file: !1371, line: 109, baseType: !460, size: 8, offset: 112)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1949, file: !1371, line: 110, baseType: !460, size: 8, offset: 120)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1949, file: !1371, line: 111, baseType: !460, size: 8, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1949, file: !1371, line: 112, baseType: !460, size: 8, offset: 136)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1949, file: !1371, line: 114, baseType: !460, size: 8, offset: 144)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1949, file: !1371, line: 115, baseType: !460, size: 8, offset: 152)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1949, file: !1371, line: 118, baseType: !460, size: 8, offset: 160)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1949, file: !1371, line: 119, baseType: !460, size: 8, offset: 168)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1949, file: !1371, line: 120, baseType: !460, size: 8, offset: 176)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1949, file: !1371, line: 121, baseType: !460, size: 8, offset: 184)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1949, file: !1371, line: 122, baseType: !460, size: 8, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1914, file: !1371, line: 157, baseType: !61, size: 32, offset: 1440)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1914, file: !1371, line: 158, baseType: !1029, size: 16, offset: 1472)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1914, file: !1371, line: 159, baseType: !1029, size: 16, offset: 1488)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1914, file: !1371, line: 163, baseType: !1029, size: 16, offset: 1504)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1914, file: !1371, line: 164, baseType: !1029, size: 16, offset: 1520)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1914, file: !1371, line: 167, baseType: !460, size: 8, offset: 1536)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1914, file: !1371, line: 168, baseType: !1537, size: 24, offset: 1544)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1914, file: !1371, line: 169, baseType: !460, size: 8, offset: 1568)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1914, file: !1371, line: 170, baseType: !460, size: 8, offset: 1576)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1914, file: !1371, line: 173, baseType: !1029, size: 16, offset: 1584)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1914, file: !1371, line: 174, baseType: !61, size: 32, offset: 1600)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1914, file: !1371, line: 175, baseType: !61, size: 32, offset: 1632)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1914, file: !1371, line: 178, baseType: !91, size: 8, offset: 1664)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1914, file: !1371, line: 179, baseType: !91, size: 8, offset: 1672)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1914, file: !1371, line: 182, baseType: !1546, size: 32, offset: 1696)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1914, file: !1371, line: 186, baseType: !1546, size: 32, offset: 1728)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1914, file: !1371, line: 187, baseType: !1551, size: 32, offset: 1760)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1914, file: !1371, line: 188, baseType: !1551, size: 32, offset: 1792)
!1994 = !DIGlobalVariableExpression(var: !1995, expr: !DIExpression())
!1995 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1698, file: !1699, line: 178, type: !1996, isLocal: false, isDefinition: true)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 64, elements: !753)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1698, file: !1699, line: 179, type: !1948, isLocal: false, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1698, file: !1699, line: 204, type: !1885, isLocal: true, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1698, file: !1699, line: 205, type: !2003, isLocal: false, isDefinition: true)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2004, line: 93, baseType: !2005)
!2004 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2004, line: 83, size: 1056, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !2005, file: !2004, line: 84, baseType: !61, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2005, file: !2004, line: 85, baseType: !1740, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2005, file: !2004, line: 86, baseType: !88, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2005, file: !2004, line: 87, baseType: !1797, size: 928, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !2005, file: !2004, line: 92, baseType: !91, size: 8, offset: 1024)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1698, file: !1699, line: 208, type: !1913, isLocal: false, isDefinition: true)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "nor_list", scope: !1698, file: !1699, line: 114, type: !2016, isLocal: true, isDefinition: true)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1671, line: 125, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1671, line: 119, size: 1088, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2026}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !2019, file: !1671, line: 120, baseType: !1029, size: 16)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !2019, file: !1671, line: 121, baseType: !1029, size: 16, offset: 16)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !2019, file: !1671, line: 122, baseType: !61, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !2019, file: !1671, line: 123, baseType: !2025, size: 512, offset: 64)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 512, elements: !753)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2019, file: !1671, line: 124, baseType: !1901, size: 512, offset: 576)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1698, file: !2029, line: 42, type: !2030, isLocal: true, isDefinition: true)
!2029 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2031)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1699, line: 66, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1699, line: 63, size: 5600, elements: !2033)
!2033 = !{!2034, !2041}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2032, file: !1699, line: 64, baseType: !2035, size: 96)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1603, line: 152, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1603, line: 144, size: 96, elements: !2037)
!2037 = !{!2038, !2039, !2040}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2036, file: !1603, line: 145, baseType: !1664, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2036, file: !1603, line: 146, baseType: !1666, size: 16, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2036, file: !1603, line: 150, baseType: !1668, size: 32, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2032, file: !1699, line: 65, baseType: !2042, size: 5504, offset: 96)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1671, line: 132, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1671, line: 128, size: 5504, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2043, file: !1671, line: 129, baseType: !18, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2043, file: !1671, line: 130, baseType: !18, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2043, file: !1671, line: 131, baseType: !2048, size: 5440, offset: 64)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 5440, elements: !1121)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1455, line: 79, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 77, size: 8, elements: !2052)
!2052 = !{!2053}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2051, file: !1455, line: 78, baseType: !460, size: 8)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2055 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2056, file: !2057, line: 82, type: !7, isLocal: true, isDefinition: true)
!2056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2057, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2058, retainedTypes: !2064, globals: !2109, splitDebugInlining: false, nameTableKind: None)
!2057 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2058 = !{!1395, !1279, !2059}
!2059 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1396, line: 123, baseType: !18, size: 32, elements: !2060)
!2060 = !{!2061, !2062, !2063}
!2061 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2062 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2063 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2064 = !{!61, !2065, !88, !762}
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1473, line: 190, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 173, size: 1376, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2077, !2083, !2084, !2091, !2092, !2099, !2100, !2101, !2102}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2067, file: !1473, line: 174, baseType: !61, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2067, file: !1473, line: 175, baseType: !1712, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2067, file: !1473, line: 176, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1455, line: 56, baseType: !2073)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 54, size: 8, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2074, file: !1455, line: 55, baseType: !460, size: 8)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2067, file: !1473, line: 177, baseType: !2078, size: 32, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1455, line: 46, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 44, size: 8, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2080, file: !1455, line: 45, baseType: !460, size: 8)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2067, file: !1473, line: 178, baseType: !1467, size: 8, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2067, file: !1473, line: 180, baseType: !2085, size: 32, offset: 160)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1473, line: 146, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 143, size: 64, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2087, file: !1473, line: 144, baseType: !61, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2087, file: !1473, line: 145, baseType: !61, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2067, file: !1473, line: 181, baseType: !1712, size: 32, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2067, file: !1473, line: 182, baseType: !2093, size: 32, offset: 224)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1473, line: 152, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 149, size: 64, elements: !2096)
!2096 = !{!2097, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2095, file: !1473, line: 150, baseType: !61, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2095, file: !1473, line: 151, baseType: !61, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2067, file: !1473, line: 183, baseType: !1712, size: 32, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2067, file: !1473, line: 184, baseType: !61, size: 32, offset: 288)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2067, file: !1473, line: 185, baseType: !1712, size: 32, offset: 320)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2067, file: !1473, line: 188, baseType: !2103, size: 1024, offset: 352)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2104, size: 1024, elements: !1496)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1473, line: 170, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 167, size: 64, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2105, file: !1473, line: 168, baseType: !61, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2105, file: !1473, line: 169, baseType: !61, size: 32, offset: 32)
!2109 = !{!2110, !2111}
!2110 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2056, file: !2057, line: 432, type: !2113, isLocal: true, isDefinition: true)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1396, line: 119, baseType: !1395)
!2114 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2117, file: !2118, line: 60, type: !61, isLocal: false, isDefinition: true)
!2117 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2118, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2119, retainedTypes: !2127, globals: !2128, splitDebugInlining: false, nameTableKind: None)
!2118 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2119 = !{!2120}
!2120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2126}
!2122 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2123 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2124 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2125 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2126 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2127 = !{!88, !61}
!2128 = !{!2115, !2129, !2131, !2133, !2135, !2137, !2191, !2193}
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2117, file: !2118, line: 61, type: !61, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2117, file: !2118, line: 107, type: !61, isLocal: false, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2117, file: !2118, line: 132, type: !91, isLocal: false, isDefinition: true)
!2135 = !DIGlobalVariableExpression(var: !2136, expr: !DIExpression())
!2136 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2117, file: !2118, line: 133, type: !91, isLocal: false, isDefinition: true)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "replaced", scope: !2139, file: !2118, line: 139, type: !61, isLocal: true, isDefinition: true)
!2139 = distinct !DISubprogram(name: "LookupAddress", scope: !2118, file: !2118, line: 135, type: !2140, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !2142)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!61, !88, !61}
!2142 = !{!2143, !2144, !2145, !2190}
!2143 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2139, file: !2118, line: 135, type: !88)
!2144 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2139, file: !2118, line: 135, type: !61)
!2145 = !DILocalVariable(name: "D", scope: !2139, file: !2118, line: 137, type: !2146)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1473, line: 190, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 173, size: 1376, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2158, !2164, !2165, !2172, !2173, !2180, !2181, !2182, !2183}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2148, file: !1473, line: 174, baseType: !61, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2148, file: !1473, line: 175, baseType: !1712, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2148, file: !1473, line: 176, baseType: !2153, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1455, line: 56, baseType: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 54, size: 8, elements: !2156)
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2155, file: !1455, line: 55, baseType: !460, size: 8)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2148, file: !1473, line: 177, baseType: !2159, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1455, line: 46, baseType: !2160)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 44, size: 8, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2161, file: !1455, line: 45, baseType: !460, size: 8)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2148, file: !1473, line: 178, baseType: !1467, size: 8, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2148, file: !1473, line: 180, baseType: !2166, size: 32, offset: 160)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1473, line: 146, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 143, size: 64, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2168, file: !1473, line: 144, baseType: !61, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2168, file: !1473, line: 145, baseType: !61, size: 32, offset: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2148, file: !1473, line: 181, baseType: !1712, size: 32, offset: 192)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2148, file: !1473, line: 182, baseType: !2174, size: 32, offset: 224)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1473, line: 152, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 149, size: 64, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2176, file: !1473, line: 150, baseType: !61, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2176, file: !1473, line: 151, baseType: !61, size: 32, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2148, file: !1473, line: 183, baseType: !1712, size: 32, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2148, file: !1473, line: 184, baseType: !61, size: 32, offset: 288)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2148, file: !1473, line: 185, baseType: !1712, size: 32, offset: 320)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2148, file: !1473, line: 188, baseType: !2184, size: 1024, offset: 352)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 1024, elements: !1496)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1473, line: 170, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 167, size: 64, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2186, file: !1473, line: 168, baseType: !61, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2186, file: !1473, line: 169, baseType: !61, size: 32, offset: 32)
!2190 = !DILocalVariable(name: "addr", scope: !2139, file: !2118, line: 138, type: !61)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2139, file: !2118, line: 140, type: !61, isLocal: true, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2139, file: !2118, line: 141, type: !61, isLocal: true, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2197, file: !2198, line: 44, type: !2344, isLocal: false, isDefinition: true)
!2197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2199, retainedTypes: !2205, globals: !2206, splitDebugInlining: false, nameTableKind: None)
!2198 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2199 = !{!2200}
!2200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2201, line: 40, baseType: !18, size: 32, elements: !2202)
!2201 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2202 = !{!2203, !2204}
!2203 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2204 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2205 = !{!1252}
!2206 = !{!2195, !2207, !2209, !2211, !2213, !2314, !2316, !2318, !2320, !2322, !2324, !2326, !2328, !2330, !2332, !2334, !2336, !2338, !2340, !2342}
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2197, file: !2198, line: 65, type: !61, isLocal: false, isDefinition: true)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2197, file: !2198, line: 66, type: !61, isLocal: false, isDefinition: true)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2197, file: !2198, line: 67, type: !61, isLocal: false, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "emi_register", scope: !2197, file: !2198, line: 83, type: !2215, isLocal: false, isDefinition: true)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2218)
!2218 = !{!2219, !2223, !2224, !2225, !2226, !2230, !2231, !2233, !2234, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2217, file: !56, line: 2448, baseType: !2220, size: 768)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 768, elements: !2221)
!2221 = !{!2222}
!2222 = !DISubrange(count: 96)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2217, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2217, file: !56, line: 2450, baseType: !1105, size: 96, offset: 800)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2217, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2217, file: !56, line: 2452, baseType: !2227, size: 160, offset: 928)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 160, elements: !2228)
!2228 = !{!2229}
!2229 = !DISubrange(count: 20)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2217, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2217, file: !56, line: 2454, baseType: !2232, size: 32, offset: 1120)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 32, elements: !463)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2217, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2217, file: !56, line: 2456, baseType: !2235, size: 480, offset: 1184)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 480, elements: !2236)
!2236 = !{!2237}
!2237 = !DISubrange(count: 60)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2217, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2217, file: !56, line: 2458, baseType: !2232, size: 32, offset: 1696)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2217, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2217, file: !56, line: 2460, baseType: !2232, size: 32, offset: 1760)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2217, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2217, file: !56, line: 2462, baseType: !2227, size: 160, offset: 1824)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2217, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2217, file: !56, line: 2464, baseType: !2232, size: 32, offset: 2016)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2217, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2217, file: !56, line: 2466, baseType: !2232, size: 32, offset: 2080)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2217, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2217, file: !56, line: 2468, baseType: !2232, size: 32, offset: 2144)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2217, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2217, file: !56, line: 2470, baseType: !2252, size: 224, offset: 2208)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 224, elements: !2253)
!2253 = !{!2254}
!2254 = !DISubrange(count: 28)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2217, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2217, file: !56, line: 2472, baseType: !2232, size: 32, offset: 2464)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2217, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2217, file: !56, line: 2474, baseType: !1105, size: 96, offset: 2528)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2217, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2217, file: !56, line: 2476, baseType: !2232, size: 32, offset: 2656)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2217, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2217, file: !56, line: 2478, baseType: !2232, size: 32, offset: 2720)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2217, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2217, file: !56, line: 2480, baseType: !2232, size: 32, offset: 2784)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2217, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2217, file: !56, line: 2482, baseType: !1105, size: 96, offset: 2848)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2217, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2217, file: !56, line: 2484, baseType: !2232, size: 32, offset: 2976)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2217, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2217, file: !56, line: 2486, baseType: !2232, size: 32, offset: 3040)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2217, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2217, file: !56, line: 2488, baseType: !2227, size: 160, offset: 3104)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2217, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2217, file: !56, line: 2490, baseType: !2232, size: 32, offset: 3296)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2217, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2217, file: !56, line: 2492, baseType: !2277, size: 736, offset: 3360)
!2277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 736, elements: !2278)
!2278 = !{!2279}
!2279 = !DISubrange(count: 92)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2217, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2217, file: !56, line: 2494, baseType: !2232, size: 32, offset: 4128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2217, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2217, file: !56, line: 2496, baseType: !2232, size: 32, offset: 4192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2217, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2217, file: !56, line: 2498, baseType: !2232, size: 32, offset: 4256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2217, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2217, file: !56, line: 2500, baseType: !2232, size: 32, offset: 4320)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2217, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2217, file: !56, line: 2502, baseType: !2232, size: 32, offset: 4384)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2217, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2217, file: !56, line: 2504, baseType: !2232, size: 32, offset: 4448)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2217, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2217, file: !56, line: 2506, baseType: !2232, size: 32, offset: 4512)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2217, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2217, file: !56, line: 2508, baseType: !2232, size: 32, offset: 4576)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2217, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2217, file: !56, line: 2510, baseType: !2235, size: 480, offset: 4640)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2217, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2217, file: !56, line: 2512, baseType: !2300, size: 992, offset: 5152)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 992, elements: !2301)
!2301 = !{!2302}
!2302 = !DISubrange(count: 124)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2217, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2217, file: !56, line: 2514, baseType: !2232, size: 32, offset: 6176)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2217, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2217, file: !56, line: 2516, baseType: !2232, size: 32, offset: 6240)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2217, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2217, file: !56, line: 2518, baseType: !2232, size: 32, offset: 6304)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2217, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2217, file: !56, line: 2520, baseType: !2227, size: 160, offset: 6368)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2217, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2217, file: !56, line: 2522, baseType: !2227, size: 160, offset: 6560)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2217, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2197, file: !2198, line: 485, type: !60, isLocal: false, isDefinition: true)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2197, file: !2198, line: 68, type: !61, isLocal: false, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2197, file: !2198, line: 69, type: !61, isLocal: false, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2197, file: !2198, line: 70, type: !61, isLocal: false, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2197, file: !2198, line: 71, type: !61, isLocal: false, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2197, file: !2198, line: 72, type: !61, isLocal: false, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2197, file: !2198, line: 73, type: !61, isLocal: false, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2197, file: !2198, line: 74, type: !61, isLocal: false, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2197, file: !2198, line: 75, type: !61, isLocal: false, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2197, file: !2198, line: 76, type: !61, isLocal: false, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2197, file: !2198, line: 77, type: !61, isLocal: false, isDefinition: true)
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2197, file: !2198, line: 78, type: !61, isLocal: false, isDefinition: true)
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2197, file: !2198, line: 79, type: !61, isLocal: false, isDefinition: true)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2197, file: !2198, line: 80, type: !61, isLocal: false, isDefinition: true)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2197, file: !2198, line: 84, type: !2216, isLocal: false, isDefinition: true)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2345, size: 416, elements: !76)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2201, line: 60, baseType: !2346)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2201, line: 45, size: 416, elements: !2347)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2346, file: !2201, line: 46, baseType: !61, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2346, file: !2201, line: 47, baseType: !61, size: 32, offset: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2346, file: !2201, line: 48, baseType: !61, size: 32, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2346, file: !2201, line: 49, baseType: !61, size: 32, offset: 96)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2346, file: !2201, line: 50, baseType: !61, size: 32, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2346, file: !2201, line: 51, baseType: !61, size: 32, offset: 160)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2346, file: !2201, line: 52, baseType: !61, size: 32, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2346, file: !2201, line: 53, baseType: !61, size: 32, offset: 224)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2346, file: !2201, line: 54, baseType: !61, size: 32, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2346, file: !2201, line: 55, baseType: !61, size: 32, offset: 288)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2346, file: !2201, line: 56, baseType: !61, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2346, file: !2201, line: 57, baseType: !61, size: 32, offset: 352)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2346, file: !2201, line: 58, baseType: !61, size: 32, offset: 384)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2363, file: !2364, line: 48, type: !2372, isLocal: false, isDefinition: true)
!2363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2364, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2365, globals: !2371, splitDebugInlining: false, nameTableKind: None)
!2364 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2365 = !{!2366}
!2366 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1197, line: 100, baseType: !18, size: 32, elements: !2367)
!2367 = !{!2368, !2369, !2370}
!2368 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2369 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2370 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2371 = !{!2361}
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1197, line: 104, baseType: !2366)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "test_length", scope: !2375, file: !2376, line: 50, type: !60, isLocal: false, isDefinition: true)
!2375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2377, globals: !2378, splitDebugInlining: false, nameTableKind: None)
!2376 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2377 = !{!631, !677, !693, !699, !703, !348, !885, !879, !871}
!2378 = !{!2373, !2379, !2383}
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "i2c_send_data", scope: !2375, file: !2376, line: 51, type: !2381, isLocal: false, isDefinition: true)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 256, elements: !330)
!2382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "i2c_receive_data", scope: !2375, file: !2376, line: 54, type: !2385, isLocal: false, isDefinition: true)
!2385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 256, elements: !330)
!2386 = !DIGlobalVariableExpression(var: !2387, expr: !DIExpression())
!2387 = distinct !DIGlobalVariable(name: "heap_end", scope: !2388, file: !2389, line: 69, type: !2394, isLocal: true, isDefinition: true)
!2388 = distinct !DISubprogram(name: "_sbrk_r", scope: !2389, file: !2389, line: 66, type: !2390, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !2585)
!2389 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!2392, !2395, !2580}
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2393, line: 123, baseType: !2394)
!2393 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2397, line: 377, size: 1920, elements: !2398)
!2397 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2398 = !{!2399, !2400, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2479, !2500, !2504, !2505, !2506, !2507, !2517, !2530, !2531, !2536, !2554, !2555, !2562, !2563, !2579}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2396, file: !2397, line: 381, baseType: !7, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2396, file: !2397, line: 386, baseType: !2401, size: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2397, line: 292, baseType: !2403)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2397, line: 186, size: 832, elements: !2404)
!2404 = !{!2405, !2407, !2408, !2409, !2410, !2411, !2416, !2417, !2418, !2419, !2423, !2428, !2435, !2439, !2440, !2441, !2442, !2444, !2446, !2447, !2448, !2450, !2456, !2469}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2403, file: !2397, line: 187, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2403, file: !2397, line: 188, baseType: !7, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2403, file: !2397, line: 189, baseType: !7, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2403, file: !2397, line: 190, baseType: !1651, size: 16, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2403, file: !2397, line: 191, baseType: !1651, size: 16, offset: 112)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2403, file: !2397, line: 192, baseType: !2412, size: 64, offset: 128)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2397, line: 122, size: 64, elements: !2413)
!2413 = !{!2414, !2415}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2412, file: !2397, line: 123, baseType: !2406, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2412, file: !2397, line: 124, baseType: !7, size: 32, offset: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2403, file: !2397, line: 193, baseType: !7, size: 32, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2403, file: !2397, line: 196, baseType: !2395, size: 32, offset: 224)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2403, file: !2397, line: 200, baseType: !88, size: 32, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2403, file: !2397, line: 202, baseType: !2420, size: 32, offset: 288)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!7, !2395, !88, !2394, !7}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2403, file: !2397, line: 204, baseType: !2424, size: 32, offset: 320)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!7, !2395, !88, !2427, !7}
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2403, file: !2397, line: 207, baseType: !2429, size: 32, offset: 352)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!2432, !2395, !88, !2432, !7}
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2433, line: 116, baseType: !2434)
!2433 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2434 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2403, file: !2397, line: 208, baseType: !2436, size: 32, offset: 384)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 32)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!7, !2395, !88}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2403, file: !2397, line: 211, baseType: !2412, size: 64, offset: 416)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2403, file: !2397, line: 212, baseType: !2406, size: 32, offset: 480)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2403, file: !2397, line: 213, baseType: !7, size: 32, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2403, file: !2397, line: 216, baseType: !2443, size: 24, offset: 544)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 24, elements: !965)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2403, file: !2397, line: 217, baseType: !2445, size: 8, offset: 568)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 8, elements: !76)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2403, file: !2397, line: 220, baseType: !2412, size: 64, offset: 576)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2403, file: !2397, line: 223, baseType: !7, size: 32, offset: 640)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2403, file: !2397, line: 224, baseType: !2449, size: 32, offset: 672)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2433, line: 46, baseType: !2434)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2403, file: !2397, line: 231, baseType: !2451, size: 32, offset: 704)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2397, line: 35, baseType: !2452)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2453, line: 34, baseType: !2454)
!2453 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2453, line: 33, flags: DIFlagFwdDecl)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2403, file: !2397, line: 233, baseType: !2457, size: 64, offset: 736)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2433, line: 170, baseType: !2458)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2433, line: 162, size: 64, elements: !2459)
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2458, file: !2433, line: 164, baseType: !7, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2458, file: !2433, line: 169, baseType: !2462, size: 32, offset: 32)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2458, file: !2433, line: 165, size: 32, elements: !2463)
!2463 = !{!2464, !2467}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2462, file: !2433, line: 167, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2466, line: 116, baseType: !7)
!2466 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2462, file: !2433, line: 168, baseType: !2468, size: 32)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 32, elements: !463)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2403, file: !2397, line: 234, baseType: !7, size: 32, offset: 800)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2396, file: !2397, line: 386, baseType: !2401, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2396, file: !2397, line: 386, baseType: !2401, size: 32, offset: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2396, file: !2397, line: 388, baseType: !7, size: 32, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2396, file: !2397, line: 390, baseType: !2394, size: 32, offset: 160)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2396, file: !2397, line: 392, baseType: !7, size: 32, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2396, file: !2397, line: 394, baseType: !7, size: 32, offset: 224)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2396, file: !2397, line: 395, baseType: !2477, size: 32, offset: 256)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2478 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2397, line: 45, flags: DIFlagFwdDecl)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2396, file: !2397, line: 397, baseType: !2480, size: 32, offset: 288)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2397, line: 349, size: 128, elements: !2482)
!2482 = !{!2483, !2496, !2497, !2498}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2481, file: !2397, line: 352, baseType: !2484, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2397, line: 52, size: 192, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2485, file: !2397, line: 54, baseType: !2484, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2485, file: !2397, line: 55, baseType: !7, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2485, file: !2397, line: 55, baseType: !7, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2485, file: !2397, line: 55, baseType: !7, size: 32, offset: 96)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2485, file: !2397, line: 55, baseType: !7, size: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2485, file: !2397, line: 56, baseType: !2493, size: 32, offset: 160)
!2493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2494, size: 32, elements: !76)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2397, line: 22, baseType: !2495)
!2495 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2481, file: !2397, line: 353, baseType: !7, size: 32, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2481, file: !2397, line: 354, baseType: !2484, size: 32, offset: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2481, file: !2397, line: 355, baseType: !2499, size: 32, offset: 96)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2396, file: !2397, line: 399, baseType: !2501, size: 32, offset: 320)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{null, !2395}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2396, file: !2397, line: 401, baseType: !7, size: 32, offset: 352)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2396, file: !2397, line: 404, baseType: !7, size: 32, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2396, file: !2397, line: 405, baseType: !2394, size: 32, offset: 416)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2396, file: !2397, line: 407, baseType: !2508, size: 32, offset: 448)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2397, line: 324, size: 192, elements: !2510)
!2510 = !{!2511, !2513, !2514, !2515}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2509, file: !2397, line: 325, baseType: !2512, size: 48)
!2512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 48, elements: !965)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2509, file: !2397, line: 326, baseType: !2512, size: 48, offset: 48)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2509, file: !2397, line: 327, baseType: !1031, size: 16, offset: 96)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2509, file: !2397, line: 330, baseType: !2516, size: 64, offset: 128)
!2516 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2396, file: !2397, line: 408, baseType: !2518, size: 32, offset: 480)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2397, line: 60, size: 288, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2519, file: !2397, line: 62, baseType: !7, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2519, file: !2397, line: 63, baseType: !7, size: 32, offset: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2519, file: !2397, line: 64, baseType: !7, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2519, file: !2397, line: 65, baseType: !7, size: 32, offset: 96)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2519, file: !2397, line: 66, baseType: !7, size: 32, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2519, file: !2397, line: 67, baseType: !7, size: 32, offset: 160)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2519, file: !2397, line: 68, baseType: !7, size: 32, offset: 192)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2519, file: !2397, line: 69, baseType: !7, size: 32, offset: 224)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2519, file: !2397, line: 70, baseType: !7, size: 32, offset: 256)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2396, file: !2397, line: 409, baseType: !2394, size: 32, offset: 512)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2396, file: !2397, line: 412, baseType: !2532, size: 32, offset: 544)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{null, !7}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2396, file: !2397, line: 416, baseType: !2537, size: 32, offset: 576)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2397, line: 90, size: 1120, elements: !2539)
!2539 = !{!2540, !2541, !2542, !2545}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2538, file: !2397, line: 91, baseType: !2537, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2538, file: !2397, line: 92, baseType: !7, size: 32, offset: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2538, file: !2397, line: 93, baseType: !2543, size: 1024, offset: 64)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2544, size: 1024, elements: !330)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2538, file: !2397, line: 94, baseType: !2546, size: 32, offset: 1088)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2397, line: 79, size: 2112, elements: !2548)
!2548 = !{!2549, !2551, !2552, !2553}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2547, file: !2397, line: 80, baseType: !2550, size: 1024)
!2550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2547, file: !2397, line: 81, baseType: !2550, size: 1024, offset: 1024)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2547, file: !2397, line: 83, baseType: !2494, size: 32, offset: 2048)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2547, file: !2397, line: 86, baseType: !2494, size: 32, offset: 2080)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2396, file: !2397, line: 417, baseType: !2538, size: 1120, offset: 608)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2396, file: !2397, line: 420, baseType: !2556, size: 96, offset: 1728)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2397, line: 296, size: 96, elements: !2557)
!2557 = !{!2558, !2560, !2561}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2556, file: !2397, line: 298, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2556, file: !2397, line: 299, baseType: !7, size: 32, offset: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2556, file: !2397, line: 300, baseType: !2401, size: 32, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2396, file: !2397, line: 421, baseType: !2401, size: 32, offset: 1824)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2396, file: !2397, line: 422, baseType: !2564, size: 32, offset: 1856)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 32)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2397, line: 359, size: 640, elements: !2566)
!2566 = !{!2567, !2568, !2569, !2570, !2571, !2573, !2574, !2575, !2576, !2577, !2578}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2565, file: !2397, line: 362, baseType: !2394, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2565, file: !2397, line: 363, baseType: !2457, size: 64, offset: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2565, file: !2397, line: 364, baseType: !2457, size: 64, offset: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2565, file: !2397, line: 365, baseType: !2457, size: 64, offset: 160)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2565, file: !2397, line: 366, baseType: !2572, size: 64, offset: 224)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 64, elements: !753)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2565, file: !2397, line: 367, baseType: !7, size: 32, offset: 288)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2565, file: !2397, line: 368, baseType: !2457, size: 64, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2565, file: !2397, line: 369, baseType: !2457, size: 64, offset: 384)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2565, file: !2397, line: 370, baseType: !2457, size: 64, offset: 448)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2565, file: !2397, line: 371, baseType: !2457, size: 64, offset: 512)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2565, file: !2397, line: 372, baseType: !2457, size: 64, offset: 576)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2396, file: !2397, line: 423, baseType: !2394, size: 32, offset: 1888)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2466, line: 46, baseType: !18)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2583, globals: !2584, splitDebugInlining: false, nameTableKind: None)
!2582 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2583 = !{!2394, !2392}
!2584 = !{!2386}
!2585 = !{!2586, !2587, !2588, !2589}
!2586 = !DILocalVariable(name: "r", arg: 1, scope: !2388, file: !2389, line: 66, type: !2395)
!2587 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2388, file: !2389, line: 66, type: !2580)
!2588 = !DILocalVariable(name: "prev_heap_end", scope: !2388, file: !2389, line: 70, type: !2394)
!2589 = !DILocalVariable(name: "stack", scope: !2388, file: !2389, line: 71, type: !2394)
!2590 = !DIGlobalVariableExpression(var: !2591, expr: !DIExpression())
!2591 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2592, file: !2593, line: 52, type: !60, isLocal: true, isDefinition: true)
!2592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2594, globals: !2697, splitDebugInlining: false, nameTableKind: None)
!2593 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2594 = !{!2595, !2603, !61, !2648, !2653, !2678}
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1095, line: 656, baseType: !2597)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 650, size: 128, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2597, file: !1095, line: 652, baseType: !60, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2597, file: !1095, line: 653, baseType: !60, size: 32, offset: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2597, file: !1095, line: 654, baseType: !60, size: 32, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2597, file: !1095, line: 655, baseType: !272, size: 32, offset: 96)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2617, !2618, !2622, !2623, !2625, !2626, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2645, !2646, !2647}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2605, file: !56, line: 1922, baseType: !60, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2605, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2605, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2605, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2605, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2605, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2605, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2605, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2605, file: !56, line: 1930, baseType: !2616, size: 768, offset: 256)
!2616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1134)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2605, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2605, file: !56, line: 1932, baseType: !2619, size: 992, offset: 1056)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2620)
!2620 = !{!2621}
!2621 = !DISubrange(count: 31)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2605, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2605, file: !56, line: 1934, baseType: !2624, size: 416, offset: 2080)
!2624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !773)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2605, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2605, file: !56, line: 1936, baseType: !2627, size: 1568, offset: 2528)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2628)
!2628 = !{!2629}
!2629 = !DISubrange(count: 49)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2605, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2605, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2605, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2605, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2605, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2605, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2605, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2605, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2605, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2605, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2605, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2605, file: !56, line: 1948, baseType: !2642, size: 3744, offset: 4448)
!2642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2643)
!2643 = !{!2644}
!2644 = !DISubrange(count: 117)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2605, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2605, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2605, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2650)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2651)
!2651 = !{!2652}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2650, file: !56, line: 2157, baseType: !60, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1095, line: 418, baseType: !2655)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 395, size: 1120, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2655, file: !1095, line: 397, baseType: !272, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2655, file: !1095, line: 398, baseType: !60, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2655, file: !1095, line: 399, baseType: !60, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2655, file: !1095, line: 400, baseType: !60, size: 32, offset: 96)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2655, file: !1095, line: 401, baseType: !60, size: 32, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2655, file: !1095, line: 402, baseType: !60, size: 32, offset: 160)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2655, file: !1095, line: 403, baseType: !1105, size: 96, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2655, file: !1095, line: 404, baseType: !60, size: 32, offset: 288)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2655, file: !1095, line: 405, baseType: !60, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2655, file: !1095, line: 406, baseType: !60, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2655, file: !1095, line: 407, baseType: !60, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2655, file: !1095, line: 408, baseType: !60, size: 32, offset: 416)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2655, file: !1095, line: 409, baseType: !60, size: 32, offset: 448)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2655, file: !1095, line: 410, baseType: !60, size: 32, offset: 480)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2655, file: !1095, line: 411, baseType: !1114, size: 64, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2655, file: !1095, line: 412, baseType: !272, size: 32, offset: 576)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2655, file: !1095, line: 413, baseType: !272, size: 32, offset: 608)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2655, file: !1095, line: 414, baseType: !1118, size: 128, offset: 640)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2655, file: !1095, line: 415, baseType: !1120, size: 160, offset: 768)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2655, file: !1095, line: 416, baseType: !1124, size: 160, offset: 928)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2655, file: !1095, line: 417, baseType: !60, size: 32, offset: 1088)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2680)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2681)
!2681 = !{!2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2680, file: !56, line: 261, baseType: !60, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2680, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2680, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2680, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2680, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2680, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2680, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2680, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2680, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2680, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2680, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2680, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2680, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2680, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2680, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2697 = !{!2698, !2590}
!2698 = !DIGlobalVariableExpression(var: !2699, expr: !DIExpression())
!2699 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2592, file: !2593, line: 50, type: !61, isLocal: false, isDefinition: true)
!2700 = !DIGlobalVariableExpression(var: !2701, expr: !DIExpression())
!2701 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2702, file: !2707, line: 4, type: !2713, isLocal: false, isDefinition: true)
!2702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2704, splitDebugInlining: false, nameTableKind: None)
!2703 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2704 = !{!2700, !2705, !2711}
!2705 = !DIGlobalVariableExpression(var: !2706, expr: !DIExpression())
!2706 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2702, file: !2707, line: 5, type: !2708, isLocal: false, isDefinition: true)
!2707 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 88, elements: !2709)
!2709 = !{!2710}
!2710 = !DISubrange(count: 11)
!2711 = !DIGlobalVariableExpression(var: !2712, expr: !DIExpression())
!2712 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2702, file: !2707, line: 6, type: !2708, isLocal: false, isDefinition: true)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 248, elements: !2620)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2716, retainedTypes: !2735, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2716 = !{!2120, !245, !259, !944, !2717, !254, !157}
!2717 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2718)
!2718 = !{!2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734}
!2719 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2720 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2721 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2722 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2723 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2724 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2725 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2726 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2727 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2728 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2729 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2730 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2731 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2732 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2733 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2734 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2735 = !{!61, !88, !307}
!2736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2738, retainedTypes: !2739, splitDebugInlining: false, nameTableKind: None)
!2737 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2738 = !{!693, !699, !703, !786}
!2739 = !{!460}
!2740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2741, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2742, retainedTypes: !2743, splitDebugInlining: false, nameTableKind: None)
!2741 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2742 = !{!168, !715}
!2743 = !{!862, !2744, !61, !2769, !1156}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1095, line: 418, baseType: !2746)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 395, size: 1120, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2746, file: !1095, line: 397, baseType: !272, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2746, file: !1095, line: 398, baseType: !60, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2746, file: !1095, line: 399, baseType: !60, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2746, file: !1095, line: 400, baseType: !60, size: 32, offset: 96)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2746, file: !1095, line: 401, baseType: !60, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2746, file: !1095, line: 402, baseType: !60, size: 32, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2746, file: !1095, line: 403, baseType: !1105, size: 96, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2746, file: !1095, line: 404, baseType: !60, size: 32, offset: 288)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2746, file: !1095, line: 405, baseType: !60, size: 32, offset: 320)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2746, file: !1095, line: 406, baseType: !60, size: 32, offset: 352)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2746, file: !1095, line: 407, baseType: !60, size: 32, offset: 384)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2746, file: !1095, line: 408, baseType: !60, size: 32, offset: 416)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2746, file: !1095, line: 409, baseType: !60, size: 32, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2746, file: !1095, line: 410, baseType: !60, size: 32, offset: 480)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2746, file: !1095, line: 411, baseType: !1114, size: 64, offset: 512)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2746, file: !1095, line: 412, baseType: !272, size: 32, offset: 576)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2746, file: !1095, line: 413, baseType: !272, size: 32, offset: 608)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2746, file: !1095, line: 414, baseType: !1118, size: 128, offset: 640)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2746, file: !1095, line: 415, baseType: !1120, size: 160, offset: 768)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2746, file: !1095, line: 416, baseType: !1124, size: 160, offset: 928)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2746, file: !1095, line: 417, baseType: !60, size: 32, offset: 1088)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1095, line: 378, baseType: !2771)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 363, size: 28704, elements: !2772)
!2772 = !{!2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2771, file: !1095, line: 365, baseType: !1131, size: 256)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2771, file: !1095, line: 366, baseType: !1133, size: 768, offset: 256)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2771, file: !1095, line: 367, baseType: !1131, size: 256, offset: 1024)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2771, file: !1095, line: 368, baseType: !1133, size: 768, offset: 1280)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2771, file: !1095, line: 369, baseType: !1131, size: 256, offset: 2048)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2771, file: !1095, line: 370, baseType: !1133, size: 768, offset: 2304)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2771, file: !1095, line: 371, baseType: !1131, size: 256, offset: 3072)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2771, file: !1095, line: 372, baseType: !1133, size: 768, offset: 3328)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2771, file: !1095, line: 373, baseType: !1131, size: 256, offset: 4096)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2771, file: !1095, line: 374, baseType: !1144, size: 1792, offset: 4352)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2771, file: !1095, line: 375, baseType: !1148, size: 1920, offset: 6144)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2771, file: !1095, line: 376, baseType: !1152, size: 20608, offset: 8064)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2771, file: !1095, line: 377, baseType: !60, size: 32, offset: 28672)
!2786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2787 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2789 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2790 = !{!"Ubuntu clang version 14.0.6"}
!2791 = !{i32 7, !"Dwarf Version", i32 2}
!2792 = !{i32 2, !"Debug Info Version", i32 3}
!2793 = !{i32 1, !"wchar_size", i32 4}
!2794 = !{i32 1, !"min_enum_size", i32 4}
!2795 = !{i32 1, !"branch-target-enforcement", i32 0}
!2796 = !{i32 1, !"sign-return-address", i32 0}
!2797 = !{i32 1, !"sign-return-address-all", i32 0}
!2798 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2799 = !{i32 7, !"frame-pointer", i32 2}
!2800 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2801, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2804)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!2803}
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2804 = !{!2805, !2807}
!2805 = !DILocalVariable(name: "region", scope: !2800, file: !3, line: 55, type: !2806)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2807 = !DILocalVariable(name: "irq_flag", scope: !2800, file: !3, line: 56, type: !61)
!2808 = !DILocation(line: 59, column: 16, scope: !2800)
!2809 = !DILocation(line: 0, scope: !2800)
!2810 = !DILocation(line: 62, column: 9, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 62, column: 9)
!2812 = !{i8 0, i8 2}
!2813 = !DILocation(line: 62, column: 9, scope: !2800)
!2814 = !DILocation(line: 64, column: 9, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 62, column: 39)
!2816 = !DILocation(line: 66, column: 9, scope: !2815)
!2817 = !DILocation(line: 69, column: 24, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 67, column: 12)
!2819 = !DILocation(line: 72, column: 9, scope: !2818)
!2820 = !DILocation(line: 77, column: 5, scope: !2800)
!2821 = !DILocation(line: 80, column: 22, scope: !2800)
!2822 = !DILocation(line: 81, column: 28, scope: !2800)
!2823 = !DILocation(line: 84, column: 19, scope: !2800)
!2824 = !DILocation(line: 85, column: 23, scope: !2800)
!2825 = !DILocation(line: 88, column: 5, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 88, column: 5)
!2827 = !DILocation(line: 90, column: 9, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 88, column: 81)
!2829 = distinct !DILexicalBlock(scope: !2826, file: !3, line: 88, column: 5)
!2830 = !DILocation(line: 90, column: 38, scope: !2828)
!2831 = !DILocation(line: 91, column: 9, scope: !2828)
!2832 = !DILocation(line: 91, column: 42, scope: !2828)
!2833 = !DILocation(line: 94, column: 45, scope: !2828)
!2834 = !DILocation(line: 94, column: 47, scope: !2828)
!2835 = !DILocation(line: 95, column: 49, scope: !2828)
!2836 = !DILocation(line: 95, column: 51, scope: !2828)
!2837 = !DILocation(line: 88, column: 77, scope: !2829)
!2838 = !DILocation(line: 88, column: 46, scope: !2829)
!2839 = distinct !{!2839, !2825, !2840}
!2840 = !DILocation(line: 96, column: 5, scope: !2826)
!2841 = !DILocation(line: 99, column: 1, scope: !2800)
!2842 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2801, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2843)
!2843 = !{!2844}
!2844 = !DILocalVariable(name: "irq_flag", scope: !2842, file: !3, line: 329, type: !61)
!2845 = !DILocation(line: 332, column: 16, scope: !2842)
!2846 = !DILocation(line: 0, scope: !2842)
!2847 = !DILocation(line: 335, column: 21, scope: !2842)
!2848 = !DILocation(line: 336, column: 21, scope: !2842)
!2849 = !DILocation(line: 339, column: 21, scope: !2842)
!2850 = !DILocation(line: 340, column: 21, scope: !2842)
!2851 = !DILocation(line: 434, column: 3, scope: !2852, inlinedAt: !2854)
!2852 = distinct !DISubprogram(name: "__ISB", scope: !2853, file: !2853, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2853 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!2854 = distinct !DILocation(line: 343, column: 5, scope: !2842)
!2855 = !{i64 442814}
!2856 = !DILocation(line: 346, column: 5, scope: !2842)
!2857 = !DILocation(line: 348, column: 5, scope: !2842)
!2858 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2801, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2859)
!2859 = !{!2860}
!2860 = !DILocalVariable(name: "region", scope: !2858, file: !3, line: 103, type: !2806)
!2861 = !DILocation(line: 107, column: 5, scope: !2858)
!2862 = !DILocation(line: 110, column: 22, scope: !2858)
!2863 = !DILocation(line: 111, column: 28, scope: !2858)
!2864 = !DILocation(line: 114, column: 19, scope: !2858)
!2865 = !DILocation(line: 115, column: 23, scope: !2858)
!2866 = !DILocation(line: 0, scope: !2858)
!2867 = !DILocation(line: 118, column: 5, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 118, column: 5)
!2869 = !DILocation(line: 120, column: 9, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 118, column: 81)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 118, column: 5)
!2872 = !DILocation(line: 120, column: 38, scope: !2870)
!2873 = !DILocation(line: 121, column: 9, scope: !2870)
!2874 = !DILocation(line: 121, column: 42, scope: !2870)
!2875 = !DILocation(line: 124, column: 45, scope: !2870)
!2876 = !DILocation(line: 124, column: 47, scope: !2870)
!2877 = !DILocation(line: 125, column: 49, scope: !2870)
!2878 = !DILocation(line: 125, column: 51, scope: !2870)
!2879 = !DILocation(line: 118, column: 77, scope: !2871)
!2880 = !DILocation(line: 118, column: 46, scope: !2871)
!2881 = distinct !{!2881, !2867, !2882}
!2882 = !DILocation(line: 126, column: 5, scope: !2868)
!2883 = !DILocation(line: 129, column: 20, scope: !2858)
!2884 = !DILocation(line: 131, column: 5, scope: !2858)
!2885 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2801, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2886 = !DILocation(line: 137, column: 45, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 137, column: 9)
!2888 = !DILocation(line: 137, column: 28, scope: !2887)
!2889 = !DILocation(line: 137, column: 9, scope: !2885)
!2890 = !DILocation(line: 142, column: 22, scope: !2885)
!2891 = !DILocation(line: 145, column: 28, scope: !2885)
!2892 = !DILocation(line: 145, column: 19, scope: !2885)
!2893 = !DILocation(line: 147, column: 5, scope: !2885)
!2894 = !DILocation(line: 0, scope: !2885)
!2895 = !DILocation(line: 148, column: 1, scope: !2885)
!2896 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2801, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2897)
!2897 = !{!2898}
!2898 = !DILocalVariable(name: "irq_flag", scope: !2896, file: !3, line: 152, type: !61)
!2899 = !DILocation(line: 155, column: 16, scope: !2896)
!2900 = !DILocation(line: 0, scope: !2896)
!2901 = !DILocation(line: 158, column: 16, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 158, column: 9)
!2903 = !DILocation(line: 158, column: 26, scope: !2902)
!2904 = !DILocation(line: 158, column: 9, scope: !2896)
!2905 = !DILocation(line: 160, column: 9, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 158, column: 49)
!2907 = !DILocation(line: 161, column: 5, scope: !2906)
!2908 = !DILocation(line: 164, column: 22, scope: !2896)
!2909 = !DILocation(line: 167, column: 28, scope: !2896)
!2910 = !DILocation(line: 167, column: 19, scope: !2896)
!2911 = !DILocation(line: 170, column: 5, scope: !2896)
!2912 = !DILocation(line: 172, column: 5, scope: !2896)
!2913 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2914, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2916)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{!2803, !2806}
!2916 = !{!2917}
!2917 = !DILocalVariable(name: "region", arg: 1, scope: !2913, file: !3, line: 175, type: !2806)
!2918 = !DILocation(line: 0, scope: !2913)
!2919 = !DILocation(line: 178, column: 16, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 178, column: 9)
!2921 = !DILocation(line: 178, column: 9, scope: !2913)
!2922 = !DILocation(line: 183, column: 9, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 183, column: 9)
!2924 = !DILocation(line: 183, column: 38, scope: !2923)
!2925 = !DILocation(line: 183, column: 9, scope: !2913)
!2926 = !DILocation(line: 184, column: 38, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 183, column: 62)
!2928 = !DILocation(line: 184, column: 32, scope: !2927)
!2929 = !DILocation(line: 190, column: 32, scope: !2913)
!2930 = !DILocation(line: 190, column: 23, scope: !2913)
!2931 = !DILocation(line: 192, column: 5, scope: !2913)
!2932 = !DILocation(line: 193, column: 1, scope: !2913)
!2933 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2914, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2934)
!2934 = !{!2935}
!2935 = !DILocalVariable(name: "region", arg: 1, scope: !2933, file: !3, line: 195, type: !2806)
!2936 = !DILocation(line: 0, scope: !2933)
!2937 = !DILocation(line: 198, column: 16, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 198, column: 9)
!2939 = !DILocation(line: 198, column: 9, scope: !2933)
!2940 = !DILocation(line: 203, column: 35, scope: !2933)
!2941 = !DILocation(line: 203, column: 31, scope: !2933)
!2942 = !DILocation(line: 203, column: 28, scope: !2933)
!2943 = !DILocation(line: 206, column: 32, scope: !2933)
!2944 = !DILocation(line: 206, column: 23, scope: !2933)
!2945 = !DILocation(line: 209, column: 41, scope: !2933)
!2946 = !DILocation(line: 209, column: 43, scope: !2933)
!2947 = !DILocation(line: 210, column: 45, scope: !2933)
!2948 = !DILocation(line: 210, column: 47, scope: !2933)
!2949 = !DILocation(line: 212, column: 5, scope: !2933)
!2950 = !DILocation(line: 213, column: 1, scope: !2933)
!2951 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2952, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2955)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!2803, !2954}
!2954 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2955 = !{!2956}
!2956 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2951, file: !3, line: 215, type: !2954)
!2957 = !DILocation(line: 0, scope: !2951)
!2958 = !DILocation(line: 218, column: 20, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 218, column: 9)
!2960 = !DILocation(line: 218, column: 9, scope: !2951)
!2961 = !DILocation(line: 223, column: 22, scope: !2951)
!2962 = !DILocation(line: 224, column: 37, scope: !2951)
!2963 = !DILocation(line: 224, column: 22, scope: !2951)
!2964 = !DILocation(line: 227, column: 20, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 227, column: 9)
!2966 = !DILocation(line: 227, column: 9, scope: !2951)
!2967 = !DILocation(line: 228, column: 26, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 227, column: 43)
!2969 = !DILocation(line: 229, column: 5, scope: !2968)
!2970 = !DILocation(line: 232, column: 28, scope: !2951)
!2971 = !DILocation(line: 232, column: 19, scope: !2951)
!2972 = !DILocation(line: 234, column: 5, scope: !2951)
!2973 = !DILocation(line: 235, column: 1, scope: !2951)
!2974 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2975, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2984)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!2803, !2806, !2977}
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2979)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2980, file: !6, line: 220, baseType: !61, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2980, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2984 = !{!2985, !2986}
!2985 = !DILocalVariable(name: "region", arg: 1, scope: !2974, file: !3, line: 237, type: !2806)
!2986 = !DILocalVariable(name: "region_config", arg: 2, scope: !2974, file: !3, line: 237, type: !2977)
!2987 = !DILocation(line: 0, scope: !2974)
!2988 = !DILocation(line: 240, column: 16, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 240, column: 9)
!2990 = !DILocation(line: 240, column: 9, scope: !2974)
!2991 = !DILocation(line: 245, column: 23, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 245, column: 9)
!2993 = !DILocation(line: 245, column: 9, scope: !2974)
!2994 = !DILocation(line: 250, column: 24, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 250, column: 9)
!2996 = !DILocation(line: 250, column: 45, scope: !2995)
!2997 = !DILocation(line: 250, column: 9, scope: !2974)
!2998 = !DILocation(line: 251, column: 9, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 250, column: 81)
!3000 = !DILocation(line: 256, column: 24, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 256, column: 9)
!3002 = !DILocation(line: 256, column: 42, scope: !3001)
!3003 = !DILocation(line: 256, column: 9, scope: !2974)
!3004 = !DILocation(line: 257, column: 9, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 256, column: 78)
!3006 = !DILocation(line: 262, column: 5, scope: !2974)
!3007 = !DILocation(line: 262, column: 34, scope: !2974)
!3008 = !DILocation(line: 263, column: 55, scope: !2974)
!3009 = !DILocation(line: 263, column: 93, scope: !2974)
!3010 = !DILocation(line: 263, column: 76, scope: !2974)
!3011 = !DILocation(line: 263, column: 5, scope: !2974)
!3012 = !DILocation(line: 263, column: 38, scope: !2974)
!3013 = !DILocation(line: 266, column: 34, scope: !2974)
!3014 = !DILocation(line: 269, column: 45, scope: !2974)
!3015 = !DILocation(line: 269, column: 41, scope: !2974)
!3016 = !DILocation(line: 269, column: 43, scope: !2974)
!3017 = !DILocation(line: 270, column: 49, scope: !2974)
!3018 = !DILocation(line: 270, column: 45, scope: !2974)
!3019 = !DILocation(line: 270, column: 47, scope: !2974)
!3020 = !DILocation(line: 272, column: 5, scope: !2974)
!3021 = !DILocation(line: 273, column: 1, scope: !2974)
!3022 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !3023, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3025)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!2803, !61}
!3025 = !{!3026, !3027}
!3026 = !DILocalVariable(name: "address", arg: 1, scope: !3022, file: !3, line: 275, type: !61)
!3027 = !DILocalVariable(name: "irq_flag", scope: !3022, file: !3, line: 277, type: !61)
!3028 = !DILocation(line: 0, scope: !3022)
!3029 = !DILocation(line: 280, column: 17, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 280, column: 9)
!3031 = !DILocation(line: 280, column: 9, scope: !3022)
!3032 = !DILocation(line: 284, column: 16, scope: !3022)
!3033 = !DILocation(line: 287, column: 32, scope: !3022)
!3034 = !DILocation(line: 287, column: 21, scope: !3022)
!3035 = !DILocation(line: 288, column: 21, scope: !3022)
!3036 = !DILocation(line: 434, column: 3, scope: !2852, inlinedAt: !3037)
!3037 = distinct !DILocation(line: 291, column: 5, scope: !3022)
!3038 = !DILocation(line: 294, column: 5, scope: !3022)
!3039 = !DILocation(line: 296, column: 5, scope: !3022)
!3040 = !DILocation(line: 297, column: 1, scope: !3022)
!3041 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !3042, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3044)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!2803, !61, !61}
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DILocalVariable(name: "address", arg: 1, scope: !3041, file: !3, line: 299, type: !61)
!3046 = !DILocalVariable(name: "length", arg: 2, scope: !3041, file: !3, line: 299, type: !61)
!3047 = !DILocalVariable(name: "irq_flag", scope: !3041, file: !3, line: 301, type: !61)
!3048 = !DILocalVariable(name: "end_address", scope: !3041, file: !3, line: 302, type: !61)
!3049 = !DILocation(line: 0, scope: !3041)
!3050 = !DILocation(line: 302, column: 36, scope: !3041)
!3051 = !DILocation(line: 305, column: 47, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 305, column: 9)
!3053 = !DILocation(line: 310, column: 16, scope: !3041)
!3054 = !DILocation(line: 313, column: 20, scope: !3041)
!3055 = !DILocation(line: 313, column: 5, scope: !3041)
!3056 = !DILocation(line: 314, column: 9, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 313, column: 35)
!3058 = !DILocation(line: 315, column: 17, scope: !3057)
!3059 = distinct !{!3059, !3055, !3060}
!3060 = !DILocation(line: 316, column: 5, scope: !3041)
!3061 = !DILocation(line: 434, column: 3, scope: !2852, inlinedAt: !3062)
!3062 = distinct !DILocation(line: 319, column: 5, scope: !3041)
!3063 = !DILocation(line: 322, column: 5, scope: !3041)
!3064 = !DILocation(line: 324, column: 5, scope: !3041)
!3065 = !DILocation(line: 325, column: 1, scope: !3041)
!3066 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !3023, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3067)
!3067 = !{!3068, !3069}
!3068 = !DILocalVariable(name: "address", arg: 1, scope: !3066, file: !3, line: 351, type: !61)
!3069 = !DILocalVariable(name: "irq_flag", scope: !3066, file: !3, line: 353, type: !61)
!3070 = !DILocation(line: 0, scope: !3066)
!3071 = !DILocation(line: 356, column: 17, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 356, column: 9)
!3073 = !DILocation(line: 356, column: 9, scope: !3066)
!3074 = !DILocation(line: 361, column: 16, scope: !3066)
!3075 = !DILocation(line: 364, column: 32, scope: !3066)
!3076 = !DILocation(line: 364, column: 21, scope: !3066)
!3077 = !DILocation(line: 365, column: 21, scope: !3066)
!3078 = !DILocation(line: 434, column: 3, scope: !2852, inlinedAt: !3079)
!3079 = distinct !DILocation(line: 368, column: 5, scope: !3066)
!3080 = !DILocation(line: 371, column: 5, scope: !3066)
!3081 = !DILocation(line: 373, column: 5, scope: !3066)
!3082 = !DILocation(line: 374, column: 1, scope: !3066)
!3083 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !3042, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3084)
!3084 = !{!3085, !3086, !3087, !3088}
!3085 = !DILocalVariable(name: "address", arg: 1, scope: !3083, file: !3, line: 376, type: !61)
!3086 = !DILocalVariable(name: "length", arg: 2, scope: !3083, file: !3, line: 376, type: !61)
!3087 = !DILocalVariable(name: "irq_flag", scope: !3083, file: !3, line: 378, type: !61)
!3088 = !DILocalVariable(name: "end_address", scope: !3083, file: !3, line: 379, type: !61)
!3089 = !DILocation(line: 0, scope: !3083)
!3090 = !DILocation(line: 379, column: 36, scope: !3083)
!3091 = !DILocation(line: 382, column: 47, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 382, column: 9)
!3093 = !DILocation(line: 387, column: 16, scope: !3083)
!3094 = !DILocation(line: 390, column: 20, scope: !3083)
!3095 = !DILocation(line: 390, column: 5, scope: !3083)
!3096 = !DILocation(line: 391, column: 9, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 390, column: 35)
!3098 = !DILocation(line: 392, column: 17, scope: !3097)
!3099 = distinct !{!3099, !3095, !3100}
!3100 = !DILocation(line: 393, column: 5, scope: !3083)
!3101 = !DILocation(line: 434, column: 3, scope: !2852, inlinedAt: !3102)
!3102 = distinct !DILocation(line: 396, column: 5, scope: !3083)
!3103 = !DILocation(line: 399, column: 5, scope: !3083)
!3104 = !DILocation(line: 401, column: 5, scope: !3083)
!3105 = !DILocation(line: 402, column: 1, scope: !3083)
!3106 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2801, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3107)
!3107 = !{!3108}
!3108 = !DILocalVariable(name: "irq_flag", scope: !3106, file: !3, line: 406, type: !61)
!3109 = !DILocation(line: 409, column: 16, scope: !3106)
!3110 = !DILocation(line: 0, scope: !3106)
!3111 = !DILocation(line: 412, column: 21, scope: !3106)
!3112 = !DILocation(line: 413, column: 21, scope: !3106)
!3113 = !DILocation(line: 434, column: 3, scope: !2852, inlinedAt: !3114)
!3114 = distinct !DILocation(line: 416, column: 5, scope: !3106)
!3115 = !DILocation(line: 419, column: 5, scope: !3106)
!3116 = !DILocation(line: 421, column: 5, scope: !3106)
!3117 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3118, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3120)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!91, !61}
!3120 = !{!3121, !3122}
!3121 = !DILocalVariable(name: "address", arg: 1, scope: !3117, file: !3, line: 424, type: !61)
!3122 = !DILocalVariable(name: "region", scope: !3117, file: !3, line: 426, type: !2806)
!3123 = !DILocation(line: 0, scope: !3117)
!3124 = !DILocation(line: 429, column: 18, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3117, file: !3, line: 429, column: 9)
!3126 = !DILocation(line: 429, column: 28, scope: !3125)
!3127 = !DILocation(line: 429, column: 9, scope: !3117)
!3128 = !DILocation(line: 435, column: 20, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 435, column: 13)
!3130 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 433, column: 81)
!3131 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 433, column: 5)
!3132 = distinct !DILexicalBlock(scope: !3117, file: !3, line: 433, column: 5)
!3133 = !DILocation(line: 435, column: 41, scope: !3129)
!3134 = !DILocation(line: 435, column: 36, scope: !3129)
!3135 = !DILocation(line: 435, column: 13, scope: !3130)
!3136 = !DILocation(line: 436, column: 30, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 436, column: 17)
!3138 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 435, column: 53)
!3139 = !DILocation(line: 436, column: 59, scope: !3137)
!3140 = !DILocation(line: 436, column: 26, scope: !3137)
!3141 = !DILocation(line: 436, column: 85, scope: !3137)
!3142 = !DILocation(line: 436, column: 99, scope: !3137)
!3143 = !DILocation(line: 436, column: 97, scope: !3137)
!3144 = !DILocation(line: 436, column: 17, scope: !3138)
!3145 = !DILocation(line: 433, column: 77, scope: !3131)
!3146 = !DILocation(line: 433, column: 46, scope: !3131)
!3147 = !DILocation(line: 433, column: 5, scope: !3132)
!3148 = distinct !{!3148, !3147, !3149}
!3149 = !DILocation(line: 440, column: 5, scope: !3132)
!3150 = !DILocation(line: 442, column: 1, scope: !3117)
!3151 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2715, file: !2715, line: 95, type: !3152, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3156)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2120)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3156 = !{!3157}
!3157 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3151, file: !2715, line: 95, type: !3155)
!3158 = !DILocation(line: 0, scope: !3151)
!3159 = !DILocation(line: 98, column: 9, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3151, file: !2715, line: 98, column: 9)
!3161 = !DILocation(line: 98, column: 9, scope: !3151)
!3162 = !DILocation(line: 102, column: 10, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3151, file: !2715, line: 102, column: 9)
!3164 = !DILocation(line: 102, column: 34, scope: !3163)
!3165 = !DILocation(line: 102, column: 49, scope: !3163)
!3166 = !DILocation(line: 102, column: 69, scope: !3163)
!3167 = !DILocation(line: 103, column: 38, scope: !3163)
!3168 = !DILocation(line: 102, column: 9, scope: !3151)
!3169 = !DILocation(line: 109, column: 12, scope: !3151)
!3170 = !DILocation(line: 109, column: 5, scope: !3151)
!3171 = !DILocation(line: 112, column: 5, scope: !3151)
!3172 = !DILocation(line: 115, column: 44, scope: !3151)
!3173 = !DILocation(line: 118, column: 5, scope: !3151)
!3174 = !DILocation(line: 118, column: 23, scope: !3151)
!3175 = !DILocation(line: 118, column: 35, scope: !3151)
!3176 = !DILocation(line: 121, column: 42, scope: !3151)
!3177 = !DILocation(line: 121, column: 38, scope: !3151)
!3178 = !DILocation(line: 121, column: 5, scope: !3151)
!3179 = !DILocation(line: 121, column: 17, scope: !3151)
!3180 = !DILocation(line: 121, column: 35, scope: !3151)
!3181 = !DILocation(line: 129, column: 5, scope: !3151)
!3182 = !DILocation(line: 131, column: 1, scope: !3151)
!3183 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2715, file: !2715, line: 81, type: !3184, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3186)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!91, !3155}
!3186 = !{!3187}
!3187 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3183, file: !2715, line: 81, type: !3155)
!3188 = !DILocation(line: 0, scope: !3183)
!3189 = !DILocation(line: 84, column: 25, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3183, file: !2715, line: 84, column: 9)
!3191 = !DILocation(line: 84, column: 35, scope: !3190)
!3192 = !DILocation(line: 84, column: 45, scope: !3190)
!3193 = !DILocation(line: 93, column: 1, scope: !3183)
!3194 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2715, file: !2715, line: 133, type: !3152, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3195)
!3195 = !{!3196}
!3196 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3194, file: !2715, line: 133, type: !3155)
!3197 = !DILocation(line: 0, scope: !3194)
!3198 = !DILocation(line: 136, column: 9, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3194, file: !2715, line: 136, column: 9)
!3200 = !DILocation(line: 136, column: 9, scope: !3194)
!3201 = !DILocation(line: 140, column: 9, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3194, file: !2715, line: 140, column: 9)
!3203 = !DILocation(line: 140, column: 33, scope: !3202)
!3204 = !DILocation(line: 140, column: 48, scope: !3202)
!3205 = !DILocation(line: 140, column: 9, scope: !3194)
!3206 = !DILocation(line: 146, column: 12, scope: !3194)
!3207 = !DILocation(line: 146, column: 5, scope: !3194)
!3208 = !DILocation(line: 149, column: 29, scope: !3194)
!3209 = !DILocation(line: 149, column: 44, scope: !3194)
!3210 = !DILocation(line: 151, column: 29, scope: !3194)
!3211 = !DILocation(line: 151, column: 5, scope: !3194)
!3212 = !DILocation(line: 159, column: 5, scope: !3194)
!3213 = !DILocation(line: 160, column: 1, scope: !3194)
!3214 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2715, file: !2715, line: 163, type: !3215, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3218)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!3154, !3217, !1218}
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !944)
!3218 = !{!3219, !3220}
!3219 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3214, file: !2715, line: 163, type: !3217)
!3220 = !DILocalVariable(name: "count", arg: 2, scope: !3214, file: !2715, line: 163, type: !1218)
!3221 = !DILocation(line: 0, scope: !3214)
!3222 = !DILocation(line: 166, column: 9, scope: !3214)
!3223 = !DILocation(line: 167, column: 44, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !2715, line: 167, column: 13)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !2715, line: 166, column: 51)
!3226 = distinct !DILexicalBlock(scope: !3214, file: !2715, line: 166, column: 9)
!3227 = !DILocation(line: 167, column: 59, scope: !3224)
!3228 = !DILocation(line: 167, column: 13, scope: !3225)
!3229 = !DILocation(line: 170, column: 38, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3224, file: !2715, line: 167, column: 79)
!3231 = !DILocation(line: 170, column: 13, scope: !3230)
!3232 = !DILocation(line: 172, column: 59, scope: !3230)
!3233 = !DILocation(line: 173, column: 9, scope: !3230)
!3234 = !DILocation(line: 175, column: 36, scope: !3225)
!3235 = !DILocation(line: 175, column: 18, scope: !3225)
!3236 = !DILocation(line: 177, column: 5, scope: !3225)
!3237 = !DILocation(line: 179, column: 44, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3239, file: !2715, line: 179, column: 13)
!3239 = distinct !DILexicalBlock(scope: !3240, file: !2715, line: 178, column: 55)
!3240 = distinct !DILexicalBlock(scope: !3226, file: !2715, line: 178, column: 14)
!3241 = !DILocation(line: 179, column: 59, scope: !3238)
!3242 = !DILocation(line: 179, column: 13, scope: !3239)
!3243 = !DILocation(line: 182, column: 38, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3238, file: !2715, line: 179, column: 79)
!3245 = !DILocation(line: 182, column: 13, scope: !3244)
!3246 = !DILocation(line: 184, column: 59, scope: !3244)
!3247 = !DILocation(line: 186, column: 9, scope: !3244)
!3248 = !DILocation(line: 188, column: 68, scope: !3239)
!3249 = !DILocation(line: 188, column: 50, scope: !3239)
!3250 = !DILocation(line: 188, column: 18, scope: !3239)
!3251 = !DILocation(line: 0, scope: !3226)
!3252 = !DILocation(line: 193, column: 5, scope: !3214)
!3253 = !DILocation(line: 194, column: 1, scope: !3214)
!3254 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2715, file: !2715, line: 196, type: !3255, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3257)
!3255 = !DISubroutineType(types: !3256)
!3256 = !{!3154, !61, !61, !1218}
!3257 = !{!3258, !3259, !3260}
!3258 = !DILocalVariable(name: "start_count", arg: 1, scope: !3254, file: !2715, line: 196, type: !61)
!3259 = !DILocalVariable(name: "end_count", arg: 2, scope: !3254, file: !2715, line: 196, type: !61)
!3260 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3254, file: !2715, line: 196, type: !1218)
!3261 = !DILocation(line: 0, scope: !3254)
!3262 = !DILocation(line: 198, column: 24, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3254, file: !2715, line: 198, column: 9)
!3264 = !DILocation(line: 198, column: 9, scope: !3254)
!3265 = !DILocation(line: 0, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3254, file: !2715, line: 202, column: 9)
!3267 = !DILocation(line: 208, column: 5, scope: !3254)
!3268 = !DILocation(line: 209, column: 1, scope: !3254)
!3269 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2715, file: !2715, line: 211, type: !3270, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3273)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!3154, !3155, !3272}
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3273 = !{!3274, !3275}
!3274 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3269, file: !2715, line: 211, type: !3155)
!3275 = !DILocalVariable(name: "running_status", arg: 2, scope: !3269, file: !2715, line: 211, type: !3272)
!3276 = !DILocation(line: 0, scope: !3269)
!3277 = !DILocation(line: 213, column: 18, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3269, file: !2715, line: 213, column: 9)
!3279 = !DILocation(line: 213, column: 9, scope: !3269)
!3280 = !DILocation(line: 217, column: 47, scope: !3269)
!3281 = !DILocation(line: 217, column: 21, scope: !3269)
!3282 = !DILocation(line: 219, column: 5, scope: !3269)
!3283 = !DILocation(line: 220, column: 1, scope: !3269)
!3284 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2715, file: !2715, line: 222, type: !3285, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3287)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!3154, !3155, !307, !88}
!3287 = !{!3288, !3289, !3290}
!3288 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3284, file: !2715, line: 222, type: !3155)
!3289 = !DILocalVariable(name: "callback", arg: 2, scope: !3284, file: !2715, line: 223, type: !307)
!3290 = !DILocalVariable(name: "user_data", arg: 3, scope: !3284, file: !2715, line: 224, type: !88)
!3291 = !DILocation(line: 0, scope: !3284)
!3292 = !DILocation(line: 227, column: 9, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3284, file: !2715, line: 227, column: 9)
!3294 = !DILocation(line: 227, column: 9, scope: !3284)
!3295 = !DILocation(line: 231, column: 34, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3284, file: !2715, line: 231, column: 9)
!3297 = !DILocation(line: 231, column: 49, scope: !3296)
!3298 = !DILocation(line: 231, column: 69, scope: !3296)
!3299 = !DILocation(line: 232, column: 38, scope: !3296)
!3300 = !DILocation(line: 232, column: 53, scope: !3296)
!3301 = !DILocation(line: 231, column: 9, scope: !3284)
!3302 = !DILocation(line: 237, column: 18, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3284, file: !2715, line: 237, column: 9)
!3304 = !DILocation(line: 237, column: 9, scope: !3284)
!3305 = !DILocation(line: 245, column: 46, scope: !3284)
!3306 = !DILocation(line: 245, column: 56, scope: !3284)
!3307 = !DILocation(line: 246, column: 46, scope: !3284)
!3308 = !DILocation(line: 246, column: 56, scope: !3284)
!3309 = !DILocation(line: 248, column: 5, scope: !3284)
!3310 = !DILocation(line: 250, column: 5, scope: !3284)
!3311 = !DILocation(line: 252, column: 1, scope: !3284)
!3312 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2715, file: !2715, line: 256, type: !3313, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3316)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!3154, !3155, !61, !3315}
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3316 = !{!3317, !3318, !3319, !3320}
!3317 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3312, file: !2715, line: 256, type: !3155)
!3318 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3312, file: !2715, line: 256, type: !61)
!3319 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3312, file: !2715, line: 256, type: !3315)
!3320 = !DILocalVariable(name: "mask", scope: !3312, file: !2715, line: 259, type: !60)
!3321 = !DILocation(line: 0, scope: !3312)
!3322 = !DILocation(line: 259, column: 5, scope: !3312)
!3323 = !DILocation(line: 259, column: 23, scope: !3312)
!3324 = !DILocation(line: 261, column: 9, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3312, file: !2715, line: 261, column: 9)
!3326 = !DILocation(line: 261, column: 9, scope: !3312)
!3327 = !DILocation(line: 265, column: 34, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3312, file: !2715, line: 265, column: 9)
!3329 = !DILocation(line: 265, column: 49, scope: !3328)
!3330 = !DILocation(line: 266, column: 13, scope: !3328)
!3331 = !DILocation(line: 266, column: 41, scope: !3328)
!3332 = !DILocation(line: 266, column: 56, scope: !3328)
!3333 = !DILocation(line: 265, column: 9, scope: !3312)
!3334 = !DILocation(line: 271, column: 25, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3312, file: !2715, line: 271, column: 9)
!3336 = !DILocation(line: 271, column: 9, scope: !3312)
!3337 = !DILocation(line: 282, column: 12, scope: !3312)
!3338 = !DILocation(line: 282, column: 10, scope: !3312)
!3339 = !DILocation(line: 284, column: 5, scope: !3312)
!3340 = !DILocation(line: 286, column: 5, scope: !3312)
!3341 = !DILocation(line: 286, column: 23, scope: !3312)
!3342 = !DILocation(line: 286, column: 34, scope: !3312)
!3343 = !DILocation(line: 287, column: 5, scope: !3312)
!3344 = !DILocation(line: 287, column: 23, scope: !3312)
!3345 = !DILocation(line: 287, column: 34, scope: !3312)
!3346 = !DILocation(line: 290, column: 5, scope: !3312)
!3347 = !DILocation(line: 290, column: 23, scope: !3312)
!3348 = !DILocation(line: 290, column: 37, scope: !3312)
!3349 = !DILocation(line: 291, column: 39, scope: !3312)
!3350 = !DILocation(line: 291, column: 5, scope: !3312)
!3351 = !DILocation(line: 291, column: 23, scope: !3312)
!3352 = !DILocation(line: 291, column: 37, scope: !3312)
!3353 = !DILocation(line: 292, column: 5, scope: !3312)
!3354 = !DILocation(line: 292, column: 23, scope: !3312)
!3355 = !DILocation(line: 292, column: 37, scope: !3312)
!3356 = !DILocation(line: 297, column: 47, scope: !3312)
!3357 = !DILocation(line: 298, column: 33, scope: !3312)
!3358 = !DILocation(line: 296, column: 5, scope: !3312)
!3359 = !DILocation(line: 296, column: 23, scope: !3312)
!3360 = !DILocation(line: 296, column: 31, scope: !3312)
!3361 = !DILocation(line: 300, column: 5, scope: !3312)
!3362 = !DILocation(line: 300, column: 29, scope: !3312)
!3363 = distinct !{!3363, !3361, !3364}
!3364 = !DILocation(line: 300, column: 39, scope: !3312)
!3365 = !DILocation(line: 301, column: 23, scope: !3312)
!3366 = !DILocation(line: 301, column: 33, scope: !3312)
!3367 = !DILocation(line: 302, column: 5, scope: !3312)
!3368 = !DILocation(line: 302, column: 23, scope: !3312)
!3369 = !DILocation(line: 302, column: 34, scope: !3312)
!3370 = !DILocation(line: 303, column: 44, scope: !3312)
!3371 = !DILocation(line: 305, column: 28, scope: !3312)
!3372 = !DILocation(line: 305, column: 5, scope: !3312)
!3373 = !DILocation(line: 306, column: 5, scope: !3312)
!3374 = !DILocation(line: 307, column: 1, scope: !3312)
!3375 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2715, file: !2715, line: 310, type: !3376, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3378)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!3154, !61}
!3378 = !{!3379}
!3379 = !DILocalVariable(name: "ms", arg: 1, scope: !3375, file: !2715, line: 310, type: !61)
!3380 = !DILocation(line: 0, scope: !3375)
!3381 = !DILocation(line: 313, column: 40, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3375, file: !2715, line: 313, column: 9)
!3383 = !DILocation(line: 313, column: 55, scope: !3382)
!3384 = !DILocation(line: 313, column: 9, scope: !3375)
!3385 = !DILocation(line: 316, column: 34, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3382, file: !2715, line: 313, column: 75)
!3387 = !DILocation(line: 316, column: 9, scope: !3386)
!3388 = !DILocation(line: 317, column: 55, scope: !3386)
!3389 = !DILocation(line: 318, column: 5, scope: !3386)
!3390 = !DILocation(line: 320, column: 20, scope: !3375)
!3391 = !DILocation(line: 320, column: 45, scope: !3375)
!3392 = !DILocation(line: 320, column: 5, scope: !3375)
!3393 = !DILocation(line: 322, column: 5, scope: !3375)
!3394 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2715, file: !2715, line: 327, type: !3313, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3395)
!3395 = !{!3396, !3397, !3398, !3399}
!3396 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3394, file: !2715, line: 327, type: !3155)
!3397 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3394, file: !2715, line: 327, type: !61)
!3398 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3394, file: !2715, line: 327, type: !3315)
!3399 = !DILocalVariable(name: "mask", scope: !3394, file: !2715, line: 329, type: !60)
!3400 = !DILocation(line: 0, scope: !3394)
!3401 = !DILocation(line: 329, column: 5, scope: !3394)
!3402 = !DILocation(line: 329, column: 23, scope: !3394)
!3403 = !DILocation(line: 331, column: 9, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3394, file: !2715, line: 331, column: 9)
!3405 = !DILocation(line: 331, column: 9, scope: !3394)
!3406 = !DILocation(line: 336, column: 34, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3394, file: !2715, line: 336, column: 9)
!3408 = !DILocation(line: 336, column: 49, scope: !3407)
!3409 = !DILocation(line: 337, column: 13, scope: !3407)
!3410 = !DILocation(line: 337, column: 41, scope: !3407)
!3411 = !DILocation(line: 337, column: 56, scope: !3407)
!3412 = !DILocation(line: 336, column: 9, scope: !3394)
!3413 = !DILocation(line: 349, column: 29, scope: !3394)
!3414 = !DILocation(line: 349, column: 49, scope: !3394)
!3415 = !DILocation(line: 351, column: 12, scope: !3394)
!3416 = !DILocation(line: 351, column: 10, scope: !3394)
!3417 = !DILocation(line: 353, column: 5, scope: !3394)
!3418 = !DILocation(line: 355, column: 5, scope: !3394)
!3419 = !DILocation(line: 355, column: 23, scope: !3394)
!3420 = !DILocation(line: 355, column: 34, scope: !3394)
!3421 = !DILocation(line: 356, column: 5, scope: !3394)
!3422 = !DILocation(line: 356, column: 23, scope: !3394)
!3423 = !DILocation(line: 356, column: 34, scope: !3394)
!3424 = !DILocation(line: 359, column: 5, scope: !3394)
!3425 = !DILocation(line: 359, column: 23, scope: !3394)
!3426 = !DILocation(line: 359, column: 37, scope: !3394)
!3427 = !DILocation(line: 360, column: 39, scope: !3394)
!3428 = !DILocation(line: 360, column: 5, scope: !3394)
!3429 = !DILocation(line: 360, column: 23, scope: !3394)
!3430 = !DILocation(line: 360, column: 37, scope: !3394)
!3431 = !DILocation(line: 361, column: 5, scope: !3394)
!3432 = !DILocation(line: 361, column: 23, scope: !3394)
!3433 = !DILocation(line: 361, column: 37, scope: !3394)
!3434 = !DILocation(line: 366, column: 47, scope: !3394)
!3435 = !DILocation(line: 367, column: 33, scope: !3394)
!3436 = !DILocation(line: 365, column: 5, scope: !3394)
!3437 = !DILocation(line: 365, column: 23, scope: !3394)
!3438 = !DILocation(line: 365, column: 31, scope: !3394)
!3439 = !DILocation(line: 369, column: 5, scope: !3394)
!3440 = !DILocation(line: 369, column: 29, scope: !3394)
!3441 = distinct !{!3441, !3439, !3442}
!3442 = !DILocation(line: 369, column: 39, scope: !3394)
!3443 = !DILocation(line: 370, column: 23, scope: !3394)
!3444 = !DILocation(line: 370, column: 33, scope: !3394)
!3445 = !DILocation(line: 371, column: 5, scope: !3394)
!3446 = !DILocation(line: 371, column: 23, scope: !3394)
!3447 = !DILocation(line: 371, column: 34, scope: !3394)
!3448 = !DILocation(line: 373, column: 28, scope: !3394)
!3449 = !DILocation(line: 373, column: 5, scope: !3394)
!3450 = !DILocation(line: 375, column: 44, scope: !3394)
!3451 = !DILocation(line: 377, column: 5, scope: !3394)
!3452 = !DILocation(line: 378, column: 1, scope: !3394)
!3453 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2715, file: !2715, line: 382, type: !3376, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3454)
!3454 = !{!3455}
!3455 = !DILocalVariable(name: "us", arg: 1, scope: !3453, file: !2715, line: 382, type: !61)
!3456 = !DILocation(line: 0, scope: !3453)
!3457 = !DILocation(line: 385, column: 40, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3453, file: !2715, line: 385, column: 9)
!3459 = !DILocation(line: 385, column: 55, scope: !3458)
!3460 = !DILocation(line: 385, column: 9, scope: !3453)
!3461 = !DILocation(line: 388, column: 34, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !2715, line: 385, column: 75)
!3463 = !DILocation(line: 388, column: 9, scope: !3462)
!3464 = !DILocation(line: 390, column: 55, scope: !3462)
!3465 = !DILocation(line: 391, column: 5, scope: !3462)
!3466 = !DILocation(line: 392, column: 20, scope: !3453)
!3467 = !DILocation(line: 392, column: 45, scope: !3453)
!3468 = !DILocation(line: 392, column: 5, scope: !3453)
!3469 = !DILocation(line: 394, column: 5, scope: !3453)
!3470 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2715, file: !2715, line: 398, type: !3152, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3471)
!3471 = !{!3472, !3473}
!3472 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3470, file: !2715, line: 398, type: !3155)
!3473 = !DILocalVariable(name: "mask", scope: !3470, file: !2715, line: 400, type: !60)
!3474 = !DILocation(line: 0, scope: !3470)
!3475 = !DILocation(line: 400, column: 5, scope: !3470)
!3476 = !DILocation(line: 400, column: 23, scope: !3470)
!3477 = !DILocation(line: 402, column: 9, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3470, file: !2715, line: 402, column: 9)
!3479 = !DILocation(line: 402, column: 9, scope: !3470)
!3480 = !DILocation(line: 413, column: 12, scope: !3470)
!3481 = !DILocation(line: 413, column: 10, scope: !3470)
!3482 = !DILocation(line: 415, column: 5, scope: !3470)
!3483 = !DILocation(line: 415, column: 23, scope: !3470)
!3484 = !DILocation(line: 415, column: 34, scope: !3470)
!3485 = !DILocation(line: 418, column: 5, scope: !3470)
!3486 = !DILocation(line: 418, column: 23, scope: !3470)
!3487 = !DILocation(line: 418, column: 34, scope: !3470)
!3488 = !DILocation(line: 420, column: 5, scope: !3470)
!3489 = !DILocation(line: 420, column: 23, scope: !3470)
!3490 = !DILocation(line: 420, column: 35, scope: !3470)
!3491 = !DILocation(line: 422, column: 29, scope: !3470)
!3492 = !DILocation(line: 422, column: 44, scope: !3470)
!3493 = !DILocation(line: 423, column: 28, scope: !3470)
!3494 = !DILocation(line: 423, column: 5, scope: !3470)
!3495 = !DILocation(line: 425, column: 33, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3470, file: !2715, line: 425, column: 9)
!3497 = !DILocation(line: 425, column: 9, scope: !3470)
!3498 = !DILocation(line: 427, column: 53, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3496, file: !2715, line: 425, column: 62)
!3500 = !DILocation(line: 428, column: 5, scope: !3499)
!3501 = !DILocation(line: 430, column: 1, scope: !3470)
!3502 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2715, file: !2715, line: 434, type: !3503, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3505)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!3154, !1218}
!3505 = !{!3506, !3507, !3508}
!3506 = !DILocalVariable(name: "handle", arg: 1, scope: !3502, file: !2715, line: 434, type: !1218)
!3507 = !DILocalVariable(name: "timer", scope: !3502, file: !2715, line: 436, type: !61)
!3508 = !DILocalVariable(name: "mask", scope: !3502, file: !2715, line: 437, type: !61)
!3509 = !DILocation(line: 0, scope: !3502)
!3510 = !DILocation(line: 439, column: 24, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3502, file: !2715, line: 439, column: 9)
!3512 = !DILocation(line: 439, column: 41, scope: !3511)
!3513 = !DILocation(line: 439, column: 9, scope: !3502)
!3514 = !DILocation(line: 443, column: 16, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3502, file: !2715, line: 443, column: 9)
!3516 = !DILocation(line: 443, column: 9, scope: !3502)
!3517 = !DILocation(line: 448, column: 12, scope: !3502)
!3518 = !DILocation(line: 450, column: 15, scope: !3502)
!3519 = !DILocation(line: 451, column: 21, scope: !3502)
!3520 = !DILocation(line: 451, column: 13, scope: !3502)
!3521 = !DILocation(line: 452, column: 33, scope: !3502)
!3522 = !DILocation(line: 452, column: 41, scope: !3502)
!3523 = !DILocation(line: 453, column: 36, scope: !3502)
!3524 = !DILocation(line: 455, column: 5, scope: !3502)
!3525 = !DILocation(line: 456, column: 5, scope: !3502)
!3526 = !DILocation(line: 457, column: 1, scope: !3502)
!3527 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2715, file: !2715, line: 459, type: !3376, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3528)
!3528 = !{!3529, !3530}
!3529 = !DILocalVariable(name: "handle", arg: 1, scope: !3527, file: !2715, line: 459, type: !61)
!3530 = !DILocalVariable(name: "timer", scope: !3527, file: !2715, line: 461, type: !60)
!3531 = !DILocation(line: 0, scope: !3527)
!3532 = !DILocation(line: 461, column: 5, scope: !3527)
!3533 = !DILocation(line: 461, column: 23, scope: !3527)
!3534 = !DILocation(line: 463, column: 17, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3527, file: !2715, line: 463, column: 9)
!3536 = !DILocation(line: 463, column: 37, scope: !3535)
!3537 = !DILocation(line: 463, column: 9, scope: !3527)
!3538 = !DILocation(line: 467, column: 20, scope: !3527)
!3539 = !DILocation(line: 467, column: 11, scope: !3527)
!3540 = !DILocation(line: 469, column: 24, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3527, file: !2715, line: 469, column: 9)
!3542 = !DILocation(line: 469, column: 41, scope: !3541)
!3543 = !DILocation(line: 469, column: 9, scope: !3527)
!3544 = !DILocation(line: 473, column: 30, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3527, file: !2715, line: 473, column: 9)
!3546 = !DILocation(line: 473, column: 37, scope: !3545)
!3547 = !DILocation(line: 473, column: 9, scope: !3527)
!3548 = !DILocation(line: 477, column: 30, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3527, file: !2715, line: 477, column: 9)
!3550 = !DILocation(line: 477, column: 37, scope: !3549)
!3551 = !DILocation(line: 477, column: 45, scope: !3549)
!3552 = !DILocation(line: 477, column: 9, scope: !3527)
!3553 = !DILocation(line: 481, column: 26, scope: !3527)
!3554 = !DILocation(line: 481, column: 33, scope: !3527)
!3555 = !DILocation(line: 481, column: 41, scope: !3527)
!3556 = !DILocation(line: 482, column: 36, scope: !3527)
!3557 = !DILocation(line: 484, column: 5, scope: !3527)
!3558 = !DILocation(line: 485, column: 1, scope: !3527)
!3559 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2715, file: !2715, line: 487, type: !3560, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3562)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!3154, !61, !61, !307, !88}
!3562 = !{!3563, !3564, !3565, !3566, !3567, !3568, !3569}
!3563 = !DILocalVariable(name: "handle", arg: 1, scope: !3559, file: !2715, line: 487, type: !61)
!3564 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3559, file: !2715, line: 487, type: !61)
!3565 = !DILocalVariable(name: "callback", arg: 3, scope: !3559, file: !2715, line: 487, type: !307)
!3566 = !DILocalVariable(name: "user_data", arg: 4, scope: !3559, file: !2715, line: 487, type: !88)
!3567 = !DILocalVariable(name: "current_time", scope: !3559, file: !2715, line: 489, type: !61)
!3568 = !DILocalVariable(name: "mask", scope: !3559, file: !2715, line: 490, type: !61)
!3569 = !DILocalVariable(name: "timer", scope: !3559, file: !2715, line: 491, type: !61)
!3570 = !DILocation(line: 0, scope: !3559)
!3571 = !DILocation(line: 493, column: 17, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3559, file: !2715, line: 493, column: 9)
!3573 = !DILocation(line: 493, column: 37, scope: !3572)
!3574 = !DILocation(line: 493, column: 9, scope: !3559)
!3575 = !DILocation(line: 497, column: 20, scope: !3559)
!3576 = !DILocation(line: 503, column: 37, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3559, file: !2715, line: 503, column: 9)
!3578 = !DILocation(line: 503, column: 9, scope: !3559)
!3579 = !DILocation(line: 507, column: 37, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3559, file: !2715, line: 507, column: 9)
!3581 = !DILocation(line: 507, column: 45, scope: !3580)
!3582 = !DILocation(line: 507, column: 9, scope: !3559)
!3583 = !DILocation(line: 511, column: 25, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3559, file: !2715, line: 511, column: 9)
!3585 = !DILocation(line: 511, column: 9, scope: !3559)
!3586 = !DILocation(line: 516, column: 12, scope: !3559)
!3587 = !DILocation(line: 519, column: 30, scope: !3559)
!3588 = !DILocation(line: 521, column: 24, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3559, file: !2715, line: 521, column: 9)
!3590 = !DILocation(line: 521, column: 38, scope: !3589)
!3591 = !DILocation(line: 521, column: 9, scope: !3559)
!3592 = !DILocation(line: 522, column: 9, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !2715, line: 521, column: 48)
!3594 = !DILocation(line: 523, column: 9, scope: !3593)
!3595 = !DILocation(line: 524, column: 38, scope: !3593)
!3596 = !DILocation(line: 525, column: 5, scope: !3593)
!3597 = !DILocation(line: 526, column: 5, scope: !3559)
!3598 = !DILocation(line: 528, column: 23, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3559, file: !2715, line: 528, column: 8)
!3600 = !DILocation(line: 528, column: 41, scope: !3599)
!3601 = !DILocation(line: 528, column: 8, scope: !3559)
!3602 = !DILocation(line: 529, column: 51, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3599, file: !2715, line: 528, column: 51)
!3604 = !DILocation(line: 529, column: 24, scope: !3603)
!3605 = !DILocation(line: 530, column: 5, scope: !3603)
!3606 = !DILocation(line: 0, scope: !3599)
!3607 = !DILocation(line: 534, column: 34, scope: !3559)
!3608 = !DILocation(line: 535, column: 39, scope: !3559)
!3609 = !DILocation(line: 537, column: 49, scope: !3559)
!3610 = !DILocation(line: 538, column: 80, scope: !3559)
!3611 = !DILocation(line: 538, column: 33, scope: !3559)
!3612 = !DILocation(line: 538, column: 49, scope: !3559)
!3613 = !DILocation(line: 539, column: 50, scope: !3559)
!3614 = !DILocation(line: 539, column: 61, scope: !3559)
!3615 = !DILocation(line: 540, column: 50, scope: !3559)
!3616 = !DILocation(line: 540, column: 61, scope: !3559)
!3617 = !DILocation(line: 542, column: 5, scope: !3559)
!3618 = !DILocation(line: 546, column: 30, scope: !3559)
!3619 = !DILocation(line: 548, column: 5, scope: !3559)
!3620 = !DILocation(line: 550, column: 5, scope: !3559)
!3621 = !DILocation(line: 551, column: 1, scope: !3559)
!3622 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2715, file: !2715, line: 553, type: !3376, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3623)
!3623 = !{!3624, !3625, !3626, !3627}
!3624 = !DILocalVariable(name: "handle", arg: 1, scope: !3622, file: !2715, line: 553, type: !61)
!3625 = !DILocalVariable(name: "current_time", scope: !3622, file: !2715, line: 555, type: !61)
!3626 = !DILocalVariable(name: "mask", scope: !3622, file: !2715, line: 556, type: !61)
!3627 = !DILocalVariable(name: "timer", scope: !3622, file: !2715, line: 557, type: !61)
!3628 = !DILocation(line: 0, scope: !3622)
!3629 = !DILocation(line: 559, column: 17, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3622, file: !2715, line: 559, column: 9)
!3631 = !DILocation(line: 559, column: 37, scope: !3630)
!3632 = !DILocation(line: 559, column: 9, scope: !3622)
!3633 = !DILocation(line: 563, column: 20, scope: !3622)
!3634 = !DILocation(line: 565, column: 37, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3622, file: !2715, line: 565, column: 9)
!3636 = !DILocation(line: 565, column: 48, scope: !3635)
!3637 = !DILocation(line: 565, column: 9, scope: !3622)
!3638 = !DILocation(line: 569, column: 37, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3622, file: !2715, line: 569, column: 9)
!3640 = !DILocation(line: 569, column: 45, scope: !3639)
!3641 = !DILocation(line: 569, column: 9, scope: !3622)
!3642 = !DILocation(line: 574, column: 12, scope: !3622)
!3643 = !DILocation(line: 577, column: 30, scope: !3622)
!3644 = !DILocation(line: 578, column: 5, scope: !3622)
!3645 = !DILocation(line: 579, column: 30, scope: !3622)
!3646 = !DILocation(line: 581, column: 23, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3622, file: !2715, line: 581, column: 8)
!3648 = !DILocation(line: 581, column: 41, scope: !3647)
!3649 = !DILocation(line: 581, column: 8, scope: !3622)
!3650 = !DILocation(line: 582, column: 51, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3647, file: !2715, line: 581, column: 51)
!3652 = !DILocation(line: 582, column: 24, scope: !3651)
!3653 = !DILocation(line: 583, column: 5, scope: !3651)
!3654 = !DILocation(line: 0, scope: !3647)
!3655 = !DILocation(line: 587, column: 34, scope: !3622)
!3656 = !DILocation(line: 588, column: 39, scope: !3622)
!3657 = !DILocation(line: 590, column: 44, scope: !3622)
!3658 = !DILocation(line: 592, column: 24, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3622, file: !2715, line: 592, column: 9)
!3660 = !DILocation(line: 592, column: 44, scope: !3659)
!3661 = !DILocation(line: 592, column: 9, scope: !3622)
!3662 = !DILocation(line: 593, column: 9, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !2715, line: 592, column: 50)
!3664 = !DILocation(line: 594, column: 5, scope: !3663)
!3665 = !DILocation(line: 598, column: 30, scope: !3622)
!3666 = !DILocation(line: 599, column: 5, scope: !3622)
!3667 = !DILocation(line: 601, column: 5, scope: !3622)
!3668 = !DILocation(line: 603, column: 1, scope: !3622)
!3669 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2715, file: !2715, line: 605, type: !3670, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !3672)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{!3154, !61, !1218}
!3672 = !{!3673, !3674, !3675, !3676, !3677}
!3673 = !DILocalVariable(name: "handle", arg: 1, scope: !3669, file: !2715, line: 605, type: !61)
!3674 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3669, file: !2715, line: 605, type: !1218)
!3675 = !DILocalVariable(name: "current_time", scope: !3669, file: !2715, line: 607, type: !61)
!3676 = !DILocalVariable(name: "mask", scope: !3669, file: !2715, line: 608, type: !61)
!3677 = !DILocalVariable(name: "timer", scope: !3669, file: !2715, line: 609, type: !61)
!3678 = !DILocation(line: 0, scope: !3669)
!3679 = !DILocation(line: 611, column: 17, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3669, file: !2715, line: 611, column: 9)
!3681 = !DILocation(line: 611, column: 37, scope: !3680)
!3682 = !DILocation(line: 611, column: 9, scope: !3669)
!3683 = !DILocation(line: 615, column: 20, scope: !3669)
!3684 = !DILocation(line: 617, column: 37, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3669, file: !2715, line: 617, column: 9)
!3686 = !DILocation(line: 617, column: 45, scope: !3685)
!3687 = !DILocation(line: 617, column: 9, scope: !3669)
!3688 = !DILocation(line: 622, column: 12, scope: !3669)
!3689 = !DILocation(line: 624, column: 35, scope: !3669)
!3690 = !DILocation(line: 624, column: 51, scope: !3669)
!3691 = !DILocation(line: 624, column: 76, scope: !3669)
!3692 = !DILocation(line: 624, column: 49, scope: !3669)
!3693 = !DILocation(line: 626, column: 37, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3669, file: !2715, line: 626, column: 9)
!3695 = !DILocation(line: 626, column: 9, scope: !3669)
!3696 = !DILocation(line: 0, scope: !3694)
!3697 = !DILocation(line: 632, column: 5, scope: !3669)
!3698 = !DILocation(line: 634, column: 5, scope: !3669)
!3699 = !DILocation(line: 636, column: 1, scope: !3669)
!3700 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3701, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3703)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!61, !61, !61, !61}
!3703 = !{!3704, !3705, !3706, !3707, !3709, !3710}
!3704 = !DILocalVariable(name: "mul1", arg: 1, scope: !3700, file: !95, line: 56, type: !61)
!3705 = !DILocalVariable(name: "mul2", arg: 2, scope: !3700, file: !95, line: 56, type: !61)
!3706 = !DILocalVariable(name: "div", arg: 3, scope: !3700, file: !95, line: 56, type: !61)
!3707 = !DILocalVariable(name: "data1", scope: !3700, file: !95, line: 58, type: !3708)
!3708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !465)
!3709 = !DILocalVariable(name: "data2", scope: !3700, file: !95, line: 59, type: !3708)
!3710 = !DILocalVariable(name: "result", scope: !3700, file: !95, line: 60, type: !3708)
!3711 = !DILocation(line: 0, scope: !3700)
!3712 = !DILocation(line: 63, column: 22, scope: !3700)
!3713 = !DILocation(line: 63, column: 32, scope: !3700)
!3714 = !DILocation(line: 64, column: 23, scope: !3700)
!3715 = !DILocation(line: 64, column: 40, scope: !3700)
!3716 = !DILocation(line: 66, column: 27, scope: !3700)
!3717 = !DILocation(line: 67, column: 27, scope: !3700)
!3718 = !DILocation(line: 67, column: 44, scope: !3700)
!3719 = !DILocation(line: 69, column: 26, scope: !3700)
!3720 = !DILocation(line: 70, column: 36, scope: !3700)
!3721 = !DILocation(line: 70, column: 43, scope: !3700)
!3722 = !DILocation(line: 70, column: 55, scope: !3700)
!3723 = !DILocation(line: 72, column: 34, scope: !3700)
!3724 = !DILocation(line: 72, column: 41, scope: !3700)
!3725 = !DILocation(line: 72, column: 5, scope: !3700)
!3726 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3727, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!61, !264}
!3729 = !{!3730}
!3730 = !DILocalVariable(name: "gpt", arg: 1, scope: !3726, file: !95, line: 75, type: !264)
!3731 = !DILocation(line: 0, scope: !3726)
!3732 = !DILocation(line: 77, column: 17, scope: !3726)
!3733 = !DILocation(line: 77, column: 5, scope: !3726)
!3734 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3735, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3737)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!61, !61}
!3737 = !{!3738}
!3738 = !DILocalVariable(name: "ms", arg: 1, scope: !3734, file: !95, line: 81, type: !61)
!3739 = !DILocation(line: 0, scope: !3734)
!3740 = !DILocation(line: 83, column: 27, scope: !3734)
!3741 = !DILocation(line: 83, column: 37, scope: !3734)
!3742 = !DILocation(line: 83, column: 43, scope: !3734)
!3743 = !DILocation(line: 83, column: 32, scope: !3734)
!3744 = !DILocation(line: 83, column: 53, scope: !3734)
!3745 = !DILocation(line: 83, column: 59, scope: !3734)
!3746 = !DILocation(line: 83, column: 48, scope: !3734)
!3747 = !DILocation(line: 83, column: 70, scope: !3734)
!3748 = !DILocation(line: 83, column: 76, scope: !3734)
!3749 = !DILocation(line: 83, column: 65, scope: !3734)
!3750 = !DILocation(line: 83, column: 5, scope: !3734)
!3751 = !DILocation(line: 90, column: 9, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3753 = !DILocation(line: 90, column: 9, scope: !290)
!3754 = !DILocation(line: 91, column: 13, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !95, line: 91, column: 13)
!3756 = distinct !DILexicalBlock(scope: !3752, file: !95, line: 90, column: 24)
!3757 = !DILocation(line: 91, column: 13, scope: !3756)
!3758 = !DILocation(line: 92, column: 32, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3755, file: !95, line: 91, column: 41)
!3760 = !DILocation(line: 92, column: 30, scope: !3759)
!3761 = !DILocation(line: 93, column: 41, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3759, file: !95, line: 93, column: 17)
!3763 = !DILocation(line: 0, scope: !3755)
!3764 = !DILocation(line: 105, column: 1, scope: !290)
!3765 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3766 = !DILocation(line: 109, column: 9, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3765, file: !95, line: 109, column: 9)
!3768 = !DILocation(line: 109, column: 9, scope: !3765)
!3769 = !DILocation(line: 110, column: 9, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3767, file: !95, line: 109, column: 61)
!3771 = !DILocation(line: 111, column: 5, scope: !3770)
!3772 = !DILocation(line: 112, column: 1, scope: !3765)
!3773 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3735, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3774)
!3774 = !{!3775}
!3775 = !DILocalVariable(name: "time_us", arg: 1, scope: !3773, file: !95, line: 114, type: !61)
!3776 = !DILocation(line: 0, scope: !3773)
!3777 = !DILocation(line: 116, column: 5, scope: !3773)
!3778 = !DILocation(line: 118, column: 9, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3773, file: !95, line: 118, column: 9)
!3780 = !DILocation(line: 118, column: 9, scope: !3773)
!3781 = !DILocation(line: 120, column: 49, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3779, file: !95, line: 118, column: 37)
!3783 = !DILocation(line: 120, column: 16, scope: !3782)
!3784 = !DILocation(line: 120, column: 9, scope: !3782)
!3785 = !DILocation(line: 0, scope: !3779)
!3786 = !DILocation(line: 125, column: 1, scope: !3773)
!3787 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3735, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3788)
!3788 = !{!3789}
!3789 = !DILocalVariable(name: "count", arg: 1, scope: !3787, file: !95, line: 127, type: !61)
!3790 = !DILocation(line: 0, scope: !3787)
!3791 = !DILocation(line: 129, column: 5, scope: !3787)
!3792 = !DILocation(line: 131, column: 9, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3787, file: !95, line: 131, column: 9)
!3794 = !DILocation(line: 131, column: 9, scope: !3787)
!3795 = !DILocation(line: 133, column: 69, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3793, file: !95, line: 131, column: 37)
!3797 = !DILocation(line: 133, column: 16, scope: !3796)
!3798 = !DILocation(line: 133, column: 9, scope: !3796)
!3799 = !DILocation(line: 0, scope: !3793)
!3800 = !DILocation(line: 138, column: 1, scope: !3787)
!3801 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3802, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3804)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !264, !61, !61}
!3804 = !{!3805, !3806, !3807}
!3805 = !DILocalVariable(name: "gpt", arg: 1, scope: !3801, file: !95, line: 141, type: !264)
!3806 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3801, file: !95, line: 141, type: !61)
!3807 = !DILocalVariable(name: "divide", arg: 3, scope: !3801, file: !95, line: 141, type: !61)
!3808 = !DILocation(line: 0, scope: !3801)
!3809 = !DILocation(line: 143, column: 5, scope: !3801)
!3810 = !DILocation(line: 145, column: 33, scope: !3801)
!3811 = !DILocation(line: 145, column: 10, scope: !3801)
!3812 = !DILocation(line: 145, column: 18, scope: !3801)
!3813 = !DILocation(line: 148, column: 10, scope: !3801)
!3814 = !DILocation(line: 148, column: 18, scope: !3801)
!3815 = !DILocation(line: 149, column: 1, scope: !3801)
!3816 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3817, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3819)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !264, !772}
!3819 = !{!3820, !3821, !3822, !3823}
!3820 = !DILocalVariable(name: "gpt", arg: 1, scope: !3816, file: !95, line: 151, type: !264)
!3821 = !DILocalVariable(name: "count", arg: 2, scope: !3816, file: !95, line: 151, type: !772)
!3822 = !DILocalVariable(name: "end_count", scope: !3816, file: !95, line: 153, type: !61)
!3823 = !DILocalVariable(name: "current", scope: !3816, file: !95, line: 153, type: !61)
!3824 = !DILocation(line: 0, scope: !3816)
!3825 = !DILocation(line: 155, column: 17, scope: !3816)
!3826 = !DILocation(line: 156, column: 25, scope: !3816)
!3827 = !DILocation(line: 156, column: 33, scope: !3816)
!3828 = !DILocation(line: 159, column: 19, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3816, file: !95, line: 159, column: 9)
!3830 = !DILocation(line: 159, column: 9, scope: !3816)
!3831 = !DILocation(line: 160, column: 16, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3829, file: !95, line: 159, column: 30)
!3833 = !DILocation(line: 160, column: 39, scope: !3832)
!3834 = !DILocation(line: 160, column: 9, scope: !3832)
!3835 = distinct !{!3835, !3834, !3836}
!3836 = !DILocation(line: 160, column: 51, scope: !3832)
!3837 = !DILocation(line: 162, column: 16, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3829, file: !95, line: 161, column: 12)
!3839 = !DILocation(line: 162, column: 39, scope: !3838)
!3840 = !DILocation(line: 162, column: 9, scope: !3838)
!3841 = distinct !{!3841, !3840, !3842}
!3842 = !DILocation(line: 162, column: 50, scope: !3838)
!3843 = !DILocation(line: 163, column: 16, scope: !3838)
!3844 = !DILocation(line: 163, column: 39, scope: !3838)
!3845 = !DILocation(line: 163, column: 9, scope: !3838)
!3846 = distinct !{!3846, !3845, !3847}
!3847 = !DILocation(line: 163, column: 51, scope: !3838)
!3848 = !DILocation(line: 165, column: 1, scope: !3816)
!3849 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3850, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3852)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{null, !264}
!3852 = !{!3853}
!3853 = !DILocalVariable(name: "gpt", arg: 1, scope: !3849, file: !95, line: 166, type: !264)
!3854 = !DILocation(line: 0, scope: !3849)
!3855 = !DILocation(line: 168, column: 10, scope: !3849)
!3856 = !DILocation(line: 168, column: 22, scope: !3849)
!3857 = !DILocation(line: 169, column: 10, scope: !3849)
!3858 = !DILocation(line: 169, column: 22, scope: !3849)
!3859 = !DILocation(line: 170, column: 21, scope: !3849)
!3860 = !DILocation(line: 171, column: 5, scope: !3849)
!3861 = !DILocation(line: 171, column: 16, scope: !3849)
!3862 = distinct !{!3862, !3860, !3863}
!3863 = !DILocation(line: 171, column: 26, scope: !3849)
!3864 = !DILocation(line: 172, column: 10, scope: !3849)
!3865 = !DILocation(line: 172, column: 22, scope: !3849)
!3866 = !DILocation(line: 173, column: 10, scope: !3849)
!3867 = !DILocation(line: 173, column: 22, scope: !3849)
!3868 = !DILocation(line: 174, column: 10, scope: !3849)
!3869 = !DILocation(line: 174, column: 22, scope: !3849)
!3870 = !DILocation(line: 176, column: 13, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3849, file: !95, line: 176, column: 9)
!3872 = !DILocation(line: 176, column: 9, scope: !3849)
!3873 = !DILocation(line: 177, column: 27, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3871, file: !95, line: 176, column: 22)
!3875 = !DILocation(line: 178, column: 5, scope: !3874)
!3876 = !DILocation(line: 179, column: 1, scope: !3849)
!3877 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3727, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3878)
!3878 = !{!3879, !3880}
!3879 = !DILocalVariable(name: "gpt", arg: 1, scope: !3877, file: !95, line: 181, type: !264)
!3880 = !DILocalVariable(name: "mask", scope: !3877, file: !95, line: 183, type: !60)
!3881 = !DILocation(line: 0, scope: !3877)
!3882 = !DILocation(line: 183, column: 5, scope: !3877)
!3883 = !DILocation(line: 183, column: 23, scope: !3877)
!3884 = !DILocation(line: 185, column: 17, scope: !3877)
!3885 = !DILocation(line: 185, column: 10, scope: !3877)
!3886 = !DILocation(line: 187, column: 22, scope: !3877)
!3887 = !DILocation(line: 189, column: 12, scope: !3877)
!3888 = !DILocation(line: 190, column: 1, scope: !3877)
!3889 = !DILocation(line: 189, column: 5, scope: !3877)
!3890 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3891, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !264, !61}
!3893 = !{!3894, !3895}
!3894 = !DILocalVariable(name: "gpt", arg: 1, scope: !3890, file: !95, line: 192, type: !264)
!3895 = !DILocalVariable(name: "mask", arg: 2, scope: !3890, file: !95, line: 192, type: !61)
!3896 = !DILocation(line: 0, scope: !3890)
!3897 = !DILocation(line: 194, column: 10, scope: !3890)
!3898 = !DILocation(line: 194, column: 21, scope: !3890)
!3899 = !DILocation(line: 195, column: 1, scope: !3890)
!3900 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !1168, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3901)
!3901 = !{!3902, !3903, !3904, !3905, !3906}
!3902 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3900, file: !95, line: 197, type: !862)
!3903 = !DILocalVariable(name: "i", scope: !3900, file: !95, line: 199, type: !61)
!3904 = !DILocalVariable(name: "mask", scope: !3900, file: !95, line: 200, type: !60)
!3905 = !DILocalVariable(name: "state", scope: !3900, file: !95, line: 201, type: !60)
!3906 = !DILocalVariable(name: "enable", scope: !3900, file: !95, line: 202, type: !60)
!3907 = !DILocation(line: 0, scope: !3900)
!3908 = !DILocation(line: 200, column: 5, scope: !3900)
!3909 = !DILocation(line: 200, column: 23, scope: !3900)
!3910 = !DILocation(line: 201, column: 5, scope: !3900)
!3911 = !DILocation(line: 201, column: 23, scope: !3900)
!3912 = !DILocation(line: 202, column: 5, scope: !3900)
!3913 = !DILocation(line: 202, column: 23, scope: !3900)
!3914 = !DILocation(line: 207, column: 5, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3900, file: !95, line: 207, column: 5)
!3916 = !DILocation(line: 209, column: 18, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !95, line: 207, column: 44)
!3918 = distinct !DILexicalBlock(scope: !3915, file: !95, line: 207, column: 5)
!3919 = !DILocation(line: 209, column: 29, scope: !3917)
!3920 = !DILocation(line: 209, column: 16, scope: !3917)
!3921 = !DILocation(line: 210, column: 29, scope: !3917)
!3922 = !DILocation(line: 210, column: 16, scope: !3917)
!3923 = !DILocation(line: 212, column: 16, scope: !3917)
!3924 = !DILocation(line: 212, column: 14, scope: !3917)
!3925 = !DILocation(line: 214, column: 9, scope: !3917)
!3926 = !DILocation(line: 214, column: 20, scope: !3917)
!3927 = !DILocation(line: 214, column: 32, scope: !3917)
!3928 = !DILocation(line: 216, column: 14, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3917, file: !95, line: 216, column: 13)
!3930 = !DILocation(line: 216, column: 20, scope: !3929)
!3931 = !DILocation(line: 216, column: 40, scope: !3929)
!3932 = !DILocation(line: 216, column: 44, scope: !3929)
!3933 = !DILocation(line: 216, column: 51, scope: !3929)
!3934 = !DILocation(line: 216, column: 13, scope: !3917)
!3935 = !DILocation(line: 224, column: 51, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !95, line: 224, column: 17)
!3937 = distinct !DILexicalBlock(scope: !3929, file: !95, line: 216, column: 70)
!3938 = !DILocation(line: 224, column: 60, scope: !3936)
!3939 = !DILocation(line: 224, column: 17, scope: !3937)
!3940 = !DILocation(line: 225, column: 94, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3936, file: !95, line: 224, column: 69)
!3942 = !DILocation(line: 225, column: 17, scope: !3941)
!3943 = !DILocation(line: 226, column: 13, scope: !3941)
!3944 = !DILocation(line: 229, column: 31, scope: !3917)
!3945 = !DILocation(line: 229, column: 42, scope: !3917)
!3946 = !DILocation(line: 229, column: 9, scope: !3917)
!3947 = !DILocation(line: 207, column: 40, scope: !3918)
!3948 = !DILocation(line: 207, column: 19, scope: !3918)
!3949 = distinct !{!3949, !3914, !3950}
!3950 = !DILocation(line: 231, column: 5, scope: !3915)
!3951 = !DILocation(line: 233, column: 1, scope: !3900)
!3952 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3953 = !DILocation(line: 238, column: 5, scope: !3952)
!3954 = !DILocation(line: 239, column: 5, scope: !3952)
!3955 = !DILocation(line: 240, column: 5, scope: !3952)
!3956 = !DILocation(line: 241, column: 1, scope: !3952)
!3957 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3727, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3958)
!3958 = !{!3959, !3960, !3961, !3962, !3963}
!3959 = !DILocalVariable(name: "gpt", arg: 1, scope: !3957, file: !95, line: 242, type: !264)
!3960 = !DILocalVariable(name: "time", scope: !3957, file: !95, line: 244, type: !60)
!3961 = !DILocalVariable(name: "count", scope: !3957, file: !95, line: 245, type: !61)
!3962 = !DILocalVariable(name: "time_s", scope: !3957, file: !95, line: 245, type: !61)
!3963 = !DILocalVariable(name: "time_ms", scope: !3957, file: !95, line: 245, type: !61)
!3964 = !DILocation(line: 0, scope: !3957)
!3965 = !DILocation(line: 244, column: 5, scope: !3957)
!3966 = !DILocation(line: 244, column: 23, scope: !3957)
!3967 = !DILocation(line: 247, column: 13, scope: !3957)
!3968 = !DILocation(line: 248, column: 20, scope: !3957)
!3969 = !DILocation(line: 249, column: 23, scope: !3957)
!3970 = !DILocation(line: 249, column: 32, scope: !3957)
!3971 = !DILocation(line: 249, column: 39, scope: !3957)
!3972 = !DILocation(line: 249, column: 48, scope: !3957)
!3973 = !DILocation(line: 250, column: 19, scope: !3957)
!3974 = !DILocation(line: 250, column: 26, scope: !3957)
!3975 = !DILocation(line: 250, column: 10, scope: !3957)
!3976 = !DILocation(line: 253, column: 5, scope: !3957)
!3977 = !DILocation(line: 253, column: 30, scope: !3957)
!3978 = !DILocation(line: 253, column: 38, scope: !3957)
!3979 = !DILocation(line: 254, column: 5, scope: !3957)
!3980 = !DILocation(line: 254, column: 36, scope: !3957)
!3981 = distinct !{!3981, !3979, !3982}
!3982 = !DILocation(line: 254, column: 46, scope: !3957)
!3983 = !DILocation(line: 255, column: 12, scope: !3957)
!3984 = !DILocation(line: 256, column: 1, scope: !3957)
!3985 = !DILocation(line: 255, column: 5, scope: !3957)
!3986 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3987, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3989)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!61}
!3989 = !{!3990}
!3990 = !DILocalVariable(name: "i", scope: !3986, file: !95, line: 260, type: !61)
!3991 = !DILocation(line: 0, scope: !3986)
!3992 = !DILocation(line: 262, column: 5, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3986, file: !95, line: 262, column: 5)
!3994 = !DILocation(line: 263, column: 37, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !95, line: 263, column: 13)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !95, line: 262, column: 45)
!3997 = distinct !DILexicalBlock(scope: !3993, file: !95, line: 262, column: 5)
!3998 = !DILocation(line: 263, column: 45, scope: !3995)
!3999 = !DILocation(line: 263, column: 13, scope: !3996)
!4000 = !DILocation(line: 262, column: 41, scope: !3997)
!4001 = !DILocation(line: 262, column: 19, scope: !3997)
!4002 = distinct !{!4002, !3992, !4003}
!4003 = !DILocation(line: 266, column: 5, scope: !3993)
!4004 = !DILocation(line: 269, column: 1, scope: !3986)
!4005 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4006)
!4006 = !{!4007, !4008}
!4007 = !DILocalVariable(name: "minimum_time", scope: !4005, file: !95, line: 273, type: !61)
!4008 = !DILocalVariable(name: "current_timer", scope: !4005, file: !95, line: 273, type: !61)
!4009 = !DILocation(line: 273, column: 5, scope: !4005)
!4010 = !DILocation(line: 275, column: 24, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4005, file: !95, line: 275, column: 9)
!4012 = !DILocation(line: 275, column: 9, scope: !4005)
!4013 = !DILocation(line: 0, scope: !4005)
!4014 = !DILocation(line: 279, column: 5, scope: !4005)
!4015 = !DILocation(line: 282, column: 56, scope: !4005)
!4016 = !DILocation(line: 282, column: 39, scope: !4005)
!4017 = !DILocation(line: 284, column: 30, scope: !4005)
!4018 = !DILocation(line: 285, column: 45, scope: !4005)
!4019 = !DILocation(line: 285, column: 5, scope: !4005)
!4020 = !DILocation(line: 286, column: 30, scope: !4005)
!4021 = !DILocation(line: 287, column: 1, scope: !4005)
!4022 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !4023, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4025)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{null, !1218, !1218}
!4025 = !{!4026, !4027, !4028, !4029, !4030}
!4026 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4022, file: !95, line: 308, type: !1218)
!4027 = !DILocalVariable(name: "number", arg: 2, scope: !4022, file: !95, line: 308, type: !1218)
!4028 = !DILocalVariable(name: "i", scope: !4022, file: !95, line: 310, type: !61)
!4029 = !DILocalVariable(name: "minimum", scope: !4022, file: !95, line: 311, type: !61)
!4030 = !DILocalVariable(name: "data", scope: !4022, file: !95, line: 312, type: !61)
!4031 = !DILocation(line: 0, scope: !4022)
!4032 = !DILocation(line: 314, column: 5, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4022, file: !95, line: 314, column: 5)
!4034 = !DILocation(line: 315, column: 37, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !95, line: 315, column: 13)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !95, line: 314, column: 45)
!4037 = distinct !DILexicalBlock(scope: !4033, file: !95, line: 314, column: 5)
!4038 = !DILocation(line: 315, column: 13, scope: !4036)
!4039 = !DILocation(line: 316, column: 20, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4035, file: !95, line: 315, column: 57)
!4041 = !DILocation(line: 318, column: 22, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4040, file: !95, line: 318, column: 17)
!4043 = !DILocation(line: 318, column: 17, scope: !4040)
!4044 = !DILocation(line: 320, column: 25, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4042, file: !95, line: 318, column: 33)
!4046 = !DILocation(line: 321, column: 13, scope: !4045)
!4047 = !DILocation(line: 314, column: 41, scope: !4037)
!4048 = !DILocation(line: 314, column: 19, scope: !4037)
!4049 = distinct !{!4049, !4032, !4050}
!4050 = !DILocation(line: 323, column: 5, scope: !4033)
!4051 = !DILocation(line: 325, column: 19, scope: !4022)
!4052 = !DILocation(line: 326, column: 1, scope: !4022)
!4053 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3735, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4054)
!4054 = !{!4055, !4056, !4057, !4058}
!4055 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4053, file: !95, line: 289, type: !61)
!4056 = !DILocalVariable(name: "time_out_delta", scope: !4053, file: !95, line: 291, type: !61)
!4057 = !DILocalVariable(name: "current_delta", scope: !4053, file: !95, line: 292, type: !61)
!4058 = !DILocalVariable(name: "ret_value", scope: !4053, file: !95, line: 293, type: !61)
!4059 = !DILocation(line: 0, scope: !4053)
!4060 = !DILocation(line: 295, column: 22, scope: !4053)
!4061 = !DILocation(line: 296, column: 22, scope: !4053)
!4062 = !DILocation(line: 298, column: 24, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4053, file: !95, line: 298, column: 9)
!4064 = !DILocation(line: 298, column: 9, scope: !4053)
!4065 = !DILocation(line: 306, column: 5, scope: !4053)
!4066 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4067)
!4067 = !{!4068, !4069, !4070, !4071}
!4068 = !DILocalVariable(name: "parameter", arg: 1, scope: !4066, file: !95, line: 329, type: !88)
!4069 = !DILocalVariable(name: "i", scope: !4066, file: !95, line: 331, type: !61)
!4070 = !DILocalVariable(name: "time_ms", scope: !4066, file: !95, line: 332, type: !60)
!4071 = !DILocalVariable(name: "data", scope: !4066, file: !95, line: 333, type: !60)
!4072 = !DILocation(line: 0, scope: !4066)
!4073 = !DILocation(line: 332, column: 5, scope: !4066)
!4074 = !DILocation(line: 332, column: 23, scope: !4066)
!4075 = !DILocation(line: 333, column: 5, scope: !4066)
!4076 = !DILocation(line: 333, column: 23, scope: !4066)
!4077 = !DILocation(line: 336, column: 24, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4066, file: !95, line: 336, column: 9)
!4079 = !DILocation(line: 336, column: 41, scope: !4078)
!4080 = !DILocation(line: 336, column: 9, scope: !4066)
!4081 = !DILocation(line: 338, column: 34, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !95, line: 336, column: 47)
!4083 = !DILocation(line: 339, column: 9, scope: !4082)
!4084 = !DILocation(line: 340, column: 34, scope: !4082)
!4085 = !DILocation(line: 342, column: 46, scope: !4082)
!4086 = !DILocation(line: 342, column: 19, scope: !4082)
!4087 = !DILocation(line: 342, column: 17, scope: !4082)
!4088 = !DILocation(line: 344, column: 41, scope: !4082)
!4089 = !DILocation(line: 344, column: 38, scope: !4082)
!4090 = !DILocation(line: 345, column: 42, scope: !4082)
!4091 = !DILocation(line: 347, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4082, file: !95, line: 347, column: 9)
!4093 = !DILocation(line: 348, column: 41, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !95, line: 348, column: 17)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !95, line: 347, column: 49)
!4096 = distinct !DILexicalBlock(scope: !4092, file: !95, line: 347, column: 9)
!4097 = !DILocation(line: 348, column: 17, scope: !4095)
!4098 = !DILocation(line: 350, column: 24, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4094, file: !95, line: 348, column: 61)
!4100 = !DILocation(line: 350, column: 22, scope: !4099)
!4101 = !DILocation(line: 352, column: 21, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4099, file: !95, line: 352, column: 21)
!4103 = !DILocation(line: 352, column: 26, scope: !4102)
!4104 = !DILocation(line: 352, column: 21, scope: !4099)
!4105 = !DILocation(line: 353, column: 56, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4102, file: !95, line: 352, column: 32)
!4107 = !DILocation(line: 354, column: 55, scope: !4106)
!4108 = !DILocation(line: 356, column: 62, scope: !4106)
!4109 = !DILocation(line: 356, column: 112, scope: !4106)
!4110 = !DILocation(line: 356, column: 21, scope: !4106)
!4111 = !DILocation(line: 357, column: 17, scope: !4106)
!4112 = !DILocation(line: 347, column: 45, scope: !4096)
!4113 = !DILocation(line: 347, column: 23, scope: !4096)
!4114 = distinct !{!4114, !4091, !4115}
!4115 = !DILocation(line: 360, column: 9, scope: !4092)
!4116 = !DILocation(line: 362, column: 42, scope: !4082)
!4117 = !DILocation(line: 364, column: 28, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4082, file: !95, line: 364, column: 13)
!4119 = !DILocation(line: 364, column: 48, scope: !4118)
!4120 = !DILocation(line: 364, column: 13, scope: !4082)
!4121 = !DILocation(line: 365, column: 13, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4118, file: !95, line: 364, column: 54)
!4123 = !DILocation(line: 366, column: 9, scope: !4122)
!4124 = !DILocation(line: 369, column: 1, scope: !4066)
!4125 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !346, file: !346, line: 50, type: !4126, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4129)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!61, !4128}
!4128 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !348)
!4129 = !{!4130, !4131, !4132}
!4130 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4125, file: !346, line: 50, type: !4128)
!4131 = !DILocalVariable(name: "i", scope: !4125, file: !346, line: 52, type: !61)
!4132 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4125, file: !346, line: 53, type: !1124)
!4133 = !DILocation(line: 0, scope: !4125)
!4134 = !DILocation(line: 53, column: 14, scope: !4125)
!4135 = !DILocation(line: 55, column: 5, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4125, file: !346, line: 55, column: 5)
!4137 = !DILocation(line: 55, column: 25, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4136, file: !346, line: 55, column: 5)
!4139 = !DILocation(line: 55, column: 19, scope: !4138)
!4140 = distinct !{!4140, !4135, !4141}
!4141 = !DILocation(line: 59, column: 5, scope: !4136)
!4142 = !DILocation(line: 56, column: 13, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !346, line: 56, column: 13)
!4144 = distinct !DILexicalBlock(scope: !4138, file: !346, line: 55, column: 29)
!4145 = !DILocation(line: 56, column: 40, scope: !4143)
!4146 = !DILocation(line: 56, column: 13, scope: !4144)
!4147 = !DILocation(line: 61, column: 1, scope: !4125)
!4148 = distinct !DISubprogram(name: "hal_gpio_init", scope: !346, file: !346, line: 66, type: !4149, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4152)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!4151, !4128}
!4151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !401, line: 229, baseType: !400)
!4152 = !{!4153}
!4153 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4148, file: !346, line: 66, type: !4128)
!4154 = !DILocation(line: 0, scope: !4148)
!4155 = !DILocation(line: 68, column: 5, scope: !4148)
!4156 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !346, file: !346, line: 72, type: !4149, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4157)
!4157 = !{!4158}
!4158 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4156, file: !346, line: 72, type: !4128)
!4159 = !DILocation(line: 0, scope: !4156)
!4160 = !DILocation(line: 74, column: 5, scope: !4156)
!4161 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !346, file: !346, line: 79, type: !4162, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4164)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!4151, !4128, !442}
!4164 = !{!4165, !4166, !4167, !4168}
!4165 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4161, file: !346, line: 79, type: !4128)
!4166 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4161, file: !346, line: 79, type: !442)
!4167 = !DILocalVariable(name: "no", scope: !4161, file: !346, line: 81, type: !61)
!4168 = !DILocalVariable(name: "remainder", scope: !4161, file: !346, line: 82, type: !61)
!4169 = !DILocation(line: 0, scope: !4161)
!4170 = !DILocation(line: 84, column: 18, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4161, file: !346, line: 84, column: 9)
!4172 = !DILocation(line: 84, column: 9, scope: !4161)
!4173 = !DILocation(line: 89, column: 19, scope: !4161)
!4174 = !DILocation(line: 92, column: 26, scope: !4161)
!4175 = !DILocation(line: 94, column: 24, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4161, file: !346, line: 94, column: 9)
!4177 = !DILocation(line: 0, scope: !4176)
!4178 = !DILocation(line: 94, column: 9, scope: !4161)
!4179 = !DILocation(line: 101, column: 1, scope: !4161)
!4180 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !346, file: !346, line: 105, type: !4181, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4184)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!4151, !4128, !4183}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!4184 = !{!4185, !4186, !4187, !4188, !4189}
!4185 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4180, file: !346, line: 105, type: !4128)
!4186 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4180, file: !346, line: 105, type: !4183)
!4187 = !DILocalVariable(name: "no", scope: !4180, file: !346, line: 107, type: !61)
!4188 = !DILocalVariable(name: "remainder", scope: !4180, file: !346, line: 108, type: !61)
!4189 = !DILocalVariable(name: "temp", scope: !4180, file: !346, line: 109, type: !61)
!4190 = !DILocation(line: 0, scope: !4180)
!4191 = !DILocation(line: 111, column: 18, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4180, file: !346, line: 111, column: 9)
!4193 = !DILocation(line: 111, column: 9, scope: !4180)
!4194 = !DILocation(line: 115, column: 14, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4180, file: !346, line: 115, column: 9)
!4196 = !DILocation(line: 115, column: 9, scope: !4180)
!4197 = !DILocation(line: 120, column: 19, scope: !4180)
!4198 = !DILocation(line: 123, column: 26, scope: !4180)
!4199 = !DILocation(line: 125, column: 12, scope: !4180)
!4200 = !DILocation(line: 125, column: 54, scope: !4180)
!4201 = !DILocation(line: 126, column: 45, scope: !4180)
!4202 = !DILocation(line: 126, column: 17, scope: !4180)
!4203 = !DILocation(line: 127, column: 51, scope: !4180)
!4204 = !DILocation(line: 127, column: 21, scope: !4180)
!4205 = !DILocation(line: 128, column: 5, scope: !4180)
!4206 = !DILocation(line: 130, column: 1, scope: !4180)
!4207 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !346, file: !346, line: 134, type: !4208, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4211)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!4210, !4128, !460}
!4210 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !401, line: 238, baseType: !411)
!4211 = !{!4212, !4213, !4214, !4215, !4216}
!4212 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4207, file: !346, line: 134, type: !4128)
!4213 = !DILocalVariable(name: "function_index", arg: 2, scope: !4207, file: !346, line: 134, type: !460)
!4214 = !DILocalVariable(name: "no", scope: !4207, file: !346, line: 136, type: !61)
!4215 = !DILocalVariable(name: "remainder", scope: !4207, file: !346, line: 137, type: !61)
!4216 = !DILocalVariable(name: "irq_status", scope: !4207, file: !346, line: 138, type: !61)
!4217 = !DILocation(line: 0, scope: !4207)
!4218 = !DILocation(line: 140, column: 18, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4207, file: !346, line: 140, column: 9)
!4220 = !DILocation(line: 140, column: 9, scope: !4207)
!4221 = !DILocation(line: 145, column: 24, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4207, file: !346, line: 145, column: 9)
!4223 = !DILocation(line: 145, column: 9, scope: !4207)
!4224 = !DILocation(line: 145, column: 9, scope: !4222)
!4225 = !DILocation(line: 150, column: 19, scope: !4207)
!4226 = !DILocation(line: 156, column: 18, scope: !4207)
!4227 = !DILocation(line: 157, column: 105, scope: !4207)
!4228 = !DILocation(line: 157, column: 91, scope: !4207)
!4229 = !DILocation(line: 157, column: 5, scope: !4207)
!4230 = !DILocation(line: 157, column: 48, scope: !4207)
!4231 = !DILocation(line: 157, column: 62, scope: !4207)
!4232 = !DILocation(line: 158, column: 80, scope: !4207)
!4233 = !DILocation(line: 158, column: 5, scope: !4207)
!4234 = !DILocation(line: 158, column: 48, scope: !4207)
!4235 = !DILocation(line: 158, column: 62, scope: !4207)
!4236 = !DILocation(line: 159, column: 5, scope: !4207)
!4237 = !DILocation(line: 160, column: 5, scope: !4207)
!4238 = !DILocation(line: 162, column: 1, scope: !4207)
!4239 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !346, file: !346, line: 166, type: !4240, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4243)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{!4151, !4128, !4242}
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!4243 = !{!4244, !4245, !4246, !4247, !4248}
!4244 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4239, file: !346, line: 166, type: !4128)
!4245 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4239, file: !346, line: 166, type: !4242)
!4246 = !DILocalVariable(name: "no", scope: !4239, file: !346, line: 168, type: !61)
!4247 = !DILocalVariable(name: "remainder", scope: !4239, file: !346, line: 169, type: !61)
!4248 = !DILocalVariable(name: "temp", scope: !4239, file: !346, line: 170, type: !61)
!4249 = !DILocation(line: 0, scope: !4239)
!4250 = !DILocation(line: 172, column: 18, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4239, file: !346, line: 172, column: 9)
!4252 = !DILocation(line: 172, column: 9, scope: !4239)
!4253 = !DILocation(line: 176, column: 14, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4239, file: !346, line: 176, column: 9)
!4255 = !DILocation(line: 176, column: 9, scope: !4239)
!4256 = !DILocation(line: 181, column: 19, scope: !4239)
!4257 = !DILocation(line: 184, column: 26, scope: !4239)
!4258 = !DILocation(line: 186, column: 12, scope: !4239)
!4259 = !DILocation(line: 186, column: 54, scope: !4239)
!4260 = !DILocation(line: 187, column: 45, scope: !4239)
!4261 = !DILocation(line: 187, column: 17, scope: !4239)
!4262 = !DILocation(line: 188, column: 41, scope: !4239)
!4263 = !DILocation(line: 188, column: 16, scope: !4239)
!4264 = !DILocation(line: 189, column: 5, scope: !4239)
!4265 = !DILocation(line: 191, column: 1, scope: !4239)
!4266 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !346, file: !346, line: 195, type: !4267, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4269)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!4151, !4128, !443}
!4269 = !{!4270, !4271, !4272, !4273}
!4270 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4266, file: !346, line: 195, type: !4128)
!4271 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4266, file: !346, line: 195, type: !443)
!4272 = !DILocalVariable(name: "no", scope: !4266, file: !346, line: 197, type: !61)
!4273 = !DILocalVariable(name: "remainder", scope: !4266, file: !346, line: 198, type: !61)
!4274 = !DILocation(line: 0, scope: !4266)
!4275 = !DILocation(line: 200, column: 18, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4266, file: !346, line: 200, column: 9)
!4277 = !DILocation(line: 200, column: 9, scope: !4266)
!4278 = !DILocation(line: 205, column: 19, scope: !4266)
!4279 = !DILocation(line: 208, column: 26, scope: !4266)
!4280 = !DILocation(line: 210, column: 9, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4266, file: !346, line: 210, column: 9)
!4282 = !DILocation(line: 0, scope: !4281)
!4283 = !DILocation(line: 210, column: 9, scope: !4266)
!4284 = !DILocation(line: 216, column: 1, scope: !4266)
!4285 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !346, file: !346, line: 220, type: !4240, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4286)
!4286 = !{!4287, !4288, !4289, !4290, !4291}
!4287 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4285, file: !346, line: 220, type: !4128)
!4288 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4285, file: !346, line: 220, type: !4242)
!4289 = !DILocalVariable(name: "no", scope: !4285, file: !346, line: 222, type: !61)
!4290 = !DILocalVariable(name: "remainder", scope: !4285, file: !346, line: 223, type: !61)
!4291 = !DILocalVariable(name: "temp", scope: !4285, file: !346, line: 224, type: !61)
!4292 = !DILocation(line: 0, scope: !4285)
!4293 = !DILocation(line: 226, column: 18, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4285, file: !346, line: 226, column: 9)
!4295 = !DILocation(line: 226, column: 9, scope: !4285)
!4296 = !DILocation(line: 230, column: 14, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4285, file: !346, line: 230, column: 9)
!4298 = !DILocation(line: 230, column: 9, scope: !4285)
!4299 = !DILocation(line: 235, column: 19, scope: !4285)
!4300 = !DILocation(line: 238, column: 26, scope: !4285)
!4301 = !DILocation(line: 240, column: 12, scope: !4285)
!4302 = !DILocation(line: 240, column: 55, scope: !4285)
!4303 = !DILocation(line: 241, column: 45, scope: !4285)
!4304 = !DILocation(line: 241, column: 17, scope: !4285)
!4305 = !DILocation(line: 242, column: 41, scope: !4285)
!4306 = !DILocation(line: 242, column: 16, scope: !4285)
!4307 = !DILocation(line: 243, column: 5, scope: !4285)
!4308 = !DILocation(line: 245, column: 1, scope: !4285)
!4309 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !346, file: !346, line: 249, type: !4149, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4310)
!4310 = !{!4311, !4312, !4313, !4314}
!4311 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4309, file: !346, line: 249, type: !4128)
!4312 = !DILocalVariable(name: "no", scope: !4309, file: !346, line: 251, type: !61)
!4313 = !DILocalVariable(name: "remainder", scope: !4309, file: !346, line: 252, type: !61)
!4314 = !DILocalVariable(name: "temp", scope: !4309, file: !346, line: 253, type: !61)
!4315 = !DILocation(line: 0, scope: !4309)
!4316 = !DILocation(line: 255, column: 18, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4309, file: !346, line: 255, column: 9)
!4318 = !DILocation(line: 255, column: 9, scope: !4309)
!4319 = !DILocation(line: 260, column: 19, scope: !4309)
!4320 = !DILocation(line: 263, column: 26, scope: !4309)
!4321 = !DILocation(line: 265, column: 12, scope: !4309)
!4322 = !DILocation(line: 265, column: 55, scope: !4309)
!4323 = !DILocation(line: 266, column: 45, scope: !4309)
!4324 = !DILocation(line: 266, column: 17, scope: !4309)
!4325 = !DILocation(line: 267, column: 15, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4309, file: !346, line: 267, column: 9)
!4327 = !DILocation(line: 267, column: 9, scope: !4309)
!4328 = !DILocation(line: 0, scope: !4326)
!4329 = !DILocation(line: 273, column: 1, scope: !4309)
!4330 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !346, file: !346, line: 278, type: !4149, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4331)
!4331 = !{!4332, !4333, !4334}
!4332 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4330, file: !346, line: 278, type: !4128)
!4333 = !DILocalVariable(name: "no", scope: !4330, file: !346, line: 280, type: !61)
!4334 = !DILocalVariable(name: "remainder", scope: !4330, file: !346, line: 281, type: !61)
!4335 = !DILocation(line: 0, scope: !4330)
!4336 = !DILocation(line: 283, column: 18, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4330, file: !346, line: 283, column: 9)
!4338 = !DILocation(line: 283, column: 9, scope: !4330)
!4339 = !DILocation(line: 288, column: 19, scope: !4330)
!4340 = !DILocation(line: 291, column: 26, scope: !4330)
!4341 = !DILocation(line: 293, column: 90, scope: !4330)
!4342 = !DILocation(line: 293, column: 5, scope: !4330)
!4343 = !DILocation(line: 293, column: 48, scope: !4330)
!4344 = !DILocation(line: 293, column: 62, scope: !4330)
!4345 = !DILocation(line: 294, column: 5, scope: !4330)
!4346 = !DILocation(line: 295, column: 1, scope: !4330)
!4347 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !346, file: !346, line: 299, type: !4149, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4348)
!4348 = !{!4349, !4350, !4351}
!4349 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4347, file: !346, line: 299, type: !4128)
!4350 = !DILocalVariable(name: "no", scope: !4347, file: !346, line: 301, type: !61)
!4351 = !DILocalVariable(name: "remainder", scope: !4347, file: !346, line: 302, type: !61)
!4352 = !DILocation(line: 0, scope: !4347)
!4353 = !DILocation(line: 304, column: 18, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4347, file: !346, line: 304, column: 9)
!4355 = !DILocation(line: 304, column: 9, scope: !4347)
!4356 = !DILocation(line: 309, column: 19, scope: !4347)
!4357 = !DILocation(line: 312, column: 26, scope: !4347)
!4358 = !DILocation(line: 314, column: 90, scope: !4347)
!4359 = !DILocation(line: 314, column: 5, scope: !4347)
!4360 = !DILocation(line: 314, column: 48, scope: !4347)
!4361 = !DILocation(line: 314, column: 62, scope: !4347)
!4362 = !DILocation(line: 315, column: 5, scope: !4347)
!4363 = !DILocation(line: 316, column: 1, scope: !4347)
!4364 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !346, file: !346, line: 321, type: !4149, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4365)
!4365 = !{!4366, !4367, !4368}
!4366 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4364, file: !346, line: 321, type: !4128)
!4367 = !DILocalVariable(name: "no", scope: !4364, file: !346, line: 323, type: !61)
!4368 = !DILocalVariable(name: "remainder", scope: !4364, file: !346, line: 324, type: !61)
!4369 = !DILocation(line: 0, scope: !4364)
!4370 = !DILocation(line: 326, column: 19, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4364, file: !346, line: 326, column: 9)
!4372 = !DILocation(line: 326, column: 36, scope: !4371)
!4373 = !DILocation(line: 326, column: 41, scope: !4371)
!4374 = !DILocation(line: 326, column: 9, scope: !4364)
!4375 = !DILocation(line: 331, column: 19, scope: !4364)
!4376 = !DILocation(line: 334, column: 26, scope: !4364)
!4377 = !DILocation(line: 336, column: 94, scope: !4364)
!4378 = !DILocation(line: 336, column: 5, scope: !4364)
!4379 = !DILocation(line: 336, column: 50, scope: !4364)
!4380 = !DILocation(line: 336, column: 66, scope: !4364)
!4381 = !DILocation(line: 337, column: 5, scope: !4364)
!4382 = !DILocation(line: 337, column: 51, scope: !4364)
!4383 = !DILocation(line: 337, column: 68, scope: !4364)
!4384 = !DILocation(line: 338, column: 5, scope: !4364)
!4385 = !DILocation(line: 339, column: 1, scope: !4364)
!4386 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !346, file: !346, line: 343, type: !4149, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4387)
!4387 = !{!4388, !4389, !4390}
!4388 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4386, file: !346, line: 343, type: !4128)
!4389 = !DILocalVariable(name: "no", scope: !4386, file: !346, line: 345, type: !61)
!4390 = !DILocalVariable(name: "remainder", scope: !4386, file: !346, line: 346, type: !61)
!4391 = !DILocation(line: 0, scope: !4386)
!4392 = !DILocation(line: 348, column: 19, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4386, file: !346, line: 348, column: 9)
!4394 = !DILocation(line: 348, column: 36, scope: !4393)
!4395 = !DILocation(line: 348, column: 41, scope: !4393)
!4396 = !DILocation(line: 348, column: 9, scope: !4386)
!4397 = !DILocation(line: 353, column: 19, scope: !4386)
!4398 = !DILocation(line: 356, column: 26, scope: !4386)
!4399 = !DILocation(line: 358, column: 94, scope: !4386)
!4400 = !DILocation(line: 358, column: 5, scope: !4386)
!4401 = !DILocation(line: 358, column: 50, scope: !4386)
!4402 = !DILocation(line: 358, column: 66, scope: !4386)
!4403 = !DILocation(line: 359, column: 5, scope: !4386)
!4404 = !DILocation(line: 359, column: 51, scope: !4386)
!4405 = !DILocation(line: 359, column: 68, scope: !4386)
!4406 = !DILocation(line: 360, column: 5, scope: !4386)
!4407 = !DILocation(line: 361, column: 1, scope: !4386)
!4408 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !346, file: !346, line: 365, type: !4149, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4409)
!4409 = !{!4410, !4411, !4412}
!4410 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4408, file: !346, line: 365, type: !4128)
!4411 = !DILocalVariable(name: "no", scope: !4408, file: !346, line: 367, type: !61)
!4412 = !DILocalVariable(name: "remainder", scope: !4408, file: !346, line: 368, type: !61)
!4413 = !DILocation(line: 0, scope: !4408)
!4414 = !DILocation(line: 370, column: 19, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4408, file: !346, line: 370, column: 9)
!4416 = !DILocation(line: 370, column: 36, scope: !4415)
!4417 = !DILocation(line: 370, column: 41, scope: !4415)
!4418 = !DILocation(line: 370, column: 9, scope: !4408)
!4419 = !DILocation(line: 375, column: 19, scope: !4408)
!4420 = !DILocation(line: 378, column: 26, scope: !4408)
!4421 = !DILocation(line: 380, column: 94, scope: !4408)
!4422 = !DILocation(line: 380, column: 5, scope: !4408)
!4423 = !DILocation(line: 380, column: 50, scope: !4408)
!4424 = !DILocation(line: 380, column: 66, scope: !4408)
!4425 = !DILocation(line: 381, column: 5, scope: !4408)
!4426 = !DILocation(line: 382, column: 1, scope: !4408)
!4427 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !346, file: !346, line: 387, type: !4428, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4432)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!4151, !4430, !4431}
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !421)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !430)
!4432 = !{!4433, !4434}
!4433 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4427, file: !346, line: 387, type: !4430)
!4434 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4427, file: !346, line: 387, type: !4431)
!4435 = !DILocation(line: 0, scope: !4427)
!4436 = !DILocation(line: 390, column: 24, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4427, file: !346, line: 390, column: 9)
!4438 = !DILocation(line: 390, column: 9, scope: !4427)
!4439 = !DILocation(line: 394, column: 5, scope: !4427)
!4440 = !DILocation(line: 394, column: 62, scope: !4427)
!4441 = !DILocation(line: 394, column: 74, scope: !4427)
!4442 = !DILocation(line: 395, column: 5, scope: !4427)
!4443 = !DILocation(line: 396, column: 1, scope: !4427)
!4444 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !346, file: !346, line: 403, type: !4445, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4447)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!4151, !4128, !460, !460, !460}
!4447 = !{!4448, !4449, !4450, !4451, !4452, !4453}
!4448 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4444, file: !346, line: 403, type: !4128)
!4449 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4444, file: !346, line: 403, type: !460)
!4450 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4444, file: !346, line: 403, type: !460)
!4451 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4444, file: !346, line: 403, type: !460)
!4452 = !DILocalVariable(name: "no", scope: !4444, file: !346, line: 405, type: !61)
!4453 = !DILocalVariable(name: "remainder", scope: !4444, file: !346, line: 406, type: !61)
!4454 = !DILocation(line: 0, scope: !4444)
!4455 = !DILocation(line: 408, column: 19, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4444, file: !346, line: 408, column: 9)
!4457 = !DILocation(line: 408, column: 36, scope: !4456)
!4458 = !DILocation(line: 408, column: 40, scope: !4456)
!4459 = !DILocation(line: 408, column: 9, scope: !4444)
!4460 = !DILocation(line: 413, column: 19, scope: !4444)
!4461 = !DILocation(line: 416, column: 26, scope: !4444)
!4462 = !DILocation(line: 418, column: 9, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4444, file: !346, line: 418, column: 9)
!4464 = !DILocation(line: 0, scope: !4463)
!4465 = !DILocation(line: 418, column: 9, scope: !4444)
!4466 = !DILocation(line: 424, column: 9, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4444, file: !346, line: 424, column: 9)
!4468 = !DILocation(line: 0, scope: !4467)
!4469 = !DILocation(line: 424, column: 9, scope: !4444)
!4470 = !DILocation(line: 430, column: 9, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4444, file: !346, line: 430, column: 9)
!4472 = !DILocation(line: 0, scope: !4471)
!4473 = !DILocation(line: 430, column: 9, scope: !4444)
!4474 = !DILocation(line: 436, column: 1, scope: !4444)
!4475 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !346, file: !346, line: 441, type: !4149, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4476)
!4476 = !{!4477, !4478, !4479, !4480, !4481, !4482, !4483}
!4477 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4475, file: !346, line: 441, type: !4128)
!4478 = !DILocalVariable(name: "no1", scope: !4475, file: !346, line: 443, type: !61)
!4479 = !DILocalVariable(name: "no2", scope: !4475, file: !346, line: 443, type: !61)
!4480 = !DILocalVariable(name: "no3", scope: !4475, file: !346, line: 443, type: !61)
!4481 = !DILocalVariable(name: "remainder1", scope: !4475, file: !346, line: 444, type: !61)
!4482 = !DILocalVariable(name: "remainder2", scope: !4475, file: !346, line: 444, type: !61)
!4483 = !DILocalVariable(name: "remainder3", scope: !4475, file: !346, line: 444, type: !61)
!4484 = !DILocation(line: 0, scope: !4475)
!4485 = !DILocation(line: 446, column: 18, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4475, file: !346, line: 446, column: 9)
!4487 = !DILocation(line: 446, column: 9, scope: !4475)
!4488 = !DILocation(line: 451, column: 20, scope: !4475)
!4489 = !DILocation(line: 454, column: 27, scope: !4475)
!4490 = !DILocation(line: 457, column: 20, scope: !4475)
!4491 = !DILocation(line: 463, column: 20, scope: !4475)
!4492 = !DILocation(line: 469, column: 107, scope: !4475)
!4493 = !DILocation(line: 469, column: 92, scope: !4475)
!4494 = !DILocation(line: 469, column: 5, scope: !4475)
!4495 = !DILocation(line: 469, column: 49, scope: !4475)
!4496 = !DILocation(line: 469, column: 63, scope: !4475)
!4497 = !DILocation(line: 472, column: 89, scope: !4475)
!4498 = !DILocation(line: 472, column: 5, scope: !4475)
!4499 = !DILocation(line: 472, column: 48, scope: !4475)
!4500 = !DILocation(line: 472, column: 61, scope: !4475)
!4501 = !DILocation(line: 475, column: 5, scope: !4475)
!4502 = !DILocation(line: 475, column: 48, scope: !4475)
!4503 = !DILocation(line: 475, column: 61, scope: !4475)
!4504 = !DILocation(line: 478, column: 9, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4475, file: !346, line: 478, column: 9)
!4506 = !DILocation(line: 0, scope: !4505)
!4507 = !DILocation(line: 478, column: 9, scope: !4475)
!4508 = !DILocation(line: 479, column: 55, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 478, column: 40)
!4510 = !DILocation(line: 480, column: 5, scope: !4509)
!4511 = !DILocation(line: 483, column: 53, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 482, column: 10)
!4513 = !DILocation(line: 483, column: 67, scope: !4512)
!4514 = !DILocation(line: 484, column: 9, scope: !4512)
!4515 = !DILocation(line: 484, column: 55, scope: !4512)
!4516 = !DILocation(line: 484, column: 71, scope: !4512)
!4517 = !DILocation(line: 485, column: 9, scope: !4512)
!4518 = !DILocation(line: 485, column: 55, scope: !4512)
!4519 = !DILocation(line: 490, column: 5, scope: !4475)
!4520 = !DILocation(line: 490, column: 48, scope: !4475)
!4521 = !DILocation(line: 490, column: 61, scope: !4475)
!4522 = !DILocation(line: 493, column: 5, scope: !4475)
!4523 = !DILocation(line: 493, column: 47, scope: !4475)
!4524 = !DILocation(line: 493, column: 59, scope: !4475)
!4525 = !DILocation(line: 496, column: 108, scope: !4475)
!4526 = !DILocation(line: 496, column: 93, scope: !4475)
!4527 = !DILocation(line: 496, column: 5, scope: !4475)
!4528 = !DILocation(line: 496, column: 50, scope: !4475)
!4529 = !DILocation(line: 496, column: 65, scope: !4475)
!4530 = !DILocation(line: 498, column: 5, scope: !4475)
!4531 = !DILocation(line: 499, column: 1, scope: !4475)
!4532 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !346, file: !346, line: 502, type: !4149, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4533)
!4533 = !{!4534, !4535, !4536, !4537, !4538}
!4534 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4532, file: !346, line: 502, type: !4128)
!4535 = !DILocalVariable(name: "no1", scope: !4532, file: !346, line: 504, type: !61)
!4536 = !DILocalVariable(name: "no2", scope: !4532, file: !346, line: 504, type: !61)
!4537 = !DILocalVariable(name: "remainder1", scope: !4532, file: !346, line: 505, type: !61)
!4538 = !DILocalVariable(name: "remainder2", scope: !4532, file: !346, line: 505, type: !61)
!4539 = !DILocation(line: 0, scope: !4532)
!4540 = !DILocation(line: 507, column: 18, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4532, file: !346, line: 507, column: 9)
!4542 = !DILocation(line: 507, column: 9, scope: !4532)
!4543 = !DILocation(line: 512, column: 20, scope: !4532)
!4544 = !DILocation(line: 515, column: 27, scope: !4532)
!4545 = !DILocation(line: 518, column: 20, scope: !4532)
!4546 = !DILocation(line: 524, column: 107, scope: !4532)
!4547 = !DILocation(line: 524, column: 92, scope: !4532)
!4548 = !DILocation(line: 524, column: 5, scope: !4532)
!4549 = !DILocation(line: 524, column: 49, scope: !4532)
!4550 = !DILocation(line: 524, column: 63, scope: !4532)
!4551 = !DILocation(line: 527, column: 89, scope: !4532)
!4552 = !DILocation(line: 527, column: 5, scope: !4532)
!4553 = !DILocation(line: 527, column: 48, scope: !4532)
!4554 = !DILocation(line: 527, column: 61, scope: !4532)
!4555 = !DILocation(line: 530, column: 9, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4532, file: !346, line: 530, column: 9)
!4557 = !DILocation(line: 0, scope: !4556)
!4558 = !DILocation(line: 530, column: 9, scope: !4532)
!4559 = !DILocation(line: 531, column: 55, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4556, file: !346, line: 530, column: 40)
!4561 = !DILocation(line: 531, column: 71, scope: !4560)
!4562 = !DILocation(line: 532, column: 9, scope: !4560)
!4563 = !DILocation(line: 532, column: 56, scope: !4560)
!4564 = !DILocation(line: 533, column: 5, scope: !4560)
!4565 = !DILocation(line: 536, column: 53, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4556, file: !346, line: 535, column: 10)
!4567 = !DILocation(line: 536, column: 67, scope: !4566)
!4568 = !DILocation(line: 537, column: 9, scope: !4566)
!4569 = !DILocation(line: 537, column: 55, scope: !4566)
!4570 = !DILocation(line: 537, column: 71, scope: !4566)
!4571 = !DILocation(line: 538, column: 9, scope: !4566)
!4572 = !DILocation(line: 538, column: 55, scope: !4566)
!4573 = !DILocation(line: 543, column: 5, scope: !4532)
!4574 = !DILocation(line: 543, column: 48, scope: !4532)
!4575 = !DILocation(line: 543, column: 61, scope: !4532)
!4576 = !DILocation(line: 546, column: 5, scope: !4532)
!4577 = !DILocation(line: 546, column: 47, scope: !4532)
!4578 = !DILocation(line: 546, column: 59, scope: !4532)
!4579 = !DILocation(line: 549, column: 5, scope: !4532)
!4580 = !DILocation(line: 550, column: 1, scope: !4532)
!4581 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !346, file: !346, line: 554, type: !4582, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4584)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!4151, !4128, !444}
!4584 = !{!4585, !4586, !4587, !4588}
!4585 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4581, file: !346, line: 554, type: !4128)
!4586 = !DILocalVariable(name: "driving", arg: 2, scope: !4581, file: !346, line: 554, type: !444)
!4587 = !DILocalVariable(name: "no", scope: !4581, file: !346, line: 556, type: !61)
!4588 = !DILocalVariable(name: "remainder", scope: !4581, file: !346, line: 557, type: !61)
!4589 = !DILocation(line: 0, scope: !4581)
!4590 = !DILocation(line: 559, column: 19, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4581, file: !346, line: 559, column: 9)
!4592 = !DILocation(line: 559, column: 9, scope: !4581)
!4593 = !DILocation(line: 564, column: 19, scope: !4581)
!4594 = !DILocation(line: 569, column: 102, scope: !4581)
!4595 = !DILocation(line: 569, column: 88, scope: !4581)
!4596 = !DILocation(line: 569, column: 5, scope: !4581)
!4597 = !DILocation(line: 569, column: 47, scope: !4581)
!4598 = !DILocation(line: 569, column: 60, scope: !4581)
!4599 = !DILocation(line: 570, column: 71, scope: !4581)
!4600 = !DILocation(line: 570, column: 5, scope: !4581)
!4601 = !DILocation(line: 570, column: 47, scope: !4581)
!4602 = !DILocation(line: 570, column: 60, scope: !4581)
!4603 = !DILocation(line: 571, column: 5, scope: !4581)
!4604 = !DILocation(line: 572, column: 1, scope: !4581)
!4605 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !346, file: !346, line: 575, type: !4606, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4609)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!4151, !4128, !4608}
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 32)
!4609 = !{!4610, !4611, !4612, !4613, !4614}
!4610 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4605, file: !346, line: 575, type: !4128)
!4611 = !DILocalVariable(name: "driving", arg: 2, scope: !4605, file: !346, line: 575, type: !4608)
!4612 = !DILocalVariable(name: "no", scope: !4605, file: !346, line: 577, type: !61)
!4613 = !DILocalVariable(name: "remainder", scope: !4605, file: !346, line: 578, type: !61)
!4614 = !DILocalVariable(name: "temp", scope: !4605, file: !346, line: 579, type: !61)
!4615 = !DILocation(line: 0, scope: !4605)
!4616 = !DILocation(line: 581, column: 19, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4605, file: !346, line: 581, column: 9)
!4618 = !DILocation(line: 581, column: 9, scope: !4605)
!4619 = !DILocation(line: 585, column: 14, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4605, file: !346, line: 585, column: 9)
!4621 = !DILocation(line: 585, column: 9, scope: !4605)
!4622 = !DILocation(line: 590, column: 19, scope: !4605)
!4623 = !DILocation(line: 595, column: 12, scope: !4605)
!4624 = !DILocation(line: 595, column: 54, scope: !4605)
!4625 = !DILocation(line: 596, column: 59, scope: !4605)
!4626 = !DILocation(line: 596, column: 45, scope: !4605)
!4627 = !DILocation(line: 596, column: 17, scope: !4605)
!4628 = !DILocation(line: 597, column: 18, scope: !4605)
!4629 = !DILocation(line: 600, column: 56, scope: !4605)
!4630 = !DILocation(line: 600, column: 14, scope: !4605)
!4631 = !DILocation(line: 602, column: 5, scope: !4605)
!4632 = !DILocation(line: 603, column: 1, scope: !4605)
!4633 = distinct !DISubprogram(name: "uart_receive_handler", scope: !629, file: !629, line: 146, type: !4634, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4636)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{null, !735, !91}
!4636 = !{!4637, !4638, !4639, !4641, !4642, !4643, !4644, !4700}
!4637 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4633, file: !629, line: 146, type: !735)
!4638 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4633, file: !629, line: 146, type: !91)
!4639 = !DILocalVariable(name: "channel", scope: !4633, file: !629, line: 148, type: !4640)
!4640 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !639, line: 203, baseType: !638)
!4641 = !DILocalVariable(name: "avail_bytes", scope: !4633, file: !629, line: 149, type: !61)
!4642 = !DILocalVariable(name: "callback", scope: !4633, file: !629, line: 150, type: !744)
!4643 = !DILocalVariable(name: "arg", scope: !4633, file: !629, line: 151, type: !88)
!4644 = !DILocalVariable(name: "uartx", scope: !4633, file: !629, line: 152, type: !4645)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 32)
!4646 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4647)
!4647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4648)
!4648 = !{!4649, !4655, !4660, !4666, !4667, !4672, !4677, !4678, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4647, file: !56, line: 547, baseType: !4650, size: 32)
!4650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !56, line: 543, size: 32, elements: !4651)
!4651 = !{!4652, !4653, !4654}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4650, file: !56, line: 544, baseType: !272, size: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4650, file: !56, line: 545, baseType: !60, size: 32)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4650, file: !56, line: 546, baseType: !60, size: 32)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4647, file: !56, line: 551, baseType: !4656, size: 32, offset: 32)
!4656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !56, line: 548, size: 32, elements: !4657)
!4657 = !{!4658, !4659}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4656, file: !56, line: 549, baseType: !60, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4656, file: !56, line: 550, baseType: !60, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4647, file: !56, line: 556, baseType: !4661, size: 32, offset: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !56, line: 552, size: 32, elements: !4662)
!4662 = !{!4663, !4664, !4665}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4661, file: !56, line: 553, baseType: !272, size: 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4661, file: !56, line: 554, baseType: !60, size: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4661, file: !56, line: 555, baseType: !60, size: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4647, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4647, file: !56, line: 561, baseType: !4668, size: 32, offset: 128)
!4668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !56, line: 558, size: 32, elements: !4669)
!4669 = !{!4670, !4671}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4668, file: !56, line: 559, baseType: !60, size: 32)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4668, file: !56, line: 560, baseType: !60, size: 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4647, file: !56, line: 565, baseType: !4673, size: 32, offset: 160)
!4673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !56, line: 562, size: 32, elements: !4674)
!4674 = !{!4675, !4676}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4673, file: !56, line: 563, baseType: !272, size: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4673, file: !56, line: 564, baseType: !60, size: 32)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4647, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4647, file: !56, line: 570, baseType: !4679, size: 32, offset: 224)
!4679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !56, line: 567, size: 32, elements: !4680)
!4680 = !{!4681, !4682}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4679, file: !56, line: 568, baseType: !60, size: 32)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4679, file: !56, line: 569, baseType: !60, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4647, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4647, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4647, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4647, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4647, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4647, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4647, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4647, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4647, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4647, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4647, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4647, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4647, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4647, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4647, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4647, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4647, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4700 = !DILocalVariable(name: "status", scope: !4633, file: !629, line: 153, type: !4701)
!4701 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !639, line: 211, baseType: !659)
!4702 = !DILocation(line: 0, scope: !4633)
!4703 = !DILocation(line: 149, column: 5, scope: !4633)
!4704 = !DILocation(line: 155, column: 9, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 155, column: 9)
!4706 = !DILocation(line: 155, column: 36, scope: !4705)
!4707 = !DILocation(line: 155, column: 9, scope: !4633)
!4708 = !DILocation(line: 156, column: 9, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4705, file: !629, line: 155, column: 70)
!4710 = !DILocation(line: 160, column: 13, scope: !4633)
!4711 = !DILocation(line: 161, column: 15, scope: !4633)
!4712 = !DILocation(line: 163, column: 9, scope: !4633)
!4713 = !DILocation(line: 164, column: 9, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !629, line: 163, column: 29)
!4715 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 163, column: 9)
!4716 = !DILocation(line: 165, column: 5, scope: !4714)
!4717 = !DILocation(line: 167, column: 14, scope: !4633)
!4718 = !DILocation(line: 168, column: 16, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 168, column: 9)
!4720 = !DILocation(line: 168, column: 9, scope: !4633)
!4721 = !DILocation(line: 169, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !629, line: 168, column: 28)
!4723 = !DILocation(line: 172, column: 9, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 172, column: 9)
!4725 = !DILocation(line: 172, column: 21, scope: !4724)
!4726 = !DILocation(line: 172, column: 9, scope: !4633)
!4727 = !DILocation(line: 176, column: 43, scope: !4633)
!4728 = !DILocation(line: 178, column: 18, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 178, column: 9)
!4730 = !DILocation(line: 178, column: 9, scope: !4633)
!4731 = !DILocation(line: 179, column: 9, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4729, file: !629, line: 178, column: 27)
!4733 = !DILocation(line: 177, column: 38, scope: !4633)
!4734 = !DILocation(line: 183, column: 5, scope: !4633)
!4735 = !DILocation(line: 184, column: 5, scope: !4633)
!4736 = !DILocation(line: 185, column: 5, scope: !4633)
!4737 = !DILocation(line: 187, column: 14, scope: !4633)
!4738 = !DILocation(line: 188, column: 16, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 188, column: 9)
!4740 = !DILocation(line: 188, column: 9, scope: !4633)
!4741 = !DILocation(line: 189, column: 9, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !629, line: 188, column: 28)
!4743 = !DILocation(line: 192, column: 9, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4633, file: !629, line: 192, column: 9)
!4745 = !DILocation(line: 192, column: 53, scope: !4744)
!4746 = !DILocation(line: 192, column: 21, scope: !4744)
!4747 = !DILocation(line: 192, column: 9, scope: !4633)
!4748 = !DILocation(line: 193, column: 18, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4744, file: !629, line: 192, column: 83)
!4750 = !DILocation(line: 194, column: 20, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4749, file: !629, line: 194, column: 13)
!4752 = !DILocation(line: 194, column: 13, scope: !4749)
!4753 = !DILocation(line: 195, column: 13, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4751, file: !629, line: 194, column: 32)
!4755 = !DILocation(line: 199, column: 1, scope: !4633)
!4756 = distinct !DISubprogram(name: "uart_send_handler", scope: !629, file: !629, line: 210, type: !4634, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4757)
!4757 = !{!4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765}
!4758 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4756, file: !629, line: 210, type: !735)
!4759 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4756, file: !629, line: 210, type: !91)
!4760 = !DILocalVariable(name: "channel", scope: !4756, file: !629, line: 212, type: !4640)
!4761 = !DILocalVariable(name: "status", scope: !4756, file: !629, line: 213, type: !4701)
!4762 = !DILocalVariable(name: "compare_space", scope: !4756, file: !629, line: 214, type: !61)
!4763 = !DILocalVariable(name: "avail_space", scope: !4756, file: !629, line: 214, type: !61)
!4764 = !DILocalVariable(name: "callback", scope: !4756, file: !629, line: 215, type: !744)
!4765 = !DILocalVariable(name: "arg", scope: !4756, file: !629, line: 216, type: !88)
!4766 = !DILocation(line: 0, scope: !4756)
!4767 = !DILocation(line: 214, column: 5, scope: !4756)
!4768 = !DILocation(line: 221, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4756, file: !629, line: 221, column: 9)
!4770 = !DILocation(line: 221, column: 36, scope: !4769)
!4771 = !DILocation(line: 221, column: 9, scope: !4756)
!4772 = !DILocation(line: 222, column: 9, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !629, line: 221, column: 70)
!4774 = !DILocation(line: 226, column: 15, scope: !4756)
!4775 = !DILocation(line: 228, column: 9, scope: !4756)
!4776 = !DILocation(line: 253, column: 47, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !629, line: 252, column: 12)
!4778 = distinct !DILexicalBlock(scope: !4756, file: !629, line: 228, column: 9)
!4779 = !DILocation(line: 255, column: 22, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !629, line: 255, column: 13)
!4781 = !DILocation(line: 255, column: 13, scope: !4777)
!4782 = !DILocation(line: 256, column: 13, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !629, line: 255, column: 31)
!4784 = !DILocation(line: 254, column: 42, scope: !4777)
!4785 = !DILocation(line: 260, column: 9, scope: !4777)
!4786 = !DILocation(line: 261, column: 9, scope: !4777)
!4787 = !DILocation(line: 262, column: 9, scope: !4777)
!4788 = !DILocation(line: 264, column: 18, scope: !4777)
!4789 = !DILocation(line: 265, column: 20, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4777, file: !629, line: 265, column: 13)
!4791 = !DILocation(line: 265, column: 13, scope: !4777)
!4792 = !DILocation(line: 266, column: 13, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4790, file: !629, line: 265, column: 32)
!4794 = !DILocation(line: 269, column: 54, scope: !4777)
!4795 = !DILocation(line: 270, column: 56, scope: !4777)
!4796 = !DILocation(line: 270, column: 25, scope: !4777)
!4797 = !DILocation(line: 271, column: 13, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4777, file: !629, line: 271, column: 13)
!4799 = !DILocation(line: 271, column: 25, scope: !4798)
!4800 = !DILocation(line: 271, column: 13, scope: !4777)
!4801 = !DILocation(line: 272, column: 22, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4798, file: !629, line: 271, column: 43)
!4803 = !DILocation(line: 273, column: 24, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4802, file: !629, line: 273, column: 17)
!4805 = !DILocation(line: 273, column: 17, scope: !4802)
!4806 = !DILocation(line: 274, column: 17, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4804, file: !629, line: 273, column: 36)
!4808 = !DILocation(line: 279, column: 1, scope: !4756)
!4809 = distinct !DISubprogram(name: "uart_error_handler", scope: !629, file: !629, line: 282, type: !4810, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4812)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{null, !735}
!4812 = !{!4813, !4814, !4815, !4816}
!4813 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4809, file: !629, line: 282, type: !735)
!4814 = !DILocalVariable(name: "uartx", scope: !4809, file: !629, line: 284, type: !4645)
!4815 = !DILocalVariable(name: "callback", scope: !4809, file: !629, line: 285, type: !744)
!4816 = !DILocalVariable(name: "arg", scope: !4809, file: !629, line: 286, type: !88)
!4817 = !DILocation(line: 0, scope: !4809)
!4818 = !DILocation(line: 288, column: 13, scope: !4809)
!4819 = !DILocation(line: 290, column: 10, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4809, file: !629, line: 290, column: 9)
!4821 = !DILocation(line: 290, column: 9, scope: !4809)
!4822 = !DILocation(line: 291, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !629, line: 290, column: 36)
!4824 = !DILocation(line: 292, column: 9, scope: !4823)
!4825 = !DILocation(line: 293, column: 47, scope: !4823)
!4826 = !DILocation(line: 295, column: 22, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4823, file: !629, line: 295, column: 13)
!4828 = !DILocation(line: 295, column: 13, scope: !4823)
!4829 = !DILocation(line: 296, column: 13, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !629, line: 295, column: 31)
!4831 = !DILocation(line: 294, column: 42, scope: !4823)
!4832 = !DILocation(line: 299, column: 9, scope: !4823)
!4833 = !DILocation(line: 300, column: 5, scope: !4823)
!4834 = !DILocation(line: 301, column: 1, scope: !4809)
!4835 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !629, file: !629, line: 416, type: !4836, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4840)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{!4838, !735, !4839}
!4838 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !654, line: 351, baseType: !670)
!4839 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !654, line: 317, baseType: !677)
!4840 = !{!4841, !4842, !4843, !4844, !4845}
!4841 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4835, file: !629, line: 416, type: !735)
!4842 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4835, file: !629, line: 416, type: !4839)
!4843 = !DILocalVariable(name: "actual_baudrate", scope: !4835, file: !629, line: 418, type: !61)
!4844 = !DILocalVariable(name: "irq_status", scope: !4835, file: !629, line: 418, type: !61)
!4845 = !DILocalVariable(name: "uartx", scope: !4835, file: !629, line: 419, type: !4645)
!4846 = !DILocation(line: 0, scope: !4835)
!4847 = !DILocation(line: 421, column: 11, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4835, file: !629, line: 421, column: 9)
!4849 = !DILocation(line: 421, column: 42, scope: !4848)
!4850 = !DILocation(line: 422, column: 11, scope: !4848)
!4851 = !DILocation(line: 421, column: 9, scope: !4835)
!4852 = !DILocation(line: 426, column: 9, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4835, file: !629, line: 426, column: 9)
!4854 = !DILocation(line: 426, column: 36, scope: !4853)
!4855 = !DILocation(line: 426, column: 9, scope: !4835)
!4856 = !DILocation(line: 430, column: 18, scope: !4835)
!4857 = !DILocation(line: 434, column: 5, scope: !4835)
!4858 = !DILocation(line: 436, column: 13, scope: !4835)
!4859 = !DILocation(line: 437, column: 23, scope: !4835)
!4860 = !DILocation(line: 439, column: 5, scope: !4835)
!4861 = !DILocation(line: 441, column: 5, scope: !4835)
!4862 = !DILocation(line: 442, column: 1, scope: !4835)
!4863 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !629, file: !629, line: 120, type: !4864, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4866)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!91, !735}
!4866 = !{!4867}
!4867 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4863, file: !629, line: 120, type: !735)
!4868 = !DILocation(line: 0, scope: !4863)
!4869 = !DILocation(line: 122, column: 23, scope: !4863)
!4870 = !DILocation(line: 122, column: 5, scope: !4863)
!4871 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !629, file: !629, line: 125, type: !4872, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4874)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!91, !4839}
!4874 = !{!4875}
!4875 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4871, file: !629, line: 125, type: !4839)
!4876 = !DILocation(line: 0, scope: !4871)
!4877 = !DILocation(line: 127, column: 22, scope: !4871)
!4878 = !DILocation(line: 127, column: 5, scope: !4871)
!4879 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !629, file: !629, line: 444, type: !4880, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4894)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!4838, !735, !4882}
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 32)
!4883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4884)
!4884 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !4885)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !4886)
!4886 = !{!4887, !4888, !4890, !4892}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4885, file: !654, line: 374, baseType: !4839, size: 32)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4885, file: !654, line: 375, baseType: !4889, size: 32, offset: 32)
!4889 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !654, line: 326, baseType: !693)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4885, file: !654, line: 376, baseType: !4891, size: 32, offset: 64)
!4891 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !654, line: 333, baseType: !699)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4885, file: !654, line: 377, baseType: !4893, size: 32, offset: 96)
!4893 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !654, line: 341, baseType: !703)
!4894 = !{!4895, !4896, !4897, !4898}
!4895 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4879, file: !629, line: 444, type: !735)
!4896 = !DILocalVariable(name: "config", arg: 2, scope: !4879, file: !629, line: 445, type: !4882)
!4897 = !DILocalVariable(name: "irq_status", scope: !4879, file: !629, line: 447, type: !61)
!4898 = !DILocalVariable(name: "uartx", scope: !4879, file: !629, line: 448, type: !4645)
!4899 = !DILocation(line: 0, scope: !4879)
!4900 = !DILocation(line: 450, column: 11, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4879, file: !629, line: 450, column: 9)
!4902 = !DILocation(line: 450, column: 42, scope: !4901)
!4903 = !DILocation(line: 451, column: 11, scope: !4901)
!4904 = !DILocation(line: 450, column: 9, scope: !4879)
!4905 = !DILocation(line: 455, column: 9, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4879, file: !629, line: 455, column: 9)
!4907 = !DILocation(line: 455, column: 36, scope: !4906)
!4908 = !DILocation(line: 455, column: 9, scope: !4879)
!4909 = !DILocation(line: 459, column: 18, scope: !4879)
!4910 = !DILocation(line: 466, column: 5, scope: !4879)
!4911 = !DILocation(line: 468, column: 13, scope: !4879)
!4912 = !DILocation(line: 470, column: 46, scope: !4879)
!4913 = !DILocation(line: 470, column: 5, scope: !4879)
!4914 = !DILocation(line: 471, column: 36, scope: !4879)
!4915 = !DILocation(line: 471, column: 57, scope: !4879)
!4916 = !DILocation(line: 471, column: 75, scope: !4879)
!4917 = !DILocation(line: 471, column: 5, scope: !4879)
!4918 = !DILocation(line: 473, column: 5, scope: !4879)
!4919 = !DILocation(line: 474, column: 1, scope: !4879)
!4920 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !629, file: !629, line: 130, type: !4921, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4923)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!91, !4882}
!4923 = !{!4924}
!4924 = !DILocalVariable(name: "config", arg: 1, scope: !4920, file: !629, line: 130, type: !4882)
!4925 = !DILocation(line: 0, scope: !4920)
!4926 = !DILocation(line: 132, column: 22, scope: !4920)
!4927 = !DILocation(line: 132, column: 31, scope: !4920)
!4928 = !DILocation(line: 132, column: 56, scope: !4920)
!4929 = !DILocation(line: 133, column: 22, scope: !4920)
!4930 = !DILocation(line: 133, column: 34, scope: !4920)
!4931 = !DILocation(line: 133, column: 61, scope: !4920)
!4932 = !DILocation(line: 134, column: 22, scope: !4920)
!4933 = !DILocation(line: 134, column: 31, scope: !4920)
!4934 = !DILocation(line: 134, column: 55, scope: !4920)
!4935 = !DILocation(line: 135, column: 22, scope: !4920)
!4936 = !DILocation(line: 135, column: 29, scope: !4920)
!4937 = !DILocation(line: 132, column: 5, scope: !4920)
!4938 = distinct !DISubprogram(name: "hal_uart_init", scope: !629, file: !629, line: 476, type: !4939, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4942)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{!4838, !735, !4941}
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 32)
!4942 = !{!4943, !4944, !4945, !4946, !4947, !4948, !4949}
!4943 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4938, file: !629, line: 476, type: !735)
!4944 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4938, file: !629, line: 476, type: !4941)
!4945 = !DILocalVariable(name: "uartx", scope: !4938, file: !629, line: 478, type: !4645)
!4946 = !DILocalVariable(name: "i", scope: !4938, file: !629, line: 479, type: !61)
!4947 = !DILocalVariable(name: "actual_baudrate", scope: !4938, file: !629, line: 479, type: !61)
!4948 = !DILocalVariable(name: "irq_status", scope: !4938, file: !629, line: 479, type: !61)
!4949 = !DILocalVariable(name: "status", scope: !4938, file: !629, line: 480, type: !4950)
!4950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !709, line: 106, baseType: !708)
!4951 = !DILocation(line: 0, scope: !4938)
!4952 = !DILocation(line: 482, column: 11, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4938, file: !629, line: 482, column: 9)
!4954 = !DILocation(line: 482, column: 42, scope: !4953)
!4955 = !DILocation(line: 483, column: 11, scope: !4953)
!4956 = !DILocation(line: 482, column: 9, scope: !4938)
!4957 = !DILocation(line: 487, column: 18, scope: !4938)
!4958 = !DILocation(line: 488, column: 9, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4938, file: !629, line: 488, column: 9)
!4960 = !DILocation(line: 488, column: 36, scope: !4959)
!4961 = !DILocation(line: 488, column: 9, scope: !4938)
!4962 = !DILocation(line: 489, column: 9, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !629, line: 488, column: 68)
!4964 = !DILocation(line: 490, column: 9, scope: !4963)
!4965 = !DILocation(line: 502, column: 9, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4938, file: !629, line: 502, column: 9)
!4967 = !DILocation(line: 502, column: 9, scope: !4938)
!4968 = !DILocation(line: 504, column: 13, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !629, line: 503, column: 44)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !629, line: 503, column: 9)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !629, line: 503, column: 9)
!4972 = distinct !DILexicalBlock(scope: !4966, file: !629, line: 502, column: 50)
!4973 = !DILocation(line: 504, column: 32, scope: !4969)
!4974 = !DILocation(line: 510, column: 32, scope: !4969)
!4975 = !DILocation(line: 510, column: 36, scope: !4969)
!4976 = !DILocation(line: 511, column: 32, scope: !4969)
!4977 = !DILocation(line: 511, column: 37, scope: !4969)
!4978 = !DILocation(line: 503, column: 40, scope: !4970)
!4979 = !DILocation(line: 503, column: 23, scope: !4970)
!4980 = !DILocation(line: 503, column: 9, scope: !4971)
!4981 = distinct !{!4981, !4980, !4982}
!4982 = !DILocation(line: 512, column: 9, scope: !4971)
!4983 = !DILocation(line: 513, column: 40, scope: !4972)
!4984 = !DILocation(line: 514, column: 5, scope: !4972)
!4985 = !DILocation(line: 521, column: 32, scope: !4938)
!4986 = !DILocation(line: 522, column: 5, scope: !4938)
!4987 = !DILocation(line: 524, column: 31, scope: !4938)
!4988 = !DILocation(line: 524, column: 14, scope: !4938)
!4989 = !DILocation(line: 525, column: 16, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4938, file: !629, line: 525, column: 9)
!4991 = !DILocation(line: 525, column: 9, scope: !4938)
!4992 = !DILocation(line: 526, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !629, line: 525, column: 40)
!4994 = !DILocation(line: 530, column: 13, scope: !4938)
!4995 = !DILocation(line: 532, column: 5, scope: !4938)
!4996 = !DILocation(line: 533, column: 56, scope: !4938)
!4997 = !DILocation(line: 533, column: 23, scope: !4938)
!4998 = !DILocation(line: 534, column: 5, scope: !4938)
!4999 = !DILocation(line: 535, column: 41, scope: !4938)
!5000 = !DILocation(line: 535, column: 67, scope: !4938)
!5001 = !DILocation(line: 535, column: 90, scope: !4938)
!5002 = !DILocation(line: 535, column: 5, scope: !4938)
!5003 = !DILocation(line: 536, column: 5, scope: !4938)
!5004 = !DILocation(line: 541, column: 5, scope: !4938)
!5005 = !DILocation(line: 542, column: 1, scope: !4938)
!5006 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !629, file: !629, line: 544, type: !5007, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5009)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!4838, !735}
!5009 = !{!5010, !5011, !5012, !5013, !5014, !5015, !5016}
!5010 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5006, file: !629, line: 544, type: !735)
!5011 = !DILocalVariable(name: "uartx", scope: !5006, file: !629, line: 546, type: !4645)
!5012 = !DILocalVariable(name: "tx_dma_channel", scope: !5006, file: !629, line: 547, type: !4640)
!5013 = !DILocalVariable(name: "rx_dma_channel", scope: !5006, file: !629, line: 547, type: !4640)
!5014 = !DILocalVariable(name: "irq_status", scope: !5006, file: !629, line: 548, type: !61)
!5015 = !DILocalVariable(name: "status", scope: !5006, file: !629, line: 549, type: !4701)
!5016 = !DILocalVariable(name: "clock_status", scope: !5006, file: !629, line: 550, type: !4950)
!5017 = !DILocation(line: 0, scope: !5006)
!5018 = !DILocation(line: 552, column: 10, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5006, file: !629, line: 552, column: 9)
!5020 = !DILocation(line: 552, column: 9, scope: !5006)
!5021 = !DILocation(line: 556, column: 18, scope: !5006)
!5022 = !DILocation(line: 557, column: 9, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5006, file: !629, line: 557, column: 9)
!5024 = !DILocation(line: 557, column: 36, scope: !5023)
!5025 = !DILocation(line: 557, column: 9, scope: !5006)
!5026 = !DILocation(line: 562, column: 13, scope: !5006)
!5027 = !DILocation(line: 565, column: 5, scope: !5006)
!5028 = !DILocation(line: 568, column: 9, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5006, file: !629, line: 568, column: 9)
!5030 = !DILocation(line: 568, column: 36, scope: !5029)
!5031 = !DILocation(line: 568, column: 9, scope: !5006)
!5032 = !DILocation(line: 569, column: 26, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5029, file: !629, line: 568, column: 70)
!5034 = !DILocation(line: 570, column: 26, scope: !5033)
!5035 = !DILocation(line: 572, column: 18, scope: !5033)
!5036 = !DILocation(line: 573, column: 20, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5033, file: !629, line: 573, column: 13)
!5038 = !DILocation(line: 573, column: 13, scope: !5033)
!5039 = !DILocation(line: 574, column: 13, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !629, line: 573, column: 32)
!5041 = !DILocation(line: 575, column: 13, scope: !5040)
!5042 = !DILocation(line: 578, column: 18, scope: !5033)
!5043 = !DILocation(line: 579, column: 20, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5033, file: !629, line: 579, column: 13)
!5045 = !DILocation(line: 579, column: 13, scope: !5033)
!5046 = !DILocation(line: 580, column: 13, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5044, file: !629, line: 579, column: 32)
!5048 = !DILocation(line: 581, column: 13, scope: !5047)
!5049 = !DILocation(line: 584, column: 18, scope: !5033)
!5050 = !DILocation(line: 585, column: 20, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5033, file: !629, line: 585, column: 13)
!5052 = !DILocation(line: 585, column: 13, scope: !5033)
!5053 = !DILocation(line: 586, column: 13, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 585, column: 32)
!5055 = !DILocation(line: 587, column: 13, scope: !5054)
!5056 = !DILocation(line: 590, column: 18, scope: !5033)
!5057 = !DILocation(line: 591, column: 20, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5033, file: !629, line: 591, column: 13)
!5059 = !DILocation(line: 591, column: 13, scope: !5033)
!5060 = !DILocation(line: 592, column: 13, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5058, file: !629, line: 591, column: 32)
!5062 = !DILocation(line: 593, column: 13, scope: !5061)
!5063 = !DILocation(line: 596, column: 18, scope: !5033)
!5064 = !DILocation(line: 597, column: 20, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5033, file: !629, line: 597, column: 13)
!5066 = !DILocation(line: 597, column: 13, scope: !5033)
!5067 = !DILocation(line: 598, column: 13, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5065, file: !629, line: 597, column: 32)
!5069 = !DILocation(line: 599, column: 13, scope: !5068)
!5070 = !DILocation(line: 602, column: 18, scope: !5033)
!5071 = !DILocation(line: 603, column: 20, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5033, file: !629, line: 603, column: 13)
!5073 = !DILocation(line: 603, column: 13, scope: !5033)
!5074 = !DILocation(line: 604, column: 13, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !629, line: 603, column: 32)
!5076 = !DILocation(line: 605, column: 13, scope: !5075)
!5077 = !DILocation(line: 608, column: 30, scope: !5033)
!5078 = !DILocation(line: 608, column: 9, scope: !5033)
!5079 = !DILocation(line: 609, column: 5, scope: !5033)
!5080 = !DILocation(line: 610, column: 5, scope: !5006)
!5081 = !DILocation(line: 611, column: 38, scope: !5006)
!5082 = !DILocation(line: 611, column: 20, scope: !5006)
!5083 = !DILocation(line: 612, column: 22, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5006, file: !629, line: 612, column: 9)
!5085 = !DILocation(line: 612, column: 9, scope: !5006)
!5086 = !DILocation(line: 613, column: 9, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5084, file: !629, line: 612, column: 46)
!5088 = !DILocation(line: 614, column: 9, scope: !5087)
!5089 = !DILocation(line: 618, column: 32, scope: !5006)
!5090 = !DILocation(line: 618, column: 37, scope: !5006)
!5091 = !DILocation(line: 619, column: 32, scope: !5006)
!5092 = !DILocation(line: 619, column: 36, scope: !5006)
!5093 = !DILocation(line: 635, column: 32, scope: !5006)
!5094 = !DILocation(line: 639, column: 5, scope: !5006)
!5095 = !DILocation(line: 640, column: 1, scope: !5006)
!5096 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !629, file: !629, line: 642, type: !5097, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5099)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{null, !735, !1693}
!5099 = !{!5100, !5101, !5102}
!5100 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5096, file: !629, line: 642, type: !735)
!5101 = !DILocalVariable(name: "byte", arg: 2, scope: !5096, file: !629, line: 642, type: !1693)
!5102 = !DILocalVariable(name: "uartx", scope: !5096, file: !629, line: 644, type: !4645)
!5103 = !DILocation(line: 0, scope: !5096)
!5104 = !DILocation(line: 646, column: 10, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 646, column: 9)
!5106 = !DILocation(line: 646, column: 9, scope: !5096)
!5107 = !DILocation(line: 650, column: 9, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 650, column: 9)
!5109 = !DILocation(line: 650, column: 36, scope: !5108)
!5110 = !DILocation(line: 650, column: 9, scope: !5096)
!5111 = !DILocation(line: 654, column: 13, scope: !5096)
!5112 = !DILocation(line: 655, column: 5, scope: !5096)
!5113 = !DILocation(line: 656, column: 1, scope: !5096)
!5114 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !629, file: !629, line: 658, type: !5115, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5118)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!61, !735, !5117, !61}
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!5118 = !{!5119, !5120, !5121, !5122}
!5119 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5114, file: !629, line: 658, type: !735)
!5120 = !DILocalVariable(name: "data", arg: 2, scope: !5114, file: !629, line: 658, type: !5117)
!5121 = !DILocalVariable(name: "size", arg: 3, scope: !5114, file: !629, line: 658, type: !61)
!5122 = !DILocalVariable(name: "i", scope: !5114, file: !629, line: 660, type: !61)
!5123 = !DILocation(line: 0, scope: !5114)
!5124 = !DILocation(line: 662, column: 11, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5114, file: !629, line: 662, column: 9)
!5126 = !DILocation(line: 662, column: 42, scope: !5125)
!5127 = !DILocation(line: 666, column: 9, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5114, file: !629, line: 666, column: 9)
!5129 = !DILocation(line: 666, column: 36, scope: !5128)
!5130 = !DILocation(line: 666, column: 9, scope: !5114)
!5131 = !DILocation(line: 671, column: 38, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5133, file: !629, line: 670, column: 32)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !629, line: 670, column: 5)
!5134 = distinct !DILexicalBlock(scope: !5114, file: !629, line: 670, column: 5)
!5135 = !DILocation(line: 671, column: 9, scope: !5132)
!5136 = !DILocation(line: 672, column: 13, scope: !5132)
!5137 = !DILocation(line: 670, column: 28, scope: !5133)
!5138 = !DILocation(line: 670, column: 19, scope: !5133)
!5139 = !DILocation(line: 670, column: 5, scope: !5134)
!5140 = distinct !{!5140, !5139, !5141}
!5141 = !DILocation(line: 673, column: 5, scope: !5134)
!5142 = !DILocation(line: 676, column: 1, scope: !5114)
!5143 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !629, file: !629, line: 678, type: !5115, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5144)
!5144 = !{!5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152}
!5145 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5143, file: !629, line: 678, type: !735)
!5146 = !DILocalVariable(name: "data", arg: 2, scope: !5143, file: !629, line: 678, type: !5117)
!5147 = !DILocalVariable(name: "size", arg: 3, scope: !5143, file: !629, line: 678, type: !61)
!5148 = !DILocalVariable(name: "channel", scope: !5143, file: !629, line: 680, type: !4640)
!5149 = !DILocalVariable(name: "i", scope: !5143, file: !629, line: 681, type: !61)
!5150 = !DILocalVariable(name: "real_count", scope: !5143, file: !629, line: 681, type: !61)
!5151 = !DILocalVariable(name: "avail_space", scope: !5143, file: !629, line: 681, type: !61)
!5152 = !DILocalVariable(name: "status", scope: !5143, file: !629, line: 682, type: !4701)
!5153 = !DILocation(line: 0, scope: !5143)
!5154 = !DILocation(line: 681, column: 5, scope: !5143)
!5155 = !DILocation(line: 687, column: 11, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5143, file: !629, line: 687, column: 9)
!5157 = !DILocation(line: 687, column: 42, scope: !5156)
!5158 = !DILocation(line: 691, column: 9, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5143, file: !629, line: 691, column: 9)
!5160 = !DILocation(line: 691, column: 36, scope: !5159)
!5161 = !DILocation(line: 691, column: 9, scope: !5143)
!5162 = !DILocation(line: 704, column: 15, scope: !5143)
!5163 = !DILocation(line: 706, column: 14, scope: !5143)
!5164 = !DILocation(line: 707, column: 16, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5143, file: !629, line: 707, column: 9)
!5166 = !DILocation(line: 707, column: 9, scope: !5143)
!5167 = !DILocation(line: 708, column: 9, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !629, line: 707, column: 28)
!5169 = !DILocation(line: 712, column: 9, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5143, file: !629, line: 712, column: 9)
!5171 = !DILocation(line: 712, column: 21, scope: !5170)
!5172 = !DILocation(line: 717, column: 19, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !629, line: 717, column: 5)
!5174 = distinct !DILexicalBlock(scope: !5143, file: !629, line: 717, column: 5)
!5175 = !DILocation(line: 717, column: 5, scope: !5174)
!5176 = distinct !{!5176, !5175, !5177}
!5177 = !DILocation(line: 723, column: 5, scope: !5174)
!5178 = !DILocation(line: 718, column: 42, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5173, file: !629, line: 717, column: 38)
!5180 = !DILocation(line: 718, column: 18, scope: !5179)
!5181 = !DILocation(line: 719, column: 20, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !629, line: 719, column: 13)
!5183 = !DILocation(line: 717, column: 34, scope: !5173)
!5184 = !DILocation(line: 719, column: 13, scope: !5179)
!5185 = !DILocation(line: 720, column: 13, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5182, file: !629, line: 719, column: 32)
!5187 = !DILocation(line: 728, column: 23, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5143, file: !629, line: 728, column: 9)
!5189 = !DILocation(line: 728, column: 20, scope: !5188)
!5190 = !DILocation(line: 728, column: 9, scope: !5143)
!5191 = !DILocation(line: 729, column: 18, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !629, line: 728, column: 36)
!5193 = !DILocation(line: 730, column: 20, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5192, file: !629, line: 730, column: 13)
!5195 = !DILocation(line: 730, column: 13, scope: !5192)
!5196 = !DILocation(line: 731, column: 13, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5194, file: !629, line: 730, column: 32)
!5198 = !DILocation(line: 737, column: 1, scope: !5143)
!5199 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !629, file: !629, line: 739, type: !5200, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5202)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{!1693, !735}
!5202 = !{!5203, !5204, !5205}
!5203 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5199, file: !629, line: 739, type: !735)
!5204 = !DILocalVariable(name: "data", scope: !5199, file: !629, line: 741, type: !1693)
!5205 = !DILocalVariable(name: "uartx", scope: !5199, file: !629, line: 742, type: !4645)
!5206 = !DILocation(line: 0, scope: !5199)
!5207 = !DILocation(line: 744, column: 10, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5199, file: !629, line: 744, column: 9)
!5209 = !DILocation(line: 744, column: 9, scope: !5199)
!5210 = !DILocation(line: 748, column: 9, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5199, file: !629, line: 748, column: 9)
!5212 = !DILocation(line: 748, column: 36, scope: !5211)
!5213 = !DILocation(line: 748, column: 9, scope: !5199)
!5214 = !DILocation(line: 752, column: 13, scope: !5199)
!5215 = !DILocation(line: 754, column: 12, scope: !5199)
!5216 = !DILocation(line: 756, column: 5, scope: !5199)
!5217 = !DILocation(line: 757, column: 1, scope: !5199)
!5218 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !629, file: !629, line: 759, type: !5219, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5221)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!61, !735}
!5221 = !{!5222, !5223, !5224}
!5222 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5218, file: !629, line: 759, type: !735)
!5223 = !DILocalVariable(name: "data", scope: !5218, file: !629, line: 761, type: !61)
!5224 = !DILocalVariable(name: "uartx", scope: !5218, file: !629, line: 762, type: !4645)
!5225 = !DILocation(line: 0, scope: !5218)
!5226 = !DILocation(line: 764, column: 10, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5218, file: !629, line: 764, column: 9)
!5228 = !DILocation(line: 764, column: 9, scope: !5218)
!5229 = !DILocation(line: 768, column: 9, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5218, file: !629, line: 768, column: 9)
!5231 = !DILocation(line: 768, column: 36, scope: !5230)
!5232 = !DILocation(line: 768, column: 9, scope: !5218)
!5233 = !DILocation(line: 772, column: 13, scope: !5218)
!5234 = !DILocation(line: 774, column: 12, scope: !5218)
!5235 = !DILocation(line: 776, column: 5, scope: !5218)
!5236 = !DILocation(line: 777, column: 1, scope: !5218)
!5237 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !629, file: !629, line: 779, type: !5238, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5240)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!61, !735, !762, !61}
!5240 = !{!5241, !5242, !5243, !5244, !5245}
!5241 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5237, file: !629, line: 779, type: !735)
!5242 = !DILocalVariable(name: "buffer", arg: 2, scope: !5237, file: !629, line: 779, type: !762)
!5243 = !DILocalVariable(name: "size", arg: 3, scope: !5237, file: !629, line: 779, type: !61)
!5244 = !DILocalVariable(name: "i", scope: !5237, file: !629, line: 781, type: !61)
!5245 = !DILocalVariable(name: "pbuf", scope: !5237, file: !629, line: 782, type: !762)
!5246 = !DILocation(line: 0, scope: !5237)
!5247 = !DILocation(line: 784, column: 11, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5237, file: !629, line: 784, column: 9)
!5249 = !DILocation(line: 784, column: 42, scope: !5248)
!5250 = !DILocation(line: 789, column: 9, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5237, file: !629, line: 789, column: 9)
!5252 = !DILocation(line: 789, column: 36, scope: !5251)
!5253 = !DILocation(line: 789, column: 9, scope: !5237)
!5254 = !DILocation(line: 794, column: 19, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !629, line: 793, column: 32)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !629, line: 793, column: 5)
!5257 = distinct !DILexicalBlock(scope: !5237, file: !629, line: 793, column: 5)
!5258 = !DILocation(line: 794, column: 9, scope: !5255)
!5259 = !DILocation(line: 794, column: 17, scope: !5255)
!5260 = !DILocation(line: 793, column: 28, scope: !5256)
!5261 = !DILocation(line: 793, column: 19, scope: !5256)
!5262 = !DILocation(line: 793, column: 5, scope: !5257)
!5263 = distinct !{!5263, !5262, !5264}
!5264 = !DILocation(line: 795, column: 5, scope: !5257)
!5265 = !DILocation(line: 798, column: 1, scope: !5237)
!5266 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !629, file: !629, line: 800, type: !5238, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5267)
!5267 = !{!5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275}
!5268 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5266, file: !629, line: 800, type: !735)
!5269 = !DILocalVariable(name: "buffer", arg: 2, scope: !5266, file: !629, line: 800, type: !762)
!5270 = !DILocalVariable(name: "size", arg: 3, scope: !5266, file: !629, line: 800, type: !61)
!5271 = !DILocalVariable(name: "channel", scope: !5266, file: !629, line: 802, type: !4640)
!5272 = !DILocalVariable(name: "receive_count", scope: !5266, file: !629, line: 803, type: !61)
!5273 = !DILocalVariable(name: "avail_count", scope: !5266, file: !629, line: 803, type: !61)
!5274 = !DILocalVariable(name: "index", scope: !5266, file: !629, line: 804, type: !61)
!5275 = !DILocalVariable(name: "status", scope: !5266, file: !629, line: 805, type: !4701)
!5276 = !DILocation(line: 0, scope: !5266)
!5277 = !DILocation(line: 803, column: 5, scope: !5266)
!5278 = !DILocation(line: 807, column: 11, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5266, file: !629, line: 807, column: 9)
!5280 = !DILocation(line: 807, column: 42, scope: !5279)
!5281 = !DILocation(line: 813, column: 9, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5266, file: !629, line: 813, column: 9)
!5283 = !DILocation(line: 813, column: 36, scope: !5282)
!5284 = !DILocation(line: 813, column: 9, scope: !5266)
!5285 = !DILocation(line: 817, column: 15, scope: !5266)
!5286 = !DILocation(line: 819, column: 14, scope: !5266)
!5287 = !DILocation(line: 820, column: 16, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5266, file: !629, line: 820, column: 9)
!5289 = !DILocation(line: 820, column: 9, scope: !5266)
!5290 = !DILocation(line: 821, column: 9, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5288, file: !629, line: 820, column: 28)
!5292 = !DILocation(line: 825, column: 9, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5266, file: !629, line: 825, column: 9)
!5294 = !DILocation(line: 825, column: 21, scope: !5293)
!5295 = !DILocation(line: 830, column: 27, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !629, line: 830, column: 5)
!5297 = distinct !DILexicalBlock(scope: !5266, file: !629, line: 830, column: 5)
!5298 = !DILocation(line: 830, column: 5, scope: !5297)
!5299 = distinct !{!5299, !5298, !5300}
!5300 = !DILocation(line: 836, column: 5, scope: !5297)
!5301 = !DILocation(line: 831, column: 42, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5296, file: !629, line: 830, column: 53)
!5303 = !DILocation(line: 831, column: 18, scope: !5302)
!5304 = !DILocation(line: 832, column: 20, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5302, file: !629, line: 832, column: 13)
!5306 = !DILocation(line: 830, column: 49, scope: !5296)
!5307 = !DILocation(line: 832, column: 13, scope: !5302)
!5308 = !DILocation(line: 833, column: 13, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5305, file: !629, line: 832, column: 32)
!5310 = !DILocation(line: 841, column: 26, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5266, file: !629, line: 841, column: 9)
!5312 = !DILocation(line: 841, column: 23, scope: !5311)
!5313 = !DILocation(line: 841, column: 9, scope: !5266)
!5314 = !DILocation(line: 842, column: 18, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5311, file: !629, line: 841, column: 39)
!5316 = !DILocation(line: 843, column: 20, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5315, file: !629, line: 843, column: 13)
!5318 = !DILocation(line: 843, column: 13, scope: !5315)
!5319 = !DILocation(line: 844, column: 13, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !629, line: 843, column: 32)
!5321 = !DILocation(line: 850, column: 1, scope: !5266)
!5322 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !629, file: !629, line: 891, type: !5323, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!4838, !735, !744, !88}
!5325 = !{!5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333}
!5326 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5322, file: !629, line: 891, type: !735)
!5327 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5322, file: !629, line: 892, type: !744)
!5328 = !DILocalVariable(name: "user_data", arg: 3, scope: !5322, file: !629, line: 893, type: !88)
!5329 = !DILocalVariable(name: "tx_dma_channel", scope: !5322, file: !629, line: 895, type: !4640)
!5330 = !DILocalVariable(name: "rx_dma_channel", scope: !5322, file: !629, line: 895, type: !4640)
!5331 = !DILocalVariable(name: "irq_status", scope: !5322, file: !629, line: 896, type: !61)
!5332 = !DILocalVariable(name: "status", scope: !5322, file: !629, line: 897, type: !4701)
!5333 = !DILocalVariable(name: "nvic_status", scope: !5322, file: !629, line: 898, type: !1089)
!5334 = !DILocation(line: 0, scope: !5322)
!5335 = !DILocation(line: 900, column: 11, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5322, file: !629, line: 900, column: 9)
!5337 = !DILocation(line: 900, column: 42, scope: !5336)
!5338 = !DILocation(line: 905, column: 18, scope: !5322)
!5339 = !DILocation(line: 906, column: 9, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5322, file: !629, line: 906, column: 9)
!5341 = !DILocation(line: 906, column: 36, scope: !5340)
!5342 = !DILocation(line: 906, column: 9, scope: !5322)
!5343 = !DILocation(line: 911, column: 22, scope: !5322)
!5344 = !DILocation(line: 912, column: 22, scope: !5322)
!5345 = !DILocation(line: 914, column: 32, scope: !5322)
!5346 = !DILocation(line: 914, column: 37, scope: !5322)
!5347 = !DILocation(line: 915, column: 32, scope: !5322)
!5348 = !DILocation(line: 915, column: 36, scope: !5322)
!5349 = !DILocation(line: 917, column: 91, scope: !5322)
!5350 = !DILocation(line: 917, column: 56, scope: !5322)
!5351 = !DILocation(line: 917, column: 5, scope: !5322)
!5352 = !DILocation(line: 918, column: 80, scope: !5322)
!5353 = !DILocation(line: 918, column: 14, scope: !5322)
!5354 = !DILocation(line: 919, column: 16, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5322, file: !629, line: 919, column: 9)
!5356 = !DILocation(line: 919, column: 9, scope: !5322)
!5357 = !DILocation(line: 920, column: 9, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5355, file: !629, line: 919, column: 28)
!5359 = !DILocation(line: 921, column: 9, scope: !5358)
!5360 = !DILocation(line: 924, column: 97, scope: !5322)
!5361 = !DILocation(line: 924, column: 56, scope: !5322)
!5362 = !DILocation(line: 924, column: 5, scope: !5322)
!5363 = !DILocation(line: 925, column: 80, scope: !5322)
!5364 = !DILocation(line: 925, column: 14, scope: !5322)
!5365 = !DILocation(line: 926, column: 16, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5322, file: !629, line: 926, column: 9)
!5367 = !DILocation(line: 926, column: 9, scope: !5322)
!5368 = !DILocation(line: 927, column: 9, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5366, file: !629, line: 926, column: 28)
!5370 = !DILocation(line: 928, column: 9, scope: !5369)
!5371 = !DILocation(line: 931, column: 49, scope: !5322)
!5372 = !DILocation(line: 931, column: 19, scope: !5322)
!5373 = !DILocation(line: 932, column: 21, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5322, file: !629, line: 932, column: 9)
!5375 = !DILocation(line: 932, column: 9, scope: !5322)
!5376 = !DILocation(line: 933, column: 9, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5374, file: !629, line: 932, column: 44)
!5378 = !DILocation(line: 934, column: 9, scope: !5377)
!5379 = !DILocation(line: 938, column: 5, scope: !5322)
!5380 = !DILocation(line: 940, column: 32, scope: !5322)
!5381 = !DILocation(line: 944, column: 5, scope: !5322)
!5382 = !DILocation(line: 945, column: 1, scope: !5322)
!5383 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !629, file: !629, line: 303, type: !5384, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5387)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{null, !5386, !88}
!5386 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !639, line: 225, baseType: !723)
!5387 = !{!5388, !5389, !5390}
!5388 = !DILocalVariable(name: "event", arg: 1, scope: !5383, file: !629, line: 303, type: !5386)
!5389 = !DILocalVariable(name: "user_data", arg: 2, scope: !5383, file: !629, line: 303, type: !88)
!5390 = !DILocalVariable(name: "callback_data", scope: !5383, file: !629, line: 305, type: !728)
!5391 = !DILocation(line: 0, scope: !5383)
!5392 = !DILocation(line: 307, column: 24, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5383, file: !629, line: 307, column: 9)
!5394 = !DILocation(line: 0, scope: !5393)
!5395 = !DILocation(line: 307, column: 9, scope: !5383)
!5396 = !DILocation(line: 308, column: 9, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5393, file: !629, line: 307, column: 39)
!5398 = !DILocation(line: 309, column: 5, scope: !5397)
!5399 = !DILocation(line: 310, column: 9, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5393, file: !629, line: 309, column: 12)
!5401 = !DILocation(line: 312, column: 1, scope: !5383)
!5402 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !629, file: !629, line: 852, type: !4810, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5403)
!5403 = !{!5404, !5405, !5406, !5407, !5408}
!5404 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5402, file: !629, line: 852, type: !735)
!5405 = !DILocalVariable(name: "uartx", scope: !5402, file: !629, line: 854, type: !4645)
!5406 = !DILocalVariable(name: "tx_dma_channel", scope: !5402, file: !629, line: 855, type: !4640)
!5407 = !DILocalVariable(name: "rx_dma_channel", scope: !5402, file: !629, line: 855, type: !4640)
!5408 = !DILocalVariable(name: "status", scope: !5402, file: !629, line: 856, type: !4701)
!5409 = !DILocation(line: 0, scope: !5402)
!5410 = !DILocation(line: 858, column: 13, scope: !5402)
!5411 = !DILocation(line: 859, column: 22, scope: !5402)
!5412 = !DILocation(line: 860, column: 22, scope: !5402)
!5413 = !DILocation(line: 866, column: 5, scope: !5402)
!5414 = !DILocation(line: 867, column: 25, scope: !5402)
!5415 = !DILocation(line: 867, column: 5, scope: !5402)
!5416 = !DILocation(line: 868, column: 14, scope: !5402)
!5417 = !DILocation(line: 869, column: 16, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5402, file: !629, line: 869, column: 9)
!5419 = !DILocation(line: 869, column: 9, scope: !5402)
!5420 = !DILocation(line: 870, column: 9, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5418, file: !629, line: 869, column: 28)
!5422 = !DILocation(line: 873, column: 14, scope: !5402)
!5423 = !DILocation(line: 874, column: 16, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5402, file: !629, line: 874, column: 9)
!5425 = !DILocation(line: 874, column: 9, scope: !5402)
!5426 = !DILocation(line: 875, column: 9, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5424, file: !629, line: 874, column: 28)
!5428 = !DILocation(line: 878, column: 14, scope: !5402)
!5429 = !DILocation(line: 879, column: 16, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5402, file: !629, line: 879, column: 9)
!5431 = !DILocation(line: 879, column: 9, scope: !5402)
!5432 = !DILocation(line: 880, column: 9, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !629, line: 879, column: 28)
!5434 = !DILocation(line: 883, column: 14, scope: !5402)
!5435 = !DILocation(line: 884, column: 16, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5402, file: !629, line: 884, column: 9)
!5437 = !DILocation(line: 884, column: 9, scope: !5402)
!5438 = !DILocation(line: 885, column: 9, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5436, file: !629, line: 884, column: 28)
!5440 = !DILocation(line: 888, column: 5, scope: !5402)
!5441 = !DILocation(line: 889, column: 1, scope: !5402)
!5442 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !629, file: !629, line: 947, type: !5219, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5443)
!5443 = !{!5444, !5445, !5446, !5447}
!5444 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5442, file: !629, line: 947, type: !735)
!5445 = !DILocalVariable(name: "channel", scope: !5442, file: !629, line: 949, type: !4640)
!5446 = !DILocalVariable(name: "roomleft", scope: !5442, file: !629, line: 950, type: !61)
!5447 = !DILocalVariable(name: "status", scope: !5442, file: !629, line: 951, type: !4701)
!5448 = !DILocation(line: 0, scope: !5442)
!5449 = !DILocation(line: 950, column: 5, scope: !5442)
!5450 = !DILocation(line: 953, column: 10, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5442, file: !629, line: 953, column: 9)
!5452 = !DILocation(line: 953, column: 9, scope: !5442)
!5453 = !DILocation(line: 957, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5442, file: !629, line: 957, column: 9)
!5455 = !DILocation(line: 957, column: 36, scope: !5454)
!5456 = !DILocation(line: 957, column: 9, scope: !5442)
!5457 = !DILocation(line: 961, column: 15, scope: !5442)
!5458 = !DILocation(line: 962, column: 14, scope: !5442)
!5459 = !DILocation(line: 963, column: 16, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5442, file: !629, line: 963, column: 9)
!5461 = !DILocation(line: 963, column: 9, scope: !5442)
!5462 = !DILocation(line: 964, column: 9, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5460, file: !629, line: 963, column: 28)
!5464 = !DILocation(line: 968, column: 12, scope: !5442)
!5465 = !DILocation(line: 968, column: 5, scope: !5442)
!5466 = !DILocation(line: 969, column: 1, scope: !5442)
!5467 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !629, file: !629, line: 971, type: !5219, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5468)
!5468 = !{!5469, !5470, !5471, !5472}
!5469 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5467, file: !629, line: 971, type: !735)
!5470 = !DILocalVariable(name: "channel", scope: !5467, file: !629, line: 973, type: !4640)
!5471 = !DILocalVariable(name: "avail", scope: !5467, file: !629, line: 974, type: !61)
!5472 = !DILocalVariable(name: "status", scope: !5467, file: !629, line: 975, type: !4701)
!5473 = !DILocation(line: 0, scope: !5467)
!5474 = !DILocation(line: 974, column: 5, scope: !5467)
!5475 = !DILocation(line: 977, column: 10, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5467, file: !629, line: 977, column: 9)
!5477 = !DILocation(line: 977, column: 9, scope: !5467)
!5478 = !DILocation(line: 981, column: 9, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5467, file: !629, line: 981, column: 9)
!5480 = !DILocation(line: 981, column: 36, scope: !5479)
!5481 = !DILocation(line: 981, column: 9, scope: !5467)
!5482 = !DILocation(line: 985, column: 15, scope: !5467)
!5483 = !DILocation(line: 986, column: 14, scope: !5467)
!5484 = !DILocation(line: 987, column: 16, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5467, file: !629, line: 987, column: 9)
!5486 = !DILocation(line: 987, column: 9, scope: !5467)
!5487 = !DILocation(line: 988, column: 9, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !629, line: 987, column: 28)
!5489 = !DILocation(line: 992, column: 12, scope: !5467)
!5490 = !DILocation(line: 992, column: 5, scope: !5467)
!5491 = !DILocation(line: 993, column: 1, scope: !5467)
!5492 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !629, file: !629, line: 995, type: !5007, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5493)
!5493 = !{!5494, !5495}
!5494 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5492, file: !629, line: 995, type: !735)
!5495 = !DILocalVariable(name: "uartx", scope: !5492, file: !629, line: 997, type: !4645)
!5496 = !DILocation(line: 0, scope: !5492)
!5497 = !DILocation(line: 999, column: 10, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5492, file: !629, line: 999, column: 9)
!5499 = !DILocation(line: 999, column: 9, scope: !5492)
!5500 = !DILocation(line: 1003, column: 9, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5492, file: !629, line: 1003, column: 9)
!5502 = !DILocation(line: 1003, column: 36, scope: !5501)
!5503 = !DILocation(line: 1003, column: 9, scope: !5492)
!5504 = !DILocation(line: 1007, column: 13, scope: !5492)
!5505 = !DILocation(line: 1009, column: 5, scope: !5492)
!5506 = !DILocation(line: 1015, column: 5, scope: !5492)
!5507 = !DILocation(line: 1016, column: 1, scope: !5492)
!5508 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !629, file: !629, line: 1018, type: !5509, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5511)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!4838, !735, !460, !460, !460}
!5511 = !{!5512, !5513, !5514, !5515, !5516}
!5512 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5508, file: !629, line: 1018, type: !735)
!5513 = !DILocalVariable(name: "xon", arg: 2, scope: !5508, file: !629, line: 1019, type: !460)
!5514 = !DILocalVariable(name: "xoff", arg: 3, scope: !5508, file: !629, line: 1020, type: !460)
!5515 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5508, file: !629, line: 1021, type: !460)
!5516 = !DILocalVariable(name: "uartx", scope: !5508, file: !629, line: 1023, type: !4645)
!5517 = !DILocation(line: 0, scope: !5508)
!5518 = !DILocation(line: 1025, column: 10, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5508, file: !629, line: 1025, column: 9)
!5520 = !DILocation(line: 1025, column: 9, scope: !5508)
!5521 = !DILocation(line: 1029, column: 9, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5508, file: !629, line: 1029, column: 9)
!5523 = !DILocation(line: 1029, column: 36, scope: !5522)
!5524 = !DILocation(line: 1029, column: 9, scope: !5508)
!5525 = !DILocation(line: 1033, column: 13, scope: !5508)
!5526 = !DILocation(line: 1035, column: 5, scope: !5508)
!5527 = !DILocation(line: 1044, column: 5, scope: !5508)
!5528 = !DILocation(line: 1045, column: 1, scope: !5508)
!5529 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !629, file: !629, line: 1047, type: !5007, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5530)
!5530 = !{!5531, !5532}
!5531 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5529, file: !629, line: 1047, type: !735)
!5532 = !DILocalVariable(name: "uartx", scope: !5529, file: !629, line: 1049, type: !4645)
!5533 = !DILocation(line: 0, scope: !5529)
!5534 = !DILocation(line: 1051, column: 10, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5529, file: !629, line: 1051, column: 9)
!5536 = !DILocation(line: 1051, column: 9, scope: !5529)
!5537 = !DILocation(line: 1055, column: 9, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5529, file: !629, line: 1055, column: 9)
!5539 = !DILocation(line: 1055, column: 36, scope: !5538)
!5540 = !DILocation(line: 1055, column: 9, scope: !5529)
!5541 = !DILocation(line: 1059, column: 13, scope: !5529)
!5542 = !DILocation(line: 1061, column: 5, scope: !5529)
!5543 = !DILocation(line: 1067, column: 5, scope: !5529)
!5544 = !DILocation(line: 1068, column: 1, scope: !5529)
!5545 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !629, file: !629, line: 1071, type: !5546, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5550)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{!4838, !735, !5548}
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 32)
!5549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !758)
!5550 = !{!5551, !5552, !5553, !5554, !5560, !5561, !5562}
!5551 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5545, file: !629, line: 1071, type: !735)
!5552 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5545, file: !629, line: 1071, type: !5548)
!5553 = !DILocalVariable(name: "irq_status", scope: !5545, file: !629, line: 1073, type: !61)
!5554 = !DILocalVariable(name: "internal_dma_config", scope: !5545, file: !629, line: 1074, type: !5555)
!5555 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !639, line: 283, baseType: !5556)
!5556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 280, size: 64, elements: !5557)
!5557 = !{!5558, !5559}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5556, file: !639, line: 281, baseType: !61, size: 32)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5556, file: !639, line: 282, baseType: !61, size: 32, offset: 32)
!5560 = !DILocalVariable(name: "tx_dma_channel", scope: !5545, file: !629, line: 1075, type: !4640)
!5561 = !DILocalVariable(name: "rx_dma_channel", scope: !5545, file: !629, line: 1075, type: !4640)
!5562 = !DILocalVariable(name: "status", scope: !5545, file: !629, line: 1076, type: !4701)
!5563 = !DILocation(line: 0, scope: !5545)
!5564 = !DILocation(line: 1074, column: 5, scope: !5545)
!5565 = !DILocation(line: 1074, column: 19, scope: !5545)
!5566 = !DILocation(line: 1078, column: 10, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1078, column: 9)
!5568 = !DILocation(line: 1078, column: 9, scope: !5545)
!5569 = !DILocation(line: 1081, column: 22, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1081, column: 9)
!5571 = !DILocation(line: 1081, column: 40, scope: !5570)
!5572 = !DILocation(line: 1081, column: 49, scope: !5570)
!5573 = !DILocation(line: 1082, column: 22, scope: !5570)
!5574 = !DILocation(line: 1082, column: 43, scope: !5570)
!5575 = !DILocation(line: 1081, column: 9, scope: !5545)
!5576 = !DILocation(line: 1085, column: 22, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1085, column: 9)
!5578 = !DILocation(line: 1085, column: 45, scope: !5577)
!5579 = !DILocation(line: 1085, column: 76, scope: !5577)
!5580 = !DILocation(line: 1086, column: 22, scope: !5577)
!5581 = !DILocation(line: 1086, column: 48, scope: !5577)
!5582 = !DILocation(line: 1086, column: 79, scope: !5577)
!5583 = !DILocation(line: 1090, column: 22, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1090, column: 9)
!5585 = !DILocation(line: 1090, column: 48, scope: !5584)
!5586 = !DILocation(line: 1090, column: 79, scope: !5584)
!5587 = !DILocation(line: 1091, column: 22, scope: !5584)
!5588 = !DILocation(line: 1091, column: 51, scope: !5584)
!5589 = !DILocation(line: 1091, column: 82, scope: !5584)
!5590 = !DILocation(line: 1092, column: 22, scope: !5584)
!5591 = !DILocation(line: 1092, column: 47, scope: !5584)
!5592 = !DILocation(line: 1092, column: 78, scope: !5584)
!5593 = !DILocation(line: 1098, column: 9, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1098, column: 9)
!5595 = !DILocation(line: 1098, column: 36, scope: !5594)
!5596 = !DILocation(line: 1098, column: 9, scope: !5545)
!5597 = !DILocation(line: 1102, column: 22, scope: !5545)
!5598 = !DILocation(line: 1103, column: 22, scope: !5545)
!5599 = !DILocation(line: 1105, column: 14, scope: !5545)
!5600 = !DILocation(line: 1106, column: 16, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1106, column: 9)
!5602 = !DILocation(line: 1106, column: 9, scope: !5545)
!5603 = !DILocation(line: 1107, column: 9, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5601, file: !629, line: 1106, column: 28)
!5605 = !DILocation(line: 1110, column: 62, scope: !5545)
!5606 = !DILocation(line: 1110, column: 40, scope: !5545)
!5607 = !DILocation(line: 1110, column: 25, scope: !5545)
!5608 = !DILocation(line: 1110, column: 38, scope: !5545)
!5609 = !DILocation(line: 1111, column: 44, scope: !5545)
!5610 = !DILocation(line: 1111, column: 25, scope: !5545)
!5611 = !DILocation(line: 1111, column: 30, scope: !5545)
!5612 = !DILocation(line: 1112, column: 14, scope: !5545)
!5613 = !DILocation(line: 1113, column: 16, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1113, column: 9)
!5615 = !DILocation(line: 1113, column: 9, scope: !5545)
!5616 = !DILocation(line: 1114, column: 9, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5614, file: !629, line: 1113, column: 28)
!5618 = !DILocation(line: 1117, column: 61, scope: !5545)
!5619 = !DILocation(line: 1117, column: 14, scope: !5545)
!5620 = !DILocation(line: 1118, column: 16, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1118, column: 9)
!5622 = !DILocation(line: 1118, column: 9, scope: !5545)
!5623 = !DILocation(line: 1119, column: 9, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5621, file: !629, line: 1118, column: 28)
!5625 = !DILocation(line: 1123, column: 14, scope: !5545)
!5626 = !DILocation(line: 1124, column: 16, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1124, column: 9)
!5628 = !DILocation(line: 1124, column: 9, scope: !5545)
!5629 = !DILocation(line: 1125, column: 9, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5627, file: !629, line: 1124, column: 28)
!5631 = !DILocation(line: 1128, column: 62, scope: !5545)
!5632 = !DILocation(line: 1128, column: 40, scope: !5545)
!5633 = !DILocation(line: 1128, column: 38, scope: !5545)
!5634 = !DILocation(line: 1129, column: 44, scope: !5545)
!5635 = !DILocation(line: 1129, column: 30, scope: !5545)
!5636 = !DILocation(line: 1130, column: 14, scope: !5545)
!5637 = !DILocation(line: 1131, column: 16, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1131, column: 9)
!5639 = !DILocation(line: 1131, column: 9, scope: !5545)
!5640 = !DILocation(line: 1132, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5638, file: !629, line: 1131, column: 28)
!5642 = !DILocation(line: 1135, column: 61, scope: !5545)
!5643 = !DILocation(line: 1135, column: 14, scope: !5545)
!5644 = !DILocation(line: 1136, column: 16, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1136, column: 9)
!5646 = !DILocation(line: 1136, column: 9, scope: !5545)
!5647 = !DILocation(line: 1137, column: 9, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5645, file: !629, line: 1136, column: 28)
!5649 = !DILocation(line: 1140, column: 64, scope: !5545)
!5650 = !DILocation(line: 1140, column: 14, scope: !5545)
!5651 = !DILocation(line: 1141, column: 16, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5545, file: !629, line: 1141, column: 9)
!5653 = !DILocation(line: 1141, column: 9, scope: !5545)
!5654 = !DILocation(line: 1142, column: 9, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !629, line: 1141, column: 28)
!5656 = !DILocation(line: 1146, column: 18, scope: !5545)
!5657 = !DILocation(line: 1147, column: 66, scope: !5545)
!5658 = !DILocation(line: 1147, column: 34, scope: !5545)
!5659 = !DILocation(line: 1147, column: 52, scope: !5545)
!5660 = !DILocation(line: 1148, column: 71, scope: !5545)
!5661 = !DILocation(line: 1148, column: 34, scope: !5545)
!5662 = !DILocation(line: 1148, column: 57, scope: !5545)
!5663 = !DILocation(line: 1149, column: 74, scope: !5545)
!5664 = !DILocation(line: 1149, column: 34, scope: !5545)
!5665 = !DILocation(line: 1149, column: 60, scope: !5545)
!5666 = !DILocation(line: 1150, column: 73, scope: !5545)
!5667 = !DILocation(line: 1150, column: 34, scope: !5545)
!5668 = !DILocation(line: 1150, column: 59, scope: !5545)
!5669 = !DILocation(line: 1151, column: 69, scope: !5545)
!5670 = !DILocation(line: 1151, column: 34, scope: !5545)
!5671 = !DILocation(line: 1151, column: 55, scope: !5545)
!5672 = !DILocation(line: 1152, column: 74, scope: !5545)
!5673 = !DILocation(line: 1152, column: 34, scope: !5545)
!5674 = !DILocation(line: 1152, column: 60, scope: !5545)
!5675 = !DILocation(line: 1153, column: 77, scope: !5545)
!5676 = !DILocation(line: 1153, column: 34, scope: !5545)
!5677 = !DILocation(line: 1153, column: 63, scope: !5545)
!5678 = !DILocation(line: 1154, column: 5, scope: !5545)
!5679 = !DILocation(line: 1156, column: 5, scope: !5545)
!5680 = !DILocation(line: 1157, column: 1, scope: !5545)
!5681 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2737, file: !2737, line: 52, type: !5682, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5739)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{null, !5684, !61}
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5685, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5686)
!5686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5687)
!5687 = !{!5688, !5694, !5699, !5705, !5706, !5711, !5716, !5717, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5686, file: !56, line: 547, baseType: !5689, size: 32)
!5689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5686, file: !56, line: 543, size: 32, elements: !5690)
!5690 = !{!5691, !5692, !5693}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5689, file: !56, line: 544, baseType: !272, size: 32)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5689, file: !56, line: 545, baseType: !60, size: 32)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5689, file: !56, line: 546, baseType: !60, size: 32)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5686, file: !56, line: 551, baseType: !5695, size: 32, offset: 32)
!5695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5686, file: !56, line: 548, size: 32, elements: !5696)
!5696 = !{!5697, !5698}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5695, file: !56, line: 549, baseType: !60, size: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5695, file: !56, line: 550, baseType: !60, size: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5686, file: !56, line: 556, baseType: !5700, size: 32, offset: 64)
!5700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5686, file: !56, line: 552, size: 32, elements: !5701)
!5701 = !{!5702, !5703, !5704}
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5700, file: !56, line: 553, baseType: !272, size: 32)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5700, file: !56, line: 554, baseType: !60, size: 32)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5700, file: !56, line: 555, baseType: !60, size: 32)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5686, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5686, file: !56, line: 561, baseType: !5707, size: 32, offset: 128)
!5707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5686, file: !56, line: 558, size: 32, elements: !5708)
!5708 = !{!5709, !5710}
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5707, file: !56, line: 559, baseType: !60, size: 32)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5707, file: !56, line: 560, baseType: !60, size: 32)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5686, file: !56, line: 565, baseType: !5712, size: 32, offset: 160)
!5712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5686, file: !56, line: 562, size: 32, elements: !5713)
!5713 = !{!5714, !5715}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5712, file: !56, line: 563, baseType: !272, size: 32)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5712, file: !56, line: 564, baseType: !60, size: 32)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5686, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5686, file: !56, line: 570, baseType: !5718, size: 32, offset: 224)
!5718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5686, file: !56, line: 567, size: 32, elements: !5719)
!5719 = !{!5720, !5721}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5718, file: !56, line: 568, baseType: !60, size: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5718, file: !56, line: 569, baseType: !60, size: 32)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5686, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5686, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5686, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5686, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5686, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5686, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5686, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5686, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5686, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5686, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5686, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5686, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5686, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5686, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5686, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5686, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5686, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5739 = !{!5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750, !5754}
!5740 = !DILocalVariable(name: "uartx", arg: 1, scope: !5681, file: !2737, line: 52, type: !5684)
!5741 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5681, file: !2737, line: 52, type: !61)
!5742 = !DILocalVariable(name: "uart_clock", scope: !5681, file: !2737, line: 54, type: !61)
!5743 = !DILocalVariable(name: "integer", scope: !5681, file: !2737, line: 54, type: !61)
!5744 = !DILocalVariable(name: "remainder", scope: !5681, file: !2737, line: 54, type: !61)
!5745 = !DILocalVariable(name: "fraction", scope: !5681, file: !2737, line: 54, type: !61)
!5746 = !DILocalVariable(name: "dll_dlm", scope: !5681, file: !2737, line: 55, type: !61)
!5747 = !DILocalVariable(name: "sample_count", scope: !5681, file: !2737, line: 55, type: !61)
!5748 = !DILocalVariable(name: "sample_point", scope: !5681, file: !2737, line: 55, type: !61)
!5749 = !DILocalVariable(name: "temp_lcr", scope: !5681, file: !2737, line: 55, type: !61)
!5750 = !DILocalVariable(name: "fraction_L_mapping", scope: !5681, file: !2737, line: 56, type: !5751)
!5751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5752)
!5752 = !{!5753}
!5753 = !DISubrange(count: 10)
!5754 = !DILocalVariable(name: "fraction_M_mapping", scope: !5681, file: !2737, line: 57, type: !5751)
!5755 = !DILocation(line: 0, scope: !5681)
!5756 = !DILocation(line: 56, column: 14, scope: !5681)
!5757 = !DILocation(line: 57, column: 5, scope: !5681)
!5758 = !DILocation(line: 57, column: 14, scope: !5681)
!5759 = !DILocation(line: 59, column: 12, scope: !5681)
!5760 = !DILocation(line: 59, column: 23, scope: !5681)
!5761 = !DILocation(line: 60, column: 12, scope: !5681)
!5762 = !DILocation(line: 60, column: 22, scope: !5681)
!5763 = !DILocation(line: 61, column: 12, scope: !5681)
!5764 = !DILocation(line: 61, column: 22, scope: !5681)
!5765 = !DILocation(line: 63, column: 9, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5681, file: !2737, line: 63, column: 9)
!5767 = !DILocation(line: 63, column: 9, scope: !5681)
!5768 = !DILocation(line: 64, column: 22, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5766, file: !2737, line: 63, column: 37)
!5770 = !DILocation(line: 64, column: 45, scope: !5769)
!5771 = !DILocation(line: 65, column: 5, scope: !5769)
!5772 = !DILocation(line: 0, scope: !5766)
!5773 = !DILocation(line: 69, column: 45, scope: !5681)
!5774 = !DILocation(line: 69, column: 26, scope: !5681)
!5775 = !DILocation(line: 70, column: 30, scope: !5681)
!5776 = !DILocation(line: 70, column: 36, scope: !5681)
!5777 = !DILocation(line: 70, column: 63, scope: !5681)
!5778 = !DILocation(line: 71, column: 20, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5681, file: !2737, line: 71, column: 9)
!5780 = !DILocation(line: 71, column: 26, scope: !5779)
!5781 = !DILocation(line: 77, column: 5, scope: !5681)
!5782 = !DILocation(line: 77, column: 25, scope: !5681)
!5783 = !DILocation(line: 78, column: 16, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5681, file: !2737, line: 77, column: 32)
!5785 = distinct !{!5785, !5781, !5786}
!5786 = !DILocation(line: 80, column: 5, scope: !5681)
!5787 = !DILocation(line: 82, column: 35, scope: !5681)
!5788 = !DILocation(line: 82, column: 66, scope: !5681)
!5789 = !DILocation(line: 84, column: 18, scope: !5681)
!5790 = !DILocation(line: 85, column: 34, scope: !5681)
!5791 = !DILocation(line: 85, column: 39, scope: !5681)
!5792 = !DILocation(line: 87, column: 12, scope: !5681)
!5793 = !DILocation(line: 87, column: 22, scope: !5681)
!5794 = !DILocation(line: 89, column: 23, scope: !5681)
!5795 = !DILocation(line: 90, column: 27, scope: !5681)
!5796 = !DILocation(line: 90, column: 16, scope: !5681)
!5797 = !DILocation(line: 91, column: 38, scope: !5681)
!5798 = !DILocation(line: 91, column: 24, scope: !5681)
!5799 = !DILocation(line: 91, column: 28, scope: !5681)
!5800 = !DILocation(line: 92, column: 35, scope: !5681)
!5801 = !DILocation(line: 92, column: 41, scope: !5681)
!5802 = !DILocation(line: 92, column: 20, scope: !5681)
!5803 = !DILocation(line: 92, column: 24, scope: !5681)
!5804 = !DILocation(line: 93, column: 16, scope: !5681)
!5805 = !DILocation(line: 95, column: 12, scope: !5681)
!5806 = !DILocation(line: 95, column: 25, scope: !5681)
!5807 = !DILocation(line: 96, column: 12, scope: !5681)
!5808 = !DILocation(line: 96, column: 25, scope: !5681)
!5809 = !DILocation(line: 98, column: 24, scope: !5681)
!5810 = !DILocation(line: 98, column: 22, scope: !5681)
!5811 = !DILocation(line: 99, column: 24, scope: !5681)
!5812 = !DILocation(line: 99, column: 22, scope: !5681)
!5813 = !DILocation(line: 101, column: 25, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5681, file: !2737, line: 101, column: 9)
!5815 = !DILocation(line: 101, column: 9, scope: !5681)
!5816 = !DILocation(line: 102, column: 16, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5814, file: !2737, line: 101, column: 37)
!5818 = !DILocation(line: 102, column: 22, scope: !5817)
!5819 = !DILocation(line: 103, column: 5, scope: !5817)
!5820 = !DILocation(line: 104, column: 1, scope: !5681)
!5821 = distinct !DISubprogram(name: "uart_set_format", scope: !2737, file: !2737, line: 106, type: !5822, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5824)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{null, !5684, !4889, !4891, !4893}
!5824 = !{!5825, !5826, !5827, !5828, !5829}
!5825 = !DILocalVariable(name: "uartx", arg: 1, scope: !5821, file: !2737, line: 106, type: !5684)
!5826 = !DILocalVariable(name: "word_length", arg: 2, scope: !5821, file: !2737, line: 107, type: !4889)
!5827 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5821, file: !2737, line: 108, type: !4891)
!5828 = !DILocalVariable(name: "parity", arg: 4, scope: !5821, file: !2737, line: 109, type: !4893)
!5829 = !DILocalVariable(name: "byte", scope: !5821, file: !2737, line: 111, type: !1029)
!5830 = !DILocation(line: 0, scope: !5821)
!5831 = !DILocation(line: 114, column: 19, scope: !5821)
!5832 = !DILocation(line: 115, column: 16, scope: !5821)
!5833 = !DILocation(line: 118, column: 10, scope: !5821)
!5834 = !DILocation(line: 119, column: 5, scope: !5821)
!5835 = !DILocation(line: 124, column: 18, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5821, file: !2737, line: 119, column: 26)
!5837 = !DILocation(line: 125, column: 13, scope: !5836)
!5838 = !DILocation(line: 127, column: 18, scope: !5836)
!5839 = !DILocation(line: 128, column: 13, scope: !5836)
!5840 = !DILocation(line: 130, column: 18, scope: !5836)
!5841 = !DILocation(line: 131, column: 13, scope: !5836)
!5842 = !DILocation(line: 137, column: 10, scope: !5821)
!5843 = !DILocation(line: 138, column: 5, scope: !5821)
!5844 = !DILocation(line: 151, column: 5, scope: !5821)
!5845 = !DILocation(line: 166, column: 18, scope: !5821)
!5846 = !DILocation(line: 166, column: 16, scope: !5821)
!5847 = !DILocation(line: 167, column: 1, scope: !5821)
!5848 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2737, file: !2737, line: 169, type: !5849, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5851)
!5849 = !DISubroutineType(types: !5850)
!5850 = !{null, !5684, !460}
!5851 = !{!5852, !5853, !5854}
!5852 = !DILocalVariable(name: "uartx", arg: 1, scope: !5848, file: !2737, line: 169, type: !5684)
!5853 = !DILocalVariable(name: "byte", arg: 2, scope: !5848, file: !2737, line: 169, type: !460)
!5854 = !DILocalVariable(name: "LSR", scope: !5848, file: !2737, line: 171, type: !1029)
!5855 = !DILocation(line: 0, scope: !5848)
!5856 = !DILocation(line: 173, column: 5, scope: !5848)
!5857 = !DILocation(line: 174, column: 31, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5848, file: !2737, line: 173, column: 15)
!5859 = !DILocation(line: 175, column: 17, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5858, file: !2737, line: 175, column: 13)
!5861 = !DILocation(line: 175, column: 13, scope: !5858)
!5862 = distinct !{!5862, !5856, !5863}
!5863 = !DILocation(line: 179, column: 5, scope: !5848)
!5864 = !DILocation(line: 176, column: 38, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5860, file: !2737, line: 175, column: 39)
!5866 = !DILocation(line: 176, column: 32, scope: !5865)
!5867 = !DILocation(line: 176, column: 36, scope: !5865)
!5868 = !DILocation(line: 180, column: 1, scope: !5848)
!5869 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2737, file: !2737, line: 182, type: !5870, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5872)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!460, !5684}
!5872 = !{!5873, !5874, !5875}
!5873 = !DILocalVariable(name: "uartx", arg: 1, scope: !5869, file: !2737, line: 182, type: !5684)
!5874 = !DILocalVariable(name: "LSR", scope: !5869, file: !2737, line: 184, type: !1029)
!5875 = !DILocalVariable(name: "byte", scope: !5869, file: !2737, line: 185, type: !460)
!5876 = !DILocation(line: 0, scope: !5869)
!5877 = !DILocation(line: 187, column: 5, scope: !5869)
!5878 = !DILocation(line: 188, column: 31, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5869, file: !2737, line: 187, column: 15)
!5880 = !DILocation(line: 189, column: 17, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5879, file: !2737, line: 189, column: 13)
!5882 = !DILocation(line: 189, column: 13, scope: !5879)
!5883 = distinct !{!5883, !5877, !5884}
!5884 = !DILocation(line: 193, column: 5, scope: !5869)
!5885 = !DILocation(line: 190, column: 48, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5881, file: !2737, line: 189, column: 37)
!5887 = !DILocation(line: 190, column: 20, scope: !5886)
!5888 = !DILocation(line: 195, column: 5, scope: !5869)
!5889 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2737, file: !2737, line: 198, type: !5890, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!61, !5684}
!5892 = !{!5893, !5894, !5895}
!5893 = !DILocalVariable(name: "uartx", arg: 1, scope: !5889, file: !2737, line: 198, type: !5684)
!5894 = !DILocalVariable(name: "LSR", scope: !5889, file: !2737, line: 200, type: !1029)
!5895 = !DILocalVariable(name: "value", scope: !5889, file: !2737, line: 201, type: !61)
!5896 = !DILocation(line: 0, scope: !5889)
!5897 = !DILocation(line: 203, column: 27, scope: !5889)
!5898 = !DILocation(line: 204, column: 13, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5889, file: !2737, line: 204, column: 9)
!5900 = !DILocation(line: 204, column: 9, scope: !5889)
!5901 = !DILocation(line: 205, column: 36, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5899, file: !2737, line: 204, column: 33)
!5903 = !DILocation(line: 206, column: 5, scope: !5902)
!5904 = !DILocation(line: 0, scope: !5899)
!5905 = !DILocation(line: 210, column: 5, scope: !5889)
!5906 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2737, file: !2737, line: 213, type: !5907, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5909)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{null, !5684}
!5909 = !{!5910, !5911, !5912}
!5910 = !DILocalVariable(name: "uartx", arg: 1, scope: !5906, file: !2737, line: 213, type: !5684)
!5911 = !DILocalVariable(name: "EFR", scope: !5906, file: !2737, line: 215, type: !1029)
!5912 = !DILocalVariable(name: "LCR", scope: !5906, file: !2737, line: 215, type: !1029)
!5913 = !DILocation(line: 0, scope: !5906)
!5914 = !DILocation(line: 217, column: 18, scope: !5906)
!5915 = !DILocation(line: 219, column: 16, scope: !5906)
!5916 = !DILocation(line: 220, column: 30, scope: !5906)
!5917 = !DILocation(line: 222, column: 30, scope: !5906)
!5918 = !DILocation(line: 222, column: 28, scope: !5906)
!5919 = !DILocation(line: 223, column: 12, scope: !5906)
!5920 = !DILocation(line: 223, column: 22, scope: !5906)
!5921 = !DILocation(line: 225, column: 16, scope: !5906)
!5922 = !DILocation(line: 226, column: 21, scope: !5906)
!5923 = !DILocation(line: 226, column: 25, scope: !5906)
!5924 = !DILocation(line: 228, column: 18, scope: !5906)
!5925 = !DILocation(line: 228, column: 16, scope: !5906)
!5926 = !DILocation(line: 229, column: 1, scope: !5906)
!5927 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2737, file: !2737, line: 231, type: !5928, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5930)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{null, !5684, !460, !460, !460}
!5930 = !{!5931, !5932, !5933, !5934, !5935, !5936}
!5931 = !DILocalVariable(name: "uartx", arg: 1, scope: !5927, file: !2737, line: 231, type: !5684)
!5932 = !DILocalVariable(name: "xon", arg: 2, scope: !5927, file: !2737, line: 232, type: !460)
!5933 = !DILocalVariable(name: "xoff", arg: 3, scope: !5927, file: !2737, line: 233, type: !460)
!5934 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5927, file: !2737, line: 234, type: !460)
!5935 = !DILocalVariable(name: "EFR", scope: !5927, file: !2737, line: 236, type: !1029)
!5936 = !DILocalVariable(name: "LCR", scope: !5927, file: !2737, line: 236, type: !1029)
!5937 = !DILocation(line: 0, scope: !5927)
!5938 = !DILocation(line: 238, column: 18, scope: !5927)
!5939 = !DILocation(line: 240, column: 16, scope: !5927)
!5940 = !DILocation(line: 241, column: 28, scope: !5927)
!5941 = !DILocation(line: 241, column: 21, scope: !5927)
!5942 = !DILocation(line: 241, column: 26, scope: !5927)
!5943 = !DILocation(line: 242, column: 20, scope: !5927)
!5944 = !DILocation(line: 242, column: 12, scope: !5927)
!5945 = !DILocation(line: 242, column: 18, scope: !5927)
!5946 = !DILocation(line: 243, column: 30, scope: !5927)
!5947 = !DILocation(line: 245, column: 30, scope: !5927)
!5948 = !DILocation(line: 245, column: 28, scope: !5927)
!5949 = !DILocation(line: 246, column: 25, scope: !5927)
!5950 = !DILocation(line: 246, column: 12, scope: !5927)
!5951 = !DILocation(line: 246, column: 23, scope: !5927)
!5952 = !DILocation(line: 247, column: 12, scope: !5927)
!5953 = !DILocation(line: 247, column: 22, scope: !5927)
!5954 = !DILocation(line: 249, column: 18, scope: !5927)
!5955 = !DILocation(line: 249, column: 16, scope: !5927)
!5956 = !DILocation(line: 250, column: 1, scope: !5927)
!5957 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2737, file: !2737, line: 252, type: !5907, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5958)
!5958 = !{!5959, !5960}
!5959 = !DILocalVariable(name: "uartx", arg: 1, scope: !5957, file: !2737, line: 252, type: !5684)
!5960 = !DILocalVariable(name: "LCR", scope: !5957, file: !2737, line: 254, type: !1029)
!5961 = !DILocation(line: 0, scope: !5957)
!5962 = !DILocation(line: 256, column: 18, scope: !5957)
!5963 = !DILocation(line: 258, column: 16, scope: !5957)
!5964 = !DILocation(line: 259, column: 24, scope: !5957)
!5965 = !DILocation(line: 259, column: 28, scope: !5957)
!5966 = !DILocation(line: 261, column: 16, scope: !5957)
!5967 = !DILocation(line: 262, column: 18, scope: !5957)
!5968 = !DILocation(line: 262, column: 16, scope: !5957)
!5969 = !DILocation(line: 263, column: 1, scope: !5957)
!5970 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2737, file: !2737, line: 265, type: !5907, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5971)
!5971 = !{!5972, !5973, !5974}
!5972 = !DILocalVariable(name: "uartx", arg: 1, scope: !5970, file: !2737, line: 265, type: !5684)
!5973 = !DILocalVariable(name: "EFR", scope: !5970, file: !2737, line: 267, type: !1029)
!5974 = !DILocalVariable(name: "LCR", scope: !5970, file: !2737, line: 267, type: !1029)
!5975 = !DILocation(line: 0, scope: !5970)
!5976 = !DILocation(line: 269, column: 18, scope: !5970)
!5977 = !DILocation(line: 271, column: 16, scope: !5970)
!5978 = !DILocation(line: 272, column: 30, scope: !5970)
!5979 = !DILocation(line: 274, column: 30, scope: !5970)
!5980 = !DILocation(line: 274, column: 28, scope: !5970)
!5981 = !DILocation(line: 276, column: 16, scope: !5970)
!5982 = !DILocation(line: 277, column: 28, scope: !5970)
!5983 = !DILocation(line: 283, column: 18, scope: !5970)
!5984 = !DILocation(line: 283, column: 16, scope: !5970)
!5985 = !DILocation(line: 284, column: 1, scope: !5970)
!5986 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2737, file: !2737, line: 307, type: !5907, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !5987)
!5987 = !{!5988, !5989, !5990}
!5988 = !DILocalVariable(name: "uartx", arg: 1, scope: !5986, file: !2737, line: 307, type: !5684)
!5989 = !DILocalVariable(name: "IER", scope: !5986, file: !2737, line: 309, type: !1029)
!5990 = !DILocalVariable(name: "LCR", scope: !5986, file: !2737, line: 309, type: !1029)
!5991 = !DILocation(line: 0, scope: !5986)
!5992 = !DILocation(line: 311, column: 18, scope: !5986)
!5993 = !DILocation(line: 313, column: 16, scope: !5986)
!5994 = !DILocation(line: 314, column: 26, scope: !5986)
!5995 = !DILocation(line: 316, column: 26, scope: !5986)
!5996 = !DILocation(line: 316, column: 24, scope: !5986)
!5997 = !DILocation(line: 318, column: 19, scope: !5986)
!5998 = !DILocation(line: 318, column: 16, scope: !5986)
!5999 = !DILocation(line: 319, column: 1, scope: !5986)
!6000 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2737, file: !2737, line: 321, type: !6001, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6003)
!6001 = !DISubroutineType(types: !6002)
!6002 = !{null, !5684, !1156}
!6003 = !{!6004, !6005, !6006}
!6004 = !DILocalVariable(name: "uartx", arg: 1, scope: !6000, file: !2737, line: 321, type: !5684)
!6005 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6000, file: !2737, line: 321, type: !1156)
!6006 = !DILocalVariable(name: "FCR", scope: !6000, file: !2737, line: 323, type: !1029)
!6007 = !DILocation(line: 0, scope: !6000)
!6008 = !DILocation(line: 327, column: 9, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6000, file: !2737, line: 327, column: 9)
!6010 = !DILocation(line: 333, column: 24, scope: !6000)
!6011 = !DILocation(line: 333, column: 28, scope: !6000)
!6012 = !DILocation(line: 334, column: 1, scope: !6000)
!6013 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2737, file: !2737, line: 336, type: !6014, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6017)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!6016, !5684}
!6016 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !730, line: 55, baseType: !786)
!6017 = !{!6018, !6019, !6020, !6021}
!6018 = !DILocalVariable(name: "uartx", arg: 1, scope: !6013, file: !2737, line: 336, type: !5684)
!6019 = !DILocalVariable(name: "IIR", scope: !6013, file: !2737, line: 338, type: !1029)
!6020 = !DILocalVariable(name: "LSR", scope: !6013, file: !2737, line: 338, type: !1029)
!6021 = !DILocalVariable(name: "type", scope: !6013, file: !2737, line: 339, type: !6016)
!6022 = !DILocation(line: 0, scope: !6013)
!6023 = !DILocation(line: 341, column: 30, scope: !6013)
!6024 = !DILocation(line: 342, column: 13, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6013, file: !2737, line: 342, column: 9)
!6026 = !DILocation(line: 342, column: 9, scope: !6013)
!6027 = !DILocation(line: 346, column: 17, scope: !6013)
!6028 = !DILocation(line: 346, column: 5, scope: !6013)
!6029 = !DILocation(line: 350, column: 13, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6013, file: !2737, line: 346, column: 37)
!6031 = !DILocation(line: 353, column: 35, scope: !6030)
!6032 = !DILocation(line: 354, column: 21, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !2737, line: 354, column: 17)
!6034 = !DILocation(line: 363, column: 13, scope: !6030)
!6035 = !DILocation(line: 369, column: 1, scope: !6013)
!6036 = distinct !DISubprogram(name: "uart_verify_error", scope: !2737, file: !2737, line: 371, type: !6037, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6039)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!1156, !5684}
!6039 = !{!6040, !6041, !6042}
!6040 = !DILocalVariable(name: "uartx", arg: 1, scope: !6036, file: !2737, line: 371, type: !5684)
!6041 = !DILocalVariable(name: "LSR", scope: !6036, file: !2737, line: 373, type: !1029)
!6042 = !DILocalVariable(name: "ret", scope: !6036, file: !2737, line: 374, type: !1156)
!6043 = !DILocation(line: 0, scope: !6036)
!6044 = !DILocation(line: 376, column: 27, scope: !6036)
!6045 = !DILocation(line: 377, column: 15, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6036, file: !2737, line: 377, column: 9)
!6047 = !DILocation(line: 377, column: 9, scope: !6036)
!6048 = !DILocation(line: 381, column: 5, scope: !6036)
!6049 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2737, file: !2737, line: 384, type: !5907, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6050)
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "uartx", arg: 1, scope: !6049, file: !2737, line: 384, type: !5684)
!6052 = !DILocalVariable(name: "DMA_EN", scope: !6049, file: !2737, line: 386, type: !1029)
!6053 = !DILocation(line: 0, scope: !6049)
!6054 = !DILocation(line: 388, column: 21, scope: !6049)
!6055 = !DILocation(line: 390, column: 1, scope: !6049)
!6056 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2737, file: !2737, line: 392, type: !5907, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6057)
!6057 = !{!6058}
!6058 = !DILocalVariable(name: "uartx", arg: 1, scope: !6056, file: !2737, line: 392, type: !5684)
!6059 = !DILocation(line: 0, scope: !6056)
!6060 = !DILocation(line: 394, column: 12, scope: !6056)
!6061 = !DILocation(line: 394, column: 16, scope: !6056)
!6062 = !DILocation(line: 395, column: 24, scope: !6056)
!6063 = !DILocation(line: 395, column: 28, scope: !6056)
!6064 = !DILocation(line: 396, column: 21, scope: !6056)
!6065 = !DILocation(line: 396, column: 26, scope: !6056)
!6066 = !DILocation(line: 397, column: 12, scope: !6056)
!6067 = !DILocation(line: 397, column: 18, scope: !6056)
!6068 = !DILocation(line: 399, column: 16, scope: !6056)
!6069 = !DILocation(line: 400, column: 24, scope: !6056)
!6070 = !DILocation(line: 400, column: 28, scope: !6056)
!6071 = !DILocation(line: 401, column: 20, scope: !6056)
!6072 = !DILocation(line: 401, column: 24, scope: !6056)
!6073 = !DILocation(line: 403, column: 16, scope: !6056)
!6074 = !DILocation(line: 404, column: 24, scope: !6056)
!6075 = !DILocation(line: 405, column: 28, scope: !6056)
!6076 = !DILocation(line: 407, column: 16, scope: !6056)
!6077 = !DILocation(line: 408, column: 28, scope: !6056)
!6078 = !DILocation(line: 409, column: 16, scope: !6056)
!6079 = !DILocation(line: 411, column: 25, scope: !6056)
!6080 = !DILocation(line: 412, column: 22, scope: !6056)
!6081 = !DILocation(line: 412, column: 26, scope: !6056)
!6082 = !DILocation(line: 413, column: 12, scope: !6056)
!6083 = !DILocation(line: 413, column: 24, scope: !6056)
!6084 = !DILocation(line: 414, column: 12, scope: !6056)
!6085 = !DILocation(line: 414, column: 22, scope: !6056)
!6086 = !DILocation(line: 415, column: 12, scope: !6056)
!6087 = !DILocation(line: 415, column: 25, scope: !6056)
!6088 = !DILocation(line: 416, column: 12, scope: !6056)
!6089 = !DILocation(line: 416, column: 25, scope: !6056)
!6090 = !DILocation(line: 417, column: 12, scope: !6056)
!6091 = !DILocation(line: 417, column: 23, scope: !6056)
!6092 = !DILocation(line: 418, column: 12, scope: !6056)
!6093 = !DILocation(line: 418, column: 27, scope: !6056)
!6094 = !DILocation(line: 419, column: 12, scope: !6056)
!6095 = !DILocation(line: 419, column: 18, scope: !6056)
!6096 = !DILocation(line: 420, column: 12, scope: !6056)
!6097 = !DILocation(line: 420, column: 23, scope: !6056)
!6098 = !DILocation(line: 421, column: 12, scope: !6056)
!6099 = !DILocation(line: 421, column: 22, scope: !6056)
!6100 = !DILocation(line: 422, column: 12, scope: !6056)
!6101 = !DILocation(line: 422, column: 21, scope: !6056)
!6102 = !DILocation(line: 423, column: 12, scope: !6056)
!6103 = !DILocation(line: 423, column: 19, scope: !6056)
!6104 = !DILocation(line: 424, column: 23, scope: !6056)
!6105 = !DILocation(line: 425, column: 12, scope: !6056)
!6106 = !DILocation(line: 425, column: 22, scope: !6056)
!6107 = !DILocation(line: 426, column: 12, scope: !6056)
!6108 = !DILocation(line: 426, column: 22, scope: !6056)
!6109 = !DILocation(line: 427, column: 1, scope: !6056)
!6110 = distinct !DISubprogram(name: "uart_query_empty", scope: !2737, file: !2737, line: 429, type: !5907, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6111)
!6111 = !{!6112}
!6112 = !DILocalVariable(name: "uartx", arg: 1, scope: !6110, file: !2737, line: 429, type: !5684)
!6113 = !DILocation(line: 0, scope: !6110)
!6114 = !DILocation(line: 431, column: 5, scope: !6110)
!6115 = !DILocation(line: 431, column: 31, scope: !6110)
!6116 = !DILocation(line: 431, column: 36, scope: !6110)
!6117 = !DILocation(line: 431, column: 12, scope: !6110)
!6118 = distinct !{!6118, !6114, !6119}
!6119 = !DILocation(line: 431, column: 44, scope: !6110)
!6120 = !DILocation(line: 432, column: 1, scope: !6110)
!6121 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !784, file: !784, line: 134, type: !6122, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{!4640, !735, !1156}
!6124 = !{!6125, !6126, !6127}
!6125 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6121, file: !784, line: 134, type: !735)
!6126 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6121, file: !784, line: 134, type: !1156)
!6127 = !DILocalVariable(name: "dma_channel", scope: !6121, file: !784, line: 136, type: !4640)
!6128 = !DILocation(line: 0, scope: !6121)
!6129 = !DILocation(line: 138, column: 5, scope: !6121)
!6130 = !DILocation(line: 140, column: 17, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !784, line: 140, column: 17)
!6132 = distinct !DILexicalBlock(scope: !6121, file: !784, line: 138, column: 24)
!6133 = !DILocation(line: 147, column: 17, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6132, file: !784, line: 147, column: 17)
!6135 = !DILocation(line: 154, column: 17, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6132, file: !784, line: 154, column: 17)
!6137 = !DILocation(line: 161, column: 17, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6132, file: !784, line: 161, column: 17)
!6139 = !DILocation(line: 171, column: 5, scope: !6121)
!6140 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !784, file: !784, line: 174, type: !6141, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6149)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{null, !4640, !6143}
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 32)
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !6145)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !6146)
!6146 = !{!6147, !6148}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6145, file: !730, line: 94, baseType: !91, size: 8)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6145, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6140, file: !784, line: 174, type: !4640)
!6151 = !DILocalVariable(name: "user_data", arg: 2, scope: !6140, file: !784, line: 174, type: !6143)
!6152 = !DILocation(line: 0, scope: !6140)
!6153 = !DILocation(line: 176, column: 5, scope: !6140)
!6154 = !DILocation(line: 0, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6140, file: !784, line: 176, column: 26)
!6156 = !DILocation(line: 212, column: 1, scope: !6140)
!6157 = distinct !DISubprogram(name: "uart_enable_dma", scope: !784, file: !784, line: 214, type: !6158, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6160)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{null, !797}
!6160 = !{!6161}
!6161 = !DILocalVariable(name: "uartx", arg: 1, scope: !6157, file: !784, line: 214, type: !797)
!6162 = !DILocation(line: 0, scope: !6157)
!6163 = !DILocation(line: 216, column: 12, scope: !6157)
!6164 = !DILocation(line: 216, column: 19, scope: !6157)
!6165 = !DILocation(line: 217, column: 1, scope: !6157)
!6166 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !784, file: !784, line: 219, type: !1168, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6167)
!6167 = !{!6168, !6169, !6170, !6171}
!6168 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6166, file: !784, line: 219, type: !862)
!6169 = !DILocalVariable(name: "uart_port", scope: !6166, file: !784, line: 221, type: !735)
!6170 = !DILocalVariable(name: "type", scope: !6166, file: !784, line: 222, type: !6016)
!6171 = !DILocalVariable(name: "uartx", scope: !6166, file: !784, line: 223, type: !797)
!6172 = !DILocation(line: 0, scope: !6166)
!6173 = !DILocation(line: 225, column: 5, scope: !6166)
!6174 = !DILocation(line: 242, column: 13, scope: !6166)
!6175 = !DILocation(line: 243, column: 12, scope: !6166)
!6176 = !DILocation(line: 245, column: 5, scope: !6166)
!6177 = !DILocation(line: 248, column: 13, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6166, file: !784, line: 245, column: 19)
!6179 = !DILocation(line: 249, column: 13, scope: !6178)
!6180 = !DILocation(line: 252, column: 13, scope: !6178)
!6181 = !DILocation(line: 253, column: 13, scope: !6178)
!6182 = !DILocation(line: 263, column: 13, scope: !6178)
!6183 = !DILocation(line: 264, column: 13, scope: !6178)
!6184 = !DILocation(line: 276, column: 13, scope: !6178)
!6185 = !DILocation(line: 278, column: 1, scope: !6166)
!6186 = distinct !DISubprogram(name: "hal_i2c_master_init", scope: !869, file: !869, line: 150, type: !6187, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6196)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{!6189, !951, !6190}
!6189 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_status_t", file: !872, line: 461, baseType: !871)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_config_t", file: !872, line: 496, baseType: !6192)
!6192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 494, size: 32, elements: !6193)
!6193 = !{!6194}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !6192, file: !872, line: 495, baseType: !6195, size: 32)
!6195 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_frequency_t", file: !872, line: 478, baseType: !885)
!6196 = !{!6197, !6198, !6199, !6200}
!6197 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6186, file: !869, line: 150, type: !951)
!6198 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !6186, file: !869, line: 150, type: !6190)
!6199 = !DILocalVariable(name: "busy_status", scope: !6186, file: !869, line: 152, type: !6189)
!6200 = !DILocalVariable(name: "saved_mask", scope: !6201, file: !869, line: 163, type: !61)
!6201 = distinct !DILexicalBlock(scope: !6186, file: !869, line: 163, column: 5)
!6202 = !DILocation(line: 0, scope: !6186)
!6203 = !DILocation(line: 154, column: 28, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6186, file: !869, line: 154, column: 9)
!6205 = !DILocation(line: 154, column: 9, scope: !6186)
!6206 = !DILocation(line: 158, column: 46, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6186, file: !869, line: 158, column: 9)
!6208 = !DILocation(line: 158, column: 31, scope: !6207)
!6209 = !DILocation(line: 158, column: 9, scope: !6186)
!6210 = !DILocation(line: 163, column: 5, scope: !6201)
!6211 = !DILocation(line: 0, scope: !6201)
!6212 = !DILocation(line: 163, column: 5, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6201, file: !869, line: 163, column: 5)
!6214 = !DILocation(line: 163, column: 5, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6213, file: !869, line: 163, column: 5)
!6216 = !DILocation(line: 170, column: 22, scope: !6186)
!6217 = !DILocation(line: 170, column: 5, scope: !6186)
!6218 = !DILocation(line: 180, column: 45, scope: !6186)
!6219 = !DILocation(line: 180, column: 5, scope: !6186)
!6220 = !DILocation(line: 182, column: 5, scope: !6186)
!6221 = !DILocation(line: 165, column: 9, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !869, line: 164, column: 51)
!6223 = distinct !DILexicalBlock(scope: !6186, file: !869, line: 164, column: 9)
!6224 = !DILocation(line: 166, column: 9, scope: !6222)
!6225 = !DILocation(line: 183, column: 1, scope: !6186)
!6226 = distinct !DISubprogram(name: "hal_i2c_master_deinit", scope: !869, file: !869, line: 186, type: !6227, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6229)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!6189, !951}
!6229 = !{!6230}
!6230 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6226, file: !869, line: 186, type: !951)
!6231 = !DILocation(line: 0, scope: !6226)
!6232 = !DILocation(line: 189, column: 28, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6226, file: !869, line: 189, column: 9)
!6234 = !DILocation(line: 189, column: 9, scope: !6226)
!6235 = !DILocation(line: 195, column: 5, scope: !6226)
!6236 = !DILocation(line: 198, column: 26, scope: !6226)
!6237 = !DILocation(line: 198, column: 5, scope: !6226)
!6238 = !DILocation(line: 201, column: 5, scope: !6226)
!6239 = !DILocation(line: 204, column: 5, scope: !6226)
!6240 = !DILocation(line: 204, column: 30, scope: !6226)
!6241 = !DILocation(line: 207, column: 35, scope: !6226)
!6242 = !DILocation(line: 207, column: 46, scope: !6226)
!6243 = !DILocation(line: 209, column: 23, scope: !6226)
!6244 = !DILocation(line: 209, column: 5, scope: !6226)
!6245 = !DILocation(line: 216, column: 5, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6226, file: !869, line: 216, column: 5)
!6247 = !DILocation(line: 218, column: 5, scope: !6226)
!6248 = !DILocation(line: 219, column: 1, scope: !6226)
!6249 = distinct !DISubprogram(name: "hal_i2c_master_set_frequency", scope: !869, file: !869, line: 222, type: !6250, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6252)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!6189, !951, !6195}
!6252 = !{!6253, !6254}
!6253 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6249, file: !869, line: 222, type: !951)
!6254 = !DILocalVariable(name: "frequency", arg: 2, scope: !6249, file: !869, line: 222, type: !6195)
!6255 = !DILocation(line: 0, scope: !6249)
!6256 = !DILocation(line: 224, column: 28, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6249, file: !869, line: 224, column: 9)
!6258 = !DILocation(line: 224, column: 9, scope: !6249)
!6259 = !DILocation(line: 227, column: 31, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6249, file: !869, line: 227, column: 9)
!6261 = !DILocation(line: 227, column: 9, scope: !6249)
!6262 = !DILocation(line: 230, column: 21, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6249, file: !869, line: 230, column: 9)
!6264 = !DILocation(line: 230, column: 18, scope: !6263)
!6265 = !DILocation(line: 230, column: 9, scope: !6249)
!6266 = !DILocation(line: 231, column: 9, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6263, file: !869, line: 230, column: 57)
!6268 = !DILocation(line: 232, column: 9, scope: !6267)
!6269 = !DILocation(line: 237, column: 5, scope: !6249)
!6270 = !DILocation(line: 239, column: 5, scope: !6249)
!6271 = !DILocation(line: 240, column: 1, scope: !6249)
!6272 = distinct !DISubprogram(name: "hal_i2c_master_register_callback", scope: !869, file: !869, line: 245, type: !6273, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6275)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{!6189, !951, !973, !88}
!6275 = !{!6276, !6277, !6278}
!6276 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6272, file: !869, line: 245, type: !951)
!6277 = !DILocalVariable(name: "i2c_callback", arg: 2, scope: !6272, file: !869, line: 245, type: !973)
!6278 = !DILocalVariable(name: "user_data", arg: 3, scope: !6272, file: !869, line: 245, type: !88)
!6279 = !DILocation(line: 0, scope: !6272)
!6280 = !DILocation(line: 247, column: 28, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6272, file: !869, line: 247, column: 9)
!6282 = !DILocation(line: 247, column: 9, scope: !6272)
!6283 = !DILocation(line: 250, column: 14, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6272, file: !869, line: 250, column: 9)
!6285 = !DILocation(line: 250, column: 9, scope: !6272)
!6286 = !DILocation(line: 255, column: 5, scope: !6272)
!6287 = !DILocation(line: 255, column: 30, scope: !6272)
!6288 = !DILocation(line: 256, column: 5, scope: !6272)
!6289 = !DILocation(line: 256, column: 40, scope: !6272)
!6290 = !DILocation(line: 259, column: 35, scope: !6272)
!6291 = !DILocation(line: 259, column: 5, scope: !6272)
!6292 = !DILocation(line: 260, column: 5, scope: !6272)
!6293 = !DILocation(line: 262, column: 5, scope: !6272)
!6294 = !DILocation(line: 263, column: 1, scope: !6272)
!6295 = distinct !DISubprogram(name: "hal_i2c_master_isr", scope: !869, file: !869, line: 844, type: !1168, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6296)
!6296 = !{!6297, !6298, !6299}
!6297 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6295, file: !869, line: 844, type: !862)
!6298 = !DILocalVariable(name: "i2c_port", scope: !6295, file: !869, line: 846, type: !951)
!6299 = !DILocalVariable(name: "i", scope: !6295, file: !869, line: 847, type: !61)
!6300 = !DILocation(line: 0, scope: !6295)
!6301 = !DILocation(line: 849, column: 5, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6295, file: !869, line: 849, column: 5)
!6303 = !DILocation(line: 850, column: 13, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !869, line: 850, column: 13)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !869, line: 849, column: 46)
!6306 = distinct !DILexicalBlock(scope: !6302, file: !869, line: 849, column: 5)
!6307 = !DILocation(line: 850, column: 32, scope: !6304)
!6308 = !DILocation(line: 850, column: 13, scope: !6305)
!6309 = !DILocation(line: 849, column: 42, scope: !6306)
!6310 = !DILocation(line: 849, column: 19, scope: !6306)
!6311 = distinct !{!6311, !6301, !6312}
!6312 = !DILocation(line: 854, column: 5, scope: !6302)
!6313 = !DILocation(line: 857, column: 9, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !869, line: 856, column: 41)
!6315 = distinct !DILexicalBlock(scope: !6295, file: !869, line: 856, column: 9)
!6316 = !DILocation(line: 858, column: 9, scope: !6314)
!6317 = !DILocation(line: 862, column: 35, scope: !6295)
!6318 = !DILocation(line: 862, column: 61, scope: !6295)
!6319 = !DILocation(line: 862, column: 5, scope: !6295)
!6320 = !DILocation(line: 864, column: 1, scope: !6295)
!6321 = distinct !DISubprogram(name: "hal_i2c_isr_handler", scope: !869, file: !869, line: 866, type: !6322, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6324)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{null, !951, !973, !88}
!6324 = !{!6325, !6326, !6327, !6328}
!6325 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6321, file: !869, line: 866, type: !951)
!6326 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6321, file: !869, line: 866, type: !973)
!6327 = !DILocalVariable(name: "user_data", arg: 3, scope: !6321, file: !869, line: 866, type: !88)
!6328 = !DILocalVariable(name: "transaction_status", scope: !6321, file: !869, line: 868, type: !6329)
!6329 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !901, line: 168, baseType: !900)
!6330 = !DILocation(line: 0, scope: !6321)
!6331 = !DILocation(line: 874, column: 26, scope: !6321)
!6332 = !DILocation(line: 876, column: 33, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6321, file: !869, line: 876, column: 9)
!6334 = !DILocation(line: 876, column: 9, scope: !6321)
!6335 = !DILocation(line: 877, column: 9, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6333, file: !869, line: 876, column: 56)
!6337 = !DILocation(line: 879, column: 32, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6336, file: !869, line: 879, column: 13)
!6339 = !DILocation(line: 879, column: 13, scope: !6336)
!6340 = !DILocation(line: 892, column: 5, scope: !6321)
!6341 = !DILocation(line: 896, column: 14, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6321, file: !869, line: 896, column: 9)
!6343 = !DILocation(line: 896, column: 9, scope: !6321)
!6344 = !DILocation(line: 898, column: 23, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6342, file: !869, line: 896, column: 32)
!6346 = !DILocation(line: 898, column: 9, scope: !6345)
!6347 = !DILocation(line: 899, column: 5, scope: !6345)
!6348 = !DILocation(line: 900, column: 9, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6342, file: !869, line: 899, column: 12)
!6350 = !DILocation(line: 903, column: 1, scope: !6321)
!6351 = distinct !DISubprogram(name: "hal_i2c_wait_dma_finish", scope: !869, file: !869, line: 964, type: !6352, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6354)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{null, !951}
!6354 = !{!6355, !6356, !6357, !6358, !6359}
!6355 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6351, file: !869, line: 964, type: !951)
!6356 = !DILocalVariable(name: "gpt_start_count", scope: !6351, file: !869, line: 966, type: !61)
!6357 = !DILocalVariable(name: "gpt_current_count", scope: !6351, file: !869, line: 966, type: !61)
!6358 = !DILocalVariable(name: "gpt_duration_count", scope: !6351, file: !869, line: 966, type: !61)
!6359 = !DILocalVariable(name: "saved_mask", scope: !6360, file: !869, line: 974, type: !61)
!6360 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 973, column: 15)
!6361 = !DILocation(line: 0, scope: !6351)
!6362 = !DILocation(line: 966, column: 5, scope: !6351)
!6363 = !DILocation(line: 968, column: 10, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6351, file: !869, line: 968, column: 9)
!6365 = !DILocation(line: 968, column: 9, scope: !6351)
!6366 = !DILocation(line: 971, column: 5, scope: !6351)
!6367 = !DILocation(line: 975, column: 22, scope: !6360)
!6368 = !DILocation(line: 0, scope: !6360)
!6369 = !DILocation(line: 976, column: 13, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6360, file: !869, line: 976, column: 13)
!6371 = !DILocation(line: 976, column: 13, scope: !6360)
!6372 = !DILocation(line: 977, column: 13, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6370, file: !869, line: 976, column: 42)
!6374 = !DILocation(line: 978, column: 13, scope: !6373)
!6375 = !DILocation(line: 980, column: 9, scope: !6360)
!6376 = !DILocation(line: 981, column: 36, scope: !6360)
!6377 = !DILocation(line: 981, column: 53, scope: !6360)
!6378 = !DILocation(line: 981, column: 9, scope: !6360)
!6379 = !DILocation(line: 983, column: 41, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6360, file: !869, line: 983, column: 13)
!6381 = !DILocation(line: 983, column: 39, scope: !6380)
!6382 = !DILocation(line: 983, column: 13, scope: !6360)
!6383 = !DILocation(line: 984, column: 13, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6380, file: !869, line: 983, column: 61)
!6385 = !DILocation(line: 986, column: 13, scope: !6384)
!6386 = !DILocation(line: 988, column: 73, scope: !6384)
!6387 = !DILocation(line: 988, column: 13, scope: !6384)
!6388 = !DILocation(line: 989, column: 98, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6384, file: !869, line: 989, column: 17)
!6390 = !DILocation(line: 989, column: 65, scope: !6389)
!6391 = !DILocation(line: 989, column: 115, scope: !6389)
!6392 = !DILocation(line: 990, column: 108, scope: !6389)
!6393 = !DILocation(line: 990, column: 75, scope: !6389)
!6394 = !DILocation(line: 990, column: 126, scope: !6389)
!6395 = !DILocation(line: 990, column: 130, scope: !6389)
!6396 = !DILocation(line: 990, column: 163, scope: !6389)
!6397 = !DILocation(line: 989, column: 17, scope: !6384)
!6398 = !DILocation(line: 991, column: 17, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6389, file: !869, line: 990, column: 170)
!6400 = !DILocation(line: 992, column: 13, scope: !6399)
!6401 = !DILocation(line: 995, column: 9, scope: !6360)
!6402 = !DILocation(line: 997, column: 1, scope: !6351)
!6403 = distinct !DISubprogram(name: "hal_i2c_master_dma_callback", scope: !869, file: !869, line: 905, type: !6404, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6407)
!6404 = !DISubroutineType(types: !6405)
!6405 = !{null, !6406, !88}
!6406 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_event_t", file: !639, line: 162, baseType: !940)
!6407 = !{!6408, !6409, !6410}
!6408 = !DILocalVariable(name: "event", arg: 1, scope: !6403, file: !869, line: 905, type: !6406)
!6409 = !DILocalVariable(name: "user_data", arg: 2, scope: !6403, file: !869, line: 905, type: !88)
!6410 = !DILocalVariable(name: "i2c_dma_parameter", scope: !6403, file: !869, line: 907, type: !952)
!6411 = !DILocation(line: 0, scope: !6403)
!6412 = !DILocation(line: 910, column: 67, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6403, file: !869, line: 910, column: 9)
!6414 = !DILocation(line: 910, column: 84, scope: !6413)
!6415 = !DILocation(line: 912, column: 59, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6413, file: !869, line: 911, column: 96)
!6417 = !DILocation(line: 912, column: 19, scope: !6416)
!6418 = !DILocation(line: 912, column: 9, scope: !6416)
!6419 = !DILocation(line: 913, column: 61, scope: !6416)
!6420 = !DILocation(line: 913, column: 21, scope: !6416)
!6421 = !DILocation(line: 913, column: 9, scope: !6416)
!6422 = !DILocation(line: 914, column: 28, scope: !6416)
!6423 = !DILocation(line: 914, column: 39, scope: !6416)
!6424 = !DILocation(line: 915, column: 5, scope: !6416)
!6425 = !DILocation(line: 917, column: 59, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !869, line: 916, column: 102)
!6427 = distinct !DILexicalBlock(scope: !6413, file: !869, line: 915, column: 16)
!6428 = !DILocation(line: 917, column: 19, scope: !6426)
!6429 = !DILocation(line: 917, column: 9, scope: !6426)
!6430 = !DILocation(line: 918, column: 61, scope: !6426)
!6431 = !DILocation(line: 918, column: 21, scope: !6426)
!6432 = !DILocation(line: 918, column: 9, scope: !6426)
!6433 = !DILocation(line: 919, column: 28, scope: !6426)
!6434 = !DILocation(line: 919, column: 39, scope: !6426)
!6435 = !DILocation(line: 920, column: 5, scope: !6426)
!6436 = !DILocation(line: 922, column: 51, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !869, line: 921, column: 110)
!6438 = distinct !DILexicalBlock(scope: !6427, file: !869, line: 920, column: 16)
!6439 = !DILocation(line: 922, column: 9, scope: !6437)
!6440 = !DILocation(line: 922, column: 60, scope: !6437)
!6441 = !DILocation(line: 928, column: 46, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6437, file: !869, line: 928, column: 13)
!6443 = !DILocation(line: 928, column: 43, scope: !6442)
!6444 = !DILocation(line: 928, column: 13, scope: !6437)
!6445 = !DILocation(line: 929, column: 23, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6442, file: !869, line: 928, column: 99)
!6447 = !DILocation(line: 929, column: 13, scope: !6446)
!6448 = !DILocation(line: 930, column: 63, scope: !6446)
!6449 = !DILocation(line: 930, column: 23, scope: !6446)
!6450 = !DILocation(line: 930, column: 13, scope: !6446)
!6451 = !DILocation(line: 931, column: 65, scope: !6446)
!6452 = !DILocation(line: 931, column: 25, scope: !6446)
!6453 = !DILocation(line: 931, column: 13, scope: !6446)
!6454 = !DILocation(line: 932, column: 65, scope: !6446)
!6455 = !DILocation(line: 932, column: 25, scope: !6446)
!6456 = !DILocation(line: 932, column: 13, scope: !6446)
!6457 = !DILocation(line: 933, column: 32, scope: !6446)
!6458 = !DILocation(line: 933, column: 43, scope: !6446)
!6459 = !DILocation(line: 934, column: 55, scope: !6446)
!6460 = !DILocation(line: 934, column: 13, scope: !6446)
!6461 = !DILocation(line: 934, column: 65, scope: !6446)
!6462 = !DILocation(line: 935, column: 9, scope: !6446)
!6463 = !DILocation(line: 937, column: 1, scope: !6403)
!6464 = distinct !DISubprogram(name: "hal_i2c_master_send_polling", scope: !869, file: !869, line: 266, type: !6465, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!6189, !951, !460, !5117, !61}
!6467 = !{!6468, !6469, !6470, !6471, !6472, !6473}
!6468 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6464, file: !869, line: 266, type: !951)
!6469 = !DILocalVariable(name: "slave_address", arg: 2, scope: !6464, file: !869, line: 266, type: !460)
!6470 = !DILocalVariable(name: "data", arg: 3, scope: !6464, file: !869, line: 266, type: !5117)
!6471 = !DILocalVariable(name: "size", arg: 4, scope: !6464, file: !869, line: 266, type: !61)
!6472 = !DILocalVariable(name: "transaction_status", scope: !6464, file: !869, line: 268, type: !6329)
!6473 = !DILocalVariable(name: "config_size", scope: !6464, file: !869, line: 269, type: !6474)
!6474 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !901, line: 176, baseType: !6475)
!6475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !901, line: 170, size: 160, elements: !6476)
!6476 = !{!6477, !6478, !6479, !6480, !6481}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !6475, file: !901, line: 171, baseType: !61, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !6475, file: !901, line: 172, baseType: !61, size: 32, offset: 32)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !6475, file: !901, line: 173, baseType: !61, size: 32, offset: 64)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !6475, file: !901, line: 174, baseType: !61, size: 32, offset: 96)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !6475, file: !901, line: 175, baseType: !61, size: 32, offset: 128)
!6482 = !DILocation(line: 0, scope: !6464)
!6483 = !DILocation(line: 269, column: 5, scope: !6464)
!6484 = !DILocation(line: 269, column: 28, scope: !6464)
!6485 = !DILocation(line: 271, column: 28, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6464, file: !869, line: 271, column: 9)
!6487 = !DILocation(line: 271, column: 9, scope: !6464)
!6488 = !DILocation(line: 274, column: 14, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6464, file: !869, line: 274, column: 9)
!6490 = !DILocation(line: 274, column: 22, scope: !6489)
!6491 = !DILocation(line: 278, column: 21, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6464, file: !869, line: 278, column: 9)
!6493 = !DILocation(line: 278, column: 18, scope: !6492)
!6494 = !DILocation(line: 278, column: 9, scope: !6464)
!6495 = !DILocation(line: 279, column: 9, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !869, line: 278, column: 57)
!6497 = !DILocation(line: 280, column: 9, scope: !6496)
!6498 = !DILocation(line: 289, column: 5, scope: !6464)
!6499 = !DILocation(line: 292, column: 17, scope: !6464)
!6500 = !DILocation(line: 292, column: 27, scope: !6464)
!6501 = !DILocation(line: 293, column: 17, scope: !6464)
!6502 = !DILocation(line: 293, column: 30, scope: !6464)
!6503 = !DILocation(line: 294, column: 76, scope: !6464)
!6504 = !DILocation(line: 294, column: 5, scope: !6464)
!6505 = !DILocation(line: 297, column: 5, scope: !6464)
!6506 = !DILocation(line: 300, column: 5, scope: !6464)
!6507 = !DILocation(line: 306, column: 5, scope: !6464)
!6508 = !DILocation(line: 310, column: 26, scope: !6464)
!6509 = !DILocation(line: 316, column: 33, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6464, file: !869, line: 316, column: 9)
!6511 = !DILocation(line: 316, column: 9, scope: !6464)
!6512 = !DILocation(line: 317, column: 9, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !869, line: 316, column: 56)
!6514 = !DILocation(line: 318, column: 9, scope: !6513)
!6515 = !DILocation(line: 322, column: 1, scope: !6464)
!6516 = distinct !DISubprogram(name: "hal_i2c_master_wait_transaction_finish", scope: !869, file: !869, line: 942, type: !6517, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6519)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{null, !951, !957}
!6519 = !{!6520, !6521, !6522, !6523, !6524, !6525}
!6520 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6516, file: !869, line: 942, type: !951)
!6521 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !6516, file: !869, line: 942, type: !957)
!6522 = !DILocalVariable(name: "gpt_start_count", scope: !6516, file: !869, line: 944, type: !61)
!6523 = !DILocalVariable(name: "gpt_current_count", scope: !6516, file: !869, line: 944, type: !61)
!6524 = !DILocalVariable(name: "gpt_duration_count", scope: !6516, file: !869, line: 944, type: !61)
!6525 = !DILocalVariable(name: "saved_mask", scope: !6526, file: !869, line: 948, type: !61)
!6526 = distinct !DILexicalBlock(scope: !6516, file: !869, line: 947, column: 15)
!6527 = !DILocation(line: 0, scope: !6516)
!6528 = !DILocation(line: 944, column: 5, scope: !6516)
!6529 = !DILocation(line: 945, column: 5, scope: !6516)
!6530 = !DILocation(line: 949, column: 22, scope: !6526)
!6531 = !DILocation(line: 0, scope: !6526)
!6532 = !DILocation(line: 950, column: 18, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6526, file: !869, line: 950, column: 13)
!6534 = !DILocation(line: 950, column: 15, scope: !6533)
!6535 = !DILocation(line: 950, column: 13, scope: !6526)
!6536 = !DILocation(line: 954, column: 9, scope: !6526)
!6537 = !DILocation(line: 955, column: 36, scope: !6526)
!6538 = !DILocation(line: 955, column: 53, scope: !6526)
!6539 = !DILocation(line: 955, column: 9, scope: !6526)
!6540 = !DILocation(line: 956, column: 41, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6526, file: !869, line: 956, column: 13)
!6542 = !DILocation(line: 956, column: 39, scope: !6541)
!6543 = !DILocation(line: 956, column: 13, scope: !6526)
!6544 = !DILocation(line: 957, column: 13, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6541, file: !869, line: 956, column: 61)
!6546 = !DILocation(line: 959, column: 9, scope: !6545)
!6547 = !DILocation(line: 960, column: 9, scope: !6526)
!6548 = !DILocation(line: 951, column: 13, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6533, file: !869, line: 950, column: 65)
!6550 = !DILocation(line: 962, column: 1, scope: !6516)
!6551 = distinct !DISubprogram(name: "hal_i2c_master_send_dma", scope: !869, file: !869, line: 325, type: !6465, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6552)
!6552 = !{!6553, !6554, !6555, !6556, !6557, !6558}
!6553 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6551, file: !869, line: 325, type: !951)
!6554 = !DILocalVariable(name: "slave_address", arg: 2, scope: !6551, file: !869, line: 325, type: !460)
!6555 = !DILocalVariable(name: "data", arg: 3, scope: !6551, file: !869, line: 325, type: !5117)
!6556 = !DILocalVariable(name: "size", arg: 4, scope: !6551, file: !869, line: 325, type: !61)
!6557 = !DILocalVariable(name: "config_size", scope: !6551, file: !869, line: 327, type: !6474)
!6558 = !DILocalVariable(name: "i2c_dma_config", scope: !6551, file: !869, line: 328, type: !6559)
!6559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !639, line: 275, baseType: !6560)
!6560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 270, size: 128, elements: !6561)
!6561 = !{!6562, !6563, !6565, !6566}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !6560, file: !639, line: 271, baseType: !91, size: 8)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6560, file: !639, line: 272, baseType: !6564, size: 32, offset: 32)
!6564 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_transfer_size_format_t", file: !639, line: 155, baseType: !925)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6560, file: !639, line: 273, baseType: !61, size: 32, offset: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !6560, file: !639, line: 274, baseType: !6567, size: 32, offset: 96)
!6567 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_master_type_t", file: !639, line: 185, baseType: !930)
!6568 = !DILocation(line: 0, scope: !6551)
!6569 = !DILocation(line: 327, column: 5, scope: !6551)
!6570 = !DILocation(line: 327, column: 28, scope: !6551)
!6571 = !DILocation(line: 328, column: 5, scope: !6551)
!6572 = !DILocation(line: 328, column: 20, scope: !6551)
!6573 = !DILocation(line: 330, column: 28, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6551, file: !869, line: 330, column: 9)
!6575 = !DILocation(line: 330, column: 9, scope: !6551)
!6576 = !DILocation(line: 333, column: 14, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6551, file: !869, line: 333, column: 9)
!6578 = !DILocation(line: 333, column: 9, scope: !6551)
!6579 = !DILocation(line: 337, column: 10, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6551, file: !869, line: 337, column: 9)
!6581 = !DILocation(line: 337, column: 9, scope: !6551)
!6582 = !DILocation(line: 341, column: 21, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6551, file: !869, line: 341, column: 9)
!6584 = !DILocation(line: 341, column: 18, scope: !6583)
!6585 = !DILocation(line: 341, column: 9, scope: !6551)
!6586 = !DILocation(line: 342, column: 9, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !869, line: 341, column: 57)
!6588 = !DILocation(line: 343, column: 9, scope: !6587)
!6589 = !DILocation(line: 351, column: 15, scope: !6551)
!6590 = !DILocation(line: 351, column: 5, scope: !6551)
!6591 = !DILocation(line: 353, column: 31, scope: !6551)
!6592 = !DILocation(line: 354, column: 20, scope: !6551)
!6593 = !DILocation(line: 354, column: 26, scope: !6551)
!6594 = !DILocation(line: 355, column: 20, scope: !6551)
!6595 = !DILocation(line: 355, column: 32, scope: !6551)
!6596 = !DILocation(line: 356, column: 20, scope: !6551)
!6597 = !DILocation(line: 356, column: 25, scope: !6551)
!6598 = !DILocation(line: 357, column: 20, scope: !6551)
!6599 = !DILocation(line: 357, column: 5, scope: !6551)
!6600 = !DILocation(line: 360, column: 5, scope: !6551)
!6601 = !DILocation(line: 360, column: 35, scope: !6551)
!6602 = !DILocation(line: 360, column: 52, scope: !6551)
!6603 = !DILocation(line: 361, column: 35, scope: !6551)
!6604 = !DILocation(line: 361, column: 46, scope: !6551)
!6605 = !DILocation(line: 362, column: 46, scope: !6551)
!6606 = !DILocation(line: 362, column: 35, scope: !6551)
!6607 = !DILocation(line: 362, column: 44, scope: !6551)
!6608 = !DILocation(line: 363, column: 28, scope: !6551)
!6609 = !DILocation(line: 363, column: 89, scope: !6551)
!6610 = !DILocation(line: 363, column: 5, scope: !6551)
!6611 = !DILocation(line: 367, column: 17, scope: !6551)
!6612 = !DILocation(line: 367, column: 27, scope: !6551)
!6613 = !DILocation(line: 368, column: 17, scope: !6551)
!6614 = !DILocation(line: 368, column: 30, scope: !6551)
!6615 = !DILocation(line: 369, column: 72, scope: !6551)
!6616 = !DILocation(line: 369, column: 5, scope: !6551)
!6617 = !DILocation(line: 371, column: 5, scope: !6551)
!6618 = !DILocation(line: 374, column: 26, scope: !6551)
!6619 = !DILocation(line: 374, column: 58, scope: !6551)
!6620 = !DILocation(line: 374, column: 5, scope: !6551)
!6621 = !DILocation(line: 376, column: 5, scope: !6551)
!6622 = !DILocation(line: 381, column: 5, scope: !6551)
!6623 = !DILocation(line: 382, column: 1, scope: !6551)
!6624 = distinct !DISubprogram(name: "hal_i2c_master_receive_polling", scope: !869, file: !869, line: 385, type: !6625, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6627)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{!6189, !951, !460, !762, !61}
!6627 = !{!6628, !6629, !6630, !6631, !6632, !6633}
!6628 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6624, file: !869, line: 385, type: !951)
!6629 = !DILocalVariable(name: "slave_address", arg: 2, scope: !6624, file: !869, line: 385, type: !460)
!6630 = !DILocalVariable(name: "buffer", arg: 3, scope: !6624, file: !869, line: 385, type: !762)
!6631 = !DILocalVariable(name: "size", arg: 4, scope: !6624, file: !869, line: 385, type: !61)
!6632 = !DILocalVariable(name: "transaction_status", scope: !6624, file: !869, line: 387, type: !6329)
!6633 = !DILocalVariable(name: "config_size", scope: !6624, file: !869, line: 388, type: !6474)
!6634 = !DILocation(line: 0, scope: !6624)
!6635 = !DILocation(line: 388, column: 5, scope: !6624)
!6636 = !DILocation(line: 388, column: 28, scope: !6624)
!6637 = !DILocation(line: 390, column: 28, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6624, file: !869, line: 390, column: 9)
!6639 = !DILocation(line: 390, column: 9, scope: !6624)
!6640 = !DILocation(line: 393, column: 14, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6624, file: !869, line: 393, column: 9)
!6642 = !DILocation(line: 393, column: 24, scope: !6641)
!6643 = !DILocation(line: 397, column: 21, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6624, file: !869, line: 397, column: 9)
!6645 = !DILocation(line: 397, column: 18, scope: !6644)
!6646 = !DILocation(line: 397, column: 9, scope: !6624)
!6647 = !DILocation(line: 398, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6644, file: !869, line: 397, column: 57)
!6649 = !DILocation(line: 399, column: 9, scope: !6648)
!6650 = !DILocation(line: 406, column: 5, scope: !6624)
!6651 = !DILocation(line: 409, column: 17, scope: !6624)
!6652 = !DILocation(line: 409, column: 27, scope: !6624)
!6653 = !DILocation(line: 410, column: 17, scope: !6624)
!6654 = !DILocation(line: 410, column: 30, scope: !6624)
!6655 = !DILocation(line: 411, column: 79, scope: !6624)
!6656 = !DILocation(line: 411, column: 5, scope: !6624)
!6657 = !DILocation(line: 414, column: 5, scope: !6624)
!6658 = !DILocation(line: 421, column: 5, scope: !6624)
!6659 = !DILocation(line: 425, column: 26, scope: !6624)
!6660 = !DILocation(line: 429, column: 33, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6624, file: !869, line: 429, column: 9)
!6662 = !DILocation(line: 429, column: 9, scope: !6624)
!6663 = !DILocation(line: 430, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6661, file: !869, line: 429, column: 56)
!6665 = !DILocation(line: 431, column: 9, scope: !6664)
!6666 = !DILocation(line: 433, column: 9, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6661, file: !869, line: 432, column: 12)
!6668 = !DILocation(line: 434, column: 9, scope: !6667)
!6669 = !DILocation(line: 436, column: 1, scope: !6624)
!6670 = distinct !DISubprogram(name: "hal_i2c_master_receive_dma", scope: !869, file: !869, line: 441, type: !6625, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6671)
!6671 = !{!6672, !6673, !6674, !6675, !6676, !6677}
!6672 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6670, file: !869, line: 441, type: !951)
!6673 = !DILocalVariable(name: "slave_address", arg: 2, scope: !6670, file: !869, line: 441, type: !460)
!6674 = !DILocalVariable(name: "buffer", arg: 3, scope: !6670, file: !869, line: 441, type: !762)
!6675 = !DILocalVariable(name: "size", arg: 4, scope: !6670, file: !869, line: 441, type: !61)
!6676 = !DILocalVariable(name: "config_size", scope: !6670, file: !869, line: 443, type: !6474)
!6677 = !DILocalVariable(name: "i2c_dma_config", scope: !6670, file: !869, line: 444, type: !6559)
!6678 = !DILocation(line: 0, scope: !6670)
!6679 = !DILocation(line: 443, column: 5, scope: !6670)
!6680 = !DILocation(line: 443, column: 28, scope: !6670)
!6681 = !DILocation(line: 444, column: 5, scope: !6670)
!6682 = !DILocation(line: 444, column: 20, scope: !6670)
!6683 = !DILocation(line: 446, column: 28, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6670, file: !869, line: 446, column: 9)
!6685 = !DILocation(line: 446, column: 9, scope: !6670)
!6686 = !DILocation(line: 449, column: 14, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6670, file: !869, line: 449, column: 9)
!6688 = !DILocation(line: 449, column: 9, scope: !6670)
!6689 = !DILocation(line: 453, column: 10, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6670, file: !869, line: 453, column: 9)
!6691 = !DILocation(line: 453, column: 9, scope: !6670)
!6692 = !DILocation(line: 458, column: 21, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6670, file: !869, line: 458, column: 9)
!6694 = !DILocation(line: 458, column: 18, scope: !6693)
!6695 = !DILocation(line: 458, column: 9, scope: !6670)
!6696 = !DILocation(line: 459, column: 9, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !869, line: 458, column: 57)
!6698 = !DILocation(line: 460, column: 9, scope: !6697)
!6699 = !DILocation(line: 468, column: 15, scope: !6670)
!6700 = !DILocation(line: 468, column: 5, scope: !6670)
!6701 = !DILocation(line: 470, column: 31, scope: !6670)
!6702 = !DILocation(line: 471, column: 20, scope: !6670)
!6703 = !DILocation(line: 471, column: 26, scope: !6670)
!6704 = !DILocation(line: 472, column: 20, scope: !6670)
!6705 = !DILocation(line: 472, column: 32, scope: !6670)
!6706 = !DILocation(line: 473, column: 20, scope: !6670)
!6707 = !DILocation(line: 473, column: 25, scope: !6670)
!6708 = !DILocation(line: 474, column: 20, scope: !6670)
!6709 = !DILocation(line: 474, column: 5, scope: !6670)
!6710 = !DILocation(line: 478, column: 5, scope: !6670)
!6711 = !DILocation(line: 478, column: 35, scope: !6670)
!6712 = !DILocation(line: 478, column: 52, scope: !6670)
!6713 = !DILocation(line: 479, column: 35, scope: !6670)
!6714 = !DILocation(line: 479, column: 46, scope: !6670)
!6715 = !DILocation(line: 480, column: 46, scope: !6670)
!6716 = !DILocation(line: 480, column: 35, scope: !6670)
!6717 = !DILocation(line: 480, column: 44, scope: !6670)
!6718 = !DILocation(line: 481, column: 28, scope: !6670)
!6719 = !DILocation(line: 481, column: 89, scope: !6670)
!6720 = !DILocation(line: 481, column: 5, scope: !6670)
!6721 = !DILocation(line: 484, column: 17, scope: !6670)
!6722 = !DILocation(line: 484, column: 27, scope: !6670)
!6723 = !DILocation(line: 485, column: 17, scope: !6670)
!6724 = !DILocation(line: 485, column: 30, scope: !6670)
!6725 = !DILocation(line: 486, column: 75, scope: !6670)
!6726 = !DILocation(line: 486, column: 5, scope: !6670)
!6727 = !DILocation(line: 488, column: 5, scope: !6670)
!6728 = !DILocation(line: 491, column: 26, scope: !6670)
!6729 = !DILocation(line: 491, column: 58, scope: !6670)
!6730 = !DILocation(line: 491, column: 5, scope: !6670)
!6731 = !DILocation(line: 493, column: 5, scope: !6670)
!6732 = !DILocation(line: 495, column: 5, scope: !6670)
!6733 = !DILocation(line: 496, column: 1, scope: !6670)
!6734 = distinct !DISubprogram(name: "hal_i2c_master_send_to_receive_polling", scope: !869, file: !869, line: 501, type: !6735, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6746)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{!6189, !951, !6737}
!6737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6738, size: 32)
!6738 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_to_receive_config_t", file: !872, line: 511, baseType: !6739)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 505, size: 160, elements: !6740)
!6740 = !{!6741, !6742, !6743, !6744, !6745}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !6739, file: !872, line: 506, baseType: !460, size: 8)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !6739, file: !872, line: 507, baseType: !5117, size: 32, offset: 32)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !6739, file: !872, line: 508, baseType: !61, size: 32, offset: 64)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !6739, file: !872, line: 509, baseType: !762, size: 32, offset: 96)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !6739, file: !872, line: 510, baseType: !61, size: 32, offset: 128)
!6746 = !{!6747, !6748, !6749, !6750}
!6747 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6734, file: !869, line: 501, type: !951)
!6748 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !6734, file: !869, line: 501, type: !6737)
!6749 = !DILocalVariable(name: "transaction_status", scope: !6734, file: !869, line: 503, type: !6329)
!6750 = !DILocalVariable(name: "config_size", scope: !6734, file: !869, line: 504, type: !6474)
!6751 = !DILocation(line: 0, scope: !6734)
!6752 = !DILocation(line: 504, column: 5, scope: !6734)
!6753 = !DILocation(line: 504, column: 28, scope: !6734)
!6754 = !DILocation(line: 506, column: 28, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6734, file: !869, line: 506, column: 9)
!6756 = !DILocation(line: 506, column: 9, scope: !6734)
!6757 = !DILocation(line: 509, column: 45, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6734, file: !869, line: 509, column: 9)
!6759 = !DILocation(line: 509, column: 14, scope: !6758)
!6760 = !DILocation(line: 509, column: 55, scope: !6758)
!6761 = !DILocation(line: 509, column: 94, scope: !6758)
!6762 = !DILocation(line: 509, column: 63, scope: !6758)
!6763 = !DILocation(line: 509, column: 9, scope: !6734)
!6764 = !DILocation(line: 512, column: 37, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6734, file: !869, line: 512, column: 9)
!6766 = !DILocation(line: 512, column: 49, scope: !6765)
!6767 = !DILocation(line: 512, column: 66, scope: !6765)
!6768 = !DILocation(line: 512, column: 97, scope: !6765)
!6769 = !DILocation(line: 512, column: 112, scope: !6765)
!6770 = !DILocation(line: 512, column: 9, scope: !6734)
!6771 = !DILocation(line: 517, column: 21, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6734, file: !869, line: 517, column: 9)
!6773 = !DILocation(line: 517, column: 18, scope: !6772)
!6774 = !DILocation(line: 517, column: 9, scope: !6734)
!6775 = !DILocation(line: 518, column: 9, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6772, file: !869, line: 517, column: 57)
!6777 = !DILocation(line: 519, column: 9, scope: !6776)
!6778 = !DILocation(line: 527, column: 5, scope: !6734)
!6779 = !DILocation(line: 530, column: 57, scope: !6734)
!6780 = !DILocation(line: 530, column: 17, scope: !6734)
!6781 = !DILocation(line: 530, column: 27, scope: !6734)
!6782 = !DILocation(line: 531, column: 60, scope: !6734)
!6783 = !DILocation(line: 531, column: 17, scope: !6734)
!6784 = !DILocation(line: 531, column: 30, scope: !6734)
!6785 = !DILocation(line: 532, column: 87, scope: !6734)
!6786 = !DILocation(line: 532, column: 5, scope: !6734)
!6787 = !DILocation(line: 535, column: 58, scope: !6734)
!6788 = !DILocation(line: 535, column: 97, scope: !6734)
!6789 = !DILocation(line: 535, column: 5, scope: !6734)
!6790 = !DILocation(line: 538, column: 5, scope: !6734)
!6791 = !DILocation(line: 544, column: 5, scope: !6734)
!6792 = !DILocation(line: 547, column: 26, scope: !6734)
!6793 = !DILocation(line: 551, column: 33, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6734, file: !869, line: 551, column: 9)
!6795 = !DILocation(line: 551, column: 9, scope: !6734)
!6796 = !DILocation(line: 552, column: 9, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6794, file: !869, line: 551, column: 56)
!6798 = !DILocation(line: 553, column: 9, scope: !6797)
!6799 = !DILocation(line: 555, column: 61, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6794, file: !869, line: 554, column: 12)
!6801 = !DILocation(line: 555, column: 105, scope: !6800)
!6802 = !DILocation(line: 555, column: 9, scope: !6800)
!6803 = !DILocation(line: 556, column: 9, scope: !6800)
!6804 = !DILocation(line: 558, column: 1, scope: !6734)
!6805 = distinct !DISubprogram(name: "hal_i2c_master_send_to_receive_dma", scope: !869, file: !869, line: 563, type: !6735, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6806)
!6806 = !{!6807, !6808, !6809, !6810}
!6807 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6805, file: !869, line: 563, type: !951)
!6808 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !6805, file: !869, line: 563, type: !6737)
!6809 = !DILocalVariable(name: "config_size", scope: !6805, file: !869, line: 565, type: !6474)
!6810 = !DILocalVariable(name: "i2c_dma_config", scope: !6805, file: !869, line: 566, type: !6559)
!6811 = !DILocation(line: 0, scope: !6805)
!6812 = !DILocation(line: 565, column: 5, scope: !6805)
!6813 = !DILocation(line: 565, column: 28, scope: !6805)
!6814 = !DILocation(line: 566, column: 5, scope: !6805)
!6815 = !DILocation(line: 566, column: 20, scope: !6805)
!6816 = !DILocation(line: 568, column: 28, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6805, file: !869, line: 568, column: 9)
!6818 = !DILocation(line: 568, column: 9, scope: !6805)
!6819 = !DILocation(line: 571, column: 45, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6805, file: !869, line: 571, column: 9)
!6821 = !DILocation(line: 571, column: 14, scope: !6820)
!6822 = !DILocation(line: 571, column: 55, scope: !6820)
!6823 = !DILocation(line: 571, column: 94, scope: !6820)
!6824 = !DILocation(line: 571, column: 63, scope: !6820)
!6825 = !DILocation(line: 571, column: 9, scope: !6805)
!6826 = !DILocation(line: 574, column: 10, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6805, file: !869, line: 574, column: 9)
!6828 = !DILocation(line: 574, column: 9, scope: !6805)
!6829 = !DILocation(line: 578, column: 21, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6805, file: !869, line: 578, column: 9)
!6831 = !DILocation(line: 578, column: 18, scope: !6830)
!6832 = !DILocation(line: 578, column: 9, scope: !6805)
!6833 = !DILocation(line: 579, column: 9, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6830, file: !869, line: 578, column: 57)
!6835 = !DILocation(line: 580, column: 9, scope: !6834)
!6836 = !DILocation(line: 589, column: 15, scope: !6805)
!6837 = !DILocation(line: 589, column: 5, scope: !6805)
!6838 = !DILocation(line: 591, column: 31, scope: !6805)
!6839 = !DILocation(line: 592, column: 56, scope: !6805)
!6840 = !DILocation(line: 592, column: 20, scope: !6805)
!6841 = !DILocation(line: 592, column: 26, scope: !6805)
!6842 = !DILocation(line: 593, column: 20, scope: !6805)
!6843 = !DILocation(line: 593, column: 32, scope: !6805)
!6844 = !DILocation(line: 594, column: 20, scope: !6805)
!6845 = !DILocation(line: 594, column: 25, scope: !6805)
!6846 = !DILocation(line: 595, column: 20, scope: !6805)
!6847 = !DILocation(line: 595, column: 5, scope: !6805)
!6848 = !DILocation(line: 598, column: 5, scope: !6805)
!6849 = !DILocation(line: 598, column: 35, scope: !6805)
!6850 = !DILocation(line: 598, column: 52, scope: !6805)
!6851 = !DILocation(line: 599, column: 35, scope: !6805)
!6852 = !DILocation(line: 599, column: 46, scope: !6805)
!6853 = !DILocation(line: 600, column: 46, scope: !6805)
!6854 = !DILocation(line: 600, column: 35, scope: !6805)
!6855 = !DILocation(line: 600, column: 44, scope: !6805)
!6856 = !DILocation(line: 601, column: 28, scope: !6805)
!6857 = !DILocation(line: 601, column: 89, scope: !6805)
!6858 = !DILocation(line: 601, column: 5, scope: !6805)
!6859 = !DILocation(line: 604, column: 15, scope: !6805)
!6860 = !DILocation(line: 604, column: 5, scope: !6805)
!6861 = !DILocation(line: 606, column: 31, scope: !6805)
!6862 = !DILocation(line: 607, column: 56, scope: !6805)
!6863 = !DILocation(line: 607, column: 26, scope: !6805)
!6864 = !DILocation(line: 608, column: 32, scope: !6805)
!6865 = !DILocation(line: 609, column: 25, scope: !6805)
!6866 = !DILocation(line: 610, column: 20, scope: !6805)
!6867 = !DILocation(line: 610, column: 5, scope: !6805)
!6868 = !DILocation(line: 613, column: 52, scope: !6805)
!6869 = !DILocation(line: 614, column: 46, scope: !6805)
!6870 = !DILocation(line: 615, column: 44, scope: !6805)
!6871 = !DILocation(line: 616, column: 5, scope: !6805)
!6872 = !DILocation(line: 616, column: 38, scope: !6805)
!6873 = !DILocation(line: 617, column: 28, scope: !6805)
!6874 = !DILocation(line: 617, column: 5, scope: !6805)
!6875 = !DILocation(line: 620, column: 57, scope: !6805)
!6876 = !DILocation(line: 620, column: 17, scope: !6805)
!6877 = !DILocation(line: 620, column: 27, scope: !6805)
!6878 = !DILocation(line: 621, column: 60, scope: !6805)
!6879 = !DILocation(line: 621, column: 17, scope: !6805)
!6880 = !DILocation(line: 621, column: 30, scope: !6805)
!6881 = !DILocation(line: 622, column: 83, scope: !6805)
!6882 = !DILocation(line: 622, column: 5, scope: !6805)
!6883 = !DILocation(line: 624, column: 5, scope: !6805)
!6884 = !DILocation(line: 627, column: 26, scope: !6805)
!6885 = !DILocation(line: 627, column: 96, scope: !6805)
!6886 = !DILocation(line: 627, column: 58, scope: !6805)
!6887 = !DILocation(line: 627, column: 5, scope: !6805)
!6888 = !DILocation(line: 629, column: 26, scope: !6805)
!6889 = !DILocation(line: 629, column: 96, scope: !6805)
!6890 = !DILocation(line: 629, column: 58, scope: !6805)
!6891 = !DILocation(line: 629, column: 5, scope: !6805)
!6892 = !DILocation(line: 631, column: 5, scope: !6805)
!6893 = !DILocation(line: 634, column: 5, scope: !6805)
!6894 = !DILocation(line: 635, column: 1, scope: !6805)
!6895 = distinct !DISubprogram(name: "hal_i2c_master_send_dma_ex", scope: !869, file: !869, line: 642, type: !6896, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6906)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!6189, !951, !6898}
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 32)
!6899 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_config_t", file: !872, line: 524, baseType: !6900)
!6900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 519, size: 128, elements: !6901)
!6901 = !{!6902, !6903, !6904, !6905}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !6900, file: !872, line: 520, baseType: !460, size: 8)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !6900, file: !872, line: 521, baseType: !5117, size: 32, offset: 32)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "send_packet_length", scope: !6900, file: !872, line: 522, baseType: !61, size: 32, offset: 64)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "send_bytes_in_one_packet", scope: !6900, file: !872, line: 523, baseType: !61, size: 32, offset: 96)
!6906 = !{!6907, !6908, !6909, !6910}
!6907 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6895, file: !869, line: 642, type: !951)
!6908 = !DILocalVariable(name: "i2c_send_config", arg: 2, scope: !6895, file: !869, line: 642, type: !6898)
!6909 = !DILocalVariable(name: "config_size", scope: !6895, file: !869, line: 644, type: !6474)
!6910 = !DILocalVariable(name: "i2c_dma_config", scope: !6895, file: !869, line: 645, type: !6559)
!6911 = !DILocation(line: 0, scope: !6895)
!6912 = !DILocation(line: 644, column: 5, scope: !6895)
!6913 = !DILocation(line: 644, column: 28, scope: !6895)
!6914 = !DILocation(line: 645, column: 5, scope: !6895)
!6915 = !DILocation(line: 645, column: 20, scope: !6895)
!6916 = !DILocation(line: 647, column: 28, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6895, file: !869, line: 647, column: 9)
!6918 = !DILocation(line: 647, column: 9, scope: !6895)
!6919 = !DILocation(line: 650, column: 34, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6895, file: !869, line: 650, column: 9)
!6921 = !DILocation(line: 650, column: 14, scope: !6920)
!6922 = !DILocation(line: 650, column: 9, scope: !6895)
!6923 = !DILocation(line: 654, column: 10, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6895, file: !869, line: 654, column: 9)
!6925 = !DILocation(line: 654, column: 9, scope: !6895)
!6926 = !DILocation(line: 658, column: 21, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6895, file: !869, line: 658, column: 9)
!6928 = !DILocation(line: 658, column: 18, scope: !6927)
!6929 = !DILocation(line: 658, column: 9, scope: !6895)
!6930 = !DILocation(line: 659, column: 9, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6927, file: !869, line: 658, column: 57)
!6932 = !DILocation(line: 660, column: 9, scope: !6931)
!6933 = !DILocation(line: 668, column: 15, scope: !6895)
!6934 = !DILocation(line: 668, column: 5, scope: !6895)
!6935 = !DILocation(line: 670, column: 31, scope: !6895)
!6936 = !DILocation(line: 671, column: 46, scope: !6895)
!6937 = !DILocation(line: 671, column: 86, scope: !6895)
!6938 = !DILocation(line: 671, column: 66, scope: !6895)
!6939 = !DILocation(line: 671, column: 20, scope: !6895)
!6940 = !DILocation(line: 671, column: 26, scope: !6895)
!6941 = !DILocation(line: 672, column: 20, scope: !6895)
!6942 = !DILocation(line: 672, column: 32, scope: !6895)
!6943 = !DILocation(line: 673, column: 20, scope: !6895)
!6944 = !DILocation(line: 673, column: 25, scope: !6895)
!6945 = !DILocation(line: 674, column: 20, scope: !6895)
!6946 = !DILocation(line: 674, column: 5, scope: !6895)
!6947 = !DILocation(line: 677, column: 5, scope: !6895)
!6948 = !DILocation(line: 677, column: 35, scope: !6895)
!6949 = !DILocation(line: 677, column: 52, scope: !6895)
!6950 = !DILocation(line: 678, column: 35, scope: !6895)
!6951 = !DILocation(line: 678, column: 46, scope: !6895)
!6952 = !DILocation(line: 679, column: 46, scope: !6895)
!6953 = !DILocation(line: 679, column: 35, scope: !6895)
!6954 = !DILocation(line: 679, column: 44, scope: !6895)
!6955 = !DILocation(line: 680, column: 28, scope: !6895)
!6956 = !DILocation(line: 680, column: 89, scope: !6895)
!6957 = !DILocation(line: 680, column: 5, scope: !6895)
!6958 = !DILocation(line: 684, column: 52, scope: !6895)
!6959 = !DILocation(line: 684, column: 17, scope: !6895)
!6960 = !DILocation(line: 684, column: 33, scope: !6895)
!6961 = !DILocation(line: 685, column: 55, scope: !6895)
!6962 = !DILocation(line: 685, column: 17, scope: !6895)
!6963 = !DILocation(line: 685, column: 36, scope: !6895)
!6964 = !DILocation(line: 686, column: 79, scope: !6895)
!6965 = !DILocation(line: 686, column: 5, scope: !6895)
!6966 = !DILocation(line: 688, column: 5, scope: !6895)
!6967 = !DILocation(line: 691, column: 26, scope: !6895)
!6968 = !DILocation(line: 691, column: 85, scope: !6895)
!6969 = !DILocation(line: 691, column: 58, scope: !6895)
!6970 = !DILocation(line: 691, column: 5, scope: !6895)
!6971 = !DILocation(line: 693, column: 5, scope: !6895)
!6972 = !DILocation(line: 698, column: 5, scope: !6895)
!6973 = !DILocation(line: 699, column: 1, scope: !6895)
!6974 = distinct !DISubprogram(name: "hal_i2c_master_receive_dma_ex", scope: !869, file: !869, line: 700, type: !6975, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6985)
!6975 = !DISubroutineType(types: !6976)
!6976 = !{!6189, !951, !6977}
!6977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6978, size: 32)
!6978 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_receive_config_t", file: !872, line: 534, baseType: !6979)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 529, size: 128, elements: !6980)
!6980 = !{!6981, !6982, !6983, !6984}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !6979, file: !872, line: 530, baseType: !460, size: 8)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !6979, file: !872, line: 531, baseType: !762, size: 32, offset: 32)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet_length", scope: !6979, file: !872, line: 532, baseType: !61, size: 32, offset: 64)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "receive_bytes_in_one_packet", scope: !6979, file: !872, line: 533, baseType: !61, size: 32, offset: 96)
!6985 = !{!6986, !6987, !6988, !6989}
!6986 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6974, file: !869, line: 700, type: !951)
!6987 = !DILocalVariable(name: "i2c_receive_config", arg: 2, scope: !6974, file: !869, line: 700, type: !6977)
!6988 = !DILocalVariable(name: "config_size", scope: !6974, file: !869, line: 702, type: !6474)
!6989 = !DILocalVariable(name: "i2c_dma_config", scope: !6974, file: !869, line: 703, type: !6559)
!6990 = !DILocation(line: 0, scope: !6974)
!6991 = !DILocation(line: 702, column: 5, scope: !6974)
!6992 = !DILocation(line: 702, column: 28, scope: !6974)
!6993 = !DILocation(line: 703, column: 5, scope: !6974)
!6994 = !DILocation(line: 703, column: 20, scope: !6974)
!6995 = !DILocation(line: 705, column: 28, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6974, file: !869, line: 705, column: 9)
!6997 = !DILocation(line: 705, column: 9, scope: !6974)
!6998 = !DILocation(line: 708, column: 37, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6974, file: !869, line: 708, column: 9)
!7000 = !DILocation(line: 708, column: 14, scope: !6999)
!7001 = !DILocation(line: 708, column: 9, scope: !6974)
!7002 = !DILocation(line: 712, column: 10, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6974, file: !869, line: 712, column: 9)
!7004 = !DILocation(line: 712, column: 9, scope: !6974)
!7005 = !DILocation(line: 717, column: 21, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6974, file: !869, line: 717, column: 9)
!7007 = !DILocation(line: 717, column: 18, scope: !7006)
!7008 = !DILocation(line: 717, column: 9, scope: !6974)
!7009 = !DILocation(line: 718, column: 9, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !869, line: 717, column: 57)
!7011 = !DILocation(line: 719, column: 9, scope: !7010)
!7012 = !DILocation(line: 727, column: 15, scope: !6974)
!7013 = !DILocation(line: 727, column: 5, scope: !6974)
!7014 = !DILocation(line: 729, column: 31, scope: !6974)
!7015 = !DILocation(line: 730, column: 49, scope: !6974)
!7016 = !DILocation(line: 730, column: 95, scope: !6974)
!7017 = !DILocation(line: 730, column: 72, scope: !6974)
!7018 = !DILocation(line: 730, column: 20, scope: !6974)
!7019 = !DILocation(line: 730, column: 26, scope: !6974)
!7020 = !DILocation(line: 731, column: 20, scope: !6974)
!7021 = !DILocation(line: 731, column: 32, scope: !6974)
!7022 = !DILocation(line: 732, column: 20, scope: !6974)
!7023 = !DILocation(line: 732, column: 25, scope: !6974)
!7024 = !DILocation(line: 733, column: 20, scope: !6974)
!7025 = !DILocation(line: 733, column: 5, scope: !6974)
!7026 = !DILocation(line: 737, column: 5, scope: !6974)
!7027 = !DILocation(line: 737, column: 35, scope: !6974)
!7028 = !DILocation(line: 737, column: 52, scope: !6974)
!7029 = !DILocation(line: 738, column: 35, scope: !6974)
!7030 = !DILocation(line: 738, column: 46, scope: !6974)
!7031 = !DILocation(line: 739, column: 46, scope: !6974)
!7032 = !DILocation(line: 739, column: 35, scope: !6974)
!7033 = !DILocation(line: 739, column: 44, scope: !6974)
!7034 = !DILocation(line: 740, column: 28, scope: !6974)
!7035 = !DILocation(line: 740, column: 89, scope: !6974)
!7036 = !DILocation(line: 740, column: 5, scope: !6974)
!7037 = !DILocation(line: 743, column: 55, scope: !6974)
!7038 = !DILocation(line: 743, column: 17, scope: !6974)
!7039 = !DILocation(line: 743, column: 33, scope: !6974)
!7040 = !DILocation(line: 744, column: 58, scope: !6974)
!7041 = !DILocation(line: 744, column: 17, scope: !6974)
!7042 = !DILocation(line: 744, column: 36, scope: !6974)
!7043 = !DILocation(line: 745, column: 82, scope: !6974)
!7044 = !DILocation(line: 745, column: 5, scope: !6974)
!7045 = !DILocation(line: 747, column: 5, scope: !6974)
!7046 = !DILocation(line: 750, column: 26, scope: !6974)
!7047 = !DILocation(line: 750, column: 88, scope: !6974)
!7048 = !DILocation(line: 750, column: 58, scope: !6974)
!7049 = !DILocation(line: 750, column: 5, scope: !6974)
!7050 = !DILocation(line: 752, column: 5, scope: !6974)
!7051 = !DILocation(line: 754, column: 5, scope: !6974)
!7052 = !DILocation(line: 755, column: 1, scope: !6974)
!7053 = distinct !DISubprogram(name: "hal_i2c_master_send_to_receive_dma_ex", scope: !869, file: !869, line: 757, type: !7054, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !7067)
!7054 = !DISubroutineType(types: !7055)
!7055 = !{!6189, !951, !7056}
!7056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7057, size: 32)
!7057 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_to_receive_config_ex_t", file: !872, line: 547, baseType: !7058)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 539, size: 224, elements: !7059)
!7059 = !{!7060, !7061, !7062, !7063, !7064, !7065, !7066}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !7058, file: !872, line: 540, baseType: !460, size: 8)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !7058, file: !872, line: 541, baseType: !5117, size: 32, offset: 32)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !7058, file: !872, line: 542, baseType: !762, size: 32, offset: 64)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "send_packet_length", scope: !7058, file: !872, line: 543, baseType: !61, size: 32, offset: 96)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "send_bytes_in_one_packet", scope: !7058, file: !872, line: 544, baseType: !61, size: 32, offset: 128)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet_length", scope: !7058, file: !872, line: 545, baseType: !61, size: 32, offset: 160)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "receive_bytes_in_one_packet", scope: !7058, file: !872, line: 546, baseType: !61, size: 32, offset: 192)
!7067 = !{!7068, !7069, !7070, !7071}
!7068 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7053, file: !869, line: 757, type: !951)
!7069 = !DILocalVariable(name: "i2c_send_to_receive_config_ex", arg: 2, scope: !7053, file: !869, line: 757, type: !7056)
!7070 = !DILocalVariable(name: "config_size", scope: !7053, file: !869, line: 759, type: !6474)
!7071 = !DILocalVariable(name: "i2c_dma_config", scope: !7053, file: !869, line: 760, type: !6559)
!7072 = !DILocation(line: 0, scope: !7053)
!7073 = !DILocation(line: 759, column: 5, scope: !7053)
!7074 = !DILocation(line: 759, column: 28, scope: !7053)
!7075 = !DILocation(line: 760, column: 5, scope: !7053)
!7076 = !DILocation(line: 760, column: 20, scope: !7053)
!7077 = !DILocation(line: 762, column: 28, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7053, file: !869, line: 762, column: 9)
!7079 = !DILocation(line: 762, column: 9, scope: !7053)
!7080 = !DILocation(line: 765, column: 48, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7053, file: !869, line: 765, column: 9)
!7082 = !DILocation(line: 765, column: 14, scope: !7081)
!7083 = !DILocation(line: 765, column: 58, scope: !7081)
!7084 = !DILocation(line: 765, column: 100, scope: !7081)
!7085 = !DILocation(line: 765, column: 66, scope: !7081)
!7086 = !DILocation(line: 765, column: 9, scope: !7053)
!7087 = !DILocation(line: 768, column: 10, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7053, file: !869, line: 768, column: 9)
!7089 = !DILocation(line: 768, column: 9, scope: !7053)
!7090 = !DILocation(line: 772, column: 21, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7053, file: !869, line: 772, column: 9)
!7092 = !DILocation(line: 772, column: 18, scope: !7091)
!7093 = !DILocation(line: 772, column: 9, scope: !7053)
!7094 = !DILocation(line: 773, column: 9, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7091, file: !869, line: 772, column: 57)
!7096 = !DILocation(line: 774, column: 9, scope: !7095)
!7097 = !DILocation(line: 783, column: 15, scope: !7053)
!7098 = !DILocation(line: 783, column: 5, scope: !7053)
!7099 = !DILocation(line: 785, column: 31, scope: !7053)
!7100 = !DILocation(line: 786, column: 59, scope: !7053)
!7101 = !DILocation(line: 786, column: 20, scope: !7053)
!7102 = !DILocation(line: 786, column: 26, scope: !7053)
!7103 = !DILocation(line: 787, column: 20, scope: !7053)
!7104 = !DILocation(line: 787, column: 32, scope: !7053)
!7105 = !DILocation(line: 788, column: 20, scope: !7053)
!7106 = !DILocation(line: 788, column: 25, scope: !7053)
!7107 = !DILocation(line: 789, column: 20, scope: !7053)
!7108 = !DILocation(line: 789, column: 5, scope: !7053)
!7109 = !DILocation(line: 792, column: 5, scope: !7053)
!7110 = !DILocation(line: 792, column: 35, scope: !7053)
!7111 = !DILocation(line: 792, column: 52, scope: !7053)
!7112 = !DILocation(line: 793, column: 35, scope: !7053)
!7113 = !DILocation(line: 793, column: 46, scope: !7053)
!7114 = !DILocation(line: 794, column: 46, scope: !7053)
!7115 = !DILocation(line: 794, column: 35, scope: !7053)
!7116 = !DILocation(line: 794, column: 44, scope: !7053)
!7117 = !DILocation(line: 795, column: 28, scope: !7053)
!7118 = !DILocation(line: 795, column: 89, scope: !7053)
!7119 = !DILocation(line: 795, column: 5, scope: !7053)
!7120 = !DILocation(line: 798, column: 15, scope: !7053)
!7121 = !DILocation(line: 798, column: 5, scope: !7053)
!7122 = !DILocation(line: 800, column: 31, scope: !7053)
!7123 = !DILocation(line: 801, column: 60, scope: !7053)
!7124 = !DILocation(line: 801, column: 117, scope: !7053)
!7125 = !DILocation(line: 801, column: 83, scope: !7053)
!7126 = !DILocation(line: 801, column: 26, scope: !7053)
!7127 = !DILocation(line: 802, column: 32, scope: !7053)
!7128 = !DILocation(line: 803, column: 25, scope: !7053)
!7129 = !DILocation(line: 804, column: 20, scope: !7053)
!7130 = !DILocation(line: 804, column: 5, scope: !7053)
!7131 = !DILocation(line: 807, column: 52, scope: !7053)
!7132 = !DILocation(line: 808, column: 46, scope: !7053)
!7133 = !DILocation(line: 809, column: 44, scope: !7053)
!7134 = !DILocation(line: 810, column: 5, scope: !7053)
!7135 = !DILocation(line: 810, column: 38, scope: !7053)
!7136 = !DILocation(line: 811, column: 28, scope: !7053)
!7137 = !DILocation(line: 811, column: 5, scope: !7053)
!7138 = !DILocation(line: 814, column: 66, scope: !7053)
!7139 = !DILocation(line: 814, column: 17, scope: !7053)
!7140 = !DILocation(line: 814, column: 33, scope: !7053)
!7141 = !DILocation(line: 815, column: 70, scope: !7053)
!7142 = !DILocation(line: 815, column: 17, scope: !7053)
!7143 = !DILocation(line: 815, column: 37, scope: !7053)
!7144 = !DILocation(line: 816, column: 69, scope: !7053)
!7145 = !DILocation(line: 816, column: 91, scope: !7053)
!7146 = !DILocation(line: 816, column: 17, scope: !7053)
!7147 = !DILocation(line: 816, column: 36, scope: !7053)
!7148 = !DILocation(line: 817, column: 90, scope: !7053)
!7149 = !DILocation(line: 817, column: 5, scope: !7053)
!7150 = !DILocation(line: 819, column: 5, scope: !7053)
!7151 = !DILocation(line: 822, column: 26, scope: !7053)
!7152 = !DILocation(line: 822, column: 99, scope: !7053)
!7153 = !DILocation(line: 822, column: 58, scope: !7053)
!7154 = !DILocation(line: 822, column: 5, scope: !7053)
!7155 = !DILocation(line: 824, column: 26, scope: !7053)
!7156 = !DILocation(line: 824, column: 99, scope: !7053)
!7157 = !DILocation(line: 824, column: 58, scope: !7053)
!7158 = !DILocation(line: 824, column: 5, scope: !7053)
!7159 = !DILocation(line: 826, column: 5, scope: !7053)
!7160 = !DILocation(line: 829, column: 5, scope: !7053)
!7161 = !DILocation(line: 830, column: 1, scope: !7053)
!7162 = distinct !DISubprogram(name: "hal_i2c_master_get_running_status", scope: !869, file: !869, line: 834, type: !7163, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !7170)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{!6189, !951, !7165}
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 32)
!7166 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_running_status_t", file: !872, line: 501, baseType: !7167)
!7167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 499, size: 32, elements: !7168)
!7168 = !{!7169}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !7167, file: !872, line: 500, baseType: !949, size: 32)
!7170 = !{!7171, !7172}
!7171 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7162, file: !869, line: 834, type: !951)
!7172 = !DILocalVariable(name: "running_status", arg: 2, scope: !7162, file: !869, line: 834, type: !7165)
!7173 = !DILocation(line: 0, scope: !7162)
!7174 = !DILocation(line: 837, column: 28, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7162, file: !869, line: 837, column: 9)
!7176 = !DILocation(line: 837, column: 9, scope: !7162)
!7177 = !DILocation(line: 840, column: 62, scope: !7162)
!7178 = !DILocation(line: 840, column: 21, scope: !7162)
!7179 = !DILocation(line: 840, column: 36, scope: !7162)
!7180 = !DILocation(line: 841, column: 5, scope: !7162)
!7181 = !DILocation(line: 842, column: 1, scope: !7162)
!7182 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !987, file: !987, line: 74, type: !7183, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{null, !61, !61}
!7185 = !{!7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193}
!7186 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7182, file: !987, line: 74, type: !61)
!7187 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !7182, file: !987, line: 74, type: !61)
!7188 = !DILocalVariable(name: "frequency", scope: !7182, file: !987, line: 76, type: !61)
!7189 = !DILocalVariable(name: "step_cnt_div", scope: !7182, file: !987, line: 77, type: !61)
!7190 = !DILocalVariable(name: "sample_cnt_div", scope: !7182, file: !987, line: 78, type: !61)
!7191 = !DILocalVariable(name: "orignal_register_value", scope: !7182, file: !987, line: 79, type: !61)
!7192 = !DILocalVariable(name: "register_value", scope: !7182, file: !987, line: 79, type: !61)
!7193 = !DILocalVariable(name: "temp", scope: !7182, file: !987, line: 80, type: !61)
!7194 = !DILocation(line: 0, scope: !7182)
!7195 = !DILocation(line: 83, column: 5, scope: !7182)
!7196 = !DILocation(line: 83, column: 36, scope: !7182)
!7197 = !DILocation(line: 83, column: 46, scope: !7182)
!7198 = !DILocation(line: 84, column: 5, scope: !7182)
!7199 = !DILocation(line: 87, column: 54, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7182, file: !987, line: 84, column: 33)
!7201 = !DILocation(line: 89, column: 13, scope: !7200)
!7202 = !DILocation(line: 95, column: 13, scope: !7200)
!7203 = !DILocation(line: 98, column: 13, scope: !7200)
!7204 = !DILocation(line: 101, column: 13, scope: !7200)
!7205 = !DILocation(line: 104, column: 13, scope: !7200)
!7206 = !DILocation(line: 109, column: 13, scope: !7200)
!7207 = !DILocation(line: 117, column: 5, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7182, file: !987, line: 117, column: 5)
!7209 = !DILocation(line: 119, column: 31, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !987, line: 117, column: 69)
!7211 = distinct !DILexicalBlock(scope: !7208, file: !987, line: 117, column: 5)
!7212 = !DILocation(line: 120, column: 60, scope: !7210)
!7213 = !DILocation(line: 120, column: 67, scope: !7210)
!7214 = !DILocation(line: 120, column: 72, scope: !7210)
!7215 = !DILocation(line: 122, column: 26, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7210, file: !987, line: 122, column: 13)
!7217 = !DILocation(line: 122, column: 13, scope: !7210)
!7218 = !DILocation(line: 117, column: 65, scope: !7211)
!7219 = !DILocation(line: 117, column: 45, scope: !7211)
!7220 = distinct !{!7220, !7207, !7221}
!7221 = !DILocation(line: 125, column: 5, scope: !7208)
!7222 = !DILocation(line: 0, scope: !7208)
!7223 = !DILocation(line: 128, column: 17, scope: !7182)
!7224 = !DILocation(line: 131, column: 62, scope: !7182)
!7225 = !DILocation(line: 131, column: 70, scope: !7182)
!7226 = !DILocation(line: 132, column: 94, scope: !7182)
!7227 = !DILocation(line: 132, column: 76, scope: !7182)
!7228 = !DILocation(line: 132, column: 157, scope: !7182)
!7229 = !DILocation(line: 132, column: 45, scope: !7182)
!7230 = !DILocation(line: 133, column: 45, scope: !7182)
!7231 = !DILocation(line: 133, column: 43, scope: !7182)
!7232 = !DILocation(line: 134, column: 1, scope: !7182)
!7233 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !987, file: !987, line: 143, type: !7234, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7245)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{null, !61, !957, !460, !7236}
!7236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7237, size: 32)
!7237 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !901, line: 176, baseType: !7238)
!7238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !901, line: 170, size: 160, elements: !7239)
!7239 = !{!7240, !7241, !7242, !7243, !7244}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !7238, file: !901, line: 171, baseType: !61, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !7238, file: !901, line: 172, baseType: !61, size: 32, offset: 32)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !7238, file: !901, line: 173, baseType: !61, size: 32, offset: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !7238, file: !901, line: 174, baseType: !61, size: 32, offset: 96)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !7238, file: !901, line: 175, baseType: !61, size: 32, offset: 128)
!7245 = !{!7246, !7247, !7248, !7249}
!7246 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7233, file: !987, line: 143, type: !61)
!7247 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !7233, file: !987, line: 143, type: !957)
!7248 = !DILocalVariable(name: "slave_address", arg: 3, scope: !7233, file: !987, line: 143, type: !460)
!7249 = !DILocalVariable(name: "config_size", arg: 4, scope: !7233, file: !987, line: 143, type: !7236)
!7250 = !DILocation(line: 0, scope: !7233)
!7251 = !DILocation(line: 146, column: 49, scope: !7233)
!7252 = !DILocation(line: 146, column: 5, scope: !7233)
!7253 = !DILocation(line: 146, column: 36, scope: !7233)
!7254 = !DILocation(line: 146, column: 47, scope: !7233)
!7255 = !DILocation(line: 148, column: 5, scope: !7233)
!7256 = !DILocation(line: 150, column: 5, scope: !7233)
!7257 = !DILocation(line: 153, column: 5, scope: !7233)
!7258 = !DILocation(line: 0, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !987, line: 156, column: 17)
!7260 = distinct !DILexicalBlock(scope: !7233, file: !987, line: 153, column: 31)
!7261 = !DILocation(line: 164, column: 72, scope: !7260)
!7262 = !DILocation(line: 164, column: 59, scope: !7260)
!7263 = !DILocation(line: 164, column: 44, scope: !7260)
!7264 = !DILocation(line: 164, column: 57, scope: !7260)
!7265 = !DILocation(line: 165, column: 44, scope: !7260)
!7266 = !DILocation(line: 165, column: 56, scope: !7260)
!7267 = !DILocation(line: 167, column: 13, scope: !7260)
!7268 = !DILocation(line: 0, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7260, file: !987, line: 170, column: 17)
!7270 = !DILocation(line: 177, column: 72, scope: !7260)
!7271 = !DILocation(line: 177, column: 59, scope: !7260)
!7272 = !DILocation(line: 177, column: 44, scope: !7260)
!7273 = !DILocation(line: 177, column: 57, scope: !7260)
!7274 = !DILocation(line: 178, column: 44, scope: !7260)
!7275 = !DILocation(line: 178, column: 56, scope: !7260)
!7276 = !DILocation(line: 180, column: 13, scope: !7260)
!7277 = !DILocation(line: 0, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7260, file: !987, line: 183, column: 17)
!7279 = !DILocation(line: 190, column: 72, scope: !7260)
!7280 = !DILocation(line: 190, column: 59, scope: !7260)
!7281 = !DILocation(line: 190, column: 44, scope: !7260)
!7282 = !DILocation(line: 190, column: 57, scope: !7260)
!7283 = !DILocation(line: 191, column: 44, scope: !7260)
!7284 = !DILocation(line: 191, column: 56, scope: !7260)
!7285 = !DILocation(line: 193, column: 13, scope: !7260)
!7286 = !DILocation(line: 0, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7260, file: !987, line: 196, column: 17)
!7288 = !DILocation(line: 203, column: 44, scope: !7260)
!7289 = !DILocation(line: 203, column: 57, scope: !7260)
!7290 = !DILocation(line: 204, column: 71, scope: !7260)
!7291 = !DILocation(line: 204, column: 58, scope: !7260)
!7292 = !DILocation(line: 204, column: 44, scope: !7260)
!7293 = !DILocation(line: 204, column: 56, scope: !7260)
!7294 = !DILocation(line: 206, column: 13, scope: !7260)
!7295 = !DILocation(line: 0, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7260, file: !987, line: 209, column: 17)
!7297 = !DILocation(line: 216, column: 72, scope: !7260)
!7298 = !DILocation(line: 216, column: 59, scope: !7260)
!7299 = !DILocation(line: 216, column: 44, scope: !7260)
!7300 = !DILocation(line: 216, column: 57, scope: !7260)
!7301 = !DILocation(line: 217, column: 44, scope: !7260)
!7302 = !DILocation(line: 217, column: 56, scope: !7260)
!7303 = !DILocation(line: 218, column: 76, scope: !7260)
!7304 = !DILocation(line: 218, column: 63, scope: !7260)
!7305 = !DILocation(line: 219, column: 13, scope: !7260)
!7306 = !DILocation(line: 0, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7260, file: !987, line: 222, column: 17)
!7308 = !DILocation(line: 229, column: 72, scope: !7260)
!7309 = !DILocation(line: 229, column: 59, scope: !7260)
!7310 = !DILocation(line: 229, column: 44, scope: !7260)
!7311 = !DILocation(line: 229, column: 57, scope: !7260)
!7312 = !DILocation(line: 230, column: 75, scope: !7260)
!7313 = !DILocation(line: 230, column: 58, scope: !7260)
!7314 = !DILocation(line: 230, column: 44, scope: !7260)
!7315 = !DILocation(line: 230, column: 56, scope: !7260)
!7316 = !DILocation(line: 232, column: 13, scope: !7260)
!7317 = !DILocation(line: 235, column: 44, scope: !7260)
!7318 = !DILocation(line: 235, column: 54, scope: !7260)
!7319 = !DILocation(line: 236, column: 44, scope: !7260)
!7320 = !DILocation(line: 236, column: 52, scope: !7260)
!7321 = !DILocation(line: 237, column: 72, scope: !7260)
!7322 = !DILocation(line: 237, column: 59, scope: !7260)
!7323 = !DILocation(line: 237, column: 44, scope: !7260)
!7324 = !DILocation(line: 237, column: 57, scope: !7260)
!7325 = !DILocation(line: 238, column: 71, scope: !7260)
!7326 = !DILocation(line: 238, column: 58, scope: !7260)
!7327 = !DILocation(line: 238, column: 44, scope: !7260)
!7328 = !DILocation(line: 238, column: 56, scope: !7260)
!7329 = !DILocation(line: 240, column: 13, scope: !7260)
!7330 = !DILocation(line: 242, column: 44, scope: !7260)
!7331 = !DILocation(line: 242, column: 54, scope: !7260)
!7332 = !DILocation(line: 243, column: 44, scope: !7260)
!7333 = !DILocation(line: 243, column: 52, scope: !7260)
!7334 = !DILocation(line: 244, column: 72, scope: !7260)
!7335 = !DILocation(line: 244, column: 59, scope: !7260)
!7336 = !DILocation(line: 244, column: 44, scope: !7260)
!7337 = !DILocation(line: 244, column: 57, scope: !7260)
!7338 = !DILocation(line: 245, column: 71, scope: !7260)
!7339 = !DILocation(line: 245, column: 58, scope: !7260)
!7340 = !DILocation(line: 245, column: 44, scope: !7260)
!7341 = !DILocation(line: 245, column: 56, scope: !7260)
!7342 = !DILocation(line: 248, column: 13, scope: !7260)
!7343 = !DILocation(line: 250, column: 44, scope: !7260)
!7344 = !DILocation(line: 250, column: 54, scope: !7260)
!7345 = !DILocation(line: 251, column: 44, scope: !7260)
!7346 = !DILocation(line: 251, column: 52, scope: !7260)
!7347 = !DILocation(line: 252, column: 72, scope: !7260)
!7348 = !DILocation(line: 252, column: 59, scope: !7260)
!7349 = !DILocation(line: 252, column: 44, scope: !7260)
!7350 = !DILocation(line: 252, column: 57, scope: !7260)
!7351 = !DILocation(line: 253, column: 71, scope: !7260)
!7352 = !DILocation(line: 253, column: 58, scope: !7260)
!7353 = !DILocation(line: 253, column: 44, scope: !7260)
!7354 = !DILocation(line: 253, column: 56, scope: !7260)
!7355 = !DILocation(line: 254, column: 76, scope: !7260)
!7356 = !DILocation(line: 254, column: 63, scope: !7260)
!7357 = !DILocation(line: 255, column: 13, scope: !7260)
!7358 = !DILocation(line: 0, scope: !7260)
!7359 = !DILocation(line: 261, column: 1, scope: !7233)
!7360 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !987, file: !987, line: 266, type: !7361, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7363)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{null, !61, !5117, !61}
!7363 = !{!7364, !7365, !7366, !7367}
!7364 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7360, file: !987, line: 266, type: !61)
!7365 = !DILocalVariable(name: "data", arg: 2, scope: !7360, file: !987, line: 266, type: !5117)
!7366 = !DILocalVariable(name: "size", arg: 3, scope: !7360, file: !987, line: 266, type: !61)
!7367 = !DILocalVariable(name: "i", scope: !7360, file: !987, line: 268, type: !61)
!7368 = !DILocation(line: 0, scope: !7360)
!7369 = !DILocation(line: 269, column: 19, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7371, file: !987, line: 269, column: 5)
!7371 = distinct !DILexicalBlock(scope: !7360, file: !987, line: 269, column: 5)
!7372 = !DILocation(line: 269, column: 5, scope: !7371)
!7373 = !DILocation(line: 270, column: 59, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7370, file: !987, line: 269, column: 32)
!7375 = !DILocation(line: 270, column: 52, scope: !7374)
!7376 = !DILocation(line: 270, column: 50, scope: !7374)
!7377 = !DILocation(line: 269, column: 28, scope: !7370)
!7378 = distinct !{!7378, !7372, !7379}
!7379 = !DILocation(line: 271, column: 5, scope: !7371)
!7380 = !DILocation(line: 272, column: 1, scope: !7360)
!7381 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !987, file: !987, line: 274, type: !7382, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7384)
!7382 = !DISubroutineType(types: !7383)
!7383 = !{null, !61, !762, !61}
!7384 = !{!7385, !7386, !7387, !7388}
!7385 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7381, file: !987, line: 274, type: !61)
!7386 = !DILocalVariable(name: "buffer", arg: 2, scope: !7381, file: !987, line: 274, type: !762)
!7387 = !DILocalVariable(name: "size", arg: 3, scope: !7381, file: !987, line: 274, type: !61)
!7388 = !DILocalVariable(name: "i", scope: !7381, file: !987, line: 276, type: !61)
!7389 = !DILocation(line: 0, scope: !7381)
!7390 = !DILocation(line: 277, column: 19, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !987, line: 277, column: 5)
!7392 = distinct !DILexicalBlock(scope: !7381, file: !987, line: 277, column: 5)
!7393 = !DILocation(line: 277, column: 5, scope: !7392)
!7394 = !DILocation(line: 278, column: 56, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !987, line: 277, column: 32)
!7396 = !DILocation(line: 278, column: 25, scope: !7395)
!7397 = !DILocation(line: 278, column: 18, scope: !7395)
!7398 = !DILocation(line: 278, column: 23, scope: !7395)
!7399 = !DILocation(line: 277, column: 28, scope: !7391)
!7400 = distinct !{!7400, !7393, !7401}
!7401 = !DILocation(line: 279, column: 5, scope: !7392)
!7402 = !DILocation(line: 280, column: 1, scope: !7381)
!7403 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !987, file: !987, line: 282, type: !7404, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7406)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!6329, !61}
!7406 = !{!7407, !7408, !7409}
!7407 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7403, file: !987, line: 282, type: !61)
!7408 = !DILocalVariable(name: "register_value", scope: !7403, file: !987, line: 284, type: !1029)
!7409 = !DILocalVariable(name: "return_status", scope: !7403, file: !987, line: 285, type: !6329)
!7410 = !DILocation(line: 0, scope: !7403)
!7411 = !DILocation(line: 287, column: 22, scope: !7403)
!7412 = !DILocation(line: 287, column: 53, scope: !7403)
!7413 = !DILocation(line: 289, column: 15, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7403, file: !987, line: 289, column: 9)
!7415 = !DILocation(line: 289, column: 30, scope: !7414)
!7416 = !DILocation(line: 289, column: 11, scope: !7414)
!7417 = !DILocation(line: 289, column: 9, scope: !7403)
!7418 = !DILocation(line: 291, column: 37, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !987, line: 291, column: 16)
!7420 = !DILocation(line: 291, column: 18, scope: !7419)
!7421 = !DILocation(line: 291, column: 16, scope: !7414)
!7422 = !DILocation(line: 293, column: 37, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7419, file: !987, line: 293, column: 16)
!7424 = !DILocation(line: 293, column: 18, scope: !7423)
!7425 = !DILocation(line: 293, column: 16, scope: !7419)
!7426 = !DILocation(line: 295, column: 20, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7423, file: !987, line: 295, column: 16)
!7428 = !DILocation(line: 295, column: 16, scope: !7423)
!7429 = !DILocation(line: 318, column: 5, scope: !7403)
!7430 = !DILocation(line: 319, column: 5, scope: !7403)
!7431 = !DILocation(line: 131, column: 9, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !1085, file: !1086, line: 131, column: 9)
!7433 = !DILocation(line: 131, column: 9, scope: !1085)
!7434 = !DILocation(line: 0, scope: !1085)
!7435 = !DILocation(line: 134, column: 49, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !1086, line: 133, column: 46)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !1086, line: 133, column: 9)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !1086, line: 133, column: 9)
!7439 = distinct !DILexicalBlock(scope: !7432, file: !1086, line: 131, column: 28)
!7440 = !DILocation(line: 134, column: 13, scope: !7436)
!7441 = !DILocation(line: 133, column: 42, scope: !7437)
!7442 = !DILocation(line: 133, column: 23, scope: !7437)
!7443 = !DILocation(line: 133, column: 9, scope: !7438)
!7444 = distinct !{!7444, !7443, !7445}
!7445 = !DILocation(line: 135, column: 9, scope: !7438)
!7446 = !DILocation(line: 136, column: 22, scope: !7439)
!7447 = !DILocation(line: 137, column: 5, scope: !7439)
!7448 = !DILocation(line: 138, column: 5, scope: !1085)
!7449 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1095, file: !1095, line: 1577, type: !7450, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7452)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{null, !863, !61}
!7452 = !{!7453, !7454}
!7453 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7449, file: !1095, line: 1577, type: !863)
!7454 = !DILocalVariable(name: "priority", arg: 2, scope: !7449, file: !1095, line: 1577, type: !61)
!7455 = !DILocation(line: 0, scope: !7449)
!7456 = !DILocation(line: 1582, column: 34, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !1095, line: 1581, column: 8)
!7458 = distinct !DILexicalBlock(scope: !7449, file: !1095, line: 1579, column: 6)
!7459 = !DILocation(line: 1582, column: 5, scope: !7457)
!7460 = !DILocation(line: 1582, column: 32, scope: !7457)
!7461 = !DILocation(line: 1583, column: 1, scope: !7449)
!7462 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1086, file: !1086, line: 141, type: !7463, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7465)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{!1089, !862}
!7465 = !{!7466, !7467}
!7466 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7462, file: !1086, line: 141, type: !862)
!7467 = !DILocalVariable(name: "status", scope: !7462, file: !1086, line: 143, type: !1089)
!7468 = !DILocation(line: 0, scope: !7462)
!7469 = !DILocation(line: 145, column: 40, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7462, file: !1086, line: 145, column: 9)
!7471 = !DILocation(line: 149, column: 9, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7470, file: !1086, line: 148, column: 12)
!7473 = !DILocation(line: 153, column: 5, scope: !7462)
!7474 = !DILocation(line: 154, column: 1, scope: !7462)
!7475 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1095, file: !1095, line: 1494, type: !7476, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7478)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{null, !863}
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7475, file: !1095, line: 1494, type: !863)
!7480 = !DILocation(line: 0, scope: !7475)
!7481 = !DILocation(line: 1497, column: 91, scope: !7475)
!7482 = !DILocation(line: 1497, column: 61, scope: !7475)
!7483 = !DILocation(line: 1497, column: 40, scope: !7475)
!7484 = !DILocation(line: 1497, column: 3, scope: !7475)
!7485 = !DILocation(line: 1497, column: 46, scope: !7475)
!7486 = !DILocation(line: 1498, column: 1, scope: !7475)
!7487 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1086, file: !1086, line: 156, type: !7463, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7488)
!7488 = !{!7489, !7490}
!7489 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7487, file: !1086, line: 156, type: !862)
!7490 = !DILocalVariable(name: "status", scope: !7487, file: !1086, line: 158, type: !1089)
!7491 = !DILocation(line: 0, scope: !7487)
!7492 = !DILocation(line: 160, column: 40, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7487, file: !1086, line: 160, column: 9)
!7494 = !DILocation(line: 164, column: 9, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7493, file: !1086, line: 163, column: 12)
!7496 = !DILocation(line: 168, column: 5, scope: !7487)
!7497 = !DILocation(line: 169, column: 1, scope: !7487)
!7498 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1095, file: !1095, line: 1507, type: !7476, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7499)
!7499 = !{!7500}
!7500 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7498, file: !1095, line: 1507, type: !863)
!7501 = !DILocation(line: 0, scope: !7498)
!7502 = !DILocation(line: 1509, column: 65, scope: !7498)
!7503 = !DILocation(line: 1509, column: 44, scope: !7498)
!7504 = !DILocation(line: 1509, column: 32, scope: !7498)
!7505 = !DILocation(line: 1509, column: 3, scope: !7498)
!7506 = !DILocation(line: 1509, column: 39, scope: !7498)
!7507 = !DILocation(line: 1510, column: 1, scope: !7498)
!7508 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1086, file: !1086, line: 171, type: !7509, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7511)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{!61, !862}
!7511 = !{!7512, !7513}
!7512 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7508, file: !1086, line: 171, type: !862)
!7513 = !DILocalVariable(name: "ret", scope: !7508, file: !1086, line: 173, type: !61)
!7514 = !DILocation(line: 0, scope: !7508)
!7515 = !DILocation(line: 175, column: 40, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7508, file: !1086, line: 175, column: 9)
!7517 = !DILocation(line: 178, column: 15, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7516, file: !1086, line: 177, column: 12)
!7519 = !DILocation(line: 181, column: 5, scope: !7508)
!7520 = !DILocation(line: 182, column: 1, scope: !7508)
!7521 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1095, file: !1095, line: 1523, type: !7522, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7524)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{!61, !863}
!7524 = !{!7525}
!7525 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7521, file: !1095, line: 1523, type: !863)
!7526 = !DILocation(line: 0, scope: !7521)
!7527 = !DILocation(line: 1525, column: 51, scope: !7521)
!7528 = !DILocation(line: 1525, column: 23, scope: !7521)
!7529 = !DILocation(line: 1525, column: 83, scope: !7521)
!7530 = !DILocation(line: 1525, column: 22, scope: !7521)
!7531 = !DILocation(line: 1525, column: 3, scope: !7521)
!7532 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1086, file: !1086, line: 184, type: !7463, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7533)
!7533 = !{!7534, !7535}
!7534 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7532, file: !1086, line: 184, type: !862)
!7535 = !DILocalVariable(name: "status", scope: !7532, file: !1086, line: 186, type: !1089)
!7536 = !DILocation(line: 0, scope: !7532)
!7537 = !DILocation(line: 188, column: 40, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7532, file: !1086, line: 188, column: 9)
!7539 = !DILocation(line: 192, column: 9, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7538, file: !1086, line: 191, column: 12)
!7541 = !DILocation(line: 196, column: 5, scope: !7532)
!7542 = !DILocation(line: 197, column: 1, scope: !7532)
!7543 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1095, file: !1095, line: 1535, type: !7476, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7544)
!7544 = !{!7545}
!7545 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7543, file: !1095, line: 1535, type: !863)
!7546 = !DILocation(line: 0, scope: !7543)
!7547 = !DILocation(line: 1537, column: 65, scope: !7543)
!7548 = !DILocation(line: 1537, column: 44, scope: !7543)
!7549 = !DILocation(line: 1537, column: 32, scope: !7543)
!7550 = !DILocation(line: 1537, column: 3, scope: !7543)
!7551 = !DILocation(line: 1537, column: 39, scope: !7543)
!7552 = !DILocation(line: 1538, column: 1, scope: !7543)
!7553 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1086, file: !1086, line: 199, type: !7463, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7554)
!7554 = !{!7555, !7556}
!7555 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7553, file: !1086, line: 199, type: !862)
!7556 = !DILocalVariable(name: "status", scope: !7553, file: !1086, line: 201, type: !1089)
!7557 = !DILocation(line: 0, scope: !7553)
!7558 = !DILocation(line: 203, column: 40, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7553, file: !1086, line: 203, column: 9)
!7560 = !DILocation(line: 207, column: 9, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7559, file: !1086, line: 206, column: 12)
!7562 = !DILocation(line: 211, column: 5, scope: !7553)
!7563 = !DILocation(line: 212, column: 1, scope: !7553)
!7564 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1095, file: !1095, line: 1547, type: !7476, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7565)
!7565 = !{!7566}
!7566 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7564, file: !1095, line: 1547, type: !863)
!7567 = !DILocation(line: 0, scope: !7564)
!7568 = !DILocation(line: 1549, column: 65, scope: !7564)
!7569 = !DILocation(line: 1549, column: 44, scope: !7564)
!7570 = !DILocation(line: 1549, column: 32, scope: !7564)
!7571 = !DILocation(line: 1549, column: 3, scope: !7564)
!7572 = !DILocation(line: 1549, column: 39, scope: !7564)
!7573 = !DILocation(line: 1550, column: 1, scope: !7564)
!7574 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1086, file: !1086, line: 214, type: !7575, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7577)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!1089, !862, !61}
!7577 = !{!7578, !7579, !7580}
!7578 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7574, file: !1086, line: 214, type: !862)
!7579 = !DILocalVariable(name: "priority", arg: 2, scope: !7574, file: !1086, line: 214, type: !61)
!7580 = !DILocalVariable(name: "status", scope: !7574, file: !1086, line: 216, type: !1089)
!7581 = !DILocation(line: 0, scope: !7574)
!7582 = !DILocation(line: 218, column: 40, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7574, file: !1086, line: 218, column: 9)
!7584 = !DILocation(line: 222, column: 9, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7583, file: !1086, line: 221, column: 12)
!7586 = !DILocation(line: 226, column: 5, scope: !7574)
!7587 = !DILocation(line: 227, column: 1, scope: !7574)
!7588 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1086, file: !1086, line: 229, type: !7509, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7589)
!7589 = !{!7590, !7591}
!7590 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7588, file: !1086, line: 229, type: !862)
!7591 = !DILocalVariable(name: "ret", scope: !7588, file: !1086, line: 231, type: !61)
!7592 = !DILocation(line: 0, scope: !7588)
!7593 = !DILocation(line: 233, column: 40, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7588, file: !1086, line: 233, column: 9)
!7595 = !DILocation(line: 236, column: 15, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7594, file: !1086, line: 235, column: 12)
!7597 = !DILocation(line: 239, column: 5, scope: !7588)
!7598 = !DILocation(line: 240, column: 1, scope: !7588)
!7599 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1095, file: !1095, line: 1597, type: !7522, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7600)
!7600 = !{!7601}
!7601 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7599, file: !1095, line: 1597, type: !863)
!7602 = !DILocation(line: 0, scope: !7599)
!7603 = !DILocation(line: 1603, column: 23, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !1095, line: 1602, column: 8)
!7605 = distinct !DILexicalBlock(scope: !7599, file: !1095, line: 1600, column: 6)
!7606 = !DILocation(line: 1603, column: 60, scope: !7604)
!7607 = !DILocation(line: 1604, column: 1, scope: !7599)
!7608 = distinct !DISubprogram(name: "isrC_main", scope: !1086, file: !1086, line: 248, type: !1087, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7609)
!7609 = !{!7610, !7611}
!7610 = !DILocalVariable(name: "status", scope: !7608, file: !1086, line: 250, type: !1089)
!7611 = !DILocalVariable(name: "irq_number", scope: !7608, file: !1086, line: 251, type: !862)
!7612 = !DILocation(line: 0, scope: !7608)
!7613 = !DILocation(line: 253, column: 5, scope: !7608)
!7614 = !DILocation(line: 255, column: 35, scope: !7608)
!7615 = !DILocation(line: 256, column: 40, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7608, file: !1086, line: 256, column: 9)
!7617 = !DILocation(line: 259, column: 48, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7616, file: !1086, line: 259, column: 16)
!7619 = !DILocation(line: 259, column: 62, scope: !7618)
!7620 = !DILocation(line: 259, column: 16, scope: !7616)
!7621 = !DILocation(line: 261, column: 9, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !1086, line: 259, column: 71)
!7623 = !DILocation(line: 262, column: 9, scope: !7622)
!7624 = !DILocation(line: 264, column: 55, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7618, file: !1086, line: 263, column: 12)
!7626 = !DILocation(line: 264, column: 41, scope: !7625)
!7627 = !DILocation(line: 264, column: 53, scope: !7625)
!7628 = !DILocation(line: 265, column: 41, scope: !7625)
!7629 = !DILocation(line: 265, column: 9, scope: !7625)
!7630 = !DILocation(line: 269, column: 5, scope: !7608)
!7631 = !DILocation(line: 270, column: 1, scope: !7608)
!7632 = distinct !DISubprogram(name: "get_current_irq", scope: !1086, file: !1086, line: 242, type: !3987, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7633)
!7633 = !{!7634}
!7634 = !DILocalVariable(name: "irq_num", scope: !7632, file: !1086, line: 244, type: !61)
!7635 = !DILocation(line: 244, column: 31, scope: !7632)
!7636 = !DILocation(line: 244, column: 36, scope: !7632)
!7637 = !DILocation(line: 0, scope: !7632)
!7638 = !DILocation(line: 245, column: 21, scope: !7632)
!7639 = !DILocation(line: 245, column: 5, scope: !7632)
!7640 = distinct !DISubprogram(name: "get_pending_irq", scope: !1086, file: !1086, line: 121, type: !3987, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !293)
!7641 = !DILocation(line: 123, column: 19, scope: !7640)
!7642 = !DILocation(line: 123, column: 51, scope: !7640)
!7643 = !DILocation(line: 123, column: 5, scope: !7640)
!7644 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1086, file: !1086, line: 272, type: !7645, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7648)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{!1089, !862, !7647}
!7647 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !716, line: 175, baseType: !1167)
!7648 = !{!7649, !7650, !7651}
!7649 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7644, file: !1086, line: 272, type: !862)
!7650 = !DILocalVariable(name: "callback", arg: 2, scope: !7644, file: !1086, line: 272, type: !7647)
!7651 = !DILocalVariable(name: "mask", scope: !7644, file: !1086, line: 274, type: !61)
!7652 = !DILocation(line: 0, scope: !7644)
!7653 = !DILocation(line: 276, column: 40, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7644, file: !1086, line: 276, column: 9)
!7655 = !DILocation(line: 280, column: 12, scope: !7644)
!7656 = !DILocation(line: 281, column: 5, scope: !7644)
!7657 = !DILocation(line: 282, column: 37, scope: !7644)
!7658 = !DILocation(line: 282, column: 51, scope: !7644)
!7659 = !DILocation(line: 283, column: 37, scope: !7644)
!7660 = !DILocation(line: 283, column: 49, scope: !7644)
!7661 = !DILocation(line: 284, column: 5, scope: !7644)
!7662 = !DILocation(line: 286, column: 5, scope: !7644)
!7663 = !DILocation(line: 287, column: 1, scope: !7644)
!7664 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1086, file: !1086, line: 289, type: !7665, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7667)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!1089, !1218}
!7667 = !{!7668}
!7668 = !DILocalVariable(name: "mask", arg: 1, scope: !7664, file: !1086, line: 289, type: !1218)
!7669 = !DILocation(line: 0, scope: !7664)
!7670 = !DILocation(line: 291, column: 13, scope: !7664)
!7671 = !DILocation(line: 291, column: 11, scope: !7664)
!7672 = !DILocation(line: 292, column: 5, scope: !7664)
!7673 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1086, file: !1086, line: 295, type: !7674, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !7676)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!1089, !61}
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "mask", arg: 1, scope: !7673, file: !1086, line: 295, type: !61)
!7678 = !DILocation(line: 0, scope: !7673)
!7679 = !DILocation(line: 297, column: 5, scope: !7673)
!7680 = !DILocation(line: 298, column: 5, scope: !7673)
!7681 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2741, file: !2741, line: 51, type: !3987, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7682)
!7682 = !{!7683, !7684}
!7683 = !DILocalVariable(name: "mask", scope: !7681, file: !2741, line: 53, type: !61)
!7684 = !DILocalVariable(name: "priority", scope: !7681, file: !2741, line: 55, type: !61)
!7685 = !DILocation(line: 521, column: 3, scope: !7686, inlinedAt: !7690)
!7686 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !7687, file: !7687, line: 517, type: !3987, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7688)
!7687 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!7688 = !{!7689}
!7689 = !DILocalVariable(name: "result", scope: !7686, file: !7687, line: 519, type: !61)
!7690 = distinct !DILocation(line: 53, column: 21, scope: !7681)
!7691 = !{i64 457578}
!7692 = !DILocation(line: 0, scope: !7686, inlinedAt: !7690)
!7693 = !DILocation(line: 0, scope: !7681)
!7694 = !DILocalVariable(name: "value", arg: 1, scope: !7695, file: !7687, line: 532, type: !61)
!7695 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !7687, file: !7687, line: 532, type: !7696, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7698)
!7696 = !DISubroutineType(types: !7697)
!7697 = !{null, !61}
!7698 = !{!7694}
!7699 = !DILocation(line: 0, scope: !7695, inlinedAt: !7700)
!7700 = distinct !DILocation(line: 56, column: 5, scope: !7681)
!7701 = !DILocation(line: 534, column: 3, scope: !7695, inlinedAt: !7700)
!7702 = !{i64 457911}
!7703 = !DILocation(line: 456, column: 3, scope: !7704, inlinedAt: !7705)
!7704 = distinct !DISubprogram(name: "__DMB", scope: !2853, file: !2853, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !293)
!7705 = distinct !DILocation(line: 57, column: 5, scope: !7681)
!7706 = !{i64 430667}
!7707 = !DILocation(line: 434, column: 3, scope: !7708, inlinedAt: !7709)
!7708 = distinct !DISubprogram(name: "__ISB", scope: !2853, file: !2853, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !293)
!7709 = distinct !DILocation(line: 58, column: 5, scope: !7681)
!7710 = !{i64 430082}
!7711 = !DILocation(line: 59, column: 5, scope: !7681)
!7712 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2741, file: !2741, line: 62, type: !7696, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7713)
!7713 = !{!7714}
!7714 = !DILocalVariable(name: "mask", arg: 1, scope: !7712, file: !2741, line: 62, type: !61)
!7715 = !DILocation(line: 0, scope: !7712)
!7716 = !DILocation(line: 0, scope: !7695, inlinedAt: !7717)
!7717 = distinct !DILocation(line: 64, column: 5, scope: !7712)
!7718 = !DILocation(line: 534, column: 3, scope: !7695, inlinedAt: !7717)
!7719 = !DILocation(line: 456, column: 3, scope: !7704, inlinedAt: !7720)
!7720 = distinct !DILocation(line: 65, column: 5, scope: !7712)
!7721 = !DILocation(line: 434, column: 3, scope: !7708, inlinedAt: !7722)
!7722 = distinct !DILocation(line: 66, column: 5, scope: !7712)
!7723 = !DILocation(line: 67, column: 1, scope: !7712)
!7724 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2741, file: !2741, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7725)
!7725 = !{!7726, !7727}
!7726 = !DILocalVariable(name: "irq_number", scope: !7724, file: !2741, line: 71, type: !862)
!7727 = !DILocalVariable(name: "mask", scope: !7724, file: !2741, line: 72, type: !61)
!7728 = !DILocation(line: 72, column: 21, scope: !7724)
!7729 = !DILocation(line: 0, scope: !7724)
!7730 = !DILocation(line: 73, column: 5, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7724, file: !2741, line: 73, column: 5)
!7732 = !DILocation(line: 74, column: 9, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !2741, line: 73, column: 85)
!7734 = distinct !DILexicalBlock(scope: !7731, file: !2741, line: 73, column: 5)
!7735 = !DILocation(line: 73, column: 81, scope: !7734)
!7736 = !DILocation(line: 73, column: 53, scope: !7734)
!7737 = distinct !{!7737, !7730, !7738}
!7738 = !DILocation(line: 75, column: 5, scope: !7731)
!7739 = !DILocation(line: 76, column: 5, scope: !7724)
!7740 = !DILocation(line: 77, column: 1, scope: !7724)
!7741 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1095, file: !1095, line: 1507, type: !7476, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7742)
!7742 = !{!7743}
!7743 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7741, file: !1095, line: 1507, type: !863)
!7744 = !DILocation(line: 0, scope: !7741)
!7745 = !DILocation(line: 1509, column: 65, scope: !7741)
!7746 = !DILocation(line: 1509, column: 44, scope: !7741)
!7747 = !DILocation(line: 1509, column: 32, scope: !7741)
!7748 = !DILocation(line: 1509, column: 3, scope: !7741)
!7749 = !DILocation(line: 1509, column: 39, scope: !7741)
!7750 = !DILocation(line: 1510, column: 1, scope: !7741)
!7751 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2741, file: !2741, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7752)
!7752 = !{!7753, !7754}
!7753 = !DILocalVariable(name: "irq_number", scope: !7751, file: !2741, line: 81, type: !862)
!7754 = !DILocalVariable(name: "mask", scope: !7751, file: !2741, line: 82, type: !61)
!7755 = !DILocation(line: 82, column: 21, scope: !7751)
!7756 = !DILocation(line: 0, scope: !7751)
!7757 = !DILocation(line: 84, column: 5, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !2741, line: 84, column: 5)
!7759 = !DILocation(line: 85, column: 9, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !2741, line: 84, column: 85)
!7761 = distinct !DILexicalBlock(scope: !7758, file: !2741, line: 84, column: 5)
!7762 = !DILocation(line: 84, column: 81, scope: !7761)
!7763 = !DILocation(line: 84, column: 53, scope: !7761)
!7764 = distinct !{!7764, !7757, !7765}
!7765 = !DILocation(line: 86, column: 5, scope: !7758)
!7766 = !DILocation(line: 87, column: 5, scope: !7751)
!7767 = !DILocation(line: 88, column: 1, scope: !7751)
!7768 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1095, file: !1095, line: 1494, type: !7476, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7769)
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7768, file: !1095, line: 1494, type: !863)
!7771 = !DILocation(line: 0, scope: !7768)
!7772 = !DILocation(line: 1497, column: 91, scope: !7768)
!7773 = !DILocation(line: 1497, column: 61, scope: !7768)
!7774 = !DILocation(line: 1497, column: 40, scope: !7768)
!7775 = !DILocation(line: 1497, column: 3, scope: !7768)
!7776 = !DILocation(line: 1497, column: 46, scope: !7768)
!7777 = !DILocation(line: 1498, column: 1, scope: !7768)
!7778 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2741, file: !2741, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7779)
!7779 = !{!7780}
!7780 = !DILocalVariable(name: "irq_number", scope: !7778, file: !2741, line: 92, type: !862)
!7781 = !DILocation(line: 0, scope: !7778)
!7782 = !DILocation(line: 93, column: 5, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7778, file: !2741, line: 93, column: 5)
!7784 = !DILocation(line: 94, column: 9, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7786, file: !2741, line: 93, column: 85)
!7786 = distinct !DILexicalBlock(scope: !7783, file: !2741, line: 93, column: 5)
!7787 = !DILocation(line: 93, column: 81, scope: !7786)
!7788 = !DILocation(line: 93, column: 53, scope: !7786)
!7789 = distinct !{!7789, !7782, !7790}
!7790 = !DILocation(line: 95, column: 5, scope: !7783)
!7791 = !DILocation(line: 96, column: 1, scope: !7778)
!7792 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1095, file: !1095, line: 1547, type: !7476, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7793)
!7793 = !{!7794}
!7794 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7792, file: !1095, line: 1547, type: !863)
!7795 = !DILocation(line: 0, scope: !7792)
!7796 = !DILocation(line: 1549, column: 65, scope: !7792)
!7797 = !DILocation(line: 1549, column: 44, scope: !7792)
!7798 = !DILocation(line: 1549, column: 32, scope: !7792)
!7799 = !DILocation(line: 1549, column: 3, scope: !7792)
!7800 = !DILocation(line: 1549, column: 39, scope: !7792)
!7801 = !DILocation(line: 1550, column: 1, scope: !7792)
!7802 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2741, file: !2741, line: 98, type: !7463, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7803)
!7803 = !{!7804}
!7804 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7802, file: !2741, line: 98, type: !862)
!7805 = !DILocation(line: 0, scope: !7802)
!7806 = !DILocation(line: 100, column: 24, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7802, file: !2741, line: 100, column: 9)
!7808 = !DILocation(line: 104, column: 5, scope: !7802)
!7809 = !DILocation(line: 105, column: 5, scope: !7802)
!7810 = !DILocation(line: 106, column: 1, scope: !7802)
!7811 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2741, file: !2741, line: 45, type: !1168, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7812)
!7812 = !{!7813}
!7813 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7811, file: !2741, line: 45, type: !862)
!7814 = !DILocation(line: 0, scope: !7811)
!7815 = !DILocation(line: 47, column: 54, scope: !7811)
!7816 = !DILocation(line: 47, column: 16, scope: !7811)
!7817 = !DILocation(line: 445, column: 3, scope: !7818, inlinedAt: !7819)
!7818 = distinct !DISubprogram(name: "__DSB", scope: !2853, file: !2853, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !293)
!7819 = distinct !DILocation(line: 48, column: 5, scope: !7811)
!7820 = !{i64 430378}
!7821 = !DILocation(line: 49, column: 1, scope: !7811)
!7822 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2741, file: !2741, line: 114, type: !3987, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !293)
!7823 = !DILocation(line: 116, column: 19, scope: !7822)
!7824 = !DILocation(line: 116, column: 24, scope: !7822)
!7825 = !DILocation(line: 116, column: 5, scope: !7822)
!7826 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1181, file: !1181, line: 71, type: !7827, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{null, !88, !61}
!7829 = !{!7830, !7831, !7832, !7926, !7927, !7928}
!7830 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7826, file: !1181, line: 71, type: !88)
!7831 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7826, file: !1181, line: 71, type: !61)
!7832 = !DILocalVariable(name: "D", scope: !7826, file: !1181, line: 73, type: !7833)
!7833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7834, size: 32)
!7834 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1371, line: 193, baseType: !7835)
!7835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1371, line: 134, size: 1824, elements: !7836)
!7836 = !{!7837, !7838, !7839, !7845, !7851, !7852, !7859, !7860, !7867, !7868, !7869, !7870, !7877, !7878, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925}
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7835, file: !1371, line: 136, baseType: !61, size: 32)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7835, file: !1371, line: 137, baseType: !762, size: 32, offset: 32)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7835, file: !1371, line: 138, baseType: !7840, size: 32, offset: 64)
!7840 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1455, line: 56, baseType: !7841)
!7841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7842, size: 32)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 54, size: 8, elements: !7843)
!7843 = !{!7844}
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7842, file: !1455, line: 55, baseType: !460, size: 8)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7835, file: !1371, line: 139, baseType: !7846, size: 32, offset: 96)
!7846 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1455, line: 46, baseType: !7847)
!7847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7848, size: 32)
!7848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1455, line: 44, size: 8, elements: !7849)
!7849 = !{!7850}
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7848, file: !1455, line: 45, baseType: !460, size: 8)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7835, file: !1371, line: 140, baseType: !1467, size: 8, offset: 128)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7835, file: !1371, line: 143, baseType: !7853, size: 32, offset: 160)
!7853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7854, size: 32)
!7854 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1473, line: 146, baseType: !7855)
!7855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 143, size: 64, elements: !7856)
!7856 = !{!7857, !7858}
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7855, file: !1473, line: 144, baseType: !61, size: 32)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7855, file: !1473, line: 145, baseType: !61, size: 32, offset: 32)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7835, file: !1371, line: 144, baseType: !762, size: 32, offset: 192)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7835, file: !1371, line: 145, baseType: !7861, size: 32, offset: 224)
!7861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7862, size: 32)
!7862 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1473, line: 152, baseType: !7863)
!7863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 149, size: 64, elements: !7864)
!7864 = !{!7865, !7866}
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7863, file: !1473, line: 150, baseType: !61, size: 32)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7863, file: !1473, line: 151, baseType: !61, size: 32, offset: 32)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7835, file: !1371, line: 146, baseType: !762, size: 32, offset: 256)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7835, file: !1371, line: 147, baseType: !61, size: 32, offset: 288)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7835, file: !1371, line: 148, baseType: !762, size: 32, offset: 320)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7835, file: !1371, line: 151, baseType: !7871, size: 1024, offset: 352)
!7871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7872, size: 1024, elements: !1496)
!7872 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1473, line: 170, baseType: !7873)
!7873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 167, size: 64, elements: !7874)
!7874 = !{!7875, !7876}
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7873, file: !1473, line: 168, baseType: !61, size: 32)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7873, file: !1473, line: 169, baseType: !61, size: 32, offset: 32)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7835, file: !1371, line: 155, baseType: !1498, size: 32, offset: 1376)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7835, file: !1371, line: 156, baseType: !7879, size: 32, offset: 1408)
!7879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7880, size: 32)
!7880 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1371, line: 124, baseType: !7881)
!7881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1371, line: 90, size: 200, elements: !7882)
!7882 = !{!7883, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7891, !7892, !7893, !7894, !7895, !7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906, !7907}
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7881, file: !1371, line: 91, baseType: !460, size: 8)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7881, file: !1371, line: 92, baseType: !460, size: 8, offset: 8)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7881, file: !1371, line: 94, baseType: !460, size: 8, offset: 16)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7881, file: !1371, line: 95, baseType: !460, size: 8, offset: 24)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7881, file: !1371, line: 96, baseType: !460, size: 8, offset: 32)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7881, file: !1371, line: 98, baseType: !460, size: 8, offset: 40)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7881, file: !1371, line: 99, baseType: !460, size: 8, offset: 48)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7881, file: !1371, line: 100, baseType: !460, size: 8, offset: 56)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7881, file: !1371, line: 101, baseType: !460, size: 8, offset: 64)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7881, file: !1371, line: 103, baseType: !460, size: 8, offset: 72)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7881, file: !1371, line: 104, baseType: !460, size: 8, offset: 80)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7881, file: !1371, line: 106, baseType: !460, size: 8, offset: 88)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7881, file: !1371, line: 107, baseType: !460, size: 8, offset: 96)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7881, file: !1371, line: 108, baseType: !460, size: 8, offset: 104)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7881, file: !1371, line: 109, baseType: !460, size: 8, offset: 112)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7881, file: !1371, line: 110, baseType: !460, size: 8, offset: 120)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7881, file: !1371, line: 111, baseType: !460, size: 8, offset: 128)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7881, file: !1371, line: 112, baseType: !460, size: 8, offset: 136)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7881, file: !1371, line: 114, baseType: !460, size: 8, offset: 144)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7881, file: !1371, line: 115, baseType: !460, size: 8, offset: 152)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7881, file: !1371, line: 118, baseType: !460, size: 8, offset: 160)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7881, file: !1371, line: 119, baseType: !460, size: 8, offset: 168)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7881, file: !1371, line: 120, baseType: !460, size: 8, offset: 176)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7881, file: !1371, line: 121, baseType: !460, size: 8, offset: 184)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7881, file: !1371, line: 122, baseType: !460, size: 8, offset: 192)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7835, file: !1371, line: 157, baseType: !61, size: 32, offset: 1440)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7835, file: !1371, line: 158, baseType: !1029, size: 16, offset: 1472)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7835, file: !1371, line: 159, baseType: !1029, size: 16, offset: 1488)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7835, file: !1371, line: 163, baseType: !1029, size: 16, offset: 1504)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7835, file: !1371, line: 164, baseType: !1029, size: 16, offset: 1520)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7835, file: !1371, line: 167, baseType: !460, size: 8, offset: 1536)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7835, file: !1371, line: 168, baseType: !1537, size: 24, offset: 1544)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7835, file: !1371, line: 169, baseType: !460, size: 8, offset: 1568)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7835, file: !1371, line: 170, baseType: !460, size: 8, offset: 1576)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7835, file: !1371, line: 173, baseType: !1029, size: 16, offset: 1584)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7835, file: !1371, line: 174, baseType: !61, size: 32, offset: 1600)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7835, file: !1371, line: 175, baseType: !61, size: 32, offset: 1632)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7835, file: !1371, line: 178, baseType: !91, size: 8, offset: 1664)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7835, file: !1371, line: 179, baseType: !91, size: 8, offset: 1672)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7835, file: !1371, line: 182, baseType: !1546, size: 32, offset: 1696)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7835, file: !1371, line: 186, baseType: !1546, size: 32, offset: 1728)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7835, file: !1371, line: 187, baseType: !1551, size: 32, offset: 1760)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7835, file: !1371, line: 188, baseType: !1551, size: 32, offset: 1792)
!7926 = !DILocalVariable(name: "i", scope: !7826, file: !1181, line: 74, type: !61)
!7927 = !DILocalVariable(name: "data_cnt", scope: !7826, file: !1181, line: 74, type: !61)
!7928 = !DILocalVariable(name: "p_data", scope: !7826, file: !1181, line: 75, type: !1218)
!7929 = !DILocation(line: 0, scope: !7826)
!7930 = !DILocation(line: 77, column: 16, scope: !7826)
!7931 = !DILocation(line: 79, column: 53, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !1181, line: 79, column: 5)
!7933 = distinct !DILexicalBlock(scope: !7826, file: !1181, line: 79, column: 5)
!7934 = !DILocation(line: 79, column: 5, scope: !7933)
!7935 = !DILocation(line: 79, column: 41, scope: !7933)
!7936 = !DILocation(line: 77, column: 47, scope: !7826)
!7937 = !DILocation(line: 80, column: 13, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !1181, line: 80, column: 13)
!7939 = distinct !DILexicalBlock(scope: !7932, file: !1181, line: 79, column: 80)
!7940 = !DILocation(line: 80, column: 21, scope: !7938)
!7941 = !DILocation(line: 80, column: 13, scope: !7939)
!7942 = !DILocation(line: 81, column: 13, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !1181, line: 81, column: 13)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !1181, line: 81, column: 13)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !1181, line: 81, column: 13)
!7946 = distinct !DILexicalBlock(scope: !7938, file: !1181, line: 80, column: 36)
!7947 = !DILocation(line: 79, column: 65, scope: !7932)
!7948 = !DILocation(line: 79, column: 70, scope: !7932)
!7949 = distinct !{!7949, !7934, !7950}
!7950 = !DILocation(line: 84, column: 5, scope: !7933)
!7951 = !DILocation(line: 85, column: 1, scope: !7826)
!7952 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1181, file: !1181, line: 93, type: !3735, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7953)
!7953 = !{!7954, !7955}
!7954 = !DILocalVariable(name: "num", arg: 1, scope: !7952, file: !1181, line: 93, type: !61)
!7955 = !DILocalVariable(name: "ret", scope: !7952, file: !1181, line: 95, type: !18)
!7956 = !DILocation(line: 0, scope: !7952)
!7957 = !DILocation(line: 100, column: 9, scope: !7952)
!7958 = !DILocation(line: 102, column: 5, scope: !7952)
!7959 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1181, file: !1181, line: 110, type: !7960, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7963)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !7962}
!7962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!7963 = !{!7964, !7965}
!7964 = !DILocalVariable(name: "CS", arg: 1, scope: !7959, file: !1181, line: 110, type: !7962)
!7965 = !DILocalVariable(name: "val", scope: !7959, file: !1181, line: 112, type: !61)
!7966 = !DILocation(line: 0, scope: !7959)
!7967 = !DILocation(line: 114, column: 5, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !1181, line: 114, column: 5)
!7969 = distinct !DILexicalBlock(scope: !7959, file: !1181, line: 114, column: 5)
!7970 = !DILocation(line: 116, column: 16, scope: !7959)
!7971 = !DILocation(line: 117, column: 9, scope: !7959)
!7972 = !DILocation(line: 122, column: 13, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !1181, line: 121, column: 27)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !1181, line: 121, column: 16)
!7975 = distinct !DILexicalBlock(scope: !7959, file: !1181, line: 117, column: 9)
!7976 = !DILocation(line: 127, column: 9, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !1181, line: 127, column: 9)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !1181, line: 127, column: 9)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !1181, line: 127, column: 9)
!7980 = distinct !DILexicalBlock(scope: !7974, file: !1181, line: 125, column: 12)
!7981 = !DILocation(line: 0, scope: !7975)
!7982 = !DILocation(line: 134, column: 5, scope: !7959)
!7983 = !DILocation(line: 134, column: 19, scope: !7959)
!7984 = !DILocation(line: 134, column: 35, scope: !7959)
!7985 = !DILocation(line: 134, column: 12, scope: !7959)
!7986 = distinct !{!7986, !7982, !7987}
!7987 = !DILocation(line: 134, column: 57, scope: !7959)
!7988 = !DILocation(line: 135, column: 19, scope: !7959)
!7989 = !DILocation(line: 135, column: 34, scope: !7959)
!7990 = !DILocation(line: 135, column: 12, scope: !7959)
!7991 = !DILocation(line: 135, column: 5, scope: !7959)
!7992 = distinct !{!7992, !7991, !7993}
!7993 = !DILocation(line: 135, column: 50, scope: !7959)
!7994 = !DILocation(line: 130, column: 9, scope: !7959)
!7995 = !DILocation(line: 138, column: 24, scope: !7959)
!7996 = !DILocation(line: 139, column: 1, scope: !7959)
!7997 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1181, file: !1181, line: 148, type: !7960, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7998)
!7998 = !{!7999, !8000}
!7999 = !DILocalVariable(name: "CS", arg: 1, scope: !7997, file: !1181, line: 148, type: !7962)
!8000 = !DILocalVariable(name: "val", scope: !7997, file: !1181, line: 150, type: !61)
!8001 = !DILocation(line: 0, scope: !7997)
!8002 = !DILocation(line: 153, column: 16, scope: !7997)
!8003 = !DILocation(line: 154, column: 9, scope: !7997)
!8004 = !DILocation(line: 155, column: 24, scope: !7997)
!8005 = !DILocation(line: 158, column: 5, scope: !7997)
!8006 = !DILocation(line: 158, column: 18, scope: !7997)
!8007 = !DILocation(line: 158, column: 32, scope: !7997)
!8008 = distinct !{!8008, !8005, !8009}
!8009 = !DILocation(line: 158, column: 49, scope: !7997)
!8010 = !DILocation(line: 163, column: 16, scope: !7997)
!8011 = !DILocation(line: 164, column: 9, scope: !7997)
!8012 = !DILocation(line: 165, column: 24, scope: !7997)
!8013 = !DILocation(line: 168, column: 5, scope: !7997)
!8014 = !DILocation(line: 168, column: 18, scope: !7997)
!8015 = !DILocation(line: 168, column: 32, scope: !7997)
!8016 = distinct !{!8016, !8013, !8017}
!8017 = !DILocation(line: 168, column: 46, scope: !7997)
!8018 = !DILocation(line: 174, column: 10, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7997, file: !1181, line: 174, column: 9)
!8020 = !DILocation(line: 174, column: 25, scope: !8019)
!8021 = !DILocation(line: 174, column: 9, scope: !7997)
!8022 = !DILocation(line: 175, column: 9, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !1181, line: 175, column: 9)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !1181, line: 175, column: 9)
!8025 = distinct !DILexicalBlock(scope: !8019, file: !1181, line: 174, column: 36)
!8026 = !DILocation(line: 176, column: 5, scope: !8025)
!8027 = !DILocation(line: 179, column: 1, scope: !7997)
!8028 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1181, file: !1181, line: 186, type: !8029, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8031)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{!61, !7962}
!8031 = !{!8032, !8033, !8034}
!8032 = !DILocalVariable(name: "CS", arg: 1, scope: !8028, file: !1181, line: 186, type: !7962)
!8033 = !DILocalVariable(name: "val", scope: !8028, file: !1181, line: 188, type: !61)
!8034 = !DILocalVariable(name: "misc_ctl", scope: !8028, file: !1181, line: 189, type: !61)
!8035 = !DILocation(line: 0, scope: !8028)
!8036 = !DILocation(line: 204, column: 16, scope: !8028)
!8037 = !DILocation(line: 208, column: 12, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8028, file: !1181, line: 208, column: 9)
!8039 = !DILocation(line: 208, column: 9, scope: !8028)
!8040 = !DILocation(line: 212, column: 20, scope: !8028)
!8041 = !DILocation(line: 215, column: 1, scope: !8028)
!8042 = !DILocation(line: 215, column: 15, scope: !8028)
!8043 = !DILocation(line: 215, column: 29, scope: !8028)
!8044 = !DILocation(line: 215, column: 8, scope: !8028)
!8045 = distinct !{!8045, !8041, !8046}
!8046 = !DILocation(line: 215, column: 46, scope: !8028)
!8047 = !DILocation(line: 216, column: 22, scope: !8028)
!8048 = !DILocation(line: 216, column: 36, scope: !8028)
!8049 = !DILocation(line: 216, column: 9, scope: !8028)
!8050 = distinct !{!8050, !8049, !8051}
!8051 = !DILocation(line: 216, column: 47, scope: !8028)
!8052 = !DILocation(line: 218, column: 13, scope: !8028)
!8053 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1181, file: !1181, line: 227, type: !7960, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8054)
!8054 = !{!8055}
!8055 = !DILocalVariable(name: "CS", arg: 1, scope: !8053, file: !1181, line: 227, type: !7962)
!8056 = !DILocation(line: 0, scope: !8053)
!8057 = !DILocation(line: 235, column: 5, scope: !8053)
!8058 = !DILocation(line: 236, column: 5, scope: !8053)
!8059 = !DILocation(line: 238, column: 1, scope: !8053)
!8060 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1181, file: !1181, line: 249, type: !8061, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8063)
!8061 = !DISubroutineType(types: !8062)
!8062 = !{null, !7962, !772}
!8063 = !{!8064, !8065, !8066, !8067, !8068}
!8064 = !DILocalVariable(name: "CS", arg: 1, scope: !8060, file: !1181, line: 249, type: !7962)
!8065 = !DILocalVariable(name: "cmd", arg: 2, scope: !8060, file: !1181, line: 249, type: !772)
!8066 = !DILocalVariable(name: "cmdi", scope: !8060, file: !1181, line: 251, type: !61)
!8067 = !DILocalVariable(name: "cmdo", scope: !8060, file: !1181, line: 251, type: !61)
!8068 = !DILocalVariable(name: "len", scope: !8060, file: !1181, line: 252, type: !460)
!8069 = !DILocation(line: 0, scope: !8060)
!8070 = !DILocation(line: 254, column: 46, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !1181, line: 254, column: 5)
!8072 = distinct !DILexicalBlock(scope: !8060, file: !1181, line: 254, column: 5)
!8073 = !DILocation(line: 254, column: 5, scope: !8072)
!8074 = !DILocation(line: 255, column: 22, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8071, file: !1181, line: 254, column: 103)
!8076 = !DILocation(line: 255, column: 59, scope: !8075)
!8077 = !DILocation(line: 255, column: 51, scope: !8075)
!8078 = !DILocation(line: 254, column: 65, scope: !8071)
!8079 = !DILocation(line: 254, column: 97, scope: !8071)
!8080 = distinct !{!8080, !8073, !8081}
!8081 = !DILocation(line: 256, column: 5, scope: !8072)
!8082 = !DILocation(line: 258, column: 9, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8060, file: !1181, line: 258, column: 9)
!8084 = !DILocation(line: 262, column: 5, scope: !8060)
!8085 = !DILocation(line: 263, column: 33, scope: !8060)
!8086 = !DILocation(line: 264, column: 25, scope: !8060)
!8087 = !DILocation(line: 265, column: 24, scope: !8060)
!8088 = !DILocation(line: 266, column: 5, scope: !8060)
!8089 = !DILocation(line: 268, column: 5, scope: !8060)
!8090 = !DILocation(line: 269, column: 1, scope: !8060)
!8091 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1181, file: !1181, line: 281, type: !8092, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8094)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{null, !7962, !2382, !772, !772}
!8094 = !{!8095, !8096, !8097, !8098, !8099, !8100}
!8095 = !DILocalVariable(name: "CS", arg: 1, scope: !8091, file: !1181, line: 281, type: !7962)
!8096 = !DILocalVariable(name: "cmd", arg: 2, scope: !8091, file: !1181, line: 281, type: !2382)
!8097 = !DILocalVariable(name: "address", arg: 3, scope: !8091, file: !1181, line: 281, type: !772)
!8098 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !8091, file: !1181, line: 281, type: !772)
!8099 = !DILocalVariable(name: "cmd1", scope: !8091, file: !1181, line: 283, type: !61)
!8100 = !DILocalVariable(name: "cmd2", scope: !8091, file: !1181, line: 283, type: !61)
!8101 = !DILocation(line: 0, scope: !8091)
!8102 = !DILocation(line: 285, column: 12, scope: !8091)
!8103 = !DILocation(line: 287, column: 23, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8091, file: !1181, line: 287, column: 9)
!8105 = !DILocation(line: 287, column: 9, scope: !8091)
!8106 = !DILocation(line: 288, column: 22, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8104, file: !1181, line: 287, column: 31)
!8108 = !DILocation(line: 288, column: 55, scope: !8107)
!8109 = !DILocation(line: 288, column: 53, scope: !8107)
!8110 = !DILocation(line: 289, column: 5, scope: !8107)
!8111 = !DILocation(line: 290, column: 22, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8104, file: !1181, line: 289, column: 12)
!8113 = !DILocation(line: 290, column: 53, scope: !8112)
!8114 = !DILocation(line: 290, column: 51, scope: !8112)
!8115 = !DILocation(line: 291, column: 21, scope: !8112)
!8116 = !DILocation(line: 0, scope: !8104)
!8117 = !DILocation(line: 294, column: 33, scope: !8091)
!8118 = !DILocation(line: 295, column: 38, scope: !8091)
!8119 = !DILocation(line: 296, column: 41, scope: !8091)
!8120 = !DILocation(line: 296, column: 25, scope: !8091)
!8121 = !DILocation(line: 297, column: 24, scope: !8091)
!8122 = !DILocation(line: 299, column: 5, scope: !8091)
!8123 = !DILocation(line: 300, column: 5, scope: !8091)
!8124 = !DILocation(line: 302, column: 1, scope: !8091)
!8125 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1181, file: !1181, line: 312, type: !8126, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8128)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{!61, !772, !772}
!8128 = !{!8129, !8130}
!8129 = !DILocalVariable(name: "cmd", arg: 1, scope: !8125, file: !1181, line: 312, type: !772)
!8130 = !DILocalVariable(name: "address", arg: 2, scope: !8125, file: !1181, line: 312, type: !772)
!8131 = !DILocation(line: 0, scope: !8125)
!8132 = !DILocation(line: 314, column: 14, scope: !8125)
!8133 = !DILocation(line: 314, column: 44, scope: !8125)
!8134 = !DILocation(line: 314, column: 82, scope: !8125)
!8135 = !DILocation(line: 314, column: 75, scope: !8125)
!8136 = !DILocation(line: 314, column: 5, scope: !8125)
!8137 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1181, file: !1181, line: 332, type: !8138, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8141)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{!61, !772, !772, !8140, !1218}
!8140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!8141 = !{!8142, !8143, !8144, !8145, !8146, !8154, !8155, !8156}
!8142 = !DILocalVariable(name: "cmd", arg: 1, scope: !8137, file: !1181, line: 332, type: !772)
!8143 = !DILocalVariable(name: "address", arg: 2, scope: !8137, file: !1181, line: 332, type: !772)
!8144 = !DILocalVariable(name: "p_data", arg: 3, scope: !8137, file: !1181, line: 332, type: !8140)
!8145 = !DILocalVariable(name: "length", arg: 4, scope: !8137, file: !1181, line: 332, type: !1218)
!8146 = !DILocalVariable(name: "tmp", scope: !8137, file: !1181, line: 334, type: !8147)
!8147 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1371, line: 202, baseType: !8148)
!8148 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1371, line: 198, size: 32, elements: !8149)
!8149 = !{!8150, !8151, !8153}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !8148, file: !1371, line: 199, baseType: !61, size: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !8148, file: !1371, line: 200, baseType: !8152, size: 32)
!8152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 32, elements: !465)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !8148, file: !1371, line: 201, baseType: !459, size: 32)
!8154 = !DILocalVariable(name: "cmd1", scope: !8137, file: !1181, line: 335, type: !61)
!8155 = !DILocalVariable(name: "cmd2", scope: !8137, file: !1181, line: 335, type: !61)
!8156 = !DILocalVariable(name: "i", scope: !8137, file: !1181, line: 336, type: !61)
!8157 = !DILocation(line: 0, scope: !8137)
!8158 = !DILocation(line: 334, column: 5, scope: !8137)
!8159 = !DILocation(line: 334, column: 16, scope: !8137)
!8160 = !DILocation(line: 338, column: 12, scope: !8137)
!8161 = !DILocation(line: 340, column: 17, scope: !8137)
!8162 = !DILocation(line: 342, column: 17, scope: !8137)
!8163 = !DILocation(line: 342, column: 9, scope: !8137)
!8164 = !DILocation(line: 342, column: 15, scope: !8137)
!8165 = !DILocation(line: 344, column: 22, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !1181, line: 343, column: 29)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !1181, line: 343, column: 5)
!8168 = distinct !DILexicalBlock(scope: !8137, file: !1181, line: 343, column: 5)
!8169 = !DILocation(line: 343, column: 5, scope: !8168)
!8170 = !DILocation(line: 344, column: 21, scope: !8166)
!8171 = !DILocation(line: 344, column: 9, scope: !8166)
!8172 = !DILocation(line: 344, column: 19, scope: !8166)
!8173 = !DILocation(line: 345, column: 18, scope: !8166)
!8174 = !DILocation(line: 343, column: 25, scope: !8167)
!8175 = !DILocation(line: 343, column: 19, scope: !8167)
!8176 = distinct !{!8176, !8169, !8177}
!8177 = !DILocation(line: 346, column: 5, scope: !8168)
!8178 = !DILocation(line: 347, column: 16, scope: !8137)
!8179 = !DILocation(line: 348, column: 16, scope: !8137)
!8180 = !DILocation(line: 348, column: 15, scope: !8137)
!8181 = !DILocation(line: 339, column: 17, scope: !8137)
!8182 = !DILocation(line: 339, column: 52, scope: !8137)
!8183 = !DILocation(line: 339, column: 45, scope: !8137)
!8184 = !DILocation(line: 348, column: 13, scope: !8137)
!8185 = !DILocation(line: 349, column: 38, scope: !8137)
!8186 = !DILocation(line: 351, column: 1, scope: !8137)
!8187 = !DILocation(line: 350, column: 5, scope: !8137)
!8188 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1181, file: !1181, line: 367, type: !8189, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8191)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{null, !61, !88, !1156}
!8191 = !{!8192, !8193, !8194, !8195, !8196, !8197}
!8192 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !8188, file: !1181, line: 367, type: !61)
!8193 = !DILocalVariable(name: "buff", arg: 2, scope: !8188, file: !1181, line: 367, type: !88)
!8194 = !DILocalVariable(name: "length", arg: 3, scope: !8188, file: !1181, line: 367, type: !1156)
!8195 = !DILocalVariable(name: "i", scope: !8188, file: !1181, line: 369, type: !61)
!8196 = !DILocalVariable(name: "p_data", scope: !8188, file: !1181, line: 370, type: !762)
!8197 = !DILocalVariable(name: "tmp", scope: !8188, file: !1181, line: 371, type: !8147)
!8198 = !DILocation(line: 0, scope: !8188)
!8199 = !DILocation(line: 371, column: 5, scope: !8188)
!8200 = !DILocation(line: 371, column: 13, scope: !8188)
!8201 = !DILocation(line: 373, column: 18, scope: !8188)
!8202 = !DILocation(line: 376, column: 15, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8188, file: !1181, line: 376, column: 9)
!8204 = !DILocation(line: 376, column: 30, scope: !8203)
!8205 = !DILocation(line: 376, column: 11, scope: !8203)
!8206 = !DILocation(line: 376, column: 9, scope: !8188)
!8207 = !DILocation(line: 377, column: 23, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !1181, line: 377, column: 9)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !1181, line: 377, column: 9)
!8210 = distinct !DILexicalBlock(scope: !8203, file: !1181, line: 376, column: 41)
!8211 = !DILocation(line: 377, column: 9, scope: !8209)
!8212 = !DILocation(line: 378, column: 13, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8208, file: !1181, line: 377, column: 80)
!8214 = !DILocation(line: 377, column: 41, scope: !8208)
!8215 = !DILocation(line: 377, column: 54, scope: !8208)
!8216 = !DILocation(line: 377, column: 67, scope: !8208)
!8217 = distinct !{!8217, !8211, !8218}
!8218 = !DILocation(line: 379, column: 9, scope: !8209)
!8219 = !DILocation(line: 382, column: 37, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8203, file: !1181, line: 382, column: 14)
!8221 = !DILocation(line: 382, column: 16, scope: !8220)
!8222 = !DILocation(line: 0, scope: !8220)
!8223 = !DILocation(line: 382, column: 14, scope: !8203)
!8224 = !DILocation(line: 391, column: 9, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !1181, line: 391, column: 9)
!8226 = distinct !DILexicalBlock(scope: !8220, file: !1181, line: 390, column: 13)
!8227 = !DILocation(line: 383, column: 9, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8229, file: !1181, line: 383, column: 9)
!8229 = distinct !DILexicalBlock(scope: !8220, file: !1181, line: 382, column: 49)
!8230 = !DILocation(line: 384, column: 26, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !1181, line: 383, column: 80)
!8232 = distinct !DILexicalBlock(scope: !8228, file: !1181, line: 383, column: 9)
!8233 = !DILocation(line: 384, column: 24, scope: !8231)
!8234 = !DILocation(line: 385, column: 47, scope: !8231)
!8235 = !DILocation(line: 385, column: 26, scope: !8231)
!8236 = !DILocation(line: 385, column: 24, scope: !8231)
!8237 = !DILocation(line: 386, column: 13, scope: !8231)
!8238 = !DILocation(line: 383, column: 41, scope: !8232)
!8239 = !DILocation(line: 383, column: 54, scope: !8232)
!8240 = !DILocation(line: 383, column: 67, scope: !8232)
!8241 = !DILocation(line: 383, column: 23, scope: !8232)
!8242 = distinct !{!8242, !8227, !8243}
!8243 = !DILocation(line: 387, column: 9, scope: !8228)
!8244 = !DILocation(line: 392, column: 13, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8246, file: !1181, line: 392, column: 13)
!8246 = distinct !DILexicalBlock(scope: !8247, file: !1181, line: 391, column: 61)
!8247 = distinct !DILexicalBlock(scope: !8225, file: !1181, line: 391, column: 9)
!8248 = !DILocation(line: 393, column: 36, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !1181, line: 392, column: 51)
!8250 = distinct !DILexicalBlock(scope: !8245, file: !1181, line: 392, column: 13)
!8251 = !DILocation(line: 393, column: 29, scope: !8249)
!8252 = !DILocation(line: 393, column: 17, scope: !8249)
!8253 = !DILocation(line: 393, column: 27, scope: !8249)
!8254 = !DILocation(line: 392, column: 47, scope: !8250)
!8255 = !DILocation(line: 392, column: 27, scope: !8250)
!8256 = !DILocation(line: 392, column: 31, scope: !8250)
!8257 = distinct !{!8257, !8244, !8258}
!8258 = !DILocation(line: 394, column: 13, scope: !8245)
!8259 = !DILocation(line: 395, column: 13, scope: !8246)
!8260 = !DILocation(line: 391, column: 41, scope: !8247)
!8261 = !DILocation(line: 391, column: 54, scope: !8247)
!8262 = !DILocation(line: 391, column: 23, scope: !8247)
!8263 = distinct !{!8263, !8224, !8264}
!8264 = !DILocation(line: 396, column: 9, scope: !8225)
!8265 = !DILocation(line: 398, column: 1, scope: !8188)
!8266 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1181, file: !1181, line: 414, type: !8267, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8269)
!8267 = !DISubroutineType(types: !8268)
!8268 = !{null, !7962, !5117, !762, !7962, !7962}
!8269 = !{!8270, !8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278, !8279}
!8270 = !DILocalVariable(name: "CS", arg: 1, scope: !8266, file: !1181, line: 414, type: !7962)
!8271 = !DILocalVariable(name: "cmd", arg: 2, scope: !8266, file: !1181, line: 414, type: !5117)
!8272 = !DILocalVariable(name: "data", arg: 3, scope: !8266, file: !1181, line: 414, type: !762)
!8273 = !DILocalVariable(name: "outl", arg: 4, scope: !8266, file: !1181, line: 414, type: !7962)
!8274 = !DILocalVariable(name: "inl", arg: 5, scope: !8266, file: !1181, line: 414, type: !7962)
!8275 = !DILocalVariable(name: "tmp", scope: !8266, file: !1181, line: 416, type: !61)
!8276 = !DILocalVariable(name: "i", scope: !8266, file: !1181, line: 417, type: !61)
!8277 = !DILocalVariable(name: "j", scope: !8266, file: !1181, line: 417, type: !61)
!8278 = !DILocalVariable(name: "p_data", scope: !8266, file: !1181, line: 418, type: !762)
!8279 = !DILocalVariable(name: "p_tmp", scope: !8266, file: !1181, line: 418, type: !762)
!8280 = !DILocation(line: 0, scope: !8266)
!8281 = !DILocation(line: 416, column: 5, scope: !8266)
!8282 = !DILocation(line: 422, column: 60, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !1181, line: 422, column: 5)
!8284 = distinct !DILexicalBlock(scope: !8266, file: !1181, line: 422, column: 5)
!8285 = !DILocation(line: 422, column: 5, scope: !8284)
!8286 = !DILocation(line: 423, column: 25, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !1181, line: 423, column: 9)
!8288 = distinct !DILexicalBlock(scope: !8283, file: !1181, line: 422, column: 83)
!8289 = !DILocation(line: 423, column: 32, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8287, file: !1181, line: 423, column: 9)
!8291 = !DILocation(line: 423, column: 9, scope: !8287)
!8292 = !DILocation(line: 424, column: 24, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8290, file: !1181, line: 423, column: 59)
!8294 = !DILocation(line: 424, column: 13, scope: !8293)
!8295 = !DILocation(line: 424, column: 22, scope: !8293)
!8296 = !DILocation(line: 423, column: 50, scope: !8290)
!8297 = !DILocation(line: 423, column: 55, scope: !8290)
!8298 = !DILocation(line: 423, column: 39, scope: !8290)
!8299 = distinct !{!8299, !8291, !8300}
!8300 = !DILocation(line: 425, column: 9, scope: !8287)
!8301 = !DILocation(line: 426, column: 9, scope: !8288)
!8302 = !DILocation(line: 0, scope: !8284)
!8303 = !DILocation(line: 422, column: 75, scope: !8283)
!8304 = distinct !{!8304, !8285, !8305}
!8305 = !DILocation(line: 427, column: 5, scope: !8284)
!8306 = !DILocation(line: 428, column: 25, scope: !8266)
!8307 = !DILocation(line: 429, column: 26, scope: !8266)
!8308 = !DILocation(line: 429, column: 24, scope: !8266)
!8309 = !DILocation(line: 430, column: 5, scope: !8266)
!8310 = !DILocation(line: 431, column: 5, scope: !8266)
!8311 = !DILocation(line: 433, column: 67, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !1181, line: 433, column: 5)
!8313 = distinct !DILexicalBlock(scope: !8266, file: !1181, line: 433, column: 5)
!8314 = !DILocation(line: 433, column: 5, scope: !8313)
!8315 = !DILocation(line: 433, column: 56, scope: !8313)
!8316 = !DILocation(line: 434, column: 17, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8312, file: !1181, line: 433, column: 100)
!8318 = !DILocation(line: 434, column: 15, scope: !8317)
!8319 = !DILocation(line: 433, column: 74, scope: !8312)
!8320 = !DILocation(line: 433, column: 79, scope: !8312)
!8321 = !DILocation(line: 433, column: 87, scope: !8312)
!8322 = distinct !{!8322, !8314, !8323}
!8323 = !DILocation(line: 435, column: 5, scope: !8313)
!8324 = !DILocation(line: 437, column: 1, scope: !8266)
!8325 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1181, file: !1181, line: 462, type: !8326, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8328)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{null, !7962, !5117}
!8328 = !{!8329, !8330, !8331, !8332, !8333}
!8329 = !DILocalVariable(name: "CS", arg: 1, scope: !8325, file: !1181, line: 462, type: !7962)
!8330 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !8325, file: !1181, line: 462, type: !5117)
!8331 = !DILocalVariable(name: "i", scope: !8325, file: !1181, line: 464, type: !61)
!8332 = !DILocalVariable(name: "val", scope: !8325, file: !1181, line: 465, type: !61)
!8333 = !DILocalVariable(name: "status", scope: !8334, file: !1181, line: 492, type: !460)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !1181, line: 491, column: 47)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !1181, line: 491, column: 13)
!8336 = distinct !DILexicalBlock(scope: !8325, file: !1181, line: 477, column: 17)
!8337 = !DILocation(line: 0, scope: !8325)
!8338 = !DILocation(line: 467, column: 17, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8325, file: !1181, line: 467, column: 9)
!8340 = !DILocation(line: 467, column: 9, scope: !8325)
!8341 = !DILocation(line: 474, column: 11, scope: !8325)
!8342 = !DILocation(line: 477, column: 5, scope: !8325)
!8343 = !DILocation(line: 478, column: 17, scope: !8336)
!8344 = !DILocation(line: 478, column: 9, scope: !8336)
!8345 = !DILocation(line: 481, column: 17, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !1181, line: 481, column: 17)
!8347 = distinct !DILexicalBlock(scope: !8336, file: !1181, line: 478, column: 29)
!8348 = !DILocation(line: 481, column: 17, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !1181, line: 481, column: 17)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !1181, line: 481, column: 17)
!8351 = distinct !DILexicalBlock(scope: !8346, file: !1181, line: 481, column: 17)
!8352 = !DILocation(line: 481, column: 17, scope: !8350)
!8353 = !DILocation(line: 481, column: 17, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !1181, line: 481, column: 17)
!8355 = distinct !DILexicalBlock(scope: !8351, file: !1181, line: 481, column: 17)
!8356 = !DILocation(line: 484, column: 17, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8347, file: !1181, line: 484, column: 17)
!8358 = !DILocation(line: 484, column: 17, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !1181, line: 484, column: 17)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !1181, line: 484, column: 17)
!8361 = distinct !DILexicalBlock(scope: !8357, file: !1181, line: 484, column: 17)
!8362 = !DILocation(line: 484, column: 17, scope: !8360)
!8363 = !DILocation(line: 484, column: 17, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !1181, line: 484, column: 17)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !1181, line: 484, column: 17)
!8366 = !DILocation(line: 0, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !1181, line: 487, column: 17)
!8368 = distinct !DILexicalBlock(scope: !8347, file: !1181, line: 487, column: 17)
!8369 = !DILocation(line: 487, column: 17, scope: !8368)
!8370 = !DILocation(line: 487, column: 17, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !1181, line: 487, column: 17)
!8372 = distinct !DILexicalBlock(scope: !8367, file: !1181, line: 487, column: 17)
!8373 = !DILocation(line: 487, column: 17, scope: !8372)
!8374 = !DILocation(line: 487, column: 17, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !1181, line: 487, column: 17)
!8376 = distinct !DILexicalBlock(scope: !8367, file: !1181, line: 487, column: 17)
!8377 = !DILocation(line: 487, column: 17, scope: !8376)
!8378 = !DILocation(line: 491, column: 23, scope: !8335)
!8379 = !DILocation(line: 491, column: 13, scope: !8335)
!8380 = !DILocation(line: 491, column: 28, scope: !8335)
!8381 = !DILocation(line: 491, column: 13, scope: !8336)
!8382 = !DILocation(line: 492, column: 13, scope: !8334)
!8383 = !DILocation(line: 494, column: 13, scope: !8334)
!8384 = !DILocation(line: 0, scope: !8334)
!8385 = !DILocation(line: 495, column: 17, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8334, file: !1181, line: 494, column: 16)
!8387 = !DILocation(line: 496, column: 22, scope: !8334)
!8388 = !DILocation(line: 496, column: 31, scope: !8334)
!8389 = !DILocation(line: 496, column: 29, scope: !8334)
!8390 = !DILocation(line: 496, column: 13, scope: !8386)
!8391 = distinct !{!8391, !8383, !8392}
!8392 = !DILocation(line: 496, column: 45, scope: !8334)
!8393 = !DILocation(line: 497, column: 9, scope: !8335)
!8394 = !DILocation(line: 503, column: 25, scope: !8336)
!8395 = !DILocation(line: 497, column: 9, scope: !8334)
!8396 = !DILocation(line: 500, column: 70, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8335, file: !1181, line: 499, column: 14)
!8398 = !DILocation(line: 500, column: 60, scope: !8397)
!8399 = !DILocation(line: 500, column: 13, scope: !8397)
!8400 = !DILocation(line: 503, column: 15, scope: !8336)
!8401 = !DILocation(line: 503, column: 11, scope: !8336)
!8402 = distinct !{!8402, !8342, !8403}
!8403 = !DILocation(line: 504, column: 5, scope: !8325)
!8404 = !DILocation(line: 505, column: 1, scope: !8325)
!8405 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1181, file: !1181, line: 514, type: !8406, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8408)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{null, !7962, !762, !460}
!8408 = !{!8409, !8410, !8411}
!8409 = !DILocalVariable(name: "CS", arg: 1, scope: !8405, file: !1181, line: 514, type: !7962)
!8410 = !DILocalVariable(name: "id", arg: 2, scope: !8405, file: !1181, line: 514, type: !762)
!8411 = !DILocalVariable(name: "cmd", arg: 3, scope: !8405, file: !1181, line: 514, type: !460)
!8412 = !DILocation(line: 0, scope: !8405)
!8413 = !DILocation(line: 517, column: 5, scope: !8405)
!8414 = !DILocation(line: 518, column: 1, scope: !8405)
!8415 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1181, file: !1181, line: 521, type: !8416, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8418)
!8416 = !DISubroutineType(types: !8417)
!8417 = !{null, !7962, !762}
!8418 = !{!8419, !8420}
!8419 = !DILocalVariable(name: "CS", arg: 1, scope: !8415, file: !1181, line: 521, type: !7962)
!8420 = !DILocalVariable(name: "id", arg: 2, scope: !8415, file: !1181, line: 521, type: !762)
!8421 = !DILocation(line: 0, scope: !8415)
!8422 = !DILocation(line: 523, column: 5, scope: !8415)
!8423 = !DILocation(line: 524, column: 1, scope: !8415)
!8424 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1181, file: !1181, line: 536, type: !8425, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !293)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{!8427}
!8427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1184, line: 57, baseType: !1183)
!8428 = !DILocation(line: 540, column: 5, scope: !8424)
!8429 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1181, file: !1181, line: 561, type: !8430, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !293)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{!8432}
!8432 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1184, line: 66, baseType: !1191)
!8433 = !DILocation(line: 564, column: 15, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !1181, line: 564, column: 9)
!8435 = !DILocation(line: 564, column: 31, scope: !8434)
!8436 = !DILocation(line: 564, column: 45, scope: !8434)
!8437 = !DILocation(line: 0, scope: !8434)
!8438 = !DILocation(line: 569, column: 1, scope: !8429)
!8439 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1181, file: !1181, line: 580, type: !8440, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8442)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!91, !762}
!8442 = !{!8443, !8444}
!8443 = !DILocalVariable(name: "buffer", arg: 1, scope: !8439, file: !1181, line: 580, type: !762)
!8444 = !DILocalVariable(name: "i", scope: !8439, file: !1181, line: 582, type: !7)
!8445 = !DILocation(line: 0, scope: !8439)
!8446 = !DILocation(line: 583, column: 5, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8439, file: !1181, line: 583, column: 5)
!8448 = !DILocation(line: 584, column: 9, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !1181, line: 583, column: 29)
!8450 = distinct !DILexicalBlock(scope: !8447, file: !1181, line: 583, column: 5)
!8451 = !DILocation(line: 584, column: 19, scope: !8449)
!8452 = !DILocation(line: 583, column: 25, scope: !8450)
!8453 = !DILocation(line: 583, column: 19, scope: !8450)
!8454 = distinct !{!8454, !8446, !8455}
!8455 = !DILocation(line: 585, column: 5, scope: !8447)
!8456 = !DILocation(line: 586, column: 5, scope: !8439)
!8457 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1181, file: !1181, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8458)
!8458 = !{!8459}
!8459 = !DILocalVariable(name: "D", scope: !8457, file: !1181, line: 615, type: !7833)
!8460 = !DILocation(line: 0, scope: !8457)
!8461 = !DILocation(line: 616, column: 32, scope: !8457)
!8462 = !DILocation(line: 616, column: 37, scope: !8457)
!8463 = !DILocation(line: 616, column: 27, scope: !8457)
!8464 = !DILocation(line: 617, column: 44, scope: !8457)
!8465 = !DILocation(line: 617, column: 31, scope: !8457)
!8466 = !DILocation(line: 617, column: 28, scope: !8457)
!8467 = !DILocation(line: 618, column: 32, scope: !8457)
!8468 = !DILocation(line: 618, column: 31, scope: !8457)
!8469 = !DILocation(line: 618, column: 29, scope: !8457)
!8470 = !DILocation(line: 621, column: 31, scope: !8457)
!8471 = !DILocation(line: 621, column: 24, scope: !8457)
!8472 = !DILocation(line: 622, column: 34, scope: !8457)
!8473 = !DILocation(line: 622, column: 27, scope: !8457)
!8474 = !DILocation(line: 623, column: 32, scope: !8457)
!8475 = !DILocation(line: 623, column: 25, scope: !8457)
!8476 = !DILocation(line: 624, column: 33, scope: !8457)
!8477 = !DILocation(line: 624, column: 26, scope: !8457)
!8478 = !DILocation(line: 625, column: 33, scope: !8457)
!8479 = !DILocation(line: 625, column: 26, scope: !8457)
!8480 = !DILocation(line: 629, column: 32, scope: !8457)
!8481 = !DILocation(line: 629, column: 47, scope: !8457)
!8482 = !DILocation(line: 629, column: 25, scope: !8457)
!8483 = !DILocation(line: 630, column: 32, scope: !8457)
!8484 = !DILocation(line: 630, column: 47, scope: !8457)
!8485 = !DILocation(line: 630, column: 25, scope: !8457)
!8486 = !DILocation(line: 633, column: 24, scope: !8457)
!8487 = !DILocation(line: 633, column: 31, scope: !8457)
!8488 = !DILocation(line: 633, column: 36, scope: !8457)
!8489 = !DILocation(line: 633, column: 28, scope: !8457)
!8490 = !DILocation(line: 633, column: 5, scope: !8457)
!8491 = !DILocation(line: 635, column: 5, scope: !8457)
!8492 = !DILocation(line: 636, column: 1, scope: !8457)
!8493 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1181, file: !1181, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !293)
!8494 = !DILocation(line: 644, column: 26, scope: !8493)
!8495 = !DILocation(line: 644, column: 24, scope: !8493)
!8496 = !DILocation(line: 645, column: 29, scope: !8493)
!8497 = !DILocation(line: 645, column: 27, scope: !8493)
!8498 = !DILocation(line: 646, column: 27, scope: !8493)
!8499 = !DILocation(line: 646, column: 25, scope: !8493)
!8500 = !DILocation(line: 647, column: 28, scope: !8493)
!8501 = !DILocation(line: 647, column: 26, scope: !8493)
!8502 = !DILocation(line: 648, column: 27, scope: !8493)
!8503 = !DILocation(line: 648, column: 25, scope: !8493)
!8504 = !DILocation(line: 652, column: 32, scope: !8493)
!8505 = !DILocation(line: 652, column: 47, scope: !8493)
!8506 = !DILocation(line: 652, column: 25, scope: !8493)
!8507 = !DILocation(line: 655, column: 24, scope: !8493)
!8508 = !DILocation(line: 655, column: 5, scope: !8493)
!8509 = !DILocation(line: 657, column: 5, scope: !8493)
!8510 = !DILocation(line: 660, column: 9, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8493, file: !1181, line: 660, column: 9)
!8512 = !DILocation(line: 660, column: 59, scope: !8511)
!8513 = !DILocation(line: 660, column: 38, scope: !8511)
!8514 = !DILocation(line: 660, column: 37, scope: !8511)
!8515 = !DILocation(line: 660, column: 33, scope: !8511)
!8516 = !DILocation(line: 660, column: 9, scope: !8493)
!8517 = !DILocation(line: 661, column: 9, scope: !8511)
!8518 = distinct !{!8518, !8517, !8519}
!8519 = !DILocation(line: 661, column: 18, scope: !8511)
!8520 = !DILocation(line: 662, column: 1, scope: !8493)
!8521 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1181, file: !1181, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !293)
!8522 = !DILocation(line: 671, column: 9, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8521, file: !1181, line: 671, column: 9)
!8524 = !DILocation(line: 671, column: 40, scope: !8523)
!8525 = !DILocation(line: 671, column: 9, scope: !8521)
!8526 = !DILocation(line: 672, column: 47, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8523, file: !1181, line: 671, column: 46)
!8528 = !DILocation(line: 672, column: 40, scope: !8527)
!8529 = !DILocation(line: 673, column: 5, scope: !8527)
!8530 = !DILocation(line: 674, column: 9, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8521, file: !1181, line: 674, column: 9)
!8532 = !DILocation(line: 674, column: 41, scope: !8531)
!8533 = !DILocation(line: 674, column: 9, scope: !8521)
!8534 = !DILocation(line: 675, column: 48, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !1181, line: 674, column: 47)
!8536 = !DILocation(line: 675, column: 41, scope: !8535)
!8537 = !DILocation(line: 676, column: 5, scope: !8535)
!8538 = !DILocation(line: 679, column: 33, scope: !8521)
!8539 = !DILocation(line: 679, column: 48, scope: !8521)
!8540 = !DILocation(line: 679, column: 25, scope: !8521)
!8541 = !DILocation(line: 680, column: 25, scope: !8521)
!8542 = !DILocation(line: 686, column: 5, scope: !8521)
!8543 = !DILocation(line: 688, column: 1, scope: !8521)
!8544 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1181, file: !1181, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !293)
!8545 = !DILocation(line: 692, column: 9, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8544, file: !1181, line: 692, column: 9)
!8547 = !DILocation(line: 692, column: 40, scope: !8546)
!8548 = !DILocation(line: 692, column: 9, scope: !8544)
!8549 = !DILocation(line: 693, column: 29, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8546, file: !1181, line: 692, column: 46)
!8551 = !DILocation(line: 694, column: 5, scope: !8550)
!8552 = !DILocation(line: 695, column: 9, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8544, file: !1181, line: 695, column: 9)
!8554 = !DILocation(line: 695, column: 41, scope: !8553)
!8555 = !DILocation(line: 695, column: 9, scope: !8544)
!8556 = !DILocation(line: 696, column: 29, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8553, file: !1181, line: 695, column: 47)
!8558 = !DILocation(line: 697, column: 5, scope: !8557)
!8559 = !DILocation(line: 698, column: 5, scope: !8544)
!8560 = !DILocation(line: 699, column: 1, scope: !8544)
!8561 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1277, file: !1277, line: 91, type: !3987, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8562)
!8562 = !{!8563}
!8563 = !DILocalVariable(name: "counter", scope: !8561, file: !1277, line: 102, type: !61)
!8564 = !DILocation(line: 0, scope: !8561)
!8565 = !DILocation(line: 110, column: 5, scope: !8561)
!8566 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1277, file: !1277, line: 114, type: !3987, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8567)
!8567 = !{!8568}
!8568 = !DILocalVariable(name: "counter", scope: !8566, file: !1277, line: 125, type: !61)
!8569 = !DILocation(line: 0, scope: !8566)
!8570 = !DILocation(line: 133, column: 5, scope: !8566)
!8571 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1277, file: !1277, line: 137, type: !7696, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8572)
!8572 = !{!8573}
!8573 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8571, file: !1277, line: 137, type: !61)
!8574 = !DILocation(line: 0, scope: !8571)
!8575 = !DILocation(line: 142, column: 5, scope: !8571)
!8576 = !DILocation(line: 144, column: 1, scope: !8571)
!8577 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1277, file: !1277, line: 163, type: !3987, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8578)
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "mask", scope: !8577, file: !1277, line: 165, type: !61)
!8580 = !DILocation(line: 166, column: 12, scope: !8577)
!8581 = !DILocation(line: 0, scope: !8577)
!8582 = !DILocation(line: 167, column: 5, scope: !8577)
!8583 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1277, file: !1277, line: 171, type: !7696, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8584)
!8584 = !{!8585}
!8585 = !DILocalVariable(name: "mask", arg: 1, scope: !8583, file: !1277, line: 171, type: !61)
!8586 = !DILocation(line: 0, scope: !8583)
!8587 = !DILocation(line: 173, column: 5, scope: !8583)
!8588 = !DILocation(line: 174, column: 1, scope: !8583)
!8589 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1277, file: !1277, line: 199, type: !1547, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8589, file: !1277, line: 199, type: !88)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 201, column: 5, scope: !8589)
!8594 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1277, file: !1277, line: 388, type: !8595, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !293)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{!1156}
!8597 = !DILocation(line: 390, column: 5, scope: !8594)
!8598 = distinct !DISubprogram(name: "CompareData", scope: !1277, file: !1277, line: 872, type: !8599, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8601)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{!91, !88, !88, !61}
!8601 = !{!8602, !8603, !8604, !8605, !8606, !8609, !8610, !8613, !8614, !8616}
!8602 = !DILocalVariable(name: "Address", arg: 1, scope: !8598, file: !1277, line: 872, type: !88)
!8603 = !DILocalVariable(name: "Data", arg: 2, scope: !8598, file: !1277, line: 872, type: !88)
!8604 = !DILocalVariable(name: "Length", arg: 3, scope: !8598, file: !1277, line: 872, type: !61)
!8605 = !DILocalVariable(name: "i", scope: !8598, file: !1277, line: 874, type: !61)
!8606 = !DILocalVariable(name: "Source", scope: !8607, file: !1277, line: 877, type: !1218)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !1277, line: 876, column: 74)
!8608 = distinct !DILexicalBlock(scope: !8598, file: !1277, line: 876, column: 9)
!8609 = !DILocalVariable(name: "Dest", scope: !8607, file: !1277, line: 878, type: !1218)
!8610 = !DILocalVariable(name: "Source", scope: !8611, file: !1277, line: 885, type: !1249)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !1277, line: 884, column: 79)
!8612 = distinct !DILexicalBlock(scope: !8608, file: !1277, line: 884, column: 16)
!8613 = !DILocalVariable(name: "Dest", scope: !8611, file: !1277, line: 886, type: !1249)
!8614 = !DILocalVariable(name: "Source", scope: !8615, file: !1277, line: 893, type: !762)
!8615 = distinct !DILexicalBlock(scope: !8612, file: !1277, line: 892, column: 12)
!8616 = !DILocalVariable(name: "Dest", scope: !8615, file: !1277, line: 894, type: !762)
!8617 = !DILocation(line: 0, scope: !8598)
!8618 = !DILocation(line: 876, column: 11, scope: !8608)
!8619 = !DILocation(line: 876, column: 42, scope: !8608)
!8620 = !DILocation(line: 877, column: 28, scope: !8607)
!8621 = !DILocation(line: 0, scope: !8607)
!8622 = !DILocation(line: 878, column: 26, scope: !8607)
!8623 = !DILocation(line: 879, column: 23, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !1277, line: 879, column: 9)
!8625 = distinct !DILexicalBlock(scope: !8607, file: !1277, line: 879, column: 9)
!8626 = !DILocation(line: 879, column: 9, scope: !8625)
!8627 = !DILocation(line: 880, column: 17, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !1277, line: 880, column: 17)
!8629 = distinct !DILexicalBlock(scope: !8624, file: !1277, line: 879, column: 68)
!8630 = !DILocation(line: 880, column: 30, scope: !8628)
!8631 = !DILocation(line: 880, column: 27, scope: !8628)
!8632 = !DILocation(line: 879, column: 64, scope: !8624)
!8633 = !DILocation(line: 880, column: 17, scope: !8629)
!8634 = distinct !{!8634, !8626, !8635}
!8635 = !DILocation(line: 883, column: 9, scope: !8625)
!8636 = !DILocation(line: 884, column: 47, scope: !8612)
!8637 = !DILocation(line: 895, column: 23, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !1277, line: 895, column: 9)
!8639 = distinct !DILexicalBlock(scope: !8615, file: !1277, line: 895, column: 9)
!8640 = !DILocation(line: 895, column: 9, scope: !8639)
!8641 = !DILocation(line: 885, column: 28, scope: !8611)
!8642 = !DILocation(line: 0, scope: !8611)
!8643 = !DILocation(line: 886, column: 26, scope: !8611)
!8644 = !DILocation(line: 887, column: 23, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !1277, line: 887, column: 9)
!8646 = distinct !DILexicalBlock(scope: !8611, file: !1277, line: 887, column: 9)
!8647 = !DILocation(line: 887, column: 9, scope: !8646)
!8648 = !DILocation(line: 888, column: 17, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8650, file: !1277, line: 888, column: 17)
!8650 = distinct !DILexicalBlock(scope: !8645, file: !1277, line: 887, column: 68)
!8651 = !DILocation(line: 888, column: 30, scope: !8649)
!8652 = !DILocation(line: 888, column: 27, scope: !8649)
!8653 = !DILocation(line: 887, column: 64, scope: !8645)
!8654 = !DILocation(line: 888, column: 17, scope: !8650)
!8655 = distinct !{!8655, !8647, !8656}
!8656 = !DILocation(line: 891, column: 9, scope: !8646)
!8657 = !DILocation(line: 896, column: 17, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !1277, line: 896, column: 17)
!8659 = distinct !DILexicalBlock(scope: !8638, file: !1277, line: 895, column: 38)
!8660 = !DILocation(line: 896, column: 30, scope: !8658)
!8661 = !DILocation(line: 896, column: 27, scope: !8658)
!8662 = !DILocation(line: 895, column: 34, scope: !8638)
!8663 = !DILocation(line: 896, column: 17, scope: !8659)
!8664 = distinct !{!8664, !8640, !8665}
!8665 = !DILocation(line: 899, column: 9, scope: !8639)
!8666 = !DILocation(line: 902, column: 1, scope: !8598)
!8667 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1277, file: !1277, line: 919, type: !8668, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8670)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{null, !88, !88, !61}
!8670 = !{!8671, !8672, !8673, !8674, !8675, !8676, !8677, !8678, !8679, !8680, !8681}
!8671 = !DILocalVariable(name: "Target", arg: 1, scope: !8667, file: !1277, line: 919, type: !88)
!8672 = !DILocalVariable(name: "Data", arg: 2, scope: !8667, file: !1277, line: 919, type: !88)
!8673 = !DILocalVariable(name: "Size", arg: 3, scope: !8667, file: !1277, line: 919, type: !61)
!8674 = !DILocalVariable(name: "D", scope: !8667, file: !1277, line: 921, type: !1447)
!8675 = !DILocalVariable(name: "address", scope: !8667, file: !1277, line: 922, type: !61)
!8676 = !DILocalVariable(name: "p_data", scope: !8667, file: !1277, line: 923, type: !762)
!8677 = !DILocalVariable(name: "cmd1", scope: !8667, file: !1277, line: 924, type: !61)
!8678 = !DILocalVariable(name: "length", scope: !8667, file: !1277, line: 924, type: !61)
!8679 = !DILocalVariable(name: "written", scope: !8667, file: !1277, line: 924, type: !61)
!8680 = !DILocalVariable(name: "status", scope: !8667, file: !1277, line: 925, type: !1499)
!8681 = !DILocalVariable(name: "savedMask", scope: !8667, file: !1277, line: 926, type: !61)
!8682 = !DILocation(line: 0, scope: !8667)
!8683 = !DILocation(line: 921, column: 60, scope: !8667)
!8684 = !DILocation(line: 923, column: 5, scope: !8667)
!8685 = !DILocation(line: 923, column: 19, scope: !8667)
!8686 = !DILocation(line: 924, column: 5, scope: !8667)
!8687 = !DILocation(line: 932, column: 9, scope: !8667)
!8688 = !DILocation(line: 933, column: 8, scope: !8667)
!8689 = !DILocation(line: 933, column: 21, scope: !8667)
!8690 = !DILocation(line: 935, column: 14, scope: !8667)
!8691 = !DILocation(line: 935, column: 5, scope: !8667)
!8692 = !DILocation(line: 922, column: 29, scope: !8667)
!8693 = !DILocation(line: 937, column: 18, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8667, file: !1277, line: 935, column: 23)
!8695 = !DILocation(line: 937, column: 35, scope: !8694)
!8696 = !DILocation(line: 937, column: 74, scope: !8694)
!8697 = !DILocation(line: 937, column: 50, scope: !8694)
!8698 = !DILocation(line: 937, column: 39, scope: !8694)
!8699 = !DILocation(line: 940, column: 35, scope: !8694)
!8700 = !DILocation(line: 940, column: 29, scope: !8694)
!8701 = !DILocation(line: 940, column: 16, scope: !8694)
!8702 = !DILocation(line: 942, column: 18, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8694, file: !1277, line: 942, column: 13)
!8704 = !DILocation(line: 942, column: 29, scope: !8703)
!8705 = !DILocation(line: 942, column: 13, scope: !8694)
!8706 = !DILocation(line: 943, column: 13, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8703, file: !1277, line: 942, column: 55)
!8708 = !DILocation(line: 944, column: 9, scope: !8707)
!8709 = !DILocation(line: 947, column: 16, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8694, file: !1277, line: 947, column: 13)
!8711 = !DILocation(line: 947, column: 29, scope: !8710)
!8712 = !DILocation(line: 0, scope: !8710)
!8713 = !DILocation(line: 947, column: 13, scope: !8694)
!8714 = !DILocation(line: 948, column: 20, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !1277, line: 947, column: 35)
!8716 = !DILocation(line: 949, column: 32, scope: !8715)
!8717 = !DILocation(line: 949, column: 40, scope: !8715)
!8718 = !DILocation(line: 949, column: 13, scope: !8715)
!8719 = !DILocation(line: 950, column: 9, scope: !8715)
!8720 = !DILocation(line: 953, column: 20, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8710, file: !1277, line: 952, column: 9)
!8722 = !DILocation(line: 954, column: 32, scope: !8721)
!8723 = !DILocation(line: 954, column: 40, scope: !8721)
!8724 = !DILocation(line: 954, column: 13, scope: !8721)
!8725 = !DILocation(line: 957, column: 21, scope: !8694)
!8726 = !DILocation(line: 963, column: 45, scope: !8694)
!8727 = !DILocation(line: 963, column: 42, scope: !8694)
!8728 = !DILocation(line: 963, column: 40, scope: !8694)
!8729 = !DILocation(line: 963, column: 58, scope: !8694)
!8730 = !DILocation(line: 963, column: 29, scope: !8694)
!8731 = !DILocation(line: 964, column: 28, scope: !8694)
!8732 = !DILocation(line: 965, column: 37, scope: !8694)
!8733 = !DILocation(line: 966, column: 9, scope: !8694)
!8734 = !DILocation(line: 967, column: 26, scope: !8694)
!8735 = !DILocation(line: 967, column: 9, scope: !8694)
!8736 = !DILocation(line: 968, column: 29, scope: !8694)
!8737 = !DILocation(line: 968, column: 9, scope: !8694)
!8738 = !DILocation(line: 972, column: 9, scope: !8694)
!8739 = !DILocation(line: 978, column: 9, scope: !8694)
!8740 = !DILocation(line: 979, column: 50, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8694, file: !1277, line: 978, column: 22)
!8742 = !DILocation(line: 979, column: 55, scope: !8741)
!8743 = !DILocation(line: 979, column: 22, scope: !8741)
!8744 = !DILocation(line: 980, column: 35, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8741, file: !1277, line: 980, column: 17)
!8746 = !DILocation(line: 980, column: 32, scope: !8745)
!8747 = !DILocation(line: 980, column: 30, scope: !8745)
!8748 = !DILocation(line: 980, column: 19, scope: !8745)
!8749 = !DILocation(line: 980, column: 17, scope: !8741)
!8750 = distinct !{!8750, !8739, !8751}
!8751 = !DILocation(line: 983, column: 9, scope: !8694)
!8752 = !DILocation(line: 991, column: 9, scope: !8694)
!8753 = !DILocation(line: 993, column: 19, scope: !8694)
!8754 = !DILocation(line: 993, column: 16, scope: !8694)
!8755 = !DILocation(line: 994, column: 14, scope: !8694)
!8756 = !DILocation(line: 995, column: 17, scope: !8694)
!8757 = distinct !{!8757, !8691, !8758}
!8758 = !DILocation(line: 996, column: 5, scope: !8667)
!8759 = !DILocation(line: 998, column: 21, scope: !8667)
!8760 = !DILocation(line: 1005, column: 9, scope: !8667)
!8761 = !DILocation(line: 1008, column: 1, scope: !8667)
!8762 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1277, file: !1277, line: 1427, type: !8763, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{null, !1447}
!8765 = !{!8766, !8767}
!8766 = !DILocalVariable(name: "D", arg: 1, scope: !8762, file: !1277, line: 1427, type: !1447)
!8767 = !DILocalVariable(name: "Result", scope: !8762, file: !1277, line: 1429, type: !2113)
!8768 = !DILocation(line: 0, scope: !8762)
!8769 = !DILocation(line: 1430, column: 5, scope: !8762)
!8770 = !DILocation(line: 1431, column: 18, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8762, file: !1277, line: 1430, column: 8)
!8772 = !DILocation(line: 1432, column: 21, scope: !8762)
!8773 = !DILocation(line: 1432, column: 5, scope: !8771)
!8774 = distinct !{!8774, !8769, !8775}
!8775 = !DILocation(line: 1432, column: 43, scope: !8762)
!8776 = !DILocation(line: 1433, column: 1, scope: !8762)
!8777 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1277, file: !1277, line: 3478, type: !8763, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8778)
!8778 = !{!8779}
!8779 = !DILocalVariable(name: "D", arg: 1, scope: !8777, file: !1277, line: 3478, type: !1447)
!8780 = !DILocation(line: 0, scope: !8777)
!8781 = !DILocation(line: 3480, column: 30, scope: !8777)
!8782 = !DILocation(line: 3480, column: 35, scope: !8777)
!8783 = !DILocation(line: 3480, column: 27, scope: !8777)
!8784 = !DILocation(line: 3480, column: 5, scope: !8777)
!8785 = !DILocation(line: 3481, column: 1, scope: !8777)
!8786 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1277, file: !1277, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8787)
!8787 = !{!8788}
!8788 = !DILocalVariable(name: "savedMask", scope: !8786, file: !1277, line: 2384, type: !61)
!8789 = !DILocation(line: 2385, column: 17, scope: !8786)
!8790 = !DILocation(line: 0, scope: !8786)
!8791 = !DILocation(line: 2390, column: 20, scope: !8786)
!8792 = !DILocation(line: 2391, column: 5, scope: !8786)
!8793 = !DILocation(line: 2392, column: 1, scope: !8786)
!8794 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1277, file: !1277, line: 3536, type: !8795, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8797)
!8795 = !DISubroutineType(types: !8796)
!8796 = !{!61, !1447, !460}
!8797 = !{!8798, !8799, !8800, !8801}
!8798 = !DILocalVariable(name: "D", arg: 1, scope: !8794, file: !1277, line: 3536, type: !1447)
!8799 = !DILocalVariable(name: "cmd", arg: 2, scope: !8794, file: !1277, line: 3536, type: !460)
!8800 = !DILocalVariable(name: "savedMask", scope: !8794, file: !1277, line: 3538, type: !61)
!8801 = !DILocalVariable(name: "result", scope: !8794, file: !1277, line: 3539, type: !61)
!8802 = !DILocation(line: 0, scope: !8794)
!8803 = !DILocation(line: 3541, column: 17, scope: !8794)
!8804 = !DILocation(line: 3542, column: 22, scope: !8794)
!8805 = !DILocation(line: 3542, column: 5, scope: !8794)
!8806 = !DILocation(line: 3543, column: 35, scope: !8794)
!8807 = !DILocation(line: 3543, column: 33, scope: !8794)
!8808 = !DILocation(line: 3544, column: 25, scope: !8794)
!8809 = !DILocation(line: 3545, column: 24, scope: !8794)
!8810 = !DILocation(line: 3546, column: 25, scope: !8794)
!8811 = !DILocation(line: 3546, column: 5, scope: !8794)
!8812 = !DILocation(line: 3547, column: 42, scope: !8794)
!8813 = !DILocation(line: 3547, column: 60, scope: !8794)
!8814 = !DILocation(line: 3547, column: 14, scope: !8794)
!8815 = !DILocation(line: 3548, column: 5, scope: !8794)
!8816 = !DILocation(line: 3550, column: 5, scope: !8794)
!8817 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1277, file: !1277, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8818)
!8818 = !{!8819}
!8819 = !DILocalVariable(name: "savedMask", scope: !8817, file: !1277, line: 2395, type: !61)
!8820 = !DILocation(line: 2396, column: 17, scope: !8817)
!8821 = !DILocation(line: 0, scope: !8817)
!8822 = !DILocation(line: 2401, column: 20, scope: !8817)
!8823 = !DILocation(line: 2402, column: 5, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !1277, line: 2402, column: 5)
!8825 = distinct !DILexicalBlock(scope: !8817, file: !1277, line: 2402, column: 5)
!8826 = !DILocation(line: 2403, column: 5, scope: !8817)
!8827 = !DILocation(line: 2404, column: 1, scope: !8817)
!8828 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1277, file: !1277, line: 1440, type: !8763, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8829)
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "D", arg: 1, scope: !8828, file: !1277, line: 1440, type: !1447)
!8831 = !DILocalVariable(name: "savedMask", scope: !8828, file: !1277, line: 1442, type: !1156)
!8832 = !DILocation(line: 0, scope: !8828)
!8833 = !DILocation(line: 1443, column: 17, scope: !8828)
!8834 = !DILocation(line: 1444, column: 9, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8828, file: !1277, line: 1444, column: 9)
!8836 = !DILocation(line: 1444, column: 9, scope: !8828)
!8837 = !DILocation(line: 1445, column: 17, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8835, file: !1277, line: 1444, column: 24)
!8839 = !DILocation(line: 1446, column: 9, scope: !8838)
!8840 = !DILocation(line: 1451, column: 1, scope: !8828)
!8841 = !DILocation(line: 1448, column: 9, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8835, file: !1277, line: 1447, column: 12)
!8843 = !DILocation(line: 1449, column: 9, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1277, line: 1449, column: 9)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !1277, line: 1449, column: 9)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !1277, line: 1449, column: 9)
!8847 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1277, file: !1277, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8848)
!8848 = !{!8849, !8850, !8851, !8852}
!8849 = !DILocalVariable(name: "D", scope: !8847, file: !1277, line: 1029, type: !1447)
!8850 = !DILocalVariable(name: "status", scope: !8847, file: !1277, line: 1030, type: !1499)
!8851 = !DILocalVariable(name: "savedMask", scope: !8847, file: !1277, line: 1031, type: !61)
!8852 = !DILocalVariable(name: "duration", scope: !8853, file: !1277, line: 1231, type: !61)
!8853 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1230, column: 5)
!8854 = !DILocation(line: 0, scope: !8847)
!8855 = !DILocation(line: 1033, column: 17, scope: !8847)
!8856 = !DILocation(line: 1034, column: 8, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1034, column: 8)
!8858 = !DILocation(line: 1034, column: 30, scope: !8857)
!8859 = !DILocation(line: 1034, column: 8, scope: !8847)
!8860 = !DILocation(line: 1039, column: 27, scope: !8847)
!8861 = !DILocation(line: 1058, column: 48, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1055, column: 5)
!8863 = !DILocation(line: 1069, column: 5, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !1277, line: 1069, column: 5)
!8865 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1069, column: 5)
!8866 = !DILocation(line: 1069, column: 5, scope: !8865)
!8867 = !DILocation(line: 1069, column: 5, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !1277, line: 1069, column: 5)
!8869 = !DILocation(line: 1075, column: 10, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1075, column: 9)
!8871 = !DILocation(line: 1075, column: 27, scope: !8870)
!8872 = !DILocation(line: 1075, column: 33, scope: !8870)
!8873 = !DILocation(line: 1075, column: 40, scope: !8870)
!8874 = !DILocation(line: 1075, column: 53, scope: !8870)
!8875 = !DILocation(line: 1075, column: 9, scope: !8847)
!8876 = !DILocation(line: 1084, column: 9, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8870, file: !1277, line: 1083, column: 11)
!8878 = !DILocation(line: 1085, column: 50, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8877, file: !1277, line: 1084, column: 21)
!8880 = !DILocation(line: 1085, column: 55, scope: !8879)
!8881 = !DILocation(line: 1085, column: 22, scope: !8879)
!8882 = !DILocation(line: 1086, column: 35, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !1277, line: 1086, column: 17)
!8884 = !DILocation(line: 1086, column: 32, scope: !8883)
!8885 = !DILocation(line: 1086, column: 30, scope: !8883)
!8886 = !DILocation(line: 1086, column: 19, scope: !8883)
!8887 = !DILocation(line: 1086, column: 17, scope: !8879)
!8888 = distinct !{!8888, !8876, !8889}
!8889 = !DILocation(line: 1089, column: 9, scope: !8877)
!8890 = !DILocation(line: 1107, column: 11, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1107, column: 9)
!8892 = !DILocation(line: 1107, column: 30, scope: !8891)
!8893 = !DILocation(line: 1117, column: 46, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8891, file: !1277, line: 1107, column: 53)
!8895 = !DILocation(line: 1117, column: 51, scope: !8894)
!8896 = !DILocation(line: 1117, column: 18, scope: !8894)
!8897 = !DILocation(line: 1120, column: 31, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !1277, line: 1120, column: 13)
!8899 = !DILocation(line: 1120, column: 28, scope: !8898)
!8900 = !DILocation(line: 1120, column: 26, scope: !8898)
!8901 = !DILocation(line: 1120, column: 15, scope: !8898)
!8902 = !DILocation(line: 1120, column: 13, scope: !8894)
!8903 = !DILocation(line: 1128, column: 13, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8898, file: !1277, line: 1120, column: 55)
!8905 = !DILocation(line: 1131, column: 13, scope: !8904)
!8906 = !DILocation(line: 1132, column: 54, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !1277, line: 1131, column: 23)
!8908 = !DILocation(line: 1132, column: 59, scope: !8907)
!8909 = !DILocation(line: 1132, column: 26, scope: !8907)
!8910 = !DILocation(line: 1133, column: 39, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8907, file: !1277, line: 1133, column: 21)
!8912 = !DILocation(line: 1133, column: 36, scope: !8911)
!8913 = !DILocation(line: 1133, column: 34, scope: !8911)
!8914 = !DILocation(line: 1133, column: 23, scope: !8911)
!8915 = !DILocation(line: 1133, column: 21, scope: !8907)
!8916 = distinct !{!8916, !8905, !8917}
!8917 = !DILocation(line: 1158, column: 13, scope: !8904)
!8918 = !DILocation(line: 1162, column: 21, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8904, file: !1277, line: 1162, column: 17)
!8920 = !DILocation(line: 1162, column: 32, scope: !8919)
!8921 = !DILocation(line: 1162, column: 51, scope: !8919)
!8922 = !DILocation(line: 1162, column: 58, scope: !8919)
!8923 = !DILocation(line: 1162, column: 71, scope: !8919)
!8924 = !DILocation(line: 1162, column: 17, scope: !8904)
!8925 = !DILocation(line: 1164, column: 45, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8919, file: !1277, line: 1162, column: 91)
!8927 = !DILocation(line: 1165, column: 36, scope: !8926)
!8928 = !DILocation(line: 1166, column: 37, scope: !8926)
!8929 = !DILocation(line: 1167, column: 34, scope: !8926)
!8930 = !DILocation(line: 1167, column: 17, scope: !8926)
!8931 = !DILocation(line: 1168, column: 37, scope: !8926)
!8932 = !DILocation(line: 1168, column: 17, scope: !8926)
!8933 = !DILocation(line: 1171, column: 50, scope: !8926)
!8934 = !DILocation(line: 1172, column: 37, scope: !8926)
!8935 = !DILocation(line: 1173, column: 45, scope: !8926)
!8936 = !DILocation(line: 1174, column: 34, scope: !8926)
!8937 = !DILocation(line: 1174, column: 17, scope: !8926)
!8938 = !DILocation(line: 1175, column: 37, scope: !8926)
!8939 = !DILocation(line: 1175, column: 17, scope: !8926)
!8940 = !DILocation(line: 1178, column: 17, scope: !8926)
!8941 = !DILocation(line: 1179, column: 49, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8926, file: !1277, line: 1178, column: 20)
!8943 = !DILocation(line: 1180, column: 40, scope: !8942)
!8944 = !DILocation(line: 1181, column: 41, scope: !8942)
!8945 = !DILocation(line: 1182, column: 38, scope: !8942)
!8946 = !DILocation(line: 1182, column: 21, scope: !8942)
!8947 = !DILocation(line: 1183, column: 41, scope: !8942)
!8948 = !DILocation(line: 1183, column: 21, scope: !8942)
!8949 = !DILocation(line: 1184, column: 43, scope: !8942)
!8950 = !DILocation(line: 1185, column: 17, scope: !8942)
!8951 = distinct !{!8951, !8940, !8952}
!8952 = !DILocation(line: 1185, column: 32, scope: !8926)
!8953 = !DILocation(line: 1194, column: 13, scope: !8904)
!8954 = !DILocation(line: 1195, column: 9, scope: !8904)
!8955 = !DILocation(line: 1197, column: 21, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !1277, line: 1197, column: 17)
!8957 = distinct !DILexicalBlock(scope: !8898, file: !1277, line: 1195, column: 16)
!8958 = !DILocation(line: 1197, column: 32, scope: !8956)
!8959 = !DILocation(line: 1197, column: 53, scope: !8956)
!8960 = !DILocation(line: 1197, column: 60, scope: !8956)
!8961 = !DILocation(line: 1197, column: 76, scope: !8956)
!8962 = !DILocation(line: 1197, column: 17, scope: !8957)
!8963 = !DILocation(line: 1198, column: 54, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8956, file: !1277, line: 1197, column: 98)
!8965 = !DILocation(line: 1198, column: 59, scope: !8964)
!8966 = !DILocation(line: 1198, column: 26, scope: !8964)
!8967 = !DILocation(line: 1199, column: 40, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8964, file: !1277, line: 1199, column: 21)
!8969 = !DILocation(line: 1199, column: 37, scope: !8968)
!8970 = !DILocation(line: 1199, column: 35, scope: !8968)
!8971 = !DILocation(line: 1199, column: 24, scope: !8968)
!8972 = !DILocation(line: 1199, column: 63, scope: !8968)
!8973 = !DILocation(line: 1200, column: 41, scope: !8968)
!8974 = !DILocation(line: 1200, column: 39, scope: !8968)
!8975 = !DILocation(line: 1200, column: 28, scope: !8968)
!8976 = !DILocation(line: 1199, column: 21, scope: !8964)
!8977 = !DILocation(line: 1201, column: 40, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8968, file: !1277, line: 1200, column: 68)
!8979 = !DILocation(line: 1201, column: 21, scope: !8978)
!8980 = !DILocation(line: 1202, column: 40, scope: !8978)
!8981 = !DILocation(line: 1202, column: 21, scope: !8978)
!8982 = !DILocation(line: 1203, column: 17, scope: !8978)
!8983 = !DILocation(line: 1206, column: 13, scope: !8957)
!8984 = !DILocation(line: 1228, column: 25, scope: !8847)
!8985 = !DILocation(line: 1231, column: 29, scope: !8853)
!8986 = !DILocation(line: 0, scope: !8853)
!8987 = !DILocation(line: 1232, column: 13, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8853, file: !1277, line: 1232, column: 13)
!8989 = !DILocation(line: 1232, column: 43, scope: !8988)
!8990 = !DILocation(line: 1232, column: 13, scope: !8853)
!8991 = !DILocation(line: 1233, column: 43, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8988, file: !1277, line: 1232, column: 55)
!8993 = !DILocation(line: 1234, column: 9, scope: !8992)
!8994 = !DILocation(line: 1237, column: 5, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !1277, line: 1237, column: 5)
!8996 = distinct !DILexicalBlock(scope: !8847, file: !1277, line: 1237, column: 5)
!8997 = !DILocation(line: 1240, column: 5, scope: !8847)
!8998 = !DILocation(line: 1241, column: 1, scope: !8847)
!8999 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1277, file: !1277, line: 3421, type: !8763, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9000)
!9000 = !{!9001, !9002, !9003, !9004}
!9001 = !DILocalVariable(name: "D", arg: 1, scope: !8999, file: !1277, line: 3421, type: !1447)
!9002 = !DILocalVariable(name: "savedMask", scope: !8999, file: !1277, line: 3423, type: !61)
!9003 = !DILocalVariable(name: "currtime", scope: !8999, file: !1277, line: 3424, type: !61)
!9004 = !DILocalVariable(name: "difftime", scope: !8999, file: !1277, line: 3424, type: !61)
!9005 = !DILocation(line: 0, scope: !8999)
!9006 = !DILocation(line: 3427, column: 9, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8999, file: !1277, line: 3427, column: 9)
!9008 = !DILocation(line: 3427, column: 28, scope: !9007)
!9009 = !DILocation(line: 3427, column: 9, scope: !8999)
!9010 = !DILocation(line: 3429, column: 20, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9007, file: !1277, line: 3427, column: 59)
!9012 = !DILocation(line: 3430, column: 27, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9011, file: !1277, line: 3430, column: 13)
!9014 = !DILocation(line: 3430, column: 24, scope: !9013)
!9015 = !DILocation(line: 3430, column: 22, scope: !9013)
!9016 = !DILocation(line: 3430, column: 13, scope: !9011)
!9017 = !DILocation(line: 3431, column: 47, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9013, file: !1277, line: 3430, column: 46)
!9019 = !DILocation(line: 3431, column: 13, scope: !9018)
!9020 = !DILocation(line: 3432, column: 9, scope: !9018)
!9021 = !DILocation(line: 3435, column: 17, scope: !8999)
!9022 = !DILocation(line: 3436, column: 24, scope: !8999)
!9023 = !DILocation(line: 3436, column: 31, scope: !8999)
!9024 = !DILocation(line: 3436, column: 36, scope: !8999)
!9025 = !DILocation(line: 3436, column: 28, scope: !8999)
!9026 = !DILocation(line: 3436, column: 5, scope: !8999)
!9027 = !DILocation(line: 3442, column: 5, scope: !8999)
!9028 = !DILocation(line: 3443, column: 1, scope: !8999)
!9029 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1277, file: !1277, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9030)
!9030 = !{!9031}
!9031 = !DILocalVariable(name: "savedMask", scope: !9029, file: !1277, line: 2407, type: !61)
!9032 = !DILocation(line: 2408, column: 17, scope: !9029)
!9033 = !DILocation(line: 0, scope: !9029)
!9034 = !DILocation(line: 2413, column: 25, scope: !9029)
!9035 = !DILocation(line: 2414, column: 5, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !1277, line: 2414, column: 5)
!9037 = distinct !DILexicalBlock(scope: !9029, file: !1277, line: 2414, column: 5)
!9038 = !DILocation(line: 2415, column: 5, scope: !9029)
!9039 = !DILocation(line: 2416, column: 1, scope: !9029)
!9040 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1277, file: !1277, line: 3561, type: !9041, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9043)
!9041 = !DISubroutineType(types: !9042)
!9042 = !{null, !1447, !772, !460}
!9043 = !{!9044, !9045, !9046, !9047}
!9044 = !DILocalVariable(name: "D", arg: 1, scope: !9040, file: !1277, line: 3561, type: !1447)
!9045 = !DILocalVariable(name: "cmd", arg: 2, scope: !9040, file: !1277, line: 3561, type: !772)
!9046 = !DILocalVariable(name: "outlen", arg: 3, scope: !9040, file: !1277, line: 3561, type: !460)
!9047 = !DILocalVariable(name: "savedMask", scope: !9040, file: !1277, line: 3563, type: !61)
!9048 = !DILocation(line: 0, scope: !9040)
!9049 = !DILocation(line: 3565, column: 17, scope: !9040)
!9050 = !DILocation(line: 3566, column: 22, scope: !9040)
!9051 = !DILocation(line: 3566, column: 5, scope: !9040)
!9052 = !DILocation(line: 3567, column: 33, scope: !9040)
!9053 = !DILocation(line: 3568, column: 27, scope: !9040)
!9054 = !DILocation(line: 3568, column: 25, scope: !9040)
!9055 = !DILocation(line: 3569, column: 24, scope: !9040)
!9056 = !DILocation(line: 3570, column: 25, scope: !9040)
!9057 = !DILocation(line: 3570, column: 5, scope: !9040)
!9058 = !DILocation(line: 3571, column: 5, scope: !9040)
!9059 = !DILocation(line: 3573, column: 1, scope: !9040)
!9060 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1277, file: !1277, line: 1410, type: !9061, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9063)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!2113}
!9063 = !{!9064}
!9064 = !DILocalVariable(name: "savedMask", scope: !9060, file: !1277, line: 1412, type: !1156)
!9065 = !DILocation(line: 1413, column: 17, scope: !9060)
!9066 = !DILocation(line: 0, scope: !9060)
!9067 = !DILocation(line: 1414, column: 9, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9060, file: !1277, line: 1414, column: 9)
!9069 = !DILocation(line: 1414, column: 9, scope: !9060)
!9070 = !DILocation(line: 1415, column: 17, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9068, file: !1277, line: 1414, column: 24)
!9072 = !DILocation(line: 1417, column: 9, scope: !9071)
!9073 = !DILocation(line: 0, scope: !9068)
!9074 = !DILocation(line: 1425, column: 1, scope: !9060)
!9075 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1277, file: !1277, line: 1257, type: !9076, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9078)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!91}
!9078 = !{!9079, !9080, !9081}
!9079 = !DILocalVariable(name: "D", scope: !9075, file: !1277, line: 1259, type: !1447)
!9080 = !DILocalVariable(name: "status", scope: !9075, file: !1277, line: 1260, type: !1499)
!9081 = !DILocalVariable(name: "result", scope: !9075, file: !1277, line: 1261, type: !91)
!9082 = !DILocation(line: 1259, column: 57, scope: !9075)
!9083 = !DILocation(line: 0, scope: !9075)
!9084 = !DILocation(line: 1263, column: 5, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !1277, line: 1263, column: 5)
!9086 = distinct !DILexicalBlock(scope: !9075, file: !1277, line: 1263, column: 5)
!9087 = !DILocation(line: 1263, column: 5, scope: !9086)
!9088 = !DILocation(line: 1263, column: 5, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9085, file: !1277, line: 1263, column: 5)
!9090 = !DILocation(line: 1265, column: 5, scope: !9075)
!9091 = !DILocation(line: 1267, column: 42, scope: !9075)
!9092 = !DILocation(line: 1267, column: 47, scope: !9075)
!9093 = !DILocation(line: 1267, column: 14, scope: !9075)
!9094 = !DILocation(line: 1269, column: 27, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9075, file: !1277, line: 1269, column: 9)
!9096 = !DILocation(line: 1269, column: 24, scope: !9095)
!9097 = !DILocation(line: 1269, column: 22, scope: !9095)
!9098 = !DILocation(line: 1269, column: 11, scope: !9095)
!9099 = !DILocation(line: 1269, column: 9, scope: !9075)
!9100 = !DILocation(line: 1270, column: 9, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9095, file: !1277, line: 1269, column: 51)
!9102 = !DILocation(line: 1272, column: 5, scope: !9101)
!9103 = !DILocation(line: 1274, column: 5, scope: !9075)
!9104 = !DILocation(line: 1276, column: 5, scope: !9075)
!9105 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1277, file: !1277, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9106)
!9106 = !{!9107}
!9107 = !DILocalVariable(name: "D", scope: !9105, file: !1277, line: 1291, type: !1447)
!9108 = !DILocation(line: 0, scope: !9105)
!9109 = !DILocation(line: 1293, column: 5, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !1277, line: 1293, column: 5)
!9111 = distinct !DILexicalBlock(scope: !9105, file: !1277, line: 1293, column: 5)
!9112 = !DILocation(line: 1293, column: 5, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9110, file: !1277, line: 1293, column: 5)
!9114 = !DILocation(line: 1293, column: 5, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !1277, line: 1293, column: 5)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !1277, line: 1293, column: 5)
!9117 = distinct !DILexicalBlock(scope: !9113, file: !1277, line: 1293, column: 5)
!9118 = !DILocation(line: 1291, column: 60, scope: !9105)
!9119 = !DILocation(line: 1295, column: 5, scope: !9105)
!9120 = !DILocation(line: 1296, column: 1, scope: !9105)
!9121 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1277, file: !1277, line: 3452, type: !8763, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9122)
!9122 = !{!9123, !9124}
!9123 = !DILocalVariable(name: "D", arg: 1, scope: !9121, file: !1277, line: 3452, type: !1447)
!9124 = !DILocalVariable(name: "savedMask", scope: !9121, file: !1277, line: 3454, type: !61)
!9125 = !DILocation(line: 0, scope: !9121)
!9126 = !DILocation(line: 3456, column: 17, scope: !9121)
!9127 = !DILocation(line: 3462, column: 24, scope: !9121)
!9128 = !DILocation(line: 3462, column: 31, scope: !9121)
!9129 = !DILocation(line: 3462, column: 36, scope: !9121)
!9130 = !DILocation(line: 3462, column: 28, scope: !9121)
!9131 = !DILocation(line: 3462, column: 5, scope: !9121)
!9132 = !DILocation(line: 3463, column: 12, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9121, file: !1277, line: 3463, column: 9)
!9134 = !DILocation(line: 3463, column: 27, scope: !9133)
!9135 = !DILocation(line: 3463, column: 9, scope: !9121)
!9136 = !DILocation(line: 3464, column: 28, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9133, file: !1277, line: 3463, column: 33)
!9138 = !DILocation(line: 3465, column: 5, scope: !9137)
!9139 = !DILocation(line: 3467, column: 5, scope: !9121)
!9140 = !DILocation(line: 3468, column: 5, scope: !9121)
!9141 = !DILocation(line: 3469, column: 1, scope: !9121)
!9142 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1277, file: !1277, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9143)
!9143 = !{!9144}
!9144 = !DILocalVariable(name: "savedMask", scope: !9142, file: !1277, line: 2419, type: !61)
!9145 = !DILocation(line: 2420, column: 17, scope: !9142)
!9146 = !DILocation(line: 0, scope: !9142)
!9147 = !DILocation(line: 2425, column: 25, scope: !9142)
!9148 = !DILocation(line: 2426, column: 5, scope: !9142)
!9149 = !DILocation(line: 2427, column: 1, scope: !9142)
!9150 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1277, file: !1277, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9151)
!9151 = !{!9152, !9153}
!9152 = !DILocalVariable(name: "D", scope: !9150, file: !1277, line: 1310, type: !1447)
!9153 = !DILocalVariable(name: "status", scope: !9150, file: !1277, line: 1311, type: !1499)
!9154 = !DILocation(line: 1310, column: 60, scope: !9150)
!9155 = !DILocation(line: 0, scope: !9150)
!9156 = !DILocation(line: 1313, column: 5, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !1277, line: 1313, column: 5)
!9158 = distinct !DILexicalBlock(scope: !9150, file: !1277, line: 1313, column: 5)
!9159 = !DILocation(line: 1313, column: 5, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9157, file: !1277, line: 1313, column: 5)
!9161 = !DILocation(line: 1313, column: 5, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !1277, line: 1313, column: 5)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !1277, line: 1313, column: 5)
!9164 = distinct !DILexicalBlock(scope: !9160, file: !1277, line: 1313, column: 5)
!9165 = !DILocation(line: 1315, column: 5, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !1277, line: 1315, column: 5)
!9167 = distinct !DILexicalBlock(scope: !9150, file: !1277, line: 1315, column: 5)
!9168 = !DILocation(line: 1315, column: 5, scope: !9167)
!9169 = !DILocation(line: 1315, column: 5, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9166, file: !1277, line: 1315, column: 5)
!9171 = !DILocation(line: 1317, column: 5, scope: !9150)
!9172 = !DILocation(line: 1319, column: 5, scope: !9150)
!9173 = !DILocation(line: 1320, column: 46, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9150, file: !1277, line: 1319, column: 15)
!9175 = !DILocation(line: 1320, column: 51, scope: !9174)
!9176 = !DILocation(line: 1320, column: 18, scope: !9174)
!9177 = !DILocation(line: 1322, column: 31, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9174, file: !1277, line: 1322, column: 13)
!9179 = !DILocation(line: 1322, column: 28, scope: !9178)
!9180 = !DILocation(line: 1322, column: 26, scope: !9178)
!9181 = !DILocation(line: 1322, column: 15, scope: !9178)
!9182 = !DILocation(line: 1322, column: 13, scope: !9174)
!9183 = distinct !{!9183, !9172, !9184}
!9184 = !DILocation(line: 1325, column: 5, scope: !9150)
!9185 = !DILocation(line: 1327, column: 5, scope: !9150)
!9186 = !DILocation(line: 1328, column: 1, scope: !9150)
!9187 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1277, file: !1277, line: 1394, type: !8763, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9188)
!9188 = !{!9189}
!9189 = !DILocalVariable(name: "D", arg: 1, scope: !9187, file: !1277, line: 1394, type: !1447)
!9190 = !DILocation(line: 0, scope: !9187)
!9191 = !DILocation(line: 1401, column: 1, scope: !9187)
!9192 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1277, file: !1277, line: 1556, type: !9193, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9214)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!1156, !9195, !1447}
!9195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9196, size: 32)
!9196 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1473, line: 121, baseType: !9197)
!9197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 105, size: 480, elements: !9198)
!9198 = !{!9199, !9200, !9201, !9202, !9203, !9204, !9205, !9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213}
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9197, file: !1473, line: 106, baseType: !1745, size: 32)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9197, file: !1473, line: 107, baseType: !1546, size: 32, offset: 32)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9197, file: !1473, line: 108, baseType: !1750, size: 32, offset: 64)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9197, file: !1473, line: 109, baseType: !1754, size: 32, offset: 96)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9197, file: !1473, line: 110, baseType: !1758, size: 32, offset: 128)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9197, file: !1473, line: 111, baseType: !1754, size: 32, offset: 160)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9197, file: !1473, line: 112, baseType: !1763, size: 32, offset: 192)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9197, file: !1473, line: 113, baseType: !1754, size: 32, offset: 224)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9197, file: !1473, line: 114, baseType: !1754, size: 32, offset: 256)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9197, file: !1473, line: 115, baseType: !1754, size: 32, offset: 288)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9197, file: !1473, line: 116, baseType: !1770, size: 32, offset: 320)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9197, file: !1473, line: 117, baseType: !1775, size: 32, offset: 352)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9197, file: !1473, line: 118, baseType: !1780, size: 32, offset: 384)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9197, file: !1473, line: 119, baseType: !1784, size: 32, offset: 416)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9197, file: !1473, line: 120, baseType: !1788, size: 32, offset: 448)
!9214 = !{!9215, !9216, !9217}
!9215 = !DILocalVariable(name: "driver", arg: 1, scope: !9192, file: !1277, line: 1556, type: !9195)
!9216 = !DILocalVariable(name: "D", arg: 2, scope: !9192, file: !1277, line: 1556, type: !1447)
!9217 = !DILocalVariable(name: "smap", scope: !9192, file: !1277, line: 1558, type: !1498)
!9218 = !DILocation(line: 0, scope: !9192)
!9219 = !DILocation(line: 1561, column: 15, scope: !9192)
!9220 = !DILocation(line: 1562, column: 22, scope: !9192)
!9221 = !DILocation(line: 1563, column: 5, scope: !9192)
!9222 = !DILocation(line: 1563, column: 22, scope: !9192)
!9223 = !DILocation(line: 1565, column: 5, scope: !9192)
!9224 = !DILocation(line: 1565, column: 22, scope: !9192)
!9225 = !DILocation(line: 1566, column: 5, scope: !9192)
!9226 = !DILocation(line: 1566, column: 22, scope: !9192)
!9227 = !DILocation(line: 1568, column: 5, scope: !9192)
!9228 = !DILocation(line: 1568, column: 22, scope: !9192)
!9229 = !DILocation(line: 1569, column: 5, scope: !9192)
!9230 = !DILocation(line: 1569, column: 22, scope: !9192)
!9231 = !DILocation(line: 1570, column: 5, scope: !9192)
!9232 = !DILocation(line: 1570, column: 22, scope: !9192)
!9233 = !DILocation(line: 1573, column: 8, scope: !9192)
!9234 = !DILocation(line: 1573, column: 13, scope: !9192)
!9235 = !DILocation(line: 1573, column: 28, scope: !9192)
!9236 = !DILocation(line: 1574, column: 8, scope: !9192)
!9237 = !DILocation(line: 1574, column: 13, scope: !9192)
!9238 = !DILocation(line: 1574, column: 29, scope: !9192)
!9239 = !DILocation(line: 1575, column: 8, scope: !9192)
!9240 = !DILocation(line: 1575, column: 13, scope: !9192)
!9241 = !DILocation(line: 1575, column: 30, scope: !9192)
!9242 = !DILocation(line: 1576, column: 8, scope: !9192)
!9243 = !DILocation(line: 1576, column: 13, scope: !9192)
!9244 = !DILocation(line: 1576, column: 23, scope: !9192)
!9245 = !DILocation(line: 1577, column: 8, scope: !9192)
!9246 = !DILocation(line: 1577, column: 13, scope: !9192)
!9247 = !DILocation(line: 1577, column: 24, scope: !9192)
!9248 = !DILocation(line: 1578, column: 8, scope: !9192)
!9249 = !DILocation(line: 1578, column: 13, scope: !9192)
!9250 = !DILocation(line: 1578, column: 25, scope: !9192)
!9251 = !DILocation(line: 1579, column: 8, scope: !9192)
!9252 = !DILocation(line: 1579, column: 23, scope: !9192)
!9253 = !DILocation(line: 1583, column: 10, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9192, file: !1277, line: 1583, column: 9)
!9255 = !DILocation(line: 1583, column: 24, scope: !9254)
!9256 = !DILocation(line: 1583, column: 32, scope: !9254)
!9257 = !DILocation(line: 1583, column: 35, scope: !9254)
!9258 = !DILocation(line: 1583, column: 49, scope: !9254)
!9259 = !DILocation(line: 1583, column: 9, scope: !9192)
!9260 = !DILocation(line: 1586, column: 12, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9254, file: !1277, line: 1583, column: 59)
!9262 = !DILocation(line: 1586, column: 17, scope: !9261)
!9263 = !DILocation(line: 1586, column: 25, scope: !9261)
!9264 = !DILocation(line: 1587, column: 12, scope: !9261)
!9265 = !DILocation(line: 1587, column: 17, scope: !9261)
!9266 = !DILocation(line: 1587, column: 24, scope: !9261)
!9267 = !DILocation(line: 1591, column: 10, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9192, file: !1277, line: 1591, column: 9)
!9269 = !DILocation(line: 1589, column: 5, scope: !9261)
!9270 = !DILocation(line: 1600, column: 32, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9192, file: !1277, line: 1600, column: 9)
!9272 = !DILocation(line: 1600, column: 35, scope: !9271)
!9273 = !DILocation(line: 1600, column: 49, scope: !9271)
!9274 = !DILocation(line: 1600, column: 9, scope: !9192)
!9275 = !DILocation(line: 1601, column: 12, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9271, file: !1277, line: 1600, column: 59)
!9277 = !DILocation(line: 1601, column: 17, scope: !9276)
!9278 = !DILocation(line: 1601, column: 25, scope: !9276)
!9279 = !DILocation(line: 1602, column: 12, scope: !9276)
!9280 = !DILocation(line: 1602, column: 17, scope: !9276)
!9281 = !DILocation(line: 1602, column: 24, scope: !9276)
!9282 = !DILocation(line: 1603, column: 5, scope: !9276)
!9283 = !DILocation(line: 1607, column: 8, scope: !9192)
!9284 = !DILocation(line: 1607, column: 20, scope: !9192)
!9285 = !DILocation(line: 1622, column: 5, scope: !9192)
!9286 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1277, file: !1277, line: 4553, type: !1547, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9287)
!9287 = !{!9288, !9289, !9290, !9291}
!9288 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9286, file: !1277, line: 4553, type: !88)
!9289 = !DILocalVariable(name: "D", scope: !9286, file: !1277, line: 4555, type: !1447)
!9290 = !DILocalVariable(name: "unlock", scope: !9286, file: !1277, line: 4556, type: !61)
!9291 = !DILocalVariable(name: "cmd", scope: !9286, file: !1277, line: 4557, type: !460)
!9292 = !DILocation(line: 0, scope: !9286)
!9293 = !DILocation(line: 4555, column: 24, scope: !9286)
!9294 = !DILocation(line: 4557, column: 5, scope: !9286)
!9295 = !DILocation(line: 4558, column: 12, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9286, file: !1277, line: 4558, column: 9)
!9297 = !DILocation(line: 4558, column: 9, scope: !9296)
!9298 = !DILocation(line: 4558, column: 23, scope: !9296)
!9299 = !DILocation(line: 4558, column: 31, scope: !9296)
!9300 = !DILocation(line: 4558, column: 34, scope: !9296)
!9301 = !DILocation(line: 4558, column: 48, scope: !9296)
!9302 = !DILocation(line: 4558, column: 56, scope: !9296)
!9303 = !DILocation(line: 4558, column: 59, scope: !9296)
!9304 = !DILocation(line: 4558, column: 73, scope: !9296)
!9305 = !DILocation(line: 4558, column: 9, scope: !9286)
!9306 = !DILocation(line: 4563, column: 24, scope: !9286)
!9307 = !DILocation(line: 4563, column: 31, scope: !9286)
!9308 = !DILocation(line: 4563, column: 36, scope: !9286)
!9309 = !DILocation(line: 4563, column: 28, scope: !9286)
!9310 = !DILocation(line: 4563, column: 5, scope: !9286)
!9311 = !DILocation(line: 4564, column: 5, scope: !9286)
!9312 = !DILocation(line: 4567, column: 28, scope: !9286)
!9313 = !DILocation(line: 4567, column: 36, scope: !9286)
!9314 = !DILocation(line: 4567, column: 41, scope: !9286)
!9315 = !DILocation(line: 4567, column: 5, scope: !9286)
!9316 = !DILocation(line: 4568, column: 17, scope: !9286)
!9317 = !DILocation(line: 4568, column: 22, scope: !9286)
!9318 = !DILocation(line: 4568, column: 14, scope: !9286)
!9319 = !DILocation(line: 4569, column: 22, scope: !9286)
!9320 = !DILocation(line: 4569, column: 54, scope: !9286)
!9321 = !DILocation(line: 4569, column: 65, scope: !9286)
!9322 = !DILocation(line: 4569, column: 62, scope: !9286)
!9323 = !DILocation(line: 4569, column: 87, scope: !9286)
!9324 = !DILocation(line: 4569, column: 85, scope: !9286)
!9325 = !DILocation(line: 4569, column: 60, scope: !9286)
!9326 = !DILocation(line: 4569, column: 58, scope: !9286)
!9327 = !DILocation(line: 4569, column: 51, scope: !9286)
!9328 = !DILocation(line: 4572, column: 24, scope: !9286)
!9329 = !DILocation(line: 4572, column: 5, scope: !9286)
!9330 = !DILocation(line: 4573, column: 5, scope: !9286)
!9331 = !DILocation(line: 4575, column: 5, scope: !9286)
!9332 = !DILocation(line: 4576, column: 1, scope: !9286)
!9333 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1277, file: !1277, line: 4488, type: !8763, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9334)
!9334 = !{!9335, !9336}
!9335 = !DILocalVariable(name: "D", arg: 1, scope: !9333, file: !1277, line: 4488, type: !1447)
!9336 = !DILocalVariable(name: "status", scope: !9333, file: !1277, line: 4490, type: !1499)
!9337 = !DILocation(line: 0, scope: !9333)
!9338 = !DILocation(line: 4490, column: 5, scope: !9333)
!9339 = !DILocation(line: 4491, column: 5, scope: !9333)
!9340 = !DILocation(line: 4492, column: 32, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9333, file: !1277, line: 4491, column: 10)
!9342 = !DILocation(line: 4492, column: 40, scope: !9341)
!9343 = !DILocation(line: 4492, column: 45, scope: !9341)
!9344 = !DILocation(line: 4492, column: 9, scope: !9341)
!9345 = !DILocation(line: 4493, column: 20, scope: !9333)
!9346 = !DILocation(line: 4493, column: 32, scope: !9333)
!9347 = !DILocation(line: 4493, column: 29, scope: !9333)
!9348 = !DILocation(line: 4493, column: 27, scope: !9333)
!9349 = !DILocation(line: 4493, column: 16, scope: !9333)
!9350 = !DILocation(line: 4493, column: 5, scope: !9341)
!9351 = distinct !{!9351, !9339, !9352}
!9352 = !DILocation(line: 4493, column: 54, scope: !9333)
!9353 = !DILocation(line: 4494, column: 1, scope: !9333)
!9354 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1277, file: !1277, line: 1742, type: !9193, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9355)
!9355 = !{!9356, !9357, !9358}
!9356 = !DILocalVariable(name: "driver", arg: 1, scope: !9354, file: !1277, line: 1742, type: !9195)
!9357 = !DILocalVariable(name: "D", arg: 2, scope: !9354, file: !1277, line: 1742, type: !1447)
!9358 = !DILocalVariable(name: "smap", scope: !9354, file: !1277, line: 1744, type: !1498)
!9359 = !DILocation(line: 0, scope: !9354)
!9360 = !DILocation(line: 1747, column: 15, scope: !9354)
!9361 = !DILocation(line: 1748, column: 22, scope: !9354)
!9362 = !DILocation(line: 1749, column: 5, scope: !9354)
!9363 = !DILocation(line: 1749, column: 22, scope: !9354)
!9364 = !DILocation(line: 1750, column: 5, scope: !9354)
!9365 = !DILocation(line: 1750, column: 22, scope: !9354)
!9366 = !DILocation(line: 1751, column: 5, scope: !9354)
!9367 = !DILocation(line: 1751, column: 22, scope: !9354)
!9368 = !DILocation(line: 1752, column: 5, scope: !9354)
!9369 = !DILocation(line: 1752, column: 22, scope: !9354)
!9370 = !DILocation(line: 1753, column: 5, scope: !9354)
!9371 = !DILocation(line: 1753, column: 22, scope: !9354)
!9372 = !DILocation(line: 1756, column: 8, scope: !9354)
!9373 = !DILocation(line: 1756, column: 13, scope: !9354)
!9374 = !DILocation(line: 1756, column: 24, scope: !9354)
!9375 = !DILocation(line: 1758, column: 8, scope: !9354)
!9376 = !DILocation(line: 1758, column: 13, scope: !9354)
!9377 = !DILocation(line: 1758, column: 28, scope: !9354)
!9378 = !DILocation(line: 1759, column: 8, scope: !9354)
!9379 = !DILocation(line: 1759, column: 13, scope: !9354)
!9380 = !DILocation(line: 1759, column: 29, scope: !9354)
!9381 = !DILocation(line: 1760, column: 8, scope: !9354)
!9382 = !DILocation(line: 1760, column: 13, scope: !9354)
!9383 = !DILocation(line: 1760, column: 23, scope: !9354)
!9384 = !DILocation(line: 1761, column: 8, scope: !9354)
!9385 = !DILocation(line: 1761, column: 13, scope: !9354)
!9386 = !DILocation(line: 1761, column: 24, scope: !9354)
!9387 = !DILocation(line: 1762, column: 8, scope: !9354)
!9388 = !DILocation(line: 1762, column: 13, scope: !9354)
!9389 = !DILocation(line: 1762, column: 21, scope: !9354)
!9390 = !DILocation(line: 1763, column: 8, scope: !9354)
!9391 = !DILocation(line: 1763, column: 13, scope: !9354)
!9392 = !DILocation(line: 1763, column: 20, scope: !9354)
!9393 = !DILocation(line: 1764, column: 8, scope: !9354)
!9394 = !DILocation(line: 1764, column: 23, scope: !9354)
!9395 = !DILocation(line: 1768, column: 8, scope: !9354)
!9396 = !DILocation(line: 1768, column: 20, scope: !9354)
!9397 = !DILocation(line: 1770, column: 5, scope: !9354)
!9398 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1277, file: !1277, line: 1775, type: !9193, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9399)
!9399 = !{!9400, !9401}
!9400 = !DILocalVariable(name: "driver", arg: 1, scope: !9398, file: !1277, line: 1775, type: !9195)
!9401 = !DILocalVariable(name: "D", arg: 2, scope: !9398, file: !1277, line: 1775, type: !1447)
!9402 = !DILocation(line: 0, scope: !9398)
!9403 = !DILocation(line: 1793, column: 5, scope: !9398)
!9404 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1277, file: !1277, line: 1932, type: !9193, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9405)
!9405 = !{!9406, !9407}
!9406 = !DILocalVariable(name: "driver", arg: 1, scope: !9404, file: !1277, line: 1932, type: !9195)
!9407 = !DILocalVariable(name: "D", arg: 2, scope: !9404, file: !1277, line: 1932, type: !1447)
!9408 = !DILocation(line: 0, scope: !9404)
!9409 = !DILocation(line: 1935, column: 13, scope: !9404)
!9410 = !DILocation(line: 1935, column: 25, scope: !9404)
!9411 = !DILocation(line: 1936, column: 13, scope: !9404)
!9412 = !DILocation(line: 1936, column: 22, scope: !9404)
!9413 = !DILocation(line: 1937, column: 13, scope: !9404)
!9414 = !DILocation(line: 1937, column: 23, scope: !9404)
!9415 = !DILocation(line: 1939, column: 13, scope: !9404)
!9416 = !DILocation(line: 1939, column: 24, scope: !9404)
!9417 = !DILocation(line: 1940, column: 13, scope: !9404)
!9418 = !DILocation(line: 1940, column: 25, scope: !9404)
!9419 = !DILocation(line: 1945, column: 13, scope: !9404)
!9420 = !DILocation(line: 1945, column: 32, scope: !9404)
!9421 = !DILocation(line: 1946, column: 13, scope: !9404)
!9422 = !DILocation(line: 1946, column: 30, scope: !9404)
!9423 = !DILocation(line: 1947, column: 13, scope: !9404)
!9424 = !DILocation(line: 1947, column: 26, scope: !9404)
!9425 = !DILocation(line: 1948, column: 13, scope: !9404)
!9426 = !DILocation(line: 1948, column: 25, scope: !9404)
!9427 = !DILocation(line: 1949, column: 13, scope: !9404)
!9428 = !DILocation(line: 1949, column: 24, scope: !9404)
!9429 = !DILocation(line: 1956, column: 13, scope: !9404)
!9430 = !DILocation(line: 1956, column: 23, scope: !9404)
!9431 = !DILocation(line: 1957, column: 13, scope: !9404)
!9432 = !DILocation(line: 1957, column: 28, scope: !9404)
!9433 = !DILocation(line: 1960, column: 13, scope: !9404)
!9434 = !DILocation(line: 1960, column: 30, scope: !9404)
!9435 = !DILocation(line: 1961, column: 13, scope: !9404)
!9436 = !DILocation(line: 1961, column: 30, scope: !9404)
!9437 = !DILocation(line: 1962, column: 13, scope: !9404)
!9438 = !DILocation(line: 1962, column: 20, scope: !9404)
!9439 = !DILocation(line: 1968, column: 9, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9404, file: !1277, line: 1968, column: 9)
!9441 = !DILocation(line: 1968, column: 36, scope: !9440)
!9442 = !DILocation(line: 1968, column: 9, scope: !9404)
!9443 = !DILocation(line: 1971, column: 12, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9440, file: !1277, line: 1970, column: 5)
!9445 = !DILocation(line: 1971, column: 25, scope: !9444)
!9446 = !DILocation(line: 1979, column: 8, scope: !9404)
!9447 = !DILocation(line: 1979, column: 13, scope: !9404)
!9448 = !DILocation(line: 1979, column: 25, scope: !9404)
!9449 = !DILocation(line: 1980, column: 8, scope: !9404)
!9450 = !DILocation(line: 1980, column: 13, scope: !9404)
!9451 = !DILocation(line: 1980, column: 24, scope: !9404)
!9452 = !DILocation(line: 1981, column: 8, scope: !9404)
!9453 = !DILocation(line: 1981, column: 13, scope: !9404)
!9454 = !DILocation(line: 1981, column: 24, scope: !9404)
!9455 = !DILocation(line: 1982, column: 8, scope: !9404)
!9456 = !DILocation(line: 1982, column: 13, scope: !9404)
!9457 = !DILocation(line: 1982, column: 22, scope: !9404)
!9458 = !DILocation(line: 1983, column: 8, scope: !9404)
!9459 = !DILocation(line: 1983, column: 13, scope: !9404)
!9460 = !DILocation(line: 1983, column: 21, scope: !9404)
!9461 = !DILocation(line: 1984, column: 8, scope: !9404)
!9462 = !DILocation(line: 1984, column: 13, scope: !9404)
!9463 = !DILocation(line: 1984, column: 22, scope: !9404)
!9464 = !DILocation(line: 1985, column: 8, scope: !9404)
!9465 = !DILocation(line: 1985, column: 13, scope: !9404)
!9466 = !DILocation(line: 1985, column: 22, scope: !9404)
!9467 = !DILocation(line: 1986, column: 8, scope: !9404)
!9468 = !DILocation(line: 1986, column: 13, scope: !9404)
!9469 = !DILocation(line: 1986, column: 21, scope: !9404)
!9470 = !DILocation(line: 1987, column: 8, scope: !9404)
!9471 = !DILocation(line: 1987, column: 13, scope: !9404)
!9472 = !DILocation(line: 1987, column: 20, scope: !9404)
!9473 = !DILocation(line: 1988, column: 8, scope: !9404)
!9474 = !DILocation(line: 1988, column: 13, scope: !9404)
!9475 = !DILocation(line: 1988, column: 25, scope: !9404)
!9476 = !DILocation(line: 1989, column: 8, scope: !9404)
!9477 = !DILocation(line: 1989, column: 13, scope: !9404)
!9478 = !DILocation(line: 1989, column: 22, scope: !9404)
!9479 = !DILocation(line: 1990, column: 8, scope: !9404)
!9480 = !DILocation(line: 1990, column: 13, scope: !9404)
!9481 = !DILocation(line: 1990, column: 22, scope: !9404)
!9482 = !DILocation(line: 1993, column: 8, scope: !9404)
!9483 = !DILocation(line: 1993, column: 13, scope: !9404)
!9484 = !DILocation(line: 1993, column: 26, scope: !9404)
!9485 = !DILocation(line: 1996, column: 8, scope: !9404)
!9486 = !DILocation(line: 1996, column: 20, scope: !9404)
!9487 = !DILocation(line: 1999, column: 8, scope: !9404)
!9488 = !DILocation(line: 1999, column: 24, scope: !9404)
!9489 = !DILocation(line: 2000, column: 8, scope: !9404)
!9490 = !DILocation(line: 2000, column: 19, scope: !9404)
!9491 = !DILocation(line: 2001, column: 8, scope: !9404)
!9492 = !DILocation(line: 2001, column: 24, scope: !9404)
!9493 = !DILocation(line: 2002, column: 8, scope: !9404)
!9494 = !DILocation(line: 2002, column: 23, scope: !9404)
!9495 = !DILocation(line: 2004, column: 5, scope: !9404)
!9496 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1277, file: !1277, line: 2160, type: !1746, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9497)
!9497 = !{!9498, !9499, !9500, !9513, !9514, !9515}
!9498 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9496, file: !1277, line: 2160, type: !88)
!9499 = !DILocalVariable(name: "Info", arg: 2, scope: !9496, file: !1277, line: 2160, type: !88)
!9500 = !DILocalVariable(name: "FlashInfo", scope: !9496, file: !1277, line: 2162, type: !9501)
!9501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9502, size: 32)
!9502 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1473, line: 99, baseType: !9503)
!9503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 90, size: 928, elements: !9504)
!9504 = !{!9505, !9506, !9507, !9508, !9509, !9510, !9511, !9512}
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9503, file: !1473, line: 91, baseType: !61, size: 32)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9503, file: !1473, line: 92, baseType: !1802, size: 256, offset: 32)
!9507 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9503, file: !1473, line: 93, baseType: !1802, size: 256, offset: 288)
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9503, file: !1473, line: 94, baseType: !1802, size: 256, offset: 544)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9503, file: !1473, line: 95, baseType: !61, size: 32, offset: 800)
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9503, file: !1473, line: 96, baseType: !1794, size: 16, offset: 832)
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9503, file: !1473, line: 97, baseType: !61, size: 32, offset: 864)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9503, file: !1473, line: 98, baseType: !61, size: 32, offset: 896)
!9513 = !DILocalVariable(name: "D", scope: !9496, file: !1277, line: 2163, type: !1447)
!9514 = !DILocalVariable(name: "i", scope: !9496, file: !1277, line: 2164, type: !61)
!9515 = !DILocalVariable(name: "result", scope: !9496, file: !1277, line: 2166, type: !1156)
!9516 = !DILocation(line: 0, scope: !9496)
!9517 = !DILocation(line: 2163, column: 37, scope: !9496)
!9518 = !DILocation(line: 2202, column: 16, scope: !9496)
!9519 = !DILocation(line: 2202, column: 28, scope: !9496)
!9520 = !DILocation(line: 2204, column: 15, scope: !9496)
!9521 = !DILocation(line: 2204, column: 29, scope: !9496)
!9522 = !DILocation(line: 2204, column: 39, scope: !9496)
!9523 = !DILocation(line: 2204, column: 5, scope: !9496)
!9524 = !DILocation(line: 2205, column: 9, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9496, file: !1277, line: 2204, column: 45)
!9526 = !DILocation(line: 2205, column: 33, scope: !9525)
!9527 = !DILocation(line: 2206, column: 41, scope: !9525)
!9528 = !DILocation(line: 2206, column: 55, scope: !9525)
!9529 = !DILocation(line: 2206, column: 9, scope: !9525)
!9530 = !DILocation(line: 2206, column: 36, scope: !9525)
!9531 = !DILocation(line: 2207, column: 38, scope: !9525)
!9532 = !DILocation(line: 2207, column: 52, scope: !9525)
!9533 = !DILocation(line: 2207, column: 32, scope: !9525)
!9534 = !DILocation(line: 2209, column: 10, scope: !9525)
!9535 = distinct !{!9535, !9523, !9536}
!9536 = !DILocation(line: 2210, column: 5, scope: !9496)
!9537 = !DILocation(line: 2212, column: 16, scope: !9496)
!9538 = !DILocation(line: 2212, column: 32, scope: !9496)
!9539 = !DILocation(line: 2213, column: 16, scope: !9496)
!9540 = !DILocation(line: 2213, column: 25, scope: !9496)
!9541 = !DILocation(line: 2236, column: 5, scope: !9496)
!9542 = !DILocation(line: 2238, column: 5, scope: !9496)
!9543 = !DILocation(line: 2239, column: 18, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9496, file: !1277, line: 2238, column: 10)
!9545 = !DILocation(line: 2240, column: 34, scope: !9496)
!9546 = !DILocation(line: 2240, column: 5, scope: !9544)
!9547 = distinct !{!9547, !9542, !9548}
!9548 = !DILocation(line: 2240, column: 43, scope: !9496)
!9549 = !DILocation(line: 2259, column: 5, scope: !9496)
!9550 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1277, file: !1277, line: 2275, type: !1547, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9551)
!9551 = !{!9552, !9553, !9554, !9555}
!9552 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9550, file: !1277, line: 2275, type: !88)
!9553 = !DILocalVariable(name: "D", scope: !9550, file: !1277, line: 2278, type: !1447)
!9554 = !DILocalVariable(name: "status", scope: !9550, file: !1277, line: 2279, type: !1499)
!9555 = !DILocalVariable(name: "saved_mask", scope: !9550, file: !1277, line: 2280, type: !61)
!9556 = !DILocation(line: 0, scope: !9550)
!9557 = !DILocation(line: 2278, column: 33, scope: !9550)
!9558 = !DILocation(line: 2286, column: 5, scope: !9550)
!9559 = !DILocation(line: 2293, column: 9, scope: !9550)
!9560 = !DILocation(line: 2294, column: 26, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9550, file: !1277, line: 2293, column: 19)
!9562 = !DILocation(line: 2297, column: 17, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9561, file: !1277, line: 2297, column: 17)
!9564 = !DILocation(line: 2297, column: 17, scope: !9561)
!9565 = !DILocation(line: 2298, column: 17, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !1277, line: 2297, column: 36)
!9567 = !DILocation(line: 2299, column: 37, scope: !9566)
!9568 = !DILocation(line: 2300, column: 13, scope: !9566)
!9569 = !DILocation(line: 2303, column: 50, scope: !9561)
!9570 = !DILocation(line: 2303, column: 55, scope: !9561)
!9571 = !DILocation(line: 2303, column: 22, scope: !9561)
!9572 = !DILocation(line: 2306, column: 35, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9561, file: !1277, line: 2306, column: 17)
!9574 = !DILocation(line: 2306, column: 32, scope: !9573)
!9575 = !DILocation(line: 2306, column: 30, scope: !9573)
!9576 = !DILocation(line: 2306, column: 19, scope: !9573)
!9577 = !DILocation(line: 2306, column: 17, scope: !9561)
!9578 = !DILocation(line: 2307, column: 17, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9573, file: !1277, line: 2306, column: 59)
!9580 = !DILocation(line: 2308, column: 17, scope: !9579)
!9581 = !DILocation(line: 2315, column: 12, scope: !9550)
!9582 = !DILocation(line: 2315, column: 21, scope: !9550)
!9583 = !DILocation(line: 2325, column: 9, scope: !9550)
!9584 = !DILocation(line: 2326, column: 5, scope: !9550)
!9585 = !DILocation(line: 2311, column: 17, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9573, file: !1277, line: 2310, column: 20)
!9587 = distinct !{!9587, !9559, !9588}
!9588 = !DILocation(line: 2313, column: 9, scope: !9550)
!9589 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1277, file: !1277, line: 2819, type: !1755, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9590)
!9590 = !{!9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9603, !9604}
!9591 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9589, file: !1277, line: 2819, type: !88)
!9592 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9589, file: !1277, line: 2819, type: !61)
!9593 = !DILocalVariable(name: "result", scope: !9589, file: !1277, line: 2821, type: !1156)
!9594 = !DILocalVariable(name: "blocksize", scope: !9589, file: !1277, line: 2822, type: !61)
!9595 = !DILocalVariable(name: "eraseunit", scope: !9589, file: !1277, line: 2823, type: !61)
!9596 = !DILocalVariable(name: "eraseaddr", scope: !9589, file: !1277, line: 2824, type: !61)
!9597 = !DILocalVariable(name: "iteration", scope: !9589, file: !1277, line: 2825, type: !61)
!9598 = !DILocalVariable(name: "D", scope: !9589, file: !1277, line: 2826, type: !1447)
!9599 = !DILocalVariable(name: "erase_block", scope: !9589, file: !1277, line: 2827, type: !61)
!9600 = !DILocalVariable(name: "a", scope: !9601, file: !1277, line: 2853, type: !61)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !1277, line: 2852, column: 56)
!9602 = distinct !DILexicalBlock(scope: !9589, file: !1277, line: 2852, column: 9)
!9603 = !DILocalVariable(name: "b", scope: !9601, file: !1277, line: 2853, type: !61)
!9604 = !DILocalVariable(name: "c", scope: !9601, file: !1277, line: 2853, type: !61)
!9605 = !DILocation(line: 0, scope: !9589)
!9606 = !DILocation(line: 2826, column: 30, scope: !9589)
!9607 = !DILocation(line: 2829, column: 5, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !1277, line: 2829, column: 5)
!9609 = distinct !DILexicalBlock(scope: !9589, file: !1277, line: 2829, column: 5)
!9610 = !DILocation(line: 2829, column: 5, scope: !9609)
!9611 = !DILocation(line: 2829, column: 5, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9608, file: !1277, line: 2829, column: 5)
!9613 = !DILocation(line: 2836, column: 9, scope: !9589)
!9614 = !DILocation(line: 2838, column: 8, scope: !9589)
!9615 = !DILocation(line: 2838, column: 21, scope: !9589)
!9616 = !DILocation(line: 2847, column: 5, scope: !9589)
!9617 = !DILocation(line: 2848, column: 18, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9589, file: !1277, line: 2847, column: 10)
!9619 = !DILocation(line: 2850, column: 34, scope: !9589)
!9620 = !DILocation(line: 2850, column: 5, scope: !9618)
!9621 = distinct !{!9621, !9616, !9622}
!9622 = !DILocation(line: 2850, column: 43, scope: !9589)
!9623 = !DILocation(line: 2839, column: 32, scope: !9589)
!9624 = !DILocation(line: 2861, column: 53, scope: !9601)
!9625 = !DILocation(line: 2861, column: 40, scope: !9601)
!9626 = !DILocation(line: 2861, column: 25, scope: !9601)
!9627 = !DILocation(line: 2874, column: 16, scope: !9601)
!9628 = !DILocation(line: 2874, column: 13, scope: !9601)
!9629 = !DILocation(line: 0, scope: !9601)
!9630 = !DILocation(line: 2875, column: 24, scope: !9601)
!9631 = !DILocation(line: 2877, column: 21, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9601, file: !1277, line: 2877, column: 13)
!9633 = !DILocation(line: 2877, column: 13, scope: !9601)
!9634 = !DILocation(line: 2879, column: 23, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9636, file: !1277, line: 2879, column: 21)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !1277, line: 2878, column: 120)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !1277, line: 2878, column: 13)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !1277, line: 2878, column: 13)
!9639 = distinct !DILexicalBlock(scope: !9632, file: !1277, line: 2877, column: 27)
!9640 = !DILocation(line: 2879, column: 21, scope: !9636)
!9641 = !DILocation(line: 2878, column: 48, scope: !9637)
!9642 = !DILocation(line: 2878, column: 83, scope: !9637)
!9643 = !DILocation(line: 2878, column: 113, scope: !9637)
!9644 = !DILocation(line: 2878, column: 35, scope: !9637)
!9645 = !DILocation(line: 2878, column: 13, scope: !9638)
!9646 = distinct !{!9646, !9645, !9647}
!9647 = !DILocation(line: 2883, column: 13, scope: !9638)
!9648 = !DILocation(line: 2863, column: 19, scope: !9601)
!9649 = !DILocation(line: 2825, column: 24, scope: !9589)
!9650 = !DILocation(line: 2886, column: 9, scope: !9601)
!9651 = !DILocation(line: 2888, column: 36, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9601, file: !1277, line: 2886, column: 31)
!9653 = !DILocation(line: 2888, column: 41, scope: !9652)
!9654 = !DILocation(line: 2889, column: 17, scope: !9652)
!9655 = !DILocation(line: 2891, column: 36, scope: !9652)
!9656 = !DILocation(line: 2891, column: 41, scope: !9652)
!9657 = !DILocation(line: 2892, column: 17, scope: !9652)
!9658 = !DILocation(line: 2894, column: 36, scope: !9652)
!9659 = !DILocation(line: 2894, column: 41, scope: !9652)
!9660 = !DILocation(line: 2895, column: 17, scope: !9652)
!9661 = !DILocation(line: 2897, column: 17, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !1277, line: 2897, column: 17)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !1277, line: 2897, column: 17)
!9664 = distinct !DILexicalBlock(scope: !9652, file: !1277, line: 2897, column: 17)
!9665 = !DILocation(line: 0, scope: !9652)
!9666 = !DILocation(line: 2906, column: 5, scope: !9589)
!9667 = !DILocation(line: 2908, column: 32, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9589, file: !1277, line: 2906, column: 27)
!9669 = !DILocation(line: 2908, column: 37, scope: !9668)
!9670 = !DILocation(line: 2909, column: 13, scope: !9668)
!9671 = !DILocation(line: 2911, column: 32, scope: !9668)
!9672 = !DILocation(line: 2911, column: 37, scope: !9668)
!9673 = !DILocation(line: 2912, column: 13, scope: !9668)
!9674 = !DILocation(line: 2914, column: 32, scope: !9668)
!9675 = !DILocation(line: 2914, column: 37, scope: !9668)
!9676 = !DILocation(line: 2915, column: 13, scope: !9668)
!9677 = !DILocation(line: 0, scope: !9668)
!9678 = !DILocation(line: 2921, column: 56, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !1277, line: 2921, column: 5)
!9680 = distinct !DILexicalBlock(scope: !9589, file: !1277, line: 2921, column: 5)
!9681 = !DILocation(line: 2921, column: 5, scope: !9680)
!9682 = !DILocation(line: 2921, column: 35, scope: !9680)
!9683 = !DILocation(line: 2921, column: 22, scope: !9680)
!9684 = !DILocation(line: 2922, column: 9, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9679, file: !1277, line: 2921, column: 99)
!9686 = !DILocation(line: 2929, column: 9, scope: !9685)
!9687 = !DILocation(line: 2938, column: 26, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9685, file: !1277, line: 2929, column: 26)
!9689 = !DILocation(line: 2939, column: 37, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9688, file: !1277, line: 2939, column: 17)
!9691 = !DILocation(line: 2939, column: 17, scope: !9688)
!9692 = distinct !{!9692, !9686, !9693}
!9693 = !DILocation(line: 2943, column: 9, scope: !9685)
!9694 = !DILocation(line: 2921, column: 71, scope: !9679)
!9695 = !DILocation(line: 2921, column: 85, scope: !9679)
!9696 = distinct !{!9696, !9681, !9697}
!9697 = !DILocation(line: 2983, column: 5, scope: !9680)
!9698 = !DILocation(line: 2985, column: 21, scope: !9589)
!9699 = !DILocation(line: 2992, column: 9, scope: !9589)
!9700 = !DILocation(line: 3000, column: 5, scope: !9589)
!9701 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1277, file: !1277, line: 2533, type: !1759, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9702)
!9702 = !{!9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716}
!9703 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9701, file: !1277, line: 2533, type: !88)
!9704 = !DILocalVariable(name: "Address", arg: 2, scope: !9701, file: !1277, line: 2533, type: !88)
!9705 = !DILocalVariable(name: "Data", arg: 3, scope: !9701, file: !1277, line: 2533, type: !88)
!9706 = !DILocalVariable(name: "Length", arg: 4, scope: !9701, file: !1277, line: 2533, type: !61)
!9707 = !DILocalVariable(name: "D", scope: !9701, file: !1277, line: 2535, type: !1447)
!9708 = !DILocalVariable(name: "savedMask", scope: !9701, file: !1277, line: 2536, type: !61)
!9709 = !DILocalVariable(name: "address", scope: !9701, file: !1277, line: 2537, type: !61)
!9710 = !DILocalVariable(name: "p_data", scope: !9701, file: !1277, line: 2538, type: !762)
!9711 = !DILocalVariable(name: "p_data_first", scope: !9701, file: !1277, line: 2539, type: !762)
!9712 = !DILocalVariable(name: "result", scope: !9701, file: !1277, line: 2540, type: !1156)
!9713 = !DILocalVariable(name: "written", scope: !9701, file: !1277, line: 2541, type: !61)
!9714 = !DILocalVariable(name: "length", scope: !9701, file: !1277, line: 2542, type: !61)
!9715 = !DILocalVariable(name: "cmd1", scope: !9701, file: !1277, line: 2543, type: !61)
!9716 = !DILocalVariable(name: "j", scope: !9717, file: !1277, line: 2599, type: !61)
!9717 = distinct !DILexicalBlock(scope: !9718, file: !1277, line: 2597, column: 61)
!9718 = distinct !DILexicalBlock(scope: !9719, file: !1277, line: 2597, column: 13)
!9719 = distinct !DILexicalBlock(scope: !9701, file: !1277, line: 2583, column: 25)
!9720 = !DILocation(line: 0, scope: !9701)
!9721 = !DILocation(line: 2535, column: 26, scope: !9701)
!9722 = !DILocation(line: 2537, column: 37, scope: !9701)
!9723 = !DILocation(line: 2538, column: 5, scope: !9701)
!9724 = !DILocation(line: 2538, column: 19, scope: !9701)
!9725 = !DILocation(line: 2542, column: 5, scope: !9701)
!9726 = !DILocation(line: 2545, column: 5, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9728, file: !1277, line: 2545, column: 5)
!9728 = distinct !DILexicalBlock(scope: !9701, file: !1277, line: 2545, column: 5)
!9729 = !DILocation(line: 2545, column: 5, scope: !9728)
!9730 = !DILocation(line: 2545, column: 5, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9727, file: !1277, line: 2545, column: 5)
!9732 = !DILocation(line: 2567, column: 9, scope: !9701)
!9733 = !DILocation(line: 2569, column: 8, scope: !9701)
!9734 = !DILocation(line: 2569, column: 21, scope: !9701)
!9735 = !DILocation(line: 2576, column: 5, scope: !9701)
!9736 = !DILocation(line: 2577, column: 18, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9701, file: !1277, line: 2576, column: 10)
!9738 = !DILocation(line: 2579, column: 34, scope: !9701)
!9739 = !DILocation(line: 2579, column: 5, scope: !9737)
!9740 = distinct !{!9740, !9735, !9741}
!9741 = !DILocation(line: 2579, column: 43, scope: !9701)
!9742 = !DILocation(line: 2583, column: 14, scope: !9701)
!9743 = !DILocation(line: 2583, column: 5, scope: !9701)
!9744 = !DILocation(line: 2584, column: 27, scope: !9719)
!9745 = !DILocation(line: 2592, column: 18, scope: !9719)
!9746 = !DILocation(line: 2592, column: 35, scope: !9719)
!9747 = !DILocation(line: 2592, column: 74, scope: !9719)
!9748 = !DILocation(line: 2592, column: 50, scope: !9719)
!9749 = !DILocation(line: 2592, column: 39, scope: !9719)
!9750 = !DILocation(line: 2595, column: 37, scope: !9719)
!9751 = !DILocation(line: 2595, column: 29, scope: !9719)
!9752 = !DILocation(line: 2595, column: 16, scope: !9719)
!9753 = !DILocation(line: 2597, column: 13, scope: !9718)
!9754 = !DILocation(line: 2597, column: 30, scope: !9718)
!9755 = !DILocation(line: 2597, column: 13, scope: !9719)
!9756 = !DILocation(line: 0, scope: !9717)
!9757 = !DILocation(line: 2600, column: 27, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !1277, line: 2600, column: 13)
!9759 = distinct !DILexicalBlock(scope: !9717, file: !1277, line: 2600, column: 13)
!9760 = !DILocation(line: 2600, column: 13, scope: !9759)
!9761 = !DILocation(line: 2601, column: 38, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9758, file: !1277, line: 2600, column: 42)
!9763 = !DILocation(line: 2601, column: 17, scope: !9762)
!9764 = !DILocation(line: 2601, column: 36, scope: !9762)
!9765 = !DILocation(line: 2600, column: 38, scope: !9758)
!9766 = distinct !{!9766, !9760, !9767}
!9767 = !DILocation(line: 2602, column: 13, scope: !9759)
!9768 = !DILocation(line: 0, scope: !9719)
!9769 = !DILocation(line: 2606, column: 18, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9719, file: !1277, line: 2606, column: 13)
!9771 = !DILocation(line: 2606, column: 29, scope: !9770)
!9772 = !DILocation(line: 2606, column: 13, scope: !9719)
!9773 = !DILocation(line: 2607, column: 13, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !1277, line: 2606, column: 55)
!9775 = !DILocation(line: 2608, column: 9, scope: !9774)
!9776 = !DILocation(line: 2613, column: 16, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9719, file: !1277, line: 2613, column: 13)
!9778 = !DILocation(line: 2613, column: 29, scope: !9777)
!9779 = !DILocation(line: 0, scope: !9777)
!9780 = !DILocation(line: 2613, column: 13, scope: !9719)
!9781 = !DILocation(line: 2614, column: 20, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9777, file: !1277, line: 2613, column: 35)
!9783 = !DILocation(line: 2615, column: 32, scope: !9782)
!9784 = !DILocation(line: 2615, column: 40, scope: !9782)
!9785 = !DILocation(line: 2615, column: 13, scope: !9782)
!9786 = !DILocation(line: 2616, column: 9, scope: !9782)
!9787 = !DILocation(line: 2619, column: 20, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9777, file: !1277, line: 2618, column: 9)
!9789 = !DILocation(line: 2620, column: 32, scope: !9788)
!9790 = !DILocation(line: 2620, column: 40, scope: !9788)
!9791 = !DILocation(line: 2620, column: 13, scope: !9788)
!9792 = !DILocation(line: 2626, column: 21, scope: !9719)
!9793 = !DILocation(line: 2633, column: 37, scope: !9719)
!9794 = !DILocation(line: 2634, column: 45, scope: !9719)
!9795 = !DILocation(line: 2634, column: 42, scope: !9719)
!9796 = !DILocation(line: 2634, column: 40, scope: !9719)
!9797 = !DILocation(line: 2634, column: 58, scope: !9719)
!9798 = !DILocation(line: 2634, column: 29, scope: !9719)
!9799 = !DILocation(line: 2635, column: 28, scope: !9719)
!9800 = !DILocation(line: 2636, column: 9, scope: !9719)
!9801 = !DILocation(line: 2638, column: 26, scope: !9719)
!9802 = !DILocation(line: 2638, column: 9, scope: !9719)
!9803 = !DILocation(line: 2639, column: 29, scope: !9719)
!9804 = !DILocation(line: 2639, column: 9, scope: !9719)
!9805 = !DILocation(line: 2662, column: 9, scope: !9719)
!9806 = !DILocation(line: 2670, column: 9, scope: !9719)
!9807 = !DILocation(line: 2676, column: 89, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9719, file: !1277, line: 2670, column: 13)
!9809 = !DILocation(line: 2676, column: 26, scope: !9808)
!9810 = !DILocation(line: 2678, column: 36, scope: !9719)
!9811 = !DILocation(line: 2678, column: 9, scope: !9808)
!9812 = distinct !{!9812, !9806, !9813}
!9813 = !DILocation(line: 2678, column: 45, scope: !9719)
!9814 = !DILocation(line: 2718, column: 19, scope: !9719)
!9815 = !DILocation(line: 2718, column: 16, scope: !9719)
!9816 = !DILocation(line: 2719, column: 16, scope: !9719)
!9817 = !DILocation(line: 2722, column: 31, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9719, file: !1277, line: 2722, column: 13)
!9819 = !DILocation(line: 2722, column: 13, scope: !9719)
!9820 = distinct !{!9820, !9743, !9821}
!9821 = !DILocation(line: 2725, column: 5, scope: !9701)
!9822 = !DILocation(line: 2748, column: 21, scope: !9701)
!9823 = !DILocation(line: 2755, column: 9, scope: !9701)
!9824 = !DILocation(line: 2757, column: 16, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9701, file: !1277, line: 2757, column: 9)
!9826 = !DILocation(line: 2761, column: 1, scope: !9701)
!9827 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1277, file: !1277, line: 3019, type: !1755, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9828)
!9828 = !{!9829, !9830}
!9829 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9827, file: !1277, line: 3019, type: !88)
!9830 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9827, file: !1277, line: 3019, type: !61)
!9831 = !DILocation(line: 0, scope: !9827)
!9832 = !DILocation(line: 3021, column: 5, scope: !9827)
!9833 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1277, file: !1277, line: 3124, type: !1764, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9834)
!9834 = !{!9835, !9836, !9837, !9838, !9839, !9840, !9841, !9842}
!9835 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9833, file: !1277, line: 3124, type: !88)
!9836 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9833, file: !1277, line: 3124, type: !61)
!9837 = !DILocalVariable(name: "result", scope: !9833, file: !1277, line: 3126, type: !1156)
!9838 = !DILocalVariable(name: "savedMask", scope: !9833, file: !1277, line: 3127, type: !61)
!9839 = !DILocalVariable(name: "D", scope: !9833, file: !1277, line: 3128, type: !1447)
!9840 = !DILocalVariable(name: "status_busy", scope: !9833, file: !1277, line: 3129, type: !1499)
!9841 = !DILocalVariable(name: "status_suspend", scope: !9833, file: !1277, line: 3129, type: !1499)
!9842 = !DILocalVariable(name: "check_status", scope: !9843, file: !1277, line: 3141, type: !1499)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !1277, line: 3140, column: 56)
!9844 = distinct !DILexicalBlock(scope: !9833, file: !1277, line: 3140, column: 9)
!9845 = !DILocation(line: 0, scope: !9833)
!9846 = !DILocation(line: 3128, column: 47, scope: !9833)
!9847 = !DILocation(line: 3131, column: 5, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9849, file: !1277, line: 3131, column: 5)
!9849 = distinct !DILexicalBlock(scope: !9833, file: !1277, line: 3131, column: 5)
!9850 = !DILocation(line: 3131, column: 5, scope: !9849)
!9851 = !DILocation(line: 3131, column: 5, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !1277, line: 3131, column: 5)
!9853 = !DILocation(line: 3134, column: 50, scope: !9833)
!9854 = !DILocation(line: 3134, column: 55, scope: !9833)
!9855 = !DILocation(line: 3134, column: 22, scope: !9833)
!9856 = !DILocation(line: 3135, column: 50, scope: !9833)
!9857 = !DILocation(line: 3135, column: 55, scope: !9833)
!9858 = !DILocation(line: 3135, column: 22, scope: !9833)
!9859 = !DILocation(line: 3138, column: 17, scope: !9833)
!9860 = !DILocation(line: 3140, column: 32, scope: !9844)
!9861 = !DILocation(line: 3140, column: 29, scope: !9844)
!9862 = !DILocation(line: 3140, column: 27, scope: !9844)
!9863 = !DILocation(line: 3140, column: 11, scope: !9844)
!9864 = !DILocation(line: 3140, column: 9, scope: !9833)
!9865 = !DILocation(line: 3141, column: 34, scope: !9843)
!9866 = !DILocation(line: 3141, column: 60, scope: !9843)
!9867 = !DILocation(line: 3141, column: 58, scope: !9843)
!9868 = !DILocation(line: 0, scope: !9843)
!9869 = !DILocation(line: 3144, column: 37, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9843, file: !1277, line: 3144, column: 13)
!9871 = !DILocation(line: 3144, column: 35, scope: !9870)
!9872 = !DILocation(line: 3144, column: 16, scope: !9870)
!9873 = !DILocation(line: 3144, column: 52, scope: !9870)
!9874 = !DILocation(line: 3145, column: 21, scope: !9870)
!9875 = !DILocation(line: 3145, column: 38, scope: !9870)
!9876 = !DILocation(line: 3147, column: 13, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !1277, line: 3147, column: 13)
!9878 = distinct !DILexicalBlock(scope: !9879, file: !1277, line: 3147, column: 13)
!9879 = distinct !DILexicalBlock(scope: !9870, file: !1277, line: 3145, column: 61)
!9880 = !DILocation(line: 3147, column: 13, scope: !9878)
!9881 = !DILocation(line: 3147, column: 13, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9877, file: !1277, line: 3147, column: 13)
!9883 = !DILocation(line: 3150, column: 13, scope: !9879)
!9884 = !DILocation(line: 3151, column: 33, scope: !9879)
!9885 = !DILocation(line: 3153, column: 9, scope: !9879)
!9886 = !DILocation(line: 3155, column: 20, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !1277, line: 3155, column: 17)
!9888 = distinct !DILexicalBlock(scope: !9870, file: !1277, line: 3153, column: 16)
!9889 = !DILocation(line: 3155, column: 31, scope: !9887)
!9890 = !DILocation(line: 3155, column: 17, scope: !9888)
!9891 = !DILocation(line: 3156, column: 36, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9887, file: !1277, line: 3155, column: 54)
!9893 = !DILocation(line: 3156, column: 17, scope: !9892)
!9894 = !DILocation(line: 3157, column: 36, scope: !9892)
!9895 = !DILocation(line: 3157, column: 17, scope: !9892)
!9896 = !DILocation(line: 3158, column: 13, scope: !9892)
!9897 = !DILocation(line: 3191, column: 5, scope: !9833)
!9898 = !DILocation(line: 3193, column: 9, scope: !9833)
!9899 = !DILocation(line: 3160, column: 13, scope: !9888)
!9900 = !DILocation(line: 3173, column: 13, scope: !9888)
!9901 = !DILocation(line: 3194, column: 18, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !1277, line: 3193, column: 32)
!9903 = distinct !DILexicalBlock(scope: !9833, file: !1277, line: 3193, column: 9)
!9904 = !DILocation(line: 3195, column: 5, scope: !9902)
!9905 = !DILocation(line: 3197, column: 5, scope: !9833)
!9906 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1277, file: !1277, line: 3225, type: !1755, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9910, !9911, !9912}
!9908 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9906, file: !1277, line: 3225, type: !88)
!9909 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9906, file: !1277, line: 3225, type: !61)
!9910 = !DILocalVariable(name: "D", scope: !9906, file: !1277, line: 3227, type: !1447)
!9911 = !DILocalVariable(name: "status", scope: !9906, file: !1277, line: 3228, type: !1499)
!9912 = !DILocalVariable(name: "savedMask", scope: !9906, file: !1277, line: 3229, type: !61)
!9913 = !DILocation(line: 0, scope: !9906)
!9914 = !DILocation(line: 3227, column: 30, scope: !9906)
!9915 = !DILocation(line: 3231, column: 17, scope: !9906)
!9916 = !DILocation(line: 3234, column: 5, scope: !9906)
!9917 = !DILocation(line: 3238, column: 5, scope: !9906)
!9918 = !DILocation(line: 3239, column: 46, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9906, file: !1277, line: 3238, column: 15)
!9920 = !DILocation(line: 3239, column: 51, scope: !9919)
!9921 = !DILocation(line: 3239, column: 18, scope: !9919)
!9922 = !DILocation(line: 3241, column: 31, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9919, file: !1277, line: 3241, column: 13)
!9924 = !DILocation(line: 3241, column: 28, scope: !9923)
!9925 = !DILocation(line: 3241, column: 26, scope: !9923)
!9926 = !DILocation(line: 3241, column: 15, scope: !9923)
!9927 = !DILocation(line: 3241, column: 13, scope: !9919)
!9928 = distinct !{!9928, !9917, !9929}
!9929 = !DILocation(line: 3244, column: 5, scope: !9906)
!9930 = !DILocation(line: 3246, column: 5, scope: !9906)
!9931 = !DILocation(line: 3248, column: 5, scope: !9906)
!9932 = !DILocation(line: 3250, column: 5, scope: !9906)
!9933 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1277, file: !1277, line: 3277, type: !1755, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9934)
!9934 = !{!9935, !9936, !9937}
!9935 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9933, file: !1277, line: 3277, type: !88)
!9936 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9933, file: !1277, line: 3277, type: !61)
!9937 = !DILocalVariable(name: "D", scope: !9933, file: !1277, line: 3279, type: !1447)
!9938 = !DILocation(line: 0, scope: !9933)
!9939 = !DILocation(line: 3279, column: 29, scope: !9933)
!9940 = !DILocation(line: 3281, column: 5, scope: !9933)
!9941 = !DILocation(line: 3282, column: 5, scope: !9933)
!9942 = !DILocation(line: 3283, column: 5, scope: !9933)
!9943 = !DILocation(line: 3285, column: 5, scope: !9933)
!9944 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1277, file: !1277, line: 3332, type: !1781, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9945)
!9945 = !{!9946, !9947, !9948}
!9946 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9944, file: !1277, line: 3332, type: !88)
!9947 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !9944, file: !1277, line: 3332, type: !88)
!9948 = !DILocalVariable(name: "ACTION", arg: 3, scope: !9944, file: !1277, line: 3332, type: !61)
!9949 = !DILocation(line: 0, scope: !9944)
!9950 = !DILocation(line: 3334, column: 5, scope: !9944)
!9951 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1277, file: !1277, line: 2350, type: !1789, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9952)
!9952 = !{!9953, !9954, !9955, !9956}
!9953 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9951, file: !1277, line: 2350, type: !88)
!9954 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !9951, file: !1277, line: 2350, type: !61)
!9955 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !9951, file: !1277, line: 2350, type: !88)
!9956 = !DILocalVariable(name: "D", scope: !9951, file: !1277, line: 2352, type: !1447)
!9957 = !DILocation(line: 0, scope: !9951)
!9958 = !DILocation(line: 2353, column: 9, scope: !9951)
!9959 = !DILocation(line: 2354, column: 12, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !1277, line: 2353, column: 51)
!9961 = distinct !DILexicalBlock(scope: !9951, file: !1277, line: 2353, column: 9)
!9962 = !DILocation(line: 2354, column: 9, scope: !9960)
!9963 = !DILocation(line: 2355, column: 5, scope: !9960)
!9964 = !DILocation(line: 2356, column: 17, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !1277, line: 2356, column: 13)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !1277, line: 2355, column: 71)
!9967 = distinct !DILexicalBlock(scope: !9961, file: !1277, line: 2355, column: 16)
!9968 = !DILocation(line: 2356, column: 14, scope: !9965)
!9969 = !DILocation(line: 2356, column: 28, scope: !9965)
!9970 = !DILocation(line: 2356, column: 49, scope: !9965)
!9971 = !DILocation(line: 2356, column: 56, scope: !9965)
!9972 = !DILocation(line: 2356, column: 70, scope: !9965)
!9973 = !DILocation(line: 2356, column: 80, scope: !9965)
!9974 = !DILocation(line: 2356, column: 13, scope: !9966)
!9975 = !DILocation(line: 2361, column: 9, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !1277, line: 2361, column: 9)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !1277, line: 2361, column: 9)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !1277, line: 2361, column: 9)
!9979 = distinct !DILexicalBlock(scope: !9967, file: !1277, line: 2359, column: 12)
!9980 = !DILocation(line: 2363, column: 5, scope: !9951)
!9981 = !DILocation(line: 2364, column: 1, scope: !9951)
!9982 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1277, file: !1277, line: 3355, type: !1547, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !9983)
!9983 = !{!9984, !9985, !9986}
!9984 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9982, file: !1277, line: 3355, type: !88)
!9985 = !DILocalVariable(name: "D", scope: !9982, file: !1277, line: 3357, type: !1447)
!9986 = !DILocalVariable(name: "status", scope: !9982, file: !1277, line: 3358, type: !1029)
!9987 = !DILocation(line: 0, scope: !9982)
!9988 = !DILocation(line: 3366, column: 12, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9982, file: !1277, line: 3366, column: 9)
!9990 = !DILocation(line: 3366, column: 17, scope: !9989)
!9991 = !DILocation(line: 3366, column: 9, scope: !9989)
!9992 = !DILocation(line: 3366, column: 9, scope: !9982)
!9993 = !DILocation(line: 3357, column: 25, scope: !9982)
!9994 = !DILocation(line: 3367, column: 18, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9989, file: !1277, line: 3366, column: 33)
!9996 = !DILocation(line: 3368, column: 25, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9995, file: !1277, line: 3368, column: 13)
!9998 = !DILocation(line: 3368, column: 22, scope: !9997)
!9999 = !DILocation(line: 3368, column: 20, scope: !9997)
!10000 = !DILocation(line: 3368, column: 13, scope: !9995)
!10001 = !DILocation(line: 3373, column: 5, scope: !9982)
!10002 = !DILocation(line: 3374, column: 1, scope: !9982)
!10003 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1277, file: !1277, line: 3044, type: !10004, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !10006)
!10004 = !DISubroutineType(types: !10005)
!10005 = !{!1156, !88, !61, !460}
!10006 = !{!10007, !10008, !10009, !10010, !10011, !10012, !10013, !10014}
!10007 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10003, file: !1277, line: 3044, type: !88)
!10008 = !DILocalVariable(name: "addr", arg: 2, scope: !10003, file: !1277, line: 3044, type: !61)
!10009 = !DILocalVariable(name: "data", arg: 3, scope: !10003, file: !1277, line: 3044, type: !460)
!10010 = !DILocalVariable(name: "savedMask", scope: !10003, file: !1277, line: 3046, type: !61)
!10011 = !DILocalVariable(name: "D", scope: !10003, file: !1277, line: 3047, type: !1447)
!10012 = !DILocalVariable(name: "result", scope: !10003, file: !1277, line: 3048, type: !1156)
!10013 = !DILocalVariable(name: "check_data", scope: !10003, file: !1277, line: 3049, type: !460)
!10014 = !DILocalVariable(name: "status_busy", scope: !10003, file: !1277, line: 3050, type: !1029)
!10015 = !DILocation(line: 0, scope: !10003)
!10016 = !DILocation(line: 3047, column: 43, scope: !10003)
!10017 = !DILocation(line: 3053, column: 47, scope: !10003)
!10018 = !DILocation(line: 3053, column: 52, scope: !10003)
!10019 = !DILocation(line: 3053, column: 19, scope: !10003)
!10020 = !DILocation(line: 3056, column: 9, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10003, file: !1277, line: 3056, column: 9)
!10022 = !DILocation(line: 3056, column: 9, scope: !10003)
!10023 = !DILocation(line: 3058, column: 9, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !1277, line: 3058, column: 9)
!10025 = distinct !DILexicalBlock(scope: !10026, file: !1277, line: 3058, column: 9)
!10026 = distinct !DILexicalBlock(scope: !10021, file: !1277, line: 3056, column: 28)
!10027 = !DILocation(line: 3058, column: 9, scope: !10025)
!10028 = !DILocation(line: 3058, column: 9, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10024, file: !1277, line: 3058, column: 9)
!10030 = !DILocation(line: 3060, column: 9, scope: !10026)
!10031 = !DILocation(line: 3062, column: 29, scope: !10026)
!10032 = !DILocation(line: 3063, column: 5, scope: !10026)
!10033 = !DILocation(line: 3065, column: 38, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10021, file: !1277, line: 3065, column: 15)
!10035 = !DILocation(line: 3065, column: 35, scope: !10034)
!10036 = !DILocation(line: 3065, column: 33, scope: !10034)
!10037 = !DILocation(line: 3065, column: 17, scope: !10034)
!10038 = !DILocation(line: 3065, column: 15, scope: !10021)
!10039 = !DILocation(line: 3066, column: 21, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10034, file: !1277, line: 3065, column: 62)
!10041 = !DILocation(line: 3068, column: 9, scope: !10040)
!10042 = !DILocation(line: 3071, column: 23, scope: !10040)
!10043 = !DILocation(line: 3071, column: 22, scope: !10040)
!10044 = !DILocation(line: 3073, column: 24, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10040, file: !1277, line: 3073, column: 13)
!10046 = !DILocation(line: 3073, column: 13, scope: !10040)
!10047 = !DILocation(line: 3078, column: 16, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !1277, line: 3078, column: 16)
!10049 = distinct !DILexicalBlock(scope: !10045, file: !1277, line: 3075, column: 16)
!10050 = !DILocation(line: 3078, column: 16, scope: !10049)
!10051 = !DILocation(line: 3081, column: 58, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10048, file: !1277, line: 3078, column: 46)
!10053 = !DILocation(line: 3081, column: 17, scope: !10052)
!10054 = !DILocation(line: 3082, column: 22, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10052, file: !1277, line: 3082, column: 21)
!10056 = !DILocation(line: 3082, column: 49, scope: !10055)
!10057 = !DILocation(line: 3082, column: 21, scope: !10052)
!10058 = !DILocation(line: 3088, column: 9, scope: !10040)
!10059 = !DILocation(line: 3091, column: 9, scope: !10003)
!10060 = !DILocation(line: 3092, column: 13, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !1277, line: 3092, column: 13)
!10062 = distinct !DILexicalBlock(scope: !10003, file: !1277, line: 3091, column: 9)
!10063 = !DILocation(line: 3092, column: 33, scope: !10061)
!10064 = !DILocation(line: 3092, column: 13, scope: !10062)
!10065 = !DILocation(line: 3106, column: 5, scope: !10003)
!10066 = !DILocation(line: 3107, column: 1, scope: !10003)
!10067 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1277, file: !1277, line: 3497, type: !10068, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !10070)
!10068 = !DISubroutineType(types: !10069)
!10069 = !{null, !1447, !61}
!10070 = !{!10071, !10072, !10073}
!10071 = !DILocalVariable(name: "D", arg: 1, scope: !10067, file: !1277, line: 3497, type: !1447)
!10072 = !DILocalVariable(name: "addr", arg: 2, scope: !10067, file: !1277, line: 3497, type: !61)
!10073 = !DILocalVariable(name: "savedMask", scope: !10067, file: !1277, line: 3499, type: !61)
!10074 = !DILocation(line: 0, scope: !10067)
!10075 = !DILocation(line: 3501, column: 14, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10067, file: !1277, line: 3501, column: 9)
!10077 = !DILocation(line: 3501, column: 25, scope: !10076)
!10078 = !DILocation(line: 3501, column: 9, scope: !10067)
!10079 = !DILocation(line: 3502, column: 9, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10076, file: !1277, line: 3501, column: 51)
!10081 = !DILocation(line: 3503, column: 5, scope: !10080)
!10082 = !DILocation(line: 3507, column: 17, scope: !10067)
!10083 = !DILocation(line: 3516, column: 5, scope: !10067)
!10084 = !DILocation(line: 3517, column: 31, scope: !10067)
!10085 = !DILocation(line: 3517, column: 38, scope: !10067)
!10086 = !DILocation(line: 3517, column: 43, scope: !10067)
!10087 = !DILocation(line: 3517, column: 59, scope: !10067)
!10088 = !DILocation(line: 3517, column: 56, scope: !10067)
!10089 = !DILocation(line: 3517, column: 5, scope: !10067)
!10090 = !DILocation(line: 3523, column: 5, scope: !10067)
!10091 = !DILocation(line: 3524, column: 1, scope: !10067)
!10092 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1277, file: !1277, line: 2018, type: !9193, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !10093)
!10093 = !{!10094, !10095, !10096}
!10094 = !DILocalVariable(name: "driver", arg: 1, scope: !10092, file: !1277, line: 2018, type: !9195)
!10095 = !DILocalVariable(name: "D", arg: 2, scope: !10092, file: !1277, line: 2018, type: !1447)
!10096 = !DILocalVariable(name: "result", scope: !10092, file: !1277, line: 2020, type: !1156)
!10097 = !DILocation(line: 0, scope: !10092)
!10098 = !DILocation(line: 2022, column: 13, scope: !10092)
!10099 = !DILocation(line: 2022, column: 5, scope: !10092)
!10100 = !DILocation(line: 2031, column: 16, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10092, file: !1277, line: 2022, column: 31)
!10102 = !DILocation(line: 2031, column: 27, scope: !10101)
!10103 = !DILocation(line: 2033, column: 22, scope: !10101)
!10104 = !DILocation(line: 2034, column: 13, scope: !10101)
!10105 = !DILocation(line: 2049, column: 16, scope: !10101)
!10106 = !DILocation(line: 2049, column: 27, scope: !10101)
!10107 = !DILocation(line: 2051, column: 23, scope: !10101)
!10108 = !DILocation(line: 2053, column: 13, scope: !10101)
!10109 = !DILocation(line: 2058, column: 22, scope: !10101)
!10110 = !DILocation(line: 2059, column: 13, scope: !10101)
!10111 = !DILocation(line: 2079, column: 13, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10113, file: !1277, line: 2079, column: 13)
!10113 = distinct !DILexicalBlock(scope: !10114, file: !1277, line: 2079, column: 13)
!10114 = distinct !DILexicalBlock(scope: !10101, file: !1277, line: 2079, column: 13)
!10115 = !DILocation(line: 2083, column: 5, scope: !10092)
!10116 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1277, file: !1277, line: 2100, type: !10117, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !10119)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!1156, !9195, !1447, !61, !61}
!10119 = !{!10120, !10121, !10122, !10123, !10124}
!10120 = !DILocalVariable(name: "driver", arg: 1, scope: !10116, file: !1277, line: 2100, type: !9195)
!10121 = !DILocalVariable(name: "D", arg: 2, scope: !10116, file: !1277, line: 2100, type: !1447)
!10122 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !10116, file: !1277, line: 2100, type: !61)
!10123 = !DILocalVariable(name: "parameter", arg: 4, scope: !10116, file: !1277, line: 2100, type: !61)
!10124 = !DILocalVariable(name: "result", scope: !10116, file: !1277, line: 2102, type: !1156)
!10125 = !DILocation(line: 0, scope: !10116)
!10126 = !DILocation(line: 2105, column: 16, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10116, file: !1277, line: 2105, column: 9)
!10128 = !DILocation(line: 2105, column: 24, scope: !10127)
!10129 = !DILocation(line: 2109, column: 12, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10116, file: !1277, line: 2109, column: 9)
!10131 = !DILocation(line: 2109, column: 16, scope: !10130)
!10132 = !DILocation(line: 2109, column: 24, scope: !10130)
!10133 = !DILocation(line: 2109, column: 30, scope: !10130)
!10134 = !DILocation(line: 2109, column: 40, scope: !10130)
!10135 = !DILocation(line: 2109, column: 9, scope: !10116)
!10136 = !DILocation(line: 2118, column: 19, scope: !10116)
!10137 = !DILocation(line: 2118, column: 8, scope: !10116)
!10138 = !DILocation(line: 2118, column: 17, scope: !10116)
!10139 = !DILocation(line: 2119, column: 23, scope: !10116)
!10140 = !DILocation(line: 2119, column: 8, scope: !10116)
!10141 = !DILocation(line: 2119, column: 21, scope: !10116)
!10142 = !DILocation(line: 2122, column: 5, scope: !10116)
!10143 = !DILocation(line: 2125, column: 8, scope: !10116)
!10144 = !DILocation(line: 2125, column: 13, scope: !10116)
!10145 = !DILocation(line: 2125, column: 24, scope: !10116)
!10146 = !DILocation(line: 2126, column: 26, scope: !10116)
!10147 = !DILocation(line: 2126, column: 5, scope: !10116)
!10148 = !DILocation(line: 2128, column: 9, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10116, file: !1277, line: 2128, column: 9)
!10150 = !DILocation(line: 2128, column: 31, scope: !10149)
!10151 = !DILocation(line: 2128, column: 60, scope: !10149)
!10152 = !DILocation(line: 2128, column: 9, scope: !10116)
!10153 = !DILocation(line: 2129, column: 12, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10149, file: !1277, line: 2128, column: 110)
!10155 = !DILocation(line: 2129, column: 17, scope: !10154)
!10156 = !DILocation(line: 2129, column: 28, scope: !10154)
!10157 = !DILocation(line: 2130, column: 9, scope: !10154)
!10158 = !DILocation(line: 2131, column: 5, scope: !10154)
!10159 = !DILocation(line: 2134, column: 14, scope: !10116)
!10160 = !DILocation(line: 2136, column: 5, scope: !10116)
!10161 = !DILocation(line: 2137, column: 1, scope: !10116)
!10162 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1277, file: !1277, line: 3387, type: !10163, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !10165)
!10163 = !DISubroutineType(types: !10164)
!10164 = !{null, !1447, !762}
!10165 = !{!10166, !10167, !10168}
!10166 = !DILocalVariable(name: "D", arg: 1, scope: !10162, file: !1277, line: 3387, type: !1447)
!10167 = !DILocalVariable(name: "id", arg: 2, scope: !10162, file: !1277, line: 3387, type: !762)
!10168 = !DILocalVariable(name: "cmd", scope: !10162, file: !1277, line: 3389, type: !460)
!10169 = !DILocation(line: 0, scope: !10162)
!10170 = !DILocation(line: 3389, column: 5, scope: !10162)
!10171 = !DILocation(line: 3405, column: 9, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10162, file: !1277, line: 3405, column: 9)
!10173 = !DILocation(line: 3405, column: 21, scope: !10172)
!10174 = !DILocation(line: 0, scope: !10172)
!10175 = !DILocation(line: 3405, column: 9, scope: !10162)
!10176 = !DILocation(line: 3411, column: 31, scope: !10162)
!10177 = !DILocation(line: 3411, column: 5, scope: !10162)
!10178 = !DILocation(line: 3412, column: 1, scope: !10162)
!10179 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1277, file: !1277, line: 3585, type: !10180, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{null, !7962, !762, !762, !7962, !7962}
!10182 = !{!10183, !10184, !10185, !10186, !10187, !10188}
!10183 = !DILocalVariable(name: "CS", arg: 1, scope: !10179, file: !1277, line: 3585, type: !7962)
!10184 = !DILocalVariable(name: "cmd", arg: 2, scope: !10179, file: !1277, line: 3585, type: !762)
!10185 = !DILocalVariable(name: "data", arg: 3, scope: !10179, file: !1277, line: 3585, type: !762)
!10186 = !DILocalVariable(name: "outl", arg: 4, scope: !10179, file: !1277, line: 3585, type: !7962)
!10187 = !DILocalVariable(name: "inl", arg: 5, scope: !10179, file: !1277, line: 3585, type: !7962)
!10188 = !DILocalVariable(name: "savedMask", scope: !10179, file: !1277, line: 3587, type: !61)
!10189 = !DILocation(line: 0, scope: !10179)
!10190 = !DILocation(line: 3589, column: 17, scope: !10179)
!10191 = !DILocation(line: 3590, column: 5, scope: !10179)
!10192 = !DILocation(line: 3591, column: 5, scope: !10179)
!10193 = !DILocation(line: 3593, column: 1, scope: !10179)
!10194 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1600, file: !1600, line: 110, type: !8440, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10195)
!10195 = !{!10196, !10197, !10198, !10199}
!10196 = !DILocalVariable(name: "id", arg: 1, scope: !10194, file: !1600, line: 110, type: !762)
!10197 = !DILocalVariable(name: "i", scope: !10194, file: !1600, line: 114, type: !1156)
!10198 = !DILocalVariable(name: "j", scope: !10194, file: !1600, line: 114, type: !1156)
!10199 = !DILocalVariable(name: "id_list", scope: !10194, file: !1600, line: 115, type: !10200)
!10200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10201, size: 32)
!10201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1678)
!10202 = !DILocation(line: 0, scope: !10194)
!10203 = !DILocation(line: 119, column: 5, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10194, file: !1600, line: 119, column: 5)
!10205 = !DILocation(line: 119, column: 46, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10204, file: !1600, line: 119, column: 5)
!10207 = !DILocation(line: 119, column: 19, scope: !10206)
!10208 = distinct !{!10208, !10203, !10209}
!10209 = !DILocation(line: 131, column: 5, scope: !10204)
!10210 = !DILocation(line: 121, column: 23, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !1600, line: 121, column: 9)
!10212 = distinct !DILexicalBlock(scope: !10213, file: !1600, line: 121, column: 9)
!10213 = distinct !DILexicalBlock(scope: !10206, file: !1600, line: 119, column: 50)
!10214 = !DILocation(line: 121, column: 9, scope: !10212)
!10215 = !DILocation(line: 122, column: 17, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10217, file: !1600, line: 122, column: 17)
!10217 = distinct !DILexicalBlock(scope: !10211, file: !1600, line: 121, column: 51)
!10218 = !DILocation(line: 122, column: 37, scope: !10216)
!10219 = !DILocation(line: 122, column: 34, scope: !10216)
!10220 = !DILocation(line: 122, column: 17, scope: !10217)
!10221 = !DILocation(line: 121, column: 47, scope: !10211)
!10222 = distinct !{!10222, !10214, !10223}
!10223 = !DILocation(line: 125, column: 9, scope: !10212)
!10224 = !DILocation(line: 0, scope: !10212)
!10225 = !DILocation(line: 127, column: 15, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10213, file: !1600, line: 127, column: 13)
!10227 = !DILocation(line: 127, column: 13, scope: !10213)
!10228 = !DILocation(line: 134, column: 1, scope: !10194)
!10229 = distinct !DISubprogram(name: "CMEM_Index", scope: !1600, file: !1600, line: 153, type: !8595, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10230)
!10230 = !{!10231, !10232, !10233, !10240}
!10231 = !DILocalVariable(name: "i", scope: !10229, file: !1600, line: 156, type: !1156)
!10232 = !DILocalVariable(name: "j", scope: !10229, file: !1600, line: 156, type: !1156)
!10233 = !DILocalVariable(name: "id", scope: !10229, file: !1600, line: 157, type: !10234)
!10234 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1671, line: 89, baseType: !10235)
!10235 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1671, line: 86, size: 64, elements: !10236)
!10236 = !{!10237, !10238}
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10235, file: !1671, line: 87, baseType: !1684, size: 64)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10235, file: !1671, line: 88, baseType: !10239, size: 64)
!10239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 64, elements: !463)
!10240 = !DILocalVariable(name: "id_list", scope: !10229, file: !1600, line: 158, type: !10200)
!10241 = !DILocation(line: 157, column: 5, scope: !10229)
!10242 = !DILocation(line: 157, column: 17, scope: !10229)
!10243 = !DILocation(line: 0, scope: !10229)
!10244 = !DILocation(line: 161, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10229, file: !1600, line: 161, column: 9)
!10246 = !DILocation(line: 161, column: 20, scope: !10245)
!10247 = !DILocation(line: 161, column: 9, scope: !10229)
!10248 = !DILocation(line: 172, column: 58, scope: !10229)
!10249 = !DILocation(line: 172, column: 5, scope: !10229)
!10250 = !DILocation(line: 178, column: 5, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10229, file: !1600, line: 178, column: 5)
!10252 = !DILocation(line: 180, column: 23, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !1600, line: 180, column: 9)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !1600, line: 180, column: 9)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !1600, line: 178, column: 53)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !1600, line: 178, column: 5)
!10257 = !DILocation(line: 180, column: 9, scope: !10254)
!10258 = !DILocation(line: 181, column: 17, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10260, file: !1600, line: 181, column: 17)
!10260 = distinct !DILexicalBlock(scope: !10253, file: !1600, line: 180, column: 51)
!10261 = !DILocation(line: 181, column: 37, scope: !10259)
!10262 = !DILocation(line: 181, column: 34, scope: !10259)
!10263 = !DILocation(line: 181, column: 17, scope: !10260)
!10264 = !DILocation(line: 180, column: 47, scope: !10253)
!10265 = distinct !{!10265, !10257, !10266}
!10266 = !DILocation(line: 184, column: 9, scope: !10254)
!10267 = !DILocation(line: 0, scope: !10254)
!10268 = !DILocation(line: 186, column: 15, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10255, file: !1600, line: 186, column: 13)
!10270 = !DILocation(line: 186, column: 13, scope: !10255)
!10271 = !DILocation(line: 188, column: 26, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10269, file: !1600, line: 186, column: 41)
!10273 = !DILocation(line: 188, column: 24, scope: !10272)
!10274 = !DILocation(line: 189, column: 13, scope: !10272)
!10275 = !DILocation(line: 178, column: 46, scope: !10256)
!10276 = !DILocation(line: 178, column: 19, scope: !10256)
!10277 = distinct !{!10277, !10250, !10278}
!10278 = !DILocation(line: 191, column: 5, scope: !10251)
!10279 = !DILocation(line: 222, column: 12, scope: !10229)
!10280 = !DILocation(line: 223, column: 1, scope: !10229)
!10281 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1600, file: !1600, line: 240, type: !10282, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10284)
!10282 = !DISubroutineType(types: !10283)
!10283 = !{!10200, !61}
!10284 = !{!10285}
!10285 = !DILocalVariable(name: "index", arg: 1, scope: !10281, file: !1600, line: 240, type: !61)
!10286 = !DILocation(line: 0, scope: !10281)
!10287 = !DILocation(line: 242, column: 13, scope: !10281)
!10288 = !DILocation(line: 242, column: 5, scope: !10281)
!10289 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1600, file: !1600, line: 254, type: !10290, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10292)
!10290 = !DISubroutineType(types: !10291)
!10291 = !{null, !7962, !88, !1249}
!10292 = !{!10293, !10294, !10295, !10296, !10298, !10299}
!10293 = !DILocalVariable(name: "CS", arg: 1, scope: !10289, file: !1600, line: 254, type: !7962)
!10294 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10289, file: !1600, line: 254, type: !88)
!10295 = !DILocalVariable(name: "flashid", arg: 3, scope: !10289, file: !1600, line: 254, type: !1249)
!10296 = !DILocalVariable(name: "cmd", scope: !10297, file: !1600, line: 258, type: !460)
!10297 = distinct !DILexicalBlock(scope: !10289, file: !1600, line: 257, column: 5)
!10298 = !DILocalVariable(name: "id", scope: !10297, file: !1600, line: 258, type: !1537)
!10299 = !DILocalVariable(name: "i", scope: !10297, file: !1600, line: 258, type: !460)
!10300 = !DILocation(line: 0, scope: !10289)
!10301 = !DILocation(line: 258, column: 9, scope: !10297)
!10302 = !DILocation(line: 258, column: 22, scope: !10297)
!10303 = !DILocation(line: 0, scope: !10297)
!10304 = !DILocation(line: 260, column: 13, scope: !10297)
!10305 = !DILocation(line: 261, column: 9, scope: !10297)
!10306 = !DILocation(line: 263, column: 13, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10297, file: !1600, line: 263, column: 13)
!10308 = !DILocation(line: 263, column: 27, scope: !10307)
!10309 = !DILocation(line: 263, column: 48, scope: !10307)
!10310 = !DILocation(line: 263, column: 13, scope: !10297)
!10311 = !DILocation(line: 264, column: 17, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10307, file: !1600, line: 263, column: 95)
!10313 = !DILocation(line: 265, column: 13, scope: !10312)
!10314 = !DILocation(line: 266, column: 9, scope: !10312)
!10315 = !DILocation(line: 268, column: 9, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10297, file: !1600, line: 268, column: 9)
!10317 = !DILocation(line: 269, column: 26, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !1600, line: 268, column: 50)
!10319 = distinct !DILexicalBlock(scope: !10316, file: !1600, line: 268, column: 9)
!10320 = !DILocation(line: 269, column: 13, scope: !10318)
!10321 = !DILocation(line: 269, column: 24, scope: !10318)
!10322 = !DILocation(line: 268, column: 46, scope: !10319)
!10323 = !DILocation(line: 268, column: 23, scope: !10319)
!10324 = distinct !{!10324, !10315, !10325}
!10325 = !DILocation(line: 270, column: 9, scope: !10316)
!10326 = !DILocation(line: 271, column: 5, scope: !10289)
!10327 = !DILocation(line: 272, column: 5, scope: !10289)
!10328 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1600, file: !1600, line: 285, type: !8440, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10329)
!10329 = !{!10330, !10331, !10332, !10333}
!10330 = !DILocalVariable(name: "id", arg: 1, scope: !10328, file: !1600, line: 285, type: !762)
!10331 = !DILocalVariable(name: "i", scope: !10328, file: !1600, line: 289, type: !1156)
!10332 = !DILocalVariable(name: "j", scope: !10328, file: !1600, line: 289, type: !1156)
!10333 = !DILocalVariable(name: "id_list", scope: !10328, file: !1600, line: 290, type: !10200)
!10334 = !DILocation(line: 0, scope: !10328)
!10335 = !DILocation(line: 294, column: 5, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10328, file: !1600, line: 294, column: 5)
!10337 = !DILocation(line: 294, column: 46, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10336, file: !1600, line: 294, column: 5)
!10339 = !DILocation(line: 294, column: 19, scope: !10338)
!10340 = distinct !{!10340, !10335, !10341}
!10341 = !DILocation(line: 306, column: 5, scope: !10336)
!10342 = !DILocation(line: 296, column: 23, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10344, file: !1600, line: 296, column: 9)
!10344 = distinct !DILexicalBlock(scope: !10345, file: !1600, line: 296, column: 9)
!10345 = distinct !DILexicalBlock(scope: !10338, file: !1600, line: 294, column: 53)
!10346 = !DILocation(line: 296, column: 9, scope: !10344)
!10347 = !DILocation(line: 297, column: 17, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !1600, line: 297, column: 17)
!10349 = distinct !DILexicalBlock(scope: !10343, file: !1600, line: 296, column: 51)
!10350 = !DILocation(line: 297, column: 37, scope: !10348)
!10351 = !DILocation(line: 297, column: 34, scope: !10348)
!10352 = !DILocation(line: 297, column: 17, scope: !10349)
!10353 = !DILocation(line: 296, column: 47, scope: !10343)
!10354 = distinct !{!10354, !10346, !10355}
!10355 = !DILocation(line: 300, column: 9, scope: !10344)
!10356 = !DILocation(line: 0, scope: !10344)
!10357 = !DILocation(line: 302, column: 15, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10345, file: !1600, line: 302, column: 13)
!10359 = !DILocation(line: 302, column: 13, scope: !10345)
!10360 = !DILocation(line: 310, column: 1, scope: !10328)
!10361 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1600, file: !1600, line: 328, type: !8595, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1599, retainedNodes: !10362)
!10362 = !{!10363, !10364, !10365, !10366}
!10363 = !DILocalVariable(name: "i", scope: !10361, file: !1600, line: 331, type: !1156)
!10364 = !DILocalVariable(name: "j", scope: !10361, file: !1600, line: 331, type: !1156)
!10365 = !DILocalVariable(name: "id", scope: !10361, file: !1600, line: 332, type: !10234)
!10366 = !DILocalVariable(name: "id_list", scope: !10361, file: !1600, line: 333, type: !10200)
!10367 = !DILocation(line: 332, column: 5, scope: !10361)
!10368 = !DILocation(line: 332, column: 17, scope: !10361)
!10369 = !DILocation(line: 0, scope: !10361)
!10370 = !DILocation(line: 336, column: 9, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10361, file: !1600, line: 336, column: 9)
!10372 = !DILocation(line: 336, column: 28, scope: !10371)
!10373 = !DILocation(line: 336, column: 9, scope: !10361)
!10374 = !DILocation(line: 344, column: 60, scope: !10361)
!10375 = !DILocation(line: 344, column: 5, scope: !10361)
!10376 = !DILocation(line: 350, column: 5, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10361, file: !1600, line: 350, column: 5)
!10378 = !DILocation(line: 352, column: 23, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10380, file: !1600, line: 352, column: 9)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !1600, line: 352, column: 9)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !1600, line: 350, column: 53)
!10382 = distinct !DILexicalBlock(scope: !10377, file: !1600, line: 350, column: 5)
!10383 = !DILocation(line: 352, column: 9, scope: !10380)
!10384 = !DILocation(line: 353, column: 17, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !1600, line: 353, column: 17)
!10386 = distinct !DILexicalBlock(scope: !10379, file: !1600, line: 352, column: 51)
!10387 = !DILocation(line: 353, column: 37, scope: !10385)
!10388 = !DILocation(line: 353, column: 34, scope: !10385)
!10389 = !DILocation(line: 353, column: 17, scope: !10386)
!10390 = !DILocation(line: 352, column: 47, scope: !10379)
!10391 = distinct !{!10391, !10383, !10392}
!10392 = !DILocation(line: 356, column: 9, scope: !10380)
!10393 = !DILocation(line: 0, scope: !10380)
!10394 = !DILocation(line: 358, column: 15, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10381, file: !1600, line: 358, column: 13)
!10396 = !DILocation(line: 358, column: 13, scope: !10381)
!10397 = !DILocation(line: 360, column: 34, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10395, file: !1600, line: 358, column: 41)
!10399 = !DILocation(line: 360, column: 32, scope: !10398)
!10400 = !DILocation(line: 361, column: 13, scope: !10398)
!10401 = !DILocation(line: 350, column: 46, scope: !10382)
!10402 = !DILocation(line: 350, column: 19, scope: !10382)
!10403 = distinct !{!10403, !10376, !10404}
!10404 = !DILocation(line: 363, column: 5, scope: !10377)
!10405 = !DILocation(line: 364, column: 12, scope: !10361)
!10406 = !DILocation(line: 365, column: 1, scope: !10361)
!10407 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2787, file: !2787, line: 64, type: !10408, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !10414)
!10408 = !DISubroutineType(types: !10409)
!10409 = !{null, !7962, !10410, !1249}
!10410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10411, size: 32)
!10411 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10412)
!10412 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10413, line: 158, baseType: !1029)
!10413 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!10414 = !{!10415, !10416, !10417, !10418, !10419, !10421, !10422}
!10415 = !DILocalVariable(name: "CS", arg: 1, scope: !10407, file: !2787, line: 64, type: !7962)
!10416 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10407, file: !2787, line: 64, type: !10410)
!10417 = !DILocalVariable(name: "flashid", arg: 3, scope: !10407, file: !2787, line: 64, type: !1249)
!10418 = !DILocalVariable(name: "savedMask", scope: !10407, file: !2787, line: 66, type: !61)
!10419 = !DILocalVariable(name: "cmd", scope: !10420, file: !2787, line: 70, type: !460)
!10420 = distinct !DILexicalBlock(scope: !10407, file: !2787, line: 69, column: 5)
!10421 = !DILocalVariable(name: "id", scope: !10420, file: !2787, line: 70, type: !1537)
!10422 = !DILocalVariable(name: "i", scope: !10420, file: !2787, line: 70, type: !460)
!10423 = !DILocation(line: 0, scope: !10407)
!10424 = !DILocation(line: 70, column: 9, scope: !10420)
!10425 = !DILocation(line: 70, column: 22, scope: !10420)
!10426 = !DILocation(line: 0, scope: !10420)
!10427 = !DILocation(line: 72, column: 13, scope: !10420)
!10428 = !DILocation(line: 73, column: 21, scope: !10420)
!10429 = !DILocation(line: 74, column: 9, scope: !10420)
!10430 = !DILocation(line: 75, column: 9, scope: !10420)
!10431 = !DILocation(line: 77, column: 13, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10420, file: !2787, line: 77, column: 13)
!10433 = !DILocation(line: 77, column: 27, scope: !10432)
!10434 = !DILocation(line: 77, column: 48, scope: !10432)
!10435 = !DILocation(line: 77, column: 13, scope: !10420)
!10436 = !DILocation(line: 78, column: 17, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10432, file: !2787, line: 77, column: 87)
!10438 = !DILocation(line: 79, column: 25, scope: !10437)
!10439 = !DILocation(line: 80, column: 13, scope: !10437)
!10440 = !DILocation(line: 81, column: 13, scope: !10437)
!10441 = !DILocation(line: 82, column: 9, scope: !10437)
!10442 = !DILocation(line: 84, column: 9, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10420, file: !2787, line: 84, column: 9)
!10444 = !DILocation(line: 85, column: 26, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !2787, line: 84, column: 50)
!10446 = distinct !DILexicalBlock(scope: !10443, file: !2787, line: 84, column: 9)
!10447 = !DILocation(line: 85, column: 13, scope: !10445)
!10448 = !DILocation(line: 85, column: 24, scope: !10445)
!10449 = !DILocation(line: 84, column: 46, scope: !10446)
!10450 = !DILocation(line: 84, column: 23, scope: !10446)
!10451 = distinct !{!10451, !10442, !10452}
!10452 = !DILocation(line: 86, column: 9, scope: !10443)
!10453 = !DILocation(line: 87, column: 5, scope: !10407)
!10454 = !DILocation(line: 89, column: 1, scope: !10407)
!10455 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1688, file: !1688, line: 248, type: !3987, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10456 = !DILocation(line: 250, column: 5, scope: !10455)
!10457 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1688, file: !1688, line: 270, type: !3987, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10458 = !DILocation(line: 272, column: 5, scope: !10457)
!10459 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1688, file: !1688, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10460 = !DILocation(line: 296, column: 5, scope: !10459)
!10461 = !DILocation(line: 297, column: 5, scope: !10459)
!10462 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1688, file: !1688, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10463 = !DILocation(line: 309, column: 5, scope: !10462)
!10464 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1688, file: !1688, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10465 = !DILocation(line: 317, column: 5, scope: !10464)
!10466 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1688, file: !1688, line: 334, type: !3987, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10467 = !DILocation(line: 336, column: 5, scope: !10466)
!10468 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1688, file: !1688, line: 353, type: !3987, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10469 = !DILocation(line: 355, column: 5, scope: !10468)
!10470 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1688, file: !1688, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10471 = !DILocation(line: 376, column: 5, scope: !10470)
!10472 = !DILocation(line: 377, column: 1, scope: !10470)
!10473 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1688, file: !1688, line: 395, type: !3987, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10474 = !DILocation(line: 397, column: 5, scope: !10473)
!10475 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1688, file: !1688, line: 416, type: !3987, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1687, retainedNodes: !293)
!10476 = !DILocation(line: 418, column: 5, scope: !10475)
!10477 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1699, file: !1699, line: 254, type: !3987, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !293)
!10478 = !DILocation(line: 256, column: 32, scope: !10477)
!10479 = !DILocation(line: 257, column: 5, scope: !10477)
!10480 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1699, file: !1699, line: 269, type: !8595, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !293)
!10481 = !DILocation(line: 275, column: 24, scope: !10480)
!10482 = !DILocation(line: 278, column: 24, scope: !10480)
!10483 = !DILocation(line: 278, column: 33, scope: !10480)
!10484 = !DILocation(line: 278, column: 49, scope: !10480)
!10485 = !DILocation(line: 278, column: 22, scope: !10480)
!10486 = !DILocation(line: 281, column: 5, scope: !10480)
!10487 = !DILocation(line: 283, column: 34, scope: !10480)
!10488 = !DILocation(line: 283, column: 23, scope: !10480)
!10489 = !DILocation(line: 286, column: 25, scope: !10480)
!10490 = !DILocation(line: 321, column: 5, scope: !10480)
!10491 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1699, file: !1699, line: 332, type: !8595, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10492)
!10492 = !{!10493}
!10493 = !DILocalVariable(name: "result", scope: !10491, file: !1699, line: 334, type: !1156)
!10494 = !DILocation(line: 340, column: 30, scope: !10491)
!10495 = !DILocation(line: 343, column: 24, scope: !10491)
!10496 = !DILocation(line: 344, column: 18, scope: !10491)
!10497 = !DILocation(line: 348, column: 17, scope: !10491)
!10498 = !DILocation(line: 353, column: 19, scope: !10491)
!10499 = !DILocation(line: 354, column: 18, scope: !10491)
!10500 = !DILocation(line: 354, column: 27, scope: !10491)
!10501 = !DILocation(line: 354, column: 43, scope: !10491)
!10502 = !DILocation(line: 350, column: 14, scope: !10491)
!10503 = !DILocation(line: 0, scope: !10491)
!10504 = !DILocation(line: 356, column: 16, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10491, file: !1699, line: 356, column: 9)
!10506 = !DILocation(line: 395, column: 1, scope: !10491)
!10507 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1699, file: !1699, line: 406, type: !10508, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !293)
!10508 = !DISubroutineType(types: !2739)
!10509 = !DILocation(line: 408, column: 5, scope: !10507)
!10510 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1699, file: !1699, line: 420, type: !10511, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10513)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{!61, !460}
!10513 = !{!10514, !10515, !10516}
!10514 = !DILocalVariable(name: "CS", arg: 1, scope: !10510, file: !1699, line: 420, type: !460)
!10515 = !DILocalVariable(name: "index", scope: !10510, file: !1699, line: 422, type: !61)
!10516 = !DILocalVariable(name: "list", scope: !10510, file: !1699, line: 423, type: !2016)
!10517 = !DILocation(line: 0, scope: !10510)
!10518 = !DILocation(line: 427, column: 13, scope: !10510)
!10519 = !DILocation(line: 430, column: 34, scope: !10510)
!10520 = !DILocation(line: 430, column: 5, scope: !10510)
!10521 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1699, file: !1699, line: 442, type: !10522, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10524)
!10522 = !DISubroutineType(types: !10523)
!10523 = !{!61, !61, !1888}
!10524 = !{!10525, !10526, !10527}
!10525 = !DILocalVariable(name: "address", arg: 1, scope: !10521, file: !1699, line: 442, type: !61)
!10526 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !10521, file: !1699, line: 442, type: !1888)
!10527 = !DILocalVariable(name: "i", scope: !10521, file: !1699, line: 444, type: !1029)
!10528 = !DILocation(line: 0, scope: !10521)
!10529 = !DILocation(line: 446, column: 23, scope: !10521)
!10530 = !DILocation(line: 448, column: 36, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1699, line: 448, column: 5)
!10532 = distinct !DILexicalBlock(scope: !10521, file: !1699, line: 448, column: 5)
!10533 = !DILocation(line: 448, column: 41, scope: !10531)
!10534 = !DILocation(line: 448, column: 5, scope: !10532)
!10535 = !DILocation(line: 449, column: 39, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !1699, line: 449, column: 13)
!10537 = distinct !DILexicalBlock(scope: !10531, file: !1699, line: 448, column: 54)
!10538 = !DILocation(line: 449, column: 21, scope: !10536)
!10539 = !DILocation(line: 449, column: 46, scope: !10536)
!10540 = !DILocation(line: 450, column: 46, scope: !10536)
!10541 = !DILocation(line: 450, column: 25, scope: !10536)
!10542 = !DILocation(line: 449, column: 13, scope: !10537)
!10543 = !DILocation(line: 448, column: 48, scope: !10531)
!10544 = !DILocation(line: 448, column: 29, scope: !10531)
!10545 = !DILocation(line: 448, column: 31, scope: !10531)
!10546 = distinct !{!10546, !10534, !10547}
!10547 = !DILocation(line: 453, column: 5, scope: !10532)
!10548 = !DILocation(line: 454, column: 27, scope: !10521)
!10549 = !DILocation(line: 454, column: 5, scope: !10521)
!10550 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1699, file: !1699, line: 462, type: !3735, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10551)
!10551 = !{!10552}
!10552 = !DILocalVariable(name: "address", arg: 1, scope: !10550, file: !1699, line: 462, type: !61)
!10553 = !DILocation(line: 0, scope: !10550)
!10554 = !DILocation(line: 464, column: 45, scope: !10550)
!10555 = !DILocation(line: 464, column: 12, scope: !10550)
!10556 = !DILocation(line: 464, column: 5, scope: !10550)
!10557 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1699, file: !1699, line: 487, type: !3735, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10558)
!10558 = !{!10559, !10560, !10561}
!10559 = !DILocalVariable(name: "address", arg: 1, scope: !10557, file: !1699, line: 487, type: !61)
!10560 = !DILocalVariable(name: "index", scope: !10557, file: !1699, line: 490, type: !61)
!10561 = !DILocalVariable(name: "list", scope: !10557, file: !1699, line: 491, type: !2016)
!10562 = !DILocation(line: 0, scope: !10557)
!10563 = !DILocation(line: 490, column: 22, scope: !10557)
!10564 = !DILocation(line: 495, column: 45, scope: !10557)
!10565 = !DILocation(line: 495, column: 12, scope: !10557)
!10566 = !DILocation(line: 495, column: 5, scope: !10557)
!10567 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1699, file: !1699, line: 517, type: !10568, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10572)
!10568 = !DISubroutineType(types: !10569)
!10569 = !{!1156, !10570}
!10570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10571, size: 32)
!10571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1902)
!10572 = !{!10573, !10574, !10575}
!10573 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10567, file: !1699, line: 517, type: !10570)
!10574 = !DILocalVariable(name: "result", scope: !10567, file: !1699, line: 519, type: !61)
!10575 = !DILocalVariable(name: "i", scope: !10567, file: !1699, line: 519, type: !61)
!10576 = !DILocation(line: 0, scope: !10567)
!10577 = !DILocation(line: 522, column: 29, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !1699, line: 522, column: 5)
!10579 = distinct !DILexicalBlock(scope: !10567, file: !1699, line: 522, column: 5)
!10580 = !DILocation(line: 522, column: 38, scope: !10578)
!10581 = !DILocation(line: 522, column: 5, scope: !10579)
!10582 = !DILocation(line: 523, column: 31, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10578, file: !1699, line: 522, column: 51)
!10584 = !DILocation(line: 523, column: 37, scope: !10583)
!10585 = !DILocation(line: 523, column: 16, scope: !10583)
!10586 = !DILocation(line: 522, column: 45, scope: !10578)
!10587 = distinct !{!10587, !10581, !10588}
!10588 = !DILocation(line: 524, column: 5, scope: !10579)
!10589 = !DILocation(line: 525, column: 5, scope: !10567)
!10590 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1699, file: !1699, line: 535, type: !10591, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10593)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!61, !61, !61, !1714, !1888}
!10593 = !{!10594, !10595, !10596, !10597, !10598, !10599, !10600, !10601, !10602}
!10594 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10590, file: !1699, line: 536, type: !61)
!10595 = !DILocalVariable(name: "length", arg: 2, scope: !10590, file: !1699, line: 537, type: !61)
!10596 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10590, file: !1699, line: 538, type: !1714)
!10597 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10590, file: !1699, line: 539, type: !1888)
!10598 = !DILocalVariable(name: "addr", scope: !10590, file: !1699, line: 541, type: !61)
!10599 = !DILocalVariable(name: "ptr", scope: !10590, file: !1699, line: 541, type: !61)
!10600 = !DILocalVariable(name: "blksize", scope: !10590, file: !1699, line: 541, type: !61)
!10601 = !DILocalVariable(name: "total_blocks", scope: !10590, file: !1699, line: 541, type: !61)
!10602 = !DILocalVariable(name: "endaddr", scope: !10590, file: !1699, line: 542, type: !61)
!10603 = !DILocation(line: 0, scope: !10590)
!10604 = !DILocation(line: 542, column: 33, scope: !10590)
!10605 = !DILocation(line: 557, column: 59, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !1699, line: 557, column: 5)
!10607 = distinct !DILexicalBlock(scope: !10590, file: !1699, line: 557, column: 5)
!10608 = !DILocation(line: 557, column: 5, scope: !10607)
!10609 = !DILocation(line: 560, column: 19, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10606, file: !1699, line: 559, column: 5)
!10611 = !DILocation(line: 562, column: 26, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10610, file: !1699, line: 562, column: 13)
!10613 = !DILocation(line: 0, scope: !10612)
!10614 = !DILocation(line: 562, column: 13, scope: !10610)
!10615 = !DILocation(line: 563, column: 39, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10612, file: !1699, line: 562, column: 34)
!10617 = !DILocation(line: 564, column: 29, scope: !10616)
!10618 = !DILocation(line: 564, column: 42, scope: !10616)
!10619 = !DILocation(line: 565, column: 9, scope: !10616)
!10620 = !DILocation(line: 567, column: 45, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10612, file: !1699, line: 567, column: 18)
!10622 = !DILocation(line: 567, column: 26, scope: !10621)
!10623 = !DILocation(line: 567, column: 18, scope: !10612)
!10624 = !DILocation(line: 568, column: 29, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10621, file: !1699, line: 567, column: 59)
!10626 = !DILocation(line: 568, column: 41, scope: !10625)
!10627 = !DILocation(line: 569, column: 9, scope: !10625)
!10628 = !DILocation(line: 572, column: 16, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10621, file: !1699, line: 571, column: 14)
!10630 = !DILocation(line: 573, column: 21, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10629, file: !1699, line: 573, column: 17)
!10632 = !DILocation(line: 573, column: 17, scope: !10629)
!10633 = !DILocation(line: 576, column: 29, scope: !10629)
!10634 = !DILocation(line: 576, column: 39, scope: !10629)
!10635 = !DILocation(line: 577, column: 29, scope: !10629)
!10636 = !DILocation(line: 577, column: 42, scope: !10629)
!10637 = !DILocation(line: 0, scope: !10607)
!10638 = !DILocation(line: 579, column: 14, scope: !10610)
!10639 = !DILocation(line: 580, column: 21, scope: !10610)
!10640 = distinct !{!10640, !10608, !10641}
!10641 = !DILocation(line: 581, column: 5, scope: !10607)
!10642 = !DILocation(line: 586, column: 1, scope: !10590)
!10643 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1699, file: !1699, line: 593, type: !10644, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10646)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!1156, !61, !61, !1714}
!10646 = !{!10647, !10648, !10649}
!10647 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10643, file: !1699, line: 593, type: !61)
!10648 = !DILocalVariable(name: "length", arg: 2, scope: !10643, file: !1699, line: 593, type: !61)
!10649 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10643, file: !1699, line: 593, type: !1714)
!10650 = !DILocation(line: 0, scope: !10643)
!10651 = !DILocation(line: 595, column: 12, scope: !10643)
!10652 = !DILocation(line: 595, column: 5, scope: !10643)
!10653 = !DILocation(line: 597, column: 81, scope: !10643)
!10654 = !DILocation(line: 597, column: 12, scope: !10643)
!10655 = !DILocation(line: 597, column: 5, scope: !10643)
!10656 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1699, file: !1699, line: 606, type: !10644, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10657)
!10657 = !{!10658, !10659, !10660}
!10658 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10656, file: !1699, line: 606, type: !61)
!10659 = !DILocalVariable(name: "length", arg: 2, scope: !10656, file: !1699, line: 606, type: !61)
!10660 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10656, file: !1699, line: 606, type: !1714)
!10661 = !DILocation(line: 0, scope: !10656)
!10662 = !DILocation(line: 624, column: 5, scope: !10656)
!10663 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1699, file: !1699, line: 637, type: !10644, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10664)
!10664 = !{!10665, !10666, !10667, !10668, !10669}
!10665 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10663, file: !1699, line: 637, type: !61)
!10666 = !DILocalVariable(name: "length", arg: 2, scope: !10663, file: !1699, line: 637, type: !61)
!10667 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10663, file: !1699, line: 637, type: !1714)
!10668 = !DILocalVariable(name: "index", scope: !10663, file: !1699, line: 642, type: !61)
!10669 = !DILocalVariable(name: "list", scope: !10663, file: !1699, line: 644, type: !2016)
!10670 = !DILocation(line: 0, scope: !10663)
!10671 = !DILocation(line: 642, column: 22, scope: !10663)
!10672 = !DILocation(line: 648, column: 81, scope: !10663)
!10673 = !DILocation(line: 648, column: 12, scope: !10663)
!10674 = !DILocation(line: 648, column: 5, scope: !10663)
!10675 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1699, file: !1699, line: 658, type: !10644, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10676)
!10676 = !{!10677, !10678, !10679}
!10677 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10675, file: !1699, line: 658, type: !61)
!10678 = !DILocalVariable(name: "length", arg: 2, scope: !10675, file: !1699, line: 658, type: !61)
!10679 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10675, file: !1699, line: 658, type: !1714)
!10680 = !DILocation(line: 0, scope: !10675)
!10681 = !DILocation(line: 688, column: 5, scope: !10675)
!10682 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1699, file: !1699, line: 700, type: !8029, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10683)
!10683 = !{!10684, !10685, !10686}
!10684 = !DILocalVariable(name: "CS", arg: 1, scope: !10682, file: !1699, line: 700, type: !7962)
!10685 = !DILocalVariable(name: "index", scope: !10682, file: !1699, line: 705, type: !61)
!10686 = !DILocalVariable(name: "list", scope: !10682, file: !1699, line: 707, type: !2016)
!10687 = !DILocation(line: 0, scope: !10682)
!10688 = !DILocation(line: 705, column: 22, scope: !10682)
!10689 = !DILocation(line: 711, column: 24, scope: !10682)
!10690 = !DILocation(line: 711, column: 5, scope: !10682)
!10691 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1699, file: !1699, line: 721, type: !10692, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10694)
!10692 = !DISubroutineType(types: !10693)
!10693 = !{null, !1934, !1218, !61}
!10694 = !{!10695, !10696, !10697}
!10695 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10691, file: !1699, line: 721, type: !1934)
!10696 = !DILocalVariable(name: "index", arg: 2, scope: !10691, file: !1699, line: 721, type: !1218)
!10697 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10691, file: !1699, line: 721, type: !61)
!10698 = !DILocation(line: 0, scope: !10691)
!10699 = !DILocation(line: 723, column: 18, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10691, file: !1699, line: 723, column: 9)
!10701 = !DILocation(line: 723, column: 26, scope: !10700)
!10702 = !DILocation(line: 723, column: 35, scope: !10700)
!10703 = !DILocation(line: 723, column: 9, scope: !10691)
!10704 = !DILocation(line: 724, column: 26, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10700, file: !1699, line: 723, column: 48)
!10706 = !DILocation(line: 724, column: 32, scope: !10705)
!10707 = !DILocation(line: 725, column: 5, scope: !10705)
!10708 = !DILocation(line: 726, column: 18, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10700, file: !1699, line: 725, column: 12)
!10710 = !DILocation(line: 727, column: 26, scope: !10709)
!10711 = !DILocation(line: 727, column: 32, scope: !10709)
!10712 = !DILocation(line: 728, column: 18, scope: !10709)
!10713 = !DILocation(line: 728, column: 26, scope: !10709)
!10714 = !DILocation(line: 728, column: 35, scope: !10709)
!10715 = !DILocation(line: 731, column: 1, scope: !10691)
!10716 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1699, file: !1699, line: 739, type: !10717, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10719)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{!61, !61, !61, !1934, !10570}
!10719 = !{!10720, !10721, !10722, !10723, !10724, !10725, !10726, !10727, !10728}
!10720 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10716, file: !1699, line: 740, type: !61)
!10721 = !DILocalVariable(name: "length", arg: 2, scope: !10716, file: !1699, line: 741, type: !61)
!10722 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10716, file: !1699, line: 742, type: !1934)
!10723 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10716, file: !1699, line: 743, type: !10570)
!10724 = !DILocalVariable(name: "Partition", scope: !10716, file: !1699, line: 745, type: !61)
!10725 = !DILocalVariable(name: "Index", scope: !10716, file: !1699, line: 746, type: !1156)
!10726 = !DILocalVariable(name: "bankSize", scope: !10716, file: !1699, line: 747, type: !61)
!10727 = !DILocalVariable(name: "NextBankAddr", scope: !10716, file: !1699, line: 748, type: !61)
!10728 = !DILocalVariable(name: "srcBankIdx", scope: !10716, file: !1699, line: 748, type: !61)
!10729 = !DILocation(line: 0, scope: !10716)
!10730 = !DILocation(line: 750, column: 12, scope: !10716)
!10731 = !DILocation(line: 750, column: 5, scope: !10716)
!10732 = !DILocation(line: 752, column: 51, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10734, file: !1699, line: 752, column: 5)
!10734 = distinct !DILexicalBlock(scope: !10716, file: !1699, line: 752, column: 5)
!10735 = !DILocation(line: 752, column: 5, scope: !10734)
!10736 = !DILocation(line: 753, column: 51, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !1699, line: 753, column: 13)
!10738 = distinct !DILexicalBlock(scope: !10733, file: !1699, line: 752, column: 70)
!10739 = !DILocation(line: 753, column: 24, scope: !10737)
!10740 = !DILocation(line: 753, column: 13, scope: !10738)
!10741 = !DILocation(line: 758, column: 49, scope: !10738)
!10742 = !DILocation(line: 758, column: 22, scope: !10738)
!10743 = !DILocation(line: 760, column: 22, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10738, file: !1699, line: 760, column: 13)
!10745 = !DILocation(line: 760, column: 13, scope: !10738)
!10746 = !DILocation(line: 761, column: 37, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10744, file: !1699, line: 760, column: 39)
!10748 = !DILocation(line: 762, column: 24, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10747, file: !1699, line: 762, column: 17)
!10750 = !DILocation(line: 762, column: 17, scope: !10747)
!10751 = !DILocation(line: 767, column: 33, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10747, file: !1699, line: 767, column: 17)
!10753 = !DILocation(line: 767, column: 42, scope: !10752)
!10754 = !DILocation(line: 767, column: 17, scope: !10747)
!10755 = !DILocation(line: 768, column: 33, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10752, file: !1699, line: 767, column: 55)
!10757 = !DILocation(line: 768, column: 39, scope: !10756)
!10758 = !DILocation(line: 769, column: 13, scope: !10756)
!10759 = !DILocation(line: 770, column: 46, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !1699, line: 770, column: 21)
!10761 = distinct !DILexicalBlock(scope: !10752, file: !1699, line: 769, column: 20)
!10762 = !DILocation(line: 770, column: 21, scope: !10761)
!10763 = !DILocation(line: 773, column: 33, scope: !10761)
!10764 = !DILocation(line: 773, column: 39, scope: !10761)
!10765 = !DILocation(line: 774, column: 33, scope: !10761)
!10766 = !DILocation(line: 774, column: 42, scope: !10761)
!10767 = !DILocation(line: 777, column: 22, scope: !10747)
!10768 = !DILocation(line: 778, column: 20, scope: !10747)
!10769 = !DILocation(line: 779, column: 9, scope: !10747)
!10770 = !DILocation(line: 746, column: 13, scope: !10716)
!10771 = !DILocation(line: 752, column: 66, scope: !10733)
!10772 = distinct !{!10772, !10735, !10773}
!10773 = !DILocation(line: 781, column: 5, scope: !10734)
!10774 = !DILocation(line: 784, column: 5, scope: !10716)
!10775 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1699, file: !1699, line: 796, type: !8595, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10776)
!10776 = !{!10777, !10778}
!10777 = !DILocalVariable(name: "result", scope: !10775, file: !1699, line: 798, type: !1156)
!10778 = !DILocalVariable(name: "i", scope: !10775, file: !1699, line: 799, type: !1156)
!10779 = !DILocation(line: 803, column: 19, scope: !10775)
!10780 = !DILocation(line: 803, column: 28, scope: !10775)
!10781 = !DILocation(line: 803, column: 17, scope: !10775)
!10782 = !DILocation(line: 822, column: 33, scope: !10775)
!10783 = !DILocation(line: 822, column: 56, scope: !10775)
!10784 = !DILocation(line: 822, column: 88, scope: !10775)
!10785 = !DILocation(line: 822, column: 97, scope: !10775)
!10786 = !DILocation(line: 822, column: 5, scope: !10775)
!10787 = !DILocation(line: 829, column: 39, scope: !10775)
!10788 = !DILocation(line: 829, column: 62, scope: !10775)
!10789 = !DILocation(line: 829, column: 14, scope: !10775)
!10790 = !DILocation(line: 0, scope: !10775)
!10791 = !DILocation(line: 834, column: 16, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10775, file: !1699, line: 834, column: 9)
!10793 = !DILocation(line: 834, column: 9, scope: !10775)
!10794 = !DILocation(line: 838, column: 30, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10775, file: !1699, line: 838, column: 5)
!10796 = !DILocation(line: 838, column: 58, scope: !10795)
!10797 = !DILocation(line: 838, column: 78, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10795, file: !1699, line: 838, column: 5)
!10799 = !DILocation(line: 838, column: 88, scope: !10798)
!10800 = !DILocation(line: 838, column: 5, scope: !10795)
!10801 = !DILocation(line: 839, column: 39, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10798, file: !1699, line: 838, column: 102)
!10803 = !DILocation(line: 839, column: 22, scope: !10802)
!10804 = !DILocation(line: 840, column: 37, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10802, file: !1699, line: 840, column: 13)
!10806 = !DILocation(line: 840, column: 13, scope: !10802)
!10807 = !DILocation(line: 841, column: 36, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10805, file: !1699, line: 840, column: 63)
!10809 = !DILocation(line: 842, column: 9, scope: !10808)
!10810 = !DILocation(line: 838, column: 95, scope: !10798)
!10811 = distinct !{!10811, !10800, !10812}
!10812 = !DILocation(line: 843, column: 5, scope: !10795)
!10813 = !DILocation(line: 871, column: 49, scope: !10775)
!10814 = !DILocation(line: 871, column: 72, scope: !10775)
!10815 = !DILocation(line: 871, column: 47, scope: !10775)
!10816 = !DILocation(line: 871, column: 97, scope: !10775)
!10817 = !DILocation(line: 871, column: 19, scope: !10775)
!10818 = !DILocation(line: 882, column: 14, scope: !10775)
!10819 = !DILocation(line: 887, column: 13, scope: !10775)
!10820 = !DILocation(line: 887, column: 22, scope: !10775)
!10821 = !DILocation(line: 887, column: 5, scope: !10775)
!10822 = !DILocation(line: 889, column: 22, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10775, file: !1699, line: 887, column: 34)
!10824 = !DILocation(line: 890, column: 13, scope: !10823)
!10825 = !DILocation(line: 902, column: 1, scope: !10775)
!10826 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1699, file: !1699, line: 912, type: !10827, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10829)
!10827 = !DISubroutineType(types: !10828)
!10828 = !{null, !772}
!10829 = !{!10830}
!10830 = !DILocalVariable(name: "CS", arg: 1, scope: !10826, file: !1699, line: 912, type: !772)
!10831 = !DILocation(line: 0, scope: !10826)
!10832 = !DILocation(line: 914, column: 12, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10826, file: !1699, line: 914, column: 9)
!10834 = !DILocation(line: 914, column: 9, scope: !10826)
!10835 = !DILocation(line: 918, column: 26, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10833, file: !1699, line: 914, column: 18)
!10837 = !DILocation(line: 918, column: 24, scope: !10836)
!10838 = !DILocation(line: 920, column: 28, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10836, file: !1699, line: 920, column: 13)
!10840 = !DILocation(line: 920, column: 13, scope: !10836)
!10841 = !DILocation(line: 921, column: 13, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1699, line: 921, column: 13)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1699, line: 921, column: 13)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !1699, line: 921, column: 13)
!10845 = distinct !DILexicalBlock(scope: !10839, file: !1699, line: 920, column: 33)
!10846 = !DILocation(line: 923, column: 19, scope: !10836)
!10847 = !DILocation(line: 923, column: 17, scope: !10836)
!10848 = !DILocation(line: 924, column: 5, scope: !10836)
!10849 = !DILocation(line: 935, column: 14, scope: !10826)
!10850 = !DILocation(line: 936, column: 1, scope: !10826)
!10851 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1699, file: !1699, line: 952, type: !8595, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !293)
!10852 = !DILocation(line: 955, column: 5, scope: !10851)
!10853 = !DILocation(line: 956, column: 12, scope: !10851)
!10854 = !DILocation(line: 956, column: 5, scope: !10851)
!10855 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1699, file: !1699, line: 974, type: !8595, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10856)
!10856 = !{!10857}
!10857 = !DILocalVariable(name: "result", scope: !10855, file: !1699, line: 976, type: !1156)
!10858 = !DILocation(line: 981, column: 5, scope: !10855)
!10859 = !DILocation(line: 986, column: 24, scope: !10855)
!10860 = !DILocation(line: 986, column: 33, scope: !10855)
!10861 = !DILocation(line: 986, column: 49, scope: !10855)
!10862 = !DILocation(line: 986, column: 22, scope: !10855)
!10863 = !DILocation(line: 1002, column: 19, scope: !10855)
!10864 = !DILocation(line: 1002, column: 17, scope: !10855)
!10865 = !DILocation(line: 1014, column: 22, scope: !10855)
!10866 = !DILocation(line: 1014, column: 5, scope: !10855)
!10867 = !DILocation(line: 1024, column: 33, scope: !10855)
!10868 = !DILocation(line: 1026, column: 27, scope: !10855)
!10869 = !DILocation(line: 1027, column: 26, scope: !10855)
!10870 = !DILocation(line: 1042, column: 33, scope: !10855)
!10871 = !DILocation(line: 1044, column: 32, scope: !10855)
!10872 = !DILocation(line: 1052, column: 18, scope: !10855)
!10873 = !DILocation(line: 1052, column: 27, scope: !10855)
!10874 = !DILocation(line: 1052, column: 43, scope: !10855)
!10875 = !DILocation(line: 1048, column: 14, scope: !10855)
!10876 = !DILocation(line: 0, scope: !10855)
!10877 = !DILocation(line: 1063, column: 5, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10879, file: !1699, line: 1063, column: 5)
!10879 = distinct !DILexicalBlock(scope: !10855, file: !1699, line: 1063, column: 5)
!10880 = !DILocation(line: 1063, column: 5, scope: !10879)
!10881 = !DILocation(line: 1063, column: 5, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10878, file: !1699, line: 1063, column: 5)
!10883 = !DILocation(line: 1096, column: 36, scope: !10855)
!10884 = !DILocation(line: 1096, column: 34, scope: !10855)
!10885 = !DILocation(line: 1101, column: 5, scope: !10855)
!10886 = !DILocation(line: 1103, column: 34, scope: !10855)
!10887 = !DILocation(line: 1109, column: 35, scope: !10855)
!10888 = !DILocation(line: 1110, column: 33, scope: !10855)
!10889 = !DILocation(line: 1111, column: 34, scope: !10855)
!10890 = !DILocation(line: 1113, column: 5, scope: !10855)
!10891 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2057, file: !2057, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!10892 = !DILocation(line: 86, column: 1, scope: !10891)
!10893 = distinct !DISubprogram(name: "GetFDMLock", scope: !2057, file: !2057, line: 87, type: !9061, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !10894)
!10894 = !{!10895}
!10895 = !DILocalVariable(name: "savedMask", scope: !10893, file: !2057, line: 89, type: !1156)
!10896 = !DILocation(line: 90, column: 17, scope: !10893)
!10897 = !DILocation(line: 0, scope: !10893)
!10898 = !DILocation(line: 91, column: 9, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10893, file: !2057, line: 91, column: 9)
!10900 = !DILocation(line: 91, column: 9, scope: !10893)
!10901 = !DILocation(line: 92, column: 17, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10899, file: !2057, line: 91, column: 24)
!10903 = !DILocation(line: 94, column: 9, scope: !10902)
!10904 = !DILocation(line: 0, scope: !10899)
!10905 = !DILocation(line: 102, column: 1, scope: !10893)
!10906 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2057, file: !2057, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !10907)
!10907 = !{!10908}
!10908 = !DILocalVariable(name: "savedMask", scope: !10906, file: !2057, line: 105, type: !1156)
!10909 = !DILocation(line: 106, column: 17, scope: !10906)
!10910 = !DILocation(line: 0, scope: !10906)
!10911 = !DILocation(line: 107, column: 9, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10906, file: !2057, line: 107, column: 9)
!10913 = !DILocation(line: 107, column: 9, scope: !10906)
!10914 = !DILocation(line: 108, column: 17, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10912, file: !2057, line: 107, column: 24)
!10916 = !DILocation(line: 109, column: 9, scope: !10915)
!10917 = !DILocation(line: 114, column: 1, scope: !10906)
!10918 = !DILocation(line: 111, column: 9, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10912, file: !2057, line: 110, column: 12)
!10920 = !DILocation(line: 112, column: 9, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !2057, line: 112, column: 9)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !2057, line: 112, column: 9)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !2057, line: 112, column: 9)
!10924 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2057, file: !2057, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!10925 = !DILocation(line: 123, column: 1, scope: !10924)
!10926 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2057, file: !2057, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !10927)
!10927 = !{!10928}
!10928 = !DILocalVariable(name: "Result", scope: !10926, file: !2057, line: 132, type: !2113)
!10929 = !DILocation(line: 133, column: 5, scope: !10926)
!10930 = !DILocation(line: 134, column: 18, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10926, file: !2057, line: 133, column: 8)
!10932 = !DILocation(line: 0, scope: !10926)
!10933 = !DILocation(line: 135, column: 21, scope: !10926)
!10934 = !DILocation(line: 135, column: 5, scope: !10931)
!10935 = distinct !{!10935, !10929, !10936}
!10936 = !DILocation(line: 135, column: 43, scope: !10926)
!10937 = !DILocation(line: 136, column: 1, scope: !10926)
!10938 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2057, file: !2057, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!10939 = !DILocation(line: 147, column: 5, scope: !10938)
!10940 = !DILocation(line: 148, column: 1, scope: !10938)
!10941 = distinct !DISubprogram(name: "readRawDiskData", scope: !2057, file: !2057, line: 216, type: !10942, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !10983)
!10942 = !DISubroutineType(types: !10943)
!10943 = !{!1156, !10944, !61, !762, !61}
!10944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10945, size: 32)
!10945 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2004, line: 93, baseType: !10946)
!10946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2004, line: 83, size: 1056, elements: !10947)
!10947 = !{!10948, !10949, !10969, !10970, !10982}
!10948 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !10946, file: !2004, line: 84, baseType: !61, size: 32)
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !10946, file: !2004, line: 85, baseType: !10950, size: 32, offset: 32)
!10950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10951, size: 32)
!10951 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1473, line: 121, baseType: !10952)
!10952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 105, size: 480, elements: !10953)
!10953 = !{!10954, !10955, !10956, !10957, !10958, !10959, !10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968}
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !10952, file: !1473, line: 106, baseType: !1745, size: 32)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !10952, file: !1473, line: 107, baseType: !1546, size: 32, offset: 32)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !10952, file: !1473, line: 108, baseType: !1750, size: 32, offset: 64)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !10952, file: !1473, line: 109, baseType: !1754, size: 32, offset: 96)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !10952, file: !1473, line: 110, baseType: !1758, size: 32, offset: 128)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !10952, file: !1473, line: 111, baseType: !1754, size: 32, offset: 160)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !10952, file: !1473, line: 112, baseType: !1763, size: 32, offset: 192)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !10952, file: !1473, line: 113, baseType: !1754, size: 32, offset: 224)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !10952, file: !1473, line: 114, baseType: !1754, size: 32, offset: 256)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !10952, file: !1473, line: 115, baseType: !1754, size: 32, offset: 288)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !10952, file: !1473, line: 116, baseType: !1770, size: 32, offset: 320)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !10952, file: !1473, line: 117, baseType: !1775, size: 32, offset: 352)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !10952, file: !1473, line: 118, baseType: !1780, size: 32, offset: 384)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !10952, file: !1473, line: 119, baseType: !1784, size: 32, offset: 416)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !10952, file: !1473, line: 120, baseType: !1788, size: 32, offset: 448)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !10946, file: !2004, line: 86, baseType: !88, size: 32, offset: 64)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !10946, file: !2004, line: 87, baseType: !10971, size: 928, offset: 96)
!10971 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1473, line: 99, baseType: !10972)
!10972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1473, line: 90, size: 928, elements: !10973)
!10973 = !{!10974, !10975, !10976, !10977, !10978, !10979, !10980, !10981}
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10972, file: !1473, line: 91, baseType: !61, size: 32)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10972, file: !1473, line: 92, baseType: !1802, size: 256, offset: 32)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10972, file: !1473, line: 93, baseType: !1802, size: 256, offset: 288)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10972, file: !1473, line: 94, baseType: !1802, size: 256, offset: 544)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10972, file: !1473, line: 95, baseType: !61, size: 32, offset: 800)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10972, file: !1473, line: 96, baseType: !1794, size: 16, offset: 832)
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10972, file: !1473, line: 97, baseType: !61, size: 32, offset: 864)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10972, file: !1473, line: 98, baseType: !61, size: 32, offset: 896)
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !10946, file: !2004, line: 92, baseType: !91, size: 8, offset: 1024)
!10983 = !{!10984, !10985, !10986, !10987, !10988, !10989}
!10984 = !DILocalVariable(name: "D", arg: 1, scope: !10941, file: !2057, line: 216, type: !10944)
!10985 = !DILocalVariable(name: "addr", arg: 2, scope: !10941, file: !2057, line: 216, type: !61)
!10986 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10941, file: !2057, line: 216, type: !762)
!10987 = !DILocalVariable(name: "len", arg: 4, scope: !10941, file: !2057, line: 216, type: !61)
!10988 = !DILocalVariable(name: "phyAddr", scope: !10941, file: !2057, line: 219, type: !61)
!10989 = !DILocalVariable(name: "diskSize", scope: !10941, file: !2057, line: 220, type: !61)
!10990 = !DILocation(line: 0, scope: !10941)
!10991 = !DILocation(line: 220, column: 28, scope: !10941)
!10992 = !DILocation(line: 222, column: 14, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10941, file: !2057, line: 222, column: 9)
!10994 = !DILocation(line: 222, column: 26, scope: !10993)
!10995 = !DILocation(line: 225, column: 51, scope: !10941)
!10996 = !DILocation(line: 225, column: 61, scope: !10941)
!10997 = !DILocation(line: 225, column: 15, scope: !10941)
!10998 = !DILocation(line: 225, column: 70, scope: !10941)
!10999 = !DILocation(line: 227, column: 13, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10941, file: !2057, line: 227, column: 9)
!11001 = !DILocation(line: 227, column: 9, scope: !10941)
!11002 = !DILocation(line: 228, column: 9, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !11000, file: !2057, line: 227, column: 23)
!11004 = !DILocation(line: 229, column: 5, scope: !11003)
!11005 = !DILocation(line: 231, column: 5, scope: !10941)
!11006 = !DILocation(line: 233, column: 22, scope: !10941)
!11007 = !DILocation(line: 233, column: 5, scope: !10941)
!11008 = !DILocation(line: 235, column: 5, scope: !10941)
!11009 = !DILocation(line: 237, column: 5, scope: !10941)
!11010 = !DILocation(line: 238, column: 1, scope: !10941)
!11011 = distinct !DISubprogram(name: "MountDevice", scope: !2057, file: !2057, line: 165, type: !11012, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11014)
!11012 = !DISubroutineType(types: !11013)
!11013 = !{null, !10944}
!11014 = !{!11015, !11016}
!11015 = !DILocalVariable(name: "D", arg: 1, scope: !11011, file: !2057, line: 165, type: !10944)
!11016 = !DILocalVariable(name: "Result", scope: !11011, file: !2057, line: 167, type: !1156)
!11017 = !DILocation(line: 0, scope: !11011)
!11018 = !DILocation(line: 171, column: 12, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11011, file: !2057, line: 171, column: 9)
!11020 = !DILocation(line: 171, column: 9, scope: !11011)
!11021 = !DILocation(line: 176, column: 5, scope: !11011)
!11022 = !DILocation(line: 186, column: 17, scope: !11011)
!11023 = !DILocation(line: 186, column: 28, scope: !11011)
!11024 = !DILocation(line: 186, column: 43, scope: !11011)
!11025 = !DILocation(line: 186, column: 64, scope: !11011)
!11026 = !DILocation(line: 186, column: 52, scope: !11011)
!11027 = !DILocation(line: 186, column: 14, scope: !11011)
!11028 = !DILocation(line: 188, column: 5, scope: !11011)
!11029 = !DILocation(line: 190, column: 16, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11011, file: !2057, line: 190, column: 9)
!11031 = !DILocation(line: 190, column: 9, scope: !11011)
!11032 = !DILocation(line: 191, column: 9, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !2057, line: 191, column: 9)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !2057, line: 191, column: 9)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !2057, line: 191, column: 9)
!11036 = distinct !DILexicalBlock(scope: !11030, file: !2057, line: 190, column: 31)
!11037 = !DILocation(line: 194, column: 17, scope: !11011)
!11038 = !DILocation(line: 195, column: 1, scope: !11011)
!11039 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2057, file: !2057, line: 277, type: !10942, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11040)
!11040 = !{!11041, !11042, !11043, !11044, !11045, !11046, !11047, !11048, !11049, !11050, !11054, !11055, !11056, !11061}
!11041 = !DILocalVariable(name: "D", arg: 1, scope: !11039, file: !2057, line: 277, type: !10944)
!11042 = !DILocalVariable(name: "addr", arg: 2, scope: !11039, file: !2057, line: 277, type: !61)
!11043 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11039, file: !2057, line: 277, type: !762)
!11044 = !DILocalVariable(name: "len", arg: 4, scope: !11039, file: !2057, line: 277, type: !61)
!11045 = !DILocalVariable(name: "dest", scope: !11039, file: !2057, line: 279, type: !61)
!11046 = !DILocalVariable(name: "src", scope: !11039, file: !2057, line: 279, type: !61)
!11047 = !DILocalVariable(name: "diskSize", scope: !11039, file: !2057, line: 280, type: !61)
!11048 = !DILocalVariable(name: "result", scope: !11039, file: !2057, line: 281, type: !1156)
!11049 = !DILocalVariable(name: "DoneLength", scope: !11039, file: !2057, line: 282, type: !61)
!11050 = !DILocalVariable(name: "blockSize", scope: !11051, file: !2057, line: 313, type: !61)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !2057, line: 312, column: 14)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !2057, line: 305, column: 13)
!11053 = distinct !DILexicalBlock(scope: !11039, file: !2057, line: 298, column: 30)
!11054 = !DILocalVariable(name: "programBytes", scope: !11051, file: !2057, line: 314, type: !61)
!11055 = !DILocalVariable(name: "nextBlkAddr", scope: !11051, file: !2057, line: 316, type: !61)
!11056 = !DILocalVariable(name: "Cell", scope: !11057, file: !2057, line: 346, type: !11059)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !2057, line: 345, column: 83)
!11058 = distinct !DILexicalBlock(scope: !11051, file: !2057, line: 345, column: 17)
!11059 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11060, line: 76, baseType: !1029)
!11060 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_polling/GCC")
!11061 = !DILocalVariable(name: "b", scope: !11057, file: !2057, line: 347, type: !762)
!11062 = !DILocation(line: 0, scope: !11039)
!11063 = !DILocation(line: 280, column: 28, scope: !11039)
!11064 = !DILocation(line: 284, column: 14, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11039, file: !2057, line: 284, column: 9)
!11066 = !DILocation(line: 284, column: 9, scope: !11039)
!11067 = !DILocation(line: 288, column: 14, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11039, file: !2057, line: 288, column: 9)
!11069 = !DILocation(line: 288, column: 20, scope: !11068)
!11070 = !DILocation(line: 288, column: 9, scope: !11039)
!11071 = !DILocation(line: 292, column: 13, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11039, file: !2057, line: 292, column: 9)
!11073 = !DILocation(line: 292, column: 9, scope: !11039)
!11074 = !DILocation(line: 293, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11072, file: !2057, line: 292, column: 23)
!11076 = !DILocation(line: 294, column: 5, scope: !11075)
!11077 = !DILocation(line: 296, column: 5, scope: !11039)
!11078 = !DILocation(line: 346, column: 17, scope: !11057)
!11079 = !DILocation(line: 298, column: 23, scope: !11039)
!11080 = !DILocation(line: 298, column: 5, scope: !11039)
!11081 = !DILocation(line: 299, column: 52, scope: !11053)
!11082 = !DILocation(line: 299, column: 62, scope: !11053)
!11083 = !DILocation(line: 299, column: 16, scope: !11053)
!11084 = !DILocation(line: 299, column: 71, scope: !11053)
!11085 = !DILocation(line: 299, column: 78, scope: !11053)
!11086 = !DILocation(line: 300, column: 34, scope: !11053)
!11087 = !DILocation(line: 302, column: 12, scope: !11053)
!11088 = !DILocation(line: 302, column: 23, scope: !11053)
!11089 = !DILocation(line: 302, column: 81, scope: !11053)
!11090 = !DILocation(line: 302, column: 45, scope: !11053)
!11091 = !DILocation(line: 302, column: 9, scope: !11053)
!11092 = !DILocation(line: 305, column: 29, scope: !11052)
!11093 = !DILocation(line: 305, column: 57, scope: !11052)
!11094 = !DILocation(line: 305, column: 66, scope: !11052)
!11095 = !DILocation(line: 305, column: 80, scope: !11052)
!11096 = !DILocation(line: 305, column: 13, scope: !11053)
!11097 = !DILocation(line: 306, column: 25, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11052, file: !2057, line: 305, column: 87)
!11099 = !DILocation(line: 306, column: 36, scope: !11098)
!11100 = !DILocation(line: 306, column: 51, scope: !11098)
!11101 = !DILocation(line: 306, column: 60, scope: !11098)
!11102 = !DILocation(line: 306, column: 74, scope: !11098)
!11103 = !DILocation(line: 306, column: 22, scope: !11098)
!11104 = !DILocation(line: 307, column: 24, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11098, file: !2057, line: 307, column: 17)
!11106 = !DILocation(line: 307, column: 17, scope: !11098)
!11107 = !DILocation(line: 310, column: 23, scope: !11098)
!11108 = !DILocation(line: 311, column: 9, scope: !11098)
!11109 = !DILocation(line: 313, column: 47, scope: !11051)
!11110 = !DILocation(line: 313, column: 56, scope: !11051)
!11111 = !DILocation(line: 313, column: 34, scope: !11051)
!11112 = !DILocation(line: 0, scope: !11051)
!11113 = !DILocation(line: 316, column: 42, scope: !11051)
!11114 = !DILocation(line: 316, column: 58, scope: !11051)
!11115 = !DILocation(line: 316, column: 55, scope: !11051)
!11116 = !DILocation(line: 326, column: 22, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11051, file: !2057, line: 326, column: 17)
!11118 = !DILocation(line: 326, column: 37, scope: !11117)
!11119 = !DILocation(line: 326, column: 17, scope: !11051)
!11120 = !DILocation(line: 332, column: 43, scope: !11051)
!11121 = !DILocation(line: 345, column: 30, scope: !11058)
!11122 = !DILocation(line: 345, column: 52, scope: !11058)
!11123 = !DILocation(line: 0, scope: !11057)
!11124 = !DILocation(line: 348, column: 26, scope: !11057)
!11125 = !DILocation(line: 348, column: 24, scope: !11057)
!11126 = !DILocation(line: 348, column: 22, scope: !11057)
!11127 = !DILocation(line: 349, column: 41, scope: !11057)
!11128 = !DILocation(line: 349, column: 24, scope: !11057)
!11129 = !DILocation(line: 349, column: 22, scope: !11057)
!11130 = !DILocation(line: 350, column: 29, scope: !11057)
!11131 = !DILocation(line: 350, column: 40, scope: !11057)
!11132 = !DILocation(line: 350, column: 55, scope: !11057)
!11133 = !DILocation(line: 350, column: 64, scope: !11057)
!11134 = !DILocation(line: 350, column: 26, scope: !11057)
!11135 = !DILocation(line: 351, column: 28, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11057, file: !2057, line: 351, column: 21)
!11137 = !DILocation(line: 354, column: 13, scope: !11058)
!11138 = !DILocation(line: 362, column: 33, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !2057, line: 361, column: 24)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !2057, line: 355, column: 21)
!11141 = distinct !DILexicalBlock(scope: !11058, file: !2057, line: 354, column: 20)
!11142 = !DILocation(line: 362, column: 44, scope: !11139)
!11143 = !DILocation(line: 362, column: 59, scope: !11139)
!11144 = !DILocation(line: 362, column: 68, scope: !11139)
!11145 = !DILocation(line: 362, column: 82, scope: !11139)
!11146 = !DILocation(line: 362, column: 30, scope: !11139)
!11147 = !DILocation(line: 364, column: 28, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11141, file: !2057, line: 364, column: 21)
!11149 = !DILocation(line: 364, column: 21, scope: !11141)
!11150 = !DILocation(line: 368, column: 24, scope: !11051)
!11151 = !DILocation(line: 0, scope: !11052)
!11152 = distinct !{!11152, !11080, !11153}
!11153 = !DILocation(line: 370, column: 5, scope: !11039)
!11154 = !DILocation(line: 372, column: 5, scope: !11039)
!11155 = !DILocation(line: 379, column: 1, scope: !11039)
!11156 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2057, file: !2057, line: 398, type: !11157, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11159)
!11157 = !DISubroutineType(types: !11158)
!11158 = !{!1156, !10944, !61}
!11159 = !{!11160, !11161, !11162, !11163}
!11160 = !DILocalVariable(name: "D", arg: 1, scope: !11156, file: !2057, line: 398, type: !10944)
!11161 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !11156, file: !2057, line: 398, type: !61)
!11162 = !DILocalVariable(name: "result", scope: !11156, file: !2057, line: 401, type: !1156)
!11163 = !DILocalVariable(name: "block_index", scope: !11156, file: !2057, line: 402, type: !61)
!11164 = !DILocation(line: 0, scope: !11156)
!11165 = !DILocation(line: 402, column: 36, scope: !11156)
!11166 = !DILocation(line: 403, column: 13, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11156, file: !2057, line: 403, column: 9)
!11168 = !DILocation(line: 403, column: 9, scope: !11156)
!11169 = !DILocation(line: 404, column: 9, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11167, file: !2057, line: 403, column: 23)
!11171 = !DILocation(line: 405, column: 5, scope: !11170)
!11172 = !DILocation(line: 407, column: 37, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11156, file: !2057, line: 407, column: 9)
!11174 = !DILocation(line: 407, column: 21, scope: !11173)
!11175 = !DILocation(line: 407, column: 9, scope: !11156)
!11176 = !DILocation(line: 412, column: 5, scope: !11156)
!11177 = !DILocation(line: 414, column: 8, scope: !11156)
!11178 = !DILocation(line: 414, column: 19, scope: !11156)
!11179 = !DILocation(line: 414, column: 32, scope: !11156)
!11180 = !DILocation(line: 414, column: 5, scope: !11156)
!11181 = !DILocation(line: 416, column: 17, scope: !11156)
!11182 = !DILocation(line: 416, column: 28, scope: !11156)
!11183 = !DILocation(line: 416, column: 42, scope: !11156)
!11184 = !DILocation(line: 416, column: 14, scope: !11156)
!11185 = !DILocation(line: 418, column: 5, scope: !11156)
!11186 = !DILocation(line: 420, column: 16, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11156, file: !2057, line: 420, column: 9)
!11188 = !DILocation(line: 424, column: 1, scope: !11156)
!11189 = distinct !DISubprogram(name: "NOR_init", scope: !2057, file: !2057, line: 433, type: !8595, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!11190 = !DILocation(line: 436, column: 9, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11189, file: !2057, line: 436, column: 9)
!11192 = !DILocation(line: 436, column: 9, scope: !11189)
!11193 = !DILocation(line: 437, column: 9, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11191, file: !2057, line: 436, column: 62)
!11195 = !DILocation(line: 438, column: 9, scope: !11194)
!11196 = !DILocation(line: 439, column: 27, scope: !11194)
!11197 = !DILocation(line: 440, column: 5, scope: !11194)
!11198 = !DILocation(line: 441, column: 5, scope: !11189)
!11199 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2057, file: !2057, line: 444, type: !9061, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!11200 = !DILocation(line: 446, column: 12, scope: !11199)
!11201 = !DILocation(line: 446, column: 5, scope: !11199)
!11202 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2057, file: !2057, line: 449, type: !11203, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11205)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{!1156, !61, !61, !762}
!11205 = !{!11206, !11207, !11208, !11209, !11210, !11211, !11212}
!11206 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11202, file: !2057, line: 449, type: !61)
!11207 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11202, file: !2057, line: 449, type: !61)
!11208 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11202, file: !2057, line: 449, type: !762)
!11209 = !DILocalVariable(name: "D", scope: !11202, file: !2057, line: 451, type: !10944)
!11210 = !DILocalVariable(name: "mtdData", scope: !11202, file: !2057, line: 452, type: !2065)
!11211 = !DILocalVariable(name: "result", scope: !11202, file: !2057, line: 453, type: !1156)
!11212 = !DILocalVariable(name: "addr", scope: !11202, file: !2057, line: 455, type: !61)
!11213 = !DILocation(line: 0, scope: !11202)
!11214 = !DILocation(line: 452, column: 60, scope: !11202)
!11215 = !DILocation(line: 455, column: 32, scope: !11202)
!11216 = !DILocation(line: 455, column: 22, scope: !11202)
!11217 = !DILocation(line: 455, column: 95, scope: !11202)
!11218 = !DILocation(line: 455, column: 76, scope: !11202)
!11219 = !DILocation(line: 455, column: 118, scope: !11202)
!11220 = !DILocation(line: 455, column: 74, scope: !11202)
!11221 = !DILocation(line: 455, column: 106, scope: !11202)
!11222 = !DILocation(line: 457, column: 14, scope: !11202)
!11223 = !DILocation(line: 459, column: 16, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11202, file: !2057, line: 459, column: 9)
!11225 = !DILocation(line: 463, column: 1, scope: !11202)
!11226 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2057, file: !2057, line: 466, type: !11203, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11227)
!11227 = !{!11228, !11229, !11230, !11231, !11232, !11233, !11234}
!11228 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11226, file: !2057, line: 466, type: !61)
!11229 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11226, file: !2057, line: 466, type: !61)
!11230 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11226, file: !2057, line: 466, type: !762)
!11231 = !DILocalVariable(name: "D", scope: !11226, file: !2057, line: 468, type: !10944)
!11232 = !DILocalVariable(name: "mtdData", scope: !11226, file: !2057, line: 469, type: !2065)
!11233 = !DILocalVariable(name: "result", scope: !11226, file: !2057, line: 470, type: !1156)
!11234 = !DILocalVariable(name: "addr", scope: !11226, file: !2057, line: 472, type: !61)
!11235 = !DILocation(line: 0, scope: !11226)
!11236 = !DILocation(line: 469, column: 60, scope: !11226)
!11237 = !DILocation(line: 472, column: 32, scope: !11226)
!11238 = !DILocation(line: 472, column: 22, scope: !11226)
!11239 = !DILocation(line: 472, column: 95, scope: !11226)
!11240 = !DILocation(line: 472, column: 76, scope: !11226)
!11241 = !DILocation(line: 472, column: 118, scope: !11226)
!11242 = !DILocation(line: 472, column: 74, scope: !11226)
!11243 = !DILocation(line: 472, column: 106, scope: !11226)
!11244 = !DILocation(line: 474, column: 14, scope: !11226)
!11245 = !DILocation(line: 475, column: 16, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11226, file: !2057, line: 475, column: 9)
!11247 = !DILocation(line: 479, column: 1, scope: !11226)
!11248 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2057, file: !2057, line: 481, type: !11249, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11251)
!11249 = !DISubroutineType(types: !11250)
!11250 = !{!1156, !61}
!11251 = !{!11252, !11253}
!11252 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11248, file: !2057, line: 481, type: !61)
!11253 = !DILocalVariable(name: "result", scope: !11248, file: !2057, line: 483, type: !1156)
!11254 = !DILocation(line: 0, scope: !11248)
!11255 = !DILocation(line: 484, column: 14, scope: !11248)
!11256 = !DILocation(line: 485, column: 16, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11248, file: !2057, line: 485, column: 9)
!11258 = !DILocation(line: 489, column: 1, scope: !11248)
!11259 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2057, file: !2057, line: 492, type: !3735, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11260)
!11260 = !{!11261, !11262, !11263}
!11261 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11259, file: !2057, line: 492, type: !61)
!11262 = !DILocalVariable(name: "D", scope: !11259, file: !2057, line: 494, type: !10944)
!11263 = !DILocalVariable(name: "mtdData", scope: !11259, file: !2057, line: 495, type: !2065)
!11264 = !DILocation(line: 0, scope: !11259)
!11265 = !DILocation(line: 495, column: 60, scope: !11259)
!11266 = !DILocation(line: 496, column: 12, scope: !11259)
!11267 = !DILocation(line: 496, column: 5, scope: !11259)
!11268 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2057, file: !2057, line: 499, type: !3735, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11269)
!11269 = !{!11270, !11271, !11272}
!11270 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11268, file: !2057, line: 499, type: !61)
!11271 = !DILocalVariable(name: "D", scope: !11268, file: !2057, line: 501, type: !10944)
!11272 = !DILocalVariable(name: "mtdData", scope: !11268, file: !2057, line: 502, type: !2065)
!11273 = !DILocation(line: 0, scope: !11268)
!11274 = !DILocation(line: 502, column: 60, scope: !11268)
!11275 = !DILocation(line: 504, column: 12, scope: !11268)
!11276 = !DILocation(line: 504, column: 5, scope: !11268)
!11277 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2057, file: !2057, line: 510, type: !11278, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11280)
!11278 = !DISubroutineType(types: !11279)
!11279 = !{!1156, !61, !1218, !1218}
!11280 = !{!11281, !11282, !11283, !11284, !11285}
!11281 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11277, file: !2057, line: 510, type: !61)
!11282 = !DILocalVariable(name: "block_index", arg: 2, scope: !11277, file: !2057, line: 510, type: !1218)
!11283 = !DILocalVariable(name: "offset", arg: 3, scope: !11277, file: !2057, line: 510, type: !1218)
!11284 = !DILocalVariable(name: "D", scope: !11277, file: !2057, line: 512, type: !10944)
!11285 = !DILocalVariable(name: "mtdData", scope: !11277, file: !2057, line: 513, type: !2065)
!11286 = !DILocation(line: 0, scope: !11277)
!11287 = !DILocation(line: 513, column: 60, scope: !11277)
!11288 = !DILocation(line: 519, column: 20, scope: !11277)
!11289 = !DILocation(line: 519, column: 18, scope: !11277)
!11290 = !DILocation(line: 520, column: 22, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11277, file: !2057, line: 520, column: 9)
!11292 = !DILocation(line: 520, column: 9, scope: !11277)
!11293 = !DILocation(line: 524, column: 28, scope: !11277)
!11294 = !DILocation(line: 524, column: 26, scope: !11277)
!11295 = !DILocation(line: 524, column: 13, scope: !11277)
!11296 = !DILocation(line: 526, column: 5, scope: !11277)
!11297 = !DILocation(line: 527, column: 1, scope: !11277)
!11298 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2057, file: !2057, line: 532, type: !11299, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11301)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!1156, !61, !61, !1218}
!11301 = !{!11302, !11303, !11304, !11305, !11306}
!11302 = !DILocalVariable(name: "block_index", arg: 1, scope: !11298, file: !2057, line: 532, type: !61)
!11303 = !DILocalVariable(name: "offset", arg: 2, scope: !11298, file: !2057, line: 532, type: !61)
!11304 = !DILocalVariable(name: "addr", arg: 3, scope: !11298, file: !2057, line: 532, type: !1218)
!11305 = !DILocalVariable(name: "D", scope: !11298, file: !2057, line: 534, type: !10944)
!11306 = !DILocalVariable(name: "mtdData", scope: !11298, file: !2057, line: 535, type: !2065)
!11307 = !DILocation(line: 0, scope: !11298)
!11308 = !DILocation(line: 535, column: 60, scope: !11298)
!11309 = !DILocation(line: 537, column: 23, scope: !11298)
!11310 = !DILocation(line: 537, column: 13, scope: !11298)
!11311 = !DILocation(line: 537, column: 79, scope: !11298)
!11312 = !DILocation(line: 537, column: 60, scope: !11298)
!11313 = !DILocation(line: 537, column: 58, scope: !11298)
!11314 = !DILocation(line: 537, column: 88, scope: !11298)
!11315 = !DILocation(line: 537, column: 11, scope: !11298)
!11316 = !DILocation(line: 539, column: 5, scope: !11298)
!11317 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2057, file: !2057, line: 545, type: !11318, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11320)
!11318 = !DISubroutineType(types: !11319)
!11319 = !{!2113, !1156}
!11320 = !{!11321}
!11321 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !11317, file: !2057, line: 545, type: !1156)
!11322 = !DILocation(line: 0, scope: !11317)
!11323 = !DILocation(line: 547, column: 9, scope: !11317)
!11324 = !DILocation(line: 558, column: 9, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11326, file: !2057, line: 558, column: 9)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !2057, line: 558, column: 9)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !2057, line: 558, column: 9)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !2057, line: 557, column: 12)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !2057, line: 555, column: 16)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !2057, line: 553, column: 16)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !2057, line: 551, column: 16)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !2057, line: 549, column: 16)
!11333 = distinct !DILexicalBlock(scope: !11317, file: !2057, line: 547, column: 9)
!11334 = !DILocation(line: 560, column: 1, scope: !11317)
!11335 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2057, file: !2057, line: 561, type: !11336, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11339)
!11336 = !DISubroutineType(types: !11337)
!11337 = !{!11338, !61}
!11338 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1396, line: 127, baseType: !2059)
!11339 = !{!11340, !11341, !11342}
!11340 = !DILocalVariable(name: "address", arg: 1, scope: !11335, file: !2057, line: 561, type: !61)
!11341 = !DILocalVariable(name: "block_size", scope: !11335, file: !2057, line: 563, type: !61)
!11342 = !DILocalVariable(name: "block_index", scope: !11335, file: !2057, line: 564, type: !61)
!11343 = !DILocation(line: 0, scope: !11335)
!11344 = !DILocation(line: 566, column: 19, scope: !11335)
!11345 = !DILocation(line: 567, column: 21, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11335, file: !2057, line: 567, column: 9)
!11347 = !DILocation(line: 567, column: 9, scope: !11335)
!11348 = !DILocation(line: 568, column: 9, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11350, file: !2057, line: 568, column: 9)
!11350 = distinct !DILexicalBlock(scope: !11351, file: !2057, line: 568, column: 9)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !2057, line: 568, column: 9)
!11352 = distinct !DILexicalBlock(scope: !11346, file: !2057, line: 567, column: 45)
!11353 = !DILocation(line: 570, column: 18, scope: !11335)
!11354 = !DILocation(line: 571, column: 9, scope: !11335)
!11355 = !DILocation(line: 574, column: 9, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !2057, line: 573, column: 38)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !2057, line: 573, column: 16)
!11358 = distinct !DILexicalBlock(scope: !11335, file: !2057, line: 571, column: 9)
!11359 = !DILocation(line: 576, column: 9, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !2057, line: 575, column: 39)
!11361 = distinct !DILexicalBlock(scope: !11357, file: !2057, line: 575, column: 16)
!11362 = !DILocation(line: 578, column: 9, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !2057, line: 578, column: 9)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !2057, line: 578, column: 9)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !2057, line: 578, column: 9)
!11366 = distinct !DILexicalBlock(scope: !11361, file: !2057, line: 577, column: 12)
!11367 = !DILocation(line: 0, scope: !11358)
!11368 = !DILocation(line: 580, column: 1, scope: !11335)
!11369 = distinct !DISubprogram(name: "hal_flash_init", scope: !2057, file: !2057, line: 583, type: !9061, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!11370 = !DILocation(line: 585, column: 5, scope: !11369)
!11371 = !DILocation(line: 586, column: 5, scope: !11369)
!11372 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2057, file: !2057, line: 589, type: !9061, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !293)
!11373 = !DILocation(line: 591, column: 5, scope: !11372)
!11374 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2057, file: !2057, line: 595, type: !11375, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!2113, !61, !11338}
!11377 = !{!11378, !11379, !11380, !11381, !11382}
!11378 = !DILocalVariable(name: "start_address", arg: 1, scope: !11374, file: !2057, line: 595, type: !61)
!11379 = !DILocalVariable(name: "block", arg: 2, scope: !11374, file: !2057, line: 595, type: !11338)
!11380 = !DILocalVariable(name: "result", scope: !11374, file: !2057, line: 597, type: !1156)
!11381 = !DILocalVariable(name: "block_index", scope: !11374, file: !2057, line: 598, type: !61)
!11382 = !DILocalVariable(name: "erase_type", scope: !11374, file: !2057, line: 599, type: !61)
!11383 = !DILocation(line: 0, scope: !11374)
!11384 = !DILocation(line: 601, column: 9, scope: !11374)
!11385 = !DILocation(line: 602, column: 28, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11387, file: !2057, line: 602, column: 13)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !2057, line: 601, column: 38)
!11388 = distinct !DILexicalBlock(scope: !11374, file: !2057, line: 601, column: 9)
!11389 = !DILocation(line: 602, column: 37, scope: !11386)
!11390 = !DILocation(line: 602, column: 13, scope: !11387)
!11391 = !DILocation(line: 607, column: 28, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !2057, line: 607, column: 13)
!11393 = distinct !DILexicalBlock(scope: !11394, file: !2057, line: 606, column: 46)
!11394 = distinct !DILexicalBlock(scope: !11388, file: !2057, line: 606, column: 16)
!11395 = !DILocation(line: 607, column: 38, scope: !11392)
!11396 = !DILocation(line: 607, column: 13, scope: !11393)
!11397 = !DILocation(line: 612, column: 28, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !2057, line: 612, column: 13)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !2057, line: 611, column: 46)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !2057, line: 611, column: 16)
!11401 = !DILocation(line: 612, column: 38, scope: !11398)
!11402 = !DILocation(line: 612, column: 13, scope: !11399)
!11403 = !DILocation(line: 0, scope: !11388)
!11404 = !DILocation(line: 621, column: 19, scope: !11374)
!11405 = !DILocation(line: 622, column: 21, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11374, file: !2057, line: 622, column: 9)
!11407 = !DILocation(line: 622, column: 9, scope: !11374)
!11408 = !DILocation(line: 626, column: 17, scope: !11374)
!11409 = !DILocation(line: 627, column: 14, scope: !11374)
!11410 = !DILocation(line: 628, column: 16, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11374, file: !2057, line: 628, column: 9)
!11412 = !DILocation(line: 628, column: 9, scope: !11374)
!11413 = !DILocation(line: 629, column: 16, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11411, file: !2057, line: 628, column: 38)
!11415 = !DILocation(line: 629, column: 9, scope: !11414)
!11416 = !DILocation(line: 632, column: 1, scope: !11374)
!11417 = distinct !DISubprogram(name: "hal_flash_read", scope: !2057, file: !2057, line: 634, type: !11418, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11420)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{!2113, !61, !762, !61}
!11420 = !{!11421, !11422, !11423, !11424, !11425}
!11421 = !DILocalVariable(name: "start_address", arg: 1, scope: !11417, file: !2057, line: 634, type: !61)
!11422 = !DILocalVariable(name: "buffer", arg: 2, scope: !11417, file: !2057, line: 634, type: !762)
!11423 = !DILocalVariable(name: "length", arg: 3, scope: !11417, file: !2057, line: 634, type: !61)
!11424 = !DILocalVariable(name: "D", scope: !11417, file: !2057, line: 636, type: !10944)
!11425 = !DILocalVariable(name: "result", scope: !11417, file: !2057, line: 637, type: !1156)
!11426 = !DILocation(line: 0, scope: !11417)
!11427 = !DILocation(line: 639, column: 14, scope: !11417)
!11428 = !DILocation(line: 641, column: 16, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11417, file: !2057, line: 641, column: 9)
!11430 = !DILocation(line: 641, column: 9, scope: !11417)
!11431 = !DILocation(line: 642, column: 16, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11429, file: !2057, line: 641, column: 38)
!11433 = !DILocation(line: 642, column: 9, scope: !11432)
!11434 = !DILocation(line: 645, column: 1, scope: !11417)
!11435 = distinct !DISubprogram(name: "hal_flash_write", scope: !2057, file: !2057, line: 647, type: !11436, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2056, retainedNodes: !11438)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{!2113, !61, !5117, !61}
!11438 = !{!11439, !11440, !11441, !11442, !11443, !11444}
!11439 = !DILocalVariable(name: "address", arg: 1, scope: !11435, file: !2057, line: 647, type: !61)
!11440 = !DILocalVariable(name: "data", arg: 2, scope: !11435, file: !2057, line: 647, type: !5117)
!11441 = !DILocalVariable(name: "length", arg: 3, scope: !11435, file: !2057, line: 647, type: !61)
!11442 = !DILocalVariable(name: "D", scope: !11435, file: !2057, line: 649, type: !10944)
!11443 = !DILocalVariable(name: "result", scope: !11435, file: !2057, line: 650, type: !1156)
!11444 = !DILocalVariable(name: "addr", scope: !11445, file: !2057, line: 660, type: !61)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !2057, line: 659, column: 40)
!11446 = distinct !DILexicalBlock(scope: !11435, file: !2057, line: 659, column: 8)
!11447 = !DILocation(line: 0, scope: !11435)
!11448 = !DILocation(line: 652, column: 14, scope: !11435)
!11449 = !DILocation(line: 653, column: 16, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11435, file: !2057, line: 653, column: 9)
!11451 = !DILocation(line: 653, column: 9, scope: !11435)
!11452 = !DILocation(line: 654, column: 16, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11450, file: !2057, line: 653, column: 38)
!11454 = !DILocation(line: 654, column: 9, scope: !11453)
!11455 = !DILocation(line: 659, column: 8, scope: !11446)
!11456 = !DILocation(line: 659, column: 8, scope: !11435)
!11457 = !DILocation(line: 661, column: 25, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11445, file: !2057, line: 661, column: 8)
!11459 = !DILocation(line: 0, scope: !11445)
!11460 = !DILocation(line: 661, column: 58, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11458, file: !2057, line: 661, column: 8)
!11462 = !DILocation(line: 661, column: 8, scope: !11458)
!11463 = !DILocation(line: 662, column: 13, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11461, file: !2057, line: 661, column: 147)
!11465 = !DILocation(line: 661, column: 128, scope: !11461)
!11466 = distinct !{!11466, !11462, !11467}
!11467 = !DILocation(line: 663, column: 8, scope: !11458)
!11468 = !DILocation(line: 668, column: 1, scope: !11435)
!11469 = distinct !DISubprogram(name: "BlockAddress", scope: !2118, file: !2118, line: 111, type: !11470, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !11472)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{!88, !88, !61}
!11472 = !{!11473, !11474, !11475, !11476, !11477, !11478}
!11473 = !DILocalVariable(name: "DriverData", arg: 1, scope: !11469, file: !2118, line: 111, type: !88)
!11474 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11469, file: !2118, line: 111, type: !61)
!11475 = !DILocalVariable(name: "D", scope: !11469, file: !2118, line: 113, type: !2146)
!11476 = !DILocalVariable(name: "addr", scope: !11469, file: !2118, line: 114, type: !61)
!11477 = !DILocalVariable(name: "region", scope: !11469, file: !2118, line: 115, type: !61)
!11478 = !DILocalVariable(name: "BlockUpperBound", scope: !11469, file: !2118, line: 115, type: !61)
!11479 = !DILocation(line: 0, scope: !11469)
!11480 = !DILocation(line: 117, column: 26, scope: !11469)
!11481 = !DILocation(line: 117, column: 40, scope: !11469)
!11482 = !DILocation(line: 118, column: 28, scope: !11469)
!11483 = !DILocation(line: 118, column: 5, scope: !11469)
!11484 = !DILocation(line: 119, column: 39, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11469, file: !2118, line: 118, column: 43)
!11486 = !DILocation(line: 119, column: 76, scope: !11485)
!11487 = !DILocation(line: 119, column: 52, scope: !11485)
!11488 = !DILocation(line: 119, column: 14, scope: !11485)
!11489 = !DILocation(line: 120, column: 15, scope: !11485)
!11490 = !DILocation(line: 121, column: 50, scope: !11485)
!11491 = !DILocation(line: 121, column: 25, scope: !11485)
!11492 = distinct !{!11492, !11483, !11493}
!11493 = !DILocation(line: 122, column: 5, scope: !11469)
!11494 = !DILocation(line: 123, column: 68, scope: !11469)
!11495 = !DILocation(line: 123, column: 44, scope: !11469)
!11496 = !DILocation(line: 123, column: 25, scope: !11469)
!11497 = !DILocation(line: 123, column: 107, scope: !11469)
!11498 = !DILocation(line: 123, column: 83, scope: !11469)
!11499 = !DILocation(line: 123, column: 10, scope: !11469)
!11500 = !DILocation(line: 125, column: 16, scope: !11469)
!11501 = !DILocation(line: 125, column: 25, scope: !11469)
!11502 = !DILocation(line: 125, column: 5, scope: !11469)
!11503 = distinct !DISubprogram(name: "MapWindow", scope: !2118, file: !2118, line: 180, type: !1751, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !11504)
!11504 = !{!11505, !11506, !11507, !11508}
!11505 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11503, file: !2118, line: 180, type: !88)
!11506 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11503, file: !2118, line: 180, type: !61)
!11507 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !11503, file: !2118, line: 180, type: !61)
!11508 = !DILocalVariable(name: "D", scope: !11503, file: !2118, line: 182, type: !2146)
!11509 = !DILocation(line: 0, scope: !11503)
!11510 = !DILocation(line: 185, column: 5, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !2118, line: 185, column: 5)
!11512 = distinct !DILexicalBlock(scope: !11503, file: !2118, line: 185, column: 5)
!11513 = !DILocation(line: 185, column: 5, scope: !11512)
!11514 = !DILocation(line: 185, column: 5, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11511, file: !2118, line: 185, column: 5)
!11516 = !DILocation(line: 186, column: 27, scope: !11503)
!11517 = !DILocation(line: 186, column: 19, scope: !11503)
!11518 = !DILocation(line: 186, column: 8, scope: !11503)
!11519 = !DILocation(line: 186, column: 17, scope: !11503)
!11520 = !DILocation(line: 188, column: 5, scope: !11503)
!11521 = !DILocation(line: 0, scope: !2139)
!11522 = !DILocation(line: 142, column: 12, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !2139, file: !2118, line: 142, column: 9)
!11524 = !DILocation(line: 142, column: 34, scope: !11523)
!11525 = !DILocation(line: 142, column: 64, scope: !11523)
!11526 = !DILocation(line: 142, column: 75, scope: !11523)
!11527 = !DILocation(line: 142, column: 9, scope: !2139)
!11528 = !DILocation(line: 143, column: 79, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !2118, line: 143, column: 13)
!11530 = distinct !DILexicalBlock(scope: !11523, file: !2118, line: 142, column: 99)
!11531 = !DILocation(line: 143, column: 13, scope: !11530)
!11532 = !DILocation(line: 144, column: 72, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !2118, line: 144, column: 17)
!11534 = distinct !DILexicalBlock(scope: !11529, file: !2118, line: 143, column: 94)
!11535 = !DILocation(line: 144, column: 83, scope: !11533)
!11536 = !DILocation(line: 144, column: 17, scope: !11534)
!11537 = !DILocation(line: 145, column: 87, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !2118, line: 145, column: 21)
!11539 = distinct !DILexicalBlock(scope: !11533, file: !2118, line: 144, column: 107)
!11540 = !DILocation(line: 145, column: 21, scope: !11539)
!11541 = !DILocation(line: 146, column: 33, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11538, file: !2118, line: 145, column: 102)
!11543 = !DILocation(line: 147, column: 25, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11542, file: !2118, line: 147, column: 25)
!11545 = !DILocation(line: 147, column: 62, scope: !11544)
!11546 = !DILocation(line: 147, column: 34, scope: !11544)
!11547 = !DILocation(line: 147, column: 25, scope: !11542)
!11548 = !DILocation(line: 148, column: 91, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11544, file: !2118, line: 147, column: 106)
!11550 = !DILocation(line: 149, column: 111, scope: !11549)
!11551 = !DILocation(line: 149, column: 101, scope: !11549)
!11552 = !DILocation(line: 149, column: 87, scope: !11549)
!11553 = !DILocation(line: 149, column: 99, scope: !11549)
!11554 = !DILocation(line: 150, column: 37, scope: !11549)
!11555 = !DILocation(line: 150, column: 34, scope: !11549)
!11556 = !DILocation(line: 151, column: 21, scope: !11549)
!11557 = !DILocation(line: 152, column: 91, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11544, file: !2118, line: 151, column: 28)
!11559 = !DILocation(line: 153, column: 111, scope: !11558)
!11560 = !DILocation(line: 153, column: 101, scope: !11558)
!11561 = !DILocation(line: 153, column: 87, scope: !11558)
!11562 = !DILocation(line: 153, column: 99, scope: !11558)
!11563 = !DILocation(line: 154, column: 34, scope: !11558)
!11564 = !DILocation(line: 157, column: 32, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11538, file: !2118, line: 156, column: 24)
!11566 = !DILocation(line: 158, column: 83, scope: !11565)
!11567 = !DILocation(line: 159, column: 60, scope: !11565)
!11568 = !DILocation(line: 159, column: 33, scope: !11565)
!11569 = !DILocation(line: 159, column: 30, scope: !11565)
!11570 = !DILocation(line: 162, column: 29, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11533, file: !2118, line: 161, column: 20)
!11572 = !DILocation(line: 163, column: 83, scope: !11571)
!11573 = !DILocation(line: 164, column: 103, scope: !11571)
!11574 = !DILocation(line: 164, column: 93, scope: !11571)
!11575 = !DILocation(line: 164, column: 79, scope: !11571)
!11576 = !DILocation(line: 164, column: 91, scope: !11571)
!11577 = !DILocation(line: 165, column: 56, scope: !11571)
!11578 = !DILocation(line: 165, column: 29, scope: !11571)
!11579 = !DILocation(line: 165, column: 26, scope: !11571)
!11580 = !DILocation(line: 168, column: 24, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11529, file: !2118, line: 167, column: 16)
!11582 = !DILocation(line: 169, column: 75, scope: !11581)
!11583 = !DILocation(line: 170, column: 50, scope: !11581)
!11584 = !DILocation(line: 170, column: 22, scope: !11581)
!11585 = !DILocation(line: 173, column: 21, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11523, file: !2118, line: 172, column: 12)
!11587 = !DILocation(line: 174, column: 75, scope: !11586)
!11588 = !DILocation(line: 175, column: 95, scope: !11586)
!11589 = !DILocation(line: 175, column: 85, scope: !11586)
!11590 = !DILocation(line: 175, column: 71, scope: !11586)
!11591 = !DILocation(line: 175, column: 83, scope: !11586)
!11592 = !DILocation(line: 176, column: 46, scope: !11586)
!11593 = !DILocation(line: 176, column: 18, scope: !11586)
!11594 = !DILocation(line: 0, scope: !11523)
!11595 = !DILocation(line: 178, column: 5, scope: !2139)
!11596 = distinct !DISubprogram(name: "BlockSize", scope: !2118, file: !2118, line: 191, type: !2140, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !11597)
!11597 = !{!11598, !11599, !11600, !11601, !11602}
!11598 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11596, file: !2118, line: 191, type: !88)
!11599 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11596, file: !2118, line: 191, type: !61)
!11600 = !DILocalVariable(name: "D", scope: !11596, file: !2118, line: 193, type: !2146)
!11601 = !DILocalVariable(name: "region", scope: !11596, file: !2118, line: 194, type: !61)
!11602 = !DILocalVariable(name: "BlockUpperBound", scope: !11596, file: !2118, line: 194, type: !61)
!11603 = !DILocation(line: 0, scope: !11596)
!11604 = !DILocation(line: 196, column: 26, scope: !11596)
!11605 = !DILocation(line: 196, column: 45, scope: !11596)
!11606 = !DILocation(line: 197, column: 28, scope: !11596)
!11607 = !DILocation(line: 197, column: 5, scope: !11596)
!11608 = !DILocation(line: 198, column: 15, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11596, file: !2118, line: 197, column: 43)
!11610 = !DILocation(line: 199, column: 50, scope: !11609)
!11611 = !DILocation(line: 199, column: 25, scope: !11609)
!11612 = distinct !{!11612, !11607, !11613}
!11613 = !DILocation(line: 200, column: 5, scope: !11596)
!11614 = !DILocation(line: 202, column: 35, scope: !11596)
!11615 = !DILocation(line: 202, column: 5, scope: !11596)
!11616 = distinct !DISubprogram(name: "BlockIndex", scope: !2118, file: !2118, line: 205, type: !2140, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !11617)
!11617 = !{!11618, !11619, !11620, !11621, !11622, !11623}
!11618 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11616, file: !2118, line: 205, type: !88)
!11619 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11616, file: !2118, line: 205, type: !61)
!11620 = !DILocalVariable(name: "D", scope: !11616, file: !2118, line: 207, type: !2146)
!11621 = !DILocalVariable(name: "region", scope: !11616, file: !2118, line: 208, type: !61)
!11622 = !DILocalVariable(name: "BlockUpperAddr", scope: !11616, file: !2118, line: 208, type: !61)
!11623 = !DILocalVariable(name: "blk_idx", scope: !11616, file: !2118, line: 209, type: !61)
!11624 = !DILocation(line: 0, scope: !11616)
!11625 = !DILocation(line: 211, column: 25, scope: !11616)
!11626 = !DILocation(line: 211, column: 44, scope: !11616)
!11627 = !DILocation(line: 211, column: 81, scope: !11616)
!11628 = !DILocation(line: 211, column: 57, scope: !11616)
!11629 = !DILocation(line: 213, column: 28, scope: !11616)
!11630 = !DILocation(line: 213, column: 40, scope: !11616)
!11631 = !DILocation(line: 213, column: 66, scope: !11616)
!11632 = !DILocation(line: 213, column: 5, scope: !11616)
!11633 = !DILocation(line: 214, column: 17, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11616, file: !2118, line: 213, column: 78)
!11635 = !DILocation(line: 215, column: 18, scope: !11634)
!11636 = !DILocation(line: 216, column: 15, scope: !11634)
!11637 = !DILocation(line: 217, column: 48, scope: !11634)
!11638 = !DILocation(line: 217, column: 85, scope: !11634)
!11639 = !DILocation(line: 217, column: 61, scope: !11634)
!11640 = distinct !{!11640, !11632, !11641}
!11641 = !DILocation(line: 218, column: 5, scope: !11616)
!11642 = !DILocation(line: 221, column: 53, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11644, file: !2118, line: 220, column: 37)
!11644 = distinct !DILexicalBlock(scope: !11616, file: !2118, line: 220, column: 9)
!11645 = !DILocation(line: 221, column: 29, scope: !11643)
!11646 = !DILocation(line: 221, column: 17, scope: !11643)
!11647 = !DILocation(line: 222, column: 5, scope: !11643)
!11648 = !DILocation(line: 0, scope: !11644)
!11649 = !DILocation(line: 225, column: 5, scope: !11616)
!11650 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2118, file: !2118, line: 232, type: !3987, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !293)
!11651 = !DILocation(line: 238, column: 5, scope: !11650)
!11652 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2118, file: !2118, line: 243, type: !3987, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !293)
!11653 = !DILocation(line: 245, column: 5, scope: !11652)
!11654 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2118, file: !2118, line: 249, type: !3987, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !293)
!11655 = !DILocation(line: 254, column: 5, scope: !11654)
!11656 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2118, file: !2118, line: 259, type: !3987, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !293)
!11657 = !DILocation(line: 261, column: 5, scope: !11656)
!11658 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2118, file: !2118, line: 271, type: !7696, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2117, retainedNodes: !11659)
!11659 = !{!11660, !11661}
!11660 = !DILocalVariable(name: "delay", arg: 1, scope: !11658, file: !2118, line: 271, type: !61)
!11661 = !DILocalVariable(name: "ret", scope: !11658, file: !2118, line: 276, type: !3154)
!11662 = !DILocation(line: 0, scope: !11658)
!11663 = !DILocation(line: 277, column: 11, scope: !11658)
!11664 = !DILocation(line: 278, column: 13, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11658, file: !2118, line: 278, column: 9)
!11666 = !DILocation(line: 278, column: 9, scope: !11658)
!11667 = !DILocation(line: 279, column: 9, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !2118, line: 279, column: 9)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !2118, line: 279, column: 9)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !2118, line: 279, column: 9)
!11671 = distinct !DILexicalBlock(scope: !11665, file: !2118, line: 278, column: 35)
!11672 = !DILocation(line: 282, column: 1, scope: !11658)
!11673 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2789, file: !2789, line: 58, type: !11674, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !11676)
!11674 = !DISubroutineType(types: !11675)
!11675 = !{null, !2427, !7, !2427, null}
!11676 = !{!11677, !11678, !11679, !11680, !11689}
!11677 = !DILocalVariable(name: "func", arg: 1, scope: !11673, file: !2789, line: 58, type: !2427)
!11678 = !DILocalVariable(name: "line", arg: 2, scope: !11673, file: !2789, line: 58, type: !7)
!11679 = !DILocalVariable(name: "message", arg: 3, scope: !11673, file: !2789, line: 58, type: !2427)
!11680 = !DILocalVariable(name: "ap", scope: !11673, file: !2789, line: 60, type: !11681)
!11681 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !11682, line: 46, baseType: !11683)
!11682 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!11683 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !11684, line: 32, baseType: !11685)
!11684 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!11685 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2789, baseType: !11686)
!11686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11687)
!11687 = !{!11688}
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11686, file: !2789, line: 60, baseType: !88, size: 32)
!11689 = !DILocalVariable(name: "mask", scope: !11673, file: !2789, line: 62, type: !61)
!11690 = !DILocation(line: 0, scope: !11673)
!11691 = !DILocation(line: 60, column: 5, scope: !11673)
!11692 = !DILocation(line: 60, column: 13, scope: !11673)
!11693 = !DILocation(line: 62, column: 5, scope: !11673)
!11694 = !DILocation(line: 63, column: 5, scope: !11673)
!11695 = !DILocation(line: 65, column: 5, scope: !11673)
!11696 = !DILocation(line: 66, column: 5, scope: !11673)
!11697 = !DILocation(line: 67, column: 5, scope: !11673)
!11698 = !DILocation(line: 69, column: 37, scope: !11673)
!11699 = !DILocation(line: 69, column: 5, scope: !11673)
!11700 = !DILocation(line: 71, column: 1, scope: !11673)
!11701 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2789, file: !2789, line: 72, type: !11674, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !11702)
!11702 = !{!11703, !11704, !11705, !11706, !11707}
!11703 = !DILocalVariable(name: "func", arg: 1, scope: !11701, file: !2789, line: 72, type: !2427)
!11704 = !DILocalVariable(name: "line", arg: 2, scope: !11701, file: !2789, line: 72, type: !7)
!11705 = !DILocalVariable(name: "message", arg: 3, scope: !11701, file: !2789, line: 72, type: !2427)
!11706 = !DILocalVariable(name: "ap", scope: !11701, file: !2789, line: 74, type: !11681)
!11707 = !DILocalVariable(name: "mask", scope: !11701, file: !2789, line: 76, type: !61)
!11708 = !DILocation(line: 0, scope: !11701)
!11709 = !DILocation(line: 74, column: 5, scope: !11701)
!11710 = !DILocation(line: 74, column: 13, scope: !11701)
!11711 = !DILocation(line: 76, column: 5, scope: !11701)
!11712 = !DILocation(line: 77, column: 5, scope: !11701)
!11713 = !DILocation(line: 79, column: 5, scope: !11701)
!11714 = !DILocation(line: 80, column: 5, scope: !11701)
!11715 = !DILocation(line: 81, column: 5, scope: !11701)
!11716 = !DILocation(line: 83, column: 37, scope: !11701)
!11717 = !DILocation(line: 83, column: 5, scope: !11701)
!11718 = !DILocation(line: 85, column: 1, scope: !11701)
!11719 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2789, file: !2789, line: 86, type: !11674, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !11720)
!11720 = !{!11721, !11722, !11723, !11724, !11725}
!11721 = !DILocalVariable(name: "func", arg: 1, scope: !11719, file: !2789, line: 86, type: !2427)
!11722 = !DILocalVariable(name: "line", arg: 2, scope: !11719, file: !2789, line: 86, type: !7)
!11723 = !DILocalVariable(name: "message", arg: 3, scope: !11719, file: !2789, line: 86, type: !2427)
!11724 = !DILocalVariable(name: "ap", scope: !11719, file: !2789, line: 88, type: !11681)
!11725 = !DILocalVariable(name: "mask", scope: !11719, file: !2789, line: 90, type: !61)
!11726 = !DILocation(line: 0, scope: !11719)
!11727 = !DILocation(line: 88, column: 5, scope: !11719)
!11728 = !DILocation(line: 88, column: 13, scope: !11719)
!11729 = !DILocation(line: 90, column: 5, scope: !11719)
!11730 = !DILocation(line: 91, column: 5, scope: !11719)
!11731 = !DILocation(line: 93, column: 5, scope: !11719)
!11732 = !DILocation(line: 94, column: 5, scope: !11719)
!11733 = !DILocation(line: 95, column: 5, scope: !11719)
!11734 = !DILocation(line: 97, column: 37, scope: !11719)
!11735 = !DILocation(line: 97, column: 5, scope: !11719)
!11736 = !DILocation(line: 99, column: 1, scope: !11719)
!11737 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2789, file: !2789, line: 101, type: !11738, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !11742)
!11738 = !DISubroutineType(types: !11739)
!11739 = !{null, !2427, !7, !2427, !11740, !7, null}
!11740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11741, size: 32)
!11741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11742 = !{!11743, !11744, !11745, !11746, !11747}
!11743 = !DILocalVariable(name: "func", arg: 1, scope: !11737, file: !2789, line: 101, type: !2427)
!11744 = !DILocalVariable(name: "line", arg: 2, scope: !11737, file: !2789, line: 101, type: !7)
!11745 = !DILocalVariable(name: "message", arg: 3, scope: !11737, file: !2789, line: 101, type: !2427)
!11746 = !DILocalVariable(name: "data", arg: 4, scope: !11737, file: !2789, line: 101, type: !11740)
!11747 = !DILocalVariable(name: "length", arg: 5, scope: !11737, file: !2789, line: 101, type: !7)
!11748 = !DILocation(line: 0, scope: !11737)
!11749 = !DILocation(line: 103, column: 1, scope: !11737)
!11750 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2198, file: !2198, line: 87, type: !3735, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !11751)
!11751 = !{!11752, !11753}
!11752 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11750, file: !2198, line: 87, type: !61)
!11753 = !DILocalVariable(name: "value", scope: !11750, file: !2198, line: 89, type: !61)
!11754 = !DILocation(line: 0, scope: !11750)
!11755 = !DILocation(line: 91, column: 41, scope: !11750)
!11756 = !DILocation(line: 91, column: 5, scope: !11750)
!11757 = !DILocation(line: 91, column: 19, scope: !11750)
!11758 = !DILocation(line: 91, column: 31, scope: !11750)
!11759 = !DILocation(line: 92, column: 77, scope: !11750)
!11760 = !DILocation(line: 92, column: 60, scope: !11750)
!11761 = !DILocation(line: 92, column: 31, scope: !11750)
!11762 = !DILocation(line: 94, column: 5, scope: !11750)
!11763 = !DILocation(line: 94, column: 27, scope: !11750)
!11764 = !DILocation(line: 94, column: 39, scope: !11750)
!11765 = !DILocation(line: 94, column: 65, scope: !11750)
!11766 = distinct !{!11766, !11762, !11767}
!11767 = !DILocation(line: 94, column: 70, scope: !11750)
!11768 = !DILocation(line: 96, column: 29, scope: !11750)
!11769 = !DILocation(line: 96, column: 64, scope: !11750)
!11770 = !DILocation(line: 98, column: 5, scope: !11750)
!11771 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2198, file: !2198, line: 102, type: !7183, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !11772)
!11772 = !{!11773, !11774}
!11773 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11771, file: !2198, line: 102, type: !61)
!11774 = !DILocalVariable(name: "value", arg: 2, scope: !11771, file: !2198, line: 102, type: !61)
!11775 = !DILocation(line: 0, scope: !11771)
!11776 = !DILocation(line: 106, column: 40, scope: !11771)
!11777 = !DILocation(line: 106, column: 77, scope: !11771)
!11778 = !DILocation(line: 106, column: 102, scope: !11771)
!11779 = !DILocation(line: 106, column: 5, scope: !11771)
!11780 = !DILocation(line: 106, column: 19, scope: !11771)
!11781 = !DILocation(line: 106, column: 31, scope: !11771)
!11782 = !DILocation(line: 107, column: 77, scope: !11771)
!11783 = !DILocation(line: 107, column: 60, scope: !11771)
!11784 = !DILocation(line: 107, column: 31, scope: !11771)
!11785 = !DILocation(line: 109, column: 5, scope: !11771)
!11786 = !DILocation(line: 109, column: 27, scope: !11771)
!11787 = !DILocation(line: 109, column: 39, scope: !11771)
!11788 = !DILocation(line: 109, column: 65, scope: !11771)
!11789 = distinct !{!11789, !11785, !11790}
!11790 = !DILocation(line: 109, column: 70, scope: !11771)
!11791 = !DILocation(line: 111, column: 5, scope: !11771)
!11792 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2198, file: !2198, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!11793 = !DILocation(line: 117, column: 36, scope: !11792)
!11794 = !DILocation(line: 117, column: 18, scope: !11792)
!11795 = !DILocation(line: 118, column: 37, scope: !11792)
!11796 = !DILocation(line: 118, column: 18, scope: !11792)
!11797 = !DILocation(line: 119, column: 37, scope: !11792)
!11798 = !DILocation(line: 119, column: 19, scope: !11792)
!11799 = !DILocation(line: 120, column: 37, scope: !11792)
!11800 = !DILocation(line: 120, column: 19, scope: !11792)
!11801 = !DILocation(line: 121, column: 37, scope: !11792)
!11802 = !DILocation(line: 121, column: 19, scope: !11792)
!11803 = !DILocation(line: 122, column: 37, scope: !11792)
!11804 = !DILocation(line: 122, column: 19, scope: !11792)
!11805 = !DILocation(line: 123, column: 37, scope: !11792)
!11806 = !DILocation(line: 123, column: 19, scope: !11792)
!11807 = !DILocation(line: 125, column: 37, scope: !11792)
!11808 = !DILocation(line: 125, column: 19, scope: !11792)
!11809 = !DILocation(line: 126, column: 37, scope: !11792)
!11810 = !DILocation(line: 126, column: 19, scope: !11792)
!11811 = !DILocation(line: 127, column: 37, scope: !11792)
!11812 = !DILocation(line: 127, column: 19, scope: !11792)
!11813 = !DILocation(line: 128, column: 37, scope: !11792)
!11814 = !DILocation(line: 128, column: 19, scope: !11792)
!11815 = !DILocation(line: 130, column: 36, scope: !11792)
!11816 = !DILocation(line: 130, column: 18, scope: !11792)
!11817 = !DILocation(line: 131, column: 36, scope: !11792)
!11818 = !DILocation(line: 131, column: 18, scope: !11792)
!11819 = !DILocation(line: 133, column: 5, scope: !11792)
!11820 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2198, file: !2198, line: 140, type: !11821, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!11821 = !DISubroutineType(types: !11822)
!11822 = !{!7}
!11823 = !DILocation(line: 144, column: 5, scope: !11820)
!11824 = !DILocation(line: 144, column: 19, scope: !11820)
!11825 = !DILocation(line: 144, column: 28, scope: !11820)
!11826 = !DILocation(line: 147, column: 19, scope: !11820)
!11827 = !DILocation(line: 147, column: 28, scope: !11820)
!11828 = !DILocation(line: 150, column: 19, scope: !11820)
!11829 = !DILocation(line: 150, column: 28, scope: !11820)
!11830 = !DILocation(line: 152, column: 5, scope: !11820)
!11831 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2198, file: !2198, line: 157, type: !8595, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !11832)
!11832 = !{!11833, !11834, !11835, !11836, !11837, !11838}
!11833 = !DILocalVariable(name: "mbist_src", scope: !11831, file: !2198, line: 159, type: !61)
!11834 = !DILocalVariable(name: "mbist_len", scope: !11831, file: !2198, line: 159, type: !61)
!11835 = !DILocalVariable(name: "mbist_data", scope: !11831, file: !2198, line: 159, type: !3708)
!11836 = !DILocalVariable(name: "i", scope: !11831, file: !2198, line: 160, type: !61)
!11837 = !DILocalVariable(name: "bist_data_inv", scope: !11831, file: !2198, line: 160, type: !61)
!11838 = !DILocalVariable(name: "bist_data_random", scope: !11831, file: !2198, line: 160, type: !61)
!11839 = !DILocation(line: 159, column: 36, scope: !11831)
!11840 = !DILocation(line: 0, scope: !11831)
!11841 = !DILocation(line: 165, column: 5, scope: !11831)
!11842 = !DILocation(line: 165, column: 19, scope: !11831)
!11843 = !DILocation(line: 165, column: 30, scope: !11831)
!11844 = !DILocation(line: 166, column: 5, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11831, file: !2198, line: 166, column: 5)
!11846 = !DILocation(line: 167, column: 9, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !2198, line: 167, column: 9)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !2198, line: 166, column: 66)
!11849 = distinct !DILexicalBlock(scope: !11845, file: !2198, line: 166, column: 5)
!11850 = !DILocation(line: 168, column: 13, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !2198, line: 168, column: 13)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !2198, line: 167, column: 34)
!11853 = distinct !DILexicalBlock(scope: !11847, file: !2198, line: 167, column: 9)
!11854 = !DILocation(line: 168, column: 57, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11851, file: !2198, line: 168, column: 13)
!11856 = distinct !{!11856, !11850, !11857}
!11857 = !DILocation(line: 183, column: 13, scope: !11851)
!11858 = !DILocation(line: 170, column: 42, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11855, file: !2198, line: 168, column: 83)
!11860 = !DILocation(line: 172, column: 42, scope: !11859)
!11861 = !DILocation(line: 174, column: 45, scope: !11859)
!11862 = !DILocation(line: 174, column: 59, scope: !11859)
!11863 = !DILocation(line: 174, column: 154, scope: !11859)
!11864 = !DILocation(line: 174, column: 87, scope: !11859)
!11865 = !DILocation(line: 174, column: 134, scope: !11859)
!11866 = !DILocation(line: 174, column: 42, scope: !11859)
!11867 = !DILocation(line: 175, column: 42, scope: !11859)
!11868 = !DILocation(line: 177, column: 17, scope: !11859)
!11869 = !DILocation(line: 177, column: 39, scope: !11859)
!11870 = !DILocation(line: 177, column: 50, scope: !11859)
!11871 = !DILocation(line: 177, column: 71, scope: !11859)
!11872 = distinct !{!11872, !11868, !11873}
!11873 = !DILocation(line: 177, column: 78, scope: !11859)
!11874 = !DILocation(line: 179, column: 36, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11859, file: !2198, line: 179, column: 21)
!11876 = !DILocation(line: 179, column: 47, scope: !11875)
!11877 = !DILocation(line: 179, column: 69, scope: !11875)
!11878 = !DILocation(line: 168, column: 79, scope: !11855)
!11879 = !DILocation(line: 179, column: 21, scope: !11859)
!11880 = !DILocation(line: 167, column: 30, scope: !11853)
!11881 = !DILocation(line: 167, column: 23, scope: !11853)
!11882 = distinct !{!11882, !11846, !11883}
!11883 = !DILocation(line: 184, column: 9, scope: !11847)
!11884 = !DILocation(line: 166, column: 62, scope: !11849)
!11885 = !DILocation(line: 166, column: 43, scope: !11849)
!11886 = distinct !{!11886, !11844, !11887}
!11887 = !DILocation(line: 185, column: 5, scope: !11845)
!11888 = !DILocation(line: 189, column: 1, scope: !11831)
!11889 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2198, file: !2198, line: 190, type: !8595, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!11890 = !DILocation(line: 192, column: 9, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11889, file: !2198, line: 192, column: 9)
!11892 = !DILocation(line: 192, column: 26, scope: !11891)
!11893 = !DILocation(line: 0, scope: !11889)
!11894 = !DILocation(line: 197, column: 1, scope: !11889)
!11895 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2198, file: !2198, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !11896)
!11896 = !{!11897, !11898}
!11897 = !DILocalVariable(name: "dqy_in_del", scope: !11895, file: !2198, line: 203, type: !1156)
!11898 = !DILocalVariable(name: "dqs_in_del", scope: !11895, file: !2198, line: 204, type: !1156)
!11899 = !DILocation(line: 0, scope: !11895)
!11900 = !DILocation(line: 206, column: 5, scope: !11895)
!11901 = !DILocation(line: 206, column: 19, scope: !11895)
!11902 = !DILocation(line: 206, column: 28, scope: !11895)
!11903 = !DILocation(line: 207, column: 19, scope: !11895)
!11904 = !DILocation(line: 207, column: 28, scope: !11895)
!11905 = !DILocation(line: 208, column: 19, scope: !11895)
!11906 = !DILocation(line: 208, column: 28, scope: !11895)
!11907 = !DILocation(line: 209, column: 19, scope: !11895)
!11908 = !DILocation(line: 209, column: 28, scope: !11895)
!11909 = !DILocation(line: 212, column: 23, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !2198, line: 211, column: 78)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !2198, line: 211, column: 5)
!11912 = distinct !DILexicalBlock(scope: !11895, file: !2198, line: 211, column: 5)
!11913 = !DILocation(line: 212, column: 32, scope: !11910)
!11914 = !DILocation(line: 213, column: 23, scope: !11910)
!11915 = !DILocation(line: 213, column: 32, scope: !11910)
!11916 = !DILocation(line: 215, column: 19, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11910, file: !2198, line: 215, column: 13)
!11918 = !DILocation(line: 215, column: 15, scope: !11917)
!11919 = !DILocation(line: 215, column: 13, scope: !11910)
!11920 = !DILocation(line: 211, column: 40, scope: !11911)
!11921 = !DILocation(line: 211, column: 5, scope: !11912)
!11922 = distinct !{!11922, !11921, !11923}
!11923 = !DILocation(line: 218, column: 5, scope: !11912)
!11924 = !DILocation(line: 211, column: 57, scope: !11911)
!11925 = !DILocation(line: 212, column: 9, scope: !11910)
!11926 = !DILocation(line: 212, column: 45, scope: !11910)
!11927 = !DILocation(line: 212, column: 83, scope: !11910)
!11928 = !DILocation(line: 212, column: 121, scope: !11910)
!11929 = !DILocation(line: 212, column: 70, scope: !11910)
!11930 = !DILocation(line: 212, column: 108, scope: !11910)
!11931 = !DILocation(line: 212, column: 146, scope: !11910)
!11932 = !DILocation(line: 222, column: 49, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !2198, line: 221, column: 84)
!11934 = distinct !DILexicalBlock(scope: !11935, file: !2198, line: 221, column: 9)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !2198, line: 221, column: 9)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !2198, line: 220, column: 25)
!11937 = distinct !DILexicalBlock(scope: !11895, file: !2198, line: 220, column: 9)
!11938 = !DILocation(line: 222, column: 13, scope: !11933)
!11939 = !DILocation(line: 222, column: 27, scope: !11933)
!11940 = !DILocation(line: 222, column: 36, scope: !11933)
!11941 = !DILocation(line: 224, column: 23, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11933, file: !2198, line: 224, column: 17)
!11943 = !DILocation(line: 224, column: 19, scope: !11942)
!11944 = !DILocation(line: 224, column: 17, scope: !11933)
!11945 = distinct !{!11945, !11946, !11947}
!11946 = !DILocation(line: 221, column: 9, scope: !11935)
!11947 = !DILocation(line: 227, column: 9, scope: !11935)
!11948 = !DILocation(line: 230, column: 1, scope: !11895)
!11949 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2198, file: !2198, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!11950 = !DILocation(line: 257, column: 26, scope: !11949)
!11951 = !DILocation(line: 259, column: 5, scope: !11949)
!11952 = !DILocation(line: 259, column: 19, scope: !11949)
!11953 = !DILocation(line: 259, column: 29, scope: !11949)
!11954 = !DILocation(line: 260, column: 5, scope: !11949)
!11955 = !DILocation(line: 260, column: 27, scope: !11949)
!11956 = !DILocation(line: 260, column: 93, scope: !11949)
!11957 = distinct !{!11957, !11954, !11958}
!11958 = !DILocation(line: 260, column: 98, scope: !11949)
!11959 = !DILocation(line: 261, column: 29, scope: !11949)
!11960 = !DILocation(line: 262, column: 5, scope: !11949)
!11961 = !DILocation(line: 262, column: 27, scope: !11949)
!11962 = !DILocation(line: 262, column: 93, scope: !11949)
!11963 = distinct !{!11963, !11960, !11964}
!11964 = !DILocation(line: 262, column: 98, scope: !11949)
!11965 = !DILocation(line: 264, column: 42, scope: !11949)
!11966 = !DILocation(line: 265, column: 48, scope: !11949)
!11967 = !DILocation(line: 267, column: 5, scope: !11949)
!11968 = !DILocation(line: 267, column: 27, scope: !11949)
!11969 = !DILocation(line: 267, column: 39, scope: !11949)
!11970 = !DILocation(line: 267, column: 65, scope: !11949)
!11971 = distinct !{!11971, !11967, !11972}
!11972 = !DILocation(line: 267, column: 70, scope: !11949)
!11973 = !DILocation(line: 269, column: 5, scope: !11949)
!11974 = !DILocation(line: 273, column: 8, scope: !11949)
!11975 = !DILocation(line: 275, column: 5, scope: !11949)
!11976 = !DILocation(line: 275, column: 27, scope: !11949)
!11977 = !DILocation(line: 275, column: 39, scope: !11949)
!11978 = !DILocation(line: 275, column: 65, scope: !11949)
!11979 = distinct !{!11979, !11975, !11980}
!11980 = !DILocation(line: 275, column: 70, scope: !11949)
!11981 = !DILocation(line: 278, column: 9, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11949, file: !2198, line: 278, column: 9)
!11983 = !DILocation(line: 278, column: 44, scope: !11982)
!11984 = !DILocation(line: 278, column: 9, scope: !11949)
!11985 = !DILocation(line: 279, column: 13, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11987, file: !2198, line: 279, column: 12)
!11987 = distinct !DILexicalBlock(scope: !11982, file: !2198, line: 278, column: 55)
!11988 = !DILocation(line: 279, column: 48, scope: !11986)
!11989 = !DILocation(line: 279, column: 56, scope: !11986)
!11990 = !DILocation(line: 0, scope: !11986)
!11991 = !DILocation(line: 288, column: 1, scope: !11949)
!11992 = distinct !DISubprogram(name: "custom_setEMI", scope: !2198, file: !2198, line: 294, type: !11993, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{!1467}
!11995 = !DILocation(line: 298, column: 5, scope: !11992)
!11996 = !DILocation(line: 300, column: 5, scope: !11992)
!11997 = !DILocation(line: 302, column: 20, scope: !11992)
!11998 = !DILocation(line: 302, column: 18, scope: !11992)
!11999 = !DILocation(line: 303, column: 20, scope: !11992)
!12000 = !DILocation(line: 303, column: 18, scope: !11992)
!12001 = !DILocation(line: 304, column: 20, scope: !11992)
!12002 = !DILocation(line: 304, column: 18, scope: !11992)
!12003 = !DILocation(line: 307, column: 5, scope: !11992)
!12004 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2198, file: !2198, line: 312, type: !11993, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12005 = !DILocation(line: 319, column: 29, scope: !12004)
!12006 = !DILocation(line: 319, column: 5, scope: !12004)
!12007 = !DILocation(line: 319, column: 19, scope: !12004)
!12008 = !DILocation(line: 319, column: 27, scope: !12004)
!12009 = !DILocation(line: 320, column: 29, scope: !12004)
!12010 = !DILocation(line: 320, column: 19, scope: !12004)
!12011 = !DILocation(line: 320, column: 27, scope: !12004)
!12012 = !DILocation(line: 322, column: 30, scope: !12004)
!12013 = !DILocation(line: 322, column: 19, scope: !12004)
!12014 = !DILocation(line: 322, column: 28, scope: !12004)
!12015 = !DILocation(line: 324, column: 30, scope: !12004)
!12016 = !DILocation(line: 324, column: 19, scope: !12004)
!12017 = !DILocation(line: 324, column: 28, scope: !12004)
!12018 = !DILocation(line: 326, column: 31, scope: !12004)
!12019 = !DILocation(line: 326, column: 19, scope: !12004)
!12020 = !DILocation(line: 326, column: 29, scope: !12004)
!12021 = !DILocation(line: 327, column: 31, scope: !12004)
!12022 = !DILocation(line: 327, column: 19, scope: !12004)
!12023 = !DILocation(line: 327, column: 29, scope: !12004)
!12024 = !DILocation(line: 332, column: 30, scope: !12004)
!12025 = !DILocation(line: 332, column: 19, scope: !12004)
!12026 = !DILocation(line: 332, column: 28, scope: !12004)
!12027 = !DILocation(line: 333, column: 30, scope: !12004)
!12028 = !DILocation(line: 333, column: 19, scope: !12004)
!12029 = !DILocation(line: 333, column: 28, scope: !12004)
!12030 = !DILocation(line: 334, column: 30, scope: !12004)
!12031 = !DILocation(line: 334, column: 19, scope: !12004)
!12032 = !DILocation(line: 334, column: 28, scope: !12004)
!12033 = !DILocation(line: 336, column: 30, scope: !12004)
!12034 = !DILocation(line: 336, column: 19, scope: !12004)
!12035 = !DILocation(line: 336, column: 28, scope: !12004)
!12036 = !DILocation(line: 337, column: 30, scope: !12004)
!12037 = !DILocation(line: 337, column: 19, scope: !12004)
!12038 = !DILocation(line: 337, column: 28, scope: !12004)
!12039 = !DILocation(line: 338, column: 30, scope: !12004)
!12040 = !DILocation(line: 338, column: 19, scope: !12004)
!12041 = !DILocation(line: 338, column: 28, scope: !12004)
!12042 = !DILocation(line: 339, column: 30, scope: !12004)
!12043 = !DILocation(line: 339, column: 19, scope: !12004)
!12044 = !DILocation(line: 339, column: 28, scope: !12004)
!12045 = !DILocation(line: 341, column: 5, scope: !12004)
!12046 = !DILocation(line: 345, column: 5, scope: !12004)
!12047 = !DILocation(line: 345, column: 19, scope: !12004)
!12048 = !DILocation(line: 345, column: 28, scope: !12004)
!12049 = !DILocation(line: 346, column: 5, scope: !12004)
!12050 = !DILocation(line: 346, column: 28, scope: !12004)
!12051 = !DILocation(line: 346, column: 82, scope: !12004)
!12052 = distinct !{!12052, !12049, !12053}
!12053 = !DILocation(line: 346, column: 87, scope: !12004)
!12054 = !DILocation(line: 347, column: 28, scope: !12004)
!12055 = !DILocation(line: 348, column: 5, scope: !12004)
!12056 = !DILocation(line: 348, column: 28, scope: !12004)
!12057 = !DILocation(line: 348, column: 82, scope: !12004)
!12058 = distinct !{!12058, !12055, !12059}
!12059 = !DILocation(line: 348, column: 87, scope: !12004)
!12060 = !DILocation(line: 349, column: 28, scope: !12004)
!12061 = !DILocation(line: 351, column: 5, scope: !12004)
!12062 = !DILocation(line: 353, column: 5, scope: !12004)
!12063 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2198, file: !2198, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12064 = !DILocation(line: 361, column: 36, scope: !12063)
!12065 = !DILocation(line: 361, column: 50, scope: !12063)
!12066 = !DILocation(line: 361, column: 34, scope: !12063)
!12067 = !DILocation(line: 362, column: 50, scope: !12063)
!12068 = !DILocation(line: 362, column: 34, scope: !12063)
!12069 = !DILocation(line: 363, column: 50, scope: !12063)
!12070 = !DILocation(line: 363, column: 34, scope: !12063)
!12071 = !DILocation(line: 364, column: 50, scope: !12063)
!12072 = !DILocation(line: 364, column: 34, scope: !12063)
!12073 = !DILocation(line: 365, column: 50, scope: !12063)
!12074 = !DILocation(line: 365, column: 34, scope: !12063)
!12075 = !DILocation(line: 366, column: 50, scope: !12063)
!12076 = !DILocation(line: 366, column: 34, scope: !12063)
!12077 = !DILocation(line: 367, column: 50, scope: !12063)
!12078 = !DILocation(line: 367, column: 34, scope: !12063)
!12079 = !DILocation(line: 368, column: 50, scope: !12063)
!12080 = !DILocation(line: 368, column: 34, scope: !12063)
!12081 = !DILocation(line: 369, column: 50, scope: !12063)
!12082 = !DILocation(line: 369, column: 34, scope: !12063)
!12083 = !DILocation(line: 370, column: 50, scope: !12063)
!12084 = !DILocation(line: 370, column: 34, scope: !12063)
!12085 = !DILocation(line: 371, column: 50, scope: !12063)
!12086 = !DILocation(line: 371, column: 34, scope: !12063)
!12087 = !DILocation(line: 372, column: 50, scope: !12063)
!12088 = !DILocation(line: 372, column: 34, scope: !12063)
!12089 = !DILocation(line: 373, column: 51, scope: !12063)
!12090 = !DILocation(line: 373, column: 35, scope: !12063)
!12091 = !DILocation(line: 374, column: 51, scope: !12063)
!12092 = !DILocation(line: 374, column: 35, scope: !12063)
!12093 = !DILocation(line: 375, column: 50, scope: !12063)
!12094 = !DILocation(line: 375, column: 34, scope: !12063)
!12095 = !DILocation(line: 376, column: 50, scope: !12063)
!12096 = !DILocation(line: 376, column: 34, scope: !12063)
!12097 = !DILocation(line: 377, column: 50, scope: !12063)
!12098 = !DILocation(line: 377, column: 34, scope: !12063)
!12099 = !DILocation(line: 378, column: 50, scope: !12063)
!12100 = !DILocation(line: 378, column: 34, scope: !12063)
!12101 = !DILocation(line: 379, column: 50, scope: !12063)
!12102 = !DILocation(line: 379, column: 34, scope: !12063)
!12103 = !DILocation(line: 380, column: 50, scope: !12063)
!12104 = !DILocation(line: 380, column: 34, scope: !12063)
!12105 = !DILocation(line: 382, column: 1, scope: !12063)
!12106 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2198, file: !2198, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12107 = !DILocation(line: 387, column: 5, scope: !12106)
!12108 = !DILocation(line: 387, column: 27, scope: !12106)
!12109 = !DILocation(line: 387, column: 36, scope: !12106)
!12110 = !DILocation(line: 387, column: 76, scope: !12106)
!12111 = distinct !{!12111, !12107, !12112}
!12112 = !DILocation(line: 387, column: 84, scope: !12106)
!12113 = !DILocation(line: 388, column: 50, scope: !12106)
!12114 = !DILocation(line: 388, column: 19, scope: !12106)
!12115 = !DILocation(line: 388, column: 28, scope: !12106)
!12116 = !DILocation(line: 389, column: 50, scope: !12106)
!12117 = !DILocation(line: 389, column: 19, scope: !12106)
!12118 = !DILocation(line: 389, column: 28, scope: !12106)
!12119 = !DILocation(line: 390, column: 50, scope: !12106)
!12120 = !DILocation(line: 390, column: 19, scope: !12106)
!12121 = !DILocation(line: 390, column: 28, scope: !12106)
!12122 = !DILocation(line: 391, column: 50, scope: !12106)
!12123 = !DILocation(line: 391, column: 19, scope: !12106)
!12124 = !DILocation(line: 391, column: 28, scope: !12106)
!12125 = !DILocation(line: 392, column: 50, scope: !12106)
!12126 = !DILocation(line: 392, column: 19, scope: !12106)
!12127 = !DILocation(line: 392, column: 28, scope: !12106)
!12128 = !DILocation(line: 393, column: 50, scope: !12106)
!12129 = !DILocation(line: 393, column: 19, scope: !12106)
!12130 = !DILocation(line: 393, column: 28, scope: !12106)
!12131 = !DILocation(line: 394, column: 51, scope: !12106)
!12132 = !DILocation(line: 394, column: 19, scope: !12106)
!12133 = !DILocation(line: 394, column: 29, scope: !12106)
!12134 = !DILocation(line: 395, column: 51, scope: !12106)
!12135 = !DILocation(line: 395, column: 19, scope: !12106)
!12136 = !DILocation(line: 395, column: 29, scope: !12106)
!12137 = !DILocation(line: 396, column: 50, scope: !12106)
!12138 = !DILocation(line: 396, column: 19, scope: !12106)
!12139 = !DILocation(line: 396, column: 28, scope: !12106)
!12140 = !DILocation(line: 397, column: 50, scope: !12106)
!12141 = !DILocation(line: 397, column: 19, scope: !12106)
!12142 = !DILocation(line: 397, column: 28, scope: !12106)
!12143 = !DILocation(line: 398, column: 50, scope: !12106)
!12144 = !DILocation(line: 398, column: 19, scope: !12106)
!12145 = !DILocation(line: 398, column: 28, scope: !12106)
!12146 = !DILocation(line: 399, column: 50, scope: !12106)
!12147 = !DILocation(line: 399, column: 19, scope: !12106)
!12148 = !DILocation(line: 399, column: 28, scope: !12106)
!12149 = !DILocation(line: 400, column: 50, scope: !12106)
!12150 = !DILocation(line: 400, column: 19, scope: !12106)
!12151 = !DILocation(line: 400, column: 28, scope: !12106)
!12152 = !DILocation(line: 401, column: 50, scope: !12106)
!12153 = !DILocation(line: 401, column: 19, scope: !12106)
!12154 = !DILocation(line: 401, column: 28, scope: !12106)
!12155 = !DILocation(line: 402, column: 50, scope: !12106)
!12156 = !DILocation(line: 402, column: 19, scope: !12106)
!12157 = !DILocation(line: 402, column: 28, scope: !12106)
!12158 = !DILocation(line: 403, column: 50, scope: !12106)
!12159 = !DILocation(line: 403, column: 19, scope: !12106)
!12160 = !DILocation(line: 403, column: 28, scope: !12106)
!12161 = !DILocation(line: 404, column: 50, scope: !12106)
!12162 = !DILocation(line: 404, column: 19, scope: !12106)
!12163 = !DILocation(line: 404, column: 28, scope: !12106)
!12164 = !DILocation(line: 405, column: 50, scope: !12106)
!12165 = !DILocation(line: 405, column: 19, scope: !12106)
!12166 = !DILocation(line: 405, column: 28, scope: !12106)
!12167 = !DILocation(line: 406, column: 50, scope: !12106)
!12168 = !DILocation(line: 406, column: 19, scope: !12106)
!12169 = !DILocation(line: 406, column: 28, scope: !12106)
!12170 = !DILocation(line: 408, column: 1, scope: !12106)
!12171 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2198, file: !2198, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12172 = !DILocation(line: 413, column: 29, scope: !12171)
!12173 = !DILocation(line: 413, column: 43, scope: !12171)
!12174 = !DILocation(line: 413, column: 51, scope: !12171)
!12175 = !DILocation(line: 413, column: 27, scope: !12171)
!12176 = !DILocation(line: 416, column: 19, scope: !12171)
!12177 = !DILocation(line: 416, column: 29, scope: !12171)
!12178 = !DILocation(line: 417, column: 5, scope: !12171)
!12179 = !DILocation(line: 417, column: 27, scope: !12171)
!12180 = !DILocation(line: 417, column: 93, scope: !12171)
!12181 = distinct !{!12181, !12178, !12182}
!12182 = !DILocation(line: 417, column: 98, scope: !12171)
!12183 = !DILocation(line: 418, column: 29, scope: !12171)
!12184 = !DILocation(line: 419, column: 5, scope: !12171)
!12185 = !DILocation(line: 419, column: 27, scope: !12171)
!12186 = !DILocation(line: 419, column: 93, scope: !12171)
!12187 = distinct !{!12187, !12184, !12188}
!12188 = !DILocation(line: 419, column: 98, scope: !12171)
!12189 = !DILocation(line: 421, column: 5, scope: !12171)
!12190 = !DILocation(line: 422, column: 5, scope: !12171)
!12191 = !DILocation(line: 422, column: 19, scope: !12171)
!12192 = !DILocation(line: 422, column: 28, scope: !12171)
!12193 = !DILocation(line: 423, column: 5, scope: !12171)
!12194 = !DILocation(line: 423, column: 28, scope: !12171)
!12195 = !DILocation(line: 423, column: 82, scope: !12171)
!12196 = distinct !{!12196, !12193, !12197}
!12197 = !DILocation(line: 423, column: 87, scope: !12171)
!12198 = !DILocation(line: 424, column: 28, scope: !12171)
!12199 = !DILocation(line: 425, column: 5, scope: !12171)
!12200 = !DILocation(line: 425, column: 28, scope: !12171)
!12201 = !DILocation(line: 425, column: 82, scope: !12171)
!12202 = distinct !{!12202, !12199, !12203}
!12203 = !DILocation(line: 425, column: 87, scope: !12171)
!12204 = !DILocation(line: 426, column: 28, scope: !12171)
!12205 = !DILocation(line: 428, column: 50, scope: !12171)
!12206 = !DILocation(line: 428, column: 19, scope: !12171)
!12207 = !DILocation(line: 428, column: 28, scope: !12171)
!12208 = !DILocation(line: 432, column: 1, scope: !12171)
!12209 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2198, file: !2198, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12210 = !DILocation(line: 437, column: 5, scope: !12209)
!12211 = !DILocation(line: 440, column: 5, scope: !12209)
!12212 = !DILocation(line: 440, column: 27, scope: !12209)
!12213 = !DILocation(line: 440, column: 36, scope: !12209)
!12214 = !DILocation(line: 440, column: 76, scope: !12209)
!12215 = distinct !{!12215, !12211, !12216}
!12216 = !DILocation(line: 440, column: 84, scope: !12209)
!12217 = !DILocation(line: 441, column: 45, scope: !12209)
!12218 = !DILocation(line: 441, column: 54, scope: !12209)
!12219 = !DILocation(line: 441, column: 28, scope: !12209)
!12220 = !DILocation(line: 442, column: 19, scope: !12209)
!12221 = !DILocation(line: 442, column: 31, scope: !12209)
!12222 = !DILocation(line: 443, column: 5, scope: !12209)
!12223 = !DILocation(line: 443, column: 27, scope: !12209)
!12224 = !DILocation(line: 443, column: 39, scope: !12209)
!12225 = !DILocation(line: 443, column: 65, scope: !12209)
!12226 = distinct !{!12226, !12222, !12227}
!12227 = !DILocation(line: 443, column: 70, scope: !12209)
!12228 = !DILocation(line: 444, column: 19, scope: !12209)
!12229 = !DILocation(line: 444, column: 28, scope: !12209)
!12230 = !DILocation(line: 445, column: 5, scope: !12209)
!12231 = !DILocation(line: 445, column: 27, scope: !12209)
!12232 = !DILocation(line: 445, column: 91, scope: !12209)
!12233 = distinct !{!12233, !12230, !12234}
!12234 = !DILocation(line: 445, column: 96, scope: !12209)
!12235 = !DILocation(line: 447, column: 43, scope: !12209)
!12236 = !DILocation(line: 447, column: 51, scope: !12209)
!12237 = !DILocation(line: 447, column: 27, scope: !12209)
!12238 = !DILocation(line: 450, column: 1, scope: !12209)
!12239 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2198, file: !2198, line: 452, type: !12240, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !12243)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!1156, !12242}
!12242 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2201, line: 43, baseType: !2200)
!12243 = !{!12244, !12245}
!12244 = !DILocalVariable(name: "clock", arg: 1, scope: !12239, file: !2198, line: 452, type: !12242)
!12245 = !DILocalVariable(name: "delay", scope: !12239, file: !2198, line: 457, type: !60)
!12246 = !DILocation(line: 0, scope: !12239)
!12247 = !DILocation(line: 457, column: 5, scope: !12239)
!12248 = !DILocation(line: 457, column: 23, scope: !12239)
!12249 = !DILocation(line: 458, column: 9, scope: !12239)
!12250 = !DILocation(line: 465, column: 9, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !2198, line: 458, column: 39)
!12252 = distinct !DILexicalBlock(scope: !12239, file: !2198, line: 458, column: 9)
!12253 = !DILocation(line: 465, column: 23, scope: !12251)
!12254 = !DILocation(line: 465, column: 32, scope: !12251)
!12255 = !DILocation(line: 466, column: 32, scope: !12251)
!12256 = !DILocation(line: 467, column: 9, scope: !12251)
!12257 = !DILocation(line: 467, column: 32, scope: !12251)
!12258 = !DILocation(line: 467, column: 86, scope: !12251)
!12259 = distinct !{!12259, !12256, !12260}
!12260 = !DILocation(line: 467, column: 91, scope: !12251)
!12261 = !DILocation(line: 468, column: 32, scope: !12251)
!12262 = !DILocation(line: 469, column: 9, scope: !12251)
!12263 = !DILocation(line: 469, column: 32, scope: !12251)
!12264 = !DILocation(line: 469, column: 86, scope: !12251)
!12265 = distinct !{!12265, !12262, !12266}
!12266 = !DILocation(line: 469, column: 91, scope: !12251)
!12267 = !DILocation(line: 470, column: 32, scope: !12251)
!12268 = !DILocation(line: 472, column: 20, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12251, file: !2198, line: 472, column: 9)
!12270 = !DILocation(line: 472, column: 25, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12269, file: !2198, line: 472, column: 9)
!12272 = !DILocation(line: 472, column: 31, scope: !12271)
!12273 = !DILocation(line: 472, column: 9, scope: !12269)
!12274 = !DILocation(line: 472, column: 44, scope: !12271)
!12275 = distinct !{!12275, !12273, !12276}
!12276 = !DILocation(line: 472, column: 47, scope: !12269)
!12277 = !DILocation(line: 478, column: 9, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !2198, line: 477, column: 12)
!12279 = distinct !DILexicalBlock(scope: !12252, file: !2198, line: 475, column: 16)
!12280 = !DILocation(line: 483, column: 1, scope: !12239)
!12281 = distinct !DISubprogram(name: "emi_mask_master", scope: !2198, file: !2198, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12282 = !DILocation(line: 490, column: 30, scope: !12281)
!12283 = !DILocation(line: 490, column: 44, scope: !12281)
!12284 = !DILocation(line: 490, column: 53, scope: !12281)
!12285 = !DILocation(line: 490, column: 28, scope: !12281)
!12286 = !DILocation(line: 492, column: 1, scope: !12281)
!12287 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2198, file: !2198, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !293)
!12288 = !DILocation(line: 497, column: 30, scope: !12287)
!12289 = !DILocation(line: 497, column: 44, scope: !12287)
!12290 = !DILocation(line: 497, column: 53, scope: !12287)
!12291 = !DILocation(line: 497, column: 28, scope: !12287)
!12292 = !DILocation(line: 500, column: 1, scope: !12287)
!12293 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2364, file: !2364, line: 56, type: !9076, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !293)
!12294 = !DILocation(line: 61, column: 5, scope: !12293)
!12295 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2364, file: !2364, line: 65, type: !9076, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !293)
!12296 = !DILocation(line: 70, column: 5, scope: !12295)
!12297 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2364, file: !2364, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !293)
!12298 = !DILocation(line: 79, column: 9, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !2364, line: 78, column: 12)
!12300 = distinct !DILexicalBlock(scope: !12297, file: !2364, line: 76, column: 9)
!12301 = !DILocation(line: 81, column: 1, scope: !12297)
!12302 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2364, file: !2364, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !293)
!12303 = !DILocation(line: 88, column: 9, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !2364, line: 87, column: 12)
!12305 = distinct !DILexicalBlock(scope: !12302, file: !2364, line: 85, column: 9)
!12306 = !DILocation(line: 90, column: 1, scope: !12302)
!12307 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2364, file: !2364, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !293)
!12308 = !DILocation(line: 97, column: 9, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !2364, line: 96, column: 12)
!12310 = distinct !DILexicalBlock(scope: !12307, file: !2364, line: 94, column: 9)
!12311 = !DILocation(line: 99, column: 1, scope: !12307)
!12312 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2364, file: !2364, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !293)
!12313 = !DILocation(line: 106, column: 9, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !2364, line: 105, column: 12)
!12315 = distinct !DILexicalBlock(scope: !12312, file: !2364, line: 103, column: 9)
!12316 = !DILocation(line: 108, column: 1, scope: !12312)
!12317 = distinct !DISubprogram(name: "__io_putchar", scope: !2376, file: !2376, line: 59, type: !12318, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12320)
!12318 = !DISubroutineType(types: !12319)
!12319 = !{!7, !7}
!12320 = !{!12321}
!12321 = !DILocalVariable(name: "ch", arg: 1, scope: !12317, file: !2376, line: 59, type: !7)
!12322 = !DILocation(line: 0, scope: !12317)
!12323 = !DILocation(line: 66, column: 35, scope: !12317)
!12324 = !DILocation(line: 66, column: 5, scope: !12317)
!12325 = !DILocation(line: 67, column: 5, scope: !12317)
!12326 = distinct !DISubprogram(name: "main", scope: !2376, file: !2376, line: 220, type: !11821, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !293)
!12327 = !DILocation(line: 223, column: 5, scope: !12326)
!12328 = !DILocation(line: 225, column: 5, scope: !12326)
!12329 = !DILocation(line: 228, column: 5, scope: !12326)
!12330 = !DILocation(line: 319, column: 3, scope: !12331, inlinedAt: !12332)
!12331 = distinct !DISubprogram(name: "__enable_irq", scope: !7687, file: !7687, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !293)
!12332 = distinct !DILocation(line: 231, column: 5, scope: !12326)
!12333 = !{i64 662278}
!12334 = !DILocation(line: 496, column: 3, scope: !12335, inlinedAt: !12336)
!12335 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !7687, file: !7687, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !293)
!12336 = distinct !DILocation(line: 232, column: 5, scope: !12326)
!12337 = !{i64 666553}
!12338 = !DILocation(line: 235, column: 5, scope: !12326)
!12339 = !DILocation(line: 237, column: 5, scope: !12326)
!12340 = !DILocation(line: 238, column: 5, scope: !12326)
!12341 = !DILocation(line: 239, column: 5, scope: !12326)
!12342 = !DILocation(line: 241, column: 5, scope: !12326)
!12343 = !DILocation(line: 243, column: 5, scope: !12326)
!12344 = distinct !{!12344, !12343, !12345}
!12345 = !DILocation(line: 243, column: 14, scope: !12326)
!12346 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2376, file: !2376, line: 97, type: !291, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !293)
!12347 = !DILocation(line: 99, column: 5, scope: !12346)
!12348 = !DILocation(line: 100, column: 1, scope: !12346)
!12349 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2376, file: !2376, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !293)
!12350 = !DILocation(line: 110, column: 5, scope: !12349)
!12351 = !DILocation(line: 111, column: 5, scope: !12349)
!12352 = !DILocation(line: 112, column: 5, scope: !12349)
!12353 = !DILocation(line: 114, column: 1, scope: !12349)
!12354 = distinct !DISubprogram(name: "i2c_control_EEPROM_with_polling_example", scope: !2376, file: !2376, line: 121, type: !291, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12355)
!12355 = !{!12356, !12361, !12362, !12363, !12364}
!12356 = !DILocalVariable(name: "i2c_init", scope: !12354, file: !2376, line: 124, type: !12357)
!12357 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_config_t", file: !872, line: 496, baseType: !12358)
!12358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 494, size: 32, elements: !12359)
!12359 = !{!12360}
!12360 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !12358, file: !872, line: 495, baseType: !6195, size: 32)
!12361 = !DILocalVariable(name: "i", scope: !12354, file: !2376, line: 125, type: !61)
!12362 = !DILocalVariable(name: "input_frequency", scope: !12354, file: !2376, line: 126, type: !6195)
!12363 = !DILocalVariable(name: "i2c_port", scope: !12354, file: !2376, line: 127, type: !951)
!12364 = !DILocalVariable(name: "test_fail", scope: !12354, file: !2376, line: 128, type: !61)
!12365 = !DILocation(line: 124, column: 5, scope: !12354)
!12366 = !DILocation(line: 124, column: 22, scope: !12354)
!12367 = !DILocation(line: 0, scope: !12354)
!12368 = !DILocation(line: 131, column: 5, scope: !12354)
!12369 = !DILocation(line: 133, column: 5, scope: !12354)
!12370 = !DILocation(line: 134, column: 5, scope: !12354)
!12371 = !DILocation(line: 135, column: 5, scope: !12354)
!12372 = !DILocation(line: 136, column: 5, scope: !12354)
!12373 = !DILocation(line: 140, column: 17, scope: !12354)
!12374 = !DILocation(line: 141, column: 14, scope: !12354)
!12375 = !DILocation(line: 141, column: 24, scope: !12354)
!12376 = !DILocation(line: 142, column: 30, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 142, column: 9)
!12378 = !DILocation(line: 142, column: 27, scope: !12377)
!12379 = !DILocation(line: 142, column: 9, scope: !12354)
!12380 = !DILocation(line: 143, column: 9, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12377, file: !2376, line: 142, column: 72)
!12382 = !DILocation(line: 144, column: 9, scope: !12381)
!12383 = !DILocation(line: 146, column: 109, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 146, column: 9)
!12385 = !DILocation(line: 146, column: 121, scope: !12384)
!12386 = !DILocation(line: 146, column: 30, scope: !12384)
!12387 = !DILocation(line: 146, column: 27, scope: !12384)
!12388 = !DILocation(line: 146, column: 9, scope: !12354)
!12389 = !DILocation(line: 147, column: 9, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12384, file: !2376, line: 146, column: 127)
!12391 = !DILocation(line: 148, column: 9, scope: !12390)
!12392 = !DILocation(line: 151, column: 30, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 151, column: 9)
!12394 = !DILocation(line: 151, column: 27, scope: !12393)
!12395 = !DILocation(line: 151, column: 9, scope: !12354)
!12396 = !DILocation(line: 152, column: 9, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12393, file: !2376, line: 151, column: 63)
!12398 = !DILocation(line: 153, column: 9, scope: !12397)
!12399 = !DILocation(line: 156, column: 5, scope: !12354)
!12400 = !DILocation(line: 160, column: 24, scope: !12354)
!12401 = !DILocation(line: 161, column: 30, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 161, column: 9)
!12403 = !DILocation(line: 161, column: 27, scope: !12402)
!12404 = !DILocation(line: 161, column: 9, scope: !12354)
!12405 = !DILocation(line: 162, column: 9, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12402, file: !2376, line: 161, column: 72)
!12407 = !DILocation(line: 163, column: 9, scope: !12406)
!12408 = !DILocation(line: 166, column: 30, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 166, column: 9)
!12410 = !DILocation(line: 166, column: 27, scope: !12409)
!12411 = !DILocation(line: 166, column: 9, scope: !12354)
!12412 = !DILocation(line: 167, column: 9, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12409, file: !2376, line: 166, column: 113)
!12414 = !DILocation(line: 168, column: 9, scope: !12413)
!12415 = !DILocation(line: 171, column: 30, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 171, column: 9)
!12417 = !DILocation(line: 171, column: 27, scope: !12416)
!12418 = !DILocation(line: 171, column: 9, scope: !12354)
!12419 = !DILocation(line: 172, column: 9, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12416, file: !2376, line: 171, column: 63)
!12421 = !DILocation(line: 173, column: 9, scope: !12420)
!12422 = !DILocation(line: 176, column: 5, scope: !12354)
!12423 = !DILocation(line: 180, column: 24, scope: !12354)
!12424 = !DILocation(line: 181, column: 30, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 181, column: 9)
!12426 = !DILocation(line: 181, column: 27, scope: !12425)
!12427 = !DILocation(line: 181, column: 9, scope: !12354)
!12428 = !DILocation(line: 182, column: 9, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12425, file: !2376, line: 181, column: 72)
!12430 = !DILocation(line: 183, column: 9, scope: !12429)
!12431 = !DILocation(line: 186, column: 115, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 186, column: 9)
!12433 = !DILocation(line: 186, column: 30, scope: !12432)
!12434 = !DILocation(line: 186, column: 27, scope: !12432)
!12435 = !DILocation(line: 186, column: 9, scope: !12354)
!12436 = !DILocation(line: 187, column: 9, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12432, file: !2376, line: 186, column: 129)
!12438 = !DILocation(line: 188, column: 9, scope: !12437)
!12439 = !DILocation(line: 191, column: 30, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 191, column: 9)
!12441 = !DILocation(line: 191, column: 27, scope: !12440)
!12442 = !DILocation(line: 191, column: 9, scope: !12354)
!12443 = !DILocation(line: 192, column: 9, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12440, file: !2376, line: 191, column: 63)
!12445 = !DILocation(line: 193, column: 9, scope: !12444)
!12446 = !DILocation(line: 197, column: 5, scope: !12354)
!12447 = !DILocation(line: 199, column: 10, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 199, column: 5)
!12449 = !DILocation(line: 0, scope: !12448)
!12450 = !DILocation(line: 199, column: 22, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12448, file: !2376, line: 199, column: 5)
!12452 = !DILocation(line: 199, column: 19, scope: !12451)
!12453 = !DILocation(line: 199, column: 5, scope: !12448)
!12454 = !DILocation(line: 200, column: 29, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12456, file: !2376, line: 200, column: 13)
!12456 = distinct !DILexicalBlock(scope: !12451, file: !2376, line: 199, column: 41)
!12457 = !DILocation(line: 200, column: 13, scope: !12455)
!12458 = !DILocation(line: 200, column: 37, scope: !12455)
!12459 = !DILocation(line: 200, column: 34, scope: !12455)
!12460 = !DILocation(line: 200, column: 13, scope: !12456)
!12461 = distinct !{!12461, !12453, !12462}
!12462 = !DILocation(line: 205, column: 5, scope: !12448)
!12463 = !DILocation(line: 207, column: 9, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !2376, line: 206, column: 25)
!12465 = distinct !DILexicalBlock(scope: !12354, file: !2376, line: 206, column: 9)
!12466 = !DILocation(line: 212, column: 5, scope: !12464)
!12467 = !DILocation(line: 214, column: 5, scope: !12354)
!12468 = !DILocation(line: 215, column: 5, scope: !12354)
!12469 = !DILocation(line: 217, column: 1, scope: !12354)
!12470 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2376, file: !2376, line: 75, type: !291, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !12471)
!12471 = !{!12472}
!12472 = !DILocalVariable(name: "uart_config", scope: !12470, file: !2376, line: 77, type: !12473)
!12473 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !12474)
!12474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !12475)
!12475 = !{!12476, !12477, !12478, !12479}
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !12474, file: !654, line: 374, baseType: !4839, size: 32)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !12474, file: !654, line: 375, baseType: !4889, size: 32, offset: 32)
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !12474, file: !654, line: 376, baseType: !4891, size: 32, offset: 64)
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12474, file: !654, line: 377, baseType: !4893, size: 32, offset: 96)
!12480 = !DILocation(line: 77, column: 5, scope: !12470)
!12481 = !DILocation(line: 77, column: 23, scope: !12470)
!12482 = !DILocation(line: 79, column: 5, scope: !12470)
!12483 = !DILocation(line: 80, column: 5, scope: !12470)
!12484 = !DILocation(line: 81, column: 5, scope: !12470)
!12485 = !DILocation(line: 82, column: 5, scope: !12470)
!12486 = !DILocation(line: 85, column: 17, scope: !12470)
!12487 = !DILocation(line: 85, column: 26, scope: !12470)
!12488 = !DILocation(line: 86, column: 17, scope: !12470)
!12489 = !DILocation(line: 86, column: 29, scope: !12470)
!12490 = !DILocation(line: 87, column: 17, scope: !12470)
!12491 = !DILocation(line: 87, column: 26, scope: !12470)
!12492 = !DILocation(line: 88, column: 17, scope: !12470)
!12493 = !DILocation(line: 88, column: 24, scope: !12470)
!12494 = !DILocation(line: 89, column: 5, scope: !12470)
!12495 = !DILocation(line: 90, column: 1, scope: !12470)
!12496 = distinct !DISubprogram(name: "_close", scope: !2389, file: !2389, line: 5, type: !12318, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12497)
!12497 = !{!12498}
!12498 = !DILocalVariable(name: "file", arg: 1, scope: !12496, file: !2389, line: 5, type: !7)
!12499 = !DILocation(line: 0, scope: !12496)
!12500 = !DILocation(line: 7, column: 5, scope: !12496)
!12501 = distinct !DISubprogram(name: "_fstat", scope: !2389, file: !2389, line: 10, type: !12502, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12550)
!12502 = !DISubroutineType(types: !12503)
!12503 = !{!7, !7, !12504}
!12504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12505, size: 32)
!12505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !12506, line: 27, size: 704, elements: !12507)
!12506 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!12507 = !{!12508, !12511, !12514, !12517, !12520, !12523, !12526, !12527, !12530, !12540, !12541, !12542, !12545, !12548}
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12505, file: !12506, line: 29, baseType: !12509, size: 16)
!12509 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2393, line: 161, baseType: !12510)
!12510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2433, line: 56, baseType: !1651)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12505, file: !12506, line: 30, baseType: !12512, size: 16, offset: 16)
!12512 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2393, line: 139, baseType: !12513)
!12513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2433, line: 75, baseType: !1031)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12505, file: !12506, line: 31, baseType: !12515, size: 32, offset: 32)
!12515 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2393, line: 189, baseType: !12516)
!12516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2433, line: 90, baseType: !63)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12505, file: !12506, line: 32, baseType: !12518, size: 16, offset: 64)
!12518 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2393, line: 194, baseType: !12519)
!12519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2433, line: 209, baseType: !1031)
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12505, file: !12506, line: 33, baseType: !12521, size: 16, offset: 80)
!12521 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2393, line: 165, baseType: !12522)
!12522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2433, line: 60, baseType: !1031)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12505, file: !12506, line: 34, baseType: !12524, size: 16, offset: 96)
!12524 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2393, line: 169, baseType: !12525)
!12525 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2433, line: 63, baseType: !1031)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12505, file: !12506, line: 35, baseType: !12509, size: 16, offset: 112)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12505, file: !12506, line: 36, baseType: !12528, size: 32, offset: 128)
!12528 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2393, line: 157, baseType: !12529)
!12529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2433, line: 102, baseType: !2449)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12505, file: !12506, line: 42, baseType: !12531, size: 128, offset: 192)
!12531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !12532, line: 47, size: 128, elements: !12533)
!12532 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!12533 = !{!12534, !12539}
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12531, file: !12532, line: 48, baseType: !12535, size: 64)
!12535 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !12536, line: 42, baseType: !12537)
!12536 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!12537 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !12538)
!12538 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12531, file: !12532, line: 49, baseType: !2434, size: 32, offset: 64)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12505, file: !12506, line: 43, baseType: !12531, size: 128, offset: 320)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12505, file: !12506, line: 44, baseType: !12531, size: 128, offset: 448)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12505, file: !12506, line: 45, baseType: !12543, size: 32, offset: 576)
!12543 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2393, line: 102, baseType: !12544)
!12544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2433, line: 34, baseType: !2434)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12505, file: !12506, line: 46, baseType: !12546, size: 32, offset: 608)
!12546 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2393, line: 97, baseType: !12547)
!12547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2433, line: 30, baseType: !2434)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !12505, file: !12506, line: 48, baseType: !12549, size: 64, offset: 640)
!12549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2434, size: 64, elements: !465)
!12550 = !{!12551, !12552}
!12551 = !DILocalVariable(name: "file", arg: 1, scope: !12501, file: !2389, line: 10, type: !7)
!12552 = !DILocalVariable(name: "st", arg: 2, scope: !12501, file: !2389, line: 10, type: !12504)
!12553 = !DILocation(line: 0, scope: !12501)
!12554 = !DILocation(line: 12, column: 5, scope: !12501)
!12555 = distinct !DISubprogram(name: "_isatty", scope: !2389, file: !2389, line: 15, type: !12318, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12556)
!12556 = !{!12557}
!12557 = !DILocalVariable(name: "file", arg: 1, scope: !12555, file: !2389, line: 15, type: !7)
!12558 = !DILocation(line: 0, scope: !12555)
!12559 = !DILocation(line: 17, column: 5, scope: !12555)
!12560 = distinct !DISubprogram(name: "_lseek", scope: !2389, file: !2389, line: 20, type: !12561, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12563)
!12561 = !DISubroutineType(types: !12562)
!12562 = !{!7, !7, !7, !7}
!12563 = !{!12564, !12565, !12566}
!12564 = !DILocalVariable(name: "file", arg: 1, scope: !12560, file: !2389, line: 20, type: !7)
!12565 = !DILocalVariable(name: "ptr", arg: 2, scope: !12560, file: !2389, line: 20, type: !7)
!12566 = !DILocalVariable(name: "dir", arg: 3, scope: !12560, file: !2389, line: 20, type: !7)
!12567 = !DILocation(line: 0, scope: !12560)
!12568 = !DILocation(line: 22, column: 5, scope: !12560)
!12569 = distinct !DISubprogram(name: "_open", scope: !2389, file: !2389, line: 25, type: !12570, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12572)
!12570 = !DISubroutineType(types: !12571)
!12571 = !{!7, !2427, !7, !7}
!12572 = !{!12573, !12574, !12575}
!12573 = !DILocalVariable(name: "name", arg: 1, scope: !12569, file: !2389, line: 25, type: !2427)
!12574 = !DILocalVariable(name: "flags", arg: 2, scope: !12569, file: !2389, line: 25, type: !7)
!12575 = !DILocalVariable(name: "mode", arg: 3, scope: !12569, file: !2389, line: 25, type: !7)
!12576 = !DILocation(line: 0, scope: !12569)
!12577 = !DILocation(line: 27, column: 5, scope: !12569)
!12578 = distinct !DISubprogram(name: "_read", scope: !2389, file: !2389, line: 30, type: !12579, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12581)
!12579 = !DISubroutineType(types: !12580)
!12580 = !{!7, !7, !2394, !7}
!12581 = !{!12582, !12583, !12584}
!12582 = !DILocalVariable(name: "file", arg: 1, scope: !12578, file: !2389, line: 30, type: !7)
!12583 = !DILocalVariable(name: "ptr", arg: 2, scope: !12578, file: !2389, line: 30, type: !2394)
!12584 = !DILocalVariable(name: "len", arg: 3, scope: !12578, file: !2389, line: 30, type: !7)
!12585 = !DILocation(line: 0, scope: !12578)
!12586 = !DILocation(line: 32, column: 5, scope: !12578)
!12587 = distinct !DISubprogram(name: "_getpid", scope: !2389, file: !2389, line: 48, type: !11821, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !293)
!12588 = !DILocation(line: 50, column: 5, scope: !12587)
!12589 = distinct !DISubprogram(name: "_kill", scope: !2389, file: !2389, line: 56, type: !12590, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12592)
!12590 = !DISubroutineType(types: !12591)
!12591 = !{!7, !7, !7}
!12592 = !{!12593, !12594}
!12593 = !DILocalVariable(name: "pid", arg: 1, scope: !12589, file: !2389, line: 56, type: !7)
!12594 = !DILocalVariable(name: "sig", arg: 2, scope: !12589, file: !2389, line: 56, type: !7)
!12595 = !DILocation(line: 0, scope: !12589)
!12596 = !DILocation(line: 58, column: 5, scope: !12589)
!12597 = distinct !DISubprogram(name: "_exit", scope: !2389, file: !2389, line: 61, type: !12318, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12598)
!12598 = !{!12599}
!12599 = !DILocalVariable(name: "val", arg: 1, scope: !12597, file: !2389, line: 61, type: !7)
!12600 = !DILocation(line: 0, scope: !12597)
!12601 = !DILocation(line: 63, column: 5, scope: !12597)
!12602 = !DILocation(line: 0, scope: !2388)
!12603 = !DILocation(line: 73, column: 5, scope: !2388)
!12604 = !{i64 1127}
!12605 = !DILocation(line: 75, column: 14, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !2388, file: !2389, line: 75, column: 9)
!12607 = !DILocation(line: 75, column: 11, scope: !12606)
!12608 = !DILocation(line: 75, column: 9, scope: !2388)
!12609 = !DILocation(line: 81, column: 32, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !2388, file: !2389, line: 81, column: 9)
!12611 = !DILocation(line: 81, column: 15, scope: !12610)
!12612 = !DILocation(line: 92, column: 1, scope: !2388)
!12613 = !DILocation(line: 81, column: 9, scope: !2388)
!12614 = distinct !DISubprogram(name: "_write", scope: !2389, file: !2389, line: 94, type: !12579, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !12615)
!12615 = !{!12616, !12617, !12618, !12619}
!12616 = !DILocalVariable(name: "file", arg: 1, scope: !12614, file: !2389, line: 94, type: !7)
!12617 = !DILocalVariable(name: "ptr", arg: 2, scope: !12614, file: !2389, line: 94, type: !2394)
!12618 = !DILocalVariable(name: "len", arg: 3, scope: !12614, file: !2389, line: 94, type: !7)
!12619 = !DILocalVariable(name: "DataIdx", scope: !12614, file: !2389, line: 96, type: !7)
!12620 = !DILocation(line: 0, scope: !12614)
!12621 = !DILocation(line: 98, column: 31, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !2389, line: 98, column: 5)
!12623 = distinct !DILexicalBlock(scope: !12614, file: !2389, line: 98, column: 5)
!12624 = !DILocation(line: 98, column: 5, scope: !12623)
!12625 = !DILocation(line: 99, column: 26, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12622, file: !2389, line: 98, column: 49)
!12627 = !DILocation(line: 99, column: 22, scope: !12626)
!12628 = !DILocation(line: 99, column: 9, scope: !12626)
!12629 = !DILocation(line: 98, column: 45, scope: !12622)
!12630 = distinct !{!12630, !12624, !12631}
!12631 = !DILocation(line: 100, column: 5, scope: !12623)
!12632 = !DILocation(line: 101, column: 5, scope: !12614)
!12633 = distinct !DISubprogram(name: "SysTick_Set", scope: !2593, file: !2593, line: 62, type: !3735, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !12634)
!12634 = !{!12635, !12636}
!12635 = !DILocalVariable(name: "ticks", arg: 1, scope: !12633, file: !2593, line: 62, type: !61)
!12636 = !DILocalVariable(name: "val", scope: !12633, file: !2593, line: 64, type: !61)
!12637 = !DILocation(line: 0, scope: !12633)
!12638 = !DILocation(line: 67, column: 16, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12633, file: !2593, line: 67, column: 9)
!12640 = !DILocation(line: 67, column: 21, scope: !12639)
!12641 = !DILocation(line: 67, column: 9, scope: !12633)
!12642 = !DILocation(line: 72, column: 20, scope: !12633)
!12643 = !DILocation(line: 75, column: 19, scope: !12633)
!12644 = !DILocation(line: 79, column: 20, scope: !12633)
!12645 = !DILocation(line: 80, column: 20, scope: !12633)
!12646 = !DILocation(line: 83, column: 19, scope: !12633)
!12647 = !DILocation(line: 85, column: 5, scope: !12633)
!12648 = !DILocation(line: 86, column: 1, scope: !12633)
!12649 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2593, file: !2593, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !293)
!12650 = !DILocation(line: 97, column: 28, scope: !12649)
!12651 = !DILocation(line: 98, column: 1, scope: !12649)
!12652 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2593, file: !2593, line: 107, type: !3987, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !293)
!12653 = !DILocation(line: 109, column: 12, scope: !12652)
!12654 = !DILocation(line: 109, column: 5, scope: !12652)
!12655 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2593, file: !2593, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !12656)
!12656 = !{!12657}
!12657 = !DILocalVariable(name: "cm_mux_sel", scope: !12655, file: !2593, line: 121, type: !460)
!12658 = !DILocation(line: 121, column: 38, scope: !12655)
!12659 = !DILocation(line: 121, column: 26, scope: !12655)
!12660 = !DILocation(line: 0, scope: !12655)
!12661 = !DILocation(line: 123, column: 5, scope: !12655)
!12662 = !DILocation(line: 132, column: 13, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12655, file: !2593, line: 123, column: 25)
!12664 = !DILocation(line: 140, column: 13, scope: !12663)
!12665 = !DILocation(line: 0, scope: !12663)
!12666 = !DILocation(line: 146, column: 26, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12655, file: !2593, line: 146, column: 9)
!12668 = !DILocation(line: 146, column: 50, scope: !12667)
!12669 = !DILocation(line: 146, column: 41, scope: !12667)
!12670 = !DILocation(line: 148, column: 25, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12667, file: !2593, line: 147, column: 52)
!12672 = !DILocation(line: 149, column: 5, scope: !12671)
!12673 = !DILocation(line: 150, column: 1, scope: !12655)
!12674 = distinct !DISubprogram(name: "SystemInit", scope: !2593, file: !2593, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !293)
!12675 = !DILocation(line: 162, column: 16, scope: !12674)
!12676 = !DILocation(line: 166, column: 16, scope: !12674)
!12677 = !DILocation(line: 169, column: 16, scope: !12674)
!12678 = !DILocation(line: 172, column: 1, scope: !12674)
!12679 = distinct !DISubprogram(name: "CachePreInit", scope: !2593, file: !2593, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !293)
!12680 = !DILocation(line: 183, column: 22, scope: !12679)
!12681 = !DILocation(line: 186, column: 21, scope: !12679)
!12682 = !DILocation(line: 189, column: 21, scope: !12679)
!12683 = !DILocation(line: 192, column: 29, scope: !12679)
!12684 = !DILocation(line: 193, column: 33, scope: !12679)
!12685 = !DILocation(line: 195, column: 28, scope: !12679)
!12686 = !DILocation(line: 200, column: 30, scope: !12679)
!12687 = !DILocation(line: 214, column: 1, scope: !12679)
