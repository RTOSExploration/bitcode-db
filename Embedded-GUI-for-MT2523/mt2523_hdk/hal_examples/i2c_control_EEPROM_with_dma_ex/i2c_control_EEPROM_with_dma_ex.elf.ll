; ModuleID = './build/i2c_control_EEPROM_with_dma_ex.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32 }
%struct.VDMA_REGISTER_T = type { i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32 }
%struct.gdma_user_callback_t = type { void (i32, i8*)*, i8* }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.i2c_dma_callback_parameter_t = type { i32, i8, i8 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.12 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.12*, %struct.anon.12*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.pdma_config_t = type { i8, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.i2c_transaction_size_t = type { i32, i32, i32, i32, i32 }
%struct.hal_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%struct.hal_i2c_send_config_t = type { i8, i8*, i32, i32 }
%struct.hal_i2c_send_to_receive_config_ex_t = type { i8, i8*, i8*, i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.12*, %struct.anon.12*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@gdma = dso_local local_unnamed_addr global [1 x %struct.GDMA_REGISTER_T*] [%struct.GDMA_REGISTER_T* inttoptr (i32 -1610612480 to %struct.GDMA_REGISTER_T*)], align 4, !dbg !343
@gdma_global = dso_local local_unnamed_addr global [1 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*)], align 4, !dbg !426
@pdma = dso_local local_unnamed_addr global [6 x %struct.PDMA_REGISTER_T*] [%struct.PDMA_REGISTER_T* inttoptr (i32 -1610612216 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1610611960 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318456 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318200 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317944 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317688 to %struct.PDMA_REGISTER_T*)], align 4, !dbg !434
@pdma_global = dso_local local_unnamed_addr global [6 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*)], align 4, !dbg !452
@g_pdma_global_running_bit = dso_local local_unnamed_addr global [6 x i8] c"\02\04\02\04\06\08", align 1, !dbg !460
@vdma = dso_local local_unnamed_addr global [10 x %struct.VDMA_REGISTER_T*] [%struct.VDMA_REGISTER_T* inttoptr (i32 -1610610416 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610610160 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609904 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609648 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609392 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609136 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608880 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608624 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054512 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054256 to %struct.VDMA_REGISTER_T*)], align 4, !dbg !466
@vdma_port = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1601044480 to %struct.anon*), %struct.anon* inttoptr (i32 -1601044224 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043968 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043712 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043456 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043200 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042944 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042688 to %struct.anon*), %struct.anon* inttoptr (i32 -1567490048 to %struct.anon*), %struct.anon* inttoptr (i32 -1567489792 to %struct.anon*)], align 4, !dbg !491
@vdma_global = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*)], align 4, !dbg !499
@g_vdma_global_running_bit = dso_local local_unnamed_addr global [10 x i8] c"\10\12\14\16\18\1A\1C\1E\10\12", align 1, !dbg !507
@g_gdma_callback = dso_local local_unnamed_addr global [1 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !510
@pdma_init_status = internal global [7 x i8] zeroinitializer, align 1, !dbg !547
@__FUNCTION__.pdma_init = private unnamed_addr constant [10 x i8] c"pdma_init\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"This peripheral dma channel %d has been initialized\00", align 1
@.str.1.36 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_pdma_internal.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.pdma_deinit = private unnamed_addr constant [12 x i8] c"pdma_deinit\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"This peripheral dma channel %d has been deinitialized\00", align 1
@__func__.pdma_start_polling = private unnamed_addr constant [19 x i8] c"pdma_start_polling\00", align 1
@__func__.pdma_start_interrupt = private unnamed_addr constant [21 x i8] c"pdma_start_interrupt\00", align 1
@g_pdma_callback = internal unnamed_addr global [6 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !553
@vdma_init_status = internal global [18 x i8] zeroinitializer, align 1, !dbg !561
@__FUNCTION__.vdma_init = private unnamed_addr constant [10 x i8] c"vdma_init\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"This vfifo dma channel %d has been initialized\00", align 1
@__func__.vdma_deinit = private unnamed_addr constant [12 x i8] c"vdma_deinit\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"This vfifo dma channel %d has been deinitialized\00", align 1
@__func__.vdma_configure = private unnamed_addr constant [15 x i8] c"vdma_configure\00", align 1
@g_vdma_callback = internal unnamed_addr global [10 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !566
@pd_domain_dma_interrupt_hander.count = internal unnamed_addr global i32 0, align 4, !dbg !523
@__func__.pd_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"pd_domain_dma_interrupt_hander\00", align 1
@__func__.ao_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"ao_domain_dma_interrupt_hander\00", align 1
@switch.table.pdma_configure = private unnamed_addr constant [4 x i32] [i32 4, i32 262152, i32 131076, i32 458756], align 4
@switch.table.vdma_init = private unnamed_addr constant [10 x %struct.VDMA_REGISTER_T**] [%struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 0), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 1), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 2), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 3), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 4), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 5), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 6), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 7), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 8), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 9)], align 4
@switch.table.vdma_init.6 = private unnamed_addr constant [10 x i32] [i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160], align 4
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !589
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !865
@.str.37 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.38 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !944
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !962
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !976
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !987
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !957
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !988
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !1060
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !1065
@.str.83 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.84 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@s_i2c_master_status = internal global [3 x i8] zeroinitializer, align 1, !dbg !1071
@__FUNCTION__.hal_i2c_master_init = private unnamed_addr constant [20 x i8] c"hal_i2c_master_init\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"[I2C%d][init]:busy\0D\0A\00", align 1
@s_i2c_irq_table = internal unnamed_addr constant [3 x i32] [i32 24, i32 25, i32 26], align 4, !dbg !1157
@s_i2c_callback = internal unnamed_addr global [3 x void (i8, i32, i8*)*] zeroinitializer, align 4, !dbg !1160
@s_i2c_dma_parameter = internal global [3 x %struct.i2c_dma_callback_parameter_t] zeroinitializer, align 4, !dbg !1151
@__FUNCTION__.hal_i2c_master_set_frequency = private unnamed_addr constant [29 x i8] c"hal_i2c_master_set_frequency\00", align 1
@.str.1.86 = private unnamed_addr constant [25 x i8] c"[I2C%d][set_freq]:busy\0D\0A\00", align 1
@s_i2c_callback_parameter = internal unnamed_addr global [3 x i8*] zeroinitializer, align 4, !dbg !1167
@__FUNCTION__.hal_i2c_master_send_polling = private unnamed_addr constant [28 x i8] c"hal_i2c_master_send_polling\00", align 1
@.str.2.87 = private unnamed_addr constant [29 x i8] c"[I2C%d][send_polling]:busy\0D\0A\00", align 1
@.str.3.88 = private unnamed_addr constant [34 x i8] c"[I2C%d][send_polling]:status=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_dma = private unnamed_addr constant [24 x i8] c"hal_i2c_master_send_dma\00", align 1
@.str.4.89 = private unnamed_addr constant [25 x i8] c"[I2C%d][send_dma]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_receive_polling = private unnamed_addr constant [31 x i8] c"hal_i2c_master_receive_polling\00", align 1
@.str.5.90 = private unnamed_addr constant [32 x i8] c"[I2C%d][receive_polling]:busy\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"[I2C%d][receive_polling]:status=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_receive_dma = private unnamed_addr constant [27 x i8] c"hal_i2c_master_receive_dma\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"[I2C%d][receive_dma]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_to_receive_polling = private unnamed_addr constant [39 x i8] c"hal_i2c_master_send_to_receive_polling\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"[I2C%d][send2receive_polling]:busy\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"[I2C%d][send2receive_polling]:status=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_to_receive_dma = private unnamed_addr constant [35 x i8] c"hal_i2c_master_send_to_receive_dma\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"[I2C%d][send2receive_dma]:busy\0D\0A\00", align 1
@i2c_dma_callback_count = internal global [3 x i8] zeroinitializer, align 1, !dbg !1170
@__FUNCTION__.hal_i2c_master_send_dma_ex = private unnamed_addr constant [27 x i8] c"hal_i2c_master_send_dma_ex\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"[I2C%d][send_dma_enhanced]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_receive_dma_ex = private unnamed_addr constant [30 x i8] c"hal_i2c_master_receive_dma_ex\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"[I2C%d][receive_dma_enhanced]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_send_to_receive_dma_ex = private unnamed_addr constant [38 x i8] c"hal_i2c_master_send_to_receive_dma_ex\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"[I2C%d][send2receive_dma_enhanced]:busy\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_isr_handler = private unnamed_addr constant [20 x i8] c"hal_i2c_isr_handler\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"[I2C%d][isr]:status=%d\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"[I2C%d][isr]:NO isr callback\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_isr = private unnamed_addr constant [19 x i8] c"hal_i2c_master_isr\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"[I2C%d][isr]:port=%d\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_master_wait_transaction_finish = private unnamed_addr constant [39 x i8] c"hal_i2c_master_wait_transaction_finish\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"[I2C%d][type=%d]:timeout!\0D\0A\00", align 1
@__FUNCTION__.hal_i2c_wait_dma_finish = private unnamed_addr constant [24 x i8] c"hal_i2c_wait_dma_finish\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"[I2C%d][isr]:dma timeout!\0D\0A\00", align 1
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !1173
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !1188
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !1193
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !1195
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !1197
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1262
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1350
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1339
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.113 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1355
@.str.123 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.124 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1431
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1433
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1435
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1437
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1439
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1441
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1443
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1445
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1447
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1449
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1451
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1762
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1764
@.str.127 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.128 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1773
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1766
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1774
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1825
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1828
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1861
@nor_egid = dso_local local_unnamed_addr global %struct.anon.12* null, align 4, !dbg !1872
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2188
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2059
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2087
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !2190
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1897
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2083
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !2085
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1909
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !2170
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !2173
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !2203
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !2062
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2075
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2046
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2050
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2048
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1899
@.str.143 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.144 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2175
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !2054
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2071
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2073
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2230
@.str.149 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.150 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2290
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !2177
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2291
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2305
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2307
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2309
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2311
@.str.165 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.166 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2313
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2367
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2369
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2371
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2383
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2385
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2387
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2389
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2492
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2494
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2496
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2498
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2500
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2502
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2504
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2506
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2508
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2510
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2512
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2514
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2516
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2518
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2490
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2537
@test_length = dso_local global i32 5, align 4, !dbg !2549
@i2c_finish_flag = dso_local global i32 0, align 4, !dbg !2555
@i2c_send_data = dso_local global [32 x i8] c"\00U\FF\AA\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./", section ".noncached_rwdata", align 4, !dbg !2557
@i2c_receive_data = dso_local global [32 x i8] zeroinitializer, section ".noncached_rwdata", align 4, !dbg !2560
@.str.179 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.180 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.181 = private unnamed_addr constant [34 x i8] c"pls add your own code from here\0D\0A\00", align 1
@.str.3.182 = private unnamed_addr constant [24 x i8] c"\0D\0AI2C test case begin\0D\0A\00", align 1
@.str.4.183 = private unnamed_addr constant [25 x i8] c"I2C initialize1 failed\0D\0A\00", align 1
@.str.5.184 = private unnamed_addr constant [32 x i8] c"I2C register1 callback failed\0D\0A\00", align 1
@.str.6.185 = private unnamed_addr constant [19 x i8] c"I2C send1 failed\0D\0A\00", align 1
@.str.7.186 = private unnamed_addr constant [27 x i8] c"I2C deinitialize1 failed\0D\0A\00", align 1
@.str.8.187 = private unnamed_addr constant [25 x i8] c"I2C initialize2 failed\0D\0A\00", align 1
@.str.9.188 = private unnamed_addr constant [32 x i8] c"I2C register2 callback failed\0D\0A\00", align 1
@.str.10.189 = private unnamed_addr constant [19 x i8] c"I2C send2 failed\0D\0A\00", align 1
@.str.11.190 = private unnamed_addr constant [27 x i8] c"I2C deinitialize2 failed\0D\0A\00", align 1
@.str.12.191 = private unnamed_addr constant [25 x i8] c"I2C initialize3 failed\0D\0A\00", align 1
@.str.13.192 = private unnamed_addr constant [32 x i8] c"I2C register3 callback failed\0D\0A\00", align 1
@.str.14.193 = private unnamed_addr constant [22 x i8] c"I2C receive3 failed\0D\0A\00", align 1
@.str.15.194 = private unnamed_addr constant [27 x i8] c"I2C deinitialize3 failed\0D\0A\00", align 1
@.str.16.195 = private unnamed_addr constant [19 x i8] c"begin compare...\0D\0A\00", align 1
@.str.17.197 = private unnamed_addr constant [18 x i8] c"I2C test failed\0D\0A\00", align 1
@.str.18.196 = private unnamed_addr constant [25 x i8] c"I2C test is successful\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"\0D\0AI2C callback function!\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2562
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2766
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2874
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:01:36 GMT +00:00\00", align 1, !dbg !2876
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2881
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2887

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2976 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2984
  call void @llvm.dbg.value(metadata i32 %1, metadata !2983, metadata !DIExpression()), !dbg !2985
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2986, !range !2988
  %3 = icmp eq i8 %2, 0, !dbg !2986
  br i1 %3, label %5, label %4, !dbg !2989

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2990
  br label %15, !dbg !2992

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2993
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2995
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2996
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2997
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2998
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2999
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !3000
  call void @llvm.dbg.value(metadata i32 0, metadata !2981, metadata !DIExpression()), !dbg !2985
  br label %7, !dbg !3001

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2981, metadata !DIExpression()), !dbg !2985
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !3003
  store volatile i32 0, i32* %9, align 4, !dbg !3006
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !3007
  store volatile i32 0, i32* %10, align 4, !dbg !3008
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !3009
  store i32 0, i32* %11, align 4, !dbg !3010
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !3011
  store i32 0, i32* %12, align 4, !dbg !3012
  %13 = add nuw nsw i32 %8, 1, !dbg !3013
  call void @llvm.dbg.value(metadata i32 %13, metadata !2981, metadata !DIExpression()), !dbg !2985
  %14 = icmp eq i32 %13, 16, !dbg !3014
  br i1 %14, label %15, label %7, !dbg !3001, !llvm.loop !3015

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2985
  ret i32 %16, !dbg !3017
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3018 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3021
  call void @llvm.dbg.value(metadata i32 %1, metadata !3020, metadata !DIExpression()), !dbg !3022
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3023
  %3 = and i32 %2, -31, !dbg !3023
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3023
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3024
  %5 = or i32 %4, 19, !dbg !3024
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3024
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3025
  %7 = and i32 %6, -31, !dbg !3025
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3025
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3026
  %9 = or i32 %8, 3, !dbg !3026
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3026
  tail call void asm sideeffect "isb", ""() #22, !dbg !3027, !srcloc !3031
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3032
  ret i32 0, !dbg !3033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !3034 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3037
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3038
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3039
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3040
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !3041
  call void @llvm.dbg.value(metadata i32 0, metadata !3036, metadata !DIExpression()), !dbg !3042
  br label %2, !dbg !3043

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3036, metadata !DIExpression()), !dbg !3042
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !3045
  store volatile i32 0, i32* %4, align 4, !dbg !3048
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !3049
  store volatile i32 0, i32* %5, align 4, !dbg !3050
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !3051
  store i32 0, i32* %6, align 4, !dbg !3052
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !3053
  store i32 0, i32* %7, align 4, !dbg !3054
  %8 = add nuw nsw i32 %3, 1, !dbg !3055
  call void @llvm.dbg.value(metadata i32 %8, metadata !3036, metadata !DIExpression()), !dbg !3042
  %9 = icmp eq i32 %8, 16, !dbg !3056
  br i1 %9, label %10, label %2, !dbg !3043, !llvm.loop !3057

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !3059
  ret i32 0, !dbg !3060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !3061 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3062
  %2 = and i32 %1, 768, !dbg !3064
  %3 = icmp eq i32 %2, 0, !dbg !3064
  br i1 %3, label %8, label %4, !dbg !3065

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3066
  %6 = or i32 %5, 13, !dbg !3066
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3066
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3067
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3068
  br label %8, !dbg !3069

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !3070
  ret i32 %9, !dbg !3071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !3072 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3075
  call void @llvm.dbg.value(metadata i32 %1, metadata !3074, metadata !DIExpression()), !dbg !3076
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3077
  %3 = and i32 %2, 1, !dbg !3079
  %4 = icmp eq i32 %3, 0, !dbg !3079
  br i1 %4, label %7, label %5, !dbg !3080

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3081
  br label %7, !dbg !3083

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3084
  %9 = and i32 %8, -2, !dbg !3084
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3084
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3085
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3086
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3087
  ret i32 0, !dbg !3088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !3089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3093, metadata !DIExpression()), !dbg !3094
  %2 = icmp ugt i32 %0, 15, !dbg !3095
  br i1 %2, label %13, label %3, !dbg !3097

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3098
  %5 = load volatile i32, i32* %4, align 4, !dbg !3098
  %6 = and i32 %5, 256, !dbg !3100
  %7 = icmp eq i32 %6, 0, !dbg !3100
  br i1 %7, label %13, label %8, !dbg !3101

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !3102
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3104
  %11 = or i32 %10, %9, !dbg !3104
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3104
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3105
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !3106
  br label %13, !dbg !3107

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !3094
  ret i32 %14, !dbg !3108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !3109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3111, metadata !DIExpression()), !dbg !3112
  %2 = icmp ugt i32 %0, 15, !dbg !3113
  br i1 %2, label %11, label %3, !dbg !3115

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !3116
  %5 = xor i32 %4, -1, !dbg !3117
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3118
  %7 = and i32 %6, %5, !dbg !3118
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3118
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3119
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !3120
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3121
  store i32 0, i32* %9, align 4, !dbg !3122
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3123
  store i32 0, i32* %10, align 4, !dbg !3124
  br label %11, !dbg !3125

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !3112
  ret i32 %12, !dbg !3126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !3127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3132, metadata !DIExpression()), !dbg !3133
  %2 = icmp ugt i32 %0, 3, !dbg !3134
  br i1 %2, label %13, label %3, !dbg !3136

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3137
  %5 = and i32 %4, -769, !dbg !3137
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3137
  %6 = shl nuw nsw i32 %0, 8, !dbg !3138
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3139
  %8 = or i32 %7, %6, !dbg !3139
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3139
  %9 = icmp eq i32 %0, 0, !dbg !3140
  br i1 %9, label %10, label %11, !dbg !3142

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3143
  br label %11, !dbg !3145

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3146
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !3147
  br label %13, !dbg !3148

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !3133
  ret i32 %14, !dbg !3149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !3150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3161, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !3162, metadata !DIExpression()), !dbg !3163
  %3 = icmp ugt i32 %0, 15, !dbg !3164
  br i1 %3, label %30, label %4, !dbg !3166

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !3167
  br i1 %5, label %30, label %6, !dbg !3169

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !3170
  %8 = load i32, i32* %7, align 4, !dbg !3170
  %9 = and i32 %8, 4095, !dbg !3172
  %10 = icmp eq i32 %9, 0, !dbg !3172
  br i1 %10, label %12, label %11, !dbg !3173

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3174
  unreachable, !dbg !3174

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !3176
  %14 = load i32, i32* %13, align 4, !dbg !3176
  %15 = and i32 %14, 4095, !dbg !3178
  %16 = icmp eq i32 %15, 0, !dbg !3178
  br i1 %16, label %18, label %17, !dbg !3179

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3180
  unreachable, !dbg !3180

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3182
  store volatile i32 %8, i32* %19, align 4, !dbg !3183
  %20 = load i32, i32* %7, align 4, !dbg !3184
  %21 = load i32, i32* %13, align 4, !dbg !3185
  %22 = add i32 %21, %20, !dbg !3186
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !3187
  store volatile i32 %22, i32* %23, align 4, !dbg !3188
  %24 = load volatile i32, i32* %19, align 4, !dbg !3189
  %25 = or i32 %24, 256, !dbg !3189
  store volatile i32 %25, i32* %19, align 4, !dbg !3189
  %26 = load volatile i32, i32* %19, align 4, !dbg !3190
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3191
  store i32 %26, i32* %27, align 4, !dbg !3192
  %28 = load volatile i32, i32* %23, align 4, !dbg !3193
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3194
  store i32 %28, i32* %29, align 4, !dbg !3195
  br label %30, !dbg !3196

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !3163
  ret i32 %31, !dbg !3197
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3202, metadata !DIExpression()), !dbg !3204
  %2 = and i32 %0, 31, !dbg !3205
  %3 = icmp eq i32 %2, 0, !dbg !3205
  br i1 %3, label %4, label %9, !dbg !3207

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3208
  call void @llvm.dbg.value(metadata i32 %5, metadata !3203, metadata !DIExpression()), !dbg !3204
  %6 = and i32 %0, -32, !dbg !3209
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3210
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3211
  %8 = or i32 %7, 5, !dbg !3211
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3211
  tail call void asm sideeffect "isb", ""() #22, !dbg !3212, !srcloc !3031
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3214
  br label %9, !dbg !3215

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3204
  ret i32 %10, !dbg !3216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3221, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.value(metadata i32 %1, metadata !3222, metadata !DIExpression()), !dbg !3225
  %3 = add i32 %1, %0, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %3, metadata !3224, metadata !DIExpression()), !dbg !3225
  %4 = or i32 %1, %0, !dbg !3227
  %5 = and i32 %4, 31, !dbg !3227
  %6 = icmp eq i32 %5, 0, !dbg !3227
  br i1 %6, label %7, label %16, !dbg !3227

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %8, metadata !3223, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.value(metadata i32 %0, metadata !3221, metadata !DIExpression()), !dbg !3225
  %9 = icmp ugt i32 %3, %0, !dbg !3230
  br i1 %9, label %10, label %15, !dbg !3231

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3221, metadata !DIExpression()), !dbg !3225
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3232
  %13 = add i32 %11, 32, !dbg !3234
  call void @llvm.dbg.value(metadata i32 %13, metadata !3221, metadata !DIExpression()), !dbg !3225
  %14 = icmp ult i32 %13, %3, !dbg !3230
  br i1 %14, label %10, label %15, !dbg !3231, !llvm.loop !3235

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3237, !srcloc !3031
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3239
  br label %16, !dbg !3240

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3225
  ret i32 %17, !dbg !3241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3244, metadata !DIExpression()), !dbg !3246
  %2 = and i32 %0, 31, !dbg !3247
  %3 = icmp eq i32 %2, 0, !dbg !3247
  br i1 %3, label %4, label %9, !dbg !3249

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3250
  call void @llvm.dbg.value(metadata i32 %5, metadata !3245, metadata !DIExpression()), !dbg !3246
  %6 = and i32 %0, -32, !dbg !3251
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3252
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3253
  %8 = or i32 %7, 21, !dbg !3253
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3253
  tail call void asm sideeffect "isb", ""() #22, !dbg !3254, !srcloc !3031
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3256
  br label %9, !dbg !3257

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3246
  ret i32 %10, !dbg !3258
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3261, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.value(metadata i32 %1, metadata !3262, metadata !DIExpression()), !dbg !3265
  %3 = add i32 %1, %0, !dbg !3266
  call void @llvm.dbg.value(metadata i32 %3, metadata !3264, metadata !DIExpression()), !dbg !3265
  %4 = or i32 %1, %0, !dbg !3267
  %5 = and i32 %4, 31, !dbg !3267
  %6 = icmp eq i32 %5, 0, !dbg !3267
  br i1 %6, label %7, label %16, !dbg !3267

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3269
  call void @llvm.dbg.value(metadata i32 %8, metadata !3263, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.value(metadata i32 %0, metadata !3261, metadata !DIExpression()), !dbg !3265
  %9 = icmp ugt i32 %3, %0, !dbg !3270
  br i1 %9, label %10, label %15, !dbg !3271

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3261, metadata !DIExpression()), !dbg !3265
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3272
  %13 = add i32 %11, 32, !dbg !3274
  call void @llvm.dbg.value(metadata i32 %13, metadata !3261, metadata !DIExpression()), !dbg !3265
  %14 = icmp ult i32 %13, %3, !dbg !3270
  br i1 %14, label %10, label %15, !dbg !3271, !llvm.loop !3275

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3277, !srcloc !3031
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3279
  br label %16, !dbg !3280

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3265
  ret i32 %17, !dbg !3281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3282 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3285
  call void @llvm.dbg.value(metadata i32 %1, metadata !3284, metadata !DIExpression()), !dbg !3286
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3287
  %3 = and i32 %2, -31, !dbg !3287
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3287
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3288
  %5 = or i32 %4, 19, !dbg !3288
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3288
  tail call void asm sideeffect "isb", ""() #22, !dbg !3289, !srcloc !3031
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3291
  ret i32 0, !dbg !3292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3297, metadata !DIExpression()), !dbg !3299
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3300
  %3 = and i32 %2, 8, !dbg !3302
  %4 = icmp eq i32 %3, 0, !dbg !3302
  br i1 %4, label %23, label %5, !dbg !3303

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3298, metadata !DIExpression()), !dbg !3299
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3304
  %8 = shl nuw nsw i32 1, %6, !dbg !3309
  %9 = and i32 %7, %8, !dbg !3310
  %10 = icmp eq i32 %9, 0, !dbg !3310
  br i1 %10, label %20, label %11, !dbg !3311

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3312
  %13 = load volatile i32, i32* %12, align 4, !dbg !3312
  %14 = and i32 %13, -257, !dbg !3315
  %15 = icmp ugt i32 %14, %0, !dbg !3316
  br i1 %15, label %20, label %16, !dbg !3317

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3318
  %18 = load volatile i32, i32* %17, align 4, !dbg !3318
  %19 = icmp ugt i32 %18, %0, !dbg !3319
  br i1 %19, label %23, label %20, !dbg !3320

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3321
  call void @llvm.dbg.value(metadata i32 %21, metadata !3298, metadata !DIExpression()), !dbg !3299
  %22 = icmp eq i32 %21, 16, !dbg !3322
  br i1 %22, label %23, label %5, !dbg !3323, !llvm.loop !3324

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3299
  ret i1 %24, !dbg !3326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3333, metadata !DIExpression()), !dbg !3334
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3335
  br i1 %2, label %3, label %26, !dbg !3337

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3338
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3340
  %6 = load i32, i32* %5, align 4, !dbg !3340
  %7 = icmp eq i32 %6, 1, !dbg !3341
  br i1 %7, label %26, label %8, !dbg !3342

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3343
  %10 = load i8, i8* %9, align 4, !dbg !3343, !range !2988
  %11 = icmp eq i8 %10, 0, !dbg !3343
  br i1 %11, label %12, label %26, !dbg !3344

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3345
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3346
  tail call void @gpt_open_clock_source() #20, !dbg !3347
  store i8 1, i8* %9, align 4, !dbg !3348
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3349
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3349
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3350
  %18 = load volatile i32, i32* %17, align 4, !dbg !3351
  %19 = and i32 %18, -2, !dbg !3351
  store volatile i32 %19, i32* %17, align 4, !dbg !3351
  %20 = shl nuw i32 1, %0, !dbg !3352
  %21 = xor i32 %20, -1, !dbg !3353
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3354
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3355
  %24 = load volatile i32, i32* %23, align 4, !dbg !3356
  %25 = and i32 %24, %21, !dbg !3356
  store volatile i32 %25, i32* %23, align 4, !dbg !3356
  br label %26, !dbg !3357

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3334
  ret i32 %27, !dbg !3358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3363, metadata !DIExpression()), !dbg !3364
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3365, !range !2988
  %3 = icmp ne i8 %2, 0, !dbg !3367
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3368
  %7 = and i1 %5, %6, !dbg !3368
  ret i1 %7, !dbg !3369
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3372, metadata !DIExpression()), !dbg !3373
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3374
  br i1 %2, label %3, label %14, !dbg !3376

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3377
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3379
  %6 = load i32, i32* %5, align 4, !dbg !3379
  %7 = icmp eq i32 %6, 1, !dbg !3380
  br i1 %7, label %14, label %8, !dbg !3381

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3382
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3383
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3384
  store i8 0, i8* %11, align 4, !dbg !3385
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3386
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3386
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3387
  br label %14, !dbg !3388

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3373
  ret i32 %15, !dbg !3389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3395, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32* %1, metadata !3396, metadata !DIExpression()), !dbg !3397
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3398

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3399
  %5 = icmp eq i32 %4, 1, !dbg !3403
  br i1 %5, label %8, label %6, !dbg !3404

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3405
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3407
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3408
  br label %8, !dbg !3409

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3410
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3411
  br label %20, !dbg !3412

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3413
  %13 = icmp eq i32 %12, 1, !dbg !3417
  br i1 %13, label %16, label %14, !dbg !3418

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3419
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3421
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3422
  br label %16, !dbg !3423

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3424
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3425
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3426
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3427
  store i32 %21, i32* %1, align 4, !dbg !3427
  br label %22, !dbg !3428

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3397
  ret i32 %23, !dbg !3429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3434, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i32 %1, metadata !3435, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i32* %2, metadata !3436, metadata !DIExpression()), !dbg !3437
  %4 = icmp eq i32* %2, null, !dbg !3438
  br i1 %4, label %7, label %5, !dbg !3440

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3441
  store i32 %6, i32* %2, align 4, !dbg !3441
  br label %7, !dbg !3443

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3437
  ret i32 %8, !dbg !3444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3450, metadata !DIExpression()), !dbg !3452
  call void @llvm.dbg.value(metadata i32* %1, metadata !3451, metadata !DIExpression()), !dbg !3452
  %3 = icmp ugt i32 %0, 5, !dbg !3453
  br i1 %3, label %7, label %4, !dbg !3455

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3456
  %6 = load i32, i32* %5, align 4, !dbg !3456
  store i32 %6, i32* %1, align 4, !dbg !3457
  br label %7, !dbg !3458

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3452
  ret i32 %8, !dbg !3459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3464, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3465, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %2, metadata !3466, metadata !DIExpression()), !dbg !3467
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3468
  br i1 %4, label %5, label %18, !dbg !3470

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3471
  %7 = load i32, i32* %6, align 4, !dbg !3471
  %8 = icmp eq i32 %7, 1, !dbg !3473
  br i1 %8, label %18, label %9, !dbg !3474

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3475
  %11 = load i8, i8* %10, align 4, !dbg !3475, !range !2988
  %12 = icmp eq i8 %11, 1, !dbg !3476
  br i1 %12, label %13, label %18, !dbg !3477

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3478
  br i1 %14, label %18, label %15, !dbg !3480

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3481
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3482
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3483
  store i8* %2, i8** %17, align 4, !dbg !3484
  tail call void @gpt_nvic_register() #20, !dbg !3485
  br label %18, !dbg !3486

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3467
  ret i32 %19, !dbg !3487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3488 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3493, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i32 %1, metadata !3494, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i32 %2, metadata !3495, metadata !DIExpression()), !dbg !3497
  %5 = bitcast i32* %4 to i8*, !dbg !3498
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3498
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3496, metadata !DIExpression()), !dbg !3499
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3500
  br i1 %6, label %7, label %51, !dbg !3502

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3503
  %9 = load i32, i32* %8, align 4, !dbg !3503
  %10 = icmp eq i32 %9, 1, !dbg !3505
  br i1 %10, label %51, label %11, !dbg !3506

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3507
  %13 = load i8, i8* %12, align 4, !dbg !3507, !range !2988
  %14 = icmp eq i8 %13, 1, !dbg !3508
  br i1 %14, label %15, label %51, !dbg !3509

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3510
  br i1 %16, label %51, label %17, !dbg !3512

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3513
  store volatile i32 %18, i32* %4, align 4, !dbg !3514
  tail call void @gpt_open_clock_source() #20, !dbg !3515
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3516
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3516
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3517
  %22 = load volatile i32, i32* %21, align 4, !dbg !3518
  %23 = and i32 %22, -2, !dbg !3518
  store volatile i32 %23, i32* %21, align 4, !dbg !3518
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3519
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3520
  %26 = load volatile i32, i32* %25, align 4, !dbg !3521
  %27 = and i32 %26, -2, !dbg !3521
  store volatile i32 %27, i32* %25, align 4, !dbg !3521
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3522
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3523
  store volatile i32 16, i32* %29, align 4, !dbg !3524
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3525
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3526
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3527
  store volatile i32 %30, i32* %32, align 4, !dbg !3528
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3529
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3530
  store volatile i32 1, i32* %34, align 4, !dbg !3531
  %35 = shl i32 %2, 4, !dbg !3532
  %36 = or i32 %35, 2, !dbg !3533
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3534
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3535
  store volatile i32 %36, i32* %38, align 4, !dbg !3536
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3537

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3538
  %43 = icmp eq i32 %42, 0, !dbg !3537
  br i1 %43, label %44, label %41, !dbg !3537, !llvm.loop !3539

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3541
  %46 = load volatile i32, i32* %45, align 4, !dbg !3542
  %47 = or i32 %46, 1, !dbg !3542
  store volatile i32 %47, i32* %45, align 4, !dbg !3542
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3543
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3544
  store volatile i32 1, i32* %49, align 4, !dbg !3545
  store i32 1, i32* %8, align 4, !dbg !3546
  %50 = load volatile i32, i32* %4, align 4, !dbg !3547
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3548
  br label %51, !dbg !3549

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3550
  ret i32 %52, !dbg !3550
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3555, metadata !DIExpression()), !dbg !3556
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3557
  %3 = icmp eq i32 %2, 1, !dbg !3559
  br i1 %3, label %6, label %4, !dbg !3560

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3561
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3563
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3564
  br label %6, !dbg !3565

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3566
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3567
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3568
  ret i32 0, !dbg !3569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3570 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3572, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1, metadata !3573, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %2, metadata !3574, metadata !DIExpression()), !dbg !3576
  %5 = bitcast i32* %4 to i8*, !dbg !3577
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3577
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3575, metadata !DIExpression()), !dbg !3578
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3579
  br i1 %6, label %7, label %50, !dbg !3581

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3582
  %9 = load i32, i32* %8, align 4, !dbg !3582
  %10 = icmp eq i32 %9, 1, !dbg !3584
  br i1 %10, label %50, label %11, !dbg !3585

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3586
  %13 = load i8, i8* %12, align 4, !dbg !3586, !range !2988
  %14 = icmp eq i8 %13, 1, !dbg !3587
  br i1 %14, label %15, label %50, !dbg !3588

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3589
  store i8 1, i8* %16, align 1, !dbg !3590
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3591
  store volatile i32 %17, i32* %4, align 4, !dbg !3592
  tail call void @gpt_open_clock_source() #20, !dbg !3593
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3594
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3594
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3595
  %21 = load volatile i32, i32* %20, align 4, !dbg !3596
  %22 = and i32 %21, -2, !dbg !3596
  store volatile i32 %22, i32* %20, align 4, !dbg !3596
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3597
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3598
  %25 = load volatile i32, i32* %24, align 4, !dbg !3599
  %26 = and i32 %25, -2, !dbg !3599
  store volatile i32 %26, i32* %24, align 4, !dbg !3599
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3600
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3601
  store volatile i32 12, i32* %28, align 4, !dbg !3602
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3603
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3604
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3605
  store volatile i32 %29, i32* %31, align 4, !dbg !3606
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3607
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3608
  store volatile i32 1, i32* %33, align 4, !dbg !3609
  %34 = shl i32 %2, 4, !dbg !3610
  %35 = or i32 %34, 2, !dbg !3611
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3612
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3613
  store volatile i32 %35, i32* %37, align 4, !dbg !3614
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3615

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3616
  %42 = icmp eq i32 %41, 0, !dbg !3615
  br i1 %42, label %43, label %40, !dbg !3615, !llvm.loop !3617

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3619
  %45 = load volatile i32, i32* %44, align 4, !dbg !3620
  %46 = or i32 %45, 1, !dbg !3620
  store volatile i32 %46, i32* %44, align 4, !dbg !3620
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3621
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3622
  store volatile i32 1, i32* %48, align 4, !dbg !3623
  %49 = load volatile i32, i32* %4, align 4, !dbg !3624
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3625
  store i32 1, i32* %8, align 4, !dbg !3626
  br label %50, !dbg !3627

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3576
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3628
  ret i32 %51, !dbg !3628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3631, metadata !DIExpression()), !dbg !3632
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3633
  %3 = icmp eq i32 %2, 1, !dbg !3635
  br i1 %3, label %6, label %4, !dbg !3636

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3637
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3639
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3640
  br label %6, !dbg !3641

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3642
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3643
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3644
  ret i32 0, !dbg !3645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3646 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3648, metadata !DIExpression()), !dbg !3650
  %3 = bitcast i32* %2 to i8*, !dbg !3651
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3651
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3649, metadata !DIExpression()), !dbg !3652
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3653
  br i1 %4, label %5, label %24, !dbg !3655

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3656
  store volatile i32 %6, i32* %2, align 4, !dbg !3657
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3658
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3658
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3659
  %10 = load volatile i32, i32* %9, align 4, !dbg !3660
  %11 = and i32 %10, -2, !dbg !3660
  store volatile i32 %11, i32* %9, align 4, !dbg !3660
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3661
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3662
  %14 = load volatile i32, i32* %13, align 4, !dbg !3663
  %15 = and i32 %14, -2, !dbg !3663
  store volatile i32 %15, i32* %13, align 4, !dbg !3663
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3664
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3665
  store volatile i32 1, i32* %17, align 4, !dbg !3666
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3667
  store i32 0, i32* %18, align 4, !dbg !3668
  %19 = load volatile i32, i32* %2, align 4, !dbg !3669
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3670
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3671
  %21 = load i8, i8* %20, align 1, !dbg !3671, !range !2988
  %22 = icmp eq i8 %21, 0, !dbg !3671
  br i1 %22, label %24, label %23, !dbg !3673

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3674
  br label %24, !dbg !3676

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3650
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3677
  ret i32 %25, !dbg !3677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3678 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3682, metadata !DIExpression()), !dbg !3685
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3686
  %3 = icmp ugt i32 %2, 31, !dbg !3688
  br i1 %3, label %13, label %4, !dbg !3689

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3690
  br i1 %5, label %13, label %6, !dbg !3692

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %7, metadata !3684, metadata !DIExpression()), !dbg !3685
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %8, metadata !3683, metadata !DIExpression()), !dbg !3685
  %9 = or i32 %8, -559087616, !dbg !3695
  store i32 %9, i32* %0, align 4, !dbg !3696
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3697
  store i8 1, i8* %10, align 4, !dbg !3698
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3699
  %12 = add i32 %11, 1, !dbg !3699
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3699
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3700
  br label %13, !dbg !3701

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3685
  ret i32 %14, !dbg !3702
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3703 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3705, metadata !DIExpression()), !dbg !3707
  %3 = bitcast i32* %2 to i8*, !dbg !3708
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3708
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3706, metadata !DIExpression()), !dbg !3709
  %4 = and i32 %0, -559087616, !dbg !3710
  %5 = icmp eq i32 %4, -559087616, !dbg !3712
  br i1 %5, label %6, label %24, !dbg !3713

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3714
  store volatile i32 %7, i32* %2, align 4, !dbg !3715
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3716
  %9 = icmp eq i32 %8, 0, !dbg !3718
  br i1 %9, label %24, label %10, !dbg !3719

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3720
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3722
  %13 = load i8, i8* %12, align 1, !dbg !3722, !range !2988
  %14 = icmp eq i8 %13, 0, !dbg !3722
  br i1 %14, label %15, label %24, !dbg !3723

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3724
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3726
  %18 = load i8, i8* %17, align 4, !dbg !3726, !range !2988
  %19 = icmp eq i8 %18, 1, !dbg !3727
  br i1 %19, label %20, label %24, !dbg !3728

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3729
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3730
  store i8 0, i8* %22, align 4, !dbg !3731
  %23 = add i32 %8, -1, !dbg !3732
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3732
  br label %24, !dbg !3733

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3707
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3734
  ret i32 %25, !dbg !3734
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3739, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %1, metadata !3740, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3741, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i8* %3, metadata !3742, metadata !DIExpression()), !dbg !3746
  %5 = and i32 %0, -559087616, !dbg !3747
  %6 = icmp ne i32 %5, -559087616, !dbg !3749
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3750
  call void @llvm.dbg.value(metadata i32 %0, metadata !3745, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3746
  br i1 %8, label %44, label %9, !dbg !3750

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %10, metadata !3745, metadata !DIExpression()), !dbg !3746
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3752
  %12 = load i8, i8* %11, align 1, !dbg !3752, !range !2988
  %13 = icmp eq i8 %12, 0, !dbg !3752
  br i1 %13, label %14, label %44, !dbg !3754

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3755
  %16 = load i8, i8* %15, align 4, !dbg !3755, !range !2988
  %17 = icmp eq i8 %16, 1, !dbg !3757
  br i1 %17, label %18, label %44, !dbg !3758

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3759
  br i1 %19, label %44, label %20, !dbg !3761

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %21, metadata !3744, metadata !DIExpression()), !dbg !3746
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3763
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3764, !range !2988
  %23 = icmp eq i8 %22, 0, !dbg !3766
  br i1 %23, label %24, label %27, !dbg !3767

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3768
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3770
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3771
  br label %27, !dbg !3772

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3773
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3774, !range !2988
  %30 = icmp eq i8 %29, 0, !dbg !3776
  br i1 %30, label %31, label %34, !dbg !3777

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3778
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %33, metadata !3743, metadata !DIExpression()), !dbg !3746
  br label %34, !dbg !3781

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3782
  call void @llvm.dbg.value(metadata i32 %35, metadata !3743, metadata !DIExpression()), !dbg !3746
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3783
  %37 = add i32 %36, %35, !dbg !3783
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3783
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3784
  %39 = add i32 %38, 1, !dbg !3784
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3784
  store i8 1, i8* %11, align 1, !dbg !3785
  %40 = add i32 %37, %1, !dbg !3786
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3787
  store i32 %40, i32* %41, align 4, !dbg !3788
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3789
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3790
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3791
  store i8* %3, i8** %43, align 4, !dbg !3792
  tail call void @gpt_sw_start_timer() #20, !dbg !3793
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3794
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3795
  br label %44, !dbg !3796

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3746
  ret i32 %45, !dbg !3797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3800, metadata !DIExpression()), !dbg !3804
  %2 = and i32 %0, -559087616, !dbg !3805
  %3 = icmp eq i32 %2, -559087616, !dbg !3807
  br i1 %3, label %4, label %31, !dbg !3808

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %5, metadata !3803, metadata !DIExpression()), !dbg !3804
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3810
  %7 = load i8, i8* %6, align 1, !dbg !3810, !range !2988
  %8 = icmp eq i8 %7, 1, !dbg !3812
  br i1 %8, label %9, label %31, !dbg !3813

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3814
  %11 = load i8, i8* %10, align 4, !dbg !3814, !range !2988
  %12 = icmp eq i8 %11, 1, !dbg !3816
  br i1 %12, label %13, label %31, !dbg !3817

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %14, metadata !3802, metadata !DIExpression()), !dbg !3804
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3819
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3820
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3821
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3822, !range !2988
  %17 = icmp eq i8 %16, 0, !dbg !3824
  br i1 %17, label %18, label %21, !dbg !3825

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3826
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %20, metadata !3801, metadata !DIExpression()), !dbg !3804
  br label %21, !dbg !3829

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3830
  call void @llvm.dbg.value(metadata i32 %22, metadata !3801, metadata !DIExpression()), !dbg !3804
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3831
  %24 = add i32 %23, %22, !dbg !3831
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3831
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3832
  %26 = add i32 %25, -1, !dbg !3832
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3832
  store i8 0, i8* %6, align 1, !dbg !3833
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3834
  %28 = icmp eq i32 %27, 0, !dbg !3836
  br i1 %28, label %30, label %29, !dbg !3837

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3838
  br label %30, !dbg !3840

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3841
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3842
  br label %31, !dbg !3843

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3804
  ret i32 %32, !dbg !3844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3849, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32* %1, metadata !3850, metadata !DIExpression()), !dbg !3854
  %3 = and i32 %0, -559087616, !dbg !3855
  %4 = icmp eq i32 %3, -559087616, !dbg !3857
  br i1 %4, label %5, label %20, !dbg !3858

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %6, metadata !3853, metadata !DIExpression()), !dbg !3854
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3860
  %8 = load i8, i8* %7, align 4, !dbg !3860, !range !2988
  %9 = icmp eq i8 %8, 1, !dbg !3862
  br i1 %9, label %10, label %20, !dbg !3863

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %11, metadata !3852, metadata !DIExpression()), !dbg !3854
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3865
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3866
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3867
  %15 = load volatile i32, i32* %14, align 4, !dbg !3867
  %16 = add i32 %15, %12, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %16, metadata !3851, metadata !DIExpression()), !dbg !3854
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3869
  %18 = load i32, i32* %17, align 4, !dbg !3869
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3871
  store i32 %19, i32* %1, align 4, !dbg !3872
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3873
  br label %20, !dbg !3874

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3854
  ret i32 %21, !dbg !3875
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3880, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i32 %1, metadata !3881, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i32 %2, metadata !3882, metadata !DIExpression()), !dbg !3887
  %4 = and i32 %0, 65535, !dbg !3888
  %5 = mul i32 %4, %1, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %5, metadata !3883, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3887
  %6 = lshr i32 %0, 16, !dbg !3890
  %7 = mul i32 %6, %1, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %7, metadata !3883, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3887
  %8 = and i32 %5, 65535, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %8, metadata !3885, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3887
  %9 = lshr i32 %5, 16, !dbg !3893
  %10 = add i32 %9, %7, !dbg !3894
  call void @llvm.dbg.value(metadata i32 %10, metadata !3885, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3887
  %11 = udiv i32 %10, %2, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %11, metadata !3886, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3887
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3896
  %15 = or i32 %14, %8, !dbg !3897
  %16 = udiv i32 %15, %2, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %16, metadata !3886, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3887
  %17 = shl i32 %11, 16, !dbg !3899
  %18 = add i32 %16, %17, !dbg !3900
  ret i32 %18, !dbg !3901
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3902 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3906, metadata !DIExpression()), !dbg !3907
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3908
  %3 = load volatile i32, i32* %2, align 4, !dbg !3908
  ret i32 %3, !dbg !3909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3914, metadata !DIExpression()), !dbg !3915
  %2 = shl i32 %0, 5, !dbg !3916
  %3 = mul i32 %0, 7, !dbg !3917
  %4 = udiv i32 %3, 10, !dbg !3918
  %5 = add i32 %4, %2, !dbg !3919
  %6 = mul i32 %0, 6, !dbg !3920
  %7 = udiv i32 %6, 100, !dbg !3921
  %8 = add i32 %5, %7, !dbg !3922
  %9 = shl i32 %0, 3, !dbg !3923
  %10 = udiv i32 %9, 1000, !dbg !3924
  %11 = add i32 %8, %10, !dbg !3925
  ret i32 %11, !dbg !3926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3927
  br i1 %1, label %10, label %2, !dbg !3929

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3930
  br i1 %3, label %4, label %6, !dbg !3933

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3934
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3936
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3937

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3939
  br label %8, !dbg !3939

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3939
  br label %10, !dbg !3940

10:                                               ; preds = %8, %0
  ret void, !dbg !3940
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3941 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3942
  br i1 %1, label %4, label %2, !dbg !3944

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3945
  br label %4, !dbg !3947

4:                                                ; preds = %2, %0
  ret void, !dbg !3948
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3951, metadata !DIExpression()), !dbg !3952
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3953
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3954
  br i1 %2, label %3, label %6, !dbg !3956

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3957
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3959
  br label %6, !dbg !3960

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3961
  ret i32 %7, !dbg !3962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3965, metadata !DIExpression()), !dbg !3966
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3967
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3968
  br i1 %2, label %3, label %6, !dbg !3970

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3971
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3973
  br label %6, !dbg !3974

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3975
  ret i32 %7, !dbg !3976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3981, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %1, metadata !3982, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %2, metadata !3983, metadata !DIExpression()), !dbg !3984
  tail call void @gpt_open_clock_source() #21, !dbg !3985
  %4 = or i32 %2, %1, !dbg !3986
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3987
  store volatile i32 %4, i32* %5, align 4, !dbg !3988
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3989
  store volatile i32 49, i32* %6, align 4, !dbg !3990
  ret void, !dbg !3991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3992 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3996, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 %1, metadata !3997, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 0, metadata !3999, metadata !DIExpression()), !dbg !4000
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4001
  call void @llvm.dbg.value(metadata i32 %3, metadata !3999, metadata !DIExpression()), !dbg !4000
  %4 = add i32 %1, 1, !dbg !4002
  %5 = add i32 %4, %3, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %5, metadata !3998, metadata !DIExpression()), !dbg !4000
  %6 = icmp ugt i32 %5, %3, !dbg !4004
  br i1 %6, label %7, label %10, !dbg !4006

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4007
  %9 = icmp ult i32 %8, %5, !dbg !4009
  br i1 %9, label %7, label %16, !dbg !4010, !llvm.loop !4011

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4013
  %12 = icmp ult i32 %11, %3, !dbg !4015
  br i1 %12, label %13, label %10, !dbg !4016, !llvm.loop !4017

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4019
  %15 = icmp ult i32 %14, %5, !dbg !4020
  br i1 %15, label %13, label %16, !dbg !4021, !llvm.loop !4022

16:                                               ; preds = %13, %7
  ret void, !dbg !4024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !4025 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4029, metadata !DIExpression()), !dbg !4030
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4031
  store volatile i32 0, i32* %2, align 4, !dbg !4032
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !4033
  store volatile i32 0, i32* %3, align 4, !dbg !4034
  %4 = load volatile i32, i32* %3, align 4, !dbg !4035
  %5 = or i32 %4, 2, !dbg !4035
  store volatile i32 %5, i32* %3, align 4, !dbg !4035
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !4036

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !4037
  %9 = icmp eq i32 %8, 0, !dbg !4036
  br i1 %9, label %10, label %7, !dbg !4036, !llvm.loop !4038

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !4040
  store volatile i32 16, i32* %11, align 4, !dbg !4041
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !4042
  store volatile i32 1, i32* %12, align 4, !dbg !4043
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !4044
  store volatile i32 -1, i32* %13, align 4, !dbg !4045
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !4046
  br i1 %14, label %15, label %16, !dbg !4048

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !4049
  br label %16, !dbg !4051

16:                                               ; preds = %15, %10
  ret void, !dbg !4052
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !4053 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4055, metadata !DIExpression()), !dbg !4057
  %3 = bitcast i32* %2 to i8*, !dbg !4058
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4058
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4056, metadata !DIExpression()), !dbg !4059
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4060
  %5 = load volatile i32, i32* %4, align 4, !dbg !4060
  store volatile i32 %5, i32* %2, align 4, !dbg !4061
  %6 = load volatile i32, i32* %4, align 4, !dbg !4062
  %7 = and i32 %6, -2, !dbg !4062
  store volatile i32 %7, i32* %4, align 4, !dbg !4062
  %8 = load volatile i32, i32* %2, align 4, !dbg !4063
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4064
  ret i32 %8, !dbg !4065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4066 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4070, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.value(metadata i32 %1, metadata !4071, metadata !DIExpression()), !dbg !4072
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4073
  store volatile i32 %1, i32* %3, align 4, !dbg !4074
  ret void, !dbg !4075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !4076 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4078, metadata !DIExpression()), !dbg !4083
  %5 = bitcast i32* %2 to i8*, !dbg !4084
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4084
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4080, metadata !DIExpression()), !dbg !4085
  %6 = bitcast i32* %3 to i8*, !dbg !4086
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !4086
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4081, metadata !DIExpression()), !dbg !4087
  %7 = bitcast i32* %4 to i8*, !dbg !4088
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !4088
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4082, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 undef, metadata !4078, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.value(metadata i32 0, metadata !4079, metadata !DIExpression()), !dbg !4083
  br label %8, !dbg !4090

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4079, metadata !DIExpression()), !dbg !4083
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !4092
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4092
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !4095
  %13 = load volatile i32, i32* %12, align 4, !dbg !4095
  store volatile i32 %13, i32* %3, align 4, !dbg !4096
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !4097
  %15 = load volatile i32, i32* %14, align 4, !dbg !4097
  store volatile i32 %15, i32* %4, align 4, !dbg !4098
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !4099
  store volatile i32 %16, i32* %2, align 4, !dbg !4100
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4101
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !4102
  store volatile i32 1, i32* %18, align 4, !dbg !4103
  %19 = load volatile i32, i32* %3, align 4, !dbg !4104
  %20 = and i32 %19, 1, !dbg !4106
  %21 = icmp eq i32 %20, 0, !dbg !4106
  br i1 %21, label %33, label %22, !dbg !4107

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !4108
  %24 = and i32 %23, 1, !dbg !4109
  %25 = icmp eq i32 %24, 0, !dbg !4109
  br i1 %25, label %33, label %26, !dbg !4110

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !4111
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4111
  %29 = icmp eq void (i8*)* %28, null, !dbg !4114
  br i1 %29, label %33, label %30, !dbg !4115

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !4116
  %32 = load i8*, i8** %31, align 4, !dbg !4116
  tail call void %28(i8* noundef %32) #20, !dbg !4118
  br label %33, !dbg !4119

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4120
  %35 = load volatile i32, i32* %2, align 4, !dbg !4121
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !4122
  %36 = add nuw nsw i32 %9, 1, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %36, metadata !4079, metadata !DIExpression()), !dbg !4083
  %37 = icmp eq i32 %36, 6, !dbg !4124
  br i1 %37, label %38, label %8, !dbg !4090, !llvm.loop !4125

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !4127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !4127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4127
  ret void, !dbg !4127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !4128 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !4129
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !4130
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !4131
  ret void, !dbg !4132
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !4133 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4135, metadata !DIExpression()), !dbg !4140
  %3 = bitcast i32* %2 to i8*, !dbg !4141
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4141
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4136, metadata !DIExpression()), !dbg !4142
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %4, metadata !4137, metadata !DIExpression()), !dbg !4140
  %5 = lshr i32 %4, 15, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %5, metadata !4138, metadata !DIExpression()), !dbg !4140
  %6 = and i32 %4, 32767, !dbg !4145
  %7 = mul nuw nsw i32 %6, 1000, !dbg !4146
  %8 = add nuw nsw i32 %7, 16384, !dbg !4147
  %9 = lshr i32 %8, 15, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %9, metadata !4139, metadata !DIExpression()), !dbg !4140
  %10 = mul nuw nsw i32 %5, 1000, !dbg !4149
  %11 = add nuw nsw i32 %9, %10, !dbg !4150
  store volatile i32 %11, i32* %2, align 4, !dbg !4151
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4152
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !4153
  %14 = load volatile i32, i32* %13, align 4, !dbg !4154
  %15 = or i32 %14, 2, !dbg !4154
  store volatile i32 %15, i32* %13, align 4, !dbg !4154
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !4155

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !4156
  %20 = icmp eq i32 %19, 0, !dbg !4155
  br i1 %20, label %21, label %18, !dbg !4155, !llvm.loop !4157

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !4159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4160
  ret i32 %22, !dbg !4161
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !4162 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4166, metadata !DIExpression()), !dbg !4167
  br label %1, !dbg !4168

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4166, metadata !DIExpression()), !dbg !4167
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !4170
  %4 = load i8, i8* %3, align 4, !dbg !4170, !range !2988
  %5 = icmp eq i8 %4, 1, !dbg !4174
  br i1 %5, label %6, label %9, !dbg !4175

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %7, metadata !4166, metadata !DIExpression()), !dbg !4167
  %8 = icmp eq i32 %7, 32, !dbg !4177
  br i1 %8, label %9, label %1, !dbg !4168, !llvm.loop !4178

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !4167
  ret i32 %10, !dbg !4180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4181 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4185
  %4 = bitcast i32* %2 to i8*, !dbg !4185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4185
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4186, !range !2988
  %6 = icmp eq i8 %5, 0, !dbg !4186
  br i1 %6, label %7, label %11, !dbg !4188

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4183, metadata !DIExpression(DW_OP_deref)), !dbg !4189
  call void @llvm.dbg.value(metadata i32* %2, metadata !4184, metadata !DIExpression(DW_OP_deref)), !dbg !4189
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !4190
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4191
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4192
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4193
  %9 = load i32, i32* %1, align 4, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %9, metadata !4183, metadata !DIExpression()), !dbg !4189
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !4195
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4196
  br label %11, !dbg !4197

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4197
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4197
  ret void, !dbg !4197
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !4198 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4202, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32* %1, metadata !4203, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 -1, metadata !4205, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 0, metadata !4204, metadata !DIExpression()), !dbg !4207
  br label %3, !dbg !4208

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4204, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 %5, metadata !4205, metadata !DIExpression()), !dbg !4207
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4210
  %7 = load i8, i8* %6, align 1, !dbg !4210, !range !2988
  %8 = icmp eq i8 %7, 0, !dbg !4210
  br i1 %8, label %13, label %9, !dbg !4214

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %10, metadata !4206, metadata !DIExpression()), !dbg !4207
  %11 = icmp ult i32 %10, %5, !dbg !4217
  br i1 %11, label %12, label %13, !dbg !4219

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4205, metadata !DIExpression()), !dbg !4207
  store i32 %4, i32* %1, align 4, !dbg !4220
  br label %13, !dbg !4222

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4207
  call void @llvm.dbg.value(metadata i32 %14, metadata !4205, metadata !DIExpression()), !dbg !4207
  %15 = add nuw nsw i32 %4, 1, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %15, metadata !4204, metadata !DIExpression()), !dbg !4207
  %16 = icmp eq i32 %15, 32, !dbg !4224
  br i1 %16, label %17, label %3, !dbg !4208, !llvm.loop !4225

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4227
  ret void, !dbg !4228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4231, metadata !DIExpression()), !dbg !4235
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4236
  %3 = load i32, i32* %2, align 4, !dbg !4236
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4236
  %5 = sub i32 %3, %4, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %5, metadata !4232, metadata !DIExpression()), !dbg !4235
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4237
  %7 = sub i32 %6, %4, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %7, metadata !4233, metadata !DIExpression()), !dbg !4235
  %8 = icmp ugt i32 %5, %7, !dbg !4238
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %10, metadata !4234, metadata !DIExpression()), !dbg !4235
  ret i32 %10, !dbg !4241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4242 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4244, metadata !DIExpression()), !dbg !4248
  %4 = bitcast i32* %2 to i8*, !dbg !4249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4246, metadata !DIExpression()), !dbg !4250
  %5 = bitcast i32* %3 to i8*, !dbg !4251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4247, metadata !DIExpression()), !dbg !4252
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4253
  %7 = icmp eq i32 %6, 0, !dbg !4255
  br i1 %7, label %38, label %8, !dbg !4256

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4257
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4259
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4260
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4261
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4262
  store volatile i32 %11, i32* %2, align 4, !dbg !4263
  %12 = load volatile i32, i32* %2, align 4, !dbg !4264
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4265
  %14 = add i32 %13, %12, !dbg !4265
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4265
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4266
  call void @llvm.dbg.value(metadata i32 0, metadata !4245, metadata !DIExpression()), !dbg !4248
  br label %15, !dbg !4267

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4245, metadata !DIExpression()), !dbg !4248
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4269
  %18 = load i8, i8* %17, align 1, !dbg !4269, !range !2988
  %19 = icmp eq i8 %18, 0, !dbg !4269
  br i1 %19, label %31, label %20, !dbg !4273

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4274
  store volatile i32 %21, i32* %3, align 4, !dbg !4276
  %22 = load volatile i32, i32* %3, align 4, !dbg !4277
  %23 = icmp eq i32 %22, 0, !dbg !4279
  br i1 %23, label %24, label %31, !dbg !4280

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4281
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4283
  %26 = add i32 %25, -1, !dbg !4283
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4283
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4284
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4284
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4285
  %30 = load i8*, i8** %29, align 4, !dbg !4285
  tail call void %28(i8* noundef %30) #20, !dbg !4286
  br label %31, !dbg !4287

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4288
  call void @llvm.dbg.value(metadata i32 %32, metadata !4245, metadata !DIExpression()), !dbg !4248
  %33 = icmp eq i32 %32, 32, !dbg !4289
  br i1 %33, label %34, label %15, !dbg !4267, !llvm.loop !4290

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4292
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4293
  %36 = icmp eq i32 %35, 0, !dbg !4295
  br i1 %36, label %38, label %37, !dbg !4296

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4297
  br label %38, !dbg !4299

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4300
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4300
  ret void, !dbg !4300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_reset(i32 noundef %0) local_unnamed_addr #2 !dbg !4301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4305, metadata !DIExpression()), !dbg !4306
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4307
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4307
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 5, !dbg !4308
  store volatile i32 0, i32* %4, align 4, !dbg !4309
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4310
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 6, !dbg !4311
  store volatile i32 0, i32* %6, align 4, !dbg !4312
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4313
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 7, !dbg !4314
  store volatile i32 0, i32* %8, align 4, !dbg !4315
  %9 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4316
  %10 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !4317
  store volatile i32 0, i32* %10, align 4, !dbg !4318
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4319
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 1, !dbg !4320
  store volatile i32 0, i32* %12, align 4, !dbg !4321
  %13 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4322
  %14 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %13, i32 0, i32 8, !dbg !4323
  store volatile i32 32768, i32* %14, align 4, !dbg !4324
  ret void, !dbg !4325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gdma_get_global_status(i32 noundef %0) local_unnamed_addr #11 !dbg !4326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4328, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i32 0, metadata !4329, metadata !DIExpression()), !dbg !4330
  %2 = getelementptr inbounds [1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 %0, !dbg !4331
  %3 = load %struct.anon*, %struct.anon** %2, align 4, !dbg !4331
  %4 = getelementptr inbounds %struct.anon, %struct.anon* %3, i32 0, i32 0, !dbg !4332
  %5 = load volatile i32, i32* %4, align 4, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %5, metadata !4329, metadata !DIExpression()), !dbg !4330
  ret i32 %5, !dbg !4333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @gdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !4334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4338, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4339, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.value(metadata i8* %2, metadata !4340, metadata !DIExpression()), !dbg !4341
  %4 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 0, !dbg !4342
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !4342
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !4344
  br i1 %6, label %7, label %9, !dbg !4345

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !4346
  %8 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 1, !dbg !4348
  store i8* %2, i8** %8, align 4, !dbg !4349
  br label %9, !dbg !4350

9:                                                ; preds = %7, %3
  ret void, !dbg !4351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !4352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4354, metadata !DIExpression()), !dbg !4355
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4356
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4356
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !4357
  store volatile i32 0, i32* %4, align 4, !dbg !4358
  ret void, !dbg !4359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_start(i32 noundef %0) local_unnamed_addr #2 !dbg !4360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4362, metadata !DIExpression()), !dbg !4363
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4364
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4364
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !4365
  store volatile i32 32768, i32* %4, align 4, !dbg !4366
  ret void, !dbg !4367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_control(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4372, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %1, metadata !4373, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %2, metadata !4374, metadata !DIExpression()), !dbg !4375
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4376
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4376
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 5, !dbg !4377
  store volatile i32 %1, i32* %6, align 4, !dbg !4378
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4379
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 4, !dbg !4380
  store volatile i32 %2, i32* %8, align 4, !dbg !4381
  ret void, !dbg !4382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_address(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4385, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %1, metadata !4386, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %2, metadata !4387, metadata !DIExpression()), !dbg !4388
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4389
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4389
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 0, !dbg !4390
  store volatile i32 %2, i32* %6, align 4, !dbg !4391
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4392
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 1, !dbg !4393
  store volatile i32 %1, i32* %8, align 4, !dbg !4394
  ret void, !dbg !4395
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_enable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !4396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4401, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i32 255, metadata !4404, metadata !DIExpression()), !dbg !4405
  %2 = icmp eq i32 %0, 0, !dbg !4406
  br i1 %2, label %3, label %9, !dbg !4408

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_enable(i32 noundef 33) #20, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %4, metadata !4402, metadata !DIExpression()), !dbg !4405
  %5 = icmp eq i32 %4, 0, !dbg !4411
  call void @llvm.dbg.value(metadata i32 undef, metadata !4404, metadata !DIExpression()), !dbg !4405
  %6 = tail call i32 @hal_clock_enable(i32 noundef 136) #20, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %6, metadata !4402, metadata !DIExpression()), !dbg !4405
  %7 = icmp eq i32 %6, 0, !dbg !4414
  %8 = select i1 %7, i1 true, i1 %5, !dbg !4416
  br label %12, !dbg !4416

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_enable(i32 noundef 44) #20, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %10, metadata !4402, metadata !DIExpression()), !dbg !4405
  %11 = icmp eq i32 %10, 0, !dbg !4419
  br label %12, !dbg !4421

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %14, metadata !4404, metadata !DIExpression()), !dbg !4405
  ret i32 %14, !dbg !4423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_disable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !4424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4426, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i32 255, metadata !4427, metadata !DIExpression()), !dbg !4429
  %2 = icmp eq i32 %0, 0, !dbg !4430
  br i1 %2, label %3, label %9, !dbg !4432

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_disable(i32 noundef 33) #20, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %4, metadata !4428, metadata !DIExpression()), !dbg !4429
  %5 = icmp eq i32 %4, 0, !dbg !4435
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4429
  %6 = tail call i32 @hal_clock_disable(i32 noundef 136) #20, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %6, metadata !4428, metadata !DIExpression()), !dbg !4429
  %7 = icmp eq i32 %6, 0, !dbg !4438
  %8 = select i1 %7, i1 true, i1 %5, !dbg !4440
  br label %12, !dbg !4440

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_disable(i32 noundef 44) #20, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %10, metadata !4428, metadata !DIExpression()), !dbg !4429
  %11 = icmp eq i32 %10, 0, !dbg !4443
  br label %12, !dbg !4445

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !4446
  call void @llvm.dbg.value(metadata i32 %14, metadata !4427, metadata !DIExpression()), !dbg !4429
  ret i32 %14, !dbg !4447
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4453, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.value(metadata i32 0, metadata !4454, metadata !DIExpression()), !dbg !4458
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4459
  call void @llvm.dbg.value(metadata i32 %2, metadata !4454, metadata !DIExpression()), !dbg !4458
  %3 = icmp eq i32 %2, 255, !dbg !4460
  br i1 %3, label %32, label %4, !dbg !4462

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %5, metadata !4456, metadata !DIExpression()), !dbg !4464
  %6 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !4465
  %7 = load volatile i8, i8* %6, align 1, !dbg !4465
  %8 = icmp eq i8 %7, 1, !dbg !4465
  br i1 %8, label %9, label %10, !dbg !4463

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i32 0, i32 0), i32 noundef %0) #20, !dbg !4467
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4467
  unreachable, !dbg !4467

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !4469
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !4463
  %11 = tail call i32 @dma_enable_clock(i32 noundef 0) #21, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %11, metadata !4455, metadata !DIExpression()), !dbg !4458
  %12 = icmp eq i32 %11, 255, !dbg !4472
  br i1 %12, label %32, label %13, !dbg !4474

13:                                               ; preds = %10
  %14 = tail call i32 @dma_enable_clock(i32 noundef 1) #21, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %14, metadata !4455, metadata !DIExpression()), !dbg !4458
  %15 = icmp eq i32 %14, 255, !dbg !4476
  br i1 %15, label %32, label %16, !dbg !4478

16:                                               ; preds = %13
  %17 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !4479
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4479
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4480
  store volatile i32 0, i32* %19, align 4, !dbg !4481
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4482
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 2, !dbg !4483
  store volatile i32 0, i32* %21, align 4, !dbg !4484
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4485
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !4486
  store volatile i32 0, i32* %23, align 4, !dbg !4487
  %24 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4488
  %25 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %24, i32 0, i32 5, !dbg !4489
  store volatile i32 0, i32* %25, align 4, !dbg !4490
  %26 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4491
  %27 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %26, i32 0, i32 9, !dbg !4492
  store volatile i32 0, i32* %27, align 4, !dbg !4493
  %28 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4494
  %29 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !4495
  %30 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 40, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4496
  %31 = tail call i32 @hal_nvic_enable_irq(i32 noundef 40) #20, !dbg !4497
  br label %32, !dbg !4498

32:                                               ; preds = %13, %10, %1, %16
  %33 = phi i32 [ 0, %16 ], [ -2, %1 ], [ -3, %10 ], [ -3, %13 ], !dbg !4458
  ret i32 %33, !dbg !4499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @pdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !4500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4504, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.value(metadata i32 0, metadata !4505, metadata !DIExpression()), !dbg !4506
  %2 = add i32 %0, -1, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %2, metadata !4505, metadata !DIExpression()), !dbg !4506
  %3 = icmp ugt i32 %2, 5, !dbg !4508
  %4 = select i1 %3, i32 255, i32 %2, !dbg !4510
  ret i32 %4, !dbg !4511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pd_domain_dma_interrupt_hander(i32 %0) #0 !dbg !525 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !531, metadata !DIExpression()), !dbg !4512
  %3 = bitcast i32* %2 to i8*, !dbg !4513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4513
  call void @llvm.dbg.declare(metadata i32* %2, metadata !532, metadata !DIExpression()), !dbg !4514
  store volatile i32 0, i32* %2, align 4, !dbg !4514
  %4 = load %struct.anon*, %struct.anon** getelementptr inbounds ([1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 0), align 4, !dbg !4515
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0, !dbg !4516
  %6 = load volatile i32, i32* %5, align 4, !dbg !4516
  store volatile i32 %6, i32* %2, align 4, !dbg !4517
  %7 = load volatile i32, i32* %2, align 4, !dbg !4518
  %8 = and i32 %7, 2, !dbg !4520
  %9 = icmp eq i32 %8, 0, !dbg !4520
  br i1 %9, label %18, label %10, !dbg !4521

10:                                               ; preds = %1
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** getelementptr inbounds ([1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 0), align 4, !dbg !4522
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 8, !dbg !4524
  store volatile i32 32768, i32* %12, align 4, !dbg !4525
  %13 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 0), align 4, !dbg !4526
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !533, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i8* undef, metadata !546, metadata !DIExpression()), !dbg !4512
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4527
  br i1 %14, label %17, label %15, !dbg !4529

15:                                               ; preds = %10
  %16 = load i8*, i8** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 1), align 4, !dbg !4530
  call void @llvm.dbg.value(metadata i8* %16, metadata !546, metadata !DIExpression()), !dbg !4512
  tail call void %13(i32 noundef 0, i8* noundef %16) #20, !dbg !4531
  br label %18, !dbg !4533

17:                                               ; preds = %10
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1138, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4534
  unreachable, !dbg !4534

18:                                               ; preds = %15, %1
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4536
  br label %20, !dbg !4538

19:                                               ; preds = %50
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4539
  br label %54, !dbg !4541

20:                                               ; preds = %18, %50
  %21 = phi i32 [ 0, %18 ], [ %52, %50 ]
  %22 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %21, !dbg !4542
  %23 = load %struct.anon*, %struct.anon** %22, align 4, !dbg !4542
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %23, i32 0, i32 0, !dbg !4545
  %25 = load volatile i32, i32* %24, align 4, !dbg !4545
  store volatile i32 %25, i32* %2, align 4, !dbg !4546
  %26 = load volatile i32, i32* %2, align 4, !dbg !4547
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %21, !dbg !4549
  %28 = load i8, i8* %27, align 1, !dbg !4549
  %29 = zext i8 %28 to i32, !dbg !4549
  %30 = shl i32 2, %29, !dbg !4550
  %31 = and i32 %30, %26, !dbg !4551
  %32 = icmp eq i32 %31, 0, !dbg !4551
  br i1 %32, label %50, label %33, !dbg !4552

33:                                               ; preds = %20
  %34 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %21, !dbg !4553
  %35 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %34, align 4, !dbg !4553
  %36 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %35, i32 0, i32 6, !dbg !4556
  store volatile i32 32768, i32* %36, align 4, !dbg !4557
  %37 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 0, !dbg !4558
  %38 = load void (i32, i8*)*, void (i32, i8*)** %37, align 4, !dbg !4558
  call void @llvm.dbg.value(metadata void (i32, i8*)* %38, metadata !534, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i8* undef, metadata !546, metadata !DIExpression()), !dbg !4512
  %39 = icmp eq void (i32, i8*)* %38, null, !dbg !4559
  br i1 %39, label %49, label %40, !dbg !4561

40:                                               ; preds = %33
  %41 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 1, !dbg !4562
  %42 = load i8*, i8** %41, align 4, !dbg !4562
  call void @llvm.dbg.value(metadata i8* %42, metadata !546, metadata !DIExpression()), !dbg !4512
  tail call void %38(i32 noundef 0, i8* noundef %42) #20, !dbg !4563
  %43 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4565
  %44 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %43, !dbg !4566
  %45 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %44, align 4, !dbg !4566
  %46 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %45, i32 0, i32 4, !dbg !4567
  %47 = load volatile i32, i32* %46, align 4, !dbg !4568
  %48 = and i32 %47, -32769, !dbg !4568
  store volatile i32 %48, i32* %46, align 4, !dbg !4568
  br label %50, !dbg !4569

49:                                               ; preds = %33
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1161, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4570
  unreachable, !dbg !4570

50:                                               ; preds = %20, %40
  %51 = phi i32 [ %21, %20 ], [ %43, %40 ], !dbg !4572
  %52 = add i32 %51, 1, !dbg !4572
  store i32 %52, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4536
  %53 = icmp ult i32 %52, 6, !dbg !4573
  br i1 %53, label %20, label %19, !dbg !4538, !llvm.loop !4574

54:                                               ; preds = %19, %79
  %55 = phi i32 [ 0, %19 ], [ %81, %79 ]
  %56 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %55, !dbg !4576
  %57 = load %struct.anon*, %struct.anon** %56, align 4, !dbg !4576
  %58 = getelementptr inbounds %struct.anon, %struct.anon* %57, i32 0, i32 0, !dbg !4579
  %59 = load volatile i32, i32* %58, align 4, !dbg !4579
  store volatile i32 %59, i32* %2, align 4, !dbg !4580
  %60 = load volatile i32, i32* %2, align 4, !dbg !4581
  %61 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %55, !dbg !4583
  %62 = load i8, i8* %61, align 1, !dbg !4583
  %63 = zext i8 %62 to i32, !dbg !4583
  %64 = shl i32 2, %63, !dbg !4584
  %65 = and i32 %64, %60, !dbg !4585
  %66 = icmp eq i32 %65, 0, !dbg !4585
  br i1 %66, label %79, label %67, !dbg !4586

67:                                               ; preds = %54
  %68 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %55, !dbg !4587
  %69 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %68, align 4, !dbg !4587
  %70 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %69, i32 0, i32 4, !dbg !4590
  store volatile i32 32768, i32* %70, align 4, !dbg !4591
  %71 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 0, !dbg !4592
  %72 = load void (i32, i8*)*, void (i32, i8*)** %71, align 4, !dbg !4592
  call void @llvm.dbg.value(metadata void (i32, i8*)* %72, metadata !540, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i8* undef, metadata !546, metadata !DIExpression()), !dbg !4512
  %73 = icmp eq void (i32, i8*)* %72, null, !dbg !4593
  br i1 %73, label %78, label %74, !dbg !4595

74:                                               ; preds = %67
  %75 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 1, !dbg !4596
  %76 = load i8*, i8** %75, align 4, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %76, metadata !546, metadata !DIExpression()), !dbg !4512
  tail call void %72(i32 noundef 0, i8* noundef %76) #20, !dbg !4597
  %77 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4599
  br label %79, !dbg !4600

78:                                               ; preds = %67
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1185, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4601
  unreachable, !dbg !4601

79:                                               ; preds = %54, %74
  %80 = phi i32 [ %55, %54 ], [ %77, %74 ], !dbg !4599
  %81 = add i32 %80, 1, !dbg !4599
  store i32 %81, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4539
  %82 = icmp ult i32 %81, 8, !dbg !4603
  br i1 %82, label %54, label %83, !dbg !4541, !llvm.loop !4604

83:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4606
  ret void, !dbg !4606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4607 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4609, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.value(metadata i32 0, metadata !4610, metadata !DIExpression()), !dbg !4616
  %3 = bitcast i32* %2 to i8*, !dbg !4617
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4617
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4613, metadata !DIExpression()), !dbg !4618
  store volatile i32 0, i32* %2, align 4, !dbg !4618
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %4, metadata !4610, metadata !DIExpression()), !dbg !4616
  %5 = icmp eq i32 %4, 255, !dbg !4620
  br i1 %5, label %39, label %6, !dbg !4622

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %7, metadata !4612, metadata !DIExpression()), !dbg !4616
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %4, !dbg !4624
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4624
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4625
  %11 = load volatile i32, i32* %10, align 4, !dbg !4625
  store volatile i32 %11, i32* %2, align 4, !dbg !4626
  %12 = load volatile i32, i32* %2, align 4, !dbg !4627
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %4, !dbg !4629
  %14 = load i8, i8* %13, align 1, !dbg !4629
  %15 = zext i8 %14 to i32, !dbg !4629
  %16 = shl i32 2, %15, !dbg !4630
  %17 = and i32 %16, %12, !dbg !4631
  %18 = icmp eq i32 %17, 0, !dbg !4631
  br i1 %18, label %20, label %19, !dbg !4632

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 341, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4633
  unreachable, !dbg !4633

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !4635
  %22 = shl nuw i32 1, %15, !dbg !4637
  %23 = and i32 %21, %22, !dbg !4638
  %24 = icmp eq i32 %23, 0, !dbg !4638
  br i1 %24, label %26, label %25, !dbg !4639

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 349, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4640
  unreachable, !dbg !4640

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4642
  %27 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %27, metadata !4614, metadata !DIExpression()), !dbg !4644
  %28 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !4645
  %29 = load volatile i8, i8* %28, align 1, !dbg !4645
  %30 = icmp eq i8 %29, 0, !dbg !4645
  br i1 %30, label %31, label %32, !dbg !4643

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !4647
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4647
  unreachable, !dbg !4647

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !4649
  tail call void @restore_interrupt_mask(i32 noundef %27) #20, !dbg !4643
  %33 = tail call i32 @dma_disable_clock(i32 noundef 0) #21, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %33, metadata !4611, metadata !DIExpression()), !dbg !4616
  %34 = icmp eq i32 %33, 255, !dbg !4652
  br i1 %34, label %39, label %35, !dbg !4654

35:                                               ; preds = %32
  %36 = tail call i32 @dma_disable_clock(i32 noundef 1) #21, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %36, metadata !4611, metadata !DIExpression()), !dbg !4616
  %37 = icmp eq i32 %36, 255, !dbg !4656
  %38 = select i1 %37, i32 -3, i32 0, !dbg !4616
  br label %39, !dbg !4616

39:                                               ; preds = %35, %32, %1
  %40 = phi i32 [ -2, %1 ], [ -3, %32 ], [ %38, %35 ], !dbg !4616
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4658
  ret i32 %40, !dbg !4658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_set_ring_buffer(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4663, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %1, metadata !4664, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %2, metadata !4665, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 0, metadata !4666, metadata !DIExpression()), !dbg !4667
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %4, metadata !4666, metadata !DIExpression()), !dbg !4667
  %5 = icmp eq i32 %4, 255, !dbg !4669
  br i1 %5, label %14, label %6, !dbg !4671

6:                                                ; preds = %3
  %7 = icmp ugt i32 %1, 65535, !dbg !4672
  br i1 %7, label %14, label %8, !dbg !4674

8:                                                ; preds = %6
  %9 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %4, !dbg !4675
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !4675
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 0, !dbg !4676
  store volatile i32 %1, i32* %11, align 4, !dbg !4677
  %12 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !4678
  %13 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !4679
  store volatile i32 %2, i32* %13, align 4, !dbg !4680
  br label %14, !dbg !4681

14:                                               ; preds = %6, %3, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %3 ], [ -1, %6 ], !dbg !4667
  ret i32 %15, !dbg !4682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_configure(i32 noundef %0, %struct.pdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4683 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4697, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata %struct.pdma_config_t* %1, metadata !4698, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata i32 0, metadata !4699, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata i32 0, metadata !4701, metadata !DIExpression()), !dbg !4703
  %4 = bitcast i32* %3 to i8*, !dbg !4704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4704
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4702, metadata !DIExpression()), !dbg !4705
  store volatile i32 0, i32* %3, align 4, !dbg !4705
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %5, metadata !4699, metadata !DIExpression()), !dbg !4703
  %6 = icmp eq i32 %5, 255, !dbg !4707
  br i1 %6, label %64, label %7, !dbg !4709

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 0, !dbg !4710
  %9 = load i8, i8* %8, align 4, !dbg !4710, !range !2988
  %10 = icmp eq i8 %9, 0, !dbg !4710
  %11 = select i1 %10, i32 0, i32 512, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %11, metadata !4701, metadata !DIExpression()), !dbg !4703
  %12 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %12, metadata !4700, metadata !DIExpression()), !dbg !4703
  %13 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !4714
  %14 = load %struct.anon*, %struct.anon** %13, align 4, !dbg !4714
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %14, i32 0, i32 0, !dbg !4715
  %16 = load volatile i32, i32* %15, align 4, !dbg !4715
  store volatile i32 %16, i32* %3, align 4, !dbg !4716
  %17 = load volatile i32, i32* %3, align 4, !dbg !4717
  %18 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !4719
  %19 = load i8, i8* %18, align 1, !dbg !4719
  %20 = zext i8 %19 to i32, !dbg !4719
  %21 = shl nuw i32 1, %20, !dbg !4720
  %22 = and i32 %21, %17, !dbg !4721
  %23 = icmp eq i32 %22, 0, !dbg !4721
  br i1 %23, label %25, label %24, !dbg !4722

24:                                               ; preds = %7
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !4723
  br label %64, !dbg !4725

25:                                               ; preds = %7
  %26 = load volatile i32, i32* %3, align 4, !dbg !4726
  %27 = shl i32 2, %20, !dbg !4728
  %28 = and i32 %26, %27, !dbg !4729
  %29 = icmp eq i32 %28, 0, !dbg !4729
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !4703
  br i1 %29, label %30, label %64, !dbg !4730

30:                                               ; preds = %25
  %31 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !4731
  %32 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4731
  %33 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %32, i32 0, i32 4, !dbg !4732
  %34 = load volatile i32, i32* %33, align 4, !dbg !4733
  %35 = and i32 %34, -32769, !dbg !4733
  store volatile i32 %35, i32* %33, align 4, !dbg !4733
  %36 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 3, !dbg !4734
  %37 = load i32, i32* %36, align 4, !dbg !4734
  %38 = icmp ult i32 %37, 4, !dbg !4735
  br i1 %38, label %39, label %64, !dbg !4735

39:                                               ; preds = %30
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.pdma_configure, i32 0, i32 %37, !dbg !4735
  %41 = load i32, i32* %40, align 4, !dbg !4735
  %42 = or i32 %11, %41, !dbg !4736
  call void @llvm.dbg.value(metadata i32 %42, metadata !4701, metadata !DIExpression()), !dbg !4703
  %43 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 1, !dbg !4738
  %44 = load i32, i32* %43, align 4, !dbg !4738
  switch i32 %44, label %64 [
    i32 0, label %49
    i32 1, label %45
    i32 2, label %47
  ], !dbg !4739

45:                                               ; preds = %39
  %46 = or i32 %42, 1, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %46, metadata !4701, metadata !DIExpression()), !dbg !4703
  br label %49, !dbg !4742

47:                                               ; preds = %39
  %48 = or i32 %42, 2, !dbg !4743
  call void @llvm.dbg.value(metadata i32 %48, metadata !4701, metadata !DIExpression()), !dbg !4703
  br label %49, !dbg !4744

49:                                               ; preds = %39, %47, %45
  %50 = phi i32 [ %48, %47 ], [ %46, %45 ], [ %42, %39 ], !dbg !4745
  call void @llvm.dbg.value(metadata i32 %50, metadata !4701, metadata !DIExpression()), !dbg !4703
  %51 = load i8, i8* %8, align 4, !dbg !4746, !range !2988
  %52 = icmp eq i8 %51, 0, !dbg !4746
  %53 = icmp eq i32 %44, 0, !dbg !4748
  %54 = or i32 %50, 32, !dbg !4748
  %55 = select i1 %53, i32 %54, i32 %50, !dbg !4748
  %56 = select i1 %52, i32 %50, i32 %55, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %56, metadata !4701, metadata !DIExpression()), !dbg !4703
  %57 = or i32 %56, 16, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %57, metadata !4701, metadata !DIExpression()), !dbg !4703
  %58 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4750
  %59 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %58, i32 0, i32 3, !dbg !4751
  store volatile i32 %57, i32* %59, align 4, !dbg !4752
  %60 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 2, !dbg !4753
  %61 = load i32, i32* %60, align 4, !dbg !4753
  %62 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4754
  %63 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %62, i32 0, i32 2, !dbg !4755
  store volatile i32 %61, i32* %63, align 4, !dbg !4756
  br label %64, !dbg !4757

64:                                               ; preds = %30, %25, %39, %2, %49, %24
  %65 = phi i32 [ -3, %24 ], [ 0, %49 ], [ -2, %2 ], [ -3, %30 ], [ -3, %39 ], [ -3, %25 ], !dbg !4703
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4758
  ret i32 %65, !dbg !4758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_polling(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4759 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4763, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.value(metadata i32 %1, metadata !4764, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.value(metadata i32 0, metadata !4765, metadata !DIExpression()), !dbg !4768
  %4 = bitcast i32* %3 to i8*, !dbg !4769
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4769
  call void @llvm.dbg.value(metadata i32 0, metadata !4766, metadata !DIExpression()), !dbg !4768
  store i32 0, i32* %3, align 4, !dbg !4770
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4771
  call void @llvm.dbg.value(metadata i32 %5, metadata !4765, metadata !DIExpression()), !dbg !4768
  %6 = icmp eq i32 %5, 255, !dbg !4772
  br i1 %6, label %33, label %7, !dbg !4774

7:                                                ; preds = %2
  %8 = and i32 %1, 3, !dbg !4775
  %9 = icmp eq i32 %8, 0, !dbg !4777
  br i1 %9, label %11, label %10, !dbg !4778

10:                                               ; preds = %7
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 527, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4779
  unreachable, !dbg !4779

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4781
  br i1 %12, label %13, label %14, !dbg !4783

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 533, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4784
  unreachable, !dbg !4784

14:                                               ; preds = %11
  %15 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !4786
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4786
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 9, !dbg !4787
  store volatile i32 %1, i32* %17, align 4, !dbg !4788
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4789
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4790
  %20 = load volatile i32, i32* %19, align 4, !dbg !4791
  %21 = and i32 %20, -32769, !dbg !4791
  store volatile i32 %21, i32* %19, align 4, !dbg !4791
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4792
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !4793
  store volatile i32 32768, i32* %23, align 4, !dbg !4794
  call void @llvm.dbg.value(metadata i32* %3, metadata !4766, metadata !DIExpression(DW_OP_deref)), !dbg !4768
  %24 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #21, !dbg !4795
  %25 = load i32, i32* %3, align 4, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %25, metadata !4766, metadata !DIExpression()), !dbg !4768
  %26 = icmp eq i32 %25, 0, !dbg !4797
  br i1 %26, label %31, label %27, !dbg !4797

27:                                               ; preds = %14, %27
  call void @llvm.dbg.value(metadata i32* %3, metadata !4766, metadata !DIExpression(DW_OP_deref)), !dbg !4768
  %28 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #21, !dbg !4798
  %29 = load i32, i32* %3, align 4, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %29, metadata !4766, metadata !DIExpression()), !dbg !4768
  %30 = icmp eq i32 %29, 0, !dbg !4797
  br i1 %30, label %31, label %27, !dbg !4797, !llvm.loop !4800

31:                                               ; preds = %27, %14
  %32 = tail call i32 @pdma_stop(i32 noundef %0) #21, !dbg !4802
  br label %33, !dbg !4803

33:                                               ; preds = %2, %31
  %34 = phi i32 [ 0, %31 ], [ -2, %2 ], !dbg !4768
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4804
  ret i32 %34, !dbg !4804
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @pdma_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !4805 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4810, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata i32* %1, metadata !4811, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata i32 0, metadata !4812, metadata !DIExpression()), !dbg !4814
  %4 = bitcast i32* %3 to i8*, !dbg !4815
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4813, metadata !DIExpression()), !dbg !4816
  store volatile i32 0, i32* %3, align 4, !dbg !4816
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %5, metadata !4812, metadata !DIExpression()), !dbg !4814
  %6 = icmp eq i32 %5, 255, !dbg !4818
  br i1 %6, label %18, label %7, !dbg !4820

7:                                                ; preds = %2
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !4821
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4821
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4822
  %11 = load volatile i32, i32* %10, align 4, !dbg !4822
  store volatile i32 %11, i32* %3, align 4, !dbg !4823
  %12 = load volatile i32, i32* %3, align 4, !dbg !4824
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !4826
  %14 = load i8, i8* %13, align 1, !dbg !4826
  %15 = zext i8 %14 to i32, !dbg !4826
  %16 = lshr i32 %12, %15
  %17 = and i32 %16, 1
  store i32 %17, i32* %1, align 4, !dbg !4827
  br label %18, !dbg !4828

18:                                               ; preds = %2, %7
  %19 = phi i32 [ 0, %7 ], [ -2, %2 ], !dbg !4814
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4829
  ret i32 %19, !dbg !4829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !4830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4832, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata i32 0, metadata !4833, metadata !DIExpression()), !dbg !4834
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %2, metadata !4833, metadata !DIExpression()), !dbg !4834
  %3 = icmp eq i32 %2, 255, !dbg !4836
  br i1 %3, label %12, label %4, !dbg !4838

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !4839
  %6 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !4839
  %7 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %6, i32 0, i32 4, !dbg !4840
  %8 = load volatile i32, i32* %7, align 4, !dbg !4841
  %9 = and i32 %8, -32769, !dbg !4841
  store volatile i32 %9, i32* %7, align 4, !dbg !4841
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !4842
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 6, !dbg !4843
  store volatile i32 32768, i32* %11, align 4, !dbg !4844
  br label %12, !dbg !4845

12:                                               ; preds = %1, %4
  %13 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !4834
  ret i32 %13, !dbg !4846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4849, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i32 %1, metadata !4850, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i32 0, metadata !4851, metadata !DIExpression()), !dbg !4852
  %3 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %3, metadata !4851, metadata !DIExpression()), !dbg !4852
  %4 = icmp eq i32 %3, 255, !dbg !4854
  br i1 %4, label %22, label %5, !dbg !4856

5:                                                ; preds = %2
  %6 = and i32 %1, 3, !dbg !4857
  %7 = icmp eq i32 %6, 0, !dbg !4859
  br i1 %7, label %9, label %8, !dbg !4860

8:                                                ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 567, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4861
  unreachable, !dbg !4861

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4863
  br i1 %10, label %11, label %12, !dbg !4865

11:                                               ; preds = %9
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 573, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4866
  unreachable, !dbg !4866

12:                                               ; preds = %9
  %13 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %3, !dbg !4868
  %14 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4868
  %15 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %14, i32 0, i32 9, !dbg !4869
  store volatile i32 %1, i32* %15, align 4, !dbg !4870
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4871
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 3, !dbg !4872
  %18 = load volatile i32, i32* %17, align 4, !dbg !4873
  %19 = or i32 %18, 32768, !dbg !4873
  store volatile i32 %19, i32* %17, align 4, !dbg !4873
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4874
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 4, !dbg !4875
  store volatile i32 32768, i32* %21, align 4, !dbg !4876
  br label %22, !dbg !4877

22:                                               ; preds = %2, %12
  %23 = phi i32 [ 0, %12 ], [ -2, %2 ], !dbg !4852
  ret i32 %23, !dbg !4878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @pdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !4879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4883, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4884, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i8* %2, metadata !4885, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i32 0, metadata !4886, metadata !DIExpression()), !dbg !4887
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %4, metadata !4886, metadata !DIExpression()), !dbg !4887
  %5 = icmp eq i32 %4, 255, !dbg !4889
  br i1 %5, label %12, label %6, !dbg !4891

6:                                                ; preds = %3
  %7 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 0, !dbg !4892
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4892
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4894
  br i1 %9, label %10, label %12, !dbg !4895

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !4896
  %11 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 1, !dbg !4898
  store i8* %2, i8** %11, align 4, !dbg !4899
  br label %12, !dbg !4900

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !4887
  ret i32 %13, !dbg !4901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4908, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i32 0, metadata !4909, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i32 0, metadata !4911, metadata !DIExpression()), !dbg !4914
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %2, metadata !4909, metadata !DIExpression()), !dbg !4914
  %3 = icmp eq i32 %2, 255, !dbg !4916
  br i1 %3, label %47, label %4, !dbg !4918

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %5, metadata !4912, metadata !DIExpression()), !dbg !4920
  %6 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !4921
  %7 = load volatile i8, i8* %6, align 1, !dbg !4921
  %8 = icmp eq i8 %7, 1, !dbg !4921
  br i1 %8, label %9, label %10, !dbg !4919

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !4923
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4923
  unreachable, !dbg !4923

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !4925
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !4919
  %11 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !4927
  %12 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4927
  %13 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !4928
  store volatile i32 0, i32* %13, align 4, !dbg !4929
  %14 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4930
  %15 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %14, i32 0, i32 0, !dbg !4931
  store volatile i32 0, i32* %15, align 4, !dbg !4932
  %16 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4933
  %17 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %16, i32 0, i32 2, !dbg !4934
  store volatile i32 0, i32* %17, align 4, !dbg !4935
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4936
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4937
  store volatile i32 0, i32* %19, align 4, !dbg !4938
  %20 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4939
  %21 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %20, i32 0, i32 6, !dbg !4940
  store volatile i32 0, i32* %21, align 4, !dbg !4941
  %22 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4942
  %23 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %22, i32 0, i32 11, !dbg !4943
  store volatile i32 0, i32* %23, align 4, !dbg !4944
  %24 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4945
  %25 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %24, i32 0, i32 12, !dbg !4946
  store volatile i32 0, i32* %25, align 4, !dbg !4947
  %26 = icmp ult i32 %2, 8, !dbg !4948
  br i1 %26, label %27, label %30, !dbg !4950

27:                                               ; preds = %10
  %28 = tail call i32 @dma_enable_clock(i32 noundef 0) #21, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %28, metadata !4910, metadata !DIExpression()), !dbg !4914
  %29 = icmp eq i32 %28, 255, !dbg !4953
  br i1 %29, label %47, label %33, !dbg !4955

30:                                               ; preds = %10
  %31 = tail call i32 @dma_enable_clock(i32 noundef 1) #21, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %31, metadata !4910, metadata !DIExpression()), !dbg !4914
  %32 = icmp eq i32 %31, 255, !dbg !4958
  br i1 %32, label %47, label %33, !dbg !4960

33:                                               ; preds = %30, %27
  %34 = add i32 %0, -8, !dbg !4961
  %35 = icmp ult i32 %34, 10, !dbg !4961
  br i1 %35, label %36, label %47, !dbg !4961

36:                                               ; preds = %33
  %37 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T**], [10 x %struct.VDMA_REGISTER_T**]* @switch.table.vdma_init, i32 0, i32 %34, !dbg !4961
  %38 = load %struct.VDMA_REGISTER_T**, %struct.VDMA_REGISTER_T*** %37, align 4, !dbg !4961
  %39 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table.vdma_init.6, i32 0, i32 %34, !dbg !4961
  %40 = load i32, i32* %39, align 4, !dbg !4961
  %41 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %38, align 4, !dbg !4962
  %42 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %41, i32 0, i32 1, !dbg !4962
  store volatile i32 %40, i32* %42, align 4, !dbg !4962
  %43 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4964
  %44 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !4965
  %45 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 22, void (i32)* noundef nonnull @ao_domain_dma_interrupt_hander) #20, !dbg !4966
  %46 = tail call i32 @hal_nvic_enable_irq(i32 noundef 22) #20, !dbg !4967
  br label %47, !dbg !4968

47:                                               ; preds = %33, %30, %27, %1, %36
  %48 = phi i32 [ 0, %36 ], [ -2, %1 ], [ -3, %27 ], [ -3, %30 ], [ -3, %33 ], !dbg !4914
  ret i32 %48, !dbg !4969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @vdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !4970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4974, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i32 0, metadata !4975, metadata !DIExpression()), !dbg !4976
  %2 = add i32 %0, -8, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %2, metadata !4975, metadata !DIExpression()), !dbg !4976
  %3 = icmp ugt i32 %2, 9, !dbg !4978
  %4 = select i1 %3, i32 255, i32 %2, !dbg !4980
  ret i32 %4, !dbg !4981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ao_domain_dma_interrupt_hander(i32 %0) #0 !dbg !4982 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression()), !dbg !4989
  %3 = bitcast i32* %2 to i8*, !dbg !4990
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4990
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4985, metadata !DIExpression()), !dbg !4991
  store volatile i32 0, i32* %2, align 4, !dbg !4991
  call void @llvm.dbg.value(metadata i32 0, metadata !4988, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 8, metadata !4988, metadata !DIExpression()), !dbg !4989
  br label %4, !dbg !4992

4:                                                ; preds = %1, %28
  %5 = phi i32 [ 8, %1 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4988, metadata !DIExpression()), !dbg !4989
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %5, !dbg !4994
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !4994
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !4997
  %9 = load volatile i32, i32* %8, align 4, !dbg !4997
  store volatile i32 %9, i32* %2, align 4, !dbg !4998
  %10 = load volatile i32, i32* %2, align 4, !dbg !4999
  %11 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %5, !dbg !5001
  %12 = load i8, i8* %11, align 1, !dbg !5001
  %13 = zext i8 %12 to i32, !dbg !5001
  %14 = shl i32 2, %13, !dbg !5002
  %15 = and i32 %14, %10, !dbg !5003
  %16 = icmp eq i32 %15, 0, !dbg !5003
  br i1 %16, label %28, label %17, !dbg !5004

17:                                               ; preds = %4
  %18 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %5, !dbg !5005
  %19 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %18, align 4, !dbg !5005
  %20 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %19, i32 0, i32 4, !dbg !5008
  store volatile i32 32768, i32* %20, align 4, !dbg !5009
  %21 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 0, !dbg !5010
  %22 = load void (i32, i8*)*, void (i32, i8*)** %21, align 4, !dbg !5010
  call void @llvm.dbg.value(metadata void (i32, i8*)* %22, metadata !4986, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i8* undef, metadata !4987, metadata !DIExpression()), !dbg !4989
  %23 = icmp eq void (i32, i8*)* %22, null, !dbg !5011
  br i1 %23, label %27, label %24, !dbg !5013

24:                                               ; preds = %17
  %25 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 1, !dbg !5014
  %26 = load i8*, i8** %25, align 4, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %26, metadata !4987, metadata !DIExpression()), !dbg !4989
  tail call void %22(i32 noundef 0, i8* noundef %26) #20, !dbg !5015
  br label %28, !dbg !5017

27:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1234, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.ao_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5018
  unreachable, !dbg !5018

28:                                               ; preds = %4, %24
  %29 = add nuw nsw i32 %5, 1, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %29, metadata !4988, metadata !DIExpression()), !dbg !4989
  %30 = icmp eq i32 %29, 10, !dbg !5021
  br i1 %30, label %31, label %4, !dbg !4992, !llvm.loop !5022

31:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5024
  ret void, !dbg !5024
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5025 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5027, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i32 255, metadata !5028, metadata !DIExpression()), !dbg !5034
  %3 = bitcast i32* %2 to i8*, !dbg !5035
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5035
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5031, metadata !DIExpression()), !dbg !5036
  store volatile i32 0, i32* %2, align 4, !dbg !5036
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %4, metadata !5028, metadata !DIExpression()), !dbg !5034
  %5 = icmp eq i32 %4, 255, !dbg !5038
  br i1 %5, label %41, label %6, !dbg !5040

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %7, metadata !5030, metadata !DIExpression()), !dbg !5034
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !5042
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !5042
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !5043
  %11 = load volatile i32, i32* %10, align 4, !dbg !5043
  store volatile i32 %11, i32* %2, align 4, !dbg !5044
  %12 = load volatile i32, i32* %2, align 4, !dbg !5045
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !5047
  %14 = load i8, i8* %13, align 1, !dbg !5047
  %15 = zext i8 %14 to i32, !dbg !5047
  %16 = shl i32 2, %15, !dbg !5048
  %17 = and i32 %16, %12, !dbg !5049
  %18 = icmp eq i32 %17, 0, !dbg !5049
  br i1 %18, label %20, label %19, !dbg !5050

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 806, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5051
  unreachable, !dbg !5051

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !5053
  %22 = shl nuw i32 1, %15, !dbg !5055
  %23 = and i32 %21, %22, !dbg !5056
  %24 = icmp eq i32 %23, 0, !dbg !5056
  br i1 %24, label %26, label %25, !dbg !5057

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 812, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5058
  unreachable, !dbg !5058

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5060
  %27 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %27, metadata !5032, metadata !DIExpression()), !dbg !5062
  %28 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !5063
  %29 = load volatile i8, i8* %28, align 1, !dbg !5063
  %30 = icmp eq i8 %29, 0, !dbg !5063
  br i1 %30, label %31, label %32, !dbg !5061

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !5065
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5065
  unreachable, !dbg !5065

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !5067
  tail call void @restore_interrupt_mask(i32 noundef %27) #20, !dbg !5061
  %33 = icmp ult i32 %4, 8, !dbg !5069
  br i1 %33, label %34, label %37, !dbg !5071

34:                                               ; preds = %32
  %35 = tail call i32 @dma_disable_clock(i32 noundef 0) #21, !dbg !5072
  call void @llvm.dbg.value(metadata i32 %35, metadata !5029, metadata !DIExpression()), !dbg !5034
  %36 = icmp eq i32 %35, 255, !dbg !5074
  br i1 %36, label %41, label %40, !dbg !5076

37:                                               ; preds = %32
  %38 = tail call i32 @dma_disable_clock(i32 noundef 1) #21, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %38, metadata !5029, metadata !DIExpression()), !dbg !5034
  %39 = icmp eq i32 %38, 255, !dbg !5079
  br i1 %39, label %41, label %40, !dbg !5081

40:                                               ; preds = %37, %34
  br label %41, !dbg !5082

41:                                               ; preds = %37, %34, %1, %40
  %42 = phi i32 [ 0, %40 ], [ -2, %1 ], [ -3, %34 ], [ -3, %37 ], !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5083
  ret i32 %42, !dbg !5083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_configure(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5094, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5095, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i32 0, metadata !5096, metadata !DIExpression()), !dbg !5097
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5098
  call void @llvm.dbg.value(metadata i32 %3, metadata !5096, metadata !DIExpression()), !dbg !5097
  %4 = icmp eq i32 %3, 255, !dbg !5099
  br i1 %4, label %23, label %5, !dbg !5101

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5102
  %7 = load i32, i32* %6, align 4, !dbg !5102
  %8 = and i32 %7, 3, !dbg !5104
  %9 = icmp eq i32 %8, 0, !dbg !5105
  br i1 %9, label %11, label %10, !dbg !5106

10:                                               ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 857, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5107
  unreachable, !dbg !5107

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %7) #20, !dbg !5109
  br i1 %12, label %13, label %14, !dbg !5111

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 863, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5112
  unreachable, !dbg !5112

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5114
  %16 = load i32, i32* %15, align 4, !dbg !5114
  %17 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5115
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !5115
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 12, !dbg !5116
  store volatile i32 %16, i32* %19, align 4, !dbg !5117
  %20 = load i32, i32* %6, align 4, !dbg !5118
  %21 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !5119
  %22 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %21, i32 0, i32 6, !dbg !5120
  store volatile i32 %20, i32* %22, align 4, !dbg !5121
  br label %23, !dbg !5122

23:                                               ; preds = %2, %14
  %24 = phi i32 [ 0, %14 ], [ -2, %2 ], !dbg !5097
  ret i32 %24, !dbg !5123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_enable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !5124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5126, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.value(metadata i32 0, metadata !5127, metadata !DIExpression()), !dbg !5128
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %2, metadata !5127, metadata !DIExpression()), !dbg !5128
  %3 = icmp eq i32 %2, 255, !dbg !5130
  br i1 %3, label %10, label %4, !dbg !5132

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5133
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5133
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !5134
  %8 = load volatile i32, i32* %7, align 4, !dbg !5135
  %9 = or i32 %8, 32768, !dbg !5135
  store volatile i32 %9, i32* %7, align 4, !dbg !5135
  br label %10, !dbg !5136

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5128
  ret i32 %11, !dbg !5137
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_start(i32 noundef %0) local_unnamed_addr #0 !dbg !5138 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5140, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.value(metadata i32 0, metadata !5141, metadata !DIExpression()), !dbg !5144
  %3 = bitcast i32* %2 to i8*, !dbg !5145
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5145
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5143, metadata !DIExpression()), !dbg !5146
  store volatile i32 0, i32* %2, align 4, !dbg !5146
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %4, metadata !5141, metadata !DIExpression()), !dbg !5144
  %5 = icmp eq i32 %4, 255, !dbg !5148
  br i1 %5, label %29, label %6, !dbg !5150

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %7, metadata !5142, metadata !DIExpression()), !dbg !5144
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !5152
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !5152
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !5153
  %11 = load volatile i32, i32* %10, align 4, !dbg !5153
  store volatile i32 %11, i32* %2, align 4, !dbg !5154
  %12 = load volatile i32, i32* %2, align 4, !dbg !5155
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !5157
  %14 = load i8, i8* %13, align 1, !dbg !5157
  %15 = zext i8 %14 to i32, !dbg !5157
  %16 = shl nuw i32 1, %15, !dbg !5158
  %17 = and i32 %16, %12, !dbg !5159
  %18 = icmp eq i32 %17, 0, !dbg !5159
  br i1 %18, label %20, label %19, !dbg !5160

19:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5161
  br label %29, !dbg !5163

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !5164
  %22 = shl i32 2, %15, !dbg !5166
  %23 = and i32 %21, %22, !dbg !5167
  %24 = icmp eq i32 %23, 0, !dbg !5167
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5144
  br i1 %24, label %25, label %29, !dbg !5168

25:                                               ; preds = %20
  %26 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %4, !dbg !5169
  %27 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %26, align 4, !dbg !5169
  %28 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %27, i32 0, i32 2, !dbg !5170
  store volatile i32 32768, i32* %28, align 4, !dbg !5171
  br label %29, !dbg !5172

29:                                               ; preds = %20, %1, %25, %19
  %30 = phi i32 [ -3, %19 ], [ 0, %25 ], [ -2, %1 ], [ -3, %20 ], !dbg !5144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5173
  ret i32 %30, !dbg !5173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_disable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !5174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5176, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 0, metadata !5177, metadata !DIExpression()), !dbg !5178
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %2, metadata !5177, metadata !DIExpression()), !dbg !5178
  %3 = icmp eq i32 %2, 255, !dbg !5180
  br i1 %3, label %10, label %4, !dbg !5182

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5183
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5183
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !5184
  %8 = load volatile i32, i32* %7, align 4, !dbg !5185
  %9 = and i32 %8, -32769, !dbg !5185
  store volatile i32 %9, i32* %7, align 4, !dbg !5185
  br label %10, !dbg !5186

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5178
  ret i32 %11, !dbg !5187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !5188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5190, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i32 0, metadata !5191, metadata !DIExpression()), !dbg !5192
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %2, metadata !5191, metadata !DIExpression()), !dbg !5192
  %3 = icmp eq i32 %2, 255, !dbg !5194
  br i1 %3, label %8, label %4, !dbg !5196

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5197
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5197
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 2, !dbg !5198
  store volatile i32 0, i32* %7, align 4, !dbg !5199
  br label %8, !dbg !5200

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5192
  ret i32 %9, !dbg !5201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_threshold(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5206, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32 %1, metadata !5207, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32 0, metadata !5208, metadata !DIExpression()), !dbg !5209
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5210
  call void @llvm.dbg.value(metadata i32 %3, metadata !5208, metadata !DIExpression()), !dbg !5209
  %4 = icmp eq i32 %3, 255, !dbg !5211
  br i1 %4, label %11, label %5, !dbg !5213

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 65535, !dbg !5214
  br i1 %6, label %11, label %7, !dbg !5216

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5217
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !5217
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !5218
  store volatile i32 %1, i32* %10, align 4, !dbg !5219
  br label %11, !dbg !5220

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5209
  ret i32 %12, !dbg !5221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_alert_length(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5224, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 %1, metadata !5225, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 0, metadata !5226, metadata !DIExpression()), !dbg !5227
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %3, metadata !5226, metadata !DIExpression()), !dbg !5227
  %4 = icmp eq i32 %3, 255, !dbg !5229
  br i1 %4, label %11, label %5, !dbg !5231

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 63, !dbg !5232
  br i1 %6, label %11, label %7, !dbg !5234

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5235
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !5235
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 11, !dbg !5236
  store volatile i32 %1, i32* %10, align 4, !dbg !5237
  br label %11, !dbg !5238

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5227
  ret i32 %12, !dbg !5239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_push_data(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5244, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i8 %1, metadata !5245, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i32 0, metadata !5246, metadata !DIExpression()), !dbg !5247
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %3, metadata !5246, metadata !DIExpression()), !dbg !5247
  %4 = icmp eq i32 %3, 255, !dbg !5249
  br i1 %4, label %10, label %5, !dbg !5251

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !5252
  %7 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !5253
  %8 = load %struct.anon*, %struct.anon** %7, align 4, !dbg !5253
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %8, i32 0, i32 0, !dbg !5254
  store volatile i32 %6, i32* %9, align 4, !dbg !5255
  br label %10, !dbg !5256

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5247
  ret i32 %11, !dbg !5257
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_pop_data(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8* %1, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 0, metadata !5264, metadata !DIExpression()), !dbg !5265
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %3, metadata !5264, metadata !DIExpression()), !dbg !5265
  %4 = icmp eq i32 %3, 255, !dbg !5267
  br i1 %4, label %11, label %5, !dbg !5269

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !5270
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !5270
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !5271
  %9 = load volatile i32, i32* %8, align 4, !dbg !5271
  %10 = trunc i32 %9 to i8, !dbg !5270
  store i8 %10, i8* %1, align 1, !dbg !5272
  br label %11, !dbg !5273

11:                                               ; preds = %2, %5
  %12 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5265
  ret i32 %12, !dbg !5274
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_receive_bytes(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5279, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i32* %1, metadata !5280, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i32 0, metadata !5281, metadata !DIExpression()), !dbg !5282
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5283
  call void @llvm.dbg.value(metadata i32 %3, metadata !5281, metadata !DIExpression()), !dbg !5282
  %4 = icmp eq i32 %3, 255, !dbg !5284
  br i1 %4, label %10, label %5, !dbg !5286

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5287
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !5287
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !5288
  %9 = load volatile i32, i32* %8, align 4, !dbg !5288
  store i32 %9, i32* %1, align 4, !dbg !5289
  br label %10, !dbg !5290

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5282
  ret i32 %11, !dbg !5291
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_send_space(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5294, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32* %1, metadata !5295, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 0, metadata !5296, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 0, metadata !5297, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 0, metadata !5298, metadata !DIExpression()), !dbg !5299
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5300
  call void @llvm.dbg.value(metadata i32 %3, metadata !5296, metadata !DIExpression()), !dbg !5299
  %4 = icmp eq i32 %3, 255, !dbg !5301
  br i1 %4, label %13, label %5, !dbg !5303

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5304
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !5304
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 12, !dbg !5305
  %9 = load volatile i32, i32* %8, align 4, !dbg !5305
  call void @llvm.dbg.value(metadata i32 %9, metadata !5297, metadata !DIExpression()), !dbg !5299
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !5306
  %11 = load volatile i32, i32* %10, align 4, !dbg !5306
  call void @llvm.dbg.value(metadata i32 %11, metadata !5298, metadata !DIExpression()), !dbg !5299
  %12 = sub i32 %9, %11, !dbg !5307
  store i32 %12, i32* %1, align 4, !dbg !5308
  br label %13, !dbg !5309

13:                                               ; preds = %2, %5
  %14 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5299
  ret i32 %14, !dbg !5310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @vdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !5311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5315, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %2, metadata !5317, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 0, metadata !5318, metadata !DIExpression()), !dbg !5319
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5320
  call void @llvm.dbg.value(metadata i32 %4, metadata !5318, metadata !DIExpression()), !dbg !5319
  %5 = icmp eq i32 %4, 255, !dbg !5321
  br i1 %5, label %12, label %6, !dbg !5323

6:                                                ; preds = %3
  %7 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 0, !dbg !5324
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5324
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5326
  br i1 %9, label %10, label %12, !dbg !5327

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !5328
  %11 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 1, !dbg !5330
  store i8* %2, i8** %11, align 4, !dbg !5331
  br label %12, !dbg !5332

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !5319
  ret i32 %13, !dbg !5333
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !5334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5339, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !5341, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 0, metadata !5340, metadata !DIExpression()), !dbg !5342
  br label %5, !dbg !5344

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !5346
  call void @llvm.dbg.value(metadata i32 %3, metadata !5340, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %6, metadata !5340, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5342
  %4 = icmp eq i32 %3, 5, !dbg !5348
  br i1 %4, label %10, label %5, !dbg !5344, !llvm.loop !5349

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5340, metadata !DIExpression()), !dbg !5342
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !5351
  %8 = load i32, i32* %7, align 4, !dbg !5351
  %9 = icmp eq i32 %8, %0, !dbg !5354
  call void @llvm.dbg.value(metadata i32 %6, metadata !5340, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5342
  br i1 %9, label %10, label %2, !dbg !5355

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !5342
  ret i32 %11, !dbg !5356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !5357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5362, metadata !DIExpression()), !dbg !5363
  ret i32 0, !dbg !5364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !5365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5367, metadata !DIExpression()), !dbg !5368
  ret i32 0, !dbg !5369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5374, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 %1, metadata !5375, metadata !DIExpression()), !dbg !5378
  %3 = icmp ugt i32 %0, 48, !dbg !5379
  br i1 %3, label %13, label %4, !dbg !5381

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5382
  call void @llvm.dbg.value(metadata i32 %5, metadata !5376, metadata !DIExpression()), !dbg !5378
  %6 = and i32 %0, 31, !dbg !5383
  call void @llvm.dbg.value(metadata i32 %6, metadata !5377, metadata !DIExpression()), !dbg !5378
  %7 = icmp eq i32 %1, 0, !dbg !5384
  %8 = shl nuw i32 1, %6, !dbg !5386
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5386
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !5387
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !5387
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !5387
  store volatile i32 %8, i32* %12, align 4, !dbg !5386
  br label %13, !dbg !5388

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5378
  ret i32 %14, !dbg !5388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5394, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32* %1, metadata !5395, metadata !DIExpression()), !dbg !5399
  %3 = icmp ugt i32 %0, 48, !dbg !5400
  br i1 %3, label %15, label %4, !dbg !5402

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5403
  br i1 %5, label %15, label %6, !dbg !5405

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %7, metadata !5396, metadata !DIExpression()), !dbg !5399
  %8 = and i32 %0, 31, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %8, metadata !5397, metadata !DIExpression()), !dbg !5399
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5408
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !5409
  %11 = load volatile i32, i32* %10, align 4, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %11, metadata !5398, metadata !DIExpression()), !dbg !5399
  %12 = shl nuw i32 1, %8, !dbg !5410
  %13 = and i32 %11, %12, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %13, metadata !5398, metadata !DIExpression()), !dbg !5399
  %14 = lshr i32 %13, %8, !dbg !5412
  store i32 %14, i32* %1, align 4, !dbg !5413
  br label %15, !dbg !5414

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5399
  ret i32 %16, !dbg !5415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5421, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i8 %1, metadata !5422, metadata !DIExpression()), !dbg !5426
  %3 = icmp ugt i32 %0, 48, !dbg !5427
  br i1 %3, label %18, label %4, !dbg !5429

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !5430
  br i1 %5, label %18, label %6, !dbg !5432

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !5433
  %8 = lshr i32 %0, 3, !dbg !5434
  call void @llvm.dbg.value(metadata i32 %8, metadata !5423, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i32 %0, metadata !5424, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5426
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5435
  call void @llvm.dbg.value(metadata i32 %9, metadata !5425, metadata !DIExpression()), !dbg !5426
  %10 = shl nuw nsw i32 %0, 2, !dbg !5436
  %11 = and i32 %10, 28, !dbg !5436
  %12 = shl nuw i32 15, %11, !dbg !5437
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5438
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !5439
  store volatile i32 %12, i32* %14, align 4, !dbg !5440
  %15 = shl nuw i32 %7, %11, !dbg !5441
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5442
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !5443
  store volatile i32 %15, i32* %17, align 4, !dbg !5444
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !5445
  br label %18, !dbg !5446

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5426
  ret i32 %19, !dbg !5447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5453, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i32* %1, metadata !5454, metadata !DIExpression()), !dbg !5458
  %3 = icmp ugt i32 %0, 48, !dbg !5459
  br i1 %3, label %15, label %4, !dbg !5461

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5462
  br i1 %5, label %15, label %6, !dbg !5464

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %7, metadata !5455, metadata !DIExpression()), !dbg !5458
  %8 = and i32 %0, 31, !dbg !5466
  call void @llvm.dbg.value(metadata i32 %8, metadata !5456, metadata !DIExpression()), !dbg !5458
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5467
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !5468
  %11 = load volatile i32, i32* %10, align 4, !dbg !5468
  call void @llvm.dbg.value(metadata i32 %11, metadata !5457, metadata !DIExpression()), !dbg !5458
  %12 = shl nuw i32 1, %8, !dbg !5469
  %13 = and i32 %11, %12, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %13, metadata !5457, metadata !DIExpression()), !dbg !5458
  %14 = lshr i32 %13, %8, !dbg !5471
  store i32 %14, i32* %1, align 4, !dbg !5472
  br label %15, !dbg !5473

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5458
  ret i32 %16, !dbg !5474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5479, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.value(metadata i32 %1, metadata !5480, metadata !DIExpression()), !dbg !5483
  %3 = icmp ugt i32 %0, 48, !dbg !5484
  br i1 %3, label %13, label %4, !dbg !5486

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5487
  call void @llvm.dbg.value(metadata i32 %5, metadata !5481, metadata !DIExpression()), !dbg !5483
  %6 = and i32 %0, 31, !dbg !5488
  call void @llvm.dbg.value(metadata i32 %6, metadata !5482, metadata !DIExpression()), !dbg !5483
  %7 = icmp eq i32 %1, 0, !dbg !5489
  %8 = shl nuw i32 1, %6, !dbg !5491
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5491
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !5492
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !5492
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !5492
  store volatile i32 %8, i32* %12, align 4, !dbg !5491
  br label %13, !dbg !5493

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5483
  ret i32 %14, !dbg !5493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5496, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata i32* %1, metadata !5497, metadata !DIExpression()), !dbg !5501
  %3 = icmp ugt i32 %0, 48, !dbg !5502
  br i1 %3, label %15, label %4, !dbg !5504

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5505
  br i1 %5, label %15, label %6, !dbg !5507

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %7, metadata !5498, metadata !DIExpression()), !dbg !5501
  %8 = and i32 %0, 31, !dbg !5509
  call void @llvm.dbg.value(metadata i32 %8, metadata !5499, metadata !DIExpression()), !dbg !5501
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5510
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !5511
  %11 = load volatile i32, i32* %10, align 4, !dbg !5511
  call void @llvm.dbg.value(metadata i32 %11, metadata !5500, metadata !DIExpression()), !dbg !5501
  %12 = shl nuw i32 1, %8, !dbg !5512
  %13 = and i32 %11, %12, !dbg !5513
  call void @llvm.dbg.value(metadata i32 %13, metadata !5500, metadata !DIExpression()), !dbg !5501
  %14 = lshr i32 %13, %8, !dbg !5514
  store i32 %14, i32* %1, align 4, !dbg !5515
  br label %15, !dbg !5516

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5501
  ret i32 %16, !dbg !5517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !5518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5520, metadata !DIExpression()), !dbg !5524
  %2 = icmp ugt i32 %0, 48, !dbg !5525
  br i1 %2, label %16, label %3, !dbg !5527

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %4, metadata !5521, metadata !DIExpression()), !dbg !5524
  %5 = and i32 %0, 31, !dbg !5529
  call void @llvm.dbg.value(metadata i32 %5, metadata !5522, metadata !DIExpression()), !dbg !5524
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5530
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !5531
  %8 = load volatile i32, i32* %7, align 4, !dbg !5531
  call void @llvm.dbg.value(metadata i32 %8, metadata !5523, metadata !DIExpression()), !dbg !5524
  %9 = shl nuw i32 1, %5, !dbg !5532
  %10 = and i32 %8, %9, !dbg !5533
  call void @llvm.dbg.value(metadata i32 %10, metadata !5523, metadata !DIExpression()), !dbg !5524
  %11 = lshr i32 %10, %5, !dbg !5534
  %12 = icmp eq i32 %11, 0, !dbg !5534
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !5536
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !5536
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !5536
  store volatile i32 %9, i32* %15, align 4, !dbg !5537
  br label %16, !dbg !5538

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !5524
  ret i32 %17, !dbg !5538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !5539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5541, metadata !DIExpression()), !dbg !5544
  %2 = icmp ugt i32 %0, 48, !dbg !5545
  br i1 %2, label %9, label %3, !dbg !5547

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %4, metadata !5542, metadata !DIExpression()), !dbg !5544
  %5 = and i32 %0, 31, !dbg !5549
  call void @llvm.dbg.value(metadata i32 %5, metadata !5543, metadata !DIExpression()), !dbg !5544
  %6 = shl nuw i32 1, %5, !dbg !5550
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5551
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !5552
  store volatile i32 %6, i32* %8, align 4, !dbg !5553
  br label %9, !dbg !5554

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5544
  ret i32 %10, !dbg !5555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !5556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5558, metadata !DIExpression()), !dbg !5561
  %2 = icmp ugt i32 %0, 48, !dbg !5562
  br i1 %2, label %9, label %3, !dbg !5564

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %4, metadata !5559, metadata !DIExpression()), !dbg !5561
  %5 = and i32 %0, 31, !dbg !5566
  call void @llvm.dbg.value(metadata i32 %5, metadata !5560, metadata !DIExpression()), !dbg !5561
  %6 = shl nuw i32 1, %5, !dbg !5567
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5568
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !5569
  store volatile i32 %6, i32* %8, align 4, !dbg !5570
  br label %9, !dbg !5571

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5561
  ret i32 %10, !dbg !5572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !5573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5575, metadata !DIExpression()), !dbg !5578
  %2 = icmp ugt i32 %0, 48, !dbg !5579
  br i1 %2, label %14, label %3, !dbg !5581

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5582
  %5 = icmp eq i32 %4, 0, !dbg !5582
  br i1 %5, label %14, label %6, !dbg !5583

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5584
  call void @llvm.dbg.value(metadata i32 %7, metadata !5576, metadata !DIExpression()), !dbg !5578
  %8 = and i32 %0, 31, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %8, metadata !5577, metadata !DIExpression()), !dbg !5578
  %9 = shl nuw i32 1, %8, !dbg !5586
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5587
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5588
  store volatile i32 %9, i32* %11, align 4, !dbg !5589
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5590
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !5591
  store volatile i32 %9, i32* %13, align 4, !dbg !5592
  br label %14, !dbg !5593

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5578
  ret i32 %15, !dbg !5594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !5595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5597, metadata !DIExpression()), !dbg !5600
  %2 = icmp ugt i32 %0, 48, !dbg !5601
  br i1 %2, label %14, label %3, !dbg !5603

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5604
  %5 = icmp eq i32 %4, 0, !dbg !5604
  br i1 %5, label %14, label %6, !dbg !5605

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %7, metadata !5598, metadata !DIExpression()), !dbg !5600
  %8 = and i32 %0, 31, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %8, metadata !5599, metadata !DIExpression()), !dbg !5600
  %9 = shl nuw i32 1, %8, !dbg !5608
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5609
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5610
  store volatile i32 %9, i32* %11, align 4, !dbg !5611
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5612
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !5613
  store volatile i32 %9, i32* %13, align 4, !dbg !5614
  br label %14, !dbg !5615

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5600
  ret i32 %15, !dbg !5616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !5617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5619, metadata !DIExpression()), !dbg !5622
  %2 = icmp ugt i32 %0, 48, !dbg !5623
  br i1 %2, label %12, label %3, !dbg !5625

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5626
  %5 = icmp eq i32 %4, 0, !dbg !5626
  br i1 %5, label %12, label %6, !dbg !5627

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %7, metadata !5620, metadata !DIExpression()), !dbg !5622
  %8 = and i32 %0, 31, !dbg !5629
  call void @llvm.dbg.value(metadata i32 %8, metadata !5621, metadata !DIExpression()), !dbg !5622
  %9 = shl nuw i32 1, %8, !dbg !5630
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5631
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !5632
  store volatile i32 %9, i32* %11, align 4, !dbg !5633
  br label %12, !dbg !5634

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5622
  ret i32 %13, !dbg !5635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5642, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 %1, metadata !5643, metadata !DIExpression()), !dbg !5644
  %3 = icmp ugt i32 %0, 5, !dbg !5645
  br i1 %3, label %7, label %4, !dbg !5647

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5648
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !5649
  store volatile i32 %1, i32* %6, align 4, !dbg !5650
  br label %7, !dbg !5651

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !5644
  ret i32 %8, !dbg !5652
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5657, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.value(metadata i8 %1, metadata !5658, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.value(metadata i8 %2, metadata !5659, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.value(metadata i8 %3, metadata !5660, metadata !DIExpression()), !dbg !5663
  %5 = icmp ugt i32 %0, 48, !dbg !5664
  br i1 %5, label %30, label %6, !dbg !5666

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5667
  %8 = icmp eq i32 %7, 0, !dbg !5667
  br i1 %8, label %9, label %30, !dbg !5668

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !5669
  call void @llvm.dbg.value(metadata i32 %10, metadata !5661, metadata !DIExpression()), !dbg !5663
  %11 = and i32 %0, 31, !dbg !5670
  call void @llvm.dbg.value(metadata i32 %11, metadata !5662, metadata !DIExpression()), !dbg !5663
  %12 = icmp eq i8 %1, 0, !dbg !5671
  %13 = shl nuw i32 1, %11, !dbg !5673
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5673
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !5674
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !5674
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !5674
  store volatile i32 %13, i32* %17, align 4, !dbg !5673
  %18 = icmp eq i8 %2, 0, !dbg !5675
  %19 = shl nuw i32 1, %11, !dbg !5677
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5677
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !5678
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !5678
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !5678
  store volatile i32 %19, i32* %23, align 4, !dbg !5677
  %24 = icmp eq i8 %3, 0, !dbg !5679
  %25 = shl nuw i32 1, %11, !dbg !5681
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5681
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !5682
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !5682
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !5682
  store volatile i32 %25, i32* %29, align 4, !dbg !5681
  br label %30, !dbg !5683

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !5663
  ret i32 %31, !dbg !5683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5686, metadata !DIExpression()), !dbg !5693
  %2 = icmp ugt i32 %0, 48, !dbg !5694
  br i1 %2, label %40, label %3, !dbg !5696

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %4, metadata !5687, metadata !DIExpression()), !dbg !5693
  %5 = and i32 %0, 31, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %5, metadata !5690, metadata !DIExpression()), !dbg !5693
  %6 = lshr i32 %0, 4, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %6, metadata !5688, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %0, metadata !5691, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5693
  %7 = lshr i32 %0, 3, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %7, metadata !5689, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %0, metadata !5692, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5693
  %8 = shl nuw nsw i32 %0, 2, !dbg !5701
  %9 = and i32 %8, 28, !dbg !5701
  %10 = shl nuw i32 15, %9, !dbg !5702
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5703
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !5704
  store volatile i32 %10, i32* %12, align 4, !dbg !5705
  %13 = shl nuw i32 1, %5, !dbg !5706
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5707
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !5708
  store volatile i32 %13, i32* %15, align 4, !dbg !5709
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5710
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !5711
  store volatile i32 %13, i32* %17, align 4, !dbg !5712
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5713
  %19 = icmp eq i32 %18, 0, !dbg !5713
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5715
  br i1 %19, label %23, label %21, !dbg !5716

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !5717
  br label %29, !dbg !5719

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !5720
  store volatile i32 %13, i32* %24, align 4, !dbg !5722
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5723
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !5724
  store volatile i32 %13, i32* %26, align 4, !dbg !5725
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5726
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !5727
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !5715
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5728
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !5729
  store volatile i32 %13, i32* %32, align 4, !dbg !5730
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5731
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !5732
  store volatile i32 %13, i32* %34, align 4, !dbg !5733
  %35 = shl nuw nsw i32 %0, 1, !dbg !5734
  %36 = and i32 %35, 30, !dbg !5734
  %37 = shl nuw i32 3, %36, !dbg !5735
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5736
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !5737
  store volatile i32 %37, i32* %39, align 4, !dbg !5738
  br label %40, !dbg !5739

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !5693
  ret i32 %41, !dbg !5740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5743, metadata !DIExpression()), !dbg !5748
  %2 = icmp ugt i32 %0, 48, !dbg !5749
  br i1 %2, label %34, label %3, !dbg !5751

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %4, metadata !5744, metadata !DIExpression()), !dbg !5748
  %5 = and i32 %0, 31, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %5, metadata !5746, metadata !DIExpression()), !dbg !5748
  %6 = lshr i32 %0, 3, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %6, metadata !5745, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.value(metadata i32 %0, metadata !5747, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5748
  %7 = shl nuw nsw i32 %0, 2, !dbg !5755
  %8 = and i32 %7, 28, !dbg !5755
  %9 = shl nuw i32 15, %8, !dbg !5756
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5757
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !5758
  store volatile i32 %9, i32* %11, align 4, !dbg !5759
  %12 = shl nuw i32 1, %5, !dbg !5760
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5761
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !5762
  store volatile i32 %12, i32* %14, align 4, !dbg !5763
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5764
  %16 = icmp eq i32 %15, 0, !dbg !5764
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5766
  br i1 %16, label %22, label %18, !dbg !5767

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !5768
  store volatile i32 %12, i32* %19, align 4, !dbg !5770
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5771
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !5772
  br label %28, !dbg !5773

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !5774
  store volatile i32 %12, i32* %23, align 4, !dbg !5776
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5777
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !5778
  store volatile i32 %12, i32* %25, align 4, !dbg !5779
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5780
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !5781
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !5766
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5782
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !5783
  store volatile i32 %12, i32* %31, align 4, !dbg !5784
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5785
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !5786
  store volatile i32 %12, i32* %33, align 4, !dbg !5787
  br label %34, !dbg !5788

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !5748
  ret i32 %35, !dbg !5789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5794, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata i32 %1, metadata !5795, metadata !DIExpression()), !dbg !5798
  %3 = icmp ugt i32 %0, 48, !dbg !5799
  br i1 %3, label %14, label %4, !dbg !5801

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %5, metadata !5796, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata i32 %0, metadata !5797, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5798
  %6 = shl nuw nsw i32 %0, 1, !dbg !5803
  %7 = and i32 %6, 30, !dbg !5803
  %8 = shl nuw i32 3, %7, !dbg !5804
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5805
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !5806
  store volatile i32 %8, i32* %10, align 4, !dbg !5807
  %11 = shl i32 %1, %7, !dbg !5808
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5809
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !5810
  store volatile i32 %11, i32* %13, align 4, !dbg !5811
  br label %14, !dbg !5812

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !5798
  ret i32 %15, !dbg !5813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5819, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata i32* %1, metadata !5820, metadata !DIExpression()), !dbg !5824
  %3 = icmp ugt i32 %0, 48, !dbg !5825
  br i1 %3, label %18, label %4, !dbg !5827

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5828
  br i1 %5, label %18, label %6, !dbg !5830

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %7, metadata !5821, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata i32 %0, metadata !5822, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5824
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5832
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !5833
  %10 = load volatile i32, i32* %9, align 4, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %10, metadata !5823, metadata !DIExpression()), !dbg !5824
  %11 = shl nuw nsw i32 %0, 1, !dbg !5834
  %12 = and i32 %11, 30, !dbg !5834
  %13 = shl nuw i32 3, %12, !dbg !5835
  %14 = and i32 %10, %13, !dbg !5836
  call void @llvm.dbg.value(metadata i32 %14, metadata !5823, metadata !DIExpression()), !dbg !5824
  %15 = lshr i32 %14, %12, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %15, metadata !5823, metadata !DIExpression()), !dbg !5824
  %16 = shl i32 %15, 2, !dbg !5838
  %17 = add i32 %16, 4, !dbg !5838
  store i32 %17, i32* %1, align 4, !dbg !5839
  br label %18, !dbg !5840

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5824
  ret i32 %19, !dbg !5841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5842 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5846, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i1 %1, metadata !5847, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5909
  %4 = bitcast i32* %3 to i8*, !dbg !5910
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5910
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5911
  %6 = load volatile i32, i32* %5, align 4, !dbg !5911
  %7 = icmp eq i32 %6, 2, !dbg !5913
  br i1 %7, label %9, label %8, !dbg !5914

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5915
  unreachable, !dbg !5915

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5917
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !5917
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !5852, metadata !DIExpression()), !dbg !5909
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %12, metadata !5848, metadata !DIExpression()), !dbg !5909
  br i1 %1, label %13, label %14, !dbg !5919

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !5920
  br label %14, !dbg !5923

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !5849, metadata !DIExpression(DW_OP_deref)), !dbg !5909
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %15, metadata !5908, metadata !DIExpression()), !dbg !5909
  %16 = icmp eq i32 %15, 0, !dbg !5925
  br i1 %16, label %18, label %17, !dbg !5927

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5928
  unreachable, !dbg !5928

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !5930
  call void @llvm.dbg.value(metadata i32 %19, metadata !5849, metadata !DIExpression()), !dbg !5909
  %20 = icmp eq i32 %19, 0, !dbg !5932
  br i1 %20, label %43, label %21, !dbg !5933

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5934
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !5934
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !5850, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i8* undef, metadata !5851, metadata !DIExpression()), !dbg !5909
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !5935
  br i1 %24, label %25, label %26, !dbg !5937

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5938
  unreachable, !dbg !5938

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5940
  %28 = load i8*, i8** %27, align 4, !dbg !5940
  call void @llvm.dbg.value(metadata i8* %28, metadata !5851, metadata !DIExpression()), !dbg !5909
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !5941
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !5942
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !5943
  call void @llvm.dbg.value(metadata i32* %3, metadata !5849, metadata !DIExpression(DW_OP_deref)), !dbg !5909
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !5944
  call void @llvm.dbg.value(metadata i32 %31, metadata !5908, metadata !DIExpression()), !dbg !5909
  %32 = icmp eq i32 %31, 0, !dbg !5945
  br i1 %32, label %34, label %33, !dbg !5947

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5948
  unreachable, !dbg !5948

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %35, metadata !5849, metadata !DIExpression()), !dbg !5909
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5952
  %37 = load i32, i32* %36, align 4, !dbg !5952
  %38 = icmp ult i32 %35, %37, !dbg !5953
  br i1 %38, label %43, label %39, !dbg !5954

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %40, metadata !5908, metadata !DIExpression()), !dbg !5909
  %41 = icmp eq i32 %40, 0, !dbg !5957
  br i1 %41, label %43, label %42, !dbg !5959

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5960
  unreachable, !dbg !5960

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5962
  ret void, !dbg !5962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5963 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5965, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata i1 %1, metadata !5966, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5973
  %4 = bitcast i32* %3 to i8*, !dbg !5974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5974
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5975
  %6 = load volatile i32, i32* %5, align 4, !dbg !5975
  %7 = icmp eq i32 %6, 2, !dbg !5977
  br i1 %7, label %9, label %8, !dbg !5978

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5979
  unreachable, !dbg !5979

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %10, metadata !5967, metadata !DIExpression()), !dbg !5973
  br i1 %1, label %36, label %11, !dbg !5982

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5983
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !5983
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !5971, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata i8* undef, metadata !5972, metadata !DIExpression()), !dbg !5973
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !5986
  br i1 %14, label %15, label %16, !dbg !5988

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5989
  unreachable, !dbg !5989

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5991
  %18 = load i8*, i8** %17, align 4, !dbg !5991
  call void @llvm.dbg.value(metadata i8* %18, metadata !5972, metadata !DIExpression()), !dbg !5973
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !5992
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !5993
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !5994
  call void @llvm.dbg.value(metadata i32* %3, metadata !5970, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %21, metadata !5968, metadata !DIExpression()), !dbg !5973
  %22 = icmp eq i32 %21, 0, !dbg !5996
  br i1 %22, label %24, label %23, !dbg !5998

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5999
  unreachable, !dbg !5999

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !6001
  %26 = load i32, i32* %25, align 4, !dbg !6001
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !6002
  %28 = load i32, i32* %27, align 4, !dbg !6002
  %29 = sub i32 %26, %28, !dbg !6003
  call void @llvm.dbg.value(metadata i32 %29, metadata !5969, metadata !DIExpression()), !dbg !5973
  %30 = load i32, i32* %3, align 4, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %30, metadata !5970, metadata !DIExpression()), !dbg !5973
  %31 = icmp ult i32 %30, %29, !dbg !6006
  br i1 %31, label %36, label %32, !dbg !6007

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !6008
  call void @llvm.dbg.value(metadata i32 %33, metadata !5968, metadata !DIExpression()), !dbg !5973
  %34 = icmp eq i32 %33, 0, !dbg !6010
  br i1 %34, label %36, label %35, !dbg !6012

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6013
  unreachable, !dbg !6013

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !6015
  ret void, !dbg !6015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !6016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6020, metadata !DIExpression()), !dbg !6024
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6025
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !6025
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !6021, metadata !DIExpression()), !dbg !6024
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6026
  %5 = icmp eq i32 %4, 0, !dbg !6026
  br i1 %5, label %6, label %14, !dbg !6028

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !6029
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !6031
  %7 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6032
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !6032
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !6022, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.value(metadata i8* undef, metadata !6023, metadata !DIExpression()), !dbg !6024
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !6033
  br i1 %9, label %10, label %11, !dbg !6035

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6036
  unreachable, !dbg !6036

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6038
  %13 = load i8*, i8** %12, align 4, !dbg !6038
  call void @llvm.dbg.value(metadata i8* %13, metadata !6023, metadata !DIExpression()), !dbg !6024
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !6039
  br label %14, !dbg !6040

14:                                               ; preds = %11, %1
  ret void, !dbg !6041
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6048, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i32 %1, metadata !6049, metadata !DIExpression()), !dbg !6053
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6054
  br i1 %3, label %4, label %16, !dbg !6056

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !6057
  br i1 %5, label %6, label %16, !dbg !6058

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6059
  %8 = load volatile i32, i32* %7, align 4, !dbg !6059
  %9 = icmp eq i32 %8, 0, !dbg !6061
  br i1 %9, label %16, label %10, !dbg !6062

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6063
  call void @llvm.dbg.value(metadata i32 %11, metadata !6051, metadata !DIExpression()), !dbg !6053
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !6064
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6065
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !6065
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !6052, metadata !DIExpression()), !dbg !6053
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !6066
  %15 = load i32, i32* %14, align 4, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %15, metadata !6050, metadata !DIExpression()), !dbg !6053
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !6067
  br label %16, !dbg !6068

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6053
  ret i32 %17, !dbg !6069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !6070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6074, metadata !DIExpression()), !dbg !6075
  %2 = icmp ult i32 %0, 4, !dbg !6076
  ret i1 %2, !dbg !6077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !6078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6082, metadata !DIExpression()), !dbg !6083
  %2 = icmp ult i32 %0, 13, !dbg !6084
  ret i1 %2, !dbg !6085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6102, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6103, metadata !DIExpression()), !dbg !6106
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6107
  br i1 %3, label %4, label %23, !dbg !6109

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6110
  br i1 %5, label %6, label %23, !dbg !6111

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6112
  %8 = load volatile i32, i32* %7, align 4, !dbg !6112
  %9 = icmp eq i32 %8, 0, !dbg !6114
  br i1 %9, label %23, label %10, !dbg !6115

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6116
  call void @llvm.dbg.value(metadata i32 %11, metadata !6104, metadata !DIExpression()), !dbg !6106
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !6117
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6118
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !6105, metadata !DIExpression()), !dbg !6106
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6119
  %15 = load i32, i32* %14, align 4, !dbg !6119
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !6120
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6121
  %18 = load i32, i32* %17, align 4, !dbg !6121
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6122
  %20 = load i32, i32* %19, align 4, !dbg !6122
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6123
  %22 = load i32, i32* %21, align 4, !dbg !6123
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !6124
  br label %23, !dbg !6125

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6106
  ret i32 %24, !dbg !6126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6127 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6131, metadata !DIExpression()), !dbg !6132
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !6133
  %3 = load i32, i32* %2, align 4, !dbg !6133
  %4 = icmp ult i32 %3, 13, !dbg !6134
  br i1 %4, label %5, label %17, !dbg !6135

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6136
  %7 = load i32, i32* %6, align 4, !dbg !6136
  %8 = icmp ult i32 %7, 4, !dbg !6137
  br i1 %8, label %9, label %17, !dbg !6138

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6139
  %11 = load i32, i32* %10, align 4, !dbg !6139
  %12 = icmp ult i32 %11, 2, !dbg !6140
  br i1 %12, label %13, label %17, !dbg !6141

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6142
  %15 = load i32, i32* %14, align 4, !dbg !6142
  %16 = icmp ult i32 %15, 3, !dbg !6143
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !6132
  ret i1 %18, !dbg !6144
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6150, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6151, metadata !DIExpression()), !dbg !6157
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6158
  br i1 %3, label %4, label %41, !dbg !6160

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6161
  br i1 %5, label %6, label %41, !dbg !6162

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %7, metadata !6155, metadata !DIExpression()), !dbg !6157
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6164
  %9 = load volatile i32, i32* %8, align 4, !dbg !6164
  %10 = icmp eq i32 %9, 0, !dbg !6166
  br i1 %10, label %12, label %11, !dbg !6167

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6168
  br label %41, !dbg !6170

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !6171
  br i1 %13, label %22, label %14, !dbg !6173

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6153, metadata !DIExpression()), !dbg !6157
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !6174
  store volatile i32 0, i32* %16, align 4, !dbg !6179
  %17 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !6180
  store i8* null, i8** %17, align 4, !dbg !6181
  %18 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !6182
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !6183
  %19 = add nuw nsw i32 %15, 1, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %19, metadata !6153, metadata !DIExpression()), !dbg !6157
  %20 = icmp eq i32 %19, 4, !dbg !6185
  br i1 %20, label %21, label %14, !dbg !6186, !llvm.loop !6187

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !6189
  br label %22, !dbg !6190

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !6191
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6192
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6193
  %24 = load i32, i32* %23, align 4, !dbg !6193
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !6194
  call void @llvm.dbg.value(metadata i32 %25, metadata !6156, metadata !DIExpression()), !dbg !6157
  %26 = icmp eq i32 %25, 0, !dbg !6195
  br i1 %26, label %28, label %27, !dbg !6197

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6198
  unreachable, !dbg !6198

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6200
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !6200
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !6152, metadata !DIExpression()), !dbg !6157
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !6201
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6202
  %32 = load i32, i32* %31, align 4, !dbg !6202
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !6203
  %34 = load i32, i32* %33, align 4, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %34, metadata !6154, metadata !DIExpression()), !dbg !6157
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !6204
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6205
  %36 = load i32, i32* %35, align 4, !dbg !6205
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6206
  %38 = load i32, i32* %37, align 4, !dbg !6206
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6207
  %40 = load i32, i32* %39, align 4, !dbg !6207
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !6208
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !6209
  br label %41, !dbg !6210

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !6157
  ret i32 %42, !dbg !6211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6216, metadata !DIExpression()), !dbg !6223
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6224
  br i1 %2, label %3, label %54, !dbg !6226

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6227
  call void @llvm.dbg.value(metadata i32 %4, metadata !6220, metadata !DIExpression()), !dbg !6223
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6228
  %6 = load volatile i32, i32* %5, align 4, !dbg !6228
  %7 = icmp eq i32 %6, 0, !dbg !6230
  br i1 %7, label %52, label %8, !dbg !6231

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6232
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6232
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6217, metadata !DIExpression()), !dbg !6223
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !6233
  %11 = load volatile i32, i32* %5, align 4, !dbg !6234
  %12 = icmp eq i32 %11, 2, !dbg !6236
  br i1 %12, label %13, label %43, !dbg !6237

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6238
  call void @llvm.dbg.value(metadata i32 %14, metadata !6218, metadata !DIExpression()), !dbg !6223
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6240
  call void @llvm.dbg.value(metadata i32 %15, metadata !6219, metadata !DIExpression()), !dbg !6223
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !6241
  call void @llvm.dbg.value(metadata i32 %16, metadata !6221, metadata !DIExpression()), !dbg !6223
  %17 = icmp eq i32 %16, 0, !dbg !6242
  br i1 %17, label %19, label %18, !dbg !6244

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6245
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6247
  unreachable, !dbg !6247

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %20, metadata !6221, metadata !DIExpression()), !dbg !6223
  %21 = icmp eq i32 %20, 0, !dbg !6249
  br i1 %21, label %23, label %22, !dbg !6251

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6252
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6254
  unreachable, !dbg !6254

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %24, metadata !6221, metadata !DIExpression()), !dbg !6223
  %25 = icmp eq i32 %24, 0, !dbg !6256
  br i1 %25, label %27, label %26, !dbg !6258

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6259
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6261
  unreachable, !dbg !6261

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !6262
  call void @llvm.dbg.value(metadata i32 %28, metadata !6221, metadata !DIExpression()), !dbg !6223
  %29 = icmp eq i32 %28, 0, !dbg !6263
  br i1 %29, label %31, label %30, !dbg !6265

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6266
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6268
  unreachable, !dbg !6268

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !6269
  call void @llvm.dbg.value(metadata i32 %32, metadata !6221, metadata !DIExpression()), !dbg !6223
  %33 = icmp eq i32 %32, 0, !dbg !6270
  br i1 %33, label %35, label %34, !dbg !6272

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6273
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6275
  unreachable, !dbg !6275

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !6276
  call void @llvm.dbg.value(metadata i32 %36, metadata !6221, metadata !DIExpression()), !dbg !6223
  %37 = icmp eq i32 %36, 0, !dbg !6277
  br i1 %37, label %39, label %38, !dbg !6279

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6280
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6282
  unreachable, !dbg !6282

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6283
  %41 = load i32, i32* %40, align 4, !dbg !6283
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !6284
  br label %43, !dbg !6285

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !6286
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6287
  %45 = load i32, i32* %44, align 4, !dbg !6287
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !6288
  call void @llvm.dbg.value(metadata i32 %46, metadata !6222, metadata !DIExpression()), !dbg !6223
  %47 = icmp eq i32 %46, 0, !dbg !6289
  br i1 %47, label %49, label %48, !dbg !6291

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6292
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6294
  unreachable, !dbg !6294

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6295
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !6296
  %51 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6297
  store i8* null, i8** %51, align 4, !dbg !6298
  store volatile i32 0, i32* %5, align 4, !dbg !6299
  br label %52, !dbg !6300

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6223
  br label %54, !dbg !6301

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !6223
  ret i32 %55, !dbg !6301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6306, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i8 %1, metadata !6307, metadata !DIExpression()), !dbg !6309
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6310
  br i1 %3, label %4, label %11, !dbg !6312

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6313
  %6 = load volatile i32, i32* %5, align 4, !dbg !6313
  %7 = icmp eq i32 %6, 1, !dbg !6315
  br i1 %7, label %8, label %11, !dbg !6316

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6317
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6317
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6308, metadata !DIExpression()), !dbg !6309
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !6318
  br label %11, !dbg !6319

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !6319
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6327, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 0, metadata !6329, metadata !DIExpression()), !dbg !6330
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6331
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6333
  br i1 %6, label %7, label %20, !dbg !6333

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6334
  %9 = load volatile i32, i32* %8, align 4, !dbg !6334
  %10 = icmp ne i32 %9, 1, !dbg !6336
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6337
  call void @llvm.dbg.value(metadata i32 0, metadata !6329, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6327, metadata !DIExpression()), !dbg !6330
  br i1 %12, label %20, label %13, !dbg !6337

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6329, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %15, metadata !6327, metadata !DIExpression()), !dbg !6330
  %16 = load i8, i8* %15, align 1, !dbg !6338
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !6342
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !6343
  call void @llvm.dbg.value(metadata i8* %17, metadata !6327, metadata !DIExpression()), !dbg !6330
  %18 = add nuw i32 %14, 1, !dbg !6344
  call void @llvm.dbg.value(metadata i32 %18, metadata !6329, metadata !DIExpression()), !dbg !6330
  %19 = icmp eq i32 %18, %2, !dbg !6345
  br i1 %19, label %20, label %13, !dbg !6346, !llvm.loop !6347

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6330
  ret i32 %21, !dbg !6349
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6350 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6352, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i8* %1, metadata !6353, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 %2, metadata !6354, metadata !DIExpression()), !dbg !6360
  %5 = bitcast i32* %4 to i8*, !dbg !6361
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6361
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6362
  %7 = xor i1 %6, true, !dbg !6364
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6364
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6364
  br i1 %11, label %45, label %12, !dbg !6364

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6365
  %14 = load volatile i32, i32* %13, align 4, !dbg !6365
  %15 = icmp eq i32 %14, 2, !dbg !6367
  br i1 %15, label %16, label %45, !dbg !6368

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6369
  call void @llvm.dbg.value(metadata i32 %17, metadata !6355, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32* %4, metadata !6358, metadata !DIExpression(DW_OP_deref)), !dbg !6360
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6370
  call void @llvm.dbg.value(metadata i32 %18, metadata !6359, metadata !DIExpression()), !dbg !6360
  %19 = icmp eq i32 %18, 0, !dbg !6371
  br i1 %19, label %21, label %20, !dbg !6373

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6374
  unreachable, !dbg !6374

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6376
  call void @llvm.dbg.value(metadata i32 %22, metadata !6358, metadata !DIExpression()), !dbg !6360
  %23 = icmp ult i32 %22, %2, !dbg !6378
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6357, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 0, metadata !6356, metadata !DIExpression()), !dbg !6360
  %25 = icmp eq i32 %24, 0, !dbg !6379
  br i1 %25, label %38, label %28, !dbg !6382

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !6356, metadata !DIExpression()), !dbg !6360
  %27 = icmp eq i32 %34, %24, !dbg !6379
  br i1 %27, label %36, label %28, !dbg !6382, !llvm.loop !6383

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6356, metadata !DIExpression()), !dbg !6360
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6385
  %31 = load i8, i8* %30, align 1, !dbg !6385
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !6387
  call void @llvm.dbg.value(metadata i32 %32, metadata !6359, metadata !DIExpression()), !dbg !6360
  %33 = icmp eq i32 %32, 0, !dbg !6388
  %34 = add nuw i32 %29, 1, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %34, metadata !6356, metadata !DIExpression()), !dbg !6360
  br i1 %33, label %26, label %35, !dbg !6391

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6392
  unreachable, !dbg !6392

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !6394
  br label %38, !dbg !6394

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !6394
  call void @llvm.dbg.value(metadata i32 %39, metadata !6358, metadata !DIExpression()), !dbg !6360
  %40 = icmp eq i32 %24, %39, !dbg !6396
  br i1 %40, label %41, label %45, !dbg !6397

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6398
  call void @llvm.dbg.value(metadata i32 %42, metadata !6359, metadata !DIExpression()), !dbg !6360
  %43 = icmp eq i32 %42, 0, !dbg !6400
  br i1 %43, label %45, label %44, !dbg !6402

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6403
  unreachable, !dbg !6403

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !6360
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6405
  ret i32 %46, !dbg !6405
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6410, metadata !DIExpression()), !dbg !6413
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6414
  br i1 %2, label %3, label %11, !dbg !6416

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6417
  %5 = load volatile i32, i32* %4, align 4, !dbg !6417
  %6 = icmp eq i32 %5, 1, !dbg !6419
  br i1 %6, label %7, label %11, !dbg !6420

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6421
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6421
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6412, metadata !DIExpression()), !dbg !6413
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6422
  call void @llvm.dbg.value(metadata i8 %10, metadata !6411, metadata !DIExpression()), !dbg !6413
  br label %11, !dbg !6423

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6413
  ret i8 %12, !dbg !6424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6429, metadata !DIExpression()), !dbg !6432
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6433
  br i1 %2, label %3, label %11, !dbg !6435

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6436
  %5 = load volatile i32, i32* %4, align 4, !dbg !6436
  %6 = icmp eq i32 %5, 1, !dbg !6438
  br i1 %6, label %7, label %11, !dbg !6439

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6440
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6440
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6431, metadata !DIExpression()), !dbg !6432
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6441
  call void @llvm.dbg.value(metadata i32 %10, metadata !6430, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6442

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6432
  ret i32 %12, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6448, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i8* %1, metadata !6449, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i32 %2, metadata !6450, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i8* %1, metadata !6452, metadata !DIExpression()), !dbg !6453
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6454
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6456
  br i1 %6, label %7, label %19, !dbg !6456

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6457
  %9 = load volatile i32, i32* %8, align 4, !dbg !6457
  %10 = icmp ne i32 %9, 1, !dbg !6459
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6460
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()), !dbg !6453
  br i1 %12, label %19, label %13, !dbg !6460

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6451, metadata !DIExpression()), !dbg !6453
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !6461
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6465
  store i8 %15, i8* %16, align 1, !dbg !6466
  %17 = add nuw i32 %14, 1, !dbg !6467
  call void @llvm.dbg.value(metadata i32 %17, metadata !6451, metadata !DIExpression()), !dbg !6453
  %18 = icmp eq i32 %17, %2, !dbg !6468
  br i1 %18, label %19, label %13, !dbg !6469, !llvm.loop !6470

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6453
  ret i32 %20, !dbg !6472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6473 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i8* %1, metadata !6476, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %2, metadata !6477, metadata !DIExpression()), !dbg !6483
  %5 = bitcast i32* %4 to i8*, !dbg !6484
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6484
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6485
  %7 = xor i1 %6, true, !dbg !6487
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6487
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6487
  br i1 %11, label %44, label %12, !dbg !6487

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6488
  %14 = load volatile i32, i32* %13, align 4, !dbg !6488
  %15 = icmp eq i32 %14, 2, !dbg !6490
  br i1 %15, label %16, label %44, !dbg !6491

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %17, metadata !6478, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32* %4, metadata !6480, metadata !DIExpression(DW_OP_deref)), !dbg !6483
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6493
  call void @llvm.dbg.value(metadata i32 %18, metadata !6482, metadata !DIExpression()), !dbg !6483
  %19 = icmp eq i32 %18, 0, !dbg !6494
  br i1 %19, label %21, label %20, !dbg !6496

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6497
  unreachable, !dbg !6497

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6499
  call void @llvm.dbg.value(metadata i32 %22, metadata !6480, metadata !DIExpression()), !dbg !6483
  %23 = icmp ult i32 %22, %2, !dbg !6501
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6479, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 0, metadata !6481, metadata !DIExpression()), !dbg !6483
  %25 = icmp eq i32 %24, 0, !dbg !6502
  br i1 %25, label %37, label %28, !dbg !6505

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !6481, metadata !DIExpression()), !dbg !6483
  %27 = icmp eq i32 %33, %24, !dbg !6502
  br i1 %27, label %35, label %28, !dbg !6505, !llvm.loop !6506

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6481, metadata !DIExpression()), !dbg !6483
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6508
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !6510
  call void @llvm.dbg.value(metadata i32 %31, metadata !6482, metadata !DIExpression()), !dbg !6483
  %32 = icmp eq i32 %31, 0, !dbg !6511
  %33 = add nuw i32 %29, 1, !dbg !6513
  call void @llvm.dbg.value(metadata i32 %33, metadata !6481, metadata !DIExpression()), !dbg !6483
  br i1 %32, label %26, label %34, !dbg !6514

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6515
  unreachable, !dbg !6515

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !6517
  br label %37, !dbg !6517

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !6517
  call void @llvm.dbg.value(metadata i32 %38, metadata !6480, metadata !DIExpression()), !dbg !6483
  %39 = icmp eq i32 %24, %38, !dbg !6519
  br i1 %39, label %40, label %44, !dbg !6520

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6521
  call void @llvm.dbg.value(metadata i32 %41, metadata !6482, metadata !DIExpression()), !dbg !6483
  %42 = icmp eq i32 %41, 0, !dbg !6523
  br i1 %42, label %44, label %43, !dbg !6525

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6526
  unreachable, !dbg !6526

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !6483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6528
  ret i32 %45, !dbg !6528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6533, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6534, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8* %2, metadata !6535, metadata !DIExpression()), !dbg !6541
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6542
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6544
  br i1 %6, label %7, label %39, !dbg !6544

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6545
  call void @llvm.dbg.value(metadata i32 %8, metadata !6538, metadata !DIExpression()), !dbg !6541
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6546
  %10 = load volatile i32, i32* %9, align 4, !dbg !6546
  %11 = icmp eq i32 %10, 1, !dbg !6548
  br i1 %11, label %12, label %37, !dbg !6549

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6550
  call void @llvm.dbg.value(metadata i32 %13, metadata !6536, metadata !DIExpression()), !dbg !6541
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %14, metadata !6537, metadata !DIExpression()), !dbg !6541
  %15 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6552
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !6553
  %16 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6554
  store i8* %2, i8** %16, align 4, !dbg !6555
  %17 = shl i32 %0, 1, !dbg !6556
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !6557
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !6558
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !6559
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %20, metadata !6539, metadata !DIExpression()), !dbg !6541
  %21 = icmp eq i32 %20, 0, !dbg !6561
  br i1 %21, label %23, label %22, !dbg !6563

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6564
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6566
  unreachable, !dbg !6566

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !6567
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !6568
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !6569
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !6570
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !6571
  call void @llvm.dbg.value(metadata i32 %27, metadata !6539, metadata !DIExpression()), !dbg !6541
  %28 = icmp eq i32 %27, 0, !dbg !6572
  br i1 %28, label %30, label %29, !dbg !6574

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6575
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6577
  unreachable, !dbg !6577

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6578
  %32 = load i32, i32* %31, align 4, !dbg !6578
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !6579
  call void @llvm.dbg.value(metadata i32 %33, metadata !6540, metadata !DIExpression()), !dbg !6541
  %34 = icmp eq i32 %33, 0, !dbg !6580
  br i1 %34, label %36, label %35, !dbg !6582

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6583
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6585
  unreachable, !dbg !6585

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !6586
  store volatile i32 2, i32* %9, align 4, !dbg !6587
  br label %37, !dbg !6588

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6541
  br label %39, !dbg !6589

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !6541
  ret i32 %40, !dbg !6589
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !6590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6592, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %1, metadata !6593, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %1, metadata !6594, metadata !DIExpression()), !dbg !6595
  %3 = load i8, i8* %1, align 4, !dbg !6596, !range !2988
  %4 = icmp eq i8 %3, 0, !dbg !6596
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6598
  %6 = bitcast i8* %5 to i32*, !dbg !6598
  %7 = load i32, i32* %6, align 4, !dbg !6598
  br i1 %4, label %9, label %8, !dbg !6599

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6594, metadata !DIExpression()), !dbg !6595
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !6600
  br label %10, !dbg !6602

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !6603
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6608, metadata !DIExpression()), !dbg !6613
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6614
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !6614
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !6609, metadata !DIExpression()), !dbg !6613
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6615
  call void @llvm.dbg.value(metadata i32 %4, metadata !6610, metadata !DIExpression()), !dbg !6613
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6616
  call void @llvm.dbg.value(metadata i32 %5, metadata !6611, metadata !DIExpression()), !dbg !6613
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6617
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6618
  %7 = load i32, i32* %6, align 4, !dbg !6618
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !6619
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !6620
  call void @llvm.dbg.value(metadata i32 %9, metadata !6612, metadata !DIExpression()), !dbg !6613
  %10 = icmp eq i32 %9, 0, !dbg !6621
  br i1 %10, label %12, label %11, !dbg !6623

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6624
  unreachable, !dbg !6624

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %13, metadata !6612, metadata !DIExpression()), !dbg !6613
  %14 = icmp eq i32 %13, 0, !dbg !6627
  br i1 %14, label %16, label %15, !dbg !6629

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6630
  unreachable, !dbg !6630

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !6632
  call void @llvm.dbg.value(metadata i32 %17, metadata !6612, metadata !DIExpression()), !dbg !6613
  %18 = icmp eq i32 %17, 0, !dbg !6633
  br i1 %18, label %20, label %19, !dbg !6635

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6636
  unreachable, !dbg !6636

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !6638
  call void @llvm.dbg.value(metadata i32 %21, metadata !6612, metadata !DIExpression()), !dbg !6613
  %22 = icmp eq i32 %21, 0, !dbg !6639
  br i1 %22, label %24, label %23, !dbg !6641

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6642
  unreachable, !dbg !6642

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6644
  ret void, !dbg !6645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6646 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6648, metadata !DIExpression()), !dbg !6652
  %3 = bitcast i32* %2 to i8*, !dbg !6653
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6653
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6654
  br i1 %4, label %5, label %16, !dbg !6656

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6657
  %7 = load volatile i32, i32* %6, align 4, !dbg !6657
  %8 = icmp eq i32 %7, 2, !dbg !6659
  br i1 %8, label %9, label %16, !dbg !6660

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6661
  call void @llvm.dbg.value(metadata i32 %10, metadata !6649, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32* %2, metadata !6650, metadata !DIExpression(DW_OP_deref)), !dbg !6652
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6662
  call void @llvm.dbg.value(metadata i32 %11, metadata !6651, metadata !DIExpression()), !dbg !6652
  %12 = icmp eq i32 %11, 0, !dbg !6663
  br i1 %12, label %14, label %13, !dbg !6665

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6666
  unreachable, !dbg !6666

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6668
  call void @llvm.dbg.value(metadata i32 %15, metadata !6650, metadata !DIExpression()), !dbg !6652
  br label %16, !dbg !6669

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6652
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6670
  ret i32 %17, !dbg !6670
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6671 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6673, metadata !DIExpression()), !dbg !6677
  %3 = bitcast i32* %2 to i8*, !dbg !6678
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6678
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6679
  br i1 %4, label %5, label %16, !dbg !6681

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6682
  %7 = load volatile i32, i32* %6, align 4, !dbg !6682
  %8 = icmp eq i32 %7, 2, !dbg !6684
  br i1 %8, label %9, label %16, !dbg !6685

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6686
  call void @llvm.dbg.value(metadata i32 %10, metadata !6674, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i32* %2, metadata !6675, metadata !DIExpression(DW_OP_deref)), !dbg !6677
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %11, metadata !6676, metadata !DIExpression()), !dbg !6677
  %12 = icmp eq i32 %11, 0, !dbg !6688
  br i1 %12, label %14, label %13, !dbg !6690

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6691
  unreachable, !dbg !6691

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6693
  call void @llvm.dbg.value(metadata i32 %15, metadata !6675, metadata !DIExpression()), !dbg !6677
  br label %16, !dbg !6694

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6677
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6695
  ret i32 %17, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6698, metadata !DIExpression()), !dbg !6700
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6701
  br i1 %2, label %3, label %10, !dbg !6703

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6704
  %5 = load volatile i32, i32* %4, align 4, !dbg !6704
  %6 = icmp eq i32 %5, 0, !dbg !6706
  br i1 %6, label %10, label %7, !dbg !6707

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6708
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6708
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6699, metadata !DIExpression()), !dbg !6700
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6709
  br label %10, !dbg !6710

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6700
  ret i32 %11, !dbg !6711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !6712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6716, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i8 %1, metadata !6717, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i8 %2, metadata !6718, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i8 %3, metadata !6719, metadata !DIExpression()), !dbg !6721
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6722
  br i1 %5, label %6, label %13, !dbg !6724

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6725
  %8 = load volatile i32, i32* %7, align 4, !dbg !6725
  %9 = icmp eq i32 %8, 0, !dbg !6727
  br i1 %9, label %13, label %10, !dbg !6728

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6729
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !6729
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !6720, metadata !DIExpression()), !dbg !6721
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !6730
  br label %13, !dbg !6731

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !6721
  ret i32 %14, !dbg !6732
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6737
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6738
  br i1 %2, label %3, label %10, !dbg !6740

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6741
  %5 = load volatile i32, i32* %4, align 4, !dbg !6741
  %6 = icmp eq i32 %5, 0, !dbg !6743
  br i1 %6, label %10, label %7, !dbg !6744

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6745
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6745
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6736, metadata !DIExpression()), !dbg !6737
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6746
  br label %10, !dbg !6747

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6737
  ret i32 %11, !dbg !6748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6749 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6755, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6756, metadata !DIExpression()), !dbg !6767
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !6768
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6768
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !6758, metadata !DIExpression()), !dbg !6769
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6770
  br i1 %5, label %6, label %101, !dbg !6772

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6773
  %8 = load i8*, i8** %7, align 4, !dbg !6773
  %9 = icmp eq i8* %8, null, !dbg !6775
  br i1 %9, label %101, label %10, !dbg !6776

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6777
  %12 = load i8*, i8** %11, align 4, !dbg !6777
  %13 = icmp eq i8* %12, null, !dbg !6778
  br i1 %13, label %101, label %14, !dbg !6779

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6780
  %16 = load i32, i32* %15, align 4, !dbg !6780
  %17 = icmp ugt i32 %16, 131071, !dbg !6782
  br i1 %17, label %101, label %18, !dbg !6783

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6784
  %20 = load i32, i32* %19, align 4, !dbg !6784
  %21 = icmp ugt i32 %20, 131071, !dbg !6785
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !6786
  br i1 %23, label %101, label %24, !dbg !6786

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6787
  %26 = load i32, i32* %25, align 4, !dbg !6787
  %27 = icmp ugt i32 %26, 131071, !dbg !6789
  br i1 %27, label %101, label %28, !dbg !6790

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6791
  %30 = load i32, i32* %29, align 4, !dbg !6791
  %31 = icmp ugt i32 %30, 131071, !dbg !6792
  br i1 %31, label %101, label %32, !dbg !6793

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6794
  %34 = load i32, i32* %33, align 4, !dbg !6794
  %35 = icmp ugt i32 %34, 131071, !dbg !6795
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !6796
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !6796
  br i1 %39, label %101, label %40, !dbg !6796

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6797
  %42 = load volatile i32, i32* %41, align 4, !dbg !6797
  %43 = icmp eq i32 %42, 1, !dbg !6799
  br i1 %43, label %44, label %101, !dbg !6800

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %45, metadata !6764, metadata !DIExpression()), !dbg !6767
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6802
  call void @llvm.dbg.value(metadata i32 %46, metadata !6765, metadata !DIExpression()), !dbg !6767
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !6803
  call void @llvm.dbg.value(metadata i32 %47, metadata !6766, metadata !DIExpression()), !dbg !6767
  %48 = icmp eq i32 %47, 0, !dbg !6804
  br i1 %48, label %50, label %49, !dbg !6806

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6807
  unreachable, !dbg !6807

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !6809
  %52 = ptrtoint i8* %51 to i32, !dbg !6810
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !6811
  store i32 %52, i32* %53, align 4, !dbg !6812
  %54 = load i32, i32* %15, align 4, !dbg !6813
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !6814
  store i32 %54, i32* %55, align 4, !dbg !6815
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !6816
  call void @llvm.dbg.value(metadata i32 %56, metadata !6766, metadata !DIExpression()), !dbg !6767
  %57 = icmp eq i32 %56, 0, !dbg !6817
  br i1 %57, label %59, label %58, !dbg !6819

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6820
  unreachable, !dbg !6820

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !6822
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !6823
  call void @llvm.dbg.value(metadata i32 %61, metadata !6766, metadata !DIExpression()), !dbg !6767
  %62 = icmp eq i32 %61, 0, !dbg !6824
  br i1 %62, label %64, label %63, !dbg !6826

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6827
  unreachable, !dbg !6827

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %65, metadata !6766, metadata !DIExpression()), !dbg !6767
  %66 = icmp eq i32 %65, 0, !dbg !6830
  br i1 %66, label %68, label %67, !dbg !6832

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6833
  unreachable, !dbg !6833

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !6835
  %70 = ptrtoint i8* %69 to i32, !dbg !6836
  store i32 %70, i32* %53, align 4, !dbg !6837
  %71 = load i32, i32* %25, align 4, !dbg !6838
  store i32 %71, i32* %55, align 4, !dbg !6839
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !6840
  call void @llvm.dbg.value(metadata i32 %72, metadata !6766, metadata !DIExpression()), !dbg !6767
  %73 = icmp eq i32 %72, 0, !dbg !6841
  br i1 %73, label %75, label %74, !dbg !6843

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6844
  unreachable, !dbg !6844

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !6846
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !6847
  call void @llvm.dbg.value(metadata i32 %77, metadata !6766, metadata !DIExpression()), !dbg !6767
  %78 = icmp eq i32 %77, 0, !dbg !6848
  br i1 %78, label %80, label %79, !dbg !6850

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6851
  unreachable, !dbg !6851

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !6853
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !6854
  call void @llvm.dbg.value(metadata i32 %82, metadata !6766, metadata !DIExpression()), !dbg !6767
  %83 = icmp eq i32 %82, 0, !dbg !6855
  br i1 %83, label %85, label %84, !dbg !6857

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6858
  unreachable, !dbg !6858

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %86, metadata !6757, metadata !DIExpression()), !dbg !6767
  %87 = load i8*, i8** %7, align 4, !dbg !6861
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !6862
  store i8* %87, i8** %88, align 4, !dbg !6863
  %89 = load i32, i32* %15, align 4, !dbg !6864
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !6865
  store i32 %89, i32* %90, align 4, !dbg !6866
  %91 = load i32, i32* %19, align 4, !dbg !6867
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !6868
  store i32 %91, i32* %92, align 4, !dbg !6869
  %93 = load i32, i32* %33, align 4, !dbg !6870
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !6871
  store i32 %93, i32* %94, align 4, !dbg !6872
  %95 = load i8*, i8** %11, align 4, !dbg !6873
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !6874
  store i8* %95, i8** %96, align 4, !dbg !6875
  %97 = load i32, i32* %25, align 4, !dbg !6876
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !6877
  store i32 %97, i32* %98, align 4, !dbg !6878
  %99 = load i32, i32* %29, align 4, !dbg !6879
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !6880
  store i32 %99, i32* %100, align 4, !dbg !6881
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !6882
  br label %101, !dbg !6883

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !6767
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6884
  ret i32 %102, !dbg !6884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6885 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6944, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %1, metadata !6945, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !6954, metadata !DIExpression()), !dbg !6958
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !6959
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6959
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !6956, metadata !DIExpression()), !dbg !6960
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !6960
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !6960
  store i32 1, i32* %5, align 4, !dbg !6960
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !6960
  store i32 1, i32* %6, align 4, !dbg !6960
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !6960
  store i32 1, i32* %7, align 4, !dbg !6960
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !6960
  store i32 1, i32* %8, align 4, !dbg !6960
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !6960
  store i32 1, i32* %9, align 4, !dbg !6960
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6961
  store volatile i32 0, i32* %10, align 4, !dbg !6962
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6963
  store volatile i32 0, i32* %11, align 4, !dbg !6964
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6965
  store volatile i32 0, i32* %12, align 4, !dbg !6966
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !6967
  br i1 %13, label %14, label %17, !dbg !6969

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !6970
  %16 = mul i32 %15, 1000, !dbg !6972
  call void @llvm.dbg.value(metadata i32 %16, metadata !6946, metadata !DIExpression()), !dbg !6957
  br label %17, !dbg !6973

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !6974
  call void @llvm.dbg.value(metadata i32 %18, metadata !6946, metadata !DIExpression()), !dbg !6957
  %19 = shl i32 %1, 8, !dbg !6975
  %20 = udiv i32 %18, %19, !dbg !6976
  call void @llvm.dbg.value(metadata i32 %20, metadata !6947, metadata !DIExpression()), !dbg !6957
  %21 = mul i32 %18, 10, !dbg !6977
  %22 = udiv i32 %21, %19, !dbg !6978
  %23 = urem i32 %22, 10, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %23, metadata !6948, metadata !DIExpression()), !dbg !6957
  %24 = icmp ne i32 %23, 0, !dbg !6980
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !6982
  %27 = zext i1 %26 to i32, !dbg !6982
  %28 = add i32 %20, %27, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %28, metadata !6947, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %28, metadata !6950, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 undef, metadata !6951, metadata !DIExpression()), !dbg !6957
  br label %29, !dbg !6983

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !6957
  %31 = mul i32 %30, %1, !dbg !6957
  %32 = udiv i32 %18, %31, !dbg !6957
  call void @llvm.dbg.value(metadata i32 %32, metadata !6951, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %30, metadata !6950, metadata !DIExpression()), !dbg !6957
  %33 = icmp ugt i32 %32, 256, !dbg !6984
  %34 = add i32 %30, 1, !dbg !6985
  call void @llvm.dbg.value(metadata i32 %34, metadata !6950, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 undef, metadata !6951, metadata !DIExpression()), !dbg !6957
  br i1 %33, label %29, label %35, !dbg !6983, !llvm.loop !6987

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !6989
  %37 = urem i32 %36, 10, !dbg !6990
  call void @llvm.dbg.value(metadata i32 %37, metadata !6949, metadata !DIExpression()), !dbg !6957
  %38 = add nsw i32 %32, -1, !dbg !6991
  call void @llvm.dbg.value(metadata i32 %38, metadata !6951, metadata !DIExpression()), !dbg !6957
  %39 = add nsw i32 %32, -2, !dbg !6992
  %40 = lshr i32 %39, 1, !dbg !6993
  call void @llvm.dbg.value(metadata i32 %40, metadata !6952, metadata !DIExpression()), !dbg !6957
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6994
  store volatile i32 3, i32* %41, align 4, !dbg !6995
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6996
  %43 = load volatile i32, i32* %42, align 4, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %43, metadata !6953, metadata !DIExpression()), !dbg !6957
  %44 = or i32 %43, 128, !dbg !6997
  store volatile i32 %44, i32* %42, align 4, !dbg !6998
  %45 = and i32 %30, 255, !dbg !6999
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7000
  store volatile i32 %45, i32* %46, align 4, !dbg !7001
  %47 = lshr i32 %30, 8, !dbg !7002
  %48 = and i32 %47, 255, !dbg !7003
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7004
  store volatile i32 %48, i32* %49, align 4, !dbg !7005
  store volatile i32 %43, i32* %42, align 4, !dbg !7006
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !7007
  store volatile i32 %38, i32* %50, align 4, !dbg !7008
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !7009
  store volatile i32 %40, i32* %51, align 4, !dbg !7010
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !7011
  %53 = load i32, i32* %52, align 4, !dbg !7011
  store volatile i32 %53, i32* %11, align 4, !dbg !7012
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !7013
  %55 = load i32, i32* %54, align 4, !dbg !7013
  store volatile i32 %55, i32* %12, align 4, !dbg !7014
  %56 = icmp ugt i32 %1, 2999999, !dbg !7015
  br i1 %56, label %57, label %59, !dbg !7017

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !7018
  store volatile i32 18, i32* %58, align 4, !dbg !7020
  br label %59, !dbg !7021

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !7022
  ret void, !dbg !7022
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !7023 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7027, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 %1, metadata !7028, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 %2, metadata !7029, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 %3, metadata !7030, metadata !DIExpression()), !dbg !7032
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7033
  %6 = load volatile i32, i32* %5, align 4, !dbg !7033
  call void @llvm.dbg.value(metadata i32 %6, metadata !7031, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7032
  store volatile i32 128, i32* %5, align 4, !dbg !7034
  %7 = trunc i32 %6 to i16, !dbg !7035
  %8 = and i16 %7, -4, !dbg !7035
  call void @llvm.dbg.value(metadata i16 %7, metadata !7031, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !7032
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !7036

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !7037
  call void @llvm.dbg.value(metadata i16 %10, metadata !7031, metadata !DIExpression()), !dbg !7032
  br label %15, !dbg !7039

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !7040
  call void @llvm.dbg.value(metadata i16 %12, metadata !7031, metadata !DIExpression()), !dbg !7032
  br label %15, !dbg !7041

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !7042
  call void @llvm.dbg.value(metadata i16 %14, metadata !7031, metadata !DIExpression()), !dbg !7032
  br label %15, !dbg !7043

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !7032
  call void @llvm.dbg.value(metadata i16 %16, metadata !7031, metadata !DIExpression()), !dbg !7032
  %17 = and i16 %16, -61, !dbg !7044
  call void @llvm.dbg.value(metadata i16 %16, metadata !7031, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !7032
  %18 = icmp eq i32 %2, 1, !dbg !7045
  %19 = select i1 %18, i16 4, i16 0, !dbg !7045
  %20 = or i16 %17, %19, !dbg !7045
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !7031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7032
  call void @llvm.dbg.value(metadata i16 %20, metadata !7031, metadata !DIExpression()), !dbg !7032
  %21 = icmp eq i32 %3, 2, !dbg !7046
  %22 = or i16 %20, 16, !dbg !7046
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !7046
  call void @llvm.dbg.value(metadata i16 %23, metadata !7031, metadata !DIExpression()), !dbg !7032
  %24 = zext i16 %23 to i32, !dbg !7047
  store volatile i32 %24, i32* %5, align 4, !dbg !7048
  ret void, !dbg !7049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !7050 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8 %1, metadata !7055, metadata !DIExpression()), !dbg !7057
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !7058

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !7059
  call void @llvm.dbg.value(metadata i32 %5, metadata !7056, metadata !DIExpression()), !dbg !7057
  %6 = and i32 %5, 32, !dbg !7061
  %7 = icmp eq i32 %6, 0, !dbg !7061
  br i1 %7, label %4, label %8, !dbg !7063, !llvm.loop !7064

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7066
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7068
  store volatile i32 %9, i32* %10, align 4, !dbg !7069
  ret void, !dbg !7070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7071 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7075, metadata !DIExpression()), !dbg !7078
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !7079

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !7080
  call void @llvm.dbg.value(metadata i32 %4, metadata !7076, metadata !DIExpression()), !dbg !7078
  %5 = and i32 %4, 1, !dbg !7082
  %6 = icmp eq i32 %5, 0, !dbg !7082
  br i1 %6, label %3, label %7, !dbg !7084, !llvm.loop !7085

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7087
  %9 = load volatile i32, i32* %8, align 4, !dbg !7087
  %10 = trunc i32 %9 to i8, !dbg !7089
  call void @llvm.dbg.value(metadata i8 %10, metadata !7077, metadata !DIExpression()), !dbg !7078
  ret i8 %10, !dbg !7090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7091 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7095, metadata !DIExpression()), !dbg !7098
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7099
  %3 = load volatile i32, i32* %2, align 4, !dbg !7099
  call void @llvm.dbg.value(metadata i32 %3, metadata !7096, metadata !DIExpression()), !dbg !7098
  %4 = and i32 %3, 1, !dbg !7100
  %5 = icmp eq i32 %4, 0, !dbg !7100
  br i1 %5, label %9, label %6, !dbg !7102

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7103
  %8 = load volatile i32, i32* %7, align 4, !dbg !7103
  call void @llvm.dbg.value(metadata i32 %8, metadata !7097, metadata !DIExpression()), !dbg !7098
  br label %9, !dbg !7105

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !7106
  call void @llvm.dbg.value(metadata i32 %10, metadata !7097, metadata !DIExpression()), !dbg !7098
  ret i32 %10, !dbg !7107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7108 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7112, metadata !DIExpression()), !dbg !7115
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7116
  %3 = load volatile i32, i32* %2, align 4, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %3, metadata !7114, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7115
  store volatile i32 191, i32* %2, align 4, !dbg !7117
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7118
  %5 = load volatile i32, i32* %4, align 4, !dbg !7118
  call void @llvm.dbg.value(metadata i32 %5, metadata !7113, metadata !DIExpression()), !dbg !7115
  %6 = and i32 %5, 65343, !dbg !7119
  %7 = or i32 %6, 192, !dbg !7119
  call void @llvm.dbg.value(metadata i32 %5, metadata !7113, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !7115
  store volatile i32 %7, i32* %4, align 4, !dbg !7120
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7121
  store volatile i32 0, i32* %8, align 4, !dbg !7122
  store volatile i32 0, i32* %2, align 4, !dbg !7123
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7124
  store volatile i32 2, i32* %9, align 4, !dbg !7125
  %10 = and i32 %3, 65535, !dbg !7126
  store volatile i32 %10, i32* %2, align 4, !dbg !7127
  ret void, !dbg !7128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !7129 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7133, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i8 %1, metadata !7134, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i8 %2, metadata !7135, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i8 %3, metadata !7136, metadata !DIExpression()), !dbg !7139
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7140
  %6 = load volatile i32, i32* %5, align 4, !dbg !7140
  call void @llvm.dbg.value(metadata i32 %6, metadata !7138, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7139
  store volatile i32 191, i32* %5, align 4, !dbg !7141
  %7 = zext i8 %1 to i32, !dbg !7142
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7143
  store volatile i32 %7, i32* %8, align 4, !dbg !7144
  %9 = zext i8 %2 to i32, !dbg !7145
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7146
  store volatile i32 %9, i32* %10, align 4, !dbg !7147
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7148
  %12 = load volatile i32, i32* %11, align 4, !dbg !7148
  call void @llvm.dbg.value(metadata i32 %12, metadata !7137, metadata !DIExpression()), !dbg !7139
  %13 = and i32 %12, 65509, !dbg !7149
  %14 = or i32 %13, 26, !dbg !7149
  call void @llvm.dbg.value(metadata i32 %12, metadata !7137, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !7139
  store volatile i32 %14, i32* %11, align 4, !dbg !7150
  %15 = zext i8 %3 to i32, !dbg !7151
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7152
  store volatile i32 %15, i32* %16, align 4, !dbg !7153
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7154
  store volatile i32 1, i32* %17, align 4, !dbg !7155
  %18 = and i32 %6, 65535, !dbg !7156
  store volatile i32 %18, i32* %5, align 4, !dbg !7157
  ret void, !dbg !7158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7159 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7161, metadata !DIExpression()), !dbg !7163
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7164
  %3 = load volatile i32, i32* %2, align 4, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %3, metadata !7162, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7163
  store volatile i32 191, i32* %2, align 4, !dbg !7165
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7166
  store volatile i32 0, i32* %4, align 4, !dbg !7167
  store volatile i32 0, i32* %2, align 4, !dbg !7168
  %5 = and i32 %3, 65535, !dbg !7169
  store volatile i32 %5, i32* %2, align 4, !dbg !7170
  ret void, !dbg !7171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7172 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7174, metadata !DIExpression()), !dbg !7177
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7178
  %3 = load volatile i32, i32* %2, align 4, !dbg !7178
  call void @llvm.dbg.value(metadata i32 %3, metadata !7176, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7177
  store volatile i32 191, i32* %2, align 4, !dbg !7179
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7180
  %5 = load volatile i32, i32* %4, align 4, !dbg !7180
  call void @llvm.dbg.value(metadata i32 %5, metadata !7175, metadata !DIExpression()), !dbg !7177
  %6 = and i32 %5, 65519, !dbg !7181
  %7 = or i32 %6, 16, !dbg !7181
  call void @llvm.dbg.value(metadata i32 %5, metadata !7175, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7177
  store volatile i32 %7, i32* %4, align 4, !dbg !7182
  store volatile i32 0, i32* %2, align 4, !dbg !7183
  store volatile i32 135, i32* %4, align 4, !dbg !7184
  %8 = and i32 %3, 65535, !dbg !7185
  store volatile i32 %8, i32* %2, align 4, !dbg !7186
  ret void, !dbg !7187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7188 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7190, metadata !DIExpression()), !dbg !7193
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7194
  %3 = load volatile i32, i32* %2, align 4, !dbg !7194
  call void @llvm.dbg.value(metadata i32 %3, metadata !7192, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7193
  %4 = load volatile i32, i32* %2, align 4, !dbg !7195
  %5 = and i32 %4, -129, !dbg !7195
  store volatile i32 %5, i32* %2, align 4, !dbg !7195
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7196
  %7 = load volatile i32, i32* %6, align 4, !dbg !7196
  call void @llvm.dbg.value(metadata i32 %7, metadata !7191, metadata !DIExpression()), !dbg !7193
  %8 = and i32 %7, 65530, !dbg !7197
  %9 = or i32 %8, 5, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %7, metadata !7191, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !7193
  store volatile i32 %9, i32* %6, align 4, !dbg !7198
  %10 = and i32 %3, 65535, !dbg !7199
  %11 = load volatile i32, i32* %2, align 4, !dbg !7200
  %12 = and i32 %10, %11, !dbg !7200
  store volatile i32 %12, i32* %2, align 4, !dbg !7200
  ret void, !dbg !7201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7202 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7206, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 %1, metadata !7207, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i16 145, metadata !7208, metadata !DIExpression()), !dbg !7209
  %3 = icmp eq i32 %1, 0, !dbg !7210
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !7208, metadata !DIExpression()), !dbg !7209
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7212
  store volatile i32 %4, i32* %5, align 4, !dbg !7213
  ret void, !dbg !7214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7215 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7220, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7224
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7225
  %3 = load volatile i32, i32* %2, align 4, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %3, metadata !7221, metadata !DIExpression()), !dbg !7224
  %4 = and i32 %3, 1, !dbg !7226
  %5 = icmp eq i32 %4, 0, !dbg !7226
  br i1 %5, label %6, label %16, !dbg !7228

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !7229
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !7230

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %16, !dbg !7231

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7233
  %11 = load volatile i32, i32* %10, align 4, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %11, metadata !7222, metadata !DIExpression()), !dbg !7224
  %12 = and i32 %11, 16, !dbg !7234
  %13 = icmp eq i32 %12, 0, !dbg !7234
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %16, !dbg !7236

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !7224
  ret i32 %17, !dbg !7237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7238 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7242, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i32 0, metadata !7244, metadata !DIExpression()), !dbg !7245
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7246
  %3 = load volatile i32, i32* %2, align 4, !dbg !7246
  call void @llvm.dbg.value(metadata i32 %3, metadata !7243, metadata !DIExpression()), !dbg !7245
  %4 = and i32 %3, 14, !dbg !7247
  %5 = icmp eq i32 %4, 0, !dbg !7247
  %6 = sext i1 %5 to i32, !dbg !7249
  call void @llvm.dbg.value(metadata i32 %6, metadata !7244, metadata !DIExpression()), !dbg !7245
  ret i32 %6, !dbg !7250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7251 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7253, metadata !DIExpression()), !dbg !7255
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7256
  %3 = load volatile i32, i32* %2, align 4, !dbg !7256
  call void @llvm.dbg.value(metadata i32 %3, metadata !7254, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7255
  call void @llvm.dbg.value(metadata i32 %3, metadata !7254, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7255
  ret void, !dbg !7257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7258 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7260, metadata !DIExpression()), !dbg !7261
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7262
  store volatile i32 191, i32* %2, align 4, !dbg !7263
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7264
  store volatile i32 16, i32* %3, align 4, !dbg !7265
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7266
  store volatile i32 0, i32* %4, align 4, !dbg !7267
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7268
  store volatile i32 0, i32* %5, align 4, !dbg !7269
  store volatile i32 128, i32* %2, align 4, !dbg !7270
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7271
  store volatile i32 0, i32* %6, align 4, !dbg !7272
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7273
  store volatile i32 0, i32* %7, align 4, !dbg !7274
  store volatile i32 0, i32* %2, align 4, !dbg !7275
  store volatile i32 0, i32* %7, align 4, !dbg !7276
  store volatile i32 0, i32* %3, align 4, !dbg !7277
  store volatile i32 191, i32* %2, align 4, !dbg !7278
  store volatile i32 0, i32* %3, align 4, !dbg !7279
  store volatile i32 0, i32* %2, align 4, !dbg !7280
  store volatile i32 0, i32* %4, align 4, !dbg !7281
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !7282
  store volatile i32 0, i32* %8, align 4, !dbg !7283
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !7284
  store volatile i32 0, i32* %9, align 4, !dbg !7285
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !7286
  store volatile i32 0, i32* %10, align 4, !dbg !7287
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !7288
  store volatile i32 0, i32* %11, align 4, !dbg !7289
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !7290
  store volatile i32 0, i32* %12, align 4, !dbg !7291
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !7292
  store volatile i32 0, i32* %13, align 4, !dbg !7293
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !7294
  store volatile i32 0, i32* %14, align 4, !dbg !7295
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !7296
  store volatile i32 0, i32* %15, align 4, !dbg !7297
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7298
  store volatile i32 0, i32* %16, align 4, !dbg !7299
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7300
  store volatile i32 0, i32* %17, align 4, !dbg !7301
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !7302
  store volatile i32 0, i32* %18, align 4, !dbg !7303
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7304
  store volatile i32 0, i32* %19, align 4, !dbg !7305
  store volatile i32 0, i32* %13, align 4, !dbg !7306
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !7307
  store volatile i32 0, i32* %20, align 4, !dbg !7308
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !7309
  store volatile i32 0, i32* %21, align 4, !dbg !7310
  ret void, !dbg !7311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7314, metadata !DIExpression()), !dbg !7315
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !7316

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !7317
  %5 = and i32 %4, 64, !dbg !7318
  %6 = icmp eq i32 %5, 0, !dbg !7319
  br i1 %6, label %3, label %7, !dbg !7316, !llvm.loop !7320

7:                                                ; preds = %3
  ret void, !dbg !7322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7327, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i32 %1, metadata !7328, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.value(metadata i32 15, metadata !7329, metadata !DIExpression()), !dbg !7330
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !7331

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !7332
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !7335
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !7337
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !7339
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !7330
  call void @llvm.dbg.value(metadata i32 %16, metadata !7329, metadata !DIExpression()), !dbg !7330
  ret i32 %16, !dbg !7341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !7342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !7353, metadata !DIExpression()), !dbg !7354
  %3 = add i32 %0, -8, !dbg !7355
  %4 = icmp ult i32 %3, 8, !dbg !7355
  br i1 %4, label %5, label %12, !dbg !7355

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !7355
  %7 = load i8, i8* %6, align 1, !dbg !7355
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !7355
  %9 = load i32, i32* %8, align 4, !dbg !7355
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !7356
  store i8 %7, i8* %10, align 4, !dbg !7356
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !7356
  store i32 %9, i32* %11, align 4, !dbg !7356
  br label %12, !dbg !7358

12:                                               ; preds = %2, %5
  ret void, !dbg !7358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7359 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7363, metadata !DIExpression()), !dbg !7364
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7365
  store volatile i32 3, i32* %2, align 4, !dbg !7366
  ret void, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !7368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7370, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !7373, metadata !DIExpression()), !dbg !7374
  %2 = add i32 %0, -30, !dbg !7375
  %3 = icmp ult i32 %2, 3, !dbg !7375
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !7375
  call void @llvm.dbg.value(metadata i32 %5, metadata !7371, metadata !DIExpression()), !dbg !7374
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !7376
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !7376
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !7373, metadata !DIExpression()), !dbg !7374
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !7377
  call void @llvm.dbg.value(metadata i32 %8, metadata !7372, metadata !DIExpression()), !dbg !7374
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !7378

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !7379
  br label %13, !dbg !7381

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !7382
  br label %13, !dbg !7383

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !7384
  br label %13, !dbg !7385

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.83, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.84, i32 0, i32 0)) #23, !dbg !7386
  unreachable, !dbg !7386

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !7387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_init(i32 noundef %0, %struct.anon* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7399, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata %struct.anon* %1, metadata !7400, metadata !DIExpression()), !dbg !7404
  %3 = icmp ugt i32 %0, 2, !dbg !7405
  br i1 %3, label %19, label %4, !dbg !7407

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !7408
  %6 = load i32, i32* %5, align 4, !dbg !7408
  %7 = icmp ugt i32 %6, 5, !dbg !7410
  br i1 %7, label %19, label %8, !dbg !7411

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7412
  call void @llvm.dbg.value(metadata i32 %9, metadata !7402, metadata !DIExpression()), !dbg !7413
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* @s_i2c_master_status, i32 0, i32 %0, !dbg !7414
  %11 = load volatile i8, i8* %10, align 1, !dbg !7414
  %12 = icmp eq i8 %11, 1, !dbg !7414
  br i1 %12, label %18, label %13, !dbg !7412

13:                                               ; preds = %8
  store volatile i8 1, i8* %10, align 1, !dbg !7416
  call void @llvm.dbg.value(metadata i32 0, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 undef, metadata !7401, metadata !DIExpression()), !dbg !7404
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !7412
  %14 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_pdn_table to [0 x i32]*), i32 0, i32 %0, !dbg !7418
  %15 = load i32, i32* %14, align 4, !dbg !7418
  %16 = tail call i32 @hal_clock_enable(i32 noundef %15) #20, !dbg !7419
  %17 = load i32, i32* %5, align 4, !dbg !7420
  tail call void @i2c_set_frequency(i32 noundef %0, i32 noundef %17) #20, !dbg !7421
  br label %19, !dbg !7422

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !7401, metadata !DIExpression()), !dbg !7404
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !7412
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_i2c_master_init, i32 0, i32 0), i32 noundef 165, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i32 0, i32 0), i32 noundef %0) #20, !dbg !7423
  br label %19, !dbg !7426

19:                                               ; preds = %4, %2, %13, %18
  %20 = phi i32 [ -3, %18 ], [ 0, %13 ], [ -2, %2 ], [ -1, %4 ], !dbg !7404
  ret i32 %20, !dbg !7427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !7428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7432, metadata !DIExpression()), !dbg !7433
  %2 = icmp ugt i32 %0, 2, !dbg !7434
  br i1 %2, label %18, label %3, !dbg !7436

3:                                                ; preds = %1
  %4 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7437
  %5 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %4, align 4, !dbg !7437
  %6 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %5, i32 0, i32 18, !dbg !7437
  store volatile i16 0, i16* %6, align 2, !dbg !7437
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* @s_i2c_irq_table, i32 0, i32 %0, !dbg !7438
  %8 = load i32, i32* %7, align 4, !dbg !7438
  %9 = tail call i32 @hal_nvic_disable_irq(i32 noundef %8) #20, !dbg !7439
  %10 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %4, align 4, !dbg !7440
  %11 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %10, i32 0, i32 4, !dbg !7440
  store volatile i16 0, i16* %11, align 2, !dbg !7440
  %12 = getelementptr inbounds [3 x void (i8, i32, i8*)*], [3 x void (i8, i32, i8*)*]* @s_i2c_callback, i32 0, i32 %0, !dbg !7441
  store void (i8, i32, i8*)* null, void (i8, i32, i8*)** %12, align 4, !dbg !7442
  %13 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !7443
  store volatile i8 0, i8* %13, align 4, !dbg !7444
  %14 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_pdn_table to [0 x i32]*), i32 0, i32 %0, !dbg !7445
  %15 = load i32, i32* %14, align 4, !dbg !7445
  %16 = tail call i32 @hal_clock_disable(i32 noundef %15) #20, !dbg !7446
  %17 = getelementptr inbounds [3 x i8], [3 x i8]* @s_i2c_master_status, i32 0, i32 %0, !dbg !7447
  store volatile i8 0, i8* %17, align 1, !dbg !7447
  br label %18, !dbg !7449

18:                                               ; preds = %1, %3
  %19 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7433
  ret i32 %19, !dbg !7450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i32 %1, metadata !7456, metadata !DIExpression()), !dbg !7457
  %3 = icmp ugt i32 %0, 2, !dbg !7458
  br i1 %3, label %15, label %4, !dbg !7460

4:                                                ; preds = %2
  %5 = icmp ugt i32 %1, 5, !dbg !7461
  br i1 %5, label %15, label %6, !dbg !7463

6:                                                ; preds = %4
  %7 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7464
  %8 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %7, align 4, !dbg !7464
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %8, i32 0, i32 18, !dbg !7464
  %10 = load volatile i16, i16* %9, align 2, !dbg !7464
  %11 = and i16 %10, 1, !dbg !7464
  %12 = icmp eq i16 %11, 0, !dbg !7466
  br i1 %12, label %14, label %13, !dbg !7467

13:                                               ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__.hal_i2c_master_set_frequency, i32 0, i32 0), i32 noundef 231, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.86, i32 0, i32 0), i32 noundef %0) #20, !dbg !7468
  br label %15, !dbg !7470

14:                                               ; preds = %6
  tail call void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) #20, !dbg !7471
  br label %15, !dbg !7472

15:                                               ; preds = %4, %2, %14, %13
  %16 = phi i32 [ -3, %13 ], [ 0, %14 ], [ -2, %2 ], [ -1, %4 ], !dbg !7457
  ret i32 %16, !dbg !7473
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_register_callback(i32 noundef %0, void (i8, i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !7474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7478, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata void (i8, i32, i8*)* %1, metadata !7479, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i8* %2, metadata !7480, metadata !DIExpression()), !dbg !7481
  %4 = icmp ugt i32 %0, 2, !dbg !7482
  br i1 %4, label %14, label %5, !dbg !7484

5:                                                ; preds = %3
  %6 = icmp eq void (i8, i32, i8*)* %1, null, !dbg !7485
  br i1 %6, label %14, label %7, !dbg !7487

7:                                                ; preds = %5
  %8 = getelementptr inbounds [3 x void (i8, i32, i8*)*], [3 x void (i8, i32, i8*)*]* @s_i2c_callback, i32 0, i32 %0, !dbg !7488
  store void (i8, i32, i8*)* %1, void (i8, i32, i8*)** %8, align 4, !dbg !7489
  %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* @s_i2c_callback_parameter, i32 0, i32 %0, !dbg !7490
  store i8* %2, i8** %9, align 4, !dbg !7491
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* @s_i2c_irq_table, i32 0, i32 %0, !dbg !7492
  %11 = load i32, i32* %10, align 4, !dbg !7492
  %12 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %11, void (i32)* noundef nonnull @hal_i2c_master_isr) #20, !dbg !7493
  %13 = tail call i32 @hal_nvic_enable_irq(i32 noundef %11) #20, !dbg !7494
  br label %14, !dbg !7495

14:                                               ; preds = %5, %3, %7
  %15 = phi i32 [ 0, %7 ], [ -2, %3 ], [ -1, %5 ], !dbg !7481
  ret i32 %15, !dbg !7496
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_i2c_master_isr(i32 noundef %0) #0 !dbg !7497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7499, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 3, metadata !7500, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 0, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 0, metadata !7501, metadata !DIExpression()), !dbg !7502
  br label %2, !dbg !7503

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7501, metadata !DIExpression()), !dbg !7502
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @s_i2c_irq_table, i32 0, i32 %3, !dbg !7505
  %5 = load i32, i32* %4, align 4, !dbg !7505
  %6 = icmp eq i32 %5, %0, !dbg !7509
  br i1 %6, label %11, label %7, !dbg !7510

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !7511
  call void @llvm.dbg.value(metadata i32 %8, metadata !7501, metadata !DIExpression()), !dbg !7502
  %9 = icmp eq i32 %8, 3, !dbg !7512
  br i1 %9, label %10, label %2, !dbg !7503, !llvm.loop !7513

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !7500, metadata !DIExpression()), !dbg !7502
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_i2c_master_isr, i32 0, i32 0), i32 noundef 857, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i32 noundef 3, i32 noundef 3) #20, !dbg !7515
  br label %16, !dbg !7518

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !7500, metadata !DIExpression()), !dbg !7502
  %12 = getelementptr inbounds [3 x void (i8, i32, i8*)*], [3 x void (i8, i32, i8*)*]* @s_i2c_callback, i32 0, i32 %3, !dbg !7519
  %13 = load void (i8, i32, i8*)*, void (i8, i32, i8*)** %12, align 4, !dbg !7519
  %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* @s_i2c_callback_parameter, i32 0, i32 %3, !dbg !7520
  %15 = load i8*, i8** %14, align 4, !dbg !7520
  tail call void @hal_i2c_isr_handler(i32 noundef %3, void (i8, i32, i8*)* noundef %13, i8* noundef %15) #21, !dbg !7521
  br label %16, !dbg !7522

16:                                               ; preds = %11, %10
  ret void, !dbg !7522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_i2c_isr_handler(i32 noundef %0, void (i8, i32, i8*)* noundef readonly %1, i8* noundef %2) local_unnamed_addr #0 !dbg !7523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7527, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata void (i8, i32, i8*)* %1, metadata !7528, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i8* %2, metadata !7529, metadata !DIExpression()), !dbg !7532
  %4 = tail call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !7533
  call void @llvm.dbg.value(metadata i32 %4, metadata !7530, metadata !DIExpression()), !dbg !7532
  %5 = icmp eq i32 %4, 0, !dbg !7534
  br i1 %5, label %8, label %6, !dbg !7536

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_i2c_isr_handler, i32 0, i32 0), i32 noundef 877, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0), i32 noundef %0, i32 noundef %4) #20, !dbg !7537
  %7 = icmp eq i32 %4, -4, !dbg !7539
  br i1 %7, label %18, label %8, !dbg !7541

8:                                                ; preds = %6, %3
  tail call fastcc void @hal_i2c_wait_dma_finish(i32 noundef %0) #21, !dbg !7542
  %9 = icmp eq void (i8, i32, i8*)* %1, null, !dbg !7543
  br i1 %9, label %17, label %10, !dbg !7545

10:                                               ; preds = %8
  %11 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7546
  %12 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %11, align 4, !dbg !7546
  %13 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %12, i32 0, i32 2, !dbg !7546
  %14 = load volatile i16, i16* %13, align 2, !dbg !7546
  %15 = lshr i16 %14, 1, !dbg !7546
  %16 = trunc i16 %15 to i8, !dbg !7546
  tail call void %1(i8 noundef zeroext %16, i32 noundef %4, i8* noundef %2) #20, !dbg !7548
  br label %18, !dbg !7549

17:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_i2c_isr_handler, i32 0, i32 0), i32 noundef 900, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %0) #20, !dbg !7550
  br label %18

18:                                               ; preds = %10, %17, %6
  ret void, !dbg !7552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_i2c_wait_dma_finish(i32 noundef %0) unnamed_addr #0 !dbg !7553 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7557, metadata !DIExpression()), !dbg !7563
  %5 = bitcast i32* %2 to i8*, !dbg !7564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7564
  %6 = bitcast i32* %3 to i8*, !dbg !7564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7564
  %7 = bitcast i32* %4 to i8*, !dbg !7564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7564
  %8 = icmp ugt i32 %0, 1, !dbg !7565
  br i1 %8, label %43, label %9, !dbg !7567

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !7558, metadata !DIExpression(DW_OP_deref)), !dbg !7563
  %10 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #20, !dbg !7568
  %11 = call i32 @save_and_set_interrupt_mask() #20, !dbg !7569
  call void @llvm.dbg.value(metadata i32 %11, metadata !7561, metadata !DIExpression()), !dbg !7570
  %12 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !7571
  %13 = load volatile i8, i8* %12, align 4, !dbg !7571, !range !2988
  %14 = icmp eq i8 %13, 0, !dbg !7571
  br i1 %14, label %17, label %15, !dbg !7573

15:                                               ; preds = %39, %9
  %16 = phi i32 [ %11, %9 ], [ %40, %39 ], !dbg !7569
  call void @restore_interrupt_mask(i32 noundef %16) #20, !dbg !7574
  br label %43, !dbg !7576

17:                                               ; preds = %9, %39
  %18 = phi i32 [ %40, %39 ], [ %11, %9 ]
  call void @llvm.dbg.value(metadata i32* %3, metadata !7559, metadata !DIExpression(DW_OP_deref)), !dbg !7563
  %19 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #20, !dbg !7577
  %20 = load i32, i32* %2, align 4, !dbg !7578
  call void @llvm.dbg.value(metadata i32 %20, metadata !7558, metadata !DIExpression()), !dbg !7563
  %21 = load i32, i32* %3, align 4, !dbg !7579
  call void @llvm.dbg.value(metadata i32 %21, metadata !7559, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i32* %4, metadata !7560, metadata !DIExpression(DW_OP_deref)), !dbg !7563
  %22 = call i32 @hal_gpt_get_duration_count(i32 noundef %20, i32 noundef %21, i32* noundef nonnull %4) #20, !dbg !7580
  %23 = load i32, i32* %4, align 4, !dbg !7581
  call void @llvm.dbg.value(metadata i32 %23, metadata !7560, metadata !DIExpression()), !dbg !7563
  %24 = icmp ugt i32 %23, 20000, !dbg !7583
  br i1 %24, label %25, label %39, !dbg !7584

25:                                               ; preds = %17
  %26 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !7571
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_i2c_wait_dma_finish, i32 0, i32 0), i32 noundef 984, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i32 0, i32 0), i32 noundef %0) #20, !dbg !7585
  call void @restore_interrupt_mask(i32 noundef %18) #20, !dbg !7587
  %27 = bitcast %struct.i2c_dma_callback_parameter_t* %26 to i8*, !dbg !7588
  call void @hal_i2c_master_dma_callback(i32 noundef 0, i8* noundef nonnull %27) #21, !dbg !7589
  %28 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %26, i32 0, i32 0, !dbg !7590
  %29 = load volatile i32, i32* %28, align 4, !dbg !7590
  %30 = icmp eq i32 %29, 11, !dbg !7592
  br i1 %30, label %34, label %31, !dbg !7593

31:                                               ; preds = %25
  %32 = load volatile i32, i32* %28, align 4, !dbg !7594
  %33 = icmp eq i32 %32, 14, !dbg !7595
  br i1 %33, label %34, label %43, !dbg !7596

34:                                               ; preds = %31, %25
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %0, !dbg !7597
  %36 = load volatile i8, i8* %35, align 1, !dbg !7597
  %37 = icmp eq i8 %36, 1, !dbg !7598
  br i1 %37, label %38, label %43, !dbg !7599

38:                                               ; preds = %34
  call void @hal_i2c_master_dma_callback(i32 noundef 0, i8* noundef nonnull %27) #21, !dbg !7600
  br label %43, !dbg !7602

39:                                               ; preds = %17
  call void @restore_interrupt_mask(i32 noundef %18) #20, !dbg !7603
  %40 = call i32 @save_and_set_interrupt_mask() #20, !dbg !7569
  call void @llvm.dbg.value(metadata i32 %40, metadata !7561, metadata !DIExpression()), !dbg !7570
  %41 = load volatile i8, i8* %12, align 4, !dbg !7571, !range !2988
  %42 = icmp eq i8 %41, 0, !dbg !7571
  br i1 %42, label %17, label %15, !dbg !7573

43:                                               ; preds = %31, %34, %38, %15, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7604
  ret void, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_i2c_master_dma_callback(i32 noundef %0, i8* nocapture noundef %1) #0 !dbg !7605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7607, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %1, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %1, metadata !7609, metadata !DIExpression()), !dbg !7610
  %3 = bitcast i8* %1 to i32*, !dbg !7611
  %4 = load i32, i32* %3, align 4, !dbg !7611
  switch i32 %4, label %63 [
    i32 7, label %5
    i32 12, label %5
    i32 9, label %18
    i32 13, label %18
    i32 11, label %31
    i32 14, label %31
  ], !dbg !7613

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !7614
  %7 = load i8, i8* %6, align 1, !dbg !7614
  %8 = zext i8 %7 to i32, !dbg !7616
  %9 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %8, !dbg !7616
  %10 = load i32, i32* %9, align 4, !dbg !7616
  %11 = tail call i32 @pdma_stop(i32 noundef %10) #20, !dbg !7617
  %12 = load i8, i8* %6, align 1, !dbg !7618
  %13 = zext i8 %12 to i32, !dbg !7619
  %14 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %13, !dbg !7619
  %15 = load i32, i32* %14, align 4, !dbg !7619
  %16 = tail call i32 @pdma_deinit(i32 noundef %15) #20, !dbg !7620
  %17 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7621
  store i8 1, i8* %17, align 4, !dbg !7622
  br label %63, !dbg !7623

18:                                               ; preds = %2, %2
  %19 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !7624
  %20 = load i8, i8* %19, align 1, !dbg !7624
  %21 = zext i8 %20 to i32, !dbg !7627
  %22 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %21, !dbg !7627
  %23 = load i32, i32* %22, align 4, !dbg !7627
  %24 = tail call i32 @pdma_stop(i32 noundef %23) #20, !dbg !7628
  %25 = load i8, i8* %19, align 1, !dbg !7629
  %26 = zext i8 %25 to i32, !dbg !7630
  %27 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %26, !dbg !7630
  %28 = load i32, i32* %27, align 4, !dbg !7630
  %29 = tail call i32 @pdma_deinit(i32 noundef %28) #20, !dbg !7631
  %30 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7632
  store i8 1, i8* %30, align 4, !dbg !7633
  br label %63, !dbg !7634

31:                                               ; preds = %2, %2
  %32 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !7635
  %33 = load i8, i8* %32, align 1, !dbg !7635
  %34 = zext i8 %33 to i32, !dbg !7638
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %34, !dbg !7638
  %36 = load volatile i8, i8* %35, align 1, !dbg !7639
  %37 = add i8 %36, 1, !dbg !7639
  store volatile i8 %37, i8* %35, align 1, !dbg !7639
  %38 = load volatile i8, i8* %35, align 1, !dbg !7640
  %39 = icmp eq i8 %38, 2, !dbg !7642
  br i1 %39, label %40, label %63, !dbg !7643

40:                                               ; preds = %31
  %41 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %34, !dbg !7644
  %42 = load i32, i32* %41, align 4, !dbg !7644
  %43 = tail call i32 @pdma_stop(i32 noundef %42) #20, !dbg !7646
  %44 = load i8, i8* %32, align 1, !dbg !7647
  %45 = zext i8 %44 to i32, !dbg !7648
  %46 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %45, !dbg !7648
  %47 = load i32, i32* %46, align 4, !dbg !7648
  %48 = tail call i32 @pdma_stop(i32 noundef %47) #20, !dbg !7649
  %49 = load i8, i8* %32, align 1, !dbg !7650
  %50 = zext i8 %49 to i32, !dbg !7651
  %51 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %50, !dbg !7651
  %52 = load i32, i32* %51, align 4, !dbg !7651
  %53 = tail call i32 @pdma_deinit(i32 noundef %52) #20, !dbg !7652
  %54 = load i8, i8* %32, align 1, !dbg !7653
  %55 = zext i8 %54 to i32, !dbg !7654
  %56 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %55, !dbg !7654
  %57 = load i32, i32* %56, align 4, !dbg !7654
  %58 = tail call i32 @pdma_deinit(i32 noundef %57) #20, !dbg !7655
  %59 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7656
  store i8 1, i8* %59, align 4, !dbg !7657
  %60 = load i8, i8* %32, align 1, !dbg !7658
  %61 = zext i8 %60 to i32, !dbg !7659
  %62 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %61, !dbg !7659
  store volatile i8 0, i8* %62, align 1, !dbg !7660
  br label %63, !dbg !7661

63:                                               ; preds = %2, %18, %31, %40, %5
  ret void, !dbg !7662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7663 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7667, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i8 %1, metadata !7668, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i8* %2, metadata !7669, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata i32 %3, metadata !7670, metadata !DIExpression()), !dbg !7681
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7682
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7682
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7672, metadata !DIExpression()), !dbg !7683
  %7 = icmp ugt i32 %0, 2, !dbg !7684
  br i1 %7, label %30, label %8, !dbg !7686

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7687
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7689
  br i1 %11, label %30, label %12, !dbg !7689

12:                                               ; preds = %8
  %13 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7690
  %14 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !7690
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 18, !dbg !7690
  %16 = load volatile i16, i16* %15, align 2, !dbg !7690
  %17 = and i16 %16, 1, !dbg !7690
  %18 = icmp eq i16 %17, 0, !dbg !7692
  br i1 %18, label %20, label %19, !dbg !7693

19:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_i2c_master_send_polling, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef %0) #20, !dbg !7694
  br label %30, !dbg !7696

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 4, !dbg !7697
  store volatile i16 0, i16* %21, align 2, !dbg !7697
  %22 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7698
  store i32 %3, i32* %22, align 4, !dbg !7699
  %23 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7700
  store i32 0, i32* %23, align 4, !dbg !7701
  %24 = shl i8 %1, 1, !dbg !7702
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 6, i8 noundef zeroext %24, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !7703
  call void @i2c_write_fifo(i32 noundef %0, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !7704
  %25 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !7705
  %26 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %25, i32 0, i32 18, !dbg !7705
  store volatile i16 1, i16* %26, align 2, !dbg !7705
  call fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef 6) #21, !dbg !7706
  %27 = call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %27, metadata !7671, metadata !DIExpression()), !dbg !7681
  %28 = icmp eq i32 %27, 0, !dbg !7708
  br i1 %28, label %30, label %29, !dbg !7710

29:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_i2c_master_send_polling, i32 0, i32 0), i32 noundef 317, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3.88, i32 0, i32 0), i32 noundef %0, i32 noundef %27) #20, !dbg !7711
  br label %30, !dbg !7713

30:                                               ; preds = %20, %8, %4, %29, %19
  %31 = phi i32 [ -3, %19 ], [ -4, %29 ], [ -2, %4 ], [ -1, %8 ], [ 0, %20 ], !dbg !7681
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7714
  ret i32 %31, !dbg !7714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !7715 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7719, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %1, metadata !7720, metadata !DIExpression()), !dbg !7726
  %6 = bitcast i32* %3 to i8*, !dbg !7727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7727
  %7 = bitcast i32* %4 to i8*, !dbg !7727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7727
  %8 = bitcast i32* %5 to i8*, !dbg !7727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7727
  call void @llvm.dbg.value(metadata i32* %3, metadata !7721, metadata !DIExpression(DW_OP_deref)), !dbg !7726
  %9 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #20, !dbg !7728
  %10 = call i32 @save_and_set_interrupt_mask() #20, !dbg !7729
  call void @llvm.dbg.value(metadata i32 %10, metadata !7724, metadata !DIExpression()), !dbg !7730
  %11 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7731
  %12 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %11, align 4, !dbg !7731
  %13 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %12, i32 0, i32 6, !dbg !7731
  %14 = load volatile i16, i16* %13, align 2, !dbg !7731
  %15 = icmp eq i16 %14, 0, !dbg !7733
  br i1 %15, label %16, label %31, !dbg !7734

16:                                               ; preds = %2, %25
  %17 = phi i32 [ %26, %25 ], [ %10, %2 ]
  call void @llvm.dbg.value(metadata i32* %4, metadata !7722, metadata !DIExpression(DW_OP_deref)), !dbg !7726
  %18 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %4) #20, !dbg !7735
  %19 = load i32, i32* %3, align 4, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %19, metadata !7721, metadata !DIExpression()), !dbg !7726
  %20 = load i32, i32* %4, align 4, !dbg !7737
  call void @llvm.dbg.value(metadata i32 %20, metadata !7722, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32* %5, metadata !7723, metadata !DIExpression(DW_OP_deref)), !dbg !7726
  %21 = call i32 @hal_gpt_get_duration_count(i32 noundef %19, i32 noundef %20, i32* noundef nonnull %5) #20, !dbg !7738
  %22 = load i32, i32* %5, align 4, !dbg !7739
  call void @llvm.dbg.value(metadata i32 %22, metadata !7723, metadata !DIExpression()), !dbg !7726
  %23 = icmp ugt i32 %22, 20000, !dbg !7741
  br i1 %23, label %24, label %25, !dbg !7742

24:                                               ; preds = %16
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__FUNCTION__.hal_i2c_master_wait_transaction_finish, i32 0, i32 0), i32 noundef 957, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0), i32 noundef %0, i32 noundef %1) #20, !dbg !7743
  br label %25, !dbg !7745

25:                                               ; preds = %16, %24
  call void @restore_interrupt_mask(i32 noundef %17) #20, !dbg !7746
  %26 = call i32 @save_and_set_interrupt_mask() #20, !dbg !7729
  call void @llvm.dbg.value(metadata i32 %26, metadata !7724, metadata !DIExpression()), !dbg !7730
  %27 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %11, align 4, !dbg !7731
  %28 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %27, i32 0, i32 6, !dbg !7731
  %29 = load volatile i16, i16* %28, align 2, !dbg !7731
  %30 = icmp eq i16 %29, 0, !dbg !7733
  br i1 %30, label %16, label %31, !dbg !7734

31:                                               ; preds = %25, %2
  %32 = phi i32 [ %10, %2 ], [ %26, %25 ], !dbg !7729
  call void @restore_interrupt_mask(i32 noundef %32) #20, !dbg !7747
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7749
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7749
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7749
  ret void, !dbg !7749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_dma(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7750 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  %6 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7752, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.value(metadata i8 %1, metadata !7753, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.value(metadata i8* %2, metadata !7754, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.value(metadata i32 %3, metadata !7755, metadata !DIExpression()), !dbg !7765
  %7 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7766
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #22, !dbg !7766
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7756, metadata !DIExpression()), !dbg !7767
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 0, !dbg !7768
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7768
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %6, metadata !7757, metadata !DIExpression()), !dbg !7769
  %9 = icmp ugt i32 %0, 2, !dbg !7770
  br i1 %9, label %49, label %10, !dbg !7772

10:                                               ; preds = %4
  %11 = icmp eq i8* %2, null, !dbg !7773
  br i1 %11, label %49, label %12, !dbg !7775

12:                                               ; preds = %10
  %13 = icmp ugt i32 %0, 1, !dbg !7776
  br i1 %13, label %49, label %14, !dbg !7778

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7779
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7779
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !7779
  %18 = load volatile i16, i16* %17, align 2, !dbg !7779
  %19 = and i16 %18, 1, !dbg !7779
  %20 = icmp eq i16 %19, 0, !dbg !7781
  br i1 %20, label %22, label %21, !dbg !7782

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_i2c_master_send_dma, i32 0, i32 0), i32 noundef 342, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4.89, i32 0, i32 0), i32 noundef %0) #20, !dbg !7783
  br label %49, !dbg !7785

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !7786
  %24 = load i32, i32* %23, align 4, !dbg !7786
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !7787
  store i8 0, i8* %8, align 4, !dbg !7788
  %26 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 2, !dbg !7789
  store i32 %3, i32* %26, align 4, !dbg !7790
  %27 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 3, !dbg !7791
  store i32 0, i32* %27, align 4, !dbg !7792
  %28 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 1, !dbg !7793
  store i32 0, i32* %28, align 4, !dbg !7794
  %29 = load i32, i32* %23, align 4, !dbg !7795
  %30 = call i32 @pdma_configure(i32 noundef %29, %struct.pdma_config_t* noundef nonnull %6) #20, !dbg !7796
  %31 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !7797
  %32 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %31, i32 0, i32 0, !dbg !7798
  store volatile i32 7, i32* %32, align 4, !dbg !7799
  %33 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !7800
  store volatile i8 0, i8* %33, align 4, !dbg !7801
  %34 = trunc i32 %0 to i8, !dbg !7802
  %35 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !7803
  store volatile i8 %34, i8* %35, align 1, !dbg !7804
  %36 = load i32, i32* %23, align 4, !dbg !7805
  %37 = bitcast %struct.i2c_dma_callback_parameter_t* %31 to i8*, !dbg !7806
  %38 = call i32 @pdma_register_callback(i32 noundef %36, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %37) #20, !dbg !7807
  %39 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7808
  store i32 %3, i32* %39, align 4, !dbg !7809
  %40 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7810
  store i32 0, i32* %40, align 4, !dbg !7811
  %41 = shl i8 %1, 1, !dbg !7812
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 7, i8 noundef zeroext %41, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !7813
  %42 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7814
  %43 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %42, i32 0, i32 4, !dbg !7814
  store volatile i16 31, i16* %43, align 2, !dbg !7814
  %44 = load i32, i32* %23, align 4, !dbg !7815
  %45 = ptrtoint i8* %2 to i32, !dbg !7816
  %46 = call i32 @pdma_start_interrupt(i32 noundef %44, i32 noundef %45) #20, !dbg !7817
  %47 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7818
  %48 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %47, i32 0, i32 18, !dbg !7818
  store volatile i16 1, i16* %48, align 2, !dbg !7818
  br label %49, !dbg !7819

49:                                               ; preds = %12, %10, %4, %22, %21
  %50 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %4 ], [ -1, %10 ], [ -2, %12 ], !dbg !7765
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7820
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #22, !dbg !7820
  ret i32 %50, !dbg !7820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7821 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7825, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8 %1, metadata !7826, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %2, metadata !7827, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %3, metadata !7828, metadata !DIExpression()), !dbg !7831
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7832
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7832
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7830, metadata !DIExpression()), !dbg !7833
  %7 = icmp ugt i32 %0, 2, !dbg !7834
  br i1 %7, label %32, label %8, !dbg !7836

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7837
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7839
  br i1 %11, label %32, label %12, !dbg !7839

12:                                               ; preds = %8
  %13 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7840
  %14 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !7840
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 18, !dbg !7840
  %16 = load volatile i16, i16* %15, align 2, !dbg !7840
  %17 = and i16 %16, 1, !dbg !7840
  %18 = icmp eq i16 %17, 0, !dbg !7842
  br i1 %18, label %20, label %19, !dbg !7843

19:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.hal_i2c_master_receive_polling, i32 0, i32 0), i32 noundef 398, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.90, i32 0, i32 0), i32 noundef %0) #20, !dbg !7844
  br label %32, !dbg !7846

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %14, i32 0, i32 4, !dbg !7847
  store volatile i16 0, i16* %21, align 2, !dbg !7847
  %22 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7848
  store i32 0, i32* %22, align 4, !dbg !7849
  %23 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7850
  store i32 %3, i32* %23, align 4, !dbg !7851
  %24 = shl i8 %1, 1, !dbg !7852
  %25 = or i8 %24, 1, !dbg !7852
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 8, i8 noundef zeroext %25, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !7853
  %26 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %13, align 4, !dbg !7854
  %27 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %26, i32 0, i32 18, !dbg !7854
  store volatile i16 1, i16* %27, align 2, !dbg !7854
  call fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef 8) #21, !dbg !7855
  %28 = call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %28, metadata !7829, metadata !DIExpression()), !dbg !7831
  %29 = icmp eq i32 %28, 0, !dbg !7857
  br i1 %29, label %31, label %30, !dbg !7859

30:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.hal_i2c_master_receive_polling, i32 0, i32 0), i32 noundef 430, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i32 0, i32 0), i32 noundef %0, i32 noundef %28) #20, !dbg !7860
  br label %32, !dbg !7862

31:                                               ; preds = %20
  call void @i2c_read_fifo(i32 noundef %0, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !7863
  br label %32, !dbg !7865

32:                                               ; preds = %8, %4, %31, %30, %19
  %33 = phi i32 [ -3, %19 ], [ -4, %30 ], [ 0, %31 ], [ -2, %4 ], [ -1, %8 ], !dbg !7831
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7866
  ret i32 %33, !dbg !7866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_receive_dma(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7867 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  %6 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7869, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i8 %1, metadata !7870, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i8* %2, metadata !7871, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i32 %3, metadata !7872, metadata !DIExpression()), !dbg !7875
  %7 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7876
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #22, !dbg !7876
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7873, metadata !DIExpression()), !dbg !7877
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 0, !dbg !7878
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7878
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %6, metadata !7874, metadata !DIExpression()), !dbg !7879
  %9 = icmp ugt i32 %0, 2, !dbg !7880
  br i1 %9, label %50, label %10, !dbg !7882

10:                                               ; preds = %4
  %11 = icmp eq i8* %2, null, !dbg !7883
  br i1 %11, label %50, label %12, !dbg !7885

12:                                               ; preds = %10
  %13 = icmp ugt i32 %0, 1, !dbg !7886
  br i1 %13, label %50, label %14, !dbg !7888

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7889
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7889
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !7889
  %18 = load volatile i16, i16* %17, align 2, !dbg !7889
  %19 = and i16 %18, 1, !dbg !7889
  %20 = icmp eq i16 %19, 0, !dbg !7891
  br i1 %20, label %22, label %21, !dbg !7892

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_i2c_master_receive_dma, i32 0, i32 0), i32 noundef 459, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i32 noundef %0) #20, !dbg !7893
  br label %50, !dbg !7895

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !7896
  %24 = load i32, i32* %23, align 4, !dbg !7896
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !7897
  store i8 0, i8* %8, align 4, !dbg !7898
  %26 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 2, !dbg !7899
  store i32 %3, i32* %26, align 4, !dbg !7900
  %27 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 3, !dbg !7901
  store i32 1, i32* %27, align 4, !dbg !7902
  %28 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %6, i32 0, i32 1, !dbg !7903
  store i32 0, i32* %28, align 4, !dbg !7904
  %29 = load i32, i32* %23, align 4, !dbg !7905
  %30 = call i32 @pdma_configure(i32 noundef %29, %struct.pdma_config_t* noundef nonnull %6) #20, !dbg !7906
  %31 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !7907
  %32 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %31, i32 0, i32 0, !dbg !7908
  store volatile i32 9, i32* %32, align 4, !dbg !7909
  %33 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !7910
  store volatile i8 0, i8* %33, align 4, !dbg !7911
  %34 = trunc i32 %0 to i8, !dbg !7912
  %35 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !7913
  store volatile i8 %34, i8* %35, align 1, !dbg !7914
  %36 = load i32, i32* %23, align 4, !dbg !7915
  %37 = bitcast %struct.i2c_dma_callback_parameter_t* %31 to i8*, !dbg !7916
  %38 = call i32 @pdma_register_callback(i32 noundef %36, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %37) #20, !dbg !7917
  %39 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7918
  store i32 0, i32* %39, align 4, !dbg !7919
  %40 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7920
  store i32 %3, i32* %40, align 4, !dbg !7921
  %41 = shl i8 %1, 1, !dbg !7922
  %42 = or i8 %41, 1, !dbg !7922
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 9, i8 noundef zeroext %42, %struct.i2c_transaction_size_t* noundef nonnull %5) #20, !dbg !7923
  %43 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7924
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %43, i32 0, i32 4, !dbg !7924
  store volatile i16 31, i16* %44, align 2, !dbg !7924
  %45 = load i32, i32* %23, align 4, !dbg !7925
  %46 = ptrtoint i8* %2 to i32, !dbg !7926
  %47 = call i32 @pdma_start_interrupt(i32 noundef %45, i32 noundef %46) #20, !dbg !7927
  %48 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !7928
  %49 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %48, i32 0, i32 18, !dbg !7928
  store volatile i16 1, i16* %49, align 2, !dbg !7928
  br label %50, !dbg !7929

50:                                               ; preds = %12, %10, %4, %22, %21
  %51 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %4 ], [ -1, %10 ], [ -2, %12 ], !dbg !7875
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7930
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #22, !dbg !7930
  ret i32 %51, !dbg !7930
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_to_receive_polling(i32 noundef %0, %struct.hal_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7931 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7944, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_to_receive_config_t* %1, metadata !7945, metadata !DIExpression()), !dbg !7948
  %4 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !7949
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !7949
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !7947, metadata !DIExpression()), !dbg !7950
  %5 = icmp ugt i32 %0, 2, !dbg !7951
  br i1 %5, label %49, label %6, !dbg !7953

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !7954
  %8 = load i8*, i8** %7, align 4, !dbg !7954
  %9 = icmp eq i8* %8, null, !dbg !7956
  br i1 %9, label %49, label %10, !dbg !7957

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !7958
  %12 = load i8*, i8** %11, align 4, !dbg !7958
  %13 = icmp eq i8* %12, null, !dbg !7959
  br i1 %13, label %49, label %14, !dbg !7960

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !7961
  %16 = load i32, i32* %15, align 4, !dbg !7961
  %17 = icmp ugt i32 %16, 8, !dbg !7963
  br i1 %17, label %49, label %18, !dbg !7964

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !7965
  %20 = load i32, i32* %19, align 4, !dbg !7965
  %21 = icmp ugt i32 %20, 8, !dbg !7966
  br i1 %21, label %49, label %22, !dbg !7967

22:                                               ; preds = %18
  %23 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !7968
  %24 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %23, align 4, !dbg !7968
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %24, i32 0, i32 18, !dbg !7968
  %26 = load volatile i16, i16* %25, align 2, !dbg !7968
  %27 = and i16 %26, 1, !dbg !7968
  %28 = icmp eq i16 %27, 0, !dbg !7970
  br i1 %28, label %30, label %29, !dbg !7971

29:                                               ; preds = %22
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_polling, i32 0, i32 0), i32 noundef 518, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i32 0, i32 0), i32 noundef %0) #20, !dbg !7972
  br label %49, !dbg !7974

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %24, i32 0, i32 4, !dbg !7975
  store volatile i16 0, i16* %31, align 2, !dbg !7975
  %32 = load i32, i32* %15, align 4, !dbg !7976
  %33 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7977
  store i32 %32, i32* %33, align 4, !dbg !7978
  %34 = load i32, i32* %19, align 4, !dbg !7979
  %35 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7980
  store i32 %34, i32* %35, align 4, !dbg !7981
  %36 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !7982
  %37 = load i8, i8* %36, align 4, !dbg !7982
  %38 = shl i8 %37, 1, !dbg !7982
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 10, i8 noundef zeroext %38, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !7983
  %39 = load i8*, i8** %7, align 4, !dbg !7984
  %40 = load i32, i32* %15, align 4, !dbg !7985
  call void @i2c_write_fifo(i32 noundef %0, i8* noundef %39, i32 noundef %40) #20, !dbg !7986
  %41 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %23, align 4, !dbg !7987
  %42 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %41, i32 0, i32 18, !dbg !7987
  store volatile i16 1, i16* %42, align 2, !dbg !7987
  call fastcc void @hal_i2c_master_wait_transaction_finish(i32 noundef %0, i32 noundef 10) #21, !dbg !7988
  %43 = call i32 @i2c_get_transaction_status(i32 noundef %0) #20, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %43, metadata !7946, metadata !DIExpression()), !dbg !7948
  %44 = icmp eq i32 %43, 0, !dbg !7990
  br i1 %44, label %46, label %45, !dbg !7992

45:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_polling, i32 0, i32 0), i32 noundef 552, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i32 0, i32 0), i32 noundef %0, i32 noundef %43) #20, !dbg !7993
  br label %49, !dbg !7995

46:                                               ; preds = %30
  %47 = load i8*, i8** %11, align 4, !dbg !7996
  %48 = load i32, i32* %19, align 4, !dbg !7998
  call void @i2c_read_fifo(i32 noundef %0, i8* noundef %47, i32 noundef %48) #20, !dbg !7999
  br label %49, !dbg !8000

49:                                               ; preds = %14, %18, %6, %10, %2, %46, %45, %29
  %50 = phi i32 [ -3, %29 ], [ -4, %45 ], [ 0, %46 ], [ -2, %2 ], [ -1, %10 ], [ -1, %6 ], [ -1, %18 ], [ -1, %14 ], !dbg !7948
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !8001
  ret i32 %50, !dbg !8001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_to_receive_dma(i32 noundef %0, %struct.hal_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !8002 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8004, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_to_receive_config_t* %1, metadata !8005, metadata !DIExpression()), !dbg !8008
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !8009
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8009
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !8006, metadata !DIExpression()), !dbg !8010
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !8011
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8011
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !8007, metadata !DIExpression()), !dbg !8012
  %7 = icmp ugt i32 %0, 2, !dbg !8013
  br i1 %7, label %74, label %8, !dbg !8015

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !8016
  %10 = load i8*, i8** %9, align 4, !dbg !8016
  %11 = icmp eq i8* %10, null, !dbg !8018
  br i1 %11, label %74, label %12, !dbg !8019

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !8020
  %14 = load i8*, i8** %13, align 4, !dbg !8020
  %15 = icmp eq i8* %14, null, !dbg !8021
  br i1 %15, label %74, label %16, !dbg !8022

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 1, !dbg !8023
  br i1 %17, label %74, label %18, !dbg !8025

18:                                               ; preds = %16
  %19 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !8026
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !8026
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !8026
  %22 = load volatile i16, i16* %21, align 2, !dbg !8026
  %23 = and i16 %22, 1, !dbg !8026
  %24 = icmp eq i16 %23, 0, !dbg !8028
  br i1 %24, label %26, label %25, !dbg !8029

25:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_dma, i32 0, i32 0), i32 noundef 579, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0), i32 noundef %0) #20, !dbg !8030
  br label %74, !dbg !8032

26:                                               ; preds = %18
  %27 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !8033
  %28 = load i32, i32* %27, align 4, !dbg !8033
  %29 = tail call i32 @pdma_init(i32 noundef %28) #20, !dbg !8034
  store i8 0, i8* %6, align 4, !dbg !8035
  %30 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !8036
  %31 = load i32, i32* %30, align 4, !dbg !8036
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !8037
  store i32 %31, i32* %32, align 4, !dbg !8038
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !8039
  store i32 0, i32* %33, align 4, !dbg !8040
  %34 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !8041
  store i32 0, i32* %34, align 4, !dbg !8042
  %35 = load i32, i32* %27, align 4, !dbg !8043
  %36 = call i32 @pdma_configure(i32 noundef %35, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !8044
  %37 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !8045
  %38 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %37, i32 0, i32 0, !dbg !8046
  store volatile i32 11, i32* %38, align 4, !dbg !8047
  %39 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !8048
  store volatile i8 0, i8* %39, align 4, !dbg !8049
  %40 = trunc i32 %0 to i8, !dbg !8050
  %41 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !8051
  store volatile i8 %40, i8* %41, align 1, !dbg !8052
  %42 = load i32, i32* %27, align 4, !dbg !8053
  %43 = bitcast %struct.i2c_dma_callback_parameter_t* %37 to i8*, !dbg !8054
  %44 = call i32 @pdma_register_callback(i32 noundef %42, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !8055
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !8056
  %46 = load i32, i32* %45, align 4, !dbg !8056
  %47 = call i32 @pdma_init(i32 noundef %46) #20, !dbg !8057
  store i8 0, i8* %6, align 4, !dbg !8058
  %48 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !8059
  %49 = load i32, i32* %48, align 4, !dbg !8059
  store i32 %49, i32* %32, align 4, !dbg !8060
  store i32 1, i32* %33, align 4, !dbg !8061
  store i32 0, i32* %34, align 4, !dbg !8062
  %50 = load i32, i32* %45, align 4, !dbg !8063
  %51 = call i32 @pdma_configure(i32 noundef %50, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !8064
  store volatile i32 11, i32* %38, align 4, !dbg !8065
  store volatile i8 0, i8* %39, align 4, !dbg !8066
  store volatile i8 %40, i8* %41, align 1, !dbg !8067
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %0, !dbg !8068
  store volatile i8 0, i8* %52, align 1, !dbg !8069
  %53 = load i32, i32* %45, align 4, !dbg !8070
  %54 = call i32 @pdma_register_callback(i32 noundef %53, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !8071
  %55 = load i32, i32* %30, align 4, !dbg !8072
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8073
  store i32 %55, i32* %56, align 4, !dbg !8074
  %57 = load i32, i32* %48, align 4, !dbg !8075
  %58 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8076
  store i32 %57, i32* %58, align 4, !dbg !8077
  %59 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_t, %struct.hal_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !8078
  %60 = load i8, i8* %59, align 4, !dbg !8078
  %61 = shl i8 %60, 1, !dbg !8078
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 11, i8 noundef zeroext %61, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !8079
  %62 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !8080
  %63 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %62, i32 0, i32 4, !dbg !8080
  store volatile i16 31, i16* %63, align 2, !dbg !8080
  %64 = load i32, i32* %27, align 4, !dbg !8081
  %65 = load i8*, i8** %9, align 4, !dbg !8082
  %66 = ptrtoint i8* %65 to i32, !dbg !8083
  %67 = call i32 @pdma_start_interrupt(i32 noundef %64, i32 noundef %66) #20, !dbg !8084
  %68 = load i32, i32* %45, align 4, !dbg !8085
  %69 = load i8*, i8** %13, align 4, !dbg !8086
  %70 = ptrtoint i8* %69 to i32, !dbg !8087
  %71 = call i32 @pdma_start_interrupt(i32 noundef %68, i32 noundef %70) #20, !dbg !8088
  %72 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !8089
  %73 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %72, i32 0, i32 18, !dbg !8089
  store volatile i16 1, i16* %73, align 2, !dbg !8089
  br label %74, !dbg !8090

74:                                               ; preds = %16, %8, %12, %2, %26, %25
  %75 = phi i32 [ -3, %25 ], [ 0, %26 ], [ -2, %2 ], [ -1, %12 ], [ -1, %8 ], [ -2, %16 ], !dbg !8008
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8091
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8091
  ret i32 %75, !dbg !8091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_dma_ex(i32 noundef %0, %struct.hal_i2c_send_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !8092 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8104, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_config_t* %1, metadata !8105, metadata !DIExpression()), !dbg !8108
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !8109
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8109
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !8106, metadata !DIExpression()), !dbg !8110
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !8111
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8111
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !8107, metadata !DIExpression()), !dbg !8112
  %7 = icmp ugt i32 %0, 2, !dbg !8113
  br i1 %7, label %59, label %8, !dbg !8115

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 1, !dbg !8116
  %10 = load i8*, i8** %9, align 4, !dbg !8116
  %11 = icmp eq i8* %10, null, !dbg !8118
  br i1 %11, label %59, label %12, !dbg !8119

12:                                               ; preds = %8
  %13 = icmp ugt i32 %0, 1, !dbg !8120
  br i1 %13, label %59, label %14, !dbg !8122

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !8123
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !8123
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !8123
  %18 = load volatile i16, i16* %17, align 2, !dbg !8123
  %19 = and i16 %18, 1, !dbg !8123
  %20 = icmp eq i16 %19, 0, !dbg !8125
  br i1 %20, label %22, label %21, !dbg !8126

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_i2c_master_send_dma_ex, i32 0, i32 0), i32 noundef 659, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i32 0, i32 0), i32 noundef %0) #20, !dbg !8127
  br label %59, !dbg !8129

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !8130
  %24 = load i32, i32* %23, align 4, !dbg !8130
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !8131
  store i8 0, i8* %6, align 4, !dbg !8132
  %26 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 2, !dbg !8133
  %27 = load i32, i32* %26, align 4, !dbg !8133
  %28 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 3, !dbg !8134
  %29 = load i32, i32* %28, align 4, !dbg !8134
  %30 = mul i32 %29, %27, !dbg !8135
  %31 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !8136
  store i32 %30, i32* %31, align 4, !dbg !8137
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !8138
  store i32 0, i32* %32, align 4, !dbg !8139
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !8140
  store i32 0, i32* %33, align 4, !dbg !8141
  %34 = load i32, i32* %23, align 4, !dbg !8142
  %35 = call i32 @pdma_configure(i32 noundef %34, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !8143
  %36 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !8144
  %37 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %36, i32 0, i32 0, !dbg !8145
  store volatile i32 12, i32* %37, align 4, !dbg !8146
  %38 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !8147
  store volatile i8 0, i8* %38, align 4, !dbg !8148
  %39 = trunc i32 %0 to i8, !dbg !8149
  %40 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !8150
  store volatile i8 %39, i8* %40, align 1, !dbg !8151
  %41 = load i32, i32* %23, align 4, !dbg !8152
  %42 = bitcast %struct.i2c_dma_callback_parameter_t* %36 to i8*, !dbg !8153
  %43 = call i32 @pdma_register_callback(i32 noundef %41, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %42) #20, !dbg !8154
  %44 = load i32, i32* %28, align 4, !dbg !8155
  %45 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8156
  store i32 %44, i32* %45, align 4, !dbg !8157
  %46 = load i32, i32* %26, align 4, !dbg !8158
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8159
  store i32 %46, i32* %47, align 4, !dbg !8160
  %48 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 0, !dbg !8161
  %49 = load i8, i8* %48, align 4, !dbg !8161
  %50 = shl i8 %49, 1, !dbg !8161
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 12, i8 noundef zeroext %50, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !8162
  %51 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !8163
  %52 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %51, i32 0, i32 4, !dbg !8163
  store volatile i16 31, i16* %52, align 2, !dbg !8163
  %53 = load i32, i32* %23, align 4, !dbg !8164
  %54 = load i8*, i8** %9, align 4, !dbg !8165
  %55 = ptrtoint i8* %54 to i32, !dbg !8166
  %56 = call i32 @pdma_start_interrupt(i32 noundef %53, i32 noundef %55) #20, !dbg !8167
  %57 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !8168
  %58 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %57, i32 0, i32 18, !dbg !8168
  store volatile i16 1, i16* %58, align 2, !dbg !8168
  br label %59, !dbg !8169

59:                                               ; preds = %12, %8, %2, %22, %21
  %60 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %2 ], [ -1, %8 ], [ -2, %12 ], !dbg !8108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8170
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8170
  ret i32 %60, !dbg !8170
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_receive_dma_ex(i32 noundef %0, %struct.hal_i2c_send_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !8171 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8183, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_config_t* %1, metadata !8184, metadata !DIExpression()), !dbg !8187
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !8188
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8188
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !8185, metadata !DIExpression()), !dbg !8189
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !8190
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8190
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !8186, metadata !DIExpression()), !dbg !8191
  %7 = icmp ugt i32 %0, 2, !dbg !8192
  br i1 %7, label %60, label %8, !dbg !8194

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 1, !dbg !8195
  %10 = load i8*, i8** %9, align 4, !dbg !8195
  %11 = icmp eq i8* %10, null, !dbg !8197
  br i1 %11, label %60, label %12, !dbg !8198

12:                                               ; preds = %8
  %13 = icmp ugt i32 %0, 1, !dbg !8199
  br i1 %13, label %60, label %14, !dbg !8201

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !8202
  %16 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !8202
  %17 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %16, i32 0, i32 18, !dbg !8202
  %18 = load volatile i16, i16* %17, align 2, !dbg !8202
  %19 = and i16 %18, 1, !dbg !8202
  %20 = icmp eq i16 %19, 0, !dbg !8204
  br i1 %20, label %22, label %21, !dbg !8205

21:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.hal_i2c_master_receive_dma_ex, i32 0, i32 0), i32 noundef 718, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i32 0, i32 0), i32 noundef %0) #20, !dbg !8206
  br label %60, !dbg !8208

22:                                               ; preds = %14
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !8209
  %24 = load i32, i32* %23, align 4, !dbg !8209
  %25 = tail call i32 @pdma_init(i32 noundef %24) #20, !dbg !8210
  store i8 0, i8* %6, align 4, !dbg !8211
  %26 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 2, !dbg !8212
  %27 = load i32, i32* %26, align 4, !dbg !8212
  %28 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 3, !dbg !8213
  %29 = load i32, i32* %28, align 4, !dbg !8213
  %30 = mul i32 %29, %27, !dbg !8214
  %31 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !8215
  store i32 %30, i32* %31, align 4, !dbg !8216
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !8217
  store i32 1, i32* %32, align 4, !dbg !8218
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !8219
  store i32 0, i32* %33, align 4, !dbg !8220
  %34 = load i32, i32* %23, align 4, !dbg !8221
  %35 = call i32 @pdma_configure(i32 noundef %34, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !8222
  %36 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !8223
  %37 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %36, i32 0, i32 0, !dbg !8224
  store volatile i32 13, i32* %37, align 4, !dbg !8225
  %38 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !8226
  store volatile i8 0, i8* %38, align 4, !dbg !8227
  %39 = trunc i32 %0 to i8, !dbg !8228
  %40 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !8229
  store volatile i8 %39, i8* %40, align 1, !dbg !8230
  %41 = load i32, i32* %23, align 4, !dbg !8231
  %42 = bitcast %struct.i2c_dma_callback_parameter_t* %36 to i8*, !dbg !8232
  %43 = call i32 @pdma_register_callback(i32 noundef %41, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %42) #20, !dbg !8233
  %44 = load i32, i32* %28, align 4, !dbg !8234
  %45 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8235
  store i32 %44, i32* %45, align 4, !dbg !8236
  %46 = load i32, i32* %26, align 4, !dbg !8237
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8238
  store i32 %46, i32* %47, align 4, !dbg !8239
  %48 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %1, i32 0, i32 0, !dbg !8240
  %49 = load i8, i8* %48, align 4, !dbg !8240
  %50 = shl i8 %49, 1, !dbg !8240
  %51 = or i8 %50, 1, !dbg !8240
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 13, i8 noundef zeroext %51, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !8241
  %52 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !8242
  %53 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %52, i32 0, i32 4, !dbg !8242
  store volatile i16 31, i16* %53, align 2, !dbg !8242
  %54 = load i32, i32* %23, align 4, !dbg !8243
  %55 = load i8*, i8** %9, align 4, !dbg !8244
  %56 = ptrtoint i8* %55 to i32, !dbg !8245
  %57 = call i32 @pdma_start_interrupt(i32 noundef %54, i32 noundef %56) #20, !dbg !8246
  %58 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %15, align 4, !dbg !8247
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %58, i32 0, i32 18, !dbg !8247
  store volatile i16 1, i16* %59, align 2, !dbg !8247
  br label %60, !dbg !8248

60:                                               ; preds = %12, %8, %2, %22, %21
  %61 = phi i32 [ -3, %21 ], [ 0, %22 ], [ -2, %2 ], [ -1, %8 ], [ -2, %12 ], !dbg !8187
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8249
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8249
  ret i32 %61, !dbg !8249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_i2c_master_send_to_receive_dma_ex(i32 noundef %0, %struct.hal_i2c_send_to_receive_config_ex_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !8250 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  %4 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8265, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata %struct.hal_i2c_send_to_receive_config_ex_t* %1, metadata !8266, metadata !DIExpression()), !dbg !8269
  %5 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !8270
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8270
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !8267, metadata !DIExpression()), !dbg !8271
  %6 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 0, !dbg !8272
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8272
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %4, metadata !8268, metadata !DIExpression()), !dbg !8273
  %7 = icmp ugt i32 %0, 2, !dbg !8274
  br i1 %7, label %80, label %8, !dbg !8276

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 1, !dbg !8277
  %10 = load i8*, i8** %9, align 4, !dbg !8277
  %11 = icmp eq i8* %10, null, !dbg !8279
  br i1 %11, label %80, label %12, !dbg !8280

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 2, !dbg !8281
  %14 = load i8*, i8** %13, align 4, !dbg !8281
  %15 = icmp eq i8* %14, null, !dbg !8282
  br i1 %15, label %80, label %16, !dbg !8283

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 1, !dbg !8284
  br i1 %17, label %80, label %18, !dbg !8286

18:                                               ; preds = %16
  %19 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !8287
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !8287
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !8287
  %22 = load volatile i16, i16* %21, align 2, !dbg !8287
  %23 = and i16 %22, 1, !dbg !8287
  %24 = icmp eq i16 %23, 0, !dbg !8289
  br i1 %24, label %26, label %25, !dbg !8290

25:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__FUNCTION__.hal_i2c_master_send_to_receive_dma_ex, i32 0, i32 0), i32 noundef 773, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i32 0, i32 0), i32 noundef %0) #20, !dbg !8291
  br label %80, !dbg !8293

26:                                               ; preds = %18
  %27 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_tx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !8294
  %28 = load i32, i32* %27, align 4, !dbg !8294
  %29 = tail call i32 @pdma_init(i32 noundef %28) #20, !dbg !8295
  store i8 0, i8* %6, align 4, !dbg !8296
  %30 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 4, !dbg !8297
  %31 = load i32, i32* %30, align 4, !dbg !8297
  %32 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 2, !dbg !8298
  store i32 %31, i32* %32, align 4, !dbg !8299
  %33 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 3, !dbg !8300
  store i32 0, i32* %33, align 4, !dbg !8301
  %34 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %4, i32 0, i32 1, !dbg !8302
  store i32 0, i32* %34, align 4, !dbg !8303
  %35 = load i32, i32* %27, align 4, !dbg !8304
  %36 = call i32 @pdma_configure(i32 noundef %35, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !8305
  %37 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, !dbg !8306
  %38 = getelementptr inbounds %struct.i2c_dma_callback_parameter_t, %struct.i2c_dma_callback_parameter_t* %37, i32 0, i32 0, !dbg !8307
  store volatile i32 14, i32* %38, align 4, !dbg !8308
  %39 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 1, !dbg !8309
  store volatile i8 0, i8* %39, align 4, !dbg !8310
  %40 = trunc i32 %0 to i8, !dbg !8311
  %41 = getelementptr inbounds [3 x %struct.i2c_dma_callback_parameter_t], [3 x %struct.i2c_dma_callback_parameter_t]* @s_i2c_dma_parameter, i32 0, i32 %0, i32 2, !dbg !8312
  store volatile i8 %40, i8* %41, align 1, !dbg !8313
  %42 = load i32, i32* %27, align 4, !dbg !8314
  %43 = bitcast %struct.i2c_dma_callback_parameter_t* %37 to i8*, !dbg !8315
  %44 = call i32 @pdma_register_callback(i32 noundef %42, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !8316
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_i2c_rx_dma_channel to [0 x i32]*), i32 0, i32 %0, !dbg !8317
  %46 = load i32, i32* %45, align 4, !dbg !8317
  %47 = call i32 @pdma_init(i32 noundef %46) #20, !dbg !8318
  store i8 0, i8* %6, align 4, !dbg !8319
  %48 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 5, !dbg !8320
  %49 = load i32, i32* %48, align 4, !dbg !8320
  %50 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 6, !dbg !8321
  %51 = load i32, i32* %50, align 4, !dbg !8321
  %52 = mul i32 %51, %49, !dbg !8322
  store i32 %52, i32* %32, align 4, !dbg !8323
  store i32 1, i32* %33, align 4, !dbg !8324
  store i32 0, i32* %34, align 4, !dbg !8325
  %53 = load i32, i32* %45, align 4, !dbg !8326
  %54 = call i32 @pdma_configure(i32 noundef %53, %struct.pdma_config_t* noundef nonnull %4) #20, !dbg !8327
  store volatile i32 14, i32* %38, align 4, !dbg !8328
  store volatile i8 0, i8* %39, align 4, !dbg !8329
  store volatile i8 %40, i8* %41, align 1, !dbg !8330
  %55 = getelementptr inbounds [3 x i8], [3 x i8]* @i2c_dma_callback_count, i32 0, i32 %0, !dbg !8331
  store volatile i8 0, i8* %55, align 1, !dbg !8332
  %56 = load i32, i32* %45, align 4, !dbg !8333
  %57 = call i32 @pdma_register_callback(i32 noundef %56, void (i32, i8*)* noundef nonnull @hal_i2c_master_dma_callback, i8* noundef nonnull %43) #20, !dbg !8334
  %58 = load i32, i32* %30, align 4, !dbg !8335
  %59 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8336
  store i32 %58, i32* %59, align 4, !dbg !8337
  %60 = load i32, i32* %50, align 4, !dbg !8338
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !8339
  store i32 %60, i32* %61, align 4, !dbg !8340
  %62 = load i32, i32* %48, align 4, !dbg !8341
  %63 = add i32 %62, 1, !dbg !8342
  %64 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8343
  store i32 %63, i32* %64, align 4, !dbg !8344
  %65 = getelementptr inbounds %struct.hal_i2c_send_to_receive_config_ex_t, %struct.hal_i2c_send_to_receive_config_ex_t* %1, i32 0, i32 0, !dbg !8345
  %66 = load i8, i8* %65, align 4, !dbg !8345
  %67 = shl i8 %66, 1, !dbg !8345
  call void @i2c_config_hardware(i32 noundef %0, i32 noundef 14, i8 noundef zeroext %67, %struct.i2c_transaction_size_t* noundef nonnull %3) #20, !dbg !8346
  %68 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !8347
  %69 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %68, i32 0, i32 4, !dbg !8347
  store volatile i16 31, i16* %69, align 2, !dbg !8347
  %70 = load i32, i32* %27, align 4, !dbg !8348
  %71 = load i8*, i8** %9, align 4, !dbg !8349
  %72 = ptrtoint i8* %71 to i32, !dbg !8350
  %73 = call i32 @pdma_start_interrupt(i32 noundef %70, i32 noundef %72) #20, !dbg !8351
  %74 = load i32, i32* %45, align 4, !dbg !8352
  %75 = load i8*, i8** %13, align 4, !dbg !8353
  %76 = ptrtoint i8* %75 to i32, !dbg !8354
  %77 = call i32 @pdma_start_interrupt(i32 noundef %74, i32 noundef %76) #20, !dbg !8355
  %78 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %19, align 4, !dbg !8356
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %78, i32 0, i32 18, !dbg !8356
  store volatile i16 1, i16* %79, align 2, !dbg !8356
  br label %80, !dbg !8357

80:                                               ; preds = %16, %8, %12, %2, %26, %25
  %81 = phi i32 [ -3, %25 ], [ 0, %26 ], [ -2, %2 ], [ -1, %12 ], [ -1, %8 ], [ -2, %16 ], !dbg !8269
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !8358
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #22, !dbg !8358
  ret i32 %81, !dbg !8358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_i2c_master_get_running_status(i32 noundef %0, %struct.anon* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !8359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8368, metadata !DIExpression()), !dbg !8370
  call void @llvm.dbg.value(metadata %struct.anon* %1, metadata !8369, metadata !DIExpression()), !dbg !8370
  %3 = icmp ugt i32 %0, 2, !dbg !8371
  br i1 %3, label %12, label %4, !dbg !8373

4:                                                ; preds = %2
  %5 = getelementptr inbounds [0 x %struct.I2C_REGISTER_T*], [0 x %struct.I2C_REGISTER_T*]* bitcast ([4 x %struct.I2C_REGISTER_T*]* @i2c_master_register to [0 x %struct.I2C_REGISTER_T*]*), i32 0, i32 %0, !dbg !8374
  %6 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %5, align 4, !dbg !8374
  %7 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %6, i32 0, i32 18, !dbg !8374
  %8 = load volatile i16, i16* %7, align 2, !dbg !8374
  %9 = and i16 %8, 1, !dbg !8374
  %10 = zext i16 %9 to i32, !dbg !8374
  %11 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !8375
  store i32 %10, i32* %11, align 4, !dbg !8376
  br label %12, !dbg !8377

12:                                               ; preds = %2, %4
  %13 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !8370
  ret i32 %13, !dbg !8378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8383, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 %1, metadata !8384, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 0, metadata !8385, metadata !DIExpression()), !dbg !8391
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8392
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !8392
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !8393
  store volatile i16 0, i16* %5, align 2, !dbg !8394
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !8395

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !8396
  call void @llvm.dbg.value(metadata i32 100, metadata !8385, metadata !DIExpression()), !dbg !8391
  br label %13, !dbg !8398

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !8385, metadata !DIExpression()), !dbg !8391
  br label %13, !dbg !8399

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !8385, metadata !DIExpression()), !dbg !8391
  br label %13, !dbg !8400

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !8385, metadata !DIExpression()), !dbg !8391
  br label %13, !dbg !8401

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !8385, metadata !DIExpression()), !dbg !8391
  br label %13, !dbg !8402

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !8385, metadata !DIExpression()), !dbg !8391
  %12 = shl i32 %1, 1, !dbg !8403
  br label %13, !dbg !8403

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8385, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 1, metadata !8387, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 undef, metadata !8386, metadata !DIExpression()), !dbg !8391
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !8404

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8387, metadata !DIExpression()), !dbg !8391
  %19 = mul i32 %18, %14, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %19, metadata !8390, metadata !DIExpression()), !dbg !8391
  %20 = add i32 %19, -1, !dbg !8409
  %21 = add i32 %20, %16, !dbg !8410
  %22 = udiv i32 %21, %19, !dbg !8411
  call void @llvm.dbg.value(metadata i32 %22, metadata !8386, metadata !DIExpression()), !dbg !8391
  %23 = icmp ult i32 %22, 65, !dbg !8412
  br i1 %23, label %27, label %24, !dbg !8414

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %22, metadata !8386, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 %25, metadata !8387, metadata !DIExpression()), !dbg !8391
  %26 = icmp eq i32 %25, 9, !dbg !8416
  br i1 %26, label %27, label %17, !dbg !8404, !llvm.loop !8417

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !8419
  call void @llvm.dbg.value(metadata i32 %22, metadata !8386, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 %28, metadata !8387, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !8391
  %29 = add i32 %22, 63, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %22, metadata !8386, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !8391
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !8421
  %31 = load volatile i16, i16* %30, align 2, !dbg !8421
  %32 = and i16 %31, -1856, !dbg !8422
  call void @llvm.dbg.value(metadata i16 %32, metadata !8388, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8391
  %33 = shl i32 %28, 8, !dbg !8423
  %34 = add i32 %33, 1792, !dbg !8423
  %35 = and i32 %34, 1792, !dbg !8424
  %36 = and i32 %29, 63, !dbg !8425
  %37 = or i32 %36, %35, !dbg !8426
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !8389, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8391
  %38 = trunc i32 %37 to i16, !dbg !8427
  %39 = or i16 %32, %38, !dbg !8427
  store volatile i16 %39, i16* %30, align 2, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.i2c_transaction_size_t* nocapture noundef readonly %3) local_unnamed_addr #2 !dbg !8430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8443, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 %1, metadata !8444, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i8 %2, metadata !8445, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata %struct.i2c_transaction_size_t* %3, metadata !8446, metadata !DIExpression()), !dbg !8447
  %5 = zext i8 %2 to i16, !dbg !8448
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8449
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !8449
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !8450
  store volatile i16 %5, i16* %8, align 2, !dbg !8451
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !8452
  store volatile i16 1, i16* %9, align 2, !dbg !8452
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !8453
  store volatile i16 31, i16* %10, align 2, !dbg !8453
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !8454

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8455
  store volatile i16 %13, i16* %14, align 2, !dbg !8455
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8455
  store volatile i16 32, i16* %15, align 2, !dbg !8455
  %16 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8458
  %17 = load i32, i32* %16, align 4, !dbg !8458
  %18 = trunc i32 %17 to i16, !dbg !8459
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8460
  store volatile i16 %18, i16* %19, align 2, !dbg !8461
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8462
  store volatile i16 1, i16* %20, align 2, !dbg !8463
  br label %114, !dbg !8464

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8465
  store volatile i16 %23, i16* %24, align 2, !dbg !8465
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8465
  store volatile i16 36, i16* %25, align 2, !dbg !8465
  %26 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8467
  %27 = load i32, i32* %26, align 4, !dbg !8467
  %28 = trunc i32 %27 to i16, !dbg !8468
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8469
  store volatile i16 %28, i16* %29, align 2, !dbg !8470
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8471
  store volatile i16 1, i16* %30, align 2, !dbg !8472
  br label %114, !dbg !8473

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8474
  store volatile i16 %33, i16* %34, align 2, !dbg !8474
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8474
  store volatile i16 32, i16* %35, align 2, !dbg !8474
  %36 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8476
  %37 = load i32, i32* %36, align 4, !dbg !8476
  %38 = trunc i32 %37 to i16, !dbg !8477
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8478
  store volatile i16 %38, i16* %39, align 2, !dbg !8479
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8480
  store volatile i16 1, i16* %40, align 2, !dbg !8481
  br label %114, !dbg !8482

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8483
  store volatile i16 %43, i16* %44, align 2, !dbg !8483
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8483
  store volatile i16 36, i16* %45, align 2, !dbg !8483
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8485
  store volatile i16 1, i16* %46, align 2, !dbg !8486
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8487
  %48 = load i32, i32* %47, align 4, !dbg !8487
  %49 = trunc i32 %48 to i16, !dbg !8488
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8489
  store volatile i16 %49, i16* %50, align 2, !dbg !8490
  br label %114, !dbg !8491

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8492
  store volatile i16 %53, i16* %54, align 2, !dbg !8492
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8492
  store volatile i16 114, i16* %55, align 2, !dbg !8492
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8494
  %57 = load i32, i32* %56, align 4, !dbg !8494
  %58 = trunc i32 %57 to i16, !dbg !8495
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8496
  store volatile i16 %58, i16* %59, align 2, !dbg !8497
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8498
  store volatile i16 2, i16* %60, align 2, !dbg !8499
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8500
  %62 = load i32, i32* %61, align 4, !dbg !8500
  %63 = trunc i32 %62 to i16, !dbg !8501
  br label %114, !dbg !8502

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8503
  store volatile i16 %66, i16* %67, align 2, !dbg !8503
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8503
  store volatile i16 118, i16* %68, align 2, !dbg !8503
  %69 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8505
  %70 = load i32, i32* %69, align 4, !dbg !8505
  %71 = trunc i32 %70 to i16, !dbg !8506
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8507
  store volatile i16 %71, i16* %72, align 2, !dbg !8508
  %73 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8509
  %74 = load i32, i32* %73, align 4, !dbg !8509
  %75 = trunc i32 %74 to i16, !dbg !8510
  %76 = add i16 %75, 1, !dbg !8510
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8511
  store volatile i16 %76, i16* %77, align 2, !dbg !8512
  br label %114, !dbg !8513

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8514
  store volatile i16 3, i16* %79, align 2, !dbg !8515
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8516
  store volatile i16 38, i16* %80, align 2, !dbg !8517
  %81 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8518
  %82 = load i32, i32* %81, align 4, !dbg !8518
  %83 = trunc i32 %82 to i16, !dbg !8519
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8520
  store volatile i16 %83, i16* %84, align 2, !dbg !8521
  %85 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8522
  %86 = load i32, i32* %85, align 4, !dbg !8522
  %87 = trunc i32 %86 to i16, !dbg !8523
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8524
  store volatile i16 %87, i16* %88, align 2, !dbg !8525
  br label %114, !dbg !8526

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8527
  store volatile i16 3, i16* %90, align 2, !dbg !8528
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8529
  store volatile i16 38, i16* %91, align 2, !dbg !8530
  %92 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8531
  %93 = load i32, i32* %92, align 4, !dbg !8531
  %94 = trunc i32 %93 to i16, !dbg !8532
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8533
  store volatile i16 %94, i16* %95, align 2, !dbg !8534
  %96 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8535
  %97 = load i32, i32* %96, align 4, !dbg !8535
  %98 = trunc i32 %97 to i16, !dbg !8536
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8537
  store volatile i16 %98, i16* %99, align 2, !dbg !8538
  br label %114, !dbg !8539

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8540
  store volatile i16 3, i16* %101, align 2, !dbg !8541
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8542
  store volatile i16 118, i16* %102, align 2, !dbg !8543
  %103 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8544
  %104 = load i32, i32* %103, align 4, !dbg !8544
  %105 = trunc i32 %104 to i16, !dbg !8545
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8546
  store volatile i16 %105, i16* %106, align 2, !dbg !8547
  %107 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8548
  %108 = load i32, i32* %107, align 4, !dbg !8548
  %109 = trunc i32 %108 to i16, !dbg !8549
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8550
  store volatile i16 %109, i16* %110, align 2, !dbg !8551
  %111 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !8552
  %112 = load i32, i32* %111, align 4, !dbg !8552
  %113 = trunc i32 %112 to i16, !dbg !8553
  br label %114, !dbg !8554

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !8555
  store volatile i16 %115, i16* %116, align 2, !dbg !8555
  br label %117, !dbg !8556

117:                                              ; preds = %114, %4
  ret void, !dbg !8556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !8557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8561, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %1, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 %2, metadata !8563, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 0, metadata !8564, metadata !DIExpression()), !dbg !8565
  %4 = icmp eq i32 %2, 0, !dbg !8566
  br i1 %4, label %16, label %5, !dbg !8569

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !8569

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8564, metadata !DIExpression()), !dbg !8565
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !8570
  %12 = load i8, i8* %11, align 1, !dbg !8572
  %13 = zext i8 %12 to i16, !dbg !8572
  store volatile i16 %13, i16* %8, align 2, !dbg !8573
  %14 = add nuw i32 %10, 1, !dbg !8574
  call void @llvm.dbg.value(metadata i32 %14, metadata !8564, metadata !DIExpression()), !dbg !8565
  %15 = icmp eq i32 %14, %2, !dbg !8566
  br i1 %15, label %16, label %9, !dbg !8569, !llvm.loop !8575

16:                                               ; preds = %9, %3
  ret void, !dbg !8577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !8578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8582, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i8* %1, metadata !8583, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 %2, metadata !8584, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 0, metadata !8585, metadata !DIExpression()), !dbg !8586
  %4 = icmp eq i32 %2, 0, !dbg !8587
  br i1 %4, label %16, label %5, !dbg !8590

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !8590

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8585, metadata !DIExpression()), !dbg !8586
  %11 = load volatile i16, i16* %8, align 2, !dbg !8591
  %12 = trunc i16 %11 to i8, !dbg !8593
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !8594
  store i8 %12, i8* %13, align 1, !dbg !8595
  %14 = add nuw i32 %10, 1, !dbg !8596
  call void @llvm.dbg.value(metadata i32 %14, metadata !8585, metadata !DIExpression()), !dbg !8586
  %15 = icmp eq i32 %14, %2, !dbg !8587
  br i1 %15, label %16, label %9, !dbg !8590, !llvm.loop !8597

16:                                               ; preds = %9, %3
  ret void, !dbg !8599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #2 !dbg !8600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8604, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata i32 -4, metadata !8606, metadata !DIExpression()), !dbg !8607
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8608
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !8608
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !8609
  %5 = load volatile i16, i16* %4, align 2, !dbg !8609
  call void @llvm.dbg.value(metadata i16 %5, metadata !8605, metadata !DIExpression()), !dbg !8607
  %6 = zext i16 %5 to i32, !dbg !8610
  %7 = and i32 %6, 2, !dbg !8612
  %8 = icmp eq i32 %7, 0, !dbg !8613
  br i1 %8, label %9, label %18, !dbg !8614

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !8615
  %11 = icmp eq i32 %10, 0, !dbg !8617
  br i1 %11, label %12, label %18, !dbg !8618

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !8619
  %14 = icmp eq i32 %13, 0, !dbg !8621
  br i1 %14, label %15, label %18, !dbg !8622

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !8623
  %17 = select i1 %16, i32 0, i32 -4, !dbg !8625
  br label %18, !dbg !8625

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !8607
  call void @llvm.dbg.value(metadata i32 %19, metadata !8606, metadata !DIExpression()), !dbg !8607
  store volatile i16 31, i16* %4, align 2, !dbg !8626
  ret i32 %19, !dbg !8627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1264 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !8628
  br i1 %1, label %9, label %2, !dbg !8630

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1354, metadata !DIExpression()), !dbg !8631
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !8632
  %5 = load i32, i32* %4, align 4, !dbg !8632
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !8637
  %6 = add nuw nsw i32 %3, 1, !dbg !8638
  call void @llvm.dbg.value(metadata i32 %6, metadata !1354, metadata !DIExpression()), !dbg !8631
  %7 = icmp eq i32 %6, 64, !dbg !8639
  br i1 %7, label %8, label %2, !dbg !8640, !llvm.loop !8641

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !8643
  br label %9, !dbg !8644

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !8645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !8646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8650, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.value(metadata i32 %1, metadata !8651, metadata !DIExpression()), !dbg !8652
  %3 = trunc i32 %1 to i8, !dbg !8653
  %4 = shl i8 %3, 2, !dbg !8653
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8656
  store volatile i8 %4, i8* %5, align 1, !dbg !8657
  ret void, !dbg !8658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !8659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8663, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.value(metadata i32 -1, metadata !8664, metadata !DIExpression()), !dbg !8665
  %2 = icmp ugt i32 %0, 63, !dbg !8666
  br i1 %2, label %4, label %3, !dbg !8666

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !8668
  call void @llvm.dbg.value(metadata i32 0, metadata !8664, metadata !DIExpression()), !dbg !8665
  br label %4, !dbg !8670

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8665
  ret i32 %5, !dbg !8671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !8672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8676, metadata !DIExpression()), !dbg !8677
  %2 = and i32 %0, 31, !dbg !8678
  %3 = shl nuw i32 1, %2, !dbg !8679
  %4 = lshr i32 %0, 5, !dbg !8680
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !8681
  store volatile i32 %3, i32* %5, align 4, !dbg !8682
  ret void, !dbg !8683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !8684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8686, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 -1, metadata !8687, metadata !DIExpression()), !dbg !8688
  %2 = icmp ugt i32 %0, 63, !dbg !8689
  br i1 %2, label %4, label %3, !dbg !8689

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !8691
  call void @llvm.dbg.value(metadata i32 0, metadata !8687, metadata !DIExpression()), !dbg !8688
  br label %4, !dbg !8693

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8688
  ret i32 %5, !dbg !8694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !8695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8697, metadata !DIExpression()), !dbg !8698
  %2 = and i32 %0, 31, !dbg !8699
  %3 = shl nuw i32 1, %2, !dbg !8700
  %4 = lshr i32 %0, 5, !dbg !8701
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !8702
  store volatile i32 %3, i32* %5, align 4, !dbg !8703
  ret void, !dbg !8704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !8705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8709, metadata !DIExpression()), !dbg !8711
  call void @llvm.dbg.value(metadata i32 255, metadata !8710, metadata !DIExpression()), !dbg !8711
  %2 = icmp ugt i32 %0, 63, !dbg !8712
  br i1 %2, label %5, label %3, !dbg !8712

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !8714
  call void @llvm.dbg.value(metadata i32 %4, metadata !8710, metadata !DIExpression()), !dbg !8711
  br label %5, !dbg !8716

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !8711
  ret i32 %6, !dbg !8717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !8718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8722, metadata !DIExpression()), !dbg !8723
  %2 = lshr i32 %0, 5, !dbg !8724
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !8725
  %4 = load volatile i32, i32* %3, align 4, !dbg !8725
  %5 = and i32 %0, 31, !dbg !8726
  %6 = lshr i32 %4, %5, !dbg !8727
  %7 = and i32 %6, 1, !dbg !8727
  ret i32 %7, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !8729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8731, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i32 -1, metadata !8732, metadata !DIExpression()), !dbg !8733
  %2 = icmp ugt i32 %0, 63, !dbg !8734
  br i1 %2, label %4, label %3, !dbg !8734

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !8736
  call void @llvm.dbg.value(metadata i32 0, metadata !8732, metadata !DIExpression()), !dbg !8733
  br label %4, !dbg !8738

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8733
  ret i32 %5, !dbg !8739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !8740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8742, metadata !DIExpression()), !dbg !8743
  %2 = and i32 %0, 31, !dbg !8744
  %3 = shl nuw i32 1, %2, !dbg !8745
  %4 = lshr i32 %0, 5, !dbg !8746
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !8747
  store volatile i32 %3, i32* %5, align 4, !dbg !8748
  ret void, !dbg !8749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !8750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8752, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 -1, metadata !8753, metadata !DIExpression()), !dbg !8754
  %2 = icmp ugt i32 %0, 63, !dbg !8755
  br i1 %2, label %4, label %3, !dbg !8755

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !8757
  call void @llvm.dbg.value(metadata i32 0, metadata !8753, metadata !DIExpression()), !dbg !8754
  br label %4, !dbg !8759

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8754
  ret i32 %5, !dbg !8760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !8761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8763, metadata !DIExpression()), !dbg !8764
  %2 = and i32 %0, 31, !dbg !8765
  %3 = shl nuw i32 1, %2, !dbg !8766
  %4 = lshr i32 %0, 5, !dbg !8767
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !8768
  store volatile i32 %3, i32* %5, align 4, !dbg !8769
  ret void, !dbg !8770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !8771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8775, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 %1, metadata !8776, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 -1, metadata !8777, metadata !DIExpression()), !dbg !8778
  %3 = icmp ugt i32 %0, 63, !dbg !8779
  br i1 %3, label %5, label %4, !dbg !8779

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !8781
  call void @llvm.dbg.value(metadata i32 0, metadata !8777, metadata !DIExpression()), !dbg !8778
  br label %5, !dbg !8783

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !8778
  ret i32 %6, !dbg !8784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !8785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 68, metadata !8788, metadata !DIExpression()), !dbg !8789
  %2 = icmp ugt i32 %0, 63, !dbg !8790
  br i1 %2, label %5, label %3, !dbg !8790

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !8792
  call void @llvm.dbg.value(metadata i32 %4, metadata !8788, metadata !DIExpression()), !dbg !8789
  br label %5, !dbg !8794

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !8789
  ret i32 %6, !dbg !8795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !8796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8798, metadata !DIExpression()), !dbg !8799
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8800
  %3 = load volatile i8, i8* %2, align 1, !dbg !8800
  %4 = lshr i8 %3, 2, !dbg !8803
  %5 = zext i8 %4 to i32, !dbg !8803
  ret i32 %5, !dbg !8804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !8805 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8807, metadata !DIExpression()), !dbg !8809
  tail call void @Flash_ReturnReady() #20, !dbg !8810
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %1, metadata !8808, metadata !DIExpression()), !dbg !8809
  %2 = icmp ugt i32 %1, 63, !dbg !8812
  br i1 %2, label %12, label %3, !dbg !8812

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !8814
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !8814
  %6 = icmp eq void (i32)* %5, null, !dbg !8816
  br i1 %6, label %7, label %8, !dbg !8817

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !8807, metadata !DIExpression()), !dbg !8809
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.113, i32 0, i32 0)) #20, !dbg !8818
  br label %12, !dbg !8820

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !8821
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !8823
  store i32 %9, i32* %10, align 4, !dbg !8824
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !8825
  tail call void %11(i32 noundef %1) #20, !dbg !8826
  call void @llvm.dbg.value(metadata i32 0, metadata !8807, metadata !DIExpression()), !dbg !8809
  br label %12, !dbg !8827

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !8809
  ret i32 %13, !dbg !8828
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !8829 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8832
  %2 = and i32 %1, 511, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %2, metadata !8831, metadata !DIExpression()), !dbg !8834
  %3 = add nsw i32 %2, -16, !dbg !8835
  ret i32 %3, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !8837 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8838
  %2 = lshr i32 %1, 22, !dbg !8839
  %3 = and i32 %2, 1, !dbg !8839
  ret i32 %3, !dbg !8840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !8841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8846, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !8847, metadata !DIExpression()), !dbg !8849
  %3 = icmp ugt i32 %0, 63, !dbg !8850
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !8850
  br i1 %5, label %10, label %6, !dbg !8850

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %7, metadata !8848, metadata !DIExpression()), !dbg !8849
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !8853
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !8854
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !8855
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !8856
  store i32 0, i32* %9, align 4, !dbg !8857
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !8858
  br label %10, !dbg !8859

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !8849
  ret i32 %11, !dbg !8860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !8861 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8865, metadata !DIExpression()), !dbg !8866
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8867
  store i32 %2, i32* %0, align 4, !dbg !8868
  ret i32 0, !dbg !8869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !8870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8874, metadata !DIExpression()), !dbg !8875
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8876
  ret i32 0, !dbg !8877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !8878 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !8882, !srcloc !8888
  call void @llvm.dbg.value(metadata i32 %1, metadata !8886, metadata !DIExpression()) #22, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %1, metadata !8880, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i32 1, metadata !8881, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.value(metadata i32 4, metadata !8891, metadata !DIExpression()) #22, !dbg !8894
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !8896, !srcloc !8897
  tail call void asm sideeffect "dmb", ""() #22, !dbg !8898, !srcloc !8901
  tail call void asm sideeffect "isb", ""() #22, !dbg !8902, !srcloc !8905
  ret i32 %1, !dbg !8906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8909, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %0, metadata !8891, metadata !DIExpression()) #22, !dbg !8911
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !8913, !srcloc !8897
  tail call void asm sideeffect "dmb", ""() #22, !dbg !8914, !srcloc !8901
  tail call void asm sideeffect "isb", ""() #22, !dbg !8916, !srcloc !8905
  ret void, !dbg !8918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !8919 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8923
  call void @llvm.dbg.value(metadata i32 %1, metadata !8922, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 0, metadata !8921, metadata !DIExpression()), !dbg !8924
  br label %2, !dbg !8925

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8921, metadata !DIExpression()), !dbg !8924
  tail call fastcc void @NVIC_DisableIRQ.120(i32 noundef %3) #21, !dbg !8927
  %4 = add nuw nsw i32 %3, 1, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %4, metadata !8921, metadata !DIExpression()), !dbg !8924
  %5 = icmp eq i32 %4, 64, !dbg !8931
  br i1 %5, label %6, label %2, !dbg !8925, !llvm.loop !8932

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !8934
  ret void, !dbg !8935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.120(i32 noundef %0) unnamed_addr #2 !dbg !8936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8938, metadata !DIExpression()), !dbg !8939
  %2 = and i32 %0, 31, !dbg !8940
  %3 = shl nuw i32 1, %2, !dbg !8941
  %4 = lshr i32 %0, 5, !dbg !8942
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !8943
  store volatile i32 %3, i32* %5, align 4, !dbg !8944
  ret void, !dbg !8945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !8946 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 0, metadata !8948, metadata !DIExpression()), !dbg !8951
  br label %2, !dbg !8952

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8948, metadata !DIExpression()), !dbg !8951
  tail call fastcc void @NVIC_EnableIRQ.121(i32 noundef %3) #21, !dbg !8954
  %4 = add nuw nsw i32 %3, 1, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %4, metadata !8948, metadata !DIExpression()), !dbg !8951
  %5 = icmp eq i32 %4, 64, !dbg !8958
  br i1 %5, label %6, label %2, !dbg !8952, !llvm.loop !8959

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !8961
  ret void, !dbg !8962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.121(i32 noundef %0) unnamed_addr #2 !dbg !8963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8965, metadata !DIExpression()), !dbg !8966
  %2 = and i32 %0, 31, !dbg !8967
  %3 = shl nuw i32 1, %2, !dbg !8968
  %4 = lshr i32 %0, 5, !dbg !8969
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !8970
  store volatile i32 %3, i32* %5, align 4, !dbg !8971
  ret void, !dbg !8972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !8973 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8975, metadata !DIExpression()), !dbg !8976
  br label %1, !dbg !8977

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8975, metadata !DIExpression()), !dbg !8976
  tail call fastcc void @NVIC_ClearPendingIRQ.122(i32 noundef %2) #21, !dbg !8979
  %3 = add nuw nsw i32 %2, 1, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %3, metadata !8975, metadata !DIExpression()), !dbg !8976
  %4 = icmp eq i32 %3, 64, !dbg !8983
  br i1 %4, label %5, label %1, !dbg !8977, !llvm.loop !8984

5:                                                ; preds = %1
  ret void, !dbg !8986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.122(i32 noundef %0) unnamed_addr #2 !dbg !8987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8989, metadata !DIExpression()), !dbg !8990
  %2 = and i32 %0, 31, !dbg !8991
  %3 = shl nuw i32 1, %2, !dbg !8992
  %4 = lshr i32 %0, 5, !dbg !8993
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !8994
  store volatile i32 %3, i32* %5, align 4, !dbg !8995
  ret void, !dbg !8996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !8997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8999, metadata !DIExpression()), !dbg !9000
  %2 = icmp ugt i32 %0, 63, !dbg !9001
  br i1 %2, label %4, label %3, !dbg !9001

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !9003
  br label %4, !dbg !9004

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !9000
  ret i32 %5, !dbg !9005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !9006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9008, metadata !DIExpression()), !dbg !9009
  %2 = and i32 %0, 511, !dbg !9010
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !9011
  tail call void asm sideeffect "dsb", ""() #22, !dbg !9012, !srcloc !9015
  ret void, !dbg !9016
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !9017 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9018
  %2 = and i32 %1, 511, !dbg !9019
  ret i32 %2, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9025, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %1, metadata !9026, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %0, metadata !9027, metadata !DIExpression()), !dbg !9124
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !9125
  call void @llvm.dbg.value(metadata i32 %3, metadata !9122, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !9124
  call void @llvm.dbg.value(metadata i32 0, metadata !9121, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32* undef, metadata !9123, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 0, metadata !9121, metadata !DIExpression()), !dbg !9124
  %4 = icmp ult i32 %3, 4, !dbg !9126
  br i1 %4, label %20, label %5, !dbg !9129

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9130
  %7 = bitcast i8* %6 to i32**, !dbg !9130
  %8 = load i32*, i32** %7, align 4, !dbg !9130
  call void @llvm.dbg.value(metadata i32* %8, metadata !9123, metadata !DIExpression()), !dbg !9124
  %9 = lshr i32 %3, 2, !dbg !9131
  call void @llvm.dbg.value(metadata i32 %9, metadata !9122, metadata !DIExpression()), !dbg !9124
  br label %10, !dbg !9129

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !9123, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %12, metadata !9121, metadata !DIExpression()), !dbg !9124
  %13 = load i32, i32* %11, align 4, !dbg !9132
  %14 = icmp eq i32 %13, -1, !dbg !9135
  br i1 %14, label %16, label %15, !dbg !9136

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !9137
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.123, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !9137
  unreachable, !dbg !9137

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %17, metadata !9121, metadata !DIExpression()), !dbg !9124
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !9143
  call void @llvm.dbg.value(metadata i32* %18, metadata !9123, metadata !DIExpression()), !dbg !9124
  %19 = icmp eq i32 %17, %9, !dbg !9126
  br i1 %19, label %20, label %10, !dbg !9129, !llvm.loop !9144

20:                                               ; preds = %16, %2
  ret void, !dbg !9146
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !9147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9149, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 0, metadata !9150, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %0, metadata !9150, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !9151
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !9150, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9151
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !9150, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9151
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !9152
  call void @llvm.dbg.value(metadata i32 %2, metadata !9150, metadata !DIExpression()), !dbg !9151
  ret i32 %2, !dbg !9153
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !9154 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9159, metadata !DIExpression()), !dbg !9161
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9162
  %3 = or i32 %2, 512, !dbg !9162
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9162
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %4, metadata !9160, metadata !DIExpression()), !dbg !9161
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !9166

5:                                                ; preds = %1
  br label %7, !dbg !9167

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !9171
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.123, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !9171
  unreachable, !dbg !9171

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !9176
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !9160, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !9161
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !9160, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9161
  br label %10, !dbg !9177

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9178
  %12 = and i32 %11, 8192, !dbg !9179
  %13 = icmp eq i32 %12, 0, !dbg !9180
  br i1 %13, label %10, label %14, !dbg !9177, !llvm.loop !9181

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9183
  %16 = and i32 %15, 256, !dbg !9184
  %17 = icmp eq i32 %16, 0, !dbg !9185
  br i1 %17, label %14, label %18, !dbg !9186, !llvm.loop !9187

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !9176
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !9160, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9161
  %20 = and i32 %19, 16, !dbg !9176
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !9160, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9161
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !9161
  %21 = or i32 %4, %20, !dbg !9189
  %22 = or i32 %21, 8, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %22, metadata !9160, metadata !DIExpression()), !dbg !9161
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9190
  ret void, !dbg !9191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !9192 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !9194, metadata !DIExpression()), !dbg !9196
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %2, metadata !9195, metadata !DIExpression()), !dbg !9196
  %3 = and i32 %2, -268435477, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %3, metadata !9195, metadata !DIExpression()), !dbg !9196
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9199
  br label %4, !dbg !9200

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9201
  %6 = and i32 %5, 2, !dbg !9202
  %7 = icmp eq i32 %6, 0, !dbg !9200
  br i1 %7, label %8, label %4, !dbg !9200, !llvm.loop !9203

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9205
  call void @llvm.dbg.value(metadata i32 %9, metadata !9195, metadata !DIExpression()), !dbg !9196
  %10 = and i32 %9, -9, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %10, metadata !9195, metadata !DIExpression()), !dbg !9196
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9207
  br label %11, !dbg !9208

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9209
  %13 = and i32 %12, 8, !dbg !9210
  %14 = icmp eq i32 %13, 0, !dbg !9208
  br i1 %14, label %15, label %11, !dbg !9208, !llvm.loop !9211

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9213, !range !2988
  %17 = icmp eq i8 %16, 0, !dbg !9215
  br i1 %17, label %18, label %21, !dbg !9216

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9217
  %20 = and i32 %19, -513, !dbg !9217
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9217
  br label %21, !dbg !9221

21:                                               ; preds = %18, %15
  ret void, !dbg !9222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !9223 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9227, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i32 0, metadata !9228, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i32 0, metadata !9229, metadata !DIExpression()), !dbg !9230
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9231
  call void @llvm.dbg.value(metadata i32 %2, metadata !9228, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i32 %2, metadata !9228, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !9230
  %3 = icmp eq i16 %0, 1, !dbg !9232
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !9234
  %5 = or i32 %2, %4, !dbg !9234
  call void @llvm.dbg.value(metadata i32 %5, metadata !9228, metadata !DIExpression()), !dbg !9230
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9235
  br label %6, !dbg !9236

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9237
  %8 = and i32 %7, 2, !dbg !9238
  %9 = icmp eq i32 %8, 0, !dbg !9239
  br i1 %9, label %6, label %10, !dbg !9236, !llvm.loop !9240

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9242
  %12 = and i32 %11, 1, !dbg !9243
  %13 = icmp eq i32 %12, 0, !dbg !9244
  br i1 %13, label %14, label %10, !dbg !9244, !llvm.loop !9245

14:                                               ; preds = %10
  ret i32 0, !dbg !9247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !9248 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9250, metadata !DIExpression()), !dbg !9251
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !9252
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !9253
  ret void, !dbg !9254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !9255 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9259, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 %1, metadata !9260, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 %1, metadata !9261, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i8 0, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 0, metadata !9262, metadata !DIExpression()), !dbg !9264
  %3 = icmp eq i32 %1, 0, !dbg !9265
  br i1 %3, label %16, label %4, !dbg !9268

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 %6, metadata !9262, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 %7, metadata !9261, metadata !DIExpression()), !dbg !9264
  %8 = shl i32 %6, 8, !dbg !9269
  %9 = and i32 %7, 255, !dbg !9271
  %10 = or i32 %8, %9, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %10, metadata !9262, metadata !DIExpression()), !dbg !9264
  %11 = lshr i32 %7, 8, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %11, metadata !9261, metadata !DIExpression()), !dbg !9264
  %12 = add nuw nsw i8 %5, 1, !dbg !9274
  call void @llvm.dbg.value(metadata i8 %12, metadata !9263, metadata !DIExpression()), !dbg !9264
  %13 = icmp ult i32 %7, 256, !dbg !9265
  br i1 %13, label %14, label %4, !dbg !9268, !llvm.loop !9275

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !9277
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !9279
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9280
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9281
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9282
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !9283
  br label %16, !dbg !9284

16:                                               ; preds = %2, %14
  ret void, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !9286 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9290, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i8 %1, metadata !9291, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %2, metadata !9292, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %3, metadata !9293, metadata !DIExpression()), !dbg !9296
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %5, metadata !9295, metadata !DIExpression()), !dbg !9296
  %6 = icmp eq i32 %3, 3, !dbg !9298
  br i1 %6, label %7, label %11, !dbg !9300

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !9301
  %9 = zext i8 %1 to i32, !dbg !9303
  %10 = or i32 %8, %9, !dbg !9304
  call void @llvm.dbg.value(metadata i32 %10, metadata !9294, metadata !DIExpression()), !dbg !9296
  br label %16, !dbg !9305

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !9306
  %13 = zext i8 %1 to i32, !dbg !9308
  %14 = or i32 %12, %13, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %14, metadata !9294, metadata !DIExpression()), !dbg !9296
  %15 = lshr i32 %5, 24, !dbg !9310
  call void @llvm.dbg.value(metadata i32 %15, metadata !9295, metadata !DIExpression()), !dbg !9296
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !9311
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !9296
  call void @llvm.dbg.value(metadata i32 %18, metadata !9295, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %17, metadata !9294, metadata !DIExpression()), !dbg !9296
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9312
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9313
  %19 = add i32 %3, 1, !dbg !9314
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9315
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9316
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !9317
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !9318
  ret void, !dbg !9319
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !9320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9324, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.value(metadata i32 %1, metadata !9325, metadata !DIExpression()), !dbg !9326
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !9327
  %4 = and i32 %3, -256, !dbg !9328
  %5 = and i32 %0, 255, !dbg !9329
  %6 = or i32 %4, %5, !dbg !9330
  ret i32 %6, !dbg !9331
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !9332 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9337, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 %1, metadata !9338, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i8** %2, metadata !9339, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32* %3, metadata !9340, metadata !DIExpression()), !dbg !9352
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !9353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9353
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !9341, metadata !DIExpression()), !dbg !9354
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %7, metadata !9350, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !9349, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9352
  %8 = lshr i32 %7, 24, !dbg !9356
  call void @llvm.dbg.value(metadata i32 %8, metadata !9350, metadata !DIExpression()), !dbg !9352
  %9 = trunc i32 %8 to i8, !dbg !9357
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !9358
  store i8 %9, i8* %6, align 4, !dbg !9359
  call void @llvm.dbg.value(metadata i32 1, metadata !9351, metadata !DIExpression()), !dbg !9352
  %11 = load i8*, i8** %2, align 4, !dbg !9360
  br label %12, !dbg !9364

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !9360
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9351, metadata !DIExpression()), !dbg !9352
  %15 = load i8, i8* %13, align 1, !dbg !9365
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !9366
  store i8 %15, i8* %16, align 1, !dbg !9367
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9368
  store i8* %17, i8** %2, align 4, !dbg !9368
  %18 = add nuw nsw i32 %14, 1, !dbg !9369
  call void @llvm.dbg.value(metadata i32 %18, metadata !9351, metadata !DIExpression()), !dbg !9352
  %19 = icmp eq i32 %18, 4, !dbg !9370
  br i1 %19, label %20, label %12, !dbg !9364, !llvm.loop !9371

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !9373
  %22 = load i32, i32* %21, align 4, !dbg !9373
  call void @llvm.dbg.value(metadata i32 %22, metadata !9350, metadata !DIExpression()), !dbg !9352
  %23 = load i32, i32* %3, align 4, !dbg !9374
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !9375
  %25 = shl i32 %7, 8, !dbg !9376
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !9349, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !9352
  %26 = and i32 %0, 255, !dbg !9377
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !9349, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !9352
  %27 = or i32 %25, %26, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %27, metadata !9349, metadata !DIExpression()), !dbg !9352
  store i32 %24, i32* %3, align 4, !dbg !9379
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9381
  ret i32 %27, !dbg !9382
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !9383 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9387, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %1, metadata !9388, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !9394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9394
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !9392, metadata !DIExpression()), !dbg !9395
  %6 = add i32 %0, -1610348544, !dbg !9396
  call void @llvm.dbg.value(metadata i32 %6, metadata !9387, metadata !DIExpression()), !dbg !9393
  %7 = ptrtoint i8* %1 to i32, !dbg !9397
  %8 = and i32 %7, 3, !dbg !9399
  %9 = icmp eq i32 %8, 0, !dbg !9400
  br i1 %9, label %10, label %23, !dbg !9401

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %6, metadata !9387, metadata !DIExpression()), !dbg !9393
  %11 = icmp sgt i32 %2, 0, !dbg !9402
  br i1 %11, label %12, label %72, !dbg !9406

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %14, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %15, metadata !9387, metadata !DIExpression()), !dbg !9393
  %16 = bitcast i8* %13 to i32*, !dbg !9407
  %17 = load i32, i32* %16, align 4, !dbg !9407
  %18 = inttoptr i32 %15 to i32*, !dbg !9407
  store volatile i32 %17, i32* %18, align 4, !dbg !9407
  %19 = add i32 %15, 4, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %19, metadata !9387, metadata !DIExpression()), !dbg !9393
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !9410
  call void @llvm.dbg.value(metadata i8* %20, metadata !9391, metadata !DIExpression()), !dbg !9393
  %21 = add nsw i32 %14, -4, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %21, metadata !9389, metadata !DIExpression()), !dbg !9393
  %22 = icmp ugt i32 %14, 4, !dbg !9402
  br i1 %22, label %12, label %72, !dbg !9406, !llvm.loop !9412

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !9414
  %25 = icmp eq i32 %24, 0, !dbg !9416
  call void @llvm.dbg.value(metadata i8* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %6, metadata !9387, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %6, metadata !9387, metadata !DIExpression()), !dbg !9393
  %26 = icmp sgt i32 %2, 0, !dbg !9417
  br i1 %25, label %31, label %27, !dbg !9418

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !9419

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !9419

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !9422

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !9422

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %39, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %40, metadata !9387, metadata !DIExpression()), !dbg !9393
  %41 = bitcast i8* %38 to i16*, !dbg !9425
  %42 = load i16, i16* %41, align 2, !dbg !9425
  store i16 %42, i16* %34, align 4, !dbg !9428
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !9429
  %44 = bitcast i8* %43 to i16*, !dbg !9429
  %45 = load i16, i16* %44, align 2, !dbg !9430
  store i16 %45, i16* %35, align 2, !dbg !9431
  %46 = load i32, i32* %36, align 4, !dbg !9432
  %47 = inttoptr i32 %40 to i32*, !dbg !9432
  store volatile i32 %46, i32* %47, align 4, !dbg !9432
  %48 = add i32 %40, 4, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %48, metadata !9387, metadata !DIExpression()), !dbg !9393
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !9434
  call void @llvm.dbg.value(metadata i8* %49, metadata !9391, metadata !DIExpression()), !dbg !9393
  %50 = add nsw i32 %39, -4, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %50, metadata !9389, metadata !DIExpression()), !dbg !9393
  %51 = icmp ugt i32 %39, 4, !dbg !9436
  br i1 %51, label %37, label %72, !dbg !9422, !llvm.loop !9437

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %54, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %55, metadata !9387, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %53, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 0, metadata !9390, metadata !DIExpression()), !dbg !9393
  br label %56, !dbg !9439

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %58, metadata !9390, metadata !DIExpression()), !dbg !9393
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !9443
  call void @llvm.dbg.value(metadata i8* %59, metadata !9391, metadata !DIExpression()), !dbg !9393
  %60 = load i8, i8* %57, align 1, !dbg !9446
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !9447
  store i8 %60, i8* %61, align 1, !dbg !9448
  %62 = add nuw nsw i32 %58, 1, !dbg !9449
  call void @llvm.dbg.value(metadata i32 %62, metadata !9390, metadata !DIExpression()), !dbg !9393
  %63 = icmp ult i32 %58, 3, !dbg !9450
  %64 = icmp ult i32 %62, %54, !dbg !9451
  %65 = select i1 %63, i1 %64, i1 false, !dbg !9451
  br i1 %65, label %56, label %66, !dbg !9439, !llvm.loop !9452

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !9454
  %68 = inttoptr i32 %55 to i32*, !dbg !9454
  store volatile i32 %67, i32* %68, align 4, !dbg !9454
  %69 = add i32 %55, 4, !dbg !9455
  call void @llvm.dbg.value(metadata i32 %69, metadata !9387, metadata !DIExpression()), !dbg !9393
  %70 = add nsw i32 %54, -4, !dbg !9456
  call void @llvm.dbg.value(metadata i8* %59, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %70, metadata !9389, metadata !DIExpression()), !dbg !9393
  %71 = icmp sgt i32 %54, 4, !dbg !9457
  br i1 %71, label %52, label %72, !dbg !9419, !llvm.loop !9458

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !9460
  ret void, !dbg !9460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9461 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !9465, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i8* %1, metadata !9466, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i8* %2, metadata !9467, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i16 %3, metadata !9468, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i16 %4, metadata !9469, metadata !DIExpression()), !dbg !9475
  %7 = bitcast i32* %6 to i8*, !dbg !9476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9476
  call void @llvm.dbg.value(metadata i8* %7, metadata !9474, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 0, metadata !9471, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !9473, metadata !DIExpression()), !dbg !9475
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 0, metadata !9471, metadata !DIExpression()), !dbg !9475
  %9 = icmp eq i16 %3, 0, !dbg !9477
  br i1 %9, label %33, label %10, !dbg !9480

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %12, metadata !9471, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 0, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 0, metadata !9470, metadata !DIExpression()), !dbg !9475
  store i32 0, i32* %6, align 4, !dbg !9481
  call void @llvm.dbg.value(metadata i32 0, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %12, metadata !9471, metadata !DIExpression()), !dbg !9475
  %13 = icmp ult i32 %12, %8, !dbg !9484
  br i1 %13, label %14, label %27, !dbg !9486

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %16, metadata !9471, metadata !DIExpression()), !dbg !9475
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9487
  %18 = load i8, i8* %17, align 1, !dbg !9487
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !9489
  store i8 %18, i8* %19, align 1, !dbg !9490
  %20 = add nuw nsw i32 %16, 1, !dbg !9491
  call void @llvm.dbg.value(metadata i32 %20, metadata !9471, metadata !DIExpression()), !dbg !9475
  %21 = add nuw nsw i32 %15, 1, !dbg !9492
  call void @llvm.dbg.value(metadata i32 %21, metadata !9472, metadata !DIExpression()), !dbg !9475
  %22 = icmp ult i32 %20, %8, !dbg !9484
  %23 = icmp ult i32 %15, 3, !dbg !9493
  %24 = select i1 %22, i1 %23, i1 false, !dbg !9493
  br i1 %24, label %14, label %25, !dbg !9486, !llvm.loop !9494

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !9496
  br label %27, !dbg !9496

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !9496
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !9497
  call void @llvm.dbg.value(metadata i32 %28, metadata !9470, metadata !DIExpression()), !dbg !9475
  %30 = bitcast i8* %11 to i32*, !dbg !9496
  store volatile i32 %28, i32* %30, align 4, !dbg !9496
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !9498
  call void @llvm.dbg.value(metadata i8* %31, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %29, metadata !9471, metadata !DIExpression()), !dbg !9475
  %32 = icmp ult i32 %29, %8, !dbg !9477
  br i1 %32, label %10, label %33, !dbg !9480, !llvm.loop !9499

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9501
  %34 = zext i16 %4 to i32, !dbg !9502
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9503
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !9504
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !9505
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !9473, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9475
  call void @llvm.dbg.value(metadata i8* %2, metadata !9467, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 0, metadata !9471, metadata !DIExpression()), !dbg !9475
  %35 = icmp eq i16 %4, 0, !dbg !9506
  br i1 %35, label %47, label %36, !dbg !9509

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !9510
  call void @llvm.dbg.value(metadata i8* %37, metadata !9473, metadata !DIExpression()), !dbg !9475
  br label %38, !dbg !9509

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !9467, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i8* %40, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %41, metadata !9471, metadata !DIExpression()), !dbg !9475
  %42 = load volatile i8, i8* %40, align 1, !dbg !9511
  store i8 %42, i8* %39, align 1, !dbg !9513
  %43 = add nuw nsw i32 %41, 1, !dbg !9514
  call void @llvm.dbg.value(metadata i32 %43, metadata !9471, metadata !DIExpression()), !dbg !9475
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !9515
  call void @llvm.dbg.value(metadata i8* %44, metadata !9467, metadata !DIExpression()), !dbg !9475
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !9516
  call void @llvm.dbg.value(metadata i8* %45, metadata !9473, metadata !DIExpression()), !dbg !9475
  %46 = icmp eq i32 %43, %34, !dbg !9506
  br i1 %46, label %47, label %38, !dbg !9509, !llvm.loop !9517

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9519
  ret void, !dbg !9519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !9520 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9524, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i8* %1, metadata !9525, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i32 0, metadata !9526, metadata !DIExpression()), !dbg !9532
  %4 = icmp eq i8* %1, null, !dbg !9533
  br i1 %4, label %67, label %5, !dbg !9535

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9536
  call void @llvm.dbg.value(metadata i32 %27, metadata !9527, metadata !DIExpression()), !dbg !9532
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !9537

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !9532
  call void @llvm.dbg.value(metadata i32 %9, metadata !9526, metadata !DIExpression()), !dbg !9532
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !9538
  %11 = load i8, i8* %10, align 1, !dbg !9538
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !9539

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !9540

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9543
  %15 = and i32 %14, -2, !dbg !9543
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9543
  br label %41, !dbg !9547

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9548
  %18 = and i32 %17, -2, !dbg !9548
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9548
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !9551

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9553
  %22 = or i32 %21, 1, !dbg !9553
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9553
  br label %41, !dbg !9557

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9558
  %25 = or i32 %24, 1, !dbg !9558
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9558
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !9536
  %28 = icmp eq i32 %27, 0, !dbg !9561
  br i1 %7, label %29, label %35, !dbg !9564

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9565
  br i1 %28, label %33, label %31, !dbg !9568

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !9565
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9565
  br label %67, !dbg !9565

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !9565
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9565
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9569
  br i1 %28, label %39, label %37, !dbg !9572

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !9569
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9569
  br label %67, !dbg !9569

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !9569
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9569
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !9573
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !9574
  %44 = load i8, i8* %43, align 1, !dbg !9574
  %45 = icmp eq i8 %44, 5, !dbg !9575
  br i1 %45, label %46, label %56, !dbg !9576

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9577
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !9578

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !9528, metadata !DIExpression(DW_OP_deref)), !dbg !9579
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !9580
  %50 = load i8, i8* %3, align 1, !dbg !9582
  call void @llvm.dbg.value(metadata i8 %50, metadata !9528, metadata !DIExpression()), !dbg !9579
  %51 = load i8, i8* %48, align 1, !dbg !9583
  %52 = and i8 %51, %50, !dbg !9584
  %53 = icmp eq i8 %52, 0, !dbg !9585
  br i1 %53, label %54, label %49, !dbg !9585, !llvm.loop !9586

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9588
  %55 = add i32 %9, 1, !dbg !9589
  br label %61, !dbg !9590

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !9591
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !9593
  %59 = load i8, i8* %58, align 1, !dbg !9593
  %60 = zext i8 %59 to i16, !dbg !9593
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !9594
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !9589
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !9595
  %64 = load i8, i8* %63, align 1, !dbg !9595
  %65 = zext i8 %64 to i32, !dbg !9595
  %66 = add i32 %42, %65, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %66, metadata !9526, metadata !DIExpression()), !dbg !9532
  br label %8, !dbg !9537, !llvm.loop !9597

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !9599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9600 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9604, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata i8* %1, metadata !9605, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata i8 %2, metadata !9606, metadata !DIExpression()), !dbg !9607
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !9606, metadata !DIExpression(DW_OP_deref)), !dbg !9607
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9608
  ret void, !dbg !9609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !9610 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9614, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i8* %1, metadata !9615, metadata !DIExpression()), !dbg !9616
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !9619 {
  ret i32 78, !dbg !9623
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !9624 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9628
  %2 = and i32 %1, 7340032, !dbg !9630
  %3 = icmp ult i32 %2, 2097153, !dbg !9631
  %4 = select i1 %3, i32 30, i32 18, !dbg !9632
  ret i32 %4, !dbg !9633
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !9634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9638, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.value(metadata i32 0, metadata !9639, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.value(metadata i32 0, metadata !9639, metadata !DIExpression()), !dbg !9640
  br label %2, !dbg !9641

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !9639, metadata !DIExpression()), !dbg !9640
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9643
  store i8 -1, i8* %4, align 1, !dbg !9646
  %5 = add nuw nsw i32 %3, 1, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %5, metadata !9639, metadata !DIExpression()), !dbg !9640
  %6 = icmp eq i32 %5, 8, !dbg !9648
  br i1 %6, label %7, label %2, !dbg !9641, !llvm.loop !9649

7:                                                ; preds = %2
  ret i1 true, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !9652 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !9654, metadata !DIExpression()), !dbg !9655
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9656
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !9657
  %3 = load i8, i8* %2, align 1, !dbg !9657
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !9658
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9659
  %5 = ptrtoint i8* %4 to i32, !dbg !9660
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !9661
  %6 = bitcast i8* %4 to i32*, !dbg !9662
  %7 = load volatile i32, i32* %6, align 4, !dbg !9663
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !9664
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9665
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !9666
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9667
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !9668
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9669
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !9670
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !9671
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !9672
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9673
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !9674
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9675
  %14 = or i32 %13, 986880, !dbg !9676
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9677
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9678
  %16 = or i32 %15, 252645135, !dbg !9679
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9680
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9681
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9682
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !9683
  %20 = load i8, i8* %19, align 1, !dbg !9683
  %21 = zext i8 %20 to i32, !dbg !9684
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !9685
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !9686
  ret void, !dbg !9687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !9688 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !9689
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9690
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !9691
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9692
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !9693
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9694
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !9695
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !9696
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !9697
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9698
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9699
  %7 = and i32 %6, -252645136, !dbg !9700
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9701
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !9702
  %9 = zext i8 %8 to i32, !dbg !9702
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !9703
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !9704
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !9705
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !9707
  %13 = inttoptr i32 %12 to i32*, !dbg !9708
  %14 = load volatile i32, i32* %13, align 4, !dbg !9709
  %15 = icmp eq i32 %11, %14, !dbg !9710
  br i1 %15, label %17, label %16, !dbg !9711

16:                                               ; preds = %0, %16
  br label %16, !dbg !9712, !llvm.loop !9713

17:                                               ; preds = %0
  ret void, !dbg !9715
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !9716 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !9717
  %2 = icmp eq i32 %1, 0, !dbg !9719
  br i1 %2, label %3, label %5, !dbg !9720

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9721
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !9723
  br label %5, !dbg !9724

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !9725
  %7 = icmp eq i32 %6, 0, !dbg !9727
  br i1 %7, label %8, label %10, !dbg !9728

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9729
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !9731
  br label %10, !dbg !9732

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9733
  %12 = and i32 %11, -256, !dbg !9734
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9735
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9736
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !9737
  ret void, !dbg !9738
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !9739 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !9740
  %2 = icmp eq i32 %1, 0, !dbg !9742
  br i1 %2, label %4, label %3, !dbg !9743

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9744
  br label %4, !dbg !9746

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !9747
  %6 = icmp eq i32 %5, 0, !dbg !9749
  br i1 %6, label %8, label %7, !dbg !9750

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9751
  br label %8, !dbg !9753

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !9756 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9758, metadata !DIExpression()), !dbg !9759
  ret i32 0, !dbg !9760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !9761 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9763, metadata !DIExpression()), !dbg !9764
  ret i32 0, !dbg !9765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !9766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9768, metadata !DIExpression()), !dbg !9769
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !9770
  ret void, !dbg !9771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !9772 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !9775
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9776
  ret i32 %1, !dbg !9777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !9778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9780, metadata !DIExpression()), !dbg !9781
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !9782
  ret void, !dbg !9783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !9784 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9786, metadata !DIExpression()), !dbg !9787
  ret i32 0, !dbg !9788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !9789 {
  ret i32 0, !dbg !9792
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !9793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9797, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i8* %1, metadata !9798, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i32 %2, metadata !9799, metadata !DIExpression()), !dbg !9812
  %4 = ptrtoint i8* %0 to i32, !dbg !9813
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !9814
  %7 = and i32 %6, 3, !dbg !9814
  %8 = icmp eq i32 %7, 0, !dbg !9814
  br i1 %8, label %9, label %26, !dbg !9814

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !9815
  call void @llvm.dbg.value(metadata i32* %10, metadata !9801, metadata !DIExpression()), !dbg !9816
  %11 = bitcast i8* %1 to i32*, !dbg !9817
  call void @llvm.dbg.value(metadata i32* %11, metadata !9804, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9812
  %12 = icmp ult i32 %2, 4, !dbg !9818
  br i1 %12, label %65, label %13, !dbg !9821

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !9821

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9800, metadata !DIExpression()), !dbg !9812
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !9822
  %18 = load i32, i32* %17, align 4, !dbg !9822
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !9825
  %20 = load i32, i32* %19, align 4, !dbg !9825
  %21 = icmp eq i32 %18, %20, !dbg !9826
  %22 = add nuw nsw i32 %16, 1, !dbg !9827
  call void @llvm.dbg.value(metadata i32 %22, metadata !9800, metadata !DIExpression()), !dbg !9812
  %23 = xor i1 %21, true, !dbg !9828
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !9828
  call void @llvm.dbg.value(metadata i32 %22, metadata !9800, metadata !DIExpression()), !dbg !9812
  br i1 %25, label %59, label %15, !dbg !9828, !llvm.loop !9829

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !9831
  %28 = icmp eq i32 %27, 0, !dbg !9831
  br i1 %28, label %31, label %29, !dbg !9831

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9812
  %30 = icmp eq i32 %2, 0, !dbg !9832
  br i1 %30, label %65, label %48, !dbg !9835

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !9836
  call void @llvm.dbg.value(metadata i16* %32, metadata !9805, metadata !DIExpression()), !dbg !9837
  %33 = bitcast i8* %1 to i16*, !dbg !9838
  call void @llvm.dbg.value(metadata i16* %33, metadata !9808, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i32 0, metadata !9800, metadata !DIExpression()), !dbg !9812
  %34 = icmp ult i32 %2, 2, !dbg !9839
  br i1 %34, label %65, label %35, !dbg !9842

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !9842

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !9800, metadata !DIExpression()), !dbg !9812
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !9843
  %40 = load i16, i16* %39, align 2, !dbg !9843
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !9846
  %42 = load i16, i16* %41, align 2, !dbg !9846
  %43 = icmp eq i16 %40, %42, !dbg !9847
  %44 = add nuw nsw i32 %38, 1, !dbg !9848
  call void @llvm.dbg.value(metadata i32 %44, metadata !9800, metadata !DIExpression()), !dbg !9812
  %45 = xor i1 %43, true, !dbg !9849
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !9849
  call void @llvm.dbg.value(metadata i32 %44, metadata !9800, metadata !DIExpression()), !dbg !9812
  br i1 %47, label %61, label %37, !dbg !9849, !llvm.loop !9850

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !9800, metadata !DIExpression()), !dbg !9812
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !9852
  %51 = load i8, i8* %50, align 1, !dbg !9852
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !9855
  %53 = load i8, i8* %52, align 1, !dbg !9855
  %54 = icmp eq i8 %51, %53, !dbg !9856
  %55 = add nuw i32 %49, 1, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %55, metadata !9800, metadata !DIExpression()), !dbg !9812
  %56 = xor i1 %54, true, !dbg !9858
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %55, metadata !9800, metadata !DIExpression()), !dbg !9812
  br i1 %58, label %63, label %48, !dbg !9858, !llvm.loop !9859

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !9861
  br label %65, !dbg !9861

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !9861
  br label %65, !dbg !9861

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !9861
  br label %65, !dbg !9861

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !9812
  ret i1 %66, !dbg !9861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !9862 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9866, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i8* %1, metadata !9867, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i32 %2, metadata !9868, metadata !DIExpression()), !dbg !9877
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9878
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !9869, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i8* %0, metadata !9870, metadata !DIExpression()), !dbg !9877
  %7 = bitcast i8** %4 to i8*, !dbg !9879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9879
  call void @llvm.dbg.value(metadata i8* %1, metadata !9871, metadata !DIExpression()), !dbg !9877
  store i8* %1, i8** %4, align 4, !dbg !9880
  call void @llvm.dbg.value(metadata i32 0, metadata !9872, metadata !DIExpression()), !dbg !9877
  %8 = bitcast i32* %5 to i8*, !dbg !9881
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !9881
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9882
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !9883
  store i8 1, i8* %9, align 4, !dbg !9884
  call void @llvm.dbg.value(metadata i32 %2, metadata !9868, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i8* %0, metadata !9870, metadata !DIExpression()), !dbg !9877
  %10 = icmp eq i32 %2, 0, !dbg !9885
  br i1 %10, label %73, label %11, !dbg !9886

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %12, metadata !9870, metadata !DIExpression()), !dbg !9877
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !9886

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9868, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i32 %20, metadata !9870, metadata !DIExpression()), !dbg !9877
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9888
  %22 = shl i32 %21, 1, !dbg !9890
  %23 = add i32 %22, -1, !dbg !9891
  %24 = and i32 %23, %20, !dbg !9892
  %25 = sub i32 %22, %24, !dbg !9893
  %26 = icmp ugt i32 %19, %25, !dbg !9894
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %27, metadata !9874, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i32 %27, metadata !9873, metadata !DIExpression()), !dbg !9877
  store i32 %27, i32* %5, align 4, !dbg !9896
  %28 = load i32, i32* %13, align 4, !dbg !9897
  %29 = and i32 %28, 16, !dbg !9899
  %30 = icmp eq i32 %29, 0, !dbg !9899
  br i1 %30, label %31, label %32, !dbg !9900

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !9901
  br label %32, !dbg !9903

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !9904
  %34 = icmp eq i8 %33, 4, !dbg !9906
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9907
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !9907
  %37 = load i8, i8* %36, align 1, !dbg !9907
  %38 = zext i8 %37 to i32, !dbg !9907
  br i1 %34, label %39, label %43, !dbg !9908

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !9871, metadata !DIExpression(DW_OP_deref)), !dbg !9877
  call void @llvm.dbg.value(metadata i32* %5, metadata !9873, metadata !DIExpression(DW_OP_deref)), !dbg !9877
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %40, metadata !9872, metadata !DIExpression()), !dbg !9877
  %41 = load i8*, i8** %4, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata i8* %41, metadata !9871, metadata !DIExpression()), !dbg !9877
  %42 = load i32, i32* %5, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %42, metadata !9873, metadata !DIExpression()), !dbg !9877
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !9913
  br label %47, !dbg !9914

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %44, metadata !9872, metadata !DIExpression()), !dbg !9877
  %45 = load i8*, i8** %4, align 4, !dbg !9917
  call void @llvm.dbg.value(metadata i8* %45, metadata !9871, metadata !DIExpression()), !dbg !9877
  %46 = load i32, i32* %5, align 4, !dbg !9918
  call void @llvm.dbg.value(metadata i32 %46, metadata !9873, metadata !DIExpression()), !dbg !9877
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !9919
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !9907
  call void @llvm.dbg.value(metadata i32 %48, metadata !9872, metadata !DIExpression()), !dbg !9877
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !9920
  call void @llvm.dbg.value(metadata i32 %49, metadata !9876, metadata !DIExpression()), !dbg !9877
  %50 = load i8, i8* %14, align 1, !dbg !9921
  %51 = zext i8 %50 to i32, !dbg !9922
  %52 = add i32 %27, 1, !dbg !9923
  %53 = add i32 %52, %51, !dbg !9924
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9925
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9926
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9927
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9928
  %54 = load i16, i16* %16, align 2, !dbg !9929
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !9930
  %55 = load i16, i16* %16, align 2, !dbg !9931
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !9932
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !9933
  br label %56, !dbg !9934

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9935
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !9937
  %59 = load i8, i8* %58, align 1, !dbg !9937
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %60, metadata !9875, metadata !DIExpression()), !dbg !9877
  %61 = load i8*, i8** %17, align 4, !dbg !9939
  %62 = load i8, i8* %61, align 1, !dbg !9941
  %63 = zext i8 %62 to i32, !dbg !9941
  %64 = and i32 %60, %63, !dbg !9942
  %65 = icmp eq i32 %64, 0, !dbg !9943
  br i1 %65, label %66, label %56, !dbg !9944, !llvm.loop !9945

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9947
  %67 = load i32, i32* %5, align 4, !dbg !9948
  call void @llvm.dbg.value(metadata i32 %67, metadata !9873, metadata !DIExpression()), !dbg !9877
  %68 = load i8*, i8** %4, align 4, !dbg !9949
  call void @llvm.dbg.value(metadata i8* %68, metadata !9871, metadata !DIExpression()), !dbg !9877
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !9949
  call void @llvm.dbg.value(metadata i8* %69, metadata !9871, metadata !DIExpression()), !dbg !9877
  store i8* %69, i8** %4, align 4, !dbg !9949
  %70 = sub i32 %19, %27, !dbg !9950
  call void @llvm.dbg.value(metadata i32 %70, metadata !9868, metadata !DIExpression()), !dbg !9877
  %71 = add i32 %27, %20, !dbg !9951
  call void @llvm.dbg.value(metadata i32 %71, metadata !9870, metadata !DIExpression()), !dbg !9877
  %72 = icmp eq i32 %70, 0, !dbg !9885
  br i1 %72, label %73, label %18, !dbg !9886, !llvm.loop !9952

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !9954
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9955
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !9956
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9956
  ret void, !dbg !9956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !9957 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9961, metadata !DIExpression()), !dbg !9963
  br label %2, !dbg !9964

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %3, metadata !9962, metadata !DIExpression()), !dbg !9963
  %4 = icmp eq i32 %3, 0, !dbg !9967
  br i1 %4, label %5, label %2, !dbg !9968, !llvm.loop !9969

5:                                                ; preds = %2
  ret void, !dbg !9971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9974, metadata !DIExpression()), !dbg !9975
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9976
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !9976
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !9977
  %5 = load i8, i8* %4, align 1, !dbg !9977
  %6 = zext i8 %5 to i32, !dbg !9978
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !9979
  ret void, !dbg !9980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9981 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9984
  call void @llvm.dbg.value(metadata i32 %1, metadata !9983, metadata !DIExpression()), !dbg !9985
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !9986
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9987
  ret void, !dbg !9988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !9989 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9993, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i8 %1, metadata !9994, metadata !DIExpression()), !dbg !9997
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9998
  call void @llvm.dbg.value(metadata i32 %3, metadata !9995, metadata !DIExpression()), !dbg !9997
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9999
  %5 = load i16, i16* %4, align 2, !dbg !9999
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !10000
  %6 = zext i8 %1 to i32, !dbg !10001
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10002
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10003
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10004
  %7 = load i16, i16* %4, align 2, !dbg !10005
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !10006
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10007
  %9 = lshr i32 %8, 8, !dbg !10008
  %10 = and i32 %9, 255, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %10, metadata !9996, metadata !DIExpression()), !dbg !9997
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !10010
  ret i32 %10, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !10012 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10015
  call void @llvm.dbg.value(metadata i32 %1, metadata !10014, metadata !DIExpression()), !dbg !10016
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !10017
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10018
  %3 = and i32 %2, -513, !dbg !10018
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10018
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10021
  ret void, !dbg !10022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !10023 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10025, metadata !DIExpression()), !dbg !10027
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10028
  call void @llvm.dbg.value(metadata i32 %2, metadata !10026, metadata !DIExpression()), !dbg !10027
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !10029
  br i1 %3, label %4, label %5, !dbg !10031

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !10032
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !10034
  ret void, !dbg !10035

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !10036
  tail call void @Flash_ReturnReady() #21, !dbg !10038
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10038
  unreachable, !dbg !10038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !10042 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !10044, metadata !DIExpression()), !dbg !10049
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10050
  call void @llvm.dbg.value(metadata i32 %1, metadata !10046, metadata !DIExpression()), !dbg !10049
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !10051
  %3 = icmp eq i32 %2, 0, !dbg !10053
  br i1 %3, label %4, label %125, !dbg !10054

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !10055
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10056
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !10044, metadata !DIExpression()), !dbg !10049
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !10058
  %7 = load i32, i32* %6, align 4, !dbg !10058
  %8 = xor i32 %7, -1, !dbg !10058
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !10058
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !10058
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !10058
  %12 = icmp eq i32 %8, %11, !dbg !10058
  br i1 %12, label %14, label %13, !dbg !10061

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !10062
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10062
  unreachable, !dbg !10062

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10064
  %16 = icmp ult i32 %15, 16, !dbg !10066
  br i1 %16, label %17, label %34, !dbg !10067

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !10068
  %19 = load i8, i8* %18, align 4, !dbg !10068
  %20 = icmp eq i8 %19, 1, !dbg !10069
  br i1 %20, label %21, label %34, !dbg !10070

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !10071

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10073
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !10075
  %27 = load i8, i8* %26, align 1, !dbg !10075
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !10076
  call void @llvm.dbg.value(metadata i32 %28, metadata !10045, metadata !DIExpression()), !dbg !10049
  %29 = load i8*, i8** %23, align 4, !dbg !10077
  %30 = load i8, i8* %29, align 1, !dbg !10079
  %31 = zext i8 %30 to i32, !dbg !10079
  %32 = and i32 %28, %31, !dbg !10080
  %33 = icmp eq i32 %32, 0, !dbg !10081
  br i1 %33, label %34, label %24, !dbg !10082, !llvm.loop !10083

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10085, !range !2988
  %36 = icmp ne i8 %35, 0, !dbg !10085
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !10087
  br i1 %39, label %116, label %40, !dbg !10087

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !10088
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !10088
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !10090
  %44 = load i8, i8* %43, align 1, !dbg !10090
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !10091
  call void @llvm.dbg.value(metadata i32 %45, metadata !10045, metadata !DIExpression()), !dbg !10049
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !10092
  %47 = load i8*, i8** %46, align 4, !dbg !10092
  %48 = load i8, i8* %47, align 1, !dbg !10094
  %49 = zext i8 %48 to i32, !dbg !10094
  %50 = and i32 %45, %49, !dbg !10095
  %51 = icmp eq i32 %50, 0, !dbg !10096
  br i1 %51, label %85, label %52, !dbg !10097

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !10098
  br label %53, !dbg !10100

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !10101
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !10103
  %56 = load i8, i8* %55, align 1, !dbg !10103
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !10104
  call void @llvm.dbg.value(metadata i32 %57, metadata !10045, metadata !DIExpression()), !dbg !10049
  %58 = load i8*, i8** %46, align 4, !dbg !10105
  %59 = load i8, i8* %58, align 1, !dbg !10107
  %60 = zext i8 %59 to i32, !dbg !10107
  %61 = and i32 %57, %60, !dbg !10108
  %62 = icmp eq i32 %61, 0, !dbg !10109
  br i1 %62, label %63, label %53, !dbg !10110, !llvm.loop !10111

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !10113
  %65 = load i32, i32* %64, align 4, !dbg !10113
  %66 = and i32 %65, 4, !dbg !10115
  %67 = icmp eq i32 %66, 0, !dbg !10115
  br i1 %67, label %84, label %68, !dbg !10116

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !10117
  %70 = load i8, i8* %69, align 4, !dbg !10117
  %71 = icmp eq i8 %70, 2, !dbg !10118
  br i1 %71, label %72, label %84, !dbg !10119

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10120
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10122
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10123
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !10124
  %74 = load i16, i16* %73, align 2, !dbg !10124
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !10125
  %75 = load i16, i16* %73, align 2, !dbg !10126
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !10127
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !10128
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10129
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10130
  %76 = load i16, i16* %73, align 2, !dbg !10131
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !10132
  %77 = load i16, i16* %73, align 2, !dbg !10133
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !10134
  br label %78, !dbg !10135

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10136
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10138
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10139
  %79 = load i16, i16* %73, align 2, !dbg !10140
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !10141
  %80 = load i16, i16* %73, align 2, !dbg !10142
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !10143
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10144
  call void @llvm.dbg.value(metadata i32 %81, metadata !10045, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10049
  %82 = and i32 %81, 256, !dbg !10145
  %83 = icmp eq i32 %82, 0, !dbg !10145
  br i1 %83, label %84, label %78, !dbg !10145, !llvm.loop !10146

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !10148
  br label %116, !dbg !10149

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !10150
  %87 = load i32, i32* %86, align 4, !dbg !10150
  %88 = and i32 %87, 2, !dbg !10153
  %89 = icmp eq i32 %88, 0, !dbg !10153
  br i1 %89, label %115, label %90, !dbg !10154

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !10155
  %92 = load %struct.anon.12*, %struct.anon.12** %91, align 4, !dbg !10155
  %93 = icmp eq %struct.anon.12* %92, null, !dbg !10156
  br i1 %93, label %94, label %115, !dbg !10157

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !10158
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !10160
  %97 = load i8, i8* %96, align 1, !dbg !10160
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !10161
  call void @llvm.dbg.value(metadata i32 %98, metadata !10045, metadata !DIExpression()), !dbg !10049
  %99 = load i8*, i8** %46, align 4, !dbg !10162
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !10164
  %101 = load i8, i8* %100, align 1, !dbg !10164
  %102 = zext i8 %101 to i32, !dbg !10164
  %103 = and i32 %98, %102, !dbg !10165
  %104 = icmp eq i32 %103, 0, !dbg !10166
  br i1 %104, label %105, label %115, !dbg !10167

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !10168
  %107 = load i8, i8* %106, align 1, !dbg !10168
  %108 = zext i8 %107 to i32, !dbg !10168
  %109 = and i32 %98, %108, !dbg !10169
  %110 = icmp eq i32 %109, 0, !dbg !10170
  br i1 %110, label %111, label %115, !dbg !10171

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !10172
  %113 = load i16, i16* %112, align 2, !dbg !10172
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !10174
  %114 = load i16, i16* %112, align 2, !dbg !10175
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !10176
  br label %115, !dbg !10177

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10178
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10179
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !10180
  %118 = sub i32 0, %117, !dbg !10180
  call void @llvm.dbg.value(metadata i32 %118, metadata !10047, metadata !DIExpression()), !dbg !10181
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !10182
  %120 = icmp ult i32 %119, %118, !dbg !10184
  br i1 %120, label %121, label %122, !dbg !10185

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !10186
  br label %122, !dbg !10188

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10189
  %124 = and i32 %123, -513, !dbg !10189
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10189
  br label %125, !dbg !10192

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10049
  ret void, !dbg !10193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10196, metadata !DIExpression()), !dbg !10200
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !10201
  %3 = icmp eq i32 %2, -1, !dbg !10203
  br i1 %3, label %12, label %4, !dbg !10204

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !10198, metadata !DIExpression()), !dbg !10200
  %5 = sub i32 0, %2, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %5, metadata !10199, metadata !DIExpression()), !dbg !10200
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !10207
  %7 = load i8, i8* %6, align 4, !dbg !10207
  %8 = zext i8 %7 to i32, !dbg !10209
  %9 = icmp ugt i32 %8, %5, !dbg !10210
  br i1 %9, label %10, label %12, !dbg !10211

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !10212
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !10214
  br label %12, !dbg !10215

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10216
  call void @llvm.dbg.value(metadata i32 %13, metadata !10197, metadata !DIExpression()), !dbg !10200
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10217
  %15 = load i16, i16* %14, align 2, !dbg !10217
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10218
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !10218
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !10219
  %19 = load i8, i8* %18, align 1, !dbg !10219
  %20 = zext i8 %19 to i32, !dbg !10220
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !10221
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !10222
  ret void, !dbg !10223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !10224 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10227
  call void @llvm.dbg.value(metadata i32 %1, metadata !10226, metadata !DIExpression()), !dbg !10228
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10229
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10230
  %3 = and i32 %2, -513, !dbg !10230
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !10230
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10233
  ret void, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10239, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.value(metadata i32 %1, metadata !10240, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.value(metadata i8 %2, metadata !10241, metadata !DIExpression()), !dbg !10243
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10244
  call void @llvm.dbg.value(metadata i32 %4, metadata !10242, metadata !DIExpression()), !dbg !10243
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10245
  %6 = load i16, i16* %5, align 2, !dbg !10245
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !10246
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10247
  %7 = zext i8 %2 to i32, !dbg !10248
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10249
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10250
  %8 = load i16, i16* %5, align 2, !dbg !10251
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !10252
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !10255 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %1, metadata !10259, metadata !DIExpression()), !dbg !10261
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !10262
  br i1 %2, label %4, label %3, !dbg !10264

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !10265
  br label %4, !dbg !10267

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10268
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10268
  ret i32 %5, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !10270 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10277
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10274, metadata !DIExpression()), !dbg !10278
  call void @llvm.dbg.value(metadata i8 0, metadata !10276, metadata !DIExpression()), !dbg !10278
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !10279
  %3 = load i32, i32* %2, align 4, !dbg !10279
  %4 = xor i32 %3, -1, !dbg !10279
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !10279
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !10279
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !10279
  %8 = icmp eq i32 %4, %7, !dbg !10279
  br i1 %8, label %10, label %9, !dbg !10282

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10283
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10283
  unreachable, !dbg !10283

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10285
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10286
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10286
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !10287
  %14 = load i8, i8* %13, align 1, !dbg !10287
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %15, metadata !10275, metadata !DIExpression()), !dbg !10278
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10289
  %17 = load i8*, i8** %16, align 4, !dbg !10289
  %18 = load i8, i8* %17, align 1, !dbg !10291
  %19 = zext i8 %18 to i32, !dbg !10291
  %20 = and i32 %15, %19, !dbg !10292
  %21 = icmp eq i32 %20, 0, !dbg !10293
  br i1 %21, label %22, label %23, !dbg !10294

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10295
  call void @llvm.dbg.value(metadata i8 1, metadata !10276, metadata !DIExpression()), !dbg !10278
  br label %23, !dbg !10297

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !10276, metadata !DIExpression()), !dbg !10278
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10298
  ret i1 %21, !dbg !10299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !10300 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10302, metadata !DIExpression()), !dbg !10303
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10304, !range !2988
  %2 = icmp eq i8 %1, 0, !dbg !10304
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10304
  %4 = icmp eq i8 %3, 0, !dbg !10304
  %5 = select i1 %2, i1 true, i1 %4, !dbg !10304
  br i1 %5, label %6, label %7, !dbg !10304

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10307
  tail call void @Flash_ReturnReady() #21, !dbg !10309
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10309
  unreachable, !dbg !10309

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10313
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !10302, metadata !DIExpression()), !dbg !10303
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10318, metadata !DIExpression()), !dbg !10320
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %2, metadata !10319, metadata !DIExpression()), !dbg !10320
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10322
  %4 = load i16, i16* %3, align 2, !dbg !10322
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10323
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !10323
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !10324
  %8 = load i8, i8* %7, align 1, !dbg !10324
  %9 = zext i8 %8 to i32, !dbg !10325
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !10326
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !10327
  %11 = load i8, i8* %10, align 4, !dbg !10327
  %12 = icmp eq i8 %11, 0, !dbg !10329
  br i1 %12, label %14, label %13, !dbg !10330

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !10331
  br label %14, !dbg !10333

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !10334
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !10335
  ret void, !dbg !10336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !10337 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10340
  call void @llvm.dbg.value(metadata i32 %1, metadata !10339, metadata !DIExpression()), !dbg !10341
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10342
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10343
  ret void, !dbg !10344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !10345 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !10349
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10347, metadata !DIExpression()), !dbg !10350
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10351, !range !2988
  %3 = icmp ne i8 %2, 0, !dbg !10351
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10351
  %5 = icmp eq i8 %4, 0, !dbg !10351
  %6 = select i1 %3, i1 %5, i1 false, !dbg !10351
  br i1 %6, label %8, label %7, !dbg !10351

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10354
  tail call void @Flash_ReturnReady() #21, !dbg !10356
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10356
  unreachable, !dbg !10356

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !10360
  %10 = load i32, i32* %9, align 4, !dbg !10360
  %11 = xor i32 %10, -1, !dbg !10360
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !10360
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !10360
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !10360
  %15 = icmp eq i32 %11, %14, !dbg !10360
  br i1 %15, label %17, label %16, !dbg !10363

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !10364
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10364
  unreachable, !dbg !10364

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10366
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !10367

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !10368
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !10370
  %23 = load i8, i8* %22, align 1, !dbg !10370
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !10371
  call void @llvm.dbg.value(metadata i32 %24, metadata !10348, metadata !DIExpression()), !dbg !10350
  %25 = load i8*, i8** %19, align 4, !dbg !10372
  %26 = load i8, i8* %25, align 1, !dbg !10374
  %27 = zext i8 %26 to i32, !dbg !10374
  %28 = and i32 %24, %27, !dbg !10375
  %29 = icmp eq i32 %28, 0, !dbg !10376
  br i1 %29, label %30, label %20, !dbg !10377, !llvm.loop !10378

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10384, metadata !DIExpression()), !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10410, metadata !DIExpression()), !dbg !10413
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10411, metadata !DIExpression()), !dbg !10413
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10414
  %4 = load i8*, i8** %3, align 4, !dbg !10414
  call void @llvm.dbg.value(metadata i8* %4, metadata !10412, metadata !DIExpression()), !dbg !10413
  store i8 1, i8* %4, align 1, !dbg !10415
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !10416
  store i8 2, i8* %5, align 1, !dbg !10417
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !10418
  store i8 8, i8* %6, align 1, !dbg !10419
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !10420
  store i8 4, i8* %7, align 1, !dbg !10421
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10422
  store i8 60, i8* %8, align 1, !dbg !10423
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !10424
  store i8 -128, i8* %9, align 1, !dbg !10425
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !10426
  store i8 96, i8* %10, align 1, !dbg !10427
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10428
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10428
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !10429
  store i8 43, i8* %13, align 1, !dbg !10430
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10431
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !10432
  store i8 43, i8* %15, align 1, !dbg !10433
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10434
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !10435
  store i8 47, i8* %17, align 1, !dbg !10436
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10437
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !10438
  store i8 5, i8* %19, align 1, !dbg !10439
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10440
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !10441
  store i8 1, i8* %21, align 1, !dbg !10442
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10443
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !10444
  store i8 43, i8* %23, align 1, !dbg !10445
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !10446
  store i8 22, i8* %24, align 4, !dbg !10447
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !10448
  %26 = load i8, i8* %25, align 1, !dbg !10448
  %27 = icmp eq i8 %26, 32, !dbg !10450
  br i1 %27, label %28, label %49, !dbg !10451

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !10452
  %30 = load i8, i8* %29, align 1, !dbg !10452
  %31 = icmp eq i8 %30, 24, !dbg !10453
  br i1 %31, label %32, label %41, !dbg !10454

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10455
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !10457
  store i8 117, i8* %34, align 1, !dbg !10458
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10459
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !10460
  store i8 122, i8* %36, align 1, !dbg !10461
  %37 = load i8, i8* %25, align 1, !dbg !10462
  %38 = icmp eq i8 %37, 32, !dbg !10464
  br i1 %38, label %39, label %49, !dbg !10465

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !10467
  br label %41, !dbg !10467

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !10467
  %43 = icmp eq i8 %42, 22, !dbg !10468
  br i1 %43, label %44, label %49, !dbg !10469

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10470
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !10472
  store i8 117, i8* %46, align 1, !dbg !10473
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10474
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !10475
  store i8 122, i8* %48, align 1, !dbg !10476
  br label %49, !dbg !10477

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !10478
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !10479
  ret i32 0, !dbg !10480
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !10481 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10483, metadata !DIExpression()), !dbg !10487
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10488
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10484, metadata !DIExpression()), !dbg !10487
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10489
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !10490
  %5 = load i8, i8* %4, align 1, !dbg !10492
  %6 = icmp eq i8 %5, -62, !dbg !10493
  br i1 %6, label %7, label %15, !dbg !10494

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !10495
  %9 = load i8, i8* %8, align 1, !dbg !10495
  %10 = icmp eq i8 %9, 32, !dbg !10496
  br i1 %10, label %11, label %15, !dbg !10497

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !10498
  %13 = load i8, i8* %12, align 1, !dbg !10498
  %14 = icmp eq i8 %13, 22, !dbg !10499
  br i1 %14, label %48, label %15, !dbg !10500

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !10501
  %17 = bitcast i8* %16 to i16*, !dbg !10501
  %18 = load i16, i16* %17, align 2, !dbg !10501
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10502
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !10502
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !10502
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !10503
  %23 = load i8, i8* %22, align 1, !dbg !10503
  %24 = zext i8 %23 to i32, !dbg !10504
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !10505
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !10506
  %25 = load i16, i16* %17, align 2, !dbg !10507
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !10508
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !10509
  call void @llvm.dbg.value(metadata i8* %2, metadata !10486, metadata !DIExpression(DW_OP_deref)), !dbg !10487
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !10510
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !10511
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !10512
  %30 = load i8, i8* %29, align 1, !dbg !10512
  %31 = zext i8 %30 to i32, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %31, metadata !10485, metadata !DIExpression()), !dbg !10487
  %32 = shl nuw nsw i32 %31, 8, !dbg !10514
  %33 = load i8, i8* %2, align 1, !dbg !10515
  call void @llvm.dbg.value(metadata i8 %33, metadata !10486, metadata !DIExpression()), !dbg !10487
  %34 = zext i8 %33 to i32, !dbg !10515
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10516
  %36 = bitcast i8* %35 to i8**, !dbg !10516
  %37 = load i8*, i8** %36, align 4, !dbg !10516
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !10517
  %39 = load i8, i8* %38, align 1, !dbg !10517
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !10518
  %41 = load i8, i8* %40, align 1, !dbg !10518
  %42 = or i8 %41, %39, !dbg !10519
  %43 = zext i8 %42 to i32, !dbg !10519
  %44 = xor i32 %43, -1, !dbg !10520
  %45 = and i32 %44, %34, !dbg !10521
  %46 = or i32 %45, %32, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %46, metadata !10485, metadata !DIExpression()), !dbg !10487
  %47 = load i16, i16* %17, align 2, !dbg !10523
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !10524
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !10525
  br label %48, !dbg !10526

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10527
  ret i32 0, !dbg !10527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10528 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10530, metadata !DIExpression()), !dbg !10532
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10533
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !10534

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !10535
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !10537
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !10538
  call void @llvm.dbg.value(metadata i8* %2, metadata !10531, metadata !DIExpression(DW_OP_deref)), !dbg !10532
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !10539
  %10 = load i8, i8* %2, align 1, !dbg !10540
  call void @llvm.dbg.value(metadata i8 %10, metadata !10531, metadata !DIExpression()), !dbg !10532
  %11 = load i8*, i8** %5, align 4, !dbg !10541
  %12 = load i8, i8* %11, align 1, !dbg !10542
  %13 = and i8 %12, %10, !dbg !10543
  %14 = icmp eq i8 %13, 0, !dbg !10544
  br i1 %14, label %15, label %6, !dbg !10545, !llvm.loop !10546

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10548
  ret void, !dbg !10548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10551, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10552, metadata !DIExpression()), !dbg !10554
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10555
  %4 = load i8*, i8** %3, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata i8* %4, metadata !10553, metadata !DIExpression()), !dbg !10554
  store i8 1, i8* %4, align 1, !dbg !10556
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !10557
  store i8 2, i8* %5, align 1, !dbg !10558
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !10559
  store i8 -128, i8* %6, align 1, !dbg !10560
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !10561
  store i8 -128, i8* %7, align 1, !dbg !10562
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10563
  store i8 60, i8* %8, align 1, !dbg !10564
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !10565
  store i8 -128, i8* %9, align 1, !dbg !10566
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10567
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10567
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !10568
  store i8 -97, i8* %12, align 1, !dbg !10569
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10570
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !10571
  store i8 53, i8* %14, align 1, !dbg !10572
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10573
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !10574
  store i8 53, i8* %16, align 1, !dbg !10575
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10576
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !10577
  store i8 5, i8* %18, align 1, !dbg !10578
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10579
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !10580
  store i8 1, i8* %20, align 1, !dbg !10581
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10582
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !10583
  store i8 117, i8* %22, align 1, !dbg !10584
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10585
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !10586
  store i8 122, i8* %24, align 1, !dbg !10587
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !10588
  store i8 22, i8* %25, align 4, !dbg !10589
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !10590
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !10591
  ret i32 0, !dbg !10592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !10593 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10595, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10596, metadata !DIExpression()), !dbg !10597
  ret i32 0, !dbg !10598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10601, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10602, metadata !DIExpression()), !dbg !10603
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !10604
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !10605
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !10606
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !10607
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !10608
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !10609
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !10610
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !10611
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !10612
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !10613
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !10614
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !10615
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !10616
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !10617
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !10618
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !10619
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !10620
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !10621
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !10622
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !10623
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !10624
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !10625
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !10626
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !10627
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !10628
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !10629
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !10630
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !10631
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !10632
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !10633
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !10634
  %19 = icmp ugt i32 %18, 16777216, !dbg !10636
  %20 = select i1 %19, i8 4, i8 3, !dbg !10637
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !10638
  store i8 %20, i8* %21, align 1, !dbg !10640
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10641
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10641
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !10642
  store i8 0, i8* %24, align 1, !dbg !10643
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10644
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !10645
  store i8 -81, i8* %26, align 1, !dbg !10646
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10647
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !10648
  store i8 -97, i8* %28, align 1, !dbg !10649
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10650
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !10651
  store i8 2, i8* %30, align 1, !dbg !10652
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10653
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !10654
  store i8 32, i8* %32, align 1, !dbg !10655
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10656
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !10657
  store i8 82, i8* %34, align 1, !dbg !10658
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10659
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !10660
  store i8 -40, i8* %36, align 1, !dbg !10661
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10662
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !10663
  store i8 -80, i8* %38, align 1, !dbg !10664
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10665
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !10666
  store i8 48, i8* %40, align 1, !dbg !10667
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10668
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !10669
  store i8 6, i8* %42, align 1, !dbg !10670
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10671
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !10672
  store i8 -71, i8* %44, align 1, !dbg !10673
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10674
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !10675
  store i8 -85, i8* %46, align 1, !dbg !10676
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10677
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !10678
  store i8 5, i8* %48, align 1, !dbg !10679
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !10680
  store i16 0, i16* %49, align 4, !dbg !10681
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !10682
  store %struct.anon.12* null, %struct.anon.12** %50, align 4, !dbg !10683
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !10684
  store %struct.anon.12* null, %struct.anon.12** %51, align 4, !dbg !10685
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !10686
  store i8 0, i8* %52, align 4, !dbg !10687
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !10688
  store i8 5, i8* %53, align 4, !dbg !10689
  ret i32 0, !dbg !10690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !10691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10693, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata i8* %1, metadata !10694, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata i8* %1, metadata !10695, metadata !DIExpression()), !dbg !10711
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10712
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10708, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata i32 0, metadata !10709, metadata !DIExpression()), !dbg !10711
  %4 = bitcast i8* %1 to i32*, !dbg !10713
  store i32 0, i32* %4, align 4, !dbg !10714
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !10709, metadata !DIExpression()), !dbg !10711
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !10715
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !10716
  %9 = load i32, i32* %8, align 4, !dbg !10716
  %10 = icmp eq i32 %9, 0, !dbg !10717
  br i1 %10, label %34, label %11, !dbg !10718

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !10718

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !10709, metadata !DIExpression()), !dbg !10711
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !10719
  store i32 %17, i32* %19, align 4, !dbg !10721
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !10722
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !10723
  %22 = load i32, i32* %21, align 4, !dbg !10723
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !10724
  store i32 %22, i32* %23, align 4, !dbg !10725
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !10726
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !10727
  %26 = load i32, i32* %25, align 4, !dbg !10727
  %27 = load i32, i32* %4, align 4, !dbg !10728
  %28 = add i32 %27, %26, !dbg !10728
  store i32 %28, i32* %4, align 4, !dbg !10728
  %29 = add i32 %18, 1, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %29, metadata !10709, metadata !DIExpression()), !dbg !10711
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !10715
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !10716
  %32 = load i32, i32* %31, align 4, !dbg !10716
  %33 = icmp eq i32 %32, 0, !dbg !10717
  br i1 %33, label %34, label %16, !dbg !10718, !llvm.loop !10730

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !10711
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !10732
  %37 = bitcast i8* %36 to i32*, !dbg !10732
  store i32 %35, i32* %37, align 4, !dbg !10733
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !10734
  %39 = bitcast i8* %38 to i16*, !dbg !10734
  store i16 512, i16* %39, align 4, !dbg !10735
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !10736
  br label %40, !dbg !10737

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %41, metadata !10710, metadata !DIExpression()), !dbg !10711
  %42 = icmp eq i32 %41, -121, !dbg !10740
  br i1 %42, label %40, label %43, !dbg !10741, !llvm.loop !10742

43:                                               ; preds = %40
  ret i32 0, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !10745 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10747, metadata !DIExpression()), !dbg !10751
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10752
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !10748, metadata !DIExpression()), !dbg !10751
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10753
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !10754

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10755
  call void @llvm.dbg.value(metadata i32 %8, metadata !10750, metadata !DIExpression()), !dbg !10751
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10757, !range !2988
  %10 = icmp eq i8 %9, 0, !dbg !10757
  br i1 %10, label %12, label %11, !dbg !10759

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !10760
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10762
  br label %12, !dbg !10763

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !10764
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !10765
  %15 = load i8, i8* %14, align 1, !dbg !10765
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %16, metadata !10749, metadata !DIExpression()), !dbg !10751
  %17 = load i8*, i8** %6, align 4, !dbg !10767
  %18 = load i8, i8* %17, align 1, !dbg !10769
  %19 = zext i8 %18 to i32, !dbg !10769
  %20 = and i32 %16, %19, !dbg !10770
  %21 = icmp eq i32 %20, 0, !dbg !10771
  br i1 %21, label %22, label %25, !dbg !10772

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10773
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !10775
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10776
  %24 = bitcast i8* %23 to i8**, !dbg !10776
  store i8* null, i8** %24, align 4, !dbg !10777
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10778
  ret i32 0, !dbg !10779

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !10780
  br label %7, !dbg !10754, !llvm.loop !10782
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !10784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10786, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %1, metadata !10787, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 0, metadata !10788, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 1, metadata !10792, metadata !DIExpression()), !dbg !10800
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10801
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10793, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 0, metadata !10794, metadata !DIExpression()), !dbg !10800
  %4 = bitcast i8* %0 to i32*, !dbg !10802
  %5 = load i32, i32* %4, align 4, !dbg !10802
  %6 = xor i32 %5, -1, !dbg !10802
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10802
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !10802
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !10802
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !10802
  %11 = icmp eq i32 %6, %10, !dbg !10802
  br i1 %11, label %13, label %12, !dbg !10805

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !10806
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10806
  unreachable, !dbg !10806

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10808
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !10809
  store i8 2, i8* %14, align 4, !dbg !10810
  call void @llvm.dbg.value(metadata i32 %19, metadata !10794, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %1, metadata !10787, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !10800
  br label %15, !dbg !10811

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !10812
  call void @llvm.dbg.value(metadata i32 %16, metadata !10788, metadata !DIExpression()), !dbg !10800
  %17 = icmp eq i32 %16, -121, !dbg !10814
  br i1 %17, label %15, label %18, !dbg !10815, !llvm.loop !10816

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !10818
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10819
  %21 = bitcast i8* %20 to i8**, !dbg !10819
  %22 = load i8*, i8** %21, align 4, !dbg !10819
  %23 = ptrtoint i8* %22 to i32, !dbg !10820
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %24, metadata !10789, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %24, metadata !10790, metadata !DIExpression()), !dbg !10800
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !10822
  %26 = bitcast i8* %25 to i16*, !dbg !10822
  %27 = load i16, i16* %26, align 2, !dbg !10822
  %28 = zext i16 %27 to i32, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %28, metadata !10795, metadata !DIExpression()), !dbg !10824
  %29 = lshr i32 %24, 10, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %29, metadata !10798, metadata !DIExpression()), !dbg !10824
  %30 = and i32 %29, %28, !dbg !10826
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !10828
  %33 = icmp eq i32 %32, 0, !dbg !10828
  call void @llvm.dbg.value(metadata i32 0, metadata !10799, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %29, metadata !10798, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %28, metadata !10795, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 1, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %24, metadata !10790, metadata !DIExpression()), !dbg !10800
  br i1 %33, label %34, label %51, !dbg !10828

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !10799, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %36, metadata !10798, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %37, metadata !10795, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %38, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %39, metadata !10790, metadata !DIExpression()), !dbg !10800
  %40 = and i32 %37, 1, !dbg !10829
  %41 = icmp eq i32 %40, 0, !dbg !10829
  %42 = add i32 %35, 10, !dbg !10835
  %43 = shl nuw i32 1, %42, !dbg !10835
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !10835
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !10835
  call void @llvm.dbg.value(metadata i32 %45, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %44, metadata !10790, metadata !DIExpression()), !dbg !10800
  %46 = lshr i32 %37, 1, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %46, metadata !10795, metadata !DIExpression()), !dbg !10824
  %47 = lshr i32 %36, 1, !dbg !10837
  call void @llvm.dbg.value(metadata i32 %47, metadata !10798, metadata !DIExpression()), !dbg !10824
  %48 = add i32 %35, 1, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %48, metadata !10799, metadata !DIExpression()), !dbg !10824
  %49 = and i32 %36, 2, !dbg !10839
  %50 = icmp eq i32 %49, 0, !dbg !10839
  br i1 %50, label %34, label %51, !dbg !10840, !llvm.loop !10841

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !10843
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !10844
  call void @llvm.dbg.value(metadata i32 %53, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %52, metadata !10790, metadata !DIExpression()), !dbg !10800
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !10845

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10846
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !10846
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !10846
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !10848
  br label %70, !dbg !10849

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10850
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !10850
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !10850
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !10851
  br label %70, !dbg !10852

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10853
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !10853
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !10853
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !10854
  br label %70, !dbg !10855

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !10856
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10856
  unreachable, !dbg !10856

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !10860
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !10860
  store i8 %73, i8* %74, align 1, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %53, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %52, metadata !10790, metadata !DIExpression()), !dbg !10800
  %75 = trunc i32 %19 to i8, !dbg !10861
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !10861

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10862
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !10862
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !10862
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !10864
  br label %91, !dbg !10865

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10866
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !10866
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !10866
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !10867
  br label %91, !dbg !10868

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10869
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !10869
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !10869
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !10870
  br label %91, !dbg !10871

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !10872
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !10872
  store i8 %94, i8* %95, align 1, !dbg !10872
  br label %96, !dbg !10873

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !10791, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %53, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %16, metadata !10788, metadata !DIExpression()), !dbg !10800
  %97 = icmp eq i32 %53, 0, !dbg !10873
  br i1 %97, label %111, label %98, !dbg !10876

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !10877
  call void @llvm.dbg.value(metadata i8* %99, metadata !10791, metadata !DIExpression()), !dbg !10800
  %100 = ptrtoint i8* %99 to i32, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %100, metadata !10791, metadata !DIExpression()), !dbg !10800
  br label %101, !dbg !10876

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !10792, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %103, metadata !10791, metadata !DIExpression()), !dbg !10800
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !10879
  br label %104, !dbg !10881

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %105, metadata !10788, metadata !DIExpression()), !dbg !10800
  %106 = icmp eq i32 %105, -121, !dbg !10884
  br i1 %106, label %104, label %107, !dbg !10886, !llvm.loop !10887

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !10889
  call void @llvm.dbg.value(metadata i32 %108, metadata !10792, metadata !DIExpression()), !dbg !10800
  %109 = add i32 %103, %52, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %109, metadata !10791, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %105, metadata !10788, metadata !DIExpression()), !dbg !10800
  %110 = icmp eq i32 %108, 0, !dbg !10873
  br i1 %110, label %111, label %101, !dbg !10876, !llvm.loop !10891

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !10800
  store i8 0, i8* %14, align 4, !dbg !10893
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10894
  ret i32 %112, !dbg !10895
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !10896 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10898, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i8* %1, metadata !10899, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i8* %2, metadata !10900, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 %3, metadata !10901, metadata !DIExpression()), !dbg !10915
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10916
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !10902, metadata !DIExpression()), !dbg !10915
  %8 = ptrtoint i8* %1 to i32, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %8, metadata !10904, metadata !DIExpression()), !dbg !10915
  %9 = bitcast i8** %5 to i8*, !dbg !10918
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !10918
  call void @llvm.dbg.value(metadata i8* %2, metadata !10905, metadata !DIExpression()), !dbg !10915
  store i8* %2, i8** %5, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata i32 0, metadata !10907, metadata !DIExpression()), !dbg !10915
  %10 = bitcast i32* %6 to i8*, !dbg !10920
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !10920
  %11 = bitcast i8* %0 to i32*, !dbg !10921
  %12 = load i32, i32* %11, align 4, !dbg !10921
  %13 = xor i32 %12, -1, !dbg !10921
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10921
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !10921
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !10921
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !10921
  %18 = icmp eq i32 %13, %17, !dbg !10921
  br i1 %18, label %20, label %19, !dbg !10924

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !10925
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10925
  unreachable, !dbg !10925

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10927
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !10928
  store i8 1, i8* %21, align 4, !dbg !10929
  br label %22, !dbg !10930

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %23, metadata !10907, metadata !DIExpression()), !dbg !10915
  %24 = icmp eq i32 %23, -121, !dbg !10933
  br i1 %24, label %22, label %25, !dbg !10934, !llvm.loop !10935

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !10937
  br i1 %26, label %104, label %27, !dbg !10938

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !10938

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !10939
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !10915
  call void @llvm.dbg.value(metadata i32 %38, metadata !10904, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 %37, metadata !10901, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i8* %36, metadata !10905, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i8* %36, metadata !10906, metadata !DIExpression()), !dbg !10915
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10940
  %40 = shl i32 %39, 1, !dbg !10941
  %41 = add i32 %40, -1, !dbg !10942
  %42 = and i32 %41, %38, !dbg !10943
  %43 = sub i32 %40, %42, !dbg !10944
  %44 = icmp ugt i32 %37, %43, !dbg !10945
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !10946
  call void @llvm.dbg.value(metadata i32 %45, metadata !10908, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 %45, metadata !10909, metadata !DIExpression()), !dbg !10915
  store i32 %45, i32* %6, align 4, !dbg !10947
  call void @llvm.dbg.value(metadata i8* %36, metadata !10905, metadata !DIExpression()), !dbg !10915
  %46 = ptrtoint i8* %36 to i32, !dbg !10948
  %47 = and i32 %46, 134217728, !dbg !10949
  %48 = icmp eq i32 %47, 0, !dbg !10949
  br i1 %48, label %58, label %49, !dbg !10950

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !10911, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i32 %45, metadata !10909, metadata !DIExpression()), !dbg !10915
  %50 = icmp eq i32 %45, 0, !dbg !10952
  br i1 %50, label %58, label %51, !dbg !10955

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !10911, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i8* %36, metadata !10905, metadata !DIExpression()), !dbg !10915
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !10956
  %54 = load i8, i8* %53, align 1, !dbg !10956
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !10958
  store i8 %54, i8* %55, align 1, !dbg !10959
  %56 = add nuw i32 %52, 1, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %56, metadata !10911, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i32 %45, metadata !10909, metadata !DIExpression()), !dbg !10915
  %57 = icmp eq i32 %56, %45, !dbg !10952
  br i1 %57, label %58, label %51, !dbg !10955, !llvm.loop !10961

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !10963
  call void @llvm.dbg.value(metadata i8* %59, metadata !10906, metadata !DIExpression()), !dbg !10915
  %60 = load i32, i32* %29, align 4, !dbg !10964
  %61 = and i32 %60, 16, !dbg !10966
  %62 = icmp eq i32 %61, 0, !dbg !10966
  br i1 %62, label %63, label %64, !dbg !10967

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !10968
  br label %64, !dbg !10970

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !10971
  %66 = icmp eq i8 %65, 4, !dbg !10973
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !10974
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !10974
  %69 = load i8, i8* %68, align 1, !dbg !10974
  %70 = zext i8 %69 to i32, !dbg !10974
  br i1 %66, label %71, label %75, !dbg !10975

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !10905, metadata !DIExpression(DW_OP_deref)), !dbg !10915
  call void @llvm.dbg.value(metadata i32* %6, metadata !10909, metadata !DIExpression(DW_OP_deref)), !dbg !10915
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !10976
  call void @llvm.dbg.value(metadata i32 %72, metadata !10910, metadata !DIExpression()), !dbg !10915
  %73 = load i8*, i8** %5, align 4, !dbg !10978
  call void @llvm.dbg.value(metadata i8* %73, metadata !10905, metadata !DIExpression()), !dbg !10915
  %74 = load i32, i32* %6, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %74, metadata !10909, metadata !DIExpression()), !dbg !10915
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !10980
  br label %79, !dbg !10981

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !10982
  call void @llvm.dbg.value(metadata i32 %76, metadata !10910, metadata !DIExpression()), !dbg !10915
  %77 = load i8*, i8** %5, align 4, !dbg !10984
  call void @llvm.dbg.value(metadata i8* %77, metadata !10905, metadata !DIExpression()), !dbg !10915
  %78 = load i32, i32* %6, align 4, !dbg !10985
  call void @llvm.dbg.value(metadata i32 %78, metadata !10909, metadata !DIExpression()), !dbg !10915
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !10986
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !10974
  call void @llvm.dbg.value(metadata i32 %80, metadata !10910, metadata !DIExpression()), !dbg !10915
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !10987
  call void @llvm.dbg.value(metadata i32 %81, metadata !10903, metadata !DIExpression()), !dbg !10915
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10988
  %82 = load i8, i8* %30, align 1, !dbg !10989
  %83 = zext i8 %82 to i32, !dbg !10990
  %84 = add i32 %45, 1, !dbg !10991
  %85 = add i32 %84, %83, !dbg !10992
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10993
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10994
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !10995
  %86 = load i16, i16* %34, align 2, !dbg !10996
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !10997
  %87 = load i16, i16* %34, align 2, !dbg !10998
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !10999
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !11000
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !11001

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !11002
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !11004
  call void @llvm.dbg.value(metadata i32 %94, metadata !10907, metadata !DIExpression()), !dbg !10915
  %95 = icmp eq i32 %94, 0, !dbg !11005
  br i1 %95, label %92, label %96, !dbg !11006, !llvm.loop !11007

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %97, metadata !10909, metadata !DIExpression()), !dbg !10915
  %98 = load i8*, i8** %5, align 4, !dbg !11010
  call void @llvm.dbg.value(metadata i8* %98, metadata !10905, metadata !DIExpression()), !dbg !10915
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !11010
  call void @llvm.dbg.value(metadata i8* %99, metadata !10905, metadata !DIExpression()), !dbg !10915
  store i8* %99, i8** %5, align 4, !dbg !11010
  %100 = sub i32 %37, %45, !dbg !11011
  call void @llvm.dbg.value(metadata i32 %100, metadata !10901, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10904, metadata !DIExpression()), !dbg !10915
  %101 = icmp eq i32 %94, 1, !dbg !11012
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !11014
  br i1 %103, label %35, label %104, !dbg !11014, !llvm.loop !11015

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !10915
  call void @llvm.dbg.value(metadata i32 %105, metadata !10907, metadata !DIExpression()), !dbg !10915
  store i8 0, i8* %21, align 4, !dbg !11017
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11018
  %106 = icmp eq i32 %105, 1, !dbg !11019
  %107 = select i1 %106, i32 0, i32 %105, !dbg !10915
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !11021
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !11021
  ret i32 %107, !dbg !11021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !11022 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !11024, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i32 undef, metadata !11025, metadata !DIExpression()), !dbg !11026
  ret i32 -12, !dbg !11027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !11028 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11030, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 undef, metadata !11031, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 0, metadata !11033, metadata !DIExpression()), !dbg !11040
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11041
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11034, metadata !DIExpression()), !dbg !11040
  %4 = bitcast i8* %0 to i32*, !dbg !11042
  %5 = load i32, i32* %4, align 4, !dbg !11042
  %6 = xor i32 %5, -1, !dbg !11042
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11042
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !11042
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !11042
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !11042
  %11 = icmp eq i32 %6, %10, !dbg !11042
  br i1 %11, label %13, label %12, !dbg !11045

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !11046
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !11046
  unreachable, !dbg !11046

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11048
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !11048
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !11048
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !11049
  %18 = load i8, i8* %17, align 1, !dbg !11049
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %19, metadata !11035, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11040
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !11051
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !11052
  %22 = load i8, i8* %21, align 1, !dbg !11052
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %23, metadata !11036, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11040
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %24, metadata !11033, metadata !DIExpression()), !dbg !11040
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11055
  %26 = bitcast i8* %25 to i8**, !dbg !11055
  %27 = load i8*, i8** %26, align 4, !dbg !11055
  %28 = load i8, i8* %27, align 1, !dbg !11056
  %29 = zext i8 %28 to i32, !dbg !11056
  %30 = and i32 %19, %29, !dbg !11057
  %31 = icmp eq i32 %30, 0, !dbg !11058
  br i1 %31, label %32, label %62, !dbg !11059

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !11036, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11040
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !11060
  %34 = load i8, i8* %33, align 1, !dbg !11060
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !11061
  %36 = load i8, i8* %35, align 1, !dbg !11061
  %37 = or i8 %36, %34, !dbg !11062
  call void @llvm.dbg.value(metadata i8 %37, metadata !11037, metadata !DIExpression()), !dbg !11063
  %38 = zext i8 %37 to i32, !dbg !11064
  %39 = and i32 %23, %38, !dbg !11066
  %40 = icmp eq i32 %39, 0, !dbg !11067
  br i1 %40, label %41, label %46, !dbg !11068

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !11069
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !11070
  br i1 %45, label %51, label %46, !dbg !11070

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !11071, !range !2988
  %48 = icmp eq i8 %47, 0, !dbg !11071
  br i1 %48, label %49, label %50, !dbg !11075

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !11076
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !11076
  unreachable, !dbg !11076

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !11078
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !11079
  call void @llvm.dbg.value(metadata i32 -121, metadata !11032, metadata !DIExpression()), !dbg !11040
  br label %62, !dbg !11080

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !11081
  %53 = bitcast i8* %52 to i32*, !dbg !11081
  %54 = load i32, i32* %53, align 4, !dbg !11081
  %55 = and i32 %54, 2, !dbg !11084
  %56 = icmp eq i32 %55, 0, !dbg !11084
  br i1 %56, label %63, label %57, !dbg !11085

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !11086
  %59 = bitcast i8* %58 to i16*, !dbg !11086
  %60 = load i16, i16* %59, align 2, !dbg !11086
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !11088
  %61 = load i16, i16* %59, align 2, !dbg !11089
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !11090
  br label %63, !dbg !11091

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !11032, metadata !DIExpression()), !dbg !11040
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !11092
  br label %65, !dbg !11093

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !11094
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !11095
  call void @llvm.dbg.value(metadata i32 0, metadata !11032, metadata !DIExpression()), !dbg !11040
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !11092
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %64, metadata !11032, metadata !DIExpression()), !dbg !11040
  br label %65, !dbg !11099

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !11040
  call void @llvm.dbg.value(metadata i32 %66, metadata !11032, metadata !DIExpression()), !dbg !11040
  ret i32 %66, !dbg !11100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !11101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11103, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.value(metadata i32 undef, metadata !11104, metadata !DIExpression()), !dbg !11108
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11109
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11105, metadata !DIExpression()), !dbg !11108
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11110
  call void @llvm.dbg.value(metadata i32 %4, metadata !11107, metadata !DIExpression()), !dbg !11108
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !11111
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !11112

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !11113
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !11115
  %12 = load i8, i8* %11, align 1, !dbg !11115
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %13, metadata !11106, metadata !DIExpression()), !dbg !11108
  %14 = load i8*, i8** %8, align 4, !dbg !11117
  %15 = load i8, i8* %14, align 1, !dbg !11119
  %16 = zext i8 %15 to i32, !dbg !11119
  %17 = and i32 %13, %16, !dbg !11120
  %18 = icmp eq i32 %17, 0, !dbg !11121
  br i1 %18, label %19, label %9, !dbg !11122, !llvm.loop !11123

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !11125
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !11126
  ret i32 0, !dbg !11127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !11128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11130, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i32 undef, metadata !11131, metadata !DIExpression()), !dbg !11133
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11134
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !11132, metadata !DIExpression()), !dbg !11133
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11135
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !11136
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !11137
  ret i32 0, !dbg !11138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !11139 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !11141, metadata !DIExpression()), !dbg !11144
  call void @llvm.dbg.value(metadata i8* undef, metadata !11142, metadata !DIExpression()), !dbg !11144
  call void @llvm.dbg.value(metadata i32 undef, metadata !11143, metadata !DIExpression()), !dbg !11144
  ret i32 0, !dbg !11145
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !11146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11148, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %1, metadata !11149, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8* undef, metadata !11150, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i8* %0, metadata !11151, metadata !DIExpression()), !dbg !11152
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !11153

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11151, metadata !DIExpression()), !dbg !11152
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !11154
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !11154
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !11154
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !11157
  br label %21, !dbg !11158

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !11159
  %11 = load i8, i8* %10, align 1, !dbg !11163
  %12 = icmp eq i8 %11, -62, !dbg !11164
  br i1 %12, label %13, label %21, !dbg !11165

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11166
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !11166
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !11166
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !11167
  %18 = load i32, i32* %17, align 4, !dbg !11167
  %19 = icmp eq i32 %18, 262144, !dbg !11168
  br i1 %19, label %22, label %21, !dbg !11169

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !11170
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !11170
  unreachable, !dbg !11170

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !11175

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !11152
  ret i32 %23, !dbg !11176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !11177 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11179, metadata !DIExpression()), !dbg !11182
  call void @llvm.dbg.value(metadata i8* %0, metadata !11180, metadata !DIExpression()), !dbg !11182
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11183
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !11183
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !11183
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !11185
  %6 = load i8, i8* %5, align 1, !dbg !11185
  %7 = icmp eq i8 %6, 0, !dbg !11186
  br i1 %7, label %19, label %8, !dbg !11187

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11188
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !11180, metadata !DIExpression()), !dbg !11182
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %10, metadata !11181, metadata !DIExpression()), !dbg !11182
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11191
  %12 = bitcast i8* %11 to i8**, !dbg !11191
  %13 = load i8*, i8** %12, align 4, !dbg !11191
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !11193
  %15 = load i8, i8* %14, align 1, !dbg !11193
  %16 = zext i8 %15 to i32, !dbg !11193
  %17 = and i32 %10, %16, !dbg !11194
  %18 = icmp eq i32 %17, 0, !dbg !11194
  br i1 %18, label %19, label %20, !dbg !11195

19:                                               ; preds = %8, %1
  br label %20, !dbg !11196

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !11182
  ret i32 %21, !dbg !11197
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !11198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11202, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.value(metadata i32 %1, metadata !11203, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.value(metadata i8 %2, metadata !11204, metadata !DIExpression()), !dbg !11210
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !11211
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !11206, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.value(metadata i32 0, metadata !11207, metadata !DIExpression()), !dbg !11210
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !11212
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !11212
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !11212
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !11213
  %9 = load i8, i8* %8, align 1, !dbg !11213
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %10, metadata !11209, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11210
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !11215, !range !2988
  %12 = icmp eq i8 %11, 0, !dbg !11215
  br i1 %12, label %18, label %13, !dbg !11217

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !11218, !range !2988
  %15 = icmp eq i8 %14, 0, !dbg !11218
  br i1 %15, label %16, label %17, !dbg !11222

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !11223
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !11223
  unreachable, !dbg !11223

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !11225
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !11226
  br label %42, !dbg !11227

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !11209, metadata !DIExpression()), !dbg !11210
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !11228
  %20 = bitcast i8* %19 to i8**, !dbg !11228
  %21 = load i8*, i8** %20, align 4, !dbg !11228
  %22 = load i8, i8* %21, align 1, !dbg !11230
  %23 = zext i8 %22 to i32, !dbg !11230
  %24 = and i32 %10, %23, !dbg !11231
  %25 = icmp eq i32 %24, 0, !dbg !11232
  br i1 %25, label %26, label %42, !dbg !11233

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %27, metadata !11205, metadata !DIExpression()), !dbg !11210
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !11236
  %28 = inttoptr i32 %1 to i8*, !dbg !11237
  %29 = load volatile i8, i8* %28, align 1, !dbg !11238
  call void @llvm.dbg.value(metadata i8 %29, metadata !11208, metadata !DIExpression()), !dbg !11210
  %30 = icmp eq i8 %29, %2, !dbg !11239
  br i1 %30, label %39, label %31, !dbg !11241

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !11207, metadata !DIExpression()), !dbg !11210
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !11242
  br i1 %32, label %33, label %38, !dbg !11245

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !11246
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !11248
  %36 = load volatile i8, i8* %28, align 1, !dbg !11249
  %37 = icmp eq i8 %36, %2, !dbg !11251
  br i1 %37, label %39, label %38, !dbg !11252

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !11207, metadata !DIExpression()), !dbg !11210
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !11253
  br label %42, !dbg !11254

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !11207, metadata !DIExpression()), !dbg !11210
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !11253
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !11255
  %41 = icmp eq i32 %40, 0, !dbg !11258
  br i1 %41, label %42, label %44, !dbg !11259

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !11260

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !11210
  ret i32 %45, !dbg !11261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !11262 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !11266, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 %1, metadata !11267, metadata !DIExpression()), !dbg !11269
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !11270
  %4 = load i32, i32* %3, align 4, !dbg !11270
  %5 = and i32 %4, 16, !dbg !11272
  %6 = icmp eq i32 %5, 0, !dbg !11272
  br i1 %6, label %7, label %8, !dbg !11273

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !11274
  br label %8, !dbg !11276

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11277
  call void @llvm.dbg.value(metadata i32 %9, metadata !11268, metadata !DIExpression()), !dbg !11269
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !11278
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !11279
  %11 = load i16, i16* %10, align 2, !dbg !11279
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !11280
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !11280
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !11281
  %15 = load i8, i8* %14, align 1, !dbg !11281
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !11282
  %17 = load i8, i8* %16, align 1, !dbg !11282
  %18 = zext i8 %17 to i32, !dbg !11283
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !11284
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !11285
  ret void, !dbg !11286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !11287 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !11289, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11290, metadata !DIExpression()), !dbg !11292
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !11293
  %4 = load i8, i8* %3, align 1, !dbg !11293
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !11294

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !11295
  %7 = load i32, i32* %6, align 4, !dbg !11297
  %8 = or i32 %7, 4, !dbg !11297
  store i32 %8, i32* %6, align 4, !dbg !11297
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11298
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11292
  br label %18, !dbg !11299

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !11300
  %12 = load i32, i32* %11, align 4, !dbg !11301
  %13 = or i32 %12, 2, !dbg !11301
  store i32 %13, i32* %11, align 4, !dbg !11301
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11302
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11292
  br label %18, !dbg !11303

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11304
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11292
  br label %18, !dbg !11305

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !11291, metadata !DIExpression()), !dbg !11292
  tail call void @Flash_ReturnReady() #21, !dbg !11306
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !11306
  unreachable, !dbg !11306

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11292
  ret i32 0, !dbg !11310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11311 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %2, metadata !11317, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %3, metadata !11318, metadata !DIExpression()), !dbg !11320
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !11321
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !11323
  br i1 %7, label %33, label %8, !dbg !11323

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !11324
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !11324
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !11326
  br i1 %11, label %33, label %12, !dbg !11327

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !11328
  %14 = load i8*, i8** %13, align 4, !dbg !11328
  %15 = icmp eq i8* %14, null, !dbg !11329
  br i1 %15, label %33, label %16, !dbg !11330

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !11331
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !11332
  store i8* %17, i8** %18, align 4, !dbg !11333
  %19 = trunc i32 %3 to i16, !dbg !11334
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !11335
  store i16 %19, i16* %20, align 2, !dbg !11336
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11337
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !11338
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !11339
  store i8 -81, i8* %23, align 1, !dbg !11340
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !11341
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !11342
  %25 = load i8, i8* %24, align 1, !dbg !11343
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !11345

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !11346
  br i1 %27, label %31, label %28, !dbg !11347

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !11348
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !11350
  store i8 -97, i8* %30, align 1, !dbg !11351
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !11352
  br label %31, !dbg !11353

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !11354
  call void @llvm.dbg.value(metadata i32 0, metadata !11319, metadata !DIExpression()), !dbg !11320
  br label %33, !dbg !11355

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !11320
  ret i32 %34, !dbg !11356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !11357 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !11361, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i8* %1, metadata !11362, metadata !DIExpression()), !dbg !11364
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !11365
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !11366
  %5 = and i32 %4, 1, !dbg !11366
  %6 = icmp eq i32 %5, 0, !dbg !11368
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !11369
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !11369
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !11370
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !11370
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !11370
  %12 = load i8, i8* %11, align 1, !dbg !11369
  store i8 %12, i8* %3, align 1, !dbg !11369
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !11371
  %14 = load i16, i16* %13, align 2, !dbg !11371
  call void @llvm.dbg.value(metadata i8* %3, metadata !11363, metadata !DIExpression(DW_OP_deref)), !dbg !11364
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !11372
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !11373
  ret void, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !11374 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11378, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.value(metadata i8* %1, metadata !11379, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.value(metadata i8* %2, metadata !11380, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.value(metadata i16 %3, metadata !11381, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.value(metadata i16 %4, metadata !11382, metadata !DIExpression()), !dbg !11384
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11385
  call void @llvm.dbg.value(metadata i32 %6, metadata !11383, metadata !DIExpression()), !dbg !11384
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !11386
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !11387
  ret void, !dbg !11388
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !11389 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11391, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !11394, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i32 0, metadata !11392, metadata !DIExpression()), !dbg !11397
  br label %6, !dbg !11398

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !11400
  call void @llvm.dbg.value(metadata i32 %3, metadata !11392, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i32 %8, metadata !11392, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11397
  %4 = icmp ult i32 %8, 4, !dbg !11402
  %5 = icmp eq i32 %3, 5, !dbg !11402
  br i1 %5, label %26, label %6, !dbg !11398, !llvm.loop !11403

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11392, metadata !DIExpression()), !dbg !11397
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !11393, metadata !DIExpression()), !dbg !11397
  %12 = icmp eq i8 %10, 0, !dbg !11405
  br i1 %12, label %23, label %13, !dbg !11409

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11393, metadata !DIExpression()), !dbg !11397
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !11410
  %16 = load i8, i8* %15, align 1, !dbg !11410
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !11413
  %18 = load i8, i8* %17, align 1, !dbg !11413
  %19 = icmp eq i8 %16, %18, !dbg !11414
  br i1 %19, label %20, label %23, !dbg !11415

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !11416
  call void @llvm.dbg.value(metadata i32 %21, metadata !11393, metadata !DIExpression()), !dbg !11397
  %22 = icmp eq i32 %21, %11, !dbg !11405
  br i1 %22, label %26, label %13, !dbg !11409, !llvm.loop !11417

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !11419
  %25 = icmp eq i32 %24, %11, !dbg !11420
  call void @llvm.dbg.value(metadata i32 %8, metadata !11392, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11397
  br i1 %25, label %26, label %2, !dbg !11422

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !11402
  ret i1 %27, !dbg !11423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !11424 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !11436
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11436
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !11428, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !11435, metadata !DIExpression()), !dbg !11438
  %3 = load i16, i16* @cmem_index, align 2, !dbg !11439
  %4 = icmp sgt i16 %3, -1, !dbg !11441
  br i1 %4, label %34, label %5, !dbg !11442

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !11443
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !11444
  call void @llvm.dbg.value(metadata i32 0, metadata !11426, metadata !DIExpression()), !dbg !11438
  br label %7, !dbg !11445

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11426, metadata !DIExpression()), !dbg !11438
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !11427, metadata !DIExpression()), !dbg !11438
  %12 = icmp eq i8 %10, 0, !dbg !11447
  br i1 %12, label %24, label %13, !dbg !11452

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11427, metadata !DIExpression()), !dbg !11438
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !11453
  %16 = load i8, i8* %15, align 1, !dbg !11453
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !11456
  %18 = load i16, i16* %17, align 2, !dbg !11456
  %19 = zext i8 %16 to i16, !dbg !11457
  %20 = icmp eq i16 %18, %19, !dbg !11457
  br i1 %20, label %21, label %24, !dbg !11458

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !11459
  call void @llvm.dbg.value(metadata i32 %22, metadata !11427, metadata !DIExpression()), !dbg !11438
  %23 = icmp eq i32 %22, %11, !dbg !11447
  br i1 %23, label %27, label %13, !dbg !11452, !llvm.loop !11460

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !11462
  %26 = icmp eq i32 %25, %11, !dbg !11463
  br i1 %26, label %27, label %29, !dbg !11465

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !11466
  store i16 %28, i16* @cmem_index, align 2, !dbg !11468
  br label %34, !dbg !11469

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !11470
  call void @llvm.dbg.value(metadata i32 %30, metadata !11426, metadata !DIExpression()), !dbg !11438
  %31 = icmp eq i32 %30, 5, !dbg !11471
  br i1 %31, label %32, label %7, !dbg !11445, !llvm.loop !11472

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !11474
  br label %34, !dbg !11474

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !11438
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11475
  ret i32 %36, !dbg !11475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !11476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11480, metadata !DIExpression()), !dbg !11481
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !11482
  ret %struct.CMEMEntryID* %2, !dbg !11483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !11484 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !11488, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i8* undef, metadata !11489, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i16* %2, metadata !11490, metadata !DIExpression()), !dbg !11495
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11496
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !11496
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11496
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !11493, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i8 -81, metadata !11491, metadata !DIExpression()), !dbg !11498
  store i8 -81, i8* %4, align 1, !dbg !11499
  call void @llvm.dbg.value(metadata i8* %4, metadata !11491, metadata !DIExpression(DW_OP_deref)), !dbg !11498
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !11500
  %7 = load i8, i8* %6, align 1, !dbg !11501
  %8 = add i8 %7, 1, !dbg !11503
  %9 = icmp ult i8 %8, 2, !dbg !11503
  br i1 %9, label %12, label %10, !dbg !11503

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !11504
  br i1 %11, label %13, label %12, !dbg !11505

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !11491, metadata !DIExpression()), !dbg !11498
  store i8 -97, i8* %4, align 1, !dbg !11506
  call void @llvm.dbg.value(metadata i8* %4, metadata !11491, metadata !DIExpression(DW_OP_deref)), !dbg !11498
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !11508
  br label %13, !dbg !11509

13:                                               ; preds = %12, %10
  br label %14, !dbg !11510

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11494, metadata !DIExpression()), !dbg !11498
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !11512
  %17 = load i8, i8* %16, align 1, !dbg !11512
  %18 = zext i8 %17 to i16, !dbg !11512
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !11515
  store i16 %18, i16* %19, align 2, !dbg !11516
  %20 = add nuw nsw i32 %15, 1, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %20, metadata !11494, metadata !DIExpression()), !dbg !11498
  %21 = icmp eq i32 %20, 3, !dbg !11518
  br i1 %21, label %22, label %14, !dbg !11510, !llvm.loop !11519

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11521
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !11523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11525, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 0, metadata !11526, metadata !DIExpression()), !dbg !11529
  br label %6, !dbg !11530

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %3, metadata !11526, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 %8, metadata !11526, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11529
  %4 = icmp ult i32 %8, 4, !dbg !11534
  %5 = icmp eq i32 %3, 5, !dbg !11534
  br i1 %5, label %26, label %6, !dbg !11530, !llvm.loop !11535

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11526, metadata !DIExpression()), !dbg !11529
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !11527, metadata !DIExpression()), !dbg !11529
  %12 = icmp eq i8 %10, 0, !dbg !11537
  br i1 %12, label %23, label %13, !dbg !11541

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11527, metadata !DIExpression()), !dbg !11529
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !11542
  %16 = load i8, i8* %15, align 1, !dbg !11542
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !11545
  %18 = load i8, i8* %17, align 1, !dbg !11545
  %19 = icmp eq i8 %16, %18, !dbg !11546
  br i1 %19, label %20, label %23, !dbg !11547

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %21, metadata !11527, metadata !DIExpression()), !dbg !11529
  %22 = icmp eq i32 %21, %11, !dbg !11537
  br i1 %22, label %26, label %13, !dbg !11541, !llvm.loop !11549

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !11551
  %25 = icmp eq i32 %24, %11, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %8, metadata !11526, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11529
  br i1 %25, label %26, label %2, !dbg !11554

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !11534
  ret i1 %27, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !11556 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !11562
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11562
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !11560, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !11561, metadata !DIExpression()), !dbg !11564
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !11565
  %4 = icmp sgt i16 %3, -1, !dbg !11567
  br i1 %4, label %34, label %5, !dbg !11568

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !11569
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !11570
  call void @llvm.dbg.value(metadata i32 0, metadata !11558, metadata !DIExpression()), !dbg !11564
  br label %7, !dbg !11571

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11558, metadata !DIExpression()), !dbg !11564
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !11559, metadata !DIExpression()), !dbg !11564
  %12 = icmp eq i8 %10, 0, !dbg !11573
  br i1 %12, label %24, label %13, !dbg !11578

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11559, metadata !DIExpression()), !dbg !11564
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !11579
  %16 = load i8, i8* %15, align 1, !dbg !11579
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !11582
  %18 = load i16, i16* %17, align 2, !dbg !11582
  %19 = zext i8 %16 to i16, !dbg !11583
  %20 = icmp eq i16 %18, %19, !dbg !11583
  br i1 %20, label %21, label %24, !dbg !11584

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %22, metadata !11559, metadata !DIExpression()), !dbg !11564
  %23 = icmp eq i32 %22, %11, !dbg !11573
  br i1 %23, label %27, label %13, !dbg !11578, !llvm.loop !11586

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !11588
  %26 = icmp eq i32 %25, %11, !dbg !11589
  br i1 %26, label %27, label %29, !dbg !11591

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !11592
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !11594
  br label %34, !dbg !11595

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !11596
  call void @llvm.dbg.value(metadata i32 %30, metadata !11558, metadata !DIExpression()), !dbg !11564
  %31 = icmp eq i32 %30, 5, !dbg !11597
  br i1 %31, label %32, label %7, !dbg !11571, !llvm.loop !11598

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !11600
  br label %34, !dbg !11600

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !11564
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11601
  ret i32 %36, !dbg !11601
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !11602 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !11610, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i16* %1, metadata !11611, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i16* %2, metadata !11612, metadata !DIExpression()), !dbg !11618
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11619
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !11619
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11619
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !11616, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata i8 -81, metadata !11614, metadata !DIExpression()), !dbg !11621
  store i8 -81, i8* %4, align 1, !dbg !11622
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %7, metadata !11613, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i8* %4, metadata !11614, metadata !DIExpression(DW_OP_deref)), !dbg !11621
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !11624
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !11625
  %8 = load i8, i8* %6, align 1, !dbg !11626
  %9 = add i8 %8, 1, !dbg !11628
  %10 = icmp ult i8 %9, 2, !dbg !11628
  br i1 %10, label %13, label %11, !dbg !11628

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !11629
  br i1 %12, label %15, label %13, !dbg !11630

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !11614, metadata !DIExpression()), !dbg !11621
  store i8 -97, i8* %4, align 1, !dbg !11631
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %14, metadata !11613, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i8* %4, metadata !11614, metadata !DIExpression(DW_OP_deref)), !dbg !11621
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !11634
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !11635
  br label %15, !dbg !11636

15:                                               ; preds = %13, %11
  br label %16, !dbg !11637

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11617, metadata !DIExpression()), !dbg !11621
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !11639
  %19 = load i8, i8* %18, align 1, !dbg !11639
  %20 = zext i8 %19 to i16, !dbg !11639
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !11642
  store i16 %20, i16* %21, align 2, !dbg !11643
  %22 = add nuw nsw i32 %17, 1, !dbg !11644
  call void @llvm.dbg.value(metadata i32 %22, metadata !11617, metadata !DIExpression()), !dbg !11621
  %23 = icmp eq i32 %22, 3, !dbg !11645
  br i1 %23, label %24, label %16, !dbg !11637, !llvm.loop !11646

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11648
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11648
  ret void, !dbg !11649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !11650 {
  ret i32 3932160, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !11652 {
  ret i32 4194304, !dbg !11653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !11654 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !11655
  ret void, !dbg !11656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !11657 {
  ret void, !dbg !11658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !11659 {
  ret void, !dbg !11660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !11661 {
  ret i32 3932160, !dbg !11662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !11663 {
  ret i32 262144, !dbg !11664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !11665 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !11666
  ret void, !dbg !11667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !11668 {
  ret i32 134217728, !dbg !11669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !11670 {
  ret i32 4194304, !dbg !11671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !11672 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !11673
  ret i32 134217728, !dbg !11674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !11675 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !11676
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11677
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !11678
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !11679
  %4 = load i16, i16* %3, align 2, !dbg !11679
  %5 = zext i16 %4 to i32, !dbg !11677
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !11680
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !11681
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !11682
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !11683
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !11684
  ret i32 0, !dbg !11685
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !11686 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !11689
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !11690
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !11691
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !11692
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !11693
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11694
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !11695
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !11696
  %5 = load i32, i32* %4, align 4, !dbg !11696
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %6, metadata !11688, metadata !DIExpression()), !dbg !11698
  %7 = icmp eq i32 %6, -120, !dbg !11699
  %8 = select i1 %7, i32 5, i32 0, !dbg !11698
  ret i32 %8, !dbg !11701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !11702 {
  ret i8 1, !dbg !11704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !11705 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11709, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11711, metadata !DIExpression()), !dbg !11712
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !11713
  call void @llvm.dbg.value(metadata i32 %2, metadata !11710, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11711, metadata !DIExpression()), !dbg !11712
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !11714
  %4 = load i32, i32* %3, align 4, !dbg !11714
  ret i32 %4, !dbg !11715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !11716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11720, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !11721, metadata !DIExpression()), !dbg !11723
  %3 = and i32 %0, 134217727, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %3, metadata !11720, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i16 0, metadata !11722, metadata !DIExpression()), !dbg !11723
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !11725
  %5 = load i32, i32* %4, align 4, !dbg !11725
  %6 = icmp eq i32 %5, 0, !dbg !11728
  br i1 %6, label %25, label %7, !dbg !11729

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !11722, metadata !DIExpression()), !dbg !11723
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !11730
  %12 = load i32, i32* %11, align 4, !dbg !11730
  %13 = icmp ult i32 %3, %12, !dbg !11733
  br i1 %13, label %18, label %14, !dbg !11734

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !11735
  %16 = load i32, i32* %15, align 4, !dbg !11735
  %17 = icmp ult i32 %3, %16, !dbg !11736
  br i1 %17, label %25, label %18, !dbg !11737

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !11738
  call void @llvm.dbg.value(metadata i16 %19, metadata !11722, metadata !DIExpression()), !dbg !11723
  %20 = zext i16 %19 to i32, !dbg !11739
  %21 = add nuw nsw i32 %20, 1, !dbg !11740
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !11725
  %23 = load i32, i32* %22, align 4, !dbg !11725
  %24 = icmp eq i32 %23, 0, !dbg !11728
  br i1 %24, label %25, label %7, !dbg !11729, !llvm.loop !11741

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !11739
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !11743
  %28 = load i32, i32* %27, align 4, !dbg !11743
  ret i32 %28, !dbg !11744
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !11745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11747, metadata !DIExpression()), !dbg !11748
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !11749
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !11750
  ret i32 %3, !dbg !11751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11754, metadata !DIExpression()), !dbg !11757
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %2, metadata !11755, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11756, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11756, metadata !DIExpression()), !dbg !11757
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !11759
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !11760
  ret i32 %4, !dbg !11761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !11762 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !11768, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.value(metadata i32 0, metadata !11769, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.value(metadata i32 0, metadata !11770, metadata !DIExpression()), !dbg !11771
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !11772
  %3 = load i32, i32* %2, align 4, !dbg !11772
  %4 = icmp eq i32 %3, 0, !dbg !11775
  br i1 %4, label %17, label %5, !dbg !11776

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11770, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.value(metadata i32 %8, metadata !11769, metadata !DIExpression()), !dbg !11771
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !11777
  %10 = load i32, i32* %9, align 4, !dbg !11777
  %11 = mul i32 %10, %6, !dbg !11779
  %12 = add i32 %11, %8, !dbg !11780
  call void @llvm.dbg.value(metadata i32 %12, metadata !11769, metadata !DIExpression()), !dbg !11771
  %13 = add i32 %7, 1, !dbg !11781
  call void @llvm.dbg.value(metadata i32 %13, metadata !11770, metadata !DIExpression()), !dbg !11771
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !11772
  %15 = load i32, i32* %14, align 4, !dbg !11772
  %16 = icmp eq i32 %15, 0, !dbg !11775
  br i1 %16, label %17, label %5, !dbg !11776, !llvm.loop !11782

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !11771
  ret i32 %18, !dbg !11784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !11785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11789, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %1, metadata !11790, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !11791, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !11792, metadata !DIExpression()), !dbg !11798
  %5 = add i32 %1, %0, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %5, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %0, metadata !11793, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 0, metadata !11794, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 0, metadata !11796, metadata !DIExpression()), !dbg !11798
  %6 = icmp ugt i32 %5, %0, !dbg !11800
  br i1 %6, label %7, label %34, !dbg !11803

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11796, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %9, metadata !11793, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %10, metadata !11794, metadata !DIExpression()), !dbg !11798
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %11, metadata !11795, metadata !DIExpression()), !dbg !11798
  %12 = icmp eq i32 %8, 0, !dbg !11806
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !11808
  br i1 %12, label %14, label %16, !dbg !11809

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !11810
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !11812
  store i32 1, i32* %15, align 4, !dbg !11813
  br label %29, !dbg !11814

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !11815
  %18 = icmp eq i32 %11, %17, !dbg !11817
  br i1 %18, label %19, label %23, !dbg !11818

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !11819
  %21 = load i32, i32* %20, align 4, !dbg !11821
  %22 = add i32 %21, 1, !dbg !11821
  store i32 %22, i32* %20, align 4, !dbg !11821
  br label %29, !dbg !11822

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %24, metadata !11794, metadata !DIExpression()), !dbg !11798
  %25 = icmp eq i32 %24, 9, !dbg !11825
  br i1 %25, label %34, label %26, !dbg !11827

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !11828
  store i32 %11, i32* %27, align 4, !dbg !11829
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !11830
  store i32 1, i32* %28, align 4, !dbg !11831
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !11832
  call void @llvm.dbg.value(metadata i32 %30, metadata !11794, metadata !DIExpression()), !dbg !11798
  %31 = add i32 %11, %9, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %31, metadata !11793, metadata !DIExpression()), !dbg !11798
  %32 = add i32 %8, 1, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %32, metadata !11796, metadata !DIExpression()), !dbg !11798
  %33 = icmp ult i32 %31, %5, !dbg !11800
  br i1 %33, label %7, label %34, !dbg !11803, !llvm.loop !11835

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !11798
  ret i32 %35, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !11838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11842, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i32 %1, metadata !11843, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !11844, metadata !DIExpression()), !dbg !11845
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !11846
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !11847
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !11848
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !11849
  ret i32 %7, !dbg !11850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !11851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11853, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 %1, metadata !11854, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !11855, metadata !DIExpression()), !dbg !11856
  ret i32 0, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !11858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11860, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata i32 %1, metadata !11861, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !11862, metadata !DIExpression()), !dbg !11865
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %4, metadata !11863, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11864, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11864, metadata !DIExpression()), !dbg !11865
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !11867
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !11868
  ret i32 %6, !dbg !11869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !11870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11872, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.value(metadata i32 %1, metadata !11873, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !11874, metadata !DIExpression()), !dbg !11875
  ret i32 0, !dbg !11876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !11877 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11879, metadata !DIExpression()), !dbg !11882
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %2, metadata !11880, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11881, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11881, metadata !DIExpression()), !dbg !11882
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !11884
  %4 = load i32, i32* %3, align 4, !dbg !11884
  ret i32 %4, !dbg !11885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !11886 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !11890, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32* %1, metadata !11891, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 %2, metadata !11892, metadata !DIExpression()), !dbg !11893
  %4 = load i32, i32* %1, align 4, !dbg !11894
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !11896
  %6 = load i32, i32* %5, align 4, !dbg !11896
  %7 = icmp eq i32 %6, %2, !dbg !11897
  br i1 %7, label %8, label %12, !dbg !11898

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !11899
  %10 = load i32, i32* %9, align 4, !dbg !11901
  %11 = add i32 %10, 1, !dbg !11901
  store i32 %11, i32* %9, align 4, !dbg !11901
  br label %17, !dbg !11902

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !11903
  store i32 %13, i32* %1, align 4, !dbg !11903
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !11905
  store i32 1, i32* %14, align 4, !dbg !11906
  %15 = load i32, i32* %1, align 4, !dbg !11907
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !11908
  store i32 %2, i32* %16, align 4, !dbg !11909
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !11911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11915, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %1, metadata !11916, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !11917, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !11918, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11919, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11920, metadata !DIExpression()), !dbg !11924
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !11925
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !11926
  call void @llvm.dbg.value(metadata i32 0, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11920, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11919, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %0, metadata !11915, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %1, metadata !11916, metadata !DIExpression()), !dbg !11924
  %7 = icmp eq i32 %1, 0, !dbg !11927
  br i1 %7, label %53, label %8, !dbg !11930

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %10, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %11, metadata !11920, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %12, metadata !11919, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %13, metadata !11915, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %14, metadata !11916, metadata !DIExpression()), !dbg !11924
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !11931
  %16 = load i32, i32* %15, align 4, !dbg !11931
  %17 = icmp ult i32 %9, %16, !dbg !11934
  %18 = xor i1 %17, true, !dbg !11935
  %19 = zext i1 %18 to i32, !dbg !11935
  %20 = add i32 %12, %19, !dbg !11935
  call void @llvm.dbg.value(metadata i32 undef, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %20, metadata !11919, metadata !DIExpression()), !dbg !11924
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !11936
  %22 = load i32, i32* %21, align 4, !dbg !11936
  %23 = add i32 %22, %10, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %23, metadata !11922, metadata !DIExpression()), !dbg !11924
  %24 = icmp ult i32 %23, %13, !dbg !11938
  br i1 %24, label %46, label %25, !dbg !11940

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %26, metadata !11921, metadata !DIExpression()), !dbg !11924
  %27 = icmp ult i32 %14, %26, !dbg !11943
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !11945
  call void @llvm.dbg.value(metadata i32 %28, metadata !11921, metadata !DIExpression()), !dbg !11924
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !11946
  %30 = load i32, i32* %29, align 4, !dbg !11946
  %31 = icmp eq i32 %30, %28, !dbg !11948
  br i1 %31, label %32, label %36, !dbg !11949

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !11950
  %34 = load i32, i32* %33, align 4, !dbg !11952
  %35 = add i32 %34, 1, !dbg !11952
  store i32 %35, i32* %33, align 4, !dbg !11952
  br label %42, !dbg !11953

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !11954
  %38 = zext i1 %37 to i32, !dbg !11957
  %39 = add nsw i32 %11, %38, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %39, metadata !11920, metadata !DIExpression()), !dbg !11924
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !11958
  store i32 1, i32* %40, align 4, !dbg !11959
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !11960
  store i32 %28, i32* %41, align 4, !dbg !11961
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !11924
  call void @llvm.dbg.value(metadata i32 %43, metadata !11920, metadata !DIExpression()), !dbg !11924
  %44 = add i32 %28, %13, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %44, metadata !11915, metadata !DIExpression()), !dbg !11924
  %45 = sub i32 %14, %28, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %45, metadata !11916, metadata !DIExpression()), !dbg !11924
  br label %46, !dbg !11964

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !11965
  call void @llvm.dbg.value(metadata i32 %49, metadata !11920, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %48, metadata !11915, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %47, metadata !11916, metadata !DIExpression()), !dbg !11924
  %50 = add nuw i32 %9, 1, !dbg !11966
  %51 = select i1 %17, i32 %50, i32 1, !dbg !11966
  call void @llvm.dbg.value(metadata i32 %51, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %23, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %20, metadata !11919, metadata !DIExpression()), !dbg !11924
  %52 = icmp eq i32 %47, 0, !dbg !11927
  br i1 %52, label %53, label %8, !dbg !11930, !llvm.loop !11967

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !11969
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !11970 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11974
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !11975
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !11974
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !11976
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !11977
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !11978
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11979
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !11980
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !11979
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !11981
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !11982
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !11983
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %12, metadata !11972, metadata !DIExpression()), !dbg !11985
  %13 = icmp eq i32 %12, 0, !dbg !11986
  br i1 %13, label %14, label %46, !dbg !11988

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !11973, metadata !DIExpression()), !dbg !11985
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !11989
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !11991
  call void @llvm.dbg.value(metadata i32 0, metadata !11973, metadata !DIExpression()), !dbg !11985
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !11992
  %16 = icmp eq i32 %15, 0, !dbg !11994
  br i1 %16, label %34, label %17, !dbg !11995

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !11973, metadata !DIExpression()), !dbg !11985
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !11996
  %23 = load i32, i32* %22, align 4, !dbg !11996
  %24 = add i32 %20, %23, !dbg !11998
  %25 = icmp ugt i32 %18, %21, !dbg !11999
  br i1 %25, label %26, label %27, !dbg !12001

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !12002
  br label %27, !dbg !12004

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !12005
  call void @llvm.dbg.value(metadata i32 %29, metadata !11973, metadata !DIExpression()), !dbg !11985
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !11992
  %31 = load i32, i32* %30, align 4, !dbg !11992
  %32 = icmp eq i32 %31, 0, !dbg !11994
  br i1 %32, label %33, label %17, !dbg !11995, !llvm.loop !12006

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !11998
  br label %34, !dbg !11995

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !12008
  %36 = mul i32 %35, -5, !dbg !12009
  %37 = add i32 %36, 262144, !dbg !12010
  %38 = lshr i32 %37, 9, !dbg !12011
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !12012
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !12013
  call void @llvm.dbg.value(metadata i32 0, metadata !11972, metadata !DIExpression()), !dbg !11985
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !12014
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !12015
  %42 = load i8, i8* %41, align 1, !dbg !12015
  %43 = icmp eq i8 %42, 3, !dbg !12016
  br i1 %43, label %44, label %46, !dbg !12016

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %45, metadata !11972, metadata !DIExpression()), !dbg !11985
  br label %46, !dbg !12019

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !11985
  ret i32 %47, !dbg !12020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !12021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12025, metadata !DIExpression()), !dbg !12026
  %2 = icmp eq i32 %0, 0, !dbg !12027
  br i1 %2, label %3, label %9, !dbg !12029

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !12030
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !12032
  %5 = icmp slt i32 %4, 0, !dbg !12033
  br i1 %5, label %6, label %7, !dbg !12035

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !12036
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.143, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !12036
  unreachable, !dbg !12036

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !12041
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !12042
  br label %9, !dbg !12043

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12044
  ret void, !dbg !12045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !12046 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !12047
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !12048
  ret i32 %1, !dbg !12049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !12050 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !12053
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12054
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !12055
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !12056
  %4 = load i16, i16* %3, align 2, !dbg !12056
  %5 = zext i16 %4 to i32, !dbg !12054
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !12057
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !12058
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !12059
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !12060
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !12060
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !12061
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !12062
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !12063
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !12064
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !12065
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !12066
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !12067
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !12068
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !12069
  %13 = load i32, i32* %12, align 4, !dbg !12069
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !12070
  call void @llvm.dbg.value(metadata i32 %14, metadata !12052, metadata !DIExpression()), !dbg !12071
  %15 = icmp eq i32 %14, -120, !dbg !12072
  br i1 %15, label %16, label %17, !dbg !12075

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !12076
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.143, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !12076
  unreachable, !dbg !12076

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !12078
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !12079
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !12080
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !12081
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !12082
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12083
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !12084
  ret i32 0, !dbg !12085
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !12086 {
  ret void, !dbg !12087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !12088 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %1, metadata !12090, metadata !DIExpression()), !dbg !12092
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !12093
  br i1 %2, label %4, label %3, !dbg !12095

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !12096
  br label %4, !dbg !12098

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !12099
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !12099
  ret i32 %5, !dbg !12100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !12101 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %1, metadata !12103, metadata !DIExpression()), !dbg !12105
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !12106
  br i1 %2, label %3, label %4, !dbg !12108

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !12109
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !12111
  ret void, !dbg !12112

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !12113
  tail call void @Flash_ReturnReady() #20, !dbg !12115
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !12115
  unreachable, !dbg !12115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !12119 {
  ret void, !dbg !12120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !12121 {
  br label %1, !dbg !12124

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %2, metadata !12123, metadata !DIExpression()), !dbg !12127
  %3 = icmp eq i32 %2, 0, !dbg !12128
  br i1 %3, label %4, label %1, !dbg !12129, !llvm.loop !12130

4:                                                ; preds = %1
  ret void, !dbg !12132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !12133 {
  tail call void @FreeFDMLock() #21, !dbg !12134
  ret void, !dbg !12135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !12136 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12179, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.value(metadata i32 %1, metadata !12180, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.value(metadata i8* %2, metadata !12181, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.value(metadata i32 %3, metadata !12182, metadata !DIExpression()), !dbg !12185
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !12186
  %6 = load i32, i32* %5, align 4, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %6, metadata !12184, metadata !DIExpression()), !dbg !12185
  %7 = icmp ule i32 %6, %1, !dbg !12187
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !12189
  br i1 %10, label %26, label %11, !dbg !12189

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !12190
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !12190
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !12190
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !12191
  %16 = load i8*, i8** %15, align 4, !dbg !12191
  %17 = ptrtoint i8* %16 to i32, !dbg !12192
  %18 = add i32 %17, %1, !dbg !12193
  call void @llvm.dbg.value(metadata i32 %18, metadata !12183, metadata !DIExpression()), !dbg !12185
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12194
  %20 = load i8, i8* %19, align 4, !dbg !12194, !range !2988
  %21 = icmp eq i8 %20, 0, !dbg !12194
  br i1 %21, label %22, label %23, !dbg !12196

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !12197
  br label %23, !dbg !12199

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !12200
  %24 = inttoptr i32 %18 to i8*, !dbg !12201
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !12202
  tail call void @release_FDM_lock() #21, !dbg !12203
  br label %26, !dbg !12204

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !12185
  ret i32 %27, !dbg !12205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !12206 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12210, metadata !DIExpression()), !dbg !12212
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12213
  %3 = load i8, i8* %2, align 4, !dbg !12213, !range !2988
  %4 = icmp eq i8 %3, 0, !dbg !12213
  br i1 %4, label %5, label %18, !dbg !12215

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !12216
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !12217
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !12217
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !12218
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !12218
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !12219
  %11 = load i8*, i8** %10, align 4, !dbg !12219
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !12220
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !12221
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %14, metadata !12211, metadata !DIExpression()), !dbg !12212
  tail call void @release_FDM_lock() #21, !dbg !12223
  %15 = icmp slt i32 %14, 0, !dbg !12224
  br i1 %15, label %16, label %17, !dbg !12226

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !12227
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !12227
  unreachable, !dbg !12227

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !12232
  br label %18, !dbg !12233

18:                                               ; preds = %1, %17
  ret void, !dbg !12233
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !12234 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12236, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 %1, metadata !12237, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i8* %2, metadata !12238, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 %3, metadata !12239, metadata !DIExpression()), !dbg !12257
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !12258
  %7 = load i32, i32* %6, align 4, !dbg !12258
  call void @llvm.dbg.value(metadata i32 %7, metadata !12242, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 0, metadata !12243, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 0, metadata !12244, metadata !DIExpression()), !dbg !12257
  %8 = icmp ugt i32 %7, %1, !dbg !12259
  br i1 %8, label %9, label %101, !dbg !12261

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !12262
  %11 = icmp ugt i32 %10, %7, !dbg !12264
  br i1 %11, label %101, label %12, !dbg !12265

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12266
  %14 = load i8, i8* %13, align 4, !dbg !12266, !range !2988
  %15 = icmp eq i8 %14, 0, !dbg !12266
  br i1 %15, label %16, label %17, !dbg !12268

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !12269
  br label %17, !dbg !12271

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !12272
  %18 = bitcast i16* %5 to i8*, !dbg !12273
  call void @llvm.dbg.value(metadata i32 0, metadata !12243, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 0, metadata !12244, metadata !DIExpression()), !dbg !12257
  %19 = icmp eq i32 %3, 0, !dbg !12274
  br i1 %19, label %99, label %20, !dbg !12275

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !12275

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !12244, metadata !DIExpression()), !dbg !12257
  %27 = load i8*, i8** %21, align 4, !dbg !12276
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !12277
  %29 = bitcast i8* %28 to i8**, !dbg !12277
  %30 = load i8*, i8** %29, align 4, !dbg !12277
  %31 = ptrtoint i8* %30 to i32, !dbg !12278
  %32 = add i32 %31, %1, !dbg !12279
  %33 = add i32 %32, %26, !dbg !12280
  call void @llvm.dbg.value(metadata i32 %33, metadata !12240, metadata !DIExpression()), !dbg !12257
  %34 = add i32 %26, %22, !dbg !12281
  call void @llvm.dbg.value(metadata i32 %34, metadata !12241, metadata !DIExpression()), !dbg !12257
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12282
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !12283
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !12283
  %38 = add i32 %26, %1, !dbg !12284
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !12285
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !12286
  %41 = and i32 %33, 1, !dbg !12287
  %42 = icmp eq i32 %41, 0, !dbg !12287
  br i1 %42, label %43, label %46, !dbg !12288

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !12289
  %45 = icmp eq i32 %44, 1, !dbg !12290
  br i1 %45, label %46, label %57, !dbg !12291

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12292
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !12294
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !12294
  %50 = load i8*, i8** %21, align 4, !dbg !12295
  %51 = inttoptr i32 %33 to i8*, !dbg !12296
  %52 = inttoptr i32 %34 to i8*, !dbg !12297
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %53, metadata !12243, metadata !DIExpression()), !dbg !12257
  %54 = icmp eq i32 %53, 0, !dbg !12299
  br i1 %54, label %55, label %99, !dbg !12301

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %56, metadata !12244, metadata !DIExpression()), !dbg !12257
  br label %96, !dbg !12303

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !12304
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !12305
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !12306
  call void @llvm.dbg.value(metadata i32 %60, metadata !12245, metadata !DIExpression()), !dbg !12307
  call void @llvm.dbg.value(metadata i32 %44, metadata !12249, metadata !DIExpression()), !dbg !12307
  %61 = add i32 %60, %33, !dbg !12308
  %62 = sub i32 0, %60, !dbg !12309
  %63 = and i32 %61, %62, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %63, metadata !12250, metadata !DIExpression()), !dbg !12307
  %64 = add i32 %32, %3, !dbg !12311
  %65 = icmp ugt i32 %64, %63, !dbg !12313
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !12314
  call void @llvm.dbg.value(metadata i32 %67, metadata !12249, metadata !DIExpression()), !dbg !12307
  %68 = and i32 %67, -2, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %68, metadata !12249, metadata !DIExpression()), !dbg !12307
  %69 = icmp ne i32 %68, 2, !dbg !12316
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !12317
  br i1 %72, label %85, label %73, !dbg !12317

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !12273
  call void @llvm.dbg.value(metadata i8* %18, metadata !12256, metadata !DIExpression()), !dbg !12318
  %74 = inttoptr i32 %34 to i8*, !dbg !12319
  %75 = load i8, i8* %74, align 1, !dbg !12320
  call void @llvm.dbg.value(metadata i8 undef, metadata !12251, metadata !DIExpression()), !dbg !12318
  store i8 %75, i8* %18, align 2, !dbg !12321
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !12322
  %77 = load i8, i8* %76, align 1, !dbg !12323
  store i8 %77, i8* %24, align 1, !dbg !12324
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12325
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !12326
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !12326
  %81 = load i8*, i8** %21, align 4, !dbg !12327
  %82 = inttoptr i32 %33 to i8*, !dbg !12328
  call void @llvm.dbg.value(metadata i16* %5, metadata !12251, metadata !DIExpression(DW_OP_deref)), !dbg !12318
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %83, metadata !12243, metadata !DIExpression()), !dbg !12257
  %84 = icmp eq i32 %83, 0, !dbg !12330
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !12332
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !12333
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !12337
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !12337
  %89 = load i8*, i8** %21, align 4, !dbg !12338
  %90 = inttoptr i32 %33 to i8*, !dbg !12339
  %91 = inttoptr i32 %34 to i8*, !dbg !12340
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !12341
  call void @llvm.dbg.value(metadata i32 %92, metadata !12243, metadata !DIExpression()), !dbg !12257
  %93 = icmp eq i32 %92, 0, !dbg !12342
  br i1 %93, label %94, label %99, !dbg !12344

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !12243, metadata !DIExpression()), !dbg !12257
  %95 = add i32 %68, %26, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %83, metadata !12243, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 %26, metadata !12244, metadata !DIExpression()), !dbg !12257
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !12346
  call void @llvm.dbg.value(metadata i32 0, metadata !12243, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 %97, metadata !12244, metadata !DIExpression()), !dbg !12257
  %98 = icmp ult i32 %97, %3, !dbg !12274
  br i1 %98, label %25, label %99, !dbg !12275, !llvm.loop !12347

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !12349
  br label %101, !dbg !12350

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !12257
  ret i32 %102, !dbg !12350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12351 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !12355, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.value(metadata i32 %1, metadata !12356, metadata !DIExpression()), !dbg !12359
  %3 = and i32 %1, 16777215, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %3, metadata !12358, metadata !DIExpression()), !dbg !12359
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !12361
  %5 = load i8, i8* %4, align 4, !dbg !12361, !range !2988
  %6 = icmp eq i8 %5, 0, !dbg !12361
  br i1 %6, label %7, label %8, !dbg !12363

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !12364
  br label %8, !dbg !12366

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !12367
  %10 = load i32, i32* %9, align 4, !dbg !12367
  %11 = icmp ult i32 %3, %10, !dbg !12369
  br i1 %11, label %12, label %27, !dbg !12370

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !12371
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !12372
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !12372
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !12373
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !12373
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !12374
  %18 = load i8*, i8** %17, align 4, !dbg !12374
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !12375
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !12376
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !12377
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !12377
  %23 = load i8*, i8** %17, align 4, !dbg !12378
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %24, metadata !12357, metadata !DIExpression()), !dbg !12359
  tail call void @release_FDM_lock() #21, !dbg !12380
  %25 = icmp eq i32 %24, 0, !dbg !12381
  %26 = select i1 %25, i32 0, i32 6, !dbg !12359
  br label %27, !dbg !12359

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !12359
  ret i32 %28, !dbg !12383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !12384 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !12385
  br i1 %1, label %3, label %2, !dbg !12387

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !12388
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !12390
  store i1 true, i1* @flash_init_status, align 4, !dbg !12391
  br label %3, !dbg !12392

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !12393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !12394 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !12395
  %2 = select i1 %1, i32 0, i32 -5, !dbg !12395
  ret i32 %2, !dbg !12396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !12397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12401, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.value(metadata i32 %1, metadata !12402, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.value(metadata i8* %2, metadata !12403, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12404, metadata !DIExpression()), !dbg !12408
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12409
  call void @llvm.dbg.value(metadata i8* %4, metadata !12405, metadata !DIExpression()), !dbg !12408
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !12410
  %6 = ptrtoint i8* %5 to i32, !dbg !12411
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !12412
  %8 = bitcast i8* %7 to i8**, !dbg !12412
  %9 = load i8*, i8** %8, align 4, !dbg !12412
  %10 = ptrtoint i8* %9 to i32, !dbg !12413
  %11 = shl i32 %1, 9, !dbg !12414
  %12 = add i32 %11, %6, !dbg !12415
  %13 = sub i32 %12, %10, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %13, metadata !12407, metadata !DIExpression()), !dbg !12408
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %14, metadata !12406, metadata !DIExpression()), !dbg !12408
  %15 = icmp eq i32 %14, 0, !dbg !12418
  %16 = select i1 %15, i32 0, i32 -13, !dbg !12408
  ret i32 %16, !dbg !12420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !12421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12423, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 %1, metadata !12424, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i8* %2, metadata !12425, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12426, metadata !DIExpression()), !dbg !12430
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12431
  call void @llvm.dbg.value(metadata i8* %4, metadata !12427, metadata !DIExpression()), !dbg !12430
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !12432
  %6 = ptrtoint i8* %5 to i32, !dbg !12433
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !12434
  %8 = bitcast i8* %7 to i8**, !dbg !12434
  %9 = load i8*, i8** %8, align 4, !dbg !12434
  %10 = ptrtoint i8* %9 to i32, !dbg !12435
  %11 = shl i32 %1, 9, !dbg !12436
  %12 = add i32 %11, %6, !dbg !12437
  %13 = sub i32 %12, %10, !dbg !12438
  call void @llvm.dbg.value(metadata i32 %13, metadata !12429, metadata !DIExpression()), !dbg !12430
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !12439
  call void @llvm.dbg.value(metadata i32 %14, metadata !12428, metadata !DIExpression()), !dbg !12430
  %15 = icmp eq i32 %14, 0, !dbg !12440
  %16 = select i1 %15, i32 0, i32 -14, !dbg !12430
  ret i32 %16, !dbg !12442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !12443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12447, metadata !DIExpression()), !dbg !12449
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %2, metadata !12448, metadata !DIExpression()), !dbg !12449
  %3 = icmp eq i32 %2, 0, !dbg !12451
  %4 = select i1 %3, i32 0, i32 -15, !dbg !12449
  ret i32 %4, !dbg !12453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !12454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12456, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12457, metadata !DIExpression()), !dbg !12459
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12460
  call void @llvm.dbg.value(metadata i8* %2, metadata !12458, metadata !DIExpression()), !dbg !12459
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !12461
  ret i32 %3, !dbg !12462
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !12463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12465, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12466, metadata !DIExpression()), !dbg !12468
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12469
  call void @llvm.dbg.value(metadata i8* %2, metadata !12467, metadata !DIExpression()), !dbg !12468
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !12470
  ret i32 %3, !dbg !12471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !12472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12476, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.value(metadata i32* %1, metadata !12477, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.value(metadata i32* %2, metadata !12478, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12479, metadata !DIExpression()), !dbg !12481
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12482
  call void @llvm.dbg.value(metadata i8* %4, metadata !12480, metadata !DIExpression()), !dbg !12481
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !12483
  store i32 %5, i32* %1, align 4, !dbg !12484
  %6 = icmp eq i32 %5, -1, !dbg !12485
  br i1 %6, label %10, label %7, !dbg !12487

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !12488
  %9 = urem i32 %0, %8, !dbg !12489
  store i32 %9, i32* %2, align 4, !dbg !12490
  br label %10, !dbg !12491

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !12481
  ret i32 %11, !dbg !12492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !12493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12497, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 %1, metadata !12498, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32* %2, metadata !12499, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12500, metadata !DIExpression()), !dbg !12502
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12503
  call void @llvm.dbg.value(metadata i8* %4, metadata !12501, metadata !DIExpression()), !dbg !12502
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !12504
  %6 = ptrtoint i8* %5 to i32, !dbg !12505
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !12506
  %8 = bitcast i8* %7 to i8**, !dbg !12506
  %9 = load i8*, i8** %8, align 4, !dbg !12506
  %10 = ptrtoint i8* %9 to i32, !dbg !12507
  %11 = add i32 %6, %1, !dbg !12508
  %12 = sub i32 %11, %10, !dbg !12509
  store i32 %12, i32* %2, align 4, !dbg !12510
  ret i32 0, !dbg !12511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !12512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12516, metadata !DIExpression()), !dbg !12517
  %2 = add i32 %0, 2, !dbg !12518
  %3 = icmp ult i32 %2, 9, !dbg !12518
  br i1 %3, label %5, label %4, !dbg !12518

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !12519
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !12519
  unreachable, !dbg !12519

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !12518
  %7 = lshr i16 433, %6, !dbg !12518
  %8 = and i16 %7, 1, !dbg !12518
  %9 = icmp eq i16 %8, 0, !dbg !12518
  br i1 %9, label %4, label %10, !dbg !12518

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !12518
  %12 = load i32, i32* %11, align 4, !dbg !12518
  ret i32 %12, !dbg !12529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !12530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12535, metadata !DIExpression()), !dbg !12538
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !12539
  call void @llvm.dbg.value(metadata i32 %2, metadata !12537, metadata !DIExpression()), !dbg !12538
  %3 = icmp eq i32 %2, -1, !dbg !12540
  br i1 %3, label %4, label %5, !dbg !12542

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !12543
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !12543
  unreachable, !dbg !12543

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !12548
  call void @llvm.dbg.value(metadata i32 %6, metadata !12536, metadata !DIExpression()), !dbg !12538
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !12549

7:                                                ; preds = %5
  br label %10, !dbg !12550

8:                                                ; preds = %5
  br label %10, !dbg !12554

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !12557
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !12557
  unreachable, !dbg !12557

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !12562
  ret i32 %11, !dbg !12563
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !12564 {
  %1 = tail call i32 @NOR_init() #21, !dbg !12565
  ret i32 0, !dbg !12566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !12567 {
  ret i32 0, !dbg !12568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12573, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata i32 %1, metadata !12574, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata i32 0, metadata !12577, metadata !DIExpression()), !dbg !12578
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !12579

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !12580
  %5 = icmp eq i32 %4, 0, !dbg !12584
  br i1 %5, label %12, label %22, !dbg !12585

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !12586
  %8 = icmp eq i32 %7, 0, !dbg !12590
  br i1 %8, label %12, label %22, !dbg !12591

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !12592
  %11 = icmp eq i32 %10, 0, !dbg !12596
  br i1 %11, label %12, label %22, !dbg !12597

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !12598
  call void @llvm.dbg.value(metadata i32 %13, metadata !12577, metadata !DIExpression()), !dbg !12578
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !12599
  call void @llvm.dbg.value(metadata i32 %14, metadata !12576, metadata !DIExpression()), !dbg !12578
  %15 = icmp eq i32 %14, -1, !dbg !12600
  br i1 %15, label %22, label %16, !dbg !12602

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %17, metadata !12576, metadata !DIExpression()), !dbg !12578
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %18, metadata !12575, metadata !DIExpression()), !dbg !12578
  %19 = icmp eq i32 %18, 0, !dbg !12605
  br i1 %19, label %22, label %20, !dbg !12607

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !12608
  br label %22, !dbg !12610

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !12578
  ret i32 %23, !dbg !12611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12616, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata i8* %1, metadata !12617, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata i32 %2, metadata !12618, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12619, metadata !DIExpression()), !dbg !12621
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !12622
  call void @llvm.dbg.value(metadata i32 %4, metadata !12620, metadata !DIExpression()), !dbg !12621
  %5 = icmp eq i32 %4, 0, !dbg !12623
  br i1 %5, label %8, label %6, !dbg !12625

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !12626
  br label %8, !dbg !12628

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !12621
  ret i32 %9, !dbg !12629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12634, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata i8* %1, metadata !12635, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata i32 %2, metadata !12636, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12637, metadata !DIExpression()), !dbg !12642
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %4, metadata !12638, metadata !DIExpression()), !dbg !12642
  %5 = icmp eq i32 %4, 0, !dbg !12644
  br i1 %5, label %8, label %6, !dbg !12646

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !12647
  br label %21, !dbg !12649

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !12650
  br i1 %9, label %10, label %21, !dbg !12651

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !12652
  call void @llvm.dbg.value(metadata i32 %11, metadata !12639, metadata !DIExpression()), !dbg !12654
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !12639, metadata !DIExpression()), !dbg !12654
  %15 = icmp ugt i32 %11, %14, !dbg !12655
  br i1 %15, label %21, label %16, !dbg !12657

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !12639, metadata !DIExpression()), !dbg !12654
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !12658
  %19 = add i32 %17, 32, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %19, metadata !12639, metadata !DIExpression()), !dbg !12654
  %20 = icmp ugt i32 %19, %14, !dbg !12655
  br i1 %20, label %21, label %16, !dbg !12657, !llvm.loop !12661

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !12642
  ret i32 %22, !dbg !12663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !12664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12668, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 %1, metadata !12669, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i8* %0, metadata !12670, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12671, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12672, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12673, metadata !DIExpression()), !dbg !12674
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12675
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !12675
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !12675
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !12676
  %7 = load i32, i32* %6, align 4, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %7, metadata !12673, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12672, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12671, metadata !DIExpression()), !dbg !12674
  %8 = icmp ugt i32 %7, %1, !dbg !12677
  br i1 %8, label %23, label %9, !dbg !12678

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !12679
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12673, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 %12, metadata !12672, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 %13, metadata !12671, metadata !DIExpression()), !dbg !12674
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !12681
  %15 = load i32, i32* %14, align 4, !dbg !12681
  %16 = mul i32 %15, %10, !dbg !12682
  %17 = add i32 %16, %13, !dbg !12683
  call void @llvm.dbg.value(metadata i32 %17, metadata !12671, metadata !DIExpression()), !dbg !12674
  %18 = add i32 %12, 1, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %18, metadata !12672, metadata !DIExpression()), !dbg !12674
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !12685
  %20 = load i32, i32* %19, align 4, !dbg !12685
  %21 = add i32 %20, %11, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %21, metadata !12673, metadata !DIExpression()), !dbg !12674
  %22 = icmp ugt i32 %21, %1, !dbg !12677
  br i1 %22, label %23, label %9, !dbg !12678, !llvm.loop !12687

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !12689
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !12674
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !12674
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !12674
  call void @llvm.dbg.value(metadata i8* %0, metadata !12670, metadata !DIExpression()), !dbg !12674
  %28 = sub i32 %1, %27, !dbg !12690
  %29 = add i32 %28, %24, !dbg !12691
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !12692
  %31 = load i32, i32* %30, align 4, !dbg !12692
  %32 = mul i32 %29, %31, !dbg !12693
  %33 = add i32 %32, %25, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %33, metadata !12671, metadata !DIExpression()), !dbg !12674
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !12695
  %35 = bitcast i8* %34 to i8**, !dbg !12695
  %36 = load i8*, i8** %35, align 4, !dbg !12695
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !12696
  ret i8* %37, !dbg !12697
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !12698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12700, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata i32 %1, metadata !12701, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata i32 %2, metadata !12702, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.value(metadata i8* %0, metadata !12703, metadata !DIExpression()), !dbg !12704
  %4 = icmp eq i32 %2, 0, !dbg !12705
  br i1 %4, label %6, label %5, !dbg !12708

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !12709
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.165, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.166, i32 0, i32 0)) #23, !dbg !12709
  unreachable, !dbg !12709

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !12703, metadata !DIExpression()), !dbg !12704
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !12711
  %8 = inttoptr i32 %7 to i8*, !dbg !12712
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !12713
  %10 = bitcast i8* %9 to i8**, !dbg !12713
  store i8* %8, i8** %10, align 4, !dbg !12714
  ret i8* %8, !dbg !12715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2319, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 %1, metadata !2320, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i8* %0, metadata !2321, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 0, metadata !2366, metadata !DIExpression()), !dbg !12716
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !12717
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !12717
  %5 = and i32 %1, 7, !dbg !12719
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !12720
  %7 = load i32, i32* %6, align 4, !dbg !12720
  %8 = icmp eq i32 %7, -1, !dbg !12721
  br i1 %8, label %62, label %9, !dbg !12722

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !12723
  br i1 %10, label %54, label %11, !dbg !12726

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !12727
  %13 = load i32, i32* %12, align 4, !dbg !12727
  %14 = icmp eq i32 %13, -1, !dbg !12730
  br i1 %14, label %44, label %15, !dbg !12731

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !12732
  br i1 %16, label %35, label %17, !dbg !12735

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !12736
  %19 = add i32 %18, 1, !dbg !12736
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !12736
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12738
  %21 = shl nuw nsw i32 1, %5, !dbg !12740
  %22 = and i32 %20, %21, !dbg !12741
  %23 = icmp eq i32 %22, 0, !dbg !12741
  br i1 %23, label %30, label %24, !dbg !12742

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !12743
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !12745
  %26 = ptrtoint i8* %25 to i32, !dbg !12746
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !12747
  store i32 %26, i32* %27, align 4, !dbg !12748
  call void @llvm.dbg.value(metadata i32 %26, metadata !2366, metadata !DIExpression()), !dbg !12716
  %28 = xor i32 %21, -1, !dbg !12749
  %29 = and i32 %20, %28, !dbg !12750
  br label %71, !dbg !12751

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !12752
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !12754
  %32 = ptrtoint i8* %31 to i32, !dbg !12755
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !12756
  store i32 %32, i32* %33, align 4, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %32, metadata !2366, metadata !DIExpression()), !dbg !12716
  %34 = or i32 %20, %21, !dbg !12758
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !12759
  %37 = add i32 %36, 1, !dbg !12759
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !12759
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !12761
  %39 = load i32, i32* %38, align 4, !dbg !12761
  call void @llvm.dbg.value(metadata i32 %39, metadata !2366, metadata !DIExpression()), !dbg !12716
  %40 = shl nuw nsw i32 1, %5, !dbg !12762
  %41 = xor i32 %40, -1, !dbg !12763
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12764
  %43 = and i32 %42, %41, !dbg !12764
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !12765
  %46 = add i32 %45, 1, !dbg !12765
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !12765
  store i32 %1, i32* %12, align 4, !dbg !12767
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !12768
  %48 = ptrtoint i8* %47 to i32, !dbg !12769
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !12770
  store i32 %48, i32* %49, align 4, !dbg !12771
  call void @llvm.dbg.value(metadata i32 %48, metadata !2366, metadata !DIExpression()), !dbg !12716
  %50 = shl nuw nsw i32 1, %5, !dbg !12772
  %51 = xor i32 %50, -1, !dbg !12773
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12774
  %53 = and i32 %52, %51, !dbg !12774
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !12775
  %56 = add i32 %55, 1, !dbg !12775
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !12775
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !12777
  %58 = load i32, i32* %57, align 4, !dbg !12777
  call void @llvm.dbg.value(metadata i32 %58, metadata !2366, metadata !DIExpression()), !dbg !12716
  %59 = shl nuw nsw i32 1, %5, !dbg !12778
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12779
  %61 = or i32 %60, %59, !dbg !12779
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !12780
  %64 = add i32 %63, 1, !dbg !12780
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !12780
  store i32 %1, i32* %6, align 4, !dbg !12782
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !12783
  %66 = ptrtoint i8* %65 to i32, !dbg !12784
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !12785
  store i32 %66, i32* %67, align 4, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %66, metadata !2366, metadata !DIExpression()), !dbg !12716
  %68 = shl nuw nsw i32 1, %5, !dbg !12787
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12788
  %70 = or i32 %69, %68, !dbg !12788
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !12789
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !12789
  call void @llvm.dbg.value(metadata i32 %73, metadata !2366, metadata !DIExpression()), !dbg !12716
  ret i32 %73, !dbg !12790
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !12791 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12793, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 %1, metadata !12794, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i8* %0, metadata !12795, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 0, metadata !12796, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 0, metadata !12797, metadata !DIExpression()), !dbg !12798
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12799
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !12799
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !12799
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !12800
  %7 = load i32, i32* %6, align 4, !dbg !12800
  call void @llvm.dbg.value(metadata i32 %7, metadata !12797, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 0, metadata !12796, metadata !DIExpression()), !dbg !12798
  %8 = icmp ugt i32 %7, %1, !dbg !12801
  br i1 %8, label %17, label %9, !dbg !12802

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12797, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 %11, metadata !12796, metadata !DIExpression()), !dbg !12798
  %12 = add i32 %11, 1, !dbg !12803
  call void @llvm.dbg.value(metadata i32 %12, metadata !12796, metadata !DIExpression()), !dbg !12798
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !12805
  %14 = load i32, i32* %13, align 4, !dbg !12805
  %15 = add i32 %14, %10, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %15, metadata !12797, metadata !DIExpression()), !dbg !12798
  %16 = icmp ugt i32 %15, %1, !dbg !12801
  br i1 %16, label %17, label %9, !dbg !12802, !llvm.loop !12807

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !12798
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !12809
  %20 = load i32, i32* %19, align 4, !dbg !12809
  ret i32 %20, !dbg !12810
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !12811 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12813, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 %1, metadata !12814, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i8* %0, metadata !12815, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12816, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12817, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12818, metadata !DIExpression()), !dbg !12819
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12820
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !12820
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !12820
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !12821
  %7 = load i32, i32* %6, align 4, !dbg !12821
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !12822
  %9 = load i32, i32* %8, align 4, !dbg !12822
  %10 = mul i32 %9, %7, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %10, metadata !12817, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12818, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12816, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 %1, metadata !12814, metadata !DIExpression()), !dbg !12819
  %11 = icmp ult i32 %10, %1, !dbg !12824
  br i1 %11, label %12, label %30, !dbg !12825

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !12826
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !12818, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 %16, metadata !12817, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 %17, metadata !12816, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 %18, metadata !12814, metadata !DIExpression()), !dbg !12819
  %19 = icmp eq i32 %14, 0, !dbg !12825
  br i1 %19, label %36, label %20, !dbg !12827

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !12828
  call void @llvm.dbg.value(metadata i32 %21, metadata !12818, metadata !DIExpression()), !dbg !12819
  %22 = sub i32 %18, %16, !dbg !12830
  call void @llvm.dbg.value(metadata i32 %22, metadata !12814, metadata !DIExpression()), !dbg !12819
  %23 = add i32 %17, 1, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %23, metadata !12816, metadata !DIExpression()), !dbg !12819
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !12832
  %25 = load i32, i32* %24, align 4, !dbg !12832
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !12833
  %27 = load i32, i32* %26, align 4, !dbg !12833
  %28 = mul i32 %27, %25, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %28, metadata !12817, metadata !DIExpression()), !dbg !12819
  %29 = icmp ugt i32 %22, %28, !dbg !12824
  br i1 %29, label %12, label %30, !dbg !12825, !llvm.loop !12835

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !12837
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !12819
  %34 = udiv i32 %32, %31, !dbg !12840
  %35 = add i32 %34, %33, !dbg !12841
  call void @llvm.dbg.value(metadata i32 %35, metadata !12818, metadata !DIExpression()), !dbg !12819
  br label %36, !dbg !12842

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !12843
  call void @llvm.dbg.value(metadata i32 %37, metadata !12818, metadata !DIExpression()), !dbg !12819
  ret i32 %37, !dbg !12844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !12845 {
  ret i32 134217728, !dbg !12846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !12847 {
  ret i32 3932160, !dbg !12848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !12849 {
  ret i32 0, !dbg !12850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !12851 {
  ret i32 262144, !dbg !12852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !12853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12855, metadata !DIExpression()), !dbg !12857
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !12858
  call void @llvm.dbg.value(metadata i32 %2, metadata !12856, metadata !DIExpression()), !dbg !12857
  %3 = icmp eq i32 %2, 0, !dbg !12859
  br i1 %3, label %5, label %4, !dbg !12861

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !12862
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.165, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.166, i32 0, i32 0)) #23, !dbg !12862
  unreachable, !dbg !12862

5:                                                ; preds = %1
  ret void, !dbg !12867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !12868 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12872, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.value(metadata i32 %1, metadata !12873, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.value(metadata i8* %2, metadata !12874, metadata !DIExpression()), !dbg !12885
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !12886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !12886
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !12875, metadata !DIExpression()), !dbg !12887
  %7 = bitcast i32* %5 to i8*, !dbg !12888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !12888
  call void @llvm.dbg.value(metadata i32* %5, metadata !12884, metadata !DIExpression(DW_OP_deref)), !dbg !12885
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !12889
  call void @llvm.va_start(i8* nonnull %6), !dbg !12890
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !12891
  %10 = load i32, i32* %9, align 4, !dbg !12891
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !12891
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !12891
  call void @llvm.va_end(i8* nonnull %6), !dbg !12892
  %13 = load i32, i32* %5, align 4, !dbg !12893
  call void @llvm.dbg.value(metadata i32 %13, metadata !12884, metadata !DIExpression()), !dbg !12885
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !12894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !12895
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !12895
  ret void, !dbg !12895
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !12896 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12898, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata i32 %1, metadata !12899, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata i8* %2, metadata !12900, metadata !DIExpression()), !dbg !12903
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !12904
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !12904
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !12901, metadata !DIExpression()), !dbg !12905
  %7 = bitcast i32* %5 to i8*, !dbg !12906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !12906
  call void @llvm.dbg.value(metadata i32* %5, metadata !12902, metadata !DIExpression(DW_OP_deref)), !dbg !12903
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !12907
  call void @llvm.va_start(i8* nonnull %6), !dbg !12908
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !12909
  %10 = load i32, i32* %9, align 4, !dbg !12909
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !12909
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !12909
  call void @llvm.va_end(i8* nonnull %6), !dbg !12910
  %13 = load i32, i32* %5, align 4, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %13, metadata !12902, metadata !DIExpression()), !dbg !12903
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !12912
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !12913
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !12913
  ret void, !dbg !12913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !12914 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12916, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i32 %1, metadata !12917, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i8* %2, metadata !12918, metadata !DIExpression()), !dbg !12921
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !12922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !12922
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !12919, metadata !DIExpression()), !dbg !12923
  %7 = bitcast i32* %5 to i8*, !dbg !12924
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !12924
  call void @llvm.dbg.value(metadata i32* %5, metadata !12920, metadata !DIExpression(DW_OP_deref)), !dbg !12921
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !12925
  call void @llvm.va_start(i8* nonnull %6), !dbg !12926
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !12927
  %10 = load i32, i32* %9, align 4, !dbg !12927
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !12927
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !12927
  call void @llvm.va_end(i8* nonnull %6), !dbg !12928
  %13 = load i32, i32* %5, align 4, !dbg !12929
  call void @llvm.dbg.value(metadata i32 %13, metadata !12920, metadata !DIExpression()), !dbg !12921
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !12930
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !12931
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !12931
  ret void, !dbg !12931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !12932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12938, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 %1, metadata !12939, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i8* %2, metadata !12940, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i8* %3, metadata !12941, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 %4, metadata !12942, metadata !DIExpression()), !dbg !12943
  ret void, !dbg !12944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !12945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12947, metadata !DIExpression()), !dbg !12949
  %2 = shl i32 %0, 20, !dbg !12950
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12951
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !12952
  store volatile i32 %2, i32* %4, align 4, !dbg !12953
  %5 = load volatile i32, i32* %4, align 4, !dbg !12954
  %6 = or i32 %5, 65536, !dbg !12955
  store volatile i32 %6, i32* %4, align 4, !dbg !12956
  br label %7, !dbg !12957

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !12958
  %9 = and i32 %8, 1, !dbg !12959
  %10 = icmp eq i32 %9, 0, !dbg !12960
  br i1 %10, label %7, label %11, !dbg !12957, !llvm.loop !12961

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !12963
  %13 = lshr i32 %12, 8, !dbg !12964
  %14 = and i32 %13, 255, !dbg !12964
  call void @llvm.dbg.value(metadata i32 %14, metadata !12948, metadata !DIExpression()), !dbg !12949
  ret i32 %14, !dbg !12965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !12966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12968, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata i32 %1, metadata !12969, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata i32 %1, metadata !12969, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !12970
  %3 = shl i32 %1, 24, !dbg !12971
  %4 = shl i32 %0, 20, !dbg !12972
  %5 = or i32 %4, %3, !dbg !12973
  %6 = or i32 %5, 131072, !dbg !12973
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12974
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !12975
  store volatile i32 %6, i32* %8, align 4, !dbg !12976
  %9 = load volatile i32, i32* %8, align 4, !dbg !12977
  %10 = or i32 %9, 65536, !dbg !12978
  store volatile i32 %10, i32* %8, align 4, !dbg !12979
  br label %11, !dbg !12980

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !12981
  %13 = and i32 %12, 1, !dbg !12982
  %14 = icmp eq i32 %13, 0, !dbg !12983
  br i1 %14, label %11, label %15, !dbg !12980, !llvm.loop !12984

15:                                               ; preds = %11
  ret void, !dbg !12986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !12987 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !12988
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !12989
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !12990
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !12991
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !12992
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !12993
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !12994
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !12995
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !12996
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !12997
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !12998
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !12999
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !13000
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !13001
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !13002
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !13003
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !13004
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !13005
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !13006
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !13007
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !13008
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !13009
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !13010
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !13011
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !13012
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !13013
  ret void, !dbg !13014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !13015 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13018
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !13019
  store volatile i32 21553, i32* %2, align 4, !dbg !13020
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !13021
  store volatile i32 20489, i32* %3, align 4, !dbg !13022
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !13023
  store volatile i32 20550, i32* %4, align 4, !dbg !13024
  ret i32 0, !dbg !13025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !13026 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13028, metadata !DIExpression()), !dbg !13035
  call void @llvm.dbg.value(metadata i32 16384, metadata !13029, metadata !DIExpression()), !dbg !13035
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13036
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !13037
  store volatile i32 0, i32* %2, align 4, !dbg !13038
  call void @llvm.dbg.value(metadata i32 0, metadata !13032, metadata !DIExpression()), !dbg !13035
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !13032, metadata !DIExpression()), !dbg !13035
  br label %5, !dbg !13039

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !13032, metadata !DIExpression()), !dbg !13035
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !13031, metadata !DIExpression()), !dbg !13035
  br label %8, !dbg !13041

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13031, metadata !DIExpression()), !dbg !13035
  call void @llvm.dbg.value(metadata i32 0, metadata !13033, metadata !DIExpression()), !dbg !13035
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !13045

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !13033, metadata !DIExpression()), !dbg !13035
  %12 = icmp eq i32 %30, 2, !dbg !13049
  br i1 %12, label %31, label %13, !dbg !13045, !llvm.loop !13051

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !13033, metadata !DIExpression()), !dbg !13035
  store volatile i32 0, i32* %2, align 4, !dbg !13053
  store volatile i32 63, i32* %3, align 4, !dbg !13055
  %15 = load i32, i32* %10, align 4, !dbg !13056
  %16 = shl i32 %15, 16, !dbg !13057
  %17 = shl nuw nsw i32 %14, 13, !dbg !13058
  %18 = or i32 %17, %7, !dbg !13059
  %19 = or i32 %18, %16, !dbg !13060
  store volatile i32 %19, i32* %2, align 4, !dbg !13061
  %20 = load volatile i32, i32* %2, align 4, !dbg !13062
  %21 = or i32 %20, 805, !dbg !13062
  store volatile i32 %21, i32* %2, align 4, !dbg !13062
  br label %22, !dbg !13063

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !13064
  %24 = and i32 %23, 2, !dbg !13065
  %25 = icmp eq i32 %24, 0, !dbg !13066
  br i1 %25, label %22, label %26, !dbg !13063, !llvm.loop !13067

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !13069
  %28 = and i32 %27, 1, !dbg !13071
  %29 = icmp eq i32 %28, 0, !dbg !13072
  %30 = add nuw nsw i32 %14, 1, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %30, metadata !13033, metadata !DIExpression()), !dbg !13035
  br i1 %29, label %11, label %37, !dbg !13074

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %32, metadata !13031, metadata !DIExpression()), !dbg !13035
  %33 = icmp eq i32 %32, 2, !dbg !13076
  br i1 %33, label %34, label %8, !dbg !13041, !llvm.loop !13077

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %35, metadata !13032, metadata !DIExpression()), !dbg !13035
  %36 = icmp eq i32 %35, 2, !dbg !13080
  br i1 %36, label %37, label %5, !dbg !13039, !llvm.loop !13081

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !13035
  store volatile i32 0, i32* %2, align 4, !dbg !13035
  ret i32 %38, !dbg !13083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !13084 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !13085
  %2 = icmp ne i32 %1, 0, !dbg !13087
  %3 = sext i1 %2 to i32, !dbg !13088
  ret i32 %3, !dbg !13089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !13090 {
  call void @llvm.dbg.value(metadata i32 31, metadata !13092, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.value(metadata i32 0, metadata !13093, metadata !DIExpression()), !dbg !13094
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13095
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !13096
  store volatile i32 0, i32* %2, align 4, !dbg !13097
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13098
  store volatile i32 0, i32* %3, align 4, !dbg !13099
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13100
  store volatile i32 0, i32* %4, align 4, !dbg !13101
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !13102
  store volatile i32 0, i32* %5, align 4, !dbg !13103
  call void @llvm.dbg.value(metadata i32 31, metadata !13092, metadata !DIExpression()), !dbg !13094
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13104
  store volatile i32 522133279, i32* %6, align 4, !dbg !13108
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13109
  store volatile i32 522133279, i32* %7, align 4, !dbg !13110
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !13111
  %9 = icmp eq i32 %8, 0, !dbg !13113
  call void @llvm.dbg.value(metadata i32 31, metadata !13092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13094
  br i1 %9, label %36, label %10, !dbg !13114

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !13092, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.value(metadata i32 %11, metadata !13092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13094
  call void @llvm.dbg.value(metadata i32 %11, metadata !13092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13094
  %12 = icmp eq i32 %11, 0, !dbg !13115
  br i1 %12, label %26, label %13, !dbg !13116, !llvm.loop !13117

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %14, metadata !13092, metadata !DIExpression()), !dbg !13094
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13120
  %16 = shl i32 %14, 24, !dbg !13121
  %17 = shl i32 %14, 16, !dbg !13122
  %18 = shl i32 %14, 8, !dbg !13123
  %19 = or i32 %17, %14, !dbg !13124
  %20 = or i32 %19, %16, !dbg !13125
  %21 = or i32 %20, %18, !dbg !13126
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !13104
  store volatile i32 %21, i32* %22, align 4, !dbg !13108
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !13109
  store volatile i32 %21, i32* %23, align 4, !dbg !13110
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !13111
  %25 = icmp eq i32 %24, 0, !dbg !13113
  call void @llvm.dbg.value(metadata i32 %14, metadata !13092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13094
  br i1 %25, label %36, label %10, !dbg !13114

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !13093, metadata !DIExpression()), !dbg !13094
  %28 = shl nuw nsw i32 %27, 16, !dbg !13127
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13133
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !13134
  store volatile i32 %28, i32* %30, align 4, !dbg !13135
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !13136
  %32 = icmp eq i32 %31, 0, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %27, metadata !13093, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13094
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %33, metadata !13093, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.value(metadata i32 %27, metadata !13093, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13094
  br i1 %35, label %36, label %26, !dbg !13139, !llvm.loop !13140

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !13143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !13144 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !13145
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13146
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !13147
  store volatile i32 1, i32* %2, align 4, !dbg !13148
  br label %3, !dbg !13149

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !13150
  %5 = and i32 %4, 2, !dbg !13151
  %6 = icmp eq i32 %5, 0, !dbg !13151
  br i1 %6, label %3, label %7, !dbg !13149, !llvm.loop !13152

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !13154
  br label %8, !dbg !13155

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !13156
  %10 = and i32 %9, 2, !dbg !13157
  %11 = icmp eq i32 %10, 0, !dbg !13157
  br i1 %11, label %12, label %8, !dbg !13155, !llvm.loop !13158

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !13160
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !13161
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !13162

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !13163
  %17 = and i32 %16, 1, !dbg !13164
  %18 = icmp eq i32 %17, 0, !dbg !13165
  br i1 %18, label %15, label %19, !dbg !13162, !llvm.loop !13166

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !13168
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !13169
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !13170

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !13171
  %24 = and i32 %23, 1, !dbg !13172
  %25 = icmp eq i32 %24, 0, !dbg !13173
  br i1 %25, label %22, label %26, !dbg !13170, !llvm.loop !13174

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !13176
  %28 = icmp eq i32 %27, 9507, !dbg !13178
  br i1 %28, label %29, label %37, !dbg !13179

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !13180
  %31 = and i32 %30, 15, !dbg !13183
  %32 = icmp eq i32 %31, 2, !dbg !13184
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !13185
  %34 = and i32 %33, -128, !dbg !13185
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !13185
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !13185
  br label %37, !dbg !13186

37:                                               ; preds = %29, %26
  ret void, !dbg !13186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !13187 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !13190
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !13191
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !13192
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !13193
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !13194
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !13195
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !13196
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !13197
  ret i8 0, !dbg !13198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !13199 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !13200
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13201
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !13202
  store volatile i32 %1, i32* %3, align 4, !dbg !13203
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !13204
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !13205
  store volatile i32 %4, i32* %5, align 4, !dbg !13206
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !13207
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !13208
  store volatile i32 %6, i32* %7, align 4, !dbg !13209
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !13210
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !13211
  store volatile i32 %8, i32* %9, align 4, !dbg !13212
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !13213
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !13214
  store volatile i32 %10, i32* %11, align 4, !dbg !13215
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !13216
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !13217
  store volatile i32 %12, i32* %13, align 4, !dbg !13218
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !13219
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !13220
  store volatile i32 %14, i32* %15, align 4, !dbg !13221
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !13222
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !13223
  store volatile i32 %16, i32* %17, align 4, !dbg !13224
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !13225
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !13226
  store volatile i32 %18, i32* %19, align 4, !dbg !13227
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !13228
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !13229
  store volatile i32 %20, i32* %21, align 4, !dbg !13230
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !13231
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !13232
  store volatile i32 %22, i32* %23, align 4, !dbg !13233
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !13234
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !13235
  store volatile i32 %24, i32* %25, align 4, !dbg !13236
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !13237
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !13238
  store volatile i32 %26, i32* %27, align 4, !dbg !13239
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !13240
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13241
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !13242
  store volatile i32 806289408, i32* %29, align 4, !dbg !13243
  br label %30, !dbg !13244

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !13245
  %32 = and i32 %31, 128, !dbg !13246
  %33 = icmp eq i32 %32, 0, !dbg !13246
  br i1 %33, label %30, label %34, !dbg !13244, !llvm.loop !13247

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !13249
  br label %35, !dbg !13250

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !13251
  %37 = and i32 %36, 128, !dbg !13252
  %38 = icmp eq i32 %37, 0, !dbg !13252
  br i1 %38, label %39, label %35, !dbg !13250, !llvm.loop !13253

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !13255
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !13256
  ret i8 0, !dbg !13257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !13258 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13259
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !13260
  %3 = load volatile i32, i32* %2, align 4, !dbg !13260
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !13261
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !13262
  %5 = load volatile i32, i32* %4, align 4, !dbg !13262
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !13263
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !13264
  %7 = load volatile i32, i32* %6, align 4, !dbg !13264
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !13265
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13266
  %9 = load volatile i32, i32* %8, align 4, !dbg !13266
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !13267
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13268
  %11 = load volatile i32, i32* %10, align 4, !dbg !13268
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !13269
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !13270
  %13 = load volatile i32, i32* %12, align 4, !dbg !13270
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !13271
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !13272
  %15 = load volatile i32, i32* %14, align 4, !dbg !13272
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !13273
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !13274
  %17 = load volatile i32, i32* %16, align 4, !dbg !13274
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !13275
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !13276
  %19 = load volatile i32, i32* %18, align 4, !dbg !13276
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !13277
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !13278
  %21 = load volatile i32, i32* %20, align 4, !dbg !13278
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !13279
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !13280
  %23 = load volatile i32, i32* %22, align 4, !dbg !13280
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !13281
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13282
  %25 = load volatile i32, i32* %24, align 4, !dbg !13282
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !13283
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !13284
  %27 = load volatile i32, i32* %26, align 4, !dbg !13284
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !13285
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !13286
  %29 = load volatile i32, i32* %28, align 4, !dbg !13286
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !13287
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !13288
  %31 = load volatile i32, i32* %30, align 4, !dbg !13288
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !13289
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !13290
  %33 = load volatile i32, i32* %32, align 4, !dbg !13290
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !13291
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !13292
  %35 = load volatile i32, i32* %34, align 4, !dbg !13292
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !13293
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !13294
  %37 = load volatile i32, i32* %36, align 4, !dbg !13294
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !13295
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !13296
  %39 = load volatile i32, i32* %38, align 4, !dbg !13296
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !13297
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !13298
  %41 = load volatile i32, i32* %40, align 4, !dbg !13298
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !13299
  ret void, !dbg !13300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !13301 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !13302

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !13303
  %5 = and i32 %4, 17, !dbg !13304
  %6 = icmp eq i32 %5, 17, !dbg !13305
  br i1 %6, label %7, label %3, !dbg !13302, !llvm.loop !13306

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !13308
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !13309
  store volatile i32 %8, i32* %9, align 4, !dbg !13310
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !13311
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !13312
  store volatile i32 %10, i32* %11, align 4, !dbg !13313
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !13314
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !13315
  store volatile i32 %12, i32* %13, align 4, !dbg !13316
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !13317
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !13318
  store volatile i32 %14, i32* %15, align 4, !dbg !13319
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !13320
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !13321
  store volatile i32 %16, i32* %17, align 4, !dbg !13322
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !13323
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !13324
  store volatile i32 %18, i32* %19, align 4, !dbg !13325
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !13326
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !13327
  store volatile i32 %20, i32* %21, align 4, !dbg !13328
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !13329
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !13330
  store volatile i32 %22, i32* %23, align 4, !dbg !13331
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !13332
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13333
  store volatile i32 %24, i32* %25, align 4, !dbg !13334
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !13335
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !13336
  store volatile i32 %26, i32* %27, align 4, !dbg !13337
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !13338
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !13339
  store volatile i32 %28, i32* %29, align 4, !dbg !13340
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !13341
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !13342
  store volatile i32 %30, i32* %31, align 4, !dbg !13343
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !13344
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !13345
  store volatile i32 %32, i32* %33, align 4, !dbg !13346
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !13347
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !13348
  store volatile i32 %34, i32* %35, align 4, !dbg !13349
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !13350
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !13351
  store volatile i32 %36, i32* %37, align 4, !dbg !13352
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !13353
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13354
  store volatile i32 %38, i32* %39, align 4, !dbg !13355
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !13356
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13357
  store volatile i32 %40, i32* %41, align 4, !dbg !13358
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !13359
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !13360
  store volatile i32 %42, i32* %43, align 4, !dbg !13361
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !13362
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !13363
  store volatile i32 %44, i32* %45, align 4, !dbg !13364
  ret void, !dbg !13365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !13366 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13367
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13368
  %3 = load volatile i32, i32* %2, align 4, !dbg !13368
  %4 = and i32 %3, -2097185, !dbg !13369
  store volatile i32 %4, i32* %2, align 4, !dbg !13370
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !13371
  store volatile i32 1, i32* %5, align 4, !dbg !13372
  br label %6, !dbg !13373

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !13374
  %8 = and i32 %7, 2, !dbg !13375
  %9 = icmp eq i32 %8, 0, !dbg !13375
  br i1 %9, label %6, label %10, !dbg !13373, !llvm.loop !13376

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !13378
  br label %11, !dbg !13379

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !13380
  %13 = and i32 %12, 2, !dbg !13381
  %14 = icmp eq i32 %13, 0, !dbg !13381
  br i1 %14, label %15, label %11, !dbg !13379, !llvm.loop !13382

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !13384
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13385
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !13386
  store volatile i32 806289408, i32* %17, align 4, !dbg !13387
  br label %18, !dbg !13388

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !13389
  %20 = and i32 %19, 128, !dbg !13390
  %21 = icmp eq i32 %20, 0, !dbg !13390
  br i1 %21, label %18, label %22, !dbg !13388, !llvm.loop !13391

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !13393
  br label %23, !dbg !13394

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !13395
  %25 = and i32 %24, 128, !dbg !13396
  %26 = icmp eq i32 %25, 0, !dbg !13396
  br i1 %26, label %27, label %23, !dbg !13394, !llvm.loop !13397

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !13399
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !13400
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !13401
  store volatile i32 %28, i32* %29, align 4, !dbg !13402
  ret void, !dbg !13403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !13404 {
  tail call void @EMI_Setting_Save() #21, !dbg !13405
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !13406

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !13407
  %5 = and i32 %4, 17, !dbg !13408
  %6 = icmp eq i32 %5, 17, !dbg !13409
  br i1 %6, label %7, label %3, !dbg !13406, !llvm.loop !13410

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !13412
  %9 = or i32 %8, 1792, !dbg !13413
  store volatile i32 %9, i32* %2, align 4, !dbg !13414
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !13415
  store volatile i32 -261685248, i32* %10, align 4, !dbg !13416
  br label %11, !dbg !13417

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !13418
  %13 = and i32 %12, 1, !dbg !13419
  %14 = icmp eq i32 %13, 0, !dbg !13420
  br i1 %14, label %11, label %15, !dbg !13417, !llvm.loop !13421

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !13423
  store volatile i32 0, i32* %16, align 4, !dbg !13424
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !13425

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !13426
  %20 = and i32 %19, 16, !dbg !13427
  %21 = icmp eq i32 %20, 0, !dbg !13427
  br i1 %21, label %18, label %22, !dbg !13425, !llvm.loop !13428

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13430
  %24 = load volatile i32, i32* %23, align 4, !dbg !13430
  %25 = or i32 %24, 2097184, !dbg !13431
  store volatile i32 %25, i32* %23, align 4, !dbg !13432
  ret void, !dbg !13433
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !13434 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13439, metadata !DIExpression()), !dbg !13441
  %3 = bitcast i32* %2 to i8*, !dbg !13442
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13442
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13440, metadata !DIExpression()), !dbg !13443
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !13444

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13445
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !13448
  store volatile i32 0, i32* %6, align 4, !dbg !13449
  store volatile i32 806289408, i32* %6, align 4, !dbg !13450
  br label %7, !dbg !13451

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !13452
  %9 = and i32 %8, 128, !dbg !13453
  %10 = icmp eq i32 %9, 0, !dbg !13453
  br i1 %10, label %7, label %11, !dbg !13451, !llvm.loop !13454

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !13456
  br label %12, !dbg !13457

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !13458
  %14 = and i32 %13, 128, !dbg !13459
  %15 = icmp eq i32 %14, 0, !dbg !13459
  br i1 %15, label %16, label %12, !dbg !13457, !llvm.loop !13460

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !13462
  store volatile i32 0, i32* %2, align 4, !dbg !13463
  %17 = load volatile i32, i32* %2, align 4, !dbg !13465
  %18 = icmp ult i32 %17, 255, !dbg !13467
  br i1 %18, label %19, label %25, !dbg !13468

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !13469
  %21 = add i32 %20, 1, !dbg !13469
  store volatile i32 %21, i32* %2, align 4, !dbg !13469
  %22 = load volatile i32, i32* %2, align 4, !dbg !13465
  %23 = icmp ult i32 %22, 255, !dbg !13467
  br i1 %23, label %19, label %25, !dbg !13468, !llvm.loop !13470

24:                                               ; preds = %1
  br label %25, !dbg !13472

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !13441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13475
  ret i32 %26, !dbg !13475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !13476 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13477
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !13478
  %3 = load volatile i32, i32* %2, align 4, !dbg !13478
  %4 = or i32 %3, 1792, !dbg !13479
  store volatile i32 %4, i32* %2, align 4, !dbg !13480
  ret void, !dbg !13481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !13482 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13483
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !13484
  %3 = load volatile i32, i32* %2, align 4, !dbg !13484
  %4 = and i32 %3, -1793, !dbg !13485
  store volatile i32 %4, i32* %2, align 4, !dbg !13486
  ret void, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !13488 {
  ret i1 false, !dbg !13489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !13490 {
  ret i1 false, !dbg !13491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !13492 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !13493
  ret void, !dbg !13496
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !13497 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !13498
  ret void, !dbg !13501
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !13502 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !13503
  ret void, !dbg !13506
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !13507 {
  tail call void @peri_26m_dcxo() #20, !dbg !13508
  ret void, !dbg !13511
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !13512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13516, metadata !DIExpression()), !dbg !13517
  %2 = trunc i32 %0 to i8, !dbg !13518
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !13519
  ret i32 %0, !dbg !13520
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !13521 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !13522
  tail call void @SystemCoreClockUpdate() #20, !dbg !13523
  tail call fastcc void @prvSetupHardware() #21, !dbg !13524
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !13525, !srcloc !13528
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !13529, !srcloc !13532
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i32 0, i32 0)) #20, !dbg !13533
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.180, i32 0, i32 0)) #20, !dbg !13534
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.181, i32 0, i32 0)) #20, !dbg !13535
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i32 0, i32 0)) #20, !dbg !13536
  tail call fastcc void @i2c_control_EEPROM_with_dma_extended_example() #21, !dbg !13537
  br label %5, !dbg !13538

5:                                                ; preds = %0, %5
  br label %5, !dbg !13538, !llvm.loop !13539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !13541 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !13542
  ret void, !dbg !13543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !13544 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !13545
  %1 = tail call i32 @hal_flash_init() #20, !dbg !13546
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !13547
  ret void, !dbg !13548
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @i2c_control_EEPROM_with_dma_extended_example() unnamed_addr #0 !dbg !13549 {
  %1 = alloca %struct.anon, align 4
  %2 = alloca %struct.hal_i2c_send_config_t, align 4
  %3 = alloca %struct.hal_i2c_send_config_t, align 4
  %4 = bitcast %struct.anon* %1 to i8*, !dbg !13576
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !13576
  call void @llvm.dbg.declare(metadata %struct.anon* %1, metadata !13551, metadata !DIExpression()), !dbg !13577
  %5 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %2, i32 0, i32 0, !dbg !13578
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #22, !dbg !13578
  call void @llvm.dbg.declare(metadata %struct.hal_i2c_send_config_t* %2, metadata !13556, metadata !DIExpression()), !dbg !13579
  %6 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %3, i32 0, i32 0, !dbg !13580
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !13580
  call void @llvm.dbg.declare(metadata %struct.hal_i2c_send_config_t* %3, metadata !13564, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 4, metadata !13573, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata i32 0, metadata !13574, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata i32 0, metadata !13575, metadata !DIExpression()), !dbg !13582
  store i8 80, i8* %5, align 4, !dbg !13583
  %7 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %2, i32 0, i32 1, !dbg !13584
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @i2c_send_data, i32 0, i32 0), i8** %7, align 4, !dbg !13585
  %8 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %2, i32 0, i32 2, !dbg !13586
  store i32 1, i32* %8, align 4, !dbg !13587
  store i8 80, i8* %6, align 4, !dbg !13588
  %9 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %3, i32 0, i32 1, !dbg !13589
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @i2c_receive_data, i32 0, i32 0), i8** %9, align 4, !dbg !13590
  %10 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %3, i32 0, i32 2, !dbg !13591
  store i32 1, i32* %10, align 4, !dbg !13592
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0)) #20, !dbg !13593
  %12 = tail call i32 @hal_gpio_init(i32 noundef 36) #20, !dbg !13594
  %13 = tail call i32 @hal_gpio_init(i32 noundef 37) #20, !dbg !13595
  %14 = tail call i32 @hal_pinmux_set_function(i32 noundef 36, i8 noundef zeroext 1) #20, !dbg !13596
  %15 = tail call i32 @hal_pinmux_set_function(i32 noundef 37, i8 noundef zeroext 1) #20, !dbg !13597
  store volatile i32 5, i32* @test_length, align 4, !dbg !13598
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !13599
  store i32 4, i32* %16, align 4, !dbg !13600
  %17 = call i32 @hal_i2c_master_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !13601
  %18 = icmp eq i32 %17, 0, !dbg !13603
  br i1 %18, label %21, label %19, !dbg !13604

19:                                               ; preds = %0
  %20 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4.183, i32 0, i32 0)) #20, !dbg !13605
  br label %112, !dbg !13607

21:                                               ; preds = %0
  %22 = call i32 @hal_i2c_master_register_callback(i32 noundef 0, void (i8, i32, i8*)* noundef nonnull @i2c_callback, i8* noundef null) #20, !dbg !13608
  %23 = icmp eq i32 %22, 0, !dbg !13610
  br i1 %23, label %26, label %24, !dbg !13611

24:                                               ; preds = %21
  %25 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.184, i32 0, i32 0)) #20, !dbg !13612
  br label %112, !dbg !13614

26:                                               ; preds = %21
  %27 = load volatile i32, i32* @test_length, align 4, !dbg !13615
  %28 = add i32 %27, 1, !dbg !13616
  %29 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %2, i32 0, i32 3, !dbg !13617
  store i32 %28, i32* %29, align 4, !dbg !13618
  %30 = call i32 @hal_i2c_master_send_dma_ex(i32 noundef 0, %struct.hal_i2c_send_config_t* noundef nonnull %2) #20, !dbg !13619
  %31 = icmp eq i32 %30, 0, !dbg !13621
  br i1 %31, label %34, label %32, !dbg !13622

32:                                               ; preds = %26
  %33 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.185, i32 0, i32 0)) #20, !dbg !13623
  br label %112, !dbg !13625

34:                                               ; preds = %26, %34
  %35 = load volatile i32, i32* @i2c_finish_flag, align 4, !dbg !13626
  %36 = icmp eq i32 %35, 0, !dbg !13627
  br i1 %36, label %34, label %37, !dbg !13628, !llvm.loop !13629

37:                                               ; preds = %34
  store volatile i32 0, i32* @i2c_finish_flag, align 4, !dbg !13631
  %38 = call i32 @hal_i2c_master_deinit(i32 noundef 0) #20, !dbg !13632
  %39 = icmp eq i32 %38, 0, !dbg !13634
  br i1 %39, label %42, label %40, !dbg !13635

40:                                               ; preds = %37
  %41 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7.186, i32 0, i32 0)) #20, !dbg !13636
  br label %112, !dbg !13638

42:                                               ; preds = %37
  %43 = call i32 @hal_gpt_delay_ms(i32 noundef 200) #20, !dbg !13639
  store i32 4, i32* %16, align 4, !dbg !13640
  %44 = call i32 @hal_i2c_master_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !13641
  %45 = icmp eq i32 %44, 0, !dbg !13643
  br i1 %45, label %48, label %46, !dbg !13644

46:                                               ; preds = %42
  %47 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.187, i32 0, i32 0)) #20, !dbg !13645
  br label %112, !dbg !13647

48:                                               ; preds = %42
  %49 = call i32 @hal_i2c_master_register_callback(i32 noundef 0, void (i8, i32, i8*)* noundef nonnull @i2c_callback, i8* noundef null) #20, !dbg !13648
  %50 = icmp eq i32 %49, 0, !dbg !13650
  br i1 %50, label %53, label %51, !dbg !13651

51:                                               ; preds = %48
  %52 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.188, i32 0, i32 0)) #20, !dbg !13652
  br label %112, !dbg !13654

53:                                               ; preds = %48
  store i32 1, i32* %29, align 4, !dbg !13655
  %54 = call i32 @hal_i2c_master_send_dma_ex(i32 noundef 0, %struct.hal_i2c_send_config_t* noundef nonnull %2) #20, !dbg !13656
  %55 = icmp eq i32 %54, 0, !dbg !13658
  br i1 %55, label %58, label %56, !dbg !13659

56:                                               ; preds = %53
  %57 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10.189, i32 0, i32 0)) #20, !dbg !13660
  br label %112, !dbg !13662

58:                                               ; preds = %53, %58
  %59 = load volatile i32, i32* @i2c_finish_flag, align 4, !dbg !13663
  %60 = icmp eq i32 %59, 0, !dbg !13664
  br i1 %60, label %58, label %61, !dbg !13665, !llvm.loop !13666

61:                                               ; preds = %58
  store volatile i32 0, i32* @i2c_finish_flag, align 4, !dbg !13668
  %62 = call i32 @hal_i2c_master_deinit(i32 noundef 0) #20, !dbg !13669
  %63 = icmp eq i32 %62, 0, !dbg !13671
  br i1 %63, label %66, label %64, !dbg !13672

64:                                               ; preds = %61
  %65 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.190, i32 0, i32 0)) #20, !dbg !13673
  br label %112, !dbg !13675

66:                                               ; preds = %61
  %67 = call i32 @hal_gpt_delay_ms(i32 noundef 200) #20, !dbg !13676
  store i32 4, i32* %16, align 4, !dbg !13677
  %68 = call i32 @hal_i2c_master_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #20, !dbg !13678
  %69 = icmp eq i32 %68, 0, !dbg !13680
  br i1 %69, label %72, label %70, !dbg !13681

70:                                               ; preds = %66
  %71 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.191, i32 0, i32 0)) #20, !dbg !13682
  br label %112, !dbg !13684

72:                                               ; preds = %66
  %73 = call i32 @hal_i2c_master_register_callback(i32 noundef 0, void (i8, i32, i8*)* noundef nonnull @i2c_callback, i8* noundef null) #20, !dbg !13685
  %74 = icmp eq i32 %73, 0, !dbg !13687
  br i1 %74, label %77, label %75, !dbg !13688

75:                                               ; preds = %72
  %76 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13.192, i32 0, i32 0)) #20, !dbg !13689
  br label %112, !dbg !13691

77:                                               ; preds = %72
  %78 = load volatile i32, i32* @test_length, align 4, !dbg !13692
  %79 = getelementptr inbounds %struct.hal_i2c_send_config_t, %struct.hal_i2c_send_config_t* %3, i32 0, i32 3, !dbg !13693
  store i32 %78, i32* %79, align 4, !dbg !13694
  %80 = call i32 @hal_i2c_master_receive_dma_ex(i32 noundef 0, %struct.hal_i2c_send_config_t* noundef nonnull %3) #20, !dbg !13695
  %81 = icmp eq i32 %80, 0, !dbg !13697
  br i1 %81, label %84, label %82, !dbg !13698

82:                                               ; preds = %77
  %83 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.193, i32 0, i32 0)) #20, !dbg !13699
  br label %112, !dbg !13701

84:                                               ; preds = %77, %84
  %85 = load volatile i32, i32* @i2c_finish_flag, align 4, !dbg !13702
  %86 = icmp eq i32 %85, 0, !dbg !13703
  br i1 %86, label %84, label %87, !dbg !13704, !llvm.loop !13705

87:                                               ; preds = %84
  store volatile i32 0, i32* @i2c_finish_flag, align 4, !dbg !13707
  %88 = call i32 @hal_i2c_master_deinit(i32 noundef 0) #20, !dbg !13708
  %89 = icmp eq i32 %88, 0, !dbg !13710
  br i1 %89, label %92, label %90, !dbg !13711

90:                                               ; preds = %87
  %91 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15.194, i32 0, i32 0)) #20, !dbg !13712
  br label %112, !dbg !13714

92:                                               ; preds = %87
  %93 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.195, i32 0, i32 0)) #20, !dbg !13715
  call void @llvm.dbg.value(metadata i32 0, metadata !13572, metadata !DIExpression()), !dbg !13582
  br label %94, !dbg !13716

94:                                               ; preds = %98, %92
  %95 = phi i32 [ 0, %92 ], [ %99, %98 ], !dbg !13718
  call void @llvm.dbg.value(metadata i32 %95, metadata !13572, metadata !DIExpression()), !dbg !13582
  %96 = load volatile i32, i32* @test_length, align 4, !dbg !13719
  %97 = icmp ult i32 %95, %96, !dbg !13721
  br i1 %97, label %98, label %105, !dbg !13722

98:                                               ; preds = %94
  %99 = add nuw i32 %95, 1, !dbg !13723
  %100 = getelementptr inbounds [32 x i8], [32 x i8]* @i2c_send_data, i32 0, i32 %99, !dbg !13726
  %101 = load i8, i8* %100, align 1, !dbg !13726
  %102 = getelementptr inbounds [32 x i8], [32 x i8]* @i2c_receive_data, i32 0, i32 %95, !dbg !13727
  %103 = load i8, i8* %102, align 1, !dbg !13727
  %104 = icmp eq i8 %101, %103, !dbg !13728
  br i1 %104, label %94, label %107, !dbg !13729, !llvm.loop !13730

105:                                              ; preds = %94
  %106 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18.196, i32 0, i32 0)) #20, !dbg !13732
  br label %107, !dbg !13735

107:                                              ; preds = %98, %105
  %108 = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i32 0, i32 0), %105 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17.197, i32 0, i32 0), %98 ]
  %109 = call i32 (i8*, ...) @printf(i8* noundef %108) #20, !dbg !13582
  %110 = call i32 @hal_gpio_deinit(i32 noundef 36) #20, !dbg !13736
  %111 = call i32 @hal_gpio_deinit(i32 noundef 37) #20, !dbg !13737
  br label %112, !dbg !13738

112:                                              ; preds = %107, %90, %82, %75, %70, %64, %56, %51, %46, %40, %32, %24, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !13738
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #22, !dbg !13738
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !13738
  ret void, !dbg !13738
}

; Function Attrs: noinline nounwind optsize
define internal void @i2c_callback(i8 noundef zeroext %0, i32 noundef %1, i8* nocapture noundef readnone %2) #0 !dbg !13739 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13741, metadata !DIExpression()), !dbg !13744
  call void @llvm.dbg.value(metadata i32 %1, metadata !13742, metadata !DIExpression()), !dbg !13744
  call void @llvm.dbg.value(metadata i8* %2, metadata !13743, metadata !DIExpression()), !dbg !13744
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i32 0, i32 0)) #20, !dbg !13745
  store volatile i32 1, i32* @i2c_finish_flag, align 4, !dbg !13746
  ret void, !dbg !13747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !13748 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !13758
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !13758
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !13750, metadata !DIExpression()), !dbg !13759
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !13760
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !13761
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !13762
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !13763
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !13764
  store i32 9, i32* %7, align 4, !dbg !13765
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !13766
  store i32 3, i32* %8, align 4, !dbg !13767
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !13768
  store i32 0, i32* %9, align 4, !dbg !13769
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !13770
  store i32 0, i32* %10, align 4, !dbg !13771
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !13772
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !13773
  ret void, !dbg !13773
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !13774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13776, metadata !DIExpression()), !dbg !13777
  ret i32 0, !dbg !13778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !13779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13829, metadata !DIExpression()), !dbg !13831
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !13830, metadata !DIExpression()), !dbg !13831
  ret i32 0, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !13833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13835, metadata !DIExpression()), !dbg !13836
  ret i32 1, !dbg !13837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !13838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13842, metadata !DIExpression()), !dbg !13845
  call void @llvm.dbg.value(metadata i32 %1, metadata !13843, metadata !DIExpression()), !dbg !13845
  call void @llvm.dbg.value(metadata i32 %2, metadata !13844, metadata !DIExpression()), !dbg !13845
  ret i32 0, !dbg !13846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !13847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13851, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 %1, metadata !13852, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 %2, metadata !13853, metadata !DIExpression()), !dbg !13854
  ret i32 -1, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !13856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13860, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i8* %1, metadata !13861, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 %2, metadata !13862, metadata !DIExpression()), !dbg !13863
  ret i32 0, !dbg !13864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !13865 {
  ret i32 1, !dbg !13866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !13867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13871, metadata !DIExpression()), !dbg !13873
  call void @llvm.dbg.value(metadata i32 %1, metadata !13872, metadata !DIExpression()), !dbg !13873
  ret i32 -1, !dbg !13874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !13875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13877, metadata !DIExpression()), !dbg !13878
  ret i32 -1, !dbg !13879
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2564 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2762, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i32 %1, metadata !2763, metadata !DIExpression()), !dbg !13880
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !13881, !srcloc !13882
  call void @llvm.dbg.value(metadata i8* %3, metadata !2765, metadata !DIExpression()), !dbg !13880
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !13883
  %5 = icmp eq i8* %4, null, !dbg !13885
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !13886
  call void @llvm.dbg.value(metadata i8* %6, metadata !2764, metadata !DIExpression()), !dbg !13880
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !13887
  %8 = icmp ult i8* %3, %7, !dbg !13889
  %9 = xor i1 %8, true, !dbg !13890
  %10 = or i1 %5, %9, !dbg !13890
  br i1 %10, label %11, label %13, !dbg !13890

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !13891
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !13890
  br label %13, !dbg !13890

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !13891
  ret i8* %14, !dbg !13890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !13892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13894, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i8* %1, metadata !13895, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 %2, metadata !13896, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 0, metadata !13897, metadata !DIExpression()), !dbg !13898
  %4 = icmp sgt i32 %2, 0, !dbg !13899
  br i1 %4, label %5, label %14, !dbg !13902

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i8* %7, metadata !13895, metadata !DIExpression()), !dbg !13898
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13903
  call void @llvm.dbg.value(metadata i8* %8, metadata !13895, metadata !DIExpression()), !dbg !13898
  %9 = load i8, i8* %7, align 1, !dbg !13905
  %10 = zext i8 %9 to i32, !dbg !13905
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !13906
  %12 = add nuw nsw i32 %6, 1, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %12, metadata !13897, metadata !DIExpression()), !dbg !13898
  %13 = icmp eq i32 %12, %2, !dbg !13899
  br i1 %13, label %14, label %5, !dbg !13902, !llvm.loop !13908

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !13910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !13911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13913, metadata !DIExpression()), !dbg !13915
  %2 = add i32 %0, -1, !dbg !13916
  %3 = icmp ugt i32 %2, 16777215, !dbg !13918
  br i1 %3, label %8, label %4, !dbg !13919

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %5, metadata !13914, metadata !DIExpression()), !dbg !13915
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13921
  %7 = and i32 %6, -4, !dbg !13921
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13921
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13922
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13923
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13924
  br label %8, !dbg !13925

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !13915
  ret i32 %9, !dbg !13926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !13927 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !13928
  ret void, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !13930 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !13931
  ret i32 %1, !dbg !13932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !13933 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !13936
  %2 = lshr i32 %1, 3, !dbg !13937
  %3 = and i32 %2, 15, !dbg !13937
  call void @llvm.dbg.value(metadata i32 %3, metadata !13935, metadata !DIExpression()), !dbg !13938
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !13939

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !13940

5:                                                ; preds = %0, %0
  br label %9, !dbg !13942

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !13943
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !13944
  br label %15, !dbg !13946

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !13943
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !13944
  %12 = and i32 %11, 1024, !dbg !13947
  %13 = icmp eq i32 %12, 0, !dbg !13947
  br i1 %13, label %15, label %14, !dbg !13946

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !13948
  br label %15, !dbg !13950

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !13951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !13952 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !13953
  %2 = or i32 %1, 15728640, !dbg !13953
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !13953
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !13954
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13955
  %4 = or i32 %3, 458752, !dbg !13955
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13955
  ret void, !dbg !13956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !13957 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !13958
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !13959
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !13960
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !13961
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !13962
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !13963
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !13964
  ret void, !dbg !13965
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2890, !94, !345, !591, !867, !2912, !990, !1073, !1175, !1269, !2916, !1357, !1453, !1776, !2962, !1863, !1874, !2232, !2293, !2964, !2373, !2539, !2551, !2757, !2768, !2878}
!llvm.ident = !{!2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966, !2966}
!llvm.module.flags = !{!2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gdma", scope: !345, file: !346, line: 46, type: !574, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !424, globals: !425, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pdma_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!347 = !{!348, !353, !358, !97, !365, !371, !168, !381, !386, !392, !396, !400, !406, !420}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 201, baseType: !7, size: 32, elements: !350)
!349 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gdma.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!350 = !{!351, !352}
!351 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_ERROR", value: -1)
!352 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 124, baseType: !18, size: 32, elements: !355)
!354 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "DMA_PD", value: 0)
!357 = !DIEnumerator(name: "DMA_AO", value: 1)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !359, line: 101, baseType: !7, size: 32, elements: !360)
!359 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!360 = !{!361, !362, !363, !364}
!361 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!362 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!363 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!364 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 166, baseType: !7, size: 32, elements: !366)
!366 = !{!367, !368, !369, !370}
!367 = !DIEnumerator(name: "PDMA_ERROR", value: -3)
!368 = !DIEnumerator(name: "PDMA_ERROR_CHANNEL", value: -2)
!369 = !DIEnumerator(name: "PDMA_INVALID_PARAMETER", value: -1)
!370 = !DIEnumerator(name: "PDMA_OK", value: 0)
!371 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 137, baseType: !18, size: 32, elements: !372)
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380}
!373 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!374 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!375 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!376 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!377 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!378 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!379 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!380 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 151, baseType: !18, size: 32, elements: !382)
!382 = !{!383, !384, !385}
!383 = !DIEnumerator(name: "PDMA_BYTE", value: 0)
!384 = !DIEnumerator(name: "PDMA_HALF_WORD", value: 1)
!385 = !DIEnumerator(name: "PDMA_WORD", value: 2)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 180, baseType: !18, size: 32, elements: !387)
!387 = !{!388, !389, !390, !391}
!388 = !DIEnumerator(name: "PDMA_TX", value: 0)
!389 = !DIEnumerator(name: "PDMA_RX", value: 1)
!390 = !DIEnumerator(name: "PDMA_TX_RINGBUFF", value: 2)
!391 = !DIEnumerator(name: "PDMA_RX_RINGBUFF", value: 3)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 174, baseType: !18, size: 32, elements: !393)
!393 = !{!394, !395}
!394 = !DIEnumerator(name: "PDMA_IDLE", value: 0)
!395 = !DIEnumerator(name: "PDMA_BUSY", value: 1)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 159, baseType: !7, size: 32, elements: !397)
!397 = !{!398, !399}
!398 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_ERROR", value: -1)
!399 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 206, baseType: !7, size: 32, elements: !401)
!401 = !{!402, !403, !404, !405}
!402 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!403 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!404 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!405 = !DIEnumerator(name: "VDMA_OK", value: 0)
!406 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 189, baseType: !18, size: 32, elements: !407)
!407 = !{!408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419}
!408 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!409 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!410 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!411 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!412 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!413 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!414 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!415 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!416 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!417 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!418 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!419 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!420 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 222, baseType: !7, size: 32, elements: !421)
!421 = !{!422, !423}
!422 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!423 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!424 = !{!88}
!425 = !{!343, !426, !434, !452, !460, !466, !491, !499, !507, !510, !523, !547, !553, !561, !566}
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "gdma_global", scope: !345, file: !346, line: 49, type: !428, isLocal: false, isDefinition: true)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 32, elements: !76)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_GLOBAL_T", file: !56, line: 843, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 841, size: 32, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_GLBSTA", scope: !431, file: !56, line: 842, baseType: !60, size: 32)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "pdma", scope: !345, file: !346, line: 52, type: !436, isLocal: false, isDefinition: true)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 192, elements: !314)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_T", file: !56, line: 859, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 848, size: 320, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !451}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPPT", scope: !439, file: !56, line: 849, baseType: !60, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPTO", scope: !439, file: !56, line: 850, baseType: !60, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_COUNT", scope: !439, file: !56, line: 851, baseType: !60, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_CON", scope: !439, file: !56, line: 852, baseType: !60, size: 32, offset: 96)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_START", scope: !439, file: !56, line: 853, baseType: !60, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_INTSTA", scope: !439, file: !56, line: 854, baseType: !60, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_ACKINT", scope: !439, file: !56, line: 855, baseType: !60, size: 32, offset: 192)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_RLCT", scope: !439, file: !56, line: 856, baseType: !272, size: 32, offset: 224)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !439, file: !56, line: 857, baseType: !450, size: 32, offset: 256)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 32, elements: !76)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_PGMADDR", scope: !439, file: !56, line: 858, baseType: !60, size: 32, offset: 288)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "pdma_global", scope: !345, file: !346, line: 55, type: !454, isLocal: false, isDefinition: true)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !314)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_GLOBAL_T", file: !56, line: 865, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 863, size: 32, elements: !458)
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_GLBSTA", scope: !457, file: !56, line: 864, baseType: !60, size: 32)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "g_pdma_global_running_bit", scope: !345, file: !346, line: 58, type: !462, isLocal: false, isDefinition: true)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 48, elements: !314)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !464)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !465)
!465 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "vdma", scope: !345, file: !346, line: 64, type: !468, isLocal: false, isDefinition: true)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 320, elements: !489)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_T", file: !56, line: 885, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 870, size: 448, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !482, !483, !484, !485, !486, !487, !488}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_COUNT", scope: !471, file: !56, line: 871, baseType: !60, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_CON", scope: !471, file: !56, line: 872, baseType: !60, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_START", scope: !471, file: !56, line: 873, baseType: !60, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_INTSTA", scope: !471, file: !56, line: 874, baseType: !60, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ACKINT", scope: !471, file: !56, line: 875, baseType: !60, size: 32, offset: 128)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !471, file: !56, line: 876, baseType: !479, size: 64, offset: 160)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 2)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PGMADDR", scope: !471, file: !56, line: 877, baseType: !60, size: 32, offset: 224)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_WRPTR", scope: !471, file: !56, line: 878, baseType: !272, size: 32, offset: 256)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_RDPTR", scope: !471, file: !56, line: 879, baseType: !272, size: 32, offset: 288)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFCNT", scope: !471, file: !56, line: 880, baseType: !272, size: 32, offset: 320)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSTA", scope: !471, file: !56, line: 881, baseType: !272, size: 32, offset: 352)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ALTLEN", scope: !471, file: !56, line: 882, baseType: !60, size: 32, offset: 384)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSIZE", scope: !471, file: !56, line: 883, baseType: !60, size: 32, offset: 416)
!489 = !{!490}
!490 = !DISubrange(count: 10)
!491 = !DIGlobalVariableExpression(var: !492, expr: !DIExpression())
!492 = distinct !DIGlobalVariable(name: "vdma_port", scope: !345, file: !346, line: 69, type: !493, isLocal: false, isDefinition: true)
!493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 320, elements: !489)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_PORT_T", file: !56, line: 891, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 889, size: 32, elements: !497)
!497 = !{!498}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PORT", scope: !496, file: !56, line: 890, baseType: !60, size: 32)
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "vdma_global", scope: !345, file: !346, line: 75, type: !501, isLocal: false, isDefinition: true)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 320, elements: !489)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_GLOBAL_T", file: !56, line: 898, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 896, size: 32, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_GLBSTA", scope: !504, file: !56, line: 897, baseType: !60, size: 32)
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "g_vdma_global_running_bit", scope: !345, file: !346, line: 80, type: !509, isLocal: false, isDefinition: true)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 80, elements: !489)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "g_gdma_callback", scope: !345, file: !346, line: 92, type: !512, isLocal: false, isDefinition: true)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 64, elements: !76)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "gdma_user_callback_t", file: !346, line: 89, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 86, size: 64, elements: !515)
!515 = !{!516, !522}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !514, file: !346, line: 87, baseType: !517, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_callback_t", file: !349, line: 230, baseType: !518)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 32)
!519 = !DISubroutineType(types: !520)
!520 = !{null, !521, !88}
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_event_t", file: !349, line: 204, baseType: !348)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !514, file: !346, line: 88, baseType: !88, size: 32, offset: 32)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "count", scope: !525, file: !346, line: 1122, type: !61, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "pd_domain_dma_interrupt_hander", scope: !346, file: !346, line: 1108, type: !526, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !530)
!526 = !DISubroutineType(types: !527)
!527 = !{null, !528}
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !529)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!530 = !{!531, !532, !533, !534, !540, !546}
!531 = !DILocalVariable(name: "irq_number", arg: 1, scope: !525, file: !346, line: 1108, type: !528)
!532 = !DILocalVariable(name: "global_status", scope: !525, file: !346, line: 1113, type: !60)
!533 = !DILocalVariable(name: "gdma_callback", scope: !525, file: !346, line: 1116, type: !517)
!534 = !DILocalVariable(name: "pdma_callback", scope: !525, file: !346, line: 1117, type: !535)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_callback_t", file: !354, line: 288, baseType: !536)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!537 = !DISubroutineType(types: !538)
!538 = !{null, !539, !88}
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_event_t", file: !354, line: 162, baseType: !396)
!540 = !DILocalVariable(name: "vdma_callback", scope: !525, file: !346, line: 1118, type: !541)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_callback_t", file: !354, line: 291, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DISubroutineType(types: !544)
!544 = !{null, !545, !88}
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !354, line: 225, baseType: !420)
!546 = !DILocalVariable(name: "argument", scope: !525, file: !346, line: 1119, type: !88)
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "pdma_init_status", scope: !345, file: !346, line: 61, type: !549, isLocal: true, isDefinition: true)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 56, elements: !551)
!550 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !463)
!551 = !{!552}
!552 = !DISubrange(count: 7)
!553 = !DIGlobalVariableExpression(var: !554, expr: !DIExpression())
!554 = distinct !DIGlobalVariable(name: "g_pdma_callback", scope: !345, file: !346, line: 104, type: !555, isLocal: true, isDefinition: true)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 384, elements: !314)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_user_callback_t", file: !346, line: 101, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 98, size: 64, elements: !558)
!558 = !{!559, !560}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !557, file: !346, line: 99, baseType: !535, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !557, file: !346, line: 100, baseType: !88, size: 32, offset: 32)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "vdma_init_status", scope: !345, file: !346, line: 83, type: !563, isLocal: true, isDefinition: true)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 144, elements: !564)
!564 = !{!565}
!565 = !DISubrange(count: 18)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "g_vdma_callback", scope: !345, file: !346, line: 120, type: !568, isLocal: true, isDefinition: true)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 640, elements: !489)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_user_callback_t", file: !346, line: 117, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 114, size: 64, elements: !571)
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !570, file: !346, line: 115, baseType: !541, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !570, file: !346, line: 116, baseType: !88, size: 32, offset: 32)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !575, size: 32, elements: !76)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_T", file: !56, line: 837, baseType: !577)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 826, size: 320, elements: !578)
!578 = !{!579, !580, !581, !582, !583, !584, !585, !586, !587, !588}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_SRC", scope: !577, file: !56, line: 827, baseType: !60, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_DST", scope: !577, file: !56, line: 828, baseType: !60, size: 32, offset: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPPT", scope: !577, file: !56, line: 829, baseType: !60, size: 32, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPTO", scope: !577, file: !56, line: 830, baseType: !60, size: 32, offset: 96)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_COUNT", scope: !577, file: !56, line: 831, baseType: !60, size: 32, offset: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_CON", scope: !577, file: !56, line: 832, baseType: !60, size: 32, offset: 160)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_START", scope: !577, file: !56, line: 833, baseType: !60, size: 32, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_INTSTA", scope: !577, file: !56, line: 834, baseType: !60, size: 32, offset: 224)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_ACKINT", scope: !577, file: !56, line: 835, baseType: !60, size: 32, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_RLCT", scope: !577, file: !56, line: 836, baseType: !272, size: 32, offset: 288)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !591, file: !592, line: 64, type: !692, isLocal: false, isDefinition: true)
!591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !593, retainedTypes: !687, globals: !691, splitDebugInlining: false, nameTableKind: None)
!592 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!593 = !{!594, !646, !653, !657, !663, !667, !676, !681}
!594 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !595)
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645}
!596 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!597 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!598 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!599 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!600 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!601 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!602 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!603 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!604 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!605 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!606 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!607 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!608 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!609 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!610 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!611 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!612 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!613 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!614 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!615 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!616 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!617 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!618 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!619 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!620 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!621 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!622 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!623 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!624 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!625 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!626 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!627 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!628 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!629 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!630 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!631 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!632 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!633 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!634 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!635 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!636 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!637 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!638 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!639 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!640 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!641 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!642 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!643 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!644 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!645 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!646 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 224, baseType: !7, size: 32, elements: !648)
!647 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!648 = !{!649, !650, !651, !652}
!649 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!650 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!651 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!652 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 210, baseType: !18, size: 32, elements: !654)
!654 = !{!655, !656}
!655 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!656 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 233, baseType: !7, size: 32, elements: !658)
!658 = !{!659, !660, !661, !662}
!659 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!660 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!661 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!662 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!663 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 217, baseType: !18, size: 32, elements: !664)
!664 = !{!665, !666}
!665 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!666 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675}
!669 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!670 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!671 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!672 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!673 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!674 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!675 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!676 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !677)
!677 = !{!678, !679, !680}
!678 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!679 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!680 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!681 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 242, baseType: !18, size: 32, elements: !682)
!682 = !{!683, !684, !685, !686}
!683 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!684 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!685 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!686 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!687 = !{!88, !688, !689, !690}
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !647, line: 213, baseType: !653)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !647, line: 220, baseType: !663)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !647, line: 247, baseType: !681)
!691 = !{!589}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !695)
!695 = !{!696, !708, !712, !721, !722, !731, !732, !741, !742, !752, !753, !762, !763, !772, !773, !782, !783, !792, !796, !805, !806, !815, !816, !825, !834, !835, !844, !848, !857, !858}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !694, file: !56, line: 1523, baseType: !697, size: 256)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !698, size: 256, elements: !480)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !700)
!700 = !{!701, !702, !703, !704}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !699, file: !56, line: 1396, baseType: !60, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !699, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !699, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !699, file: !56, line: 1399, baseType: !705, size: 32, offset: 96)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 32, elements: !706)
!706 = !{!707}
!707 = !DISubrange(count: 4)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !694, file: !56, line: 1524, baseType: !709, size: 1792, offset: 256)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1792, elements: !710)
!710 = !{!711}
!711 = !DISubrange(count: 224)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !694, file: !56, line: 1525, baseType: !713, size: 256, offset: 2048)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 256, elements: !480)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !716)
!716 = !{!717, !718, !719, !720}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !715, file: !56, line: 1405, baseType: !60, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !715, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !715, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !715, file: !56, line: 1408, baseType: !705, size: 32, offset: 96)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !694, file: !56, line: 1526, baseType: !709, size: 1792, offset: 2304)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !694, file: !56, line: 1527, baseType: !723, size: 256, offset: 4096)
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !724, size: 256, elements: !480)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !726)
!726 = !{!727, !728, !729, !730}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !725, file: !56, line: 1413, baseType: !60, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !725, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !725, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !725, file: !56, line: 1416, baseType: !705, size: 32, offset: 96)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !694, file: !56, line: 1528, baseType: !709, size: 1792, offset: 4352)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !694, file: !56, line: 1529, baseType: !733, size: 256, offset: 6144)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, size: 256, elements: !480)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !735)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !736)
!736 = !{!737, !738, !739, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !735, file: !56, line: 1422, baseType: !60, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !735, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !735, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !735, file: !56, line: 1425, baseType: !705, size: 32, offset: 96)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !694, file: !56, line: 1530, baseType: !709, size: 1792, offset: 6400)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !694, file: !56, line: 1531, baseType: !743, size: 256, offset: 8192)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 256, elements: !480)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !746)
!746 = !{!747, !748}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !745, file: !56, line: 1430, baseType: !60, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !745, file: !56, line: 1431, baseType: !749, size: 96, offset: 32)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 96, elements: !750)
!750 = !{!751}
!751 = !DISubrange(count: 12)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !694, file: !56, line: 1532, baseType: !709, size: 1792, offset: 8448)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !694, file: !56, line: 1533, baseType: !754, size: 256, offset: 10240)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !755, size: 256, elements: !480)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !757)
!757 = !{!758, !759, !760, !761}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !756, file: !56, line: 1436, baseType: !60, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !756, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !756, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !756, file: !56, line: 1439, baseType: !705, size: 32, offset: 96)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !694, file: !56, line: 1534, baseType: !709, size: 1792, offset: 10496)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !694, file: !56, line: 1535, baseType: !764, size: 256, offset: 12288)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 256, elements: !480)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !767)
!767 = !{!768, !769, !770, !771}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !766, file: !56, line: 1444, baseType: !60, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !766, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !766, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !766, file: !56, line: 1447, baseType: !705, size: 32, offset: 96)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !694, file: !56, line: 1536, baseType: !709, size: 1792, offset: 12544)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !694, file: !56, line: 1537, baseType: !774, size: 256, offset: 14336)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 256, elements: !480)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !777)
!777 = !{!778, !779, !780, !781}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !776, file: !56, line: 1451, baseType: !60, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !776, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !776, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !776, file: !56, line: 1454, baseType: !705, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !694, file: !56, line: 1538, baseType: !709, size: 1792, offset: 14592)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !694, file: !56, line: 1539, baseType: !784, size: 512, offset: 16384)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 512, elements: !706)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !787)
!787 = !{!788, !789, !790, !791}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !786, file: !56, line: 1459, baseType: !60, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !786, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !786, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !786, file: !56, line: 1462, baseType: !705, size: 32, offset: 96)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !694, file: !56, line: 1540, baseType: !793, size: 1536, offset: 16896)
!793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1536, elements: !794)
!794 = !{!795}
!795 = !DISubrange(count: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !694, file: !56, line: 1541, baseType: !797, size: 256, offset: 18432)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 256, elements: !480)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !800)
!800 = !{!801, !802, !803, !804}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !799, file: !56, line: 1467, baseType: !60, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !799, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !799, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !799, file: !56, line: 1470, baseType: !705, size: 32, offset: 96)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !694, file: !56, line: 1542, baseType: !709, size: 1792, offset: 18688)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !694, file: !56, line: 1543, baseType: !807, size: 256, offset: 20480)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 256, elements: !480)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !810)
!810 = !{!811, !812, !813, !814}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !809, file: !56, line: 1476, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !809, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !809, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !809, file: !56, line: 1479, baseType: !705, size: 32, offset: 96)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !694, file: !56, line: 1544, baseType: !709, size: 1792, offset: 20736)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !694, file: !56, line: 1545, baseType: !817, size: 256, offset: 22528)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 256, elements: !480)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !820)
!820 = !{!821, !822, !823, !824}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !819, file: !56, line: 1485, baseType: !60, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !819, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !819, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !819, file: !56, line: 1488, baseType: !705, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !694, file: !56, line: 1546, baseType: !826, size: 256, offset: 22784)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 256, elements: !480)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !829)
!829 = !{!830, !831, !832, !833}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !828, file: !56, line: 1493, baseType: !60, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !828, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !828, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !828, file: !56, line: 1496, baseType: !705, size: 32, offset: 96)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !694, file: !56, line: 1547, baseType: !793, size: 1536, offset: 23040)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !694, file: !56, line: 1548, baseType: !836, size: 896, offset: 24576)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 896, elements: !551)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !839)
!839 = !{!840, !841, !842, !843}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !838, file: !56, line: 1501, baseType: !60, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !838, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !838, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !838, file: !56, line: 1504, baseType: !705, size: 32, offset: 96)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !694, file: !56, line: 1549, baseType: !845, size: 1152, offset: 25472)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1152, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 144)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !694, file: !56, line: 1550, baseType: !849, size: 512, offset: 26624)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 512, elements: !706)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !852)
!852 = !{!853, !854, !855, !856}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !851, file: !56, line: 1509, baseType: !60, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !851, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !851, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !851, file: !56, line: 1512, baseType: !705, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !694, file: !56, line: 1551, baseType: !793, size: 1536, offset: 27136)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !694, file: !56, line: 1552, baseType: !859, size: 768, offset: 28672)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 768, elements: !314)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !861, file: !56, line: 1517, baseType: !60, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !861, file: !56, line: 1518, baseType: !749, size: 96, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !867, file: !868, line: 101, type: !984, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !934, globals: !943, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!869 = !{!870, !406, !877, !400, !883, !888, !895, !911, !917, !921, !358, !926, !420}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876}
!872 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!873 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!874 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!875 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!876 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 355, baseType: !7, size: 32, elements: !879)
!878 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!879 = !{!880, !881, !882}
!880 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!881 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!882 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !868, line: 65, baseType: !18, size: 32, elements: !884)
!884 = !{!885, !886, !887}
!885 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!886 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!887 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 345, baseType: !7, size: 32, elements: !889)
!889 = !{!890, !891, !892, !893, !894}
!890 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!891 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!892 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!893 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!894 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 302, baseType: !18, size: 32, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910}
!897 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!898 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!899 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!900 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!901 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!902 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!903 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!904 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!905 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!906 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!907 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!908 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!909 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!910 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 321, baseType: !18, size: 32, elements: !912)
!912 = !{!913, !914, !915, !916}
!913 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!914 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!915 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!916 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 330, baseType: !18, size: 32, elements: !918)
!918 = !{!919, !920}
!919 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!920 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!921 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 337, baseType: !18, size: 32, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!924 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!925 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !927, line: 152, baseType: !7, size: 32, elements: !928)
!927 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!928 = !{!929, !930, !931, !932, !933}
!929 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!930 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!931 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!932 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!933 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!934 = !{!88, !61, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !937, line: 96, baseType: !938)
!937 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !937, line: 93, size: 64, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !938, file: !937, line: 94, baseType: !91, size: 8)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !938, file: !937, line: 95, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !870)
!943 = !{!865, !944, !957, !962, !976, !982}
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !867, file: !868, line: 102, type: !946, isLocal: true, isDefinition: true)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 256, elements: !706)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !868, line: 74, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !868, line: 71, size: 64, elements: !949)
!949 = !{!950, !956}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !948, file: !868, line: 72, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !878, line: 410, baseType: !952)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !955, !88}
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !878, line: 359, baseType: !877)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !948, file: !868, line: 73, baseType: !88, size: 32, offset: 32)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !867, file: !868, line: 103, type: !959, isLocal: true, isDefinition: true)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 512, elements: !960)
!960 = !{!961}
!961 = !DISubrange(count: 8)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !867, file: !868, line: 104, type: !964, isLocal: true, isDefinition: true)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 896, elements: !706)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !878, line: 390, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 382, size: 224, elements: !967)
!967 = !{!968, !970, !971, !972, !973, !974, !975}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !966, file: !878, line: 383, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !966, file: !878, line: 384, baseType: !61, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !966, file: !878, line: 385, baseType: !61, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !966, file: !878, line: 386, baseType: !969, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !966, file: !878, line: 387, baseType: !61, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !966, file: !878, line: 388, baseType: !61, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !966, file: !878, line: 389, baseType: !61, size: 32, offset: 192)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !867, file: !868, line: 105, type: !978, isLocal: true, isDefinition: true)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 416, elements: !980)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!980 = !{!981}
!981 = !DISubrange(count: 13)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !867, file: !868, line: 90, type: !91, isLocal: true, isDefinition: true)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 128, elements: !706)
!985 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !868, line: 69, baseType: !883)
!987 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !990, file: !991, line: 53, type: !1069, isLocal: false, isDefinition: true)
!990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !992, retainedTypes: !1003, globals: !1059, splitDebugInlining: false, nameTableKind: None)
!991 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!992 = !{!97, !168, !406, !870, !993}
!993 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !937, line: 46, baseType: !18, size: 32, elements: !994)
!994 = !{!995, !996, !997, !998, !999, !1000, !1001, !1002}
!995 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!996 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!997 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!998 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!999 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!1000 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!1001 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!1002 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!1003 = !{!1004}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !1007)
!1007 = !{!1008, !1014, !1019, !1025, !1026, !1031, !1036, !1037, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !1006, file: !56, line: 547, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 543, size: 32, elements: !1010)
!1010 = !{!1011, !1012, !1013}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !1009, file: !56, line: 544, baseType: !272, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !1009, file: !56, line: 545, baseType: !60, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !1009, file: !56, line: 546, baseType: !60, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !1006, file: !56, line: 551, baseType: !1015, size: 32, offset: 32)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 548, size: 32, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !1015, file: !56, line: 549, baseType: !60, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !1015, file: !56, line: 550, baseType: !60, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !1006, file: !56, line: 556, baseType: !1020, size: 32, offset: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 552, size: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !1020, file: !56, line: 553, baseType: !272, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !1020, file: !56, line: 554, baseType: !60, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !1020, file: !56, line: 555, baseType: !60, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !1006, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !1006, file: !56, line: 561, baseType: !1027, size: 32, offset: 128)
!1027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 558, size: 32, elements: !1028)
!1028 = !{!1029, !1030}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !1027, file: !56, line: 559, baseType: !60, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !1027, file: !56, line: 560, baseType: !60, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !1006, file: !56, line: 565, baseType: !1032, size: 32, offset: 160)
!1032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 562, size: 32, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !1032, file: !56, line: 563, baseType: !272, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !1032, file: !56, line: 564, baseType: !60, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !1006, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !1006, file: !56, line: 570, baseType: !1038, size: 32, offset: 224)
!1038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 567, size: 32, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1038, file: !56, line: 568, baseType: !60, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !1038, file: !56, line: 569, baseType: !60, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !1006, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !1006, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !1006, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !1006, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !1006, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !1006, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !1006, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !1006, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !1006, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !1006, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !1006, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !1006, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !1006, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !1006, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !1006, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !1006, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !1006, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!1059 = !{!988, !1060, !1065}
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !990, file: !991, line: 54, type: !1062, isLocal: false, isDefinition: true)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 128, elements: !706)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !990, file: !991, line: 55, type: !1067, isLocal: false, isDefinition: true)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 128, elements: !706)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 128, elements: !706)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "s_i2c_master_status", scope: !1073, file: !1074, line: 61, type: !1172, isLocal: true, isDefinition: true)
!1073 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1074, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1075, retainedTypes: !1138, globals: !1150, splitDebugInlining: false, nameTableKind: None)
!1074 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1075 = !{!1076, !1084, !1090, !1099, !1105, !1113, !381, !386, !1130, !168, !396, !1134}
!1076 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1077, line: 455, baseType: !7, size: 32, elements: !1078)
!1077 = !DIFile(filename: "../../../../../driver/chip/inc/hal_i2c_master.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1078 = !{!1079, !1080, !1081, !1082, !1083}
!1079 = !DIEnumerator(name: "HAL_I2C_STATUS_ERROR", value: -4)
!1080 = !DIEnumerator(name: "HAL_I2C_STATUS_ERROR_BUSY", value: -3)
!1081 = !DIEnumerator(name: "HAL_I2C_STATUS_INVALID_PORT_NUMBER", value: -2)
!1082 = !DIEnumerator(name: "HAL_I2C_STATUS_INVALID_PARAMETER", value: -1)
!1083 = !DIEnumerator(name: "HAL_I2C_STATUS_OK", value: 0)
!1084 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 302, baseType: !18, size: 32, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089}
!1086 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!1087 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!1088 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!1089 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!1090 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1077, line: 470, baseType: !18, size: 32, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097, !1098}
!1092 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_50K", value: 0)
!1093 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_100K", value: 1)
!1094 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_200K", value: 2)
!1095 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_300K", value: 3)
!1096 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_400K", value: 4)
!1097 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_1M", value: 5)
!1098 = !DIEnumerator(name: "HAL_I2C_FREQUENCY_MAX", value: 6)
!1099 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1077, line: 446, baseType: !7, size: 32, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104}
!1101 = !DIEnumerator(name: "HAL_I2C_EVENT_ACK_ERROR", value: -3)
!1102 = !DIEnumerator(name: "HAL_I2C_EVENT_NACK_ERROR", value: -2)
!1103 = !DIEnumerator(name: "HAL_I2C_EVENT_TIMEOUT_ERROR", value: -1)
!1104 = !DIEnumerator(name: "HAL_I2C_EVENT_SUCCESS", value: 0)
!1105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1106, line: 162, baseType: !7, size: 32, elements: !1107)
!1106 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1107 = !{!1108, !1109, !1110, !1111, !1112}
!1108 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!1109 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!1110 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!1111 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!1112 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!1113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1106, line: 142, baseType: !18, size: 32, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1115 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!1116 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!1117 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!1118 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!1119 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!1120 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!1121 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!1122 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!1123 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!1124 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!1125 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!1126 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!1127 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!1128 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!1129 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!1130 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1077, line: 464, baseType: !18, size: 32, elements: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIEnumerator(name: "HAL_I2C_STATUS_IDLE", value: 0)
!1133 = !DIEnumerator(name: "HAL_I2C_STATUS_BUS_BUSY", value: 1)
!1134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !1135)
!1135 = !{!1136, !1137}
!1136 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!1137 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!1138 = !{!88, !61, !1139, !1140, !1141, !1142}
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_running_type_t", file: !1077, line: 467, baseType: !1130)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_callback_event_t", file: !1077, line: 451, baseType: !1099)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_port_t", file: !98, line: 307, baseType: !1084)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_dma_callback_parameter_t", file: !1106, line: 182, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1106, line: 178, size: 64, elements: !1145)
!1145 = !{!1146, !1148, !1149}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_type", scope: !1144, file: !1106, line: 179, baseType: !1147, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !1106, line: 160, baseType: !1113)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "dma_finish", scope: !1144, file: !1106, line: 180, baseType: !91, size: 8, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_port", scope: !1144, file: !1106, line: 181, baseType: !463, size: 8, offset: 40)
!1150 = !{!1151, !1071, !1157, !1160, !1167, !1170}
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "s_i2c_dma_parameter", scope: !1073, file: !1074, line: 68, type: !1153, isLocal: true, isDefinition: true)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1154, size: 192, elements: !1155)
!1154 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1143)
!1155 = !{!1156}
!1156 = !DISubrange(count: 3)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "s_i2c_irq_table", scope: !1073, file: !1074, line: 65, type: !1159, isLocal: true, isDefinition: true)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 96, elements: !1155)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "s_i2c_callback", scope: !1073, file: !1074, line: 62, type: !1162, isLocal: true, isDefinition: true)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 96, elements: !1155)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_callback_t", file: !1077, line: 571, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{null, !463, !1140, !88}
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "s_i2c_callback_parameter", scope: !1073, file: !1074, line: 63, type: !1169, isLocal: true, isDefinition: true)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 96, elements: !1155)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "i2c_dma_callback_count", scope: !1073, file: !1074, line: 69, type: !1172, isLocal: true, isDefinition: true)
!1172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 24, elements: !1155)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !1175, file: !1176, line: 46, type: !1200, isLocal: false, isDefinition: true)
!1175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1176, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1177, globals: !1187, splitDebugInlining: false, nameTableKind: None)
!1176 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1177 = !{!371, !97, !1178, !1113, !1105}
!1178 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1106, line: 132, baseType: !18, size: 32, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184, !1185, !1186}
!1180 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!1181 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!1182 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!1183 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!1184 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!1185 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!1186 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!1187 = !{!1173, !1188, !1193, !1195, !1197}
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !1175, file: !1176, line: 47, type: !1190, isLocal: false, isDefinition: true)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1191, size: 128, elements: !706)
!1191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !354, line: 147, baseType: !371)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !1175, file: !1176, line: 48, type: !1190, isLocal: false, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !1175, file: !1176, line: 49, type: !1062, isLocal: false, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !1175, file: !1176, line: 52, type: !1199, isLocal: false, isDefinition: true)
!1199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !706)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 128, elements: !706)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !56, line: 1885, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1833, size: 960, elements: !1205)
!1205 = !{!1206, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !1204, file: !56, line: 1834, baseType: !1207, size: 16)
!1207 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1209)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1210)
!1210 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1204, file: !56, line: 1835, baseType: !1207, size: 16, offset: 16)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !1204, file: !56, line: 1836, baseType: !1207, size: 16, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1204, file: !56, line: 1837, baseType: !1207, size: 16, offset: 48)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !1204, file: !56, line: 1838, baseType: !1207, size: 16, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1204, file: !56, line: 1839, baseType: !1207, size: 16, offset: 80)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !1204, file: !56, line: 1840, baseType: !1207, size: 16, offset: 96)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1204, file: !56, line: 1841, baseType: !1207, size: 16, offset: 112)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !1204, file: !56, line: 1842, baseType: !1207, size: 16, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1204, file: !56, line: 1843, baseType: !1207, size: 16, offset: 144)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !1204, file: !56, line: 1844, baseType: !1207, size: 16, offset: 160)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1204, file: !56, line: 1845, baseType: !1207, size: 16, offset: 176)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !1204, file: !56, line: 1846, baseType: !1207, size: 16, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1204, file: !56, line: 1847, baseType: !1207, size: 16, offset: 208)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !1204, file: !56, line: 1848, baseType: !1207, size: 16, offset: 224)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1204, file: !56, line: 1849, baseType: !1207, size: 16, offset: 240)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !1204, file: !56, line: 1850, baseType: !1207, size: 16, offset: 256)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1204, file: !56, line: 1851, baseType: !1207, size: 16, offset: 272)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !1204, file: !56, line: 1852, baseType: !1207, size: 16, offset: 288)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1204, file: !56, line: 1853, baseType: !1207, size: 16, offset: 304)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1204, file: !56, line: 1854, baseType: !1231, size: 32, offset: 320)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 32, elements: !480)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !1204, file: !56, line: 1855, baseType: !1207, size: 16, offset: 352)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1204, file: !56, line: 1856, baseType: !1207, size: 16, offset: 368)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !1204, file: !56, line: 1857, baseType: !1207, size: 16, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1204, file: !56, line: 1858, baseType: !1207, size: 16, offset: 400)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !1204, file: !56, line: 1859, baseType: !1207, size: 16, offset: 416)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1204, file: !56, line: 1860, baseType: !1207, size: 16, offset: 432)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !1204, file: !56, line: 1861, baseType: !1207, size: 16, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1204, file: !56, line: 1862, baseType: !1207, size: 16, offset: 464)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1204, file: !56, line: 1863, baseType: !1231, size: 32, offset: 480)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !1204, file: !56, line: 1864, baseType: !1207, size: 16, offset: 512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1204, file: !56, line: 1865, baseType: !1207, size: 16, offset: 528)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1204, file: !56, line: 1866, baseType: !1231, size: 32, offset: 544)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !1204, file: !56, line: 1867, baseType: !1207, size: 16, offset: 576)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1204, file: !56, line: 1868, baseType: !1207, size: 16, offset: 592)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1204, file: !56, line: 1869, baseType: !1231, size: 32, offset: 608)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !1204, file: !56, line: 1870, baseType: !1207, size: 16, offset: 640)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1204, file: !56, line: 1871, baseType: !1207, size: 16, offset: 656)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1204, file: !56, line: 1872, baseType: !1250, size: 96, offset: 672)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 96, elements: !314)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !1204, file: !56, line: 1873, baseType: !1207, size: 16, offset: 768)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1204, file: !56, line: 1874, baseType: !1207, size: 16, offset: 784)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !1204, file: !56, line: 1875, baseType: !1207, size: 16, offset: 800)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1204, file: !56, line: 1876, baseType: !1207, size: 16, offset: 816)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !1204, file: !56, line: 1877, baseType: !1207, size: 16, offset: 832)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1204, file: !56, line: 1878, baseType: !1207, size: 16, offset: 848)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !1204, file: !56, line: 1879, baseType: !1207, size: 16, offset: 864)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1204, file: !56, line: 1880, baseType: !1207, size: 16, offset: 880)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1204, file: !56, line: 1881, baseType: !1231, size: 32, offset: 896)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !1204, file: !56, line: 1882, baseType: !1207, size: 16, offset: 928)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1204, file: !56, line: 1883, baseType: !1207, size: 16, offset: 944)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1263 = distinct !DIGlobalVariable(name: "priority_set", scope: !1264, file: !1265, line: 128, type: !61, isLocal: true, isDefinition: true)
!1264 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1265, file: !1265, line: 126, type: !1266, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !1353)
!1265 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!1268}
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !927, line: 158, baseType: !926)
!1269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1270, retainedTypes: !1271, globals: !1337, splitDebugInlining: false, nameTableKind: None)
!1270 = !{!926, !168}
!1271 = !{!528, !1272, !61, !1305, !1335}
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1274, line: 418, baseType: !1275)
!1274 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1274, line: 395, size: 1120, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1283, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1294, !1295, !1296, !1298, !1302, !1304}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1275, file: !1274, line: 397, baseType: !272, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1275, file: !1274, line: 398, baseType: !60, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1275, file: !1274, line: 399, baseType: !60, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1275, file: !1274, line: 400, baseType: !60, size: 32, offset: 96)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1275, file: !1274, line: 401, baseType: !60, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1275, file: !1274, line: 402, baseType: !60, size: 32, offset: 160)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1275, file: !1274, line: 403, baseType: !1284, size: 96, offset: 192)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 96, elements: !750)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1275, file: !1274, line: 404, baseType: !60, size: 32, offset: 288)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1275, file: !1274, line: 405, baseType: !60, size: 32, offset: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1275, file: !1274, line: 406, baseType: !60, size: 32, offset: 352)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1275, file: !1274, line: 407, baseType: !60, size: 32, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1275, file: !1274, line: 408, baseType: !60, size: 32, offset: 416)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1275, file: !1274, line: 409, baseType: !60, size: 32, offset: 448)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1275, file: !1274, line: 410, baseType: !60, size: 32, offset: 480)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1275, file: !1274, line: 411, baseType: !1293, size: 64, offset: 512)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !480)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1275, file: !1274, line: 412, baseType: !272, size: 32, offset: 576)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1275, file: !1274, line: 413, baseType: !272, size: 32, offset: 608)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1275, file: !1274, line: 414, baseType: !1297, size: 128, offset: 640)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !706)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1275, file: !1274, line: 415, baseType: !1299, size: 160, offset: 768)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1300)
!1300 = !{!1301}
!1301 = !DISubrange(count: 5)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1275, file: !1274, line: 416, baseType: !1303, size: 160, offset: 928)
!1303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1300)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1275, file: !1274, line: 417, baseType: !60, size: 32, offset: 1088)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1274, line: 378, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1274, line: 363, size: 28704, elements: !1308)
!1308 = !{!1309, !1311, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1326, !1330, !1334}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1307, file: !1274, line: 365, baseType: !1310, size: 256)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !960)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1307, file: !1274, line: 366, baseType: !1312, size: 768, offset: 256)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1313)
!1313 = !{!1314}
!1314 = !DISubrange(count: 24)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1307, file: !1274, line: 367, baseType: !1310, size: 256, offset: 1024)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1307, file: !1274, line: 368, baseType: !1312, size: 768, offset: 1280)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1307, file: !1274, line: 369, baseType: !1310, size: 256, offset: 2048)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1307, file: !1274, line: 370, baseType: !1312, size: 768, offset: 2304)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1307, file: !1274, line: 371, baseType: !1310, size: 256, offset: 3072)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1307, file: !1274, line: 372, baseType: !1312, size: 768, offset: 3328)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1307, file: !1274, line: 373, baseType: !1310, size: 256, offset: 4096)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1307, file: !1274, line: 374, baseType: !1323, size: 1792, offset: 4352)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1324)
!1324 = !{!1325}
!1325 = !DISubrange(count: 56)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1307, file: !1274, line: 375, baseType: !1327, size: 1920, offset: 6144)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 1920, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 240)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1307, file: !1274, line: 376, baseType: !1331, size: 20608, offset: 8064)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1332)
!1332 = !{!1333}
!1333 = !DISubrange(count: 644)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1307, file: !1274, line: 377, baseType: !60, size: 32, offset: 28672)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1337 = !{!1338, !1339, !1350}
!1338 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1269, file: !1265, line: 119, type: !1341, isLocal: false, isDefinition: true)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1342, size: 4096, elements: !1348)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1265, line: 50, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1265, line: 47, size: 64, elements: !1344)
!1344 = !{!1345, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1343, file: !1265, line: 48, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1343, file: !1265, line: 49, baseType: !61, size: 32, offset: 32)
!1348 = !{!1349}
!1349 = !DISubrange(count: 64)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1269, file: !1265, line: 52, type: !1352, isLocal: true, isDefinition: true)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 2048, elements: !1348)
!1353 = !{!1354}
!1354 = !DILocalVariable(name: "i", scope: !1264, file: !1265, line: 129, type: !61)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1357, file: !1358, line: 55, type: !91, isLocal: false, isDefinition: true)
!1357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1359, retainedTypes: !1394, globals: !1430, splitDebugInlining: false, nameTableKind: None)
!1358 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1359 = !{!1360, !1368, !1373}
!1360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1361, line: 51, baseType: !18, size: 32, elements: !1362)
!1361 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1362 = !{!1363, !1364, !1365, !1366, !1367}
!1363 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1364 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1365 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1366 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1367 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1361, line: 62, baseType: !18, size: 32, elements: !1369)
!1369 = !{!1370, !1371, !1372}
!1370 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1371 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1372 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1374, line: 228, baseType: !18, size: 32, elements: !1375)
!1374 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1375 = !{!1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393}
!1376 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1377 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1378 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1379 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1380 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1381 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1382 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1383 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1384 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1385 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1386 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1387 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1388 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1389 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1390 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1391 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1392 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1393 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1394 = !{!1395, !1396, !1418, !969, !61, !18, !1424, !1426, !1427, !1429}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1399)
!1399 = !{!1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1398, file: !56, line: 2759, baseType: !60, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1398, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1398, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1398, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1398, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1398, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1398, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1398, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1398, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1398, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1398, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1398, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1398, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1398, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1398, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1398, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1398, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1398, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1421)
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1420, file: !56, line: 2799, baseType: !60, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1420, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !465)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1430 = !{!1355, !1431, !1433, !1435, !1437, !1439, !1441, !1443, !1445, !1447, !1449}
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1357, file: !1358, line: 604, type: !463, isLocal: false, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1357, file: !1358, line: 605, type: !61, isLocal: false, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1357, file: !1358, line: 606, type: !61, isLocal: false, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1357, file: !1358, line: 607, type: !61, isLocal: false, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1357, file: !1358, line: 608, type: !61, isLocal: false, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1357, file: !1358, line: 609, type: !61, isLocal: false, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1357, file: !1358, line: 610, type: !61, isLocal: false, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1357, file: !1358, line: 611, type: !61, isLocal: false, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1357, file: !1358, line: 665, type: !61, isLocal: false, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1357, file: !1358, line: 666, type: !61, isLocal: false, isDefinition: true)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1453, file: !1454, line: 334, type: !91, isLocal: false, isDefinition: true)
!1453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1455, retainedTypes: !1623, globals: !1761, splitDebugInlining: false, nameTableKind: None)
!1454 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1455 = !{!1456, !1547, !1553, !1560, !1572, !1583, !1592, !1601, !1605, !1609}
!1456 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1457, line: 58, baseType: !7, size: 32, elements: !1458)
!1457 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1458 = !{!1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546}
!1459 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1460 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1461 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1462 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1463 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1464 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1465 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1466 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1467 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1468 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1469 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1470 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1471 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1472 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1473 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1474 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1475 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1476 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1477 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1478 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1479 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1480 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1481 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1482 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1483 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1484 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1485 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1486 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1487 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1488 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1489 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1490 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1491 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1492 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1493 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1494 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1495 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1496 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1497 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1498 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1499 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1500 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1501 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1502 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1503 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1504 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1505 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1506 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1507 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1508 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1509 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1510 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1511 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1512 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1513 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1514 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1515 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1516 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1517 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1518 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1519 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1520 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1521 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1522 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1523 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1524 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1525 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1526 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1527 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1528 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1529 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1530 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1531 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1532 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1533 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1534 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1535 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1536 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1537 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1538 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1539 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1540 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1541 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1542 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1543 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1544 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1545 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1546 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1547 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1548, line: 81, baseType: !18, size: 32, elements: !1549)
!1548 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1549 = !{!1550, !1551, !1552}
!1550 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1551 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1552 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1553 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1454, line: 298, baseType: !18, size: 32, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559}
!1555 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1556 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1557 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1558 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1559 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1560 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1561, line: 51, baseType: !18, size: 32, elements: !1562)
!1561 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1562 = !{!1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571}
!1563 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1564 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1565 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1566 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1567 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1568 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1569 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1570 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1571 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1572 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1573, line: 110, baseType: !7, size: 32, elements: !1574)
!1573 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1575 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1576 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1577 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1578 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1579 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1580 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1581 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1582 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1561, line: 73, baseType: !18, size: 32, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1590, !1591}
!1585 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1586 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1587 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1588 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1589 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1590 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1591 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1592 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1561, line: 83, baseType: !18, size: 32, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1594 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1595 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1596 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1597 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1598 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1599 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1600 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1601 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1561, line: 98, baseType: !18, size: 32, elements: !1602)
!1602 = !{!1603, !1604}
!1603 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1604 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1605 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1548, line: 76, baseType: !18, size: 32, elements: !1606)
!1606 = !{!1607, !1608}
!1607 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1608 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1609 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1548, line: 208, baseType: !18, size: 32, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622}
!1611 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1612 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1613 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1614 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1615 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1616 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1617 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1618 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1619 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1620 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1621 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1622 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1623 = !{!61, !1395, !1426, !969, !1624, !1732, !1754, !88, !1760, !465}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1548, line: 193, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1548, line: 134, size: 1824, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1637, !1643, !1647, !1655, !1656, !1663, !1664, !1665, !1666, !1674, !1677, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1726, !1727, !1731}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1626, file: !1548, line: 136, baseType: !61, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1626, file: !1548, line: 137, baseType: !969, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1626, file: !1548, line: 138, baseType: !1631, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1632, line: 56, baseType: !1633)
!1632 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 54, size: 8, elements: !1635)
!1635 = !{!1636}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1634, file: !1632, line: 55, baseType: !463, size: 8)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1626, file: !1548, line: 139, baseType: !1638, size: 32, offset: 96)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1632, line: 46, baseType: !1639)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 44, size: 8, elements: !1641)
!1641 = !{!1642}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1640, file: !1632, line: 45, baseType: !463, size: 8)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1626, file: !1548, line: 140, baseType: !1644, size: 8, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1645)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1646)
!1646 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1626, file: !1548, line: 143, baseType: !1648, size: 32, offset: 160)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1650, line: 146, baseType: !1651)
!1650 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 143, size: 64, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1651, file: !1650, line: 144, baseType: !61, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1651, file: !1650, line: 145, baseType: !61, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1626, file: !1548, line: 144, baseType: !969, size: 32, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1626, file: !1548, line: 145, baseType: !1657, size: 32, offset: 224)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1650, line: 152, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 149, size: 64, elements: !1660)
!1660 = !{!1661, !1662}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1659, file: !1650, line: 150, baseType: !61, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1659, file: !1650, line: 151, baseType: !61, size: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1626, file: !1548, line: 146, baseType: !969, size: 32, offset: 256)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1626, file: !1548, line: 147, baseType: !61, size: 32, offset: 288)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1626, file: !1548, line: 148, baseType: !969, size: 32, offset: 320)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1626, file: !1548, line: 151, baseType: !1667, size: 1024, offset: 352)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 1024, elements: !1673)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1650, line: 170, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 167, size: 64, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1669, file: !1650, line: 168, baseType: !61, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1669, file: !1650, line: 169, baseType: !61, size: 32, offset: 32)
!1673 = !{!961, !481}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1626, file: !1548, line: 155, baseType: !1675, size: 32, offset: 1376)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1561, line: 120, baseType: !463)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1626, file: !1548, line: 156, baseType: !1678, size: 32, offset: 1408)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1548, line: 124, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1548, line: 90, size: 200, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1680, file: !1548, line: 91, baseType: !463, size: 8)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1680, file: !1548, line: 92, baseType: !463, size: 8, offset: 8)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1680, file: !1548, line: 94, baseType: !463, size: 8, offset: 16)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1680, file: !1548, line: 95, baseType: !463, size: 8, offset: 24)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1680, file: !1548, line: 96, baseType: !463, size: 8, offset: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1680, file: !1548, line: 98, baseType: !463, size: 8, offset: 40)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1680, file: !1548, line: 99, baseType: !463, size: 8, offset: 48)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1680, file: !1548, line: 100, baseType: !463, size: 8, offset: 56)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1680, file: !1548, line: 101, baseType: !463, size: 8, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1680, file: !1548, line: 103, baseType: !463, size: 8, offset: 72)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1680, file: !1548, line: 104, baseType: !463, size: 8, offset: 80)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1680, file: !1548, line: 106, baseType: !463, size: 8, offset: 88)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1680, file: !1548, line: 107, baseType: !463, size: 8, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1680, file: !1548, line: 108, baseType: !463, size: 8, offset: 104)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1680, file: !1548, line: 109, baseType: !463, size: 8, offset: 112)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1680, file: !1548, line: 110, baseType: !463, size: 8, offset: 120)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1680, file: !1548, line: 111, baseType: !463, size: 8, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1680, file: !1548, line: 112, baseType: !463, size: 8, offset: 136)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1680, file: !1548, line: 114, baseType: !463, size: 8, offset: 144)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1680, file: !1548, line: 115, baseType: !463, size: 8, offset: 152)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1680, file: !1548, line: 118, baseType: !463, size: 8, offset: 160)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1680, file: !1548, line: 119, baseType: !463, size: 8, offset: 168)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1680, file: !1548, line: 120, baseType: !463, size: 8, offset: 176)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1680, file: !1548, line: 121, baseType: !463, size: 8, offset: 184)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1680, file: !1548, line: 122, baseType: !463, size: 8, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1626, file: !1548, line: 157, baseType: !61, size: 32, offset: 1440)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1626, file: !1548, line: 158, baseType: !1208, size: 16, offset: 1472)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1626, file: !1548, line: 159, baseType: !1208, size: 16, offset: 1488)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1626, file: !1548, line: 163, baseType: !1208, size: 16, offset: 1504)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1626, file: !1548, line: 164, baseType: !1208, size: 16, offset: 1520)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1626, file: !1548, line: 167, baseType: !463, size: 8, offset: 1536)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1626, file: !1548, line: 168, baseType: !1714, size: 24, offset: 1544)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 24, elements: !1155)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1626, file: !1548, line: 169, baseType: !463, size: 8, offset: 1568)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1626, file: !1548, line: 170, baseType: !463, size: 8, offset: 1576)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1626, file: !1548, line: 173, baseType: !1208, size: 16, offset: 1584)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1626, file: !1548, line: 174, baseType: !61, size: 32, offset: 1600)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1626, file: !1548, line: 175, baseType: !61, size: 32, offset: 1632)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1626, file: !1548, line: 178, baseType: !91, size: 8, offset: 1664)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1626, file: !1548, line: 179, baseType: !91, size: 8, offset: 1672)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1626, file: !1548, line: 182, baseType: !1723, size: 32, offset: 1696)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!7, !88}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1626, file: !1548, line: 186, baseType: !1723, size: 32, offset: 1728)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1626, file: !1548, line: 187, baseType: !1728, size: 32, offset: 1760)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!7, !88, !61, !88, !61}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1626, file: !1548, line: 188, baseType: !1728, size: 32, offset: 1792)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1734, file: !56, line: 2759, baseType: !60, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1734, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1734, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1734, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1734, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1734, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1734, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1734, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1734, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1734, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1734, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1734, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1734, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1734, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1734, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1734, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1734, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1734, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1756, file: !56, line: 2799, baseType: !60, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1756, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!1761 = !{!1451, !1762, !1764, !1766, !1771}
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1453, file: !1454, line: 382, type: !61, isLocal: false, isDefinition: true)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1453, file: !1454, line: 383, type: !61, isLocal: false, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1453, file: !1454, line: 369, type: !1768, isLocal: true, isDefinition: true)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1024, elements: !1769)
!1769 = !{!1770}
!1770 = !DISubrange(count: 128)
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1453, file: !1454, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1773 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1776, file: !1830, line: 35, type: !1831, isLocal: false, isDefinition: true)
!1776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1777, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1778, retainedTypes: !424, globals: !1824, splitDebugInlining: false, nameTableKind: None)
!1777 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1778 = !{!1779}
!1779 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1780, line: 77, baseType: !18, size: 32, elements: !1781)
!1780 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823}
!1782 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1783 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1784 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1785 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1786 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1787 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1788 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1789 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1790 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1791 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1792 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1793 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1794 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1795 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1796 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1797 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1798 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1799 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1800 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1801 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1802 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1803 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1804 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1805 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1806 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1807 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1808 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1809 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1810 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1811 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1812 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1813 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1814 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1815 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1816 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1817 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1818 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1819 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1820 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1821 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1822 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1823 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1824 = !{!1774, !1825, !1828}
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1776, file: !1777, line: 96, type: !1827, isLocal: true, isDefinition: true)
!1827 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1776, file: !1777, line: 94, type: !1827, isLocal: true, isDefinition: true)
!1830 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1777, line: 54, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1777, line: 51, size: 576, elements: !1834)
!1834 = !{!1835, !1845}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1833, file: !1777, line: 52, baseType: !1836, size: 96)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1780, line: 152, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1780, line: 144, size: 96, elements: !1838)
!1838 = !{!1839, !1841, !1843}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1837, file: !1780, line: 145, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1780, line: 61, baseType: !18)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1837, file: !1780, line: 146, baseType: !1842, size: 16, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1780, line: 62, baseType: !1210)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1837, file: !1780, line: 150, baseType: !1844, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1780, line: 127, baseType: !1779)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1833, file: !1777, line: 53, baseType: !1846, size: 480, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1847, line: 107, baseType: !1848)
!1847 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 103, size: 480, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1848, file: !1847, line: 104, baseType: !18, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1848, file: !1847, line: 105, baseType: !18, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1848, file: !1847, line: 106, baseType: !1853, size: 400, offset: 64)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1854, size: 400, elements: !1300)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1847, line: 100, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 92, size: 80, elements: !1856)
!1856 = !{!1857, !1858, !1859}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1855, file: !1847, line: 93, baseType: !463, size: 8)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1855, file: !1847, line: 94, baseType: !463, size: 8, offset: 8)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1855, file: !1847, line: 96, baseType: !1860, size: 64, offset: 16)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 64, elements: !960)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1863, file: !1866, line: 96, type: !1867, isLocal: false, isDefinition: true)
!1863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1865, splitDebugInlining: false, nameTableKind: None)
!1864 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1865 = !{!1861}
!1866 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 152, elements: !1870)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1870 = !{!1871}
!1871 = !DISubrange(count: 19)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1874, file: !1875, line: 168, type: !2225, isLocal: false, isDefinition: true)
!1874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1876, retainedTypes: !1887, globals: !1896, splitDebugInlining: false, nameTableKind: None)
!1875 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1876 = !{!1877, !1456, !1779}
!1877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1878, line: 49, baseType: !18, size: 32, elements: !1879)
!1878 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!1879 = !{!1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1880 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1881 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1882 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1883 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1884 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1885 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1886 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1887 = !{!1888, !61, !1890}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1457, line: 47, baseType: !465)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1650, line: 146, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 143, size: 64, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1892, file: !1650, line: 144, baseType: !61, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1892, file: !1650, line: 145, baseType: !61, size: 32, offset: 32)
!1896 = !{!1872, !1897, !1899, !1909, !2046, !2048, !2050, !2052, !2054, !2059, !2062, !2071, !2073, !2075, !2083, !2085, !2087, !2170, !2173, !2175, !2177, !2188, !2190, !2203}
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1874, file: !1875, line: 94, type: !1335, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1874, file: !1875, line: 95, type: !1901, isLocal: false, isDefinition: true)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1847, line: 100, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 92, size: 80, elements: !1905)
!1905 = !{!1906, !1907, !1908}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1904, file: !1847, line: 93, baseType: !463, size: 8)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1904, file: !1847, line: 94, baseType: !463, size: 8, offset: 8)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1904, file: !1847, line: 96, baseType: !1860, size: 64, offset: 16)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1874, file: !1875, line: 127, type: !1911, isLocal: false, isDefinition: true)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1650, line: 317, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1650, line: 237, size: 2720, elements: !1913)
!1913 = !{!1914, !1915, !1967, !1968, !1971, !1972, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2013, !2014, !2015, !2020, !2021, !2022, !2023, !2024, !2028, !2032, !2039, !2040, !2041, !2042, !2043, !2044, !2045}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1912, file: !1650, line: 238, baseType: !61, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1912, file: !1650, line: 239, baseType: !1916, size: 32, offset: 32)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1650, line: 121, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 105, size: 480, elements: !1919)
!1919 = !{!1920, !1924, !1925, !1929, !1933, !1937, !1938, !1942, !1943, !1944, !1945, !1950, !1955, !1959, !1963}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1918, file: !1650, line: 106, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!7, !88, !88}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1918, file: !1650, line: 107, baseType: !1723, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1918, file: !1650, line: 108, baseType: !1926, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!88, !88, !61, !61}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1918, file: !1650, line: 109, baseType: !1930, size: 32, offset: 96)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!7, !88, !61}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1918, file: !1650, line: 110, baseType: !1934, size: 32, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!7, !88, !88, !88, !61}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1918, file: !1650, line: 111, baseType: !1930, size: 32, offset: 160)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1918, file: !1650, line: 112, baseType: !1939, size: 32, offset: 192)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!1335, !88, !61}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1918, file: !1650, line: 113, baseType: !1930, size: 32, offset: 224)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1918, file: !1650, line: 114, baseType: !1930, size: 32, offset: 256)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1918, file: !1650, line: 115, baseType: !1930, size: 32, offset: 288)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1918, file: !1650, line: 116, baseType: !1946, size: 32, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!7, !88, !7, !1949, !88, !1949}
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1457, line: 50, baseType: !18)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1918, file: !1650, line: 117, baseType: !1951, size: 32, offset: 352)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!7, !88, !1954}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1918, file: !1650, line: 118, baseType: !1956, size: 32, offset: 384)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!7, !88, !88, !61}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1918, file: !1650, line: 119, baseType: !1960, size: 32, offset: 416)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!91, !88, !61}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1918, file: !1650, line: 120, baseType: !1964, size: 32, offset: 448)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!7, !88, !61, !88}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1912, file: !1650, line: 240, baseType: !88, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1912, file: !1650, line: 241, baseType: !1969, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1457, line: 46, baseType: !1210)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1912, file: !1650, line: 242, baseType: !1969, size: 32, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1912, file: !1650, line: 243, baseType: !1973, size: 928, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1650, line: 99, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 90, size: 928, elements: !1975)
!1975 = !{!1976, !1977, !1979, !1980, !1981, !1982, !1983, !1984}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1974, file: !1650, line: 91, baseType: !61, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1974, file: !1650, line: 92, baseType: !1978, size: 256, offset: 32)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !960)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1974, file: !1650, line: 93, baseType: !1978, size: 256, offset: 288)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1974, file: !1650, line: 94, baseType: !1978, size: 256, offset: 544)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1974, file: !1650, line: 95, baseType: !61, size: 32, offset: 800)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1974, file: !1650, line: 96, baseType: !1970, size: 16, offset: 832)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1974, file: !1650, line: 97, baseType: !61, size: 32, offset: 864)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1974, file: !1650, line: 98, baseType: !61, size: 32, offset: 896)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1912, file: !1650, line: 244, baseType: !1978, size: 256, offset: 1088)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1912, file: !1650, line: 245, baseType: !1978, size: 256, offset: 1344)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1912, file: !1650, line: 246, baseType: !61, size: 32, offset: 1600)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1912, file: !1650, line: 247, baseType: !61, size: 32, offset: 1632)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1912, file: !1650, line: 248, baseType: !61, size: 32, offset: 1664)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1912, file: !1650, line: 249, baseType: !61, size: 32, offset: 1696)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1912, file: !1650, line: 250, baseType: !61, size: 32, offset: 1728)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1912, file: !1650, line: 252, baseType: !61, size: 32, offset: 1760)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1912, file: !1650, line: 255, baseType: !61, size: 32, offset: 1792)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1912, file: !1650, line: 256, baseType: !61, size: 32, offset: 1824)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1912, file: !1650, line: 257, baseType: !61, size: 32, offset: 1856)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1912, file: !1650, line: 261, baseType: !61, size: 32, offset: 1888)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1912, file: !1650, line: 262, baseType: !61, size: 32, offset: 1920)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1912, file: !1650, line: 263, baseType: !61, size: 32, offset: 1952)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1912, file: !1650, line: 264, baseType: !61, size: 32, offset: 1984)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1912, file: !1650, line: 265, baseType: !61, size: 32, offset: 2016)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1912, file: !1650, line: 266, baseType: !61, size: 32, offset: 2048)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1912, file: !1650, line: 267, baseType: !61, size: 32, offset: 2080)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1912, file: !1650, line: 268, baseType: !61, size: 32, offset: 2112)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1912, file: !1650, line: 270, baseType: !61, size: 32, offset: 2144)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1912, file: !1650, line: 271, baseType: !61, size: 32, offset: 2176)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1912, file: !1650, line: 272, baseType: !2007, size: 32, offset: 2208)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1650, line: 229, baseType: !2009)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 226, size: 64, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !2009, file: !1650, line: 227, baseType: !61, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !2009, file: !1650, line: 228, baseType: !61, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1912, file: !1650, line: 273, baseType: !1888, size: 32, offset: 2240)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1912, file: !1650, line: 274, baseType: !1888, size: 32, offset: 2272)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1912, file: !1650, line: 276, baseType: !2016, size: 32, offset: 2304)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{null, !2019}
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1912, file: !1650, line: 278, baseType: !61, size: 32, offset: 2336)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1912, file: !1650, line: 280, baseType: !2016, size: 32, offset: 2368)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1912, file: !1650, line: 281, baseType: !2016, size: 32, offset: 2400)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1912, file: !1650, line: 283, baseType: !61, size: 32, offset: 2432)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1912, file: !1650, line: 284, baseType: !2025, size: 32, offset: 2464)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!61, !2019}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1912, file: !1650, line: 285, baseType: !2029, size: 32, offset: 2496)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!61, !2019, !61, !61}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1912, file: !1650, line: 293, baseType: !2033, size: 32, offset: 2528)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1650, line: 162, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 159, size: 64, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2035, file: !1650, line: 160, baseType: !61, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !2035, file: !1650, line: 161, baseType: !61, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1912, file: !1650, line: 295, baseType: !61, size: 32, offset: 2560)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1912, file: !1650, line: 296, baseType: !61, size: 32, offset: 2592)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1912, file: !1650, line: 297, baseType: !61, size: 32, offset: 2624)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1912, file: !1650, line: 298, baseType: !1970, size: 16, offset: 2656)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1912, file: !1650, line: 302, baseType: !1970, size: 16, offset: 2672)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1912, file: !1650, line: 310, baseType: !91, size: 8, offset: 2688)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1912, file: !1650, line: 313, baseType: !91, size: 8, offset: 2696)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1874, file: !1875, line: 129, type: !61, isLocal: false, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1874, file: !1875, line: 130, type: !61, isLocal: false, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1874, file: !1875, line: 131, type: !61, isLocal: false, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1874, file: !1875, line: 132, type: !1208, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1874, file: !1875, line: 136, type: !2056, isLocal: false, isDefinition: true)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 4096, elements: !2057)
!2057 = !{!2058}
!2058 = !DISubrange(count: 512)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1874, file: !1875, line: 146, type: !2061, isLocal: true, isDefinition: true)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 512, elements: !960)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1874, file: !1875, line: 152, type: !2064, isLocal: true, isDefinition: true)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1847, line: 116, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 113, size: 64, elements: !2068)
!2068 = !{!2069, !2070}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !2067, file: !1847, line: 114, baseType: !61, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !2067, file: !1847, line: 115, baseType: !61, size: 32, offset: 32)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1874, file: !1875, line: 156, type: !61, isLocal: false, isDefinition: true)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1874, file: !1875, line: 157, type: !61, isLocal: false, isDefinition: true)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1874, file: !1875, line: 160, type: !2077, isLocal: true, isDefinition: true)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 512, elements: !960)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1650, line: 152, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 149, size: 64, elements: !2080)
!2080 = !{!2081, !2082}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2079, file: !1650, line: 150, baseType: !61, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2079, file: !1650, line: 151, baseType: !61, size: 32, offset: 32)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1874, file: !1875, line: 173, type: !61, isLocal: false, isDefinition: true)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1874, file: !1875, line: 176, type: !1917, isLocal: false, isDefinition: true)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1874, file: !1875, line: 177, type: !2089, isLocal: false, isDefinition: true)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1548, line: 193, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1548, line: 134, size: 1824, elements: !2091)
!2091 = !{!2092, !2093, !2094, !2100, !2106, !2107, !2108, !2109, !2111, !2112, !2113, !2114, !2121, !2122, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2090, file: !1548, line: 136, baseType: !61, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2090, file: !1548, line: 137, baseType: !969, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2090, file: !1548, line: 138, baseType: !2095, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1632, line: 56, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 54, size: 8, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2097, file: !1632, line: 55, baseType: !463, size: 8)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2090, file: !1548, line: 139, baseType: !2101, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1632, line: 46, baseType: !2102)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 44, size: 8, elements: !2104)
!2104 = !{!2105}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2103, file: !1632, line: 45, baseType: !463, size: 8)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2090, file: !1548, line: 140, baseType: !1644, size: 8, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2090, file: !1548, line: 143, baseType: !1890, size: 32, offset: 160)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2090, file: !1548, line: 144, baseType: !969, size: 32, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2090, file: !1548, line: 145, baseType: !2110, size: 32, offset: 224)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2090, file: !1548, line: 146, baseType: !969, size: 32, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2090, file: !1548, line: 147, baseType: !61, size: 32, offset: 288)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2090, file: !1548, line: 148, baseType: !969, size: 32, offset: 320)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2090, file: !1548, line: 151, baseType: !2115, size: 1024, offset: 352)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2116, size: 1024, elements: !1673)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1650, line: 170, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 167, size: 64, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2117, file: !1650, line: 168, baseType: !61, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2117, file: !1650, line: 169, baseType: !61, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !2090, file: !1548, line: 155, baseType: !1675, size: 32, offset: 1376)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !2090, file: !1548, line: 156, baseType: !2123, size: 32, offset: 1408)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1548, line: 124, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1548, line: 90, size: 200, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !2125, file: !1548, line: 91, baseType: !463, size: 8)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !2125, file: !1548, line: 92, baseType: !463, size: 8, offset: 8)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !2125, file: !1548, line: 94, baseType: !463, size: 8, offset: 16)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !2125, file: !1548, line: 95, baseType: !463, size: 8, offset: 24)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !2125, file: !1548, line: 96, baseType: !463, size: 8, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !2125, file: !1548, line: 98, baseType: !463, size: 8, offset: 40)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !2125, file: !1548, line: 99, baseType: !463, size: 8, offset: 48)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !2125, file: !1548, line: 100, baseType: !463, size: 8, offset: 56)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !2125, file: !1548, line: 101, baseType: !463, size: 8, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !2125, file: !1548, line: 103, baseType: !463, size: 8, offset: 72)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !2125, file: !1548, line: 104, baseType: !463, size: 8, offset: 80)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !2125, file: !1548, line: 106, baseType: !463, size: 8, offset: 88)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !2125, file: !1548, line: 107, baseType: !463, size: 8, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !2125, file: !1548, line: 108, baseType: !463, size: 8, offset: 104)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !2125, file: !1548, line: 109, baseType: !463, size: 8, offset: 112)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !2125, file: !1548, line: 110, baseType: !463, size: 8, offset: 120)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !2125, file: !1548, line: 111, baseType: !463, size: 8, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !2125, file: !1548, line: 112, baseType: !463, size: 8, offset: 136)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !2125, file: !1548, line: 114, baseType: !463, size: 8, offset: 144)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !2125, file: !1548, line: 115, baseType: !463, size: 8, offset: 152)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !2125, file: !1548, line: 118, baseType: !463, size: 8, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2125, file: !1548, line: 119, baseType: !463, size: 8, offset: 168)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !2125, file: !1548, line: 120, baseType: !463, size: 8, offset: 176)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !2125, file: !1548, line: 121, baseType: !463, size: 8, offset: 184)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2125, file: !1548, line: 122, baseType: !463, size: 8, offset: 192)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !2090, file: !1548, line: 157, baseType: !61, size: 32, offset: 1440)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !2090, file: !1548, line: 158, baseType: !1208, size: 16, offset: 1472)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !2090, file: !1548, line: 159, baseType: !1208, size: 16, offset: 1488)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !2090, file: !1548, line: 163, baseType: !1208, size: 16, offset: 1504)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !2090, file: !1548, line: 164, baseType: !1208, size: 16, offset: 1520)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !2090, file: !1548, line: 167, baseType: !463, size: 8, offset: 1536)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !2090, file: !1548, line: 168, baseType: !1714, size: 24, offset: 1544)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !2090, file: !1548, line: 169, baseType: !463, size: 8, offset: 1568)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !2090, file: !1548, line: 170, baseType: !463, size: 8, offset: 1576)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !2090, file: !1548, line: 173, baseType: !1208, size: 16, offset: 1584)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !2090, file: !1548, line: 174, baseType: !61, size: 32, offset: 1600)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !2090, file: !1548, line: 175, baseType: !61, size: 32, offset: 1632)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !2090, file: !1548, line: 178, baseType: !91, size: 8, offset: 1664)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !2090, file: !1548, line: 179, baseType: !91, size: 8, offset: 1672)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !2090, file: !1548, line: 182, baseType: !1723, size: 32, offset: 1696)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2090, file: !1548, line: 186, baseType: !1723, size: 32, offset: 1728)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2090, file: !1548, line: 187, baseType: !1728, size: 32, offset: 1760)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !2090, file: !1548, line: 188, baseType: !1728, size: 32, offset: 1792)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1874, file: !1875, line: 178, type: !2172, isLocal: false, isDefinition: true)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 64, elements: !960)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1874, file: !1875, line: 179, type: !2124, isLocal: false, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1874, file: !1875, line: 204, type: !2061, isLocal: true, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1874, file: !1875, line: 205, type: !2179, isLocal: false, isDefinition: true)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2180, line: 93, baseType: !2181)
!2180 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2180, line: 83, size: 1056, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !2181, file: !2180, line: 84, baseType: !61, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2181, file: !2180, line: 85, baseType: !1916, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2181, file: !2180, line: 86, baseType: !88, size: 32, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2181, file: !2180, line: 87, baseType: !1973, size: 928, offset: 96)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !2181, file: !2180, line: 92, baseType: !91, size: 8, offset: 1024)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1874, file: !1875, line: 208, type: !2089, isLocal: false, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "nor_list", scope: !1874, file: !1875, line: 114, type: !2192, isLocal: true, isDefinition: true)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2194)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1847, line: 125, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 119, size: 1088, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2202}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !2195, file: !1847, line: 120, baseType: !1208, size: 16)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !2195, file: !1847, line: 121, baseType: !1208, size: 16, offset: 16)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !2195, file: !1847, line: 122, baseType: !61, size: 32, offset: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !2195, file: !1847, line: 123, baseType: !2201, size: 512, offset: 64)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 512, elements: !960)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2195, file: !1847, line: 124, baseType: !2077, size: 512, offset: 576)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1874, file: !2205, line: 42, type: !2206, isLocal: true, isDefinition: true)
!2205 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2207)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1875, line: 66, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1875, line: 63, size: 5600, elements: !2209)
!2209 = !{!2210, !2217}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2208, file: !1875, line: 64, baseType: !2211, size: 96)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1780, line: 152, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1780, line: 144, size: 96, elements: !2213)
!2213 = !{!2214, !2215, !2216}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2212, file: !1780, line: 145, baseType: !1840, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2212, file: !1780, line: 146, baseType: !1842, size: 16, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2212, file: !1780, line: 150, baseType: !1844, size: 32, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2208, file: !1875, line: 65, baseType: !2218, size: 5504, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1847, line: 132, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 128, size: 5504, elements: !2220)
!2220 = !{!2221, !2222, !2223}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2219, file: !1847, line: 129, baseType: !18, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2219, file: !1847, line: 130, baseType: !18, size: 32, offset: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2219, file: !1847, line: 131, baseType: !2224, size: 5440, offset: 64)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2194, size: 5440, elements: !1300)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1632, line: 79, baseType: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 77, size: 8, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2227, file: !1632, line: 78, baseType: !463, size: 8)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2231 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2232, file: !2233, line: 82, type: !7, isLocal: true, isDefinition: true)
!2232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2233, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2234, retainedTypes: !2240, globals: !2285, splitDebugInlining: false, nameTableKind: None)
!2233 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2234 = !{!1572, !1456, !2235}
!2235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1573, line: 123, baseType: !18, size: 32, elements: !2236)
!2236 = !{!2237, !2238, !2239}
!2237 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2238 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2239 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2240 = !{!61, !2241, !88, !969}
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1650, line: 190, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 173, size: 1376, elements: !2244)
!2244 = !{!2245, !2246, !2247, !2253, !2259, !2260, !2267, !2268, !2275, !2276, !2277, !2278}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2243, file: !1650, line: 174, baseType: !61, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2243, file: !1650, line: 175, baseType: !1888, size: 32, offset: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2243, file: !1650, line: 176, baseType: !2248, size: 32, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1632, line: 56, baseType: !2249)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 54, size: 8, elements: !2251)
!2251 = !{!2252}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2250, file: !1632, line: 55, baseType: !463, size: 8)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2243, file: !1650, line: 177, baseType: !2254, size: 32, offset: 96)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1632, line: 46, baseType: !2255)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 44, size: 8, elements: !2257)
!2257 = !{!2258}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2256, file: !1632, line: 45, baseType: !463, size: 8)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2243, file: !1650, line: 178, baseType: !1644, size: 8, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2243, file: !1650, line: 180, baseType: !2261, size: 32, offset: 160)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1650, line: 146, baseType: !2263)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 143, size: 64, elements: !2264)
!2264 = !{!2265, !2266}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2263, file: !1650, line: 144, baseType: !61, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2263, file: !1650, line: 145, baseType: !61, size: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2243, file: !1650, line: 181, baseType: !1888, size: 32, offset: 192)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2243, file: !1650, line: 182, baseType: !2269, size: 32, offset: 224)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1650, line: 152, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 149, size: 64, elements: !2272)
!2272 = !{!2273, !2274}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2271, file: !1650, line: 150, baseType: !61, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2271, file: !1650, line: 151, baseType: !61, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2243, file: !1650, line: 183, baseType: !1888, size: 32, offset: 256)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2243, file: !1650, line: 184, baseType: !61, size: 32, offset: 288)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2243, file: !1650, line: 185, baseType: !1888, size: 32, offset: 320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2243, file: !1650, line: 188, baseType: !2279, size: 1024, offset: 352)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2280, size: 1024, elements: !1673)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1650, line: 170, baseType: !2281)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 167, size: 64, elements: !2282)
!2282 = !{!2283, !2284}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2281, file: !1650, line: 168, baseType: !61, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2281, file: !1650, line: 169, baseType: !61, size: 32, offset: 32)
!2285 = !{!2286, !2287}
!2286 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2232, file: !2233, line: 432, type: !2289, isLocal: true, isDefinition: true)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1573, line: 119, baseType: !1572)
!2290 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2293, file: !2294, line: 60, type: !61, isLocal: false, isDefinition: true)
!2293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2294, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2295, retainedTypes: !2303, globals: !2304, splitDebugInlining: false, nameTableKind: None)
!2294 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2295 = !{!2296}
!2296 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2297)
!2297 = !{!2298, !2299, !2300, !2301, !2302}
!2298 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2299 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2300 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2301 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2302 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2303 = !{!88, !61}
!2304 = !{!2291, !2305, !2307, !2309, !2311, !2313, !2367, !2369}
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2293, file: !2294, line: 61, type: !61, isLocal: false, isDefinition: true)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2293, file: !2294, line: 107, type: !61, isLocal: false, isDefinition: true)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2293, file: !2294, line: 132, type: !91, isLocal: false, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2293, file: !2294, line: 133, type: !91, isLocal: false, isDefinition: true)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "replaced", scope: !2315, file: !2294, line: 139, type: !61, isLocal: true, isDefinition: true)
!2315 = distinct !DISubprogram(name: "LookupAddress", scope: !2294, file: !2294, line: 135, type: !2316, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2318)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!61, !88, !61}
!2318 = !{!2319, !2320, !2321, !2366}
!2319 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2315, file: !2294, line: 135, type: !88)
!2320 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2315, file: !2294, line: 135, type: !61)
!2321 = !DILocalVariable(name: "D", scope: !2315, file: !2294, line: 137, type: !2322)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1650, line: 190, baseType: !2324)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 173, size: 1376, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2334, !2340, !2341, !2348, !2349, !2356, !2357, !2358, !2359}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2324, file: !1650, line: 174, baseType: !61, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2324, file: !1650, line: 175, baseType: !1888, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2324, file: !1650, line: 176, baseType: !2329, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1632, line: 56, baseType: !2330)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 54, size: 8, elements: !2332)
!2332 = !{!2333}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2331, file: !1632, line: 55, baseType: !463, size: 8)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2324, file: !1650, line: 177, baseType: !2335, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1632, line: 46, baseType: !2336)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 44, size: 8, elements: !2338)
!2338 = !{!2339}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2337, file: !1632, line: 45, baseType: !463, size: 8)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2324, file: !1650, line: 178, baseType: !1644, size: 8, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2324, file: !1650, line: 180, baseType: !2342, size: 32, offset: 160)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1650, line: 146, baseType: !2344)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 143, size: 64, elements: !2345)
!2345 = !{!2346, !2347}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2344, file: !1650, line: 144, baseType: !61, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2344, file: !1650, line: 145, baseType: !61, size: 32, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2324, file: !1650, line: 181, baseType: !1888, size: 32, offset: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2324, file: !1650, line: 182, baseType: !2350, size: 32, offset: 224)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1650, line: 152, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 149, size: 64, elements: !2353)
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2352, file: !1650, line: 150, baseType: !61, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2352, file: !1650, line: 151, baseType: !61, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2324, file: !1650, line: 183, baseType: !1888, size: 32, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2324, file: !1650, line: 184, baseType: !61, size: 32, offset: 288)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2324, file: !1650, line: 185, baseType: !1888, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2324, file: !1650, line: 188, baseType: !2360, size: 1024, offset: 352)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2361, size: 1024, elements: !1673)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1650, line: 170, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 167, size: 64, elements: !2363)
!2363 = !{!2364, !2365}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2362, file: !1650, line: 168, baseType: !61, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2362, file: !1650, line: 169, baseType: !61, size: 32, offset: 32)
!2366 = !DILocalVariable(name: "addr", scope: !2315, file: !2294, line: 138, type: !61)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2315, file: !2294, line: 140, type: !61, isLocal: true, isDefinition: true)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2315, file: !2294, line: 141, type: !61, isLocal: true, isDefinition: true)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2373, file: !2374, line: 44, type: !2520, isLocal: false, isDefinition: true)
!2373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2375, retainedTypes: !2381, globals: !2382, splitDebugInlining: false, nameTableKind: None)
!2374 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2375 = !{!2376}
!2376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2377, line: 40, baseType: !18, size: 32, elements: !2378)
!2377 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2378 = !{!2379, !2380}
!2379 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2380 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2381 = !{!1429}
!2382 = !{!2371, !2383, !2385, !2387, !2389, !2490, !2492, !2494, !2496, !2498, !2500, !2502, !2504, !2506, !2508, !2510, !2512, !2514, !2516, !2518}
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2373, file: !2374, line: 65, type: !61, isLocal: false, isDefinition: true)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2373, file: !2374, line: 66, type: !61, isLocal: false, isDefinition: true)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2373, file: !2374, line: 67, type: !61, isLocal: false, isDefinition: true)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "emi_register", scope: !2373, file: !2374, line: 83, type: !2391, isLocal: false, isDefinition: true)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2393)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2394)
!2394 = !{!2395, !2399, !2400, !2401, !2402, !2406, !2407, !2409, !2410, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2393, file: !56, line: 2448, baseType: !2396, size: 768)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 768, elements: !2397)
!2397 = !{!2398}
!2398 = !DISubrange(count: 96)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2393, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2393, file: !56, line: 2450, baseType: !1284, size: 96, offset: 800)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2393, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2393, file: !56, line: 2452, baseType: !2403, size: 160, offset: 928)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 160, elements: !2404)
!2404 = !{!2405}
!2405 = !DISubrange(count: 20)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2393, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2393, file: !56, line: 2454, baseType: !2408, size: 32, offset: 1120)
!2408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 32, elements: !706)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2393, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2393, file: !56, line: 2456, baseType: !2411, size: 480, offset: 1184)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 480, elements: !2412)
!2412 = !{!2413}
!2413 = !DISubrange(count: 60)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2393, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2393, file: !56, line: 2458, baseType: !2408, size: 32, offset: 1696)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2393, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2393, file: !56, line: 2460, baseType: !2408, size: 32, offset: 1760)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2393, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2393, file: !56, line: 2462, baseType: !2403, size: 160, offset: 1824)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2393, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2393, file: !56, line: 2464, baseType: !2408, size: 32, offset: 2016)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2393, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2393, file: !56, line: 2466, baseType: !2408, size: 32, offset: 2080)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2393, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2393, file: !56, line: 2468, baseType: !2408, size: 32, offset: 2144)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2393, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2393, file: !56, line: 2470, baseType: !2428, size: 224, offset: 2208)
!2428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 224, elements: !2429)
!2429 = !{!2430}
!2430 = !DISubrange(count: 28)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2393, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2393, file: !56, line: 2472, baseType: !2408, size: 32, offset: 2464)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2393, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2393, file: !56, line: 2474, baseType: !1284, size: 96, offset: 2528)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2393, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2393, file: !56, line: 2476, baseType: !2408, size: 32, offset: 2656)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2393, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2393, file: !56, line: 2478, baseType: !2408, size: 32, offset: 2720)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2393, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2393, file: !56, line: 2480, baseType: !2408, size: 32, offset: 2784)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2393, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2393, file: !56, line: 2482, baseType: !1284, size: 96, offset: 2848)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2393, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2393, file: !56, line: 2484, baseType: !2408, size: 32, offset: 2976)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2393, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2393, file: !56, line: 2486, baseType: !2408, size: 32, offset: 3040)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2393, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2393, file: !56, line: 2488, baseType: !2403, size: 160, offset: 3104)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2393, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2393, file: !56, line: 2490, baseType: !2408, size: 32, offset: 3296)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2393, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2393, file: !56, line: 2492, baseType: !2453, size: 736, offset: 3360)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 736, elements: !2454)
!2454 = !{!2455}
!2455 = !DISubrange(count: 92)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2393, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2393, file: !56, line: 2494, baseType: !2408, size: 32, offset: 4128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2393, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2393, file: !56, line: 2496, baseType: !2408, size: 32, offset: 4192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2393, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2393, file: !56, line: 2498, baseType: !2408, size: 32, offset: 4256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2393, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2393, file: !56, line: 2500, baseType: !2408, size: 32, offset: 4320)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2393, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2393, file: !56, line: 2502, baseType: !2408, size: 32, offset: 4384)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2393, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2393, file: !56, line: 2504, baseType: !2408, size: 32, offset: 4448)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2393, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2393, file: !56, line: 2506, baseType: !2408, size: 32, offset: 4512)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2393, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2393, file: !56, line: 2508, baseType: !2408, size: 32, offset: 4576)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2393, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2393, file: !56, line: 2510, baseType: !2411, size: 480, offset: 4640)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2393, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2393, file: !56, line: 2512, baseType: !2476, size: 992, offset: 5152)
!2476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 992, elements: !2477)
!2477 = !{!2478}
!2478 = !DISubrange(count: 124)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2393, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2393, file: !56, line: 2514, baseType: !2408, size: 32, offset: 6176)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2393, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2393, file: !56, line: 2516, baseType: !2408, size: 32, offset: 6240)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2393, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2393, file: !56, line: 2518, baseType: !2408, size: 32, offset: 6304)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2393, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2393, file: !56, line: 2520, baseType: !2403, size: 160, offset: 6368)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2393, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2393, file: !56, line: 2522, baseType: !2403, size: 160, offset: 6560)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2393, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2490 = !DIGlobalVariableExpression(var: !2491, expr: !DIExpression())
!2491 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2373, file: !2374, line: 485, type: !60, isLocal: false, isDefinition: true)
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2373, file: !2374, line: 68, type: !61, isLocal: false, isDefinition: true)
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2373, file: !2374, line: 69, type: !61, isLocal: false, isDefinition: true)
!2496 = !DIGlobalVariableExpression(var: !2497, expr: !DIExpression())
!2497 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2373, file: !2374, line: 70, type: !61, isLocal: false, isDefinition: true)
!2498 = !DIGlobalVariableExpression(var: !2499, expr: !DIExpression())
!2499 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2373, file: !2374, line: 71, type: !61, isLocal: false, isDefinition: true)
!2500 = !DIGlobalVariableExpression(var: !2501, expr: !DIExpression())
!2501 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2373, file: !2374, line: 72, type: !61, isLocal: false, isDefinition: true)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2373, file: !2374, line: 73, type: !61, isLocal: false, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2373, file: !2374, line: 74, type: !61, isLocal: false, isDefinition: true)
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2373, file: !2374, line: 75, type: !61, isLocal: false, isDefinition: true)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2373, file: !2374, line: 76, type: !61, isLocal: false, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2373, file: !2374, line: 77, type: !61, isLocal: false, isDefinition: true)
!2512 = !DIGlobalVariableExpression(var: !2513, expr: !DIExpression())
!2513 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2373, file: !2374, line: 78, type: !61, isLocal: false, isDefinition: true)
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2373, file: !2374, line: 79, type: !61, isLocal: false, isDefinition: true)
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2373, file: !2374, line: 80, type: !61, isLocal: false, isDefinition: true)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2373, file: !2374, line: 84, type: !2392, isLocal: false, isDefinition: true)
!2520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2521, size: 416, elements: !76)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2377, line: 60, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2377, line: 45, size: 416, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2522, file: !2377, line: 46, baseType: !61, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2522, file: !2377, line: 47, baseType: !61, size: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2522, file: !2377, line: 48, baseType: !61, size: 32, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2522, file: !2377, line: 49, baseType: !61, size: 32, offset: 96)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2522, file: !2377, line: 50, baseType: !61, size: 32, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2522, file: !2377, line: 51, baseType: !61, size: 32, offset: 160)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2522, file: !2377, line: 52, baseType: !61, size: 32, offset: 192)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2522, file: !2377, line: 53, baseType: !61, size: 32, offset: 224)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2522, file: !2377, line: 54, baseType: !61, size: 32, offset: 256)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2522, file: !2377, line: 55, baseType: !61, size: 32, offset: 288)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2522, file: !2377, line: 56, baseType: !61, size: 32, offset: 320)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2522, file: !2377, line: 57, baseType: !61, size: 32, offset: 352)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2522, file: !2377, line: 58, baseType: !61, size: 32, offset: 384)
!2537 = !DIGlobalVariableExpression(var: !2538, expr: !DIExpression())
!2538 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2539, file: !2540, line: 48, type: !2548, isLocal: false, isDefinition: true)
!2539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2540, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2541, globals: !2547, splitDebugInlining: false, nameTableKind: None)
!2540 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2541 = !{!2542}
!2542 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1374, line: 100, baseType: !18, size: 32, elements: !2543)
!2543 = !{!2544, !2545, !2546}
!2544 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2545 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2546 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2547 = !{!2537}
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1374, line: 104, baseType: !2542)
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(name: "test_length", scope: !2551, file: !2552, line: 50, type: !60, isLocal: false, isDefinition: true)
!2551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2553, retainedTypes: !424, globals: !2554, splitDebugInlining: false, nameTableKind: None)
!2552 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2553 = !{!870, !895, !911, !917, !921, !594, !1090, !1084, !1076, !1099}
!2554 = !{!2549, !2555, !2557, !2560}
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "i2c_finish_flag", scope: !2551, file: !2552, line: 51, type: !60, isLocal: false, isDefinition: true)
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression())
!2558 = distinct !DIGlobalVariable(name: "i2c_send_data", scope: !2551, file: !2552, line: 52, type: !2559, isLocal: false, isDefinition: true, align: 32)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 256, elements: !330)
!2560 = !DIGlobalVariableExpression(var: !2561, expr: !DIExpression())
!2561 = distinct !DIGlobalVariable(name: "i2c_receive_data", scope: !2551, file: !2552, line: 55, type: !2559, isLocal: false, isDefinition: true, align: 32)
!2562 = !DIGlobalVariableExpression(var: !2563, expr: !DIExpression())
!2563 = distinct !DIGlobalVariable(name: "heap_end", scope: !2564, file: !2565, line: 69, type: !2570, isLocal: true, isDefinition: true)
!2564 = distinct !DISubprogram(name: "_sbrk_r", scope: !2565, file: !2565, line: 66, type: !2566, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !2761)
!2565 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!2568, !2571, !2756}
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2569, line: 123, baseType: !2570)
!2569 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2573, line: 377, size: 1920, elements: !2574)
!2573 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2574 = !{!2575, !2576, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2655, !2676, !2680, !2681, !2682, !2683, !2693, !2706, !2707, !2712, !2730, !2731, !2738, !2739, !2755}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2572, file: !2573, line: 381, baseType: !7, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2572, file: !2573, line: 386, baseType: !2577, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2573, line: 292, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2573, line: 186, size: 832, elements: !2580)
!2580 = !{!2581, !2583, !2584, !2585, !2586, !2587, !2592, !2593, !2594, !2595, !2599, !2604, !2611, !2615, !2616, !2617, !2618, !2620, !2622, !2623, !2624, !2626, !2632, !2645}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2579, file: !2573, line: 187, baseType: !2582, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2579, file: !2573, line: 188, baseType: !7, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2579, file: !2573, line: 189, baseType: !7, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2579, file: !2573, line: 190, baseType: !1827, size: 16, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2579, file: !2573, line: 191, baseType: !1827, size: 16, offset: 112)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2579, file: !2573, line: 192, baseType: !2588, size: 64, offset: 128)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2573, line: 122, size: 64, elements: !2589)
!2589 = !{!2590, !2591}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2588, file: !2573, line: 123, baseType: !2582, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2588, file: !2573, line: 124, baseType: !7, size: 32, offset: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2579, file: !2573, line: 193, baseType: !7, size: 32, offset: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2579, file: !2573, line: 196, baseType: !2571, size: 32, offset: 224)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2579, file: !2573, line: 200, baseType: !88, size: 32, offset: 256)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2579, file: !2573, line: 202, baseType: !2596, size: 32, offset: 288)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!7, !2571, !88, !2570, !7}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2579, file: !2573, line: 204, baseType: !2600, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!7, !2571, !88, !2603, !7}
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2579, file: !2573, line: 207, baseType: !2605, size: 32, offset: 352)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!2608, !2571, !88, !2608, !7}
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2609, line: 116, baseType: !2610)
!2609 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2610 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2579, file: !2573, line: 208, baseType: !2612, size: 32, offset: 384)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!7, !2571, !88}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2579, file: !2573, line: 211, baseType: !2588, size: 64, offset: 416)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2579, file: !2573, line: 212, baseType: !2582, size: 32, offset: 480)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2579, file: !2573, line: 213, baseType: !7, size: 32, offset: 512)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2579, file: !2573, line: 216, baseType: !2619, size: 24, offset: 544)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 24, elements: !1155)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2579, file: !2573, line: 217, baseType: !2621, size: 8, offset: 568)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 8, elements: !76)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2579, file: !2573, line: 220, baseType: !2588, size: 64, offset: 576)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2579, file: !2573, line: 223, baseType: !7, size: 32, offset: 640)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2579, file: !2573, line: 224, baseType: !2625, size: 32, offset: 672)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2609, line: 46, baseType: !2610)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2579, file: !2573, line: 231, baseType: !2627, size: 32, offset: 704)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2573, line: 35, baseType: !2628)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2629, line: 34, baseType: !2630)
!2629 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2629, line: 33, flags: DIFlagFwdDecl)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2579, file: !2573, line: 233, baseType: !2633, size: 64, offset: 736)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2609, line: 170, baseType: !2634)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2609, line: 162, size: 64, elements: !2635)
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2634, file: !2609, line: 164, baseType: !7, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2634, file: !2609, line: 169, baseType: !2638, size: 32, offset: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2634, file: !2609, line: 165, size: 32, elements: !2639)
!2639 = !{!2640, !2643}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2638, file: !2609, line: 167, baseType: !2641, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2642, line: 116, baseType: !7)
!2642 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2638, file: !2609, line: 168, baseType: !2644, size: 32)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 32, elements: !706)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2579, file: !2573, line: 234, baseType: !7, size: 32, offset: 800)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2572, file: !2573, line: 386, baseType: !2577, size: 32, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2572, file: !2573, line: 386, baseType: !2577, size: 32, offset: 96)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2572, file: !2573, line: 388, baseType: !7, size: 32, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2572, file: !2573, line: 390, baseType: !2570, size: 32, offset: 160)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2572, file: !2573, line: 392, baseType: !7, size: 32, offset: 192)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2572, file: !2573, line: 394, baseType: !7, size: 32, offset: 224)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2572, file: !2573, line: 395, baseType: !2653, size: 32, offset: 256)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2573, line: 45, flags: DIFlagFwdDecl)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2572, file: !2573, line: 397, baseType: !2656, size: 32, offset: 288)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2573, line: 349, size: 128, elements: !2658)
!2658 = !{!2659, !2672, !2673, !2674}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2657, file: !2573, line: 352, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2573, line: 52, size: 192, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2661, file: !2573, line: 54, baseType: !2660, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2661, file: !2573, line: 55, baseType: !7, size: 32, offset: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2661, file: !2573, line: 55, baseType: !7, size: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2661, file: !2573, line: 55, baseType: !7, size: 32, offset: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2661, file: !2573, line: 55, baseType: !7, size: 32, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2661, file: !2573, line: 56, baseType: !2669, size: 32, offset: 160)
!2669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2670, size: 32, elements: !76)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2573, line: 22, baseType: !2671)
!2671 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2657, file: !2573, line: 353, baseType: !7, size: 32, offset: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2657, file: !2573, line: 354, baseType: !2660, size: 32, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2657, file: !2573, line: 355, baseType: !2675, size: 32, offset: 96)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2572, file: !2573, line: 399, baseType: !2677, size: 32, offset: 320)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null, !2571}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2572, file: !2573, line: 401, baseType: !7, size: 32, offset: 352)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2572, file: !2573, line: 404, baseType: !7, size: 32, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2572, file: !2573, line: 405, baseType: !2570, size: 32, offset: 416)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2572, file: !2573, line: 407, baseType: !2684, size: 32, offset: 448)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2573, line: 324, size: 192, elements: !2686)
!2686 = !{!2687, !2689, !2690, !2691}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2685, file: !2573, line: 325, baseType: !2688, size: 48)
!2688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 48, elements: !1155)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2685, file: !2573, line: 326, baseType: !2688, size: 48, offset: 48)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2685, file: !2573, line: 327, baseType: !1210, size: 16, offset: 96)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2685, file: !2573, line: 330, baseType: !2692, size: 64, offset: 128)
!2692 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2572, file: !2573, line: 408, baseType: !2694, size: 32, offset: 480)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2573, line: 60, size: 288, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2695, file: !2573, line: 62, baseType: !7, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2695, file: !2573, line: 63, baseType: !7, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2695, file: !2573, line: 64, baseType: !7, size: 32, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2695, file: !2573, line: 65, baseType: !7, size: 32, offset: 96)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2695, file: !2573, line: 66, baseType: !7, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2695, file: !2573, line: 67, baseType: !7, size: 32, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2695, file: !2573, line: 68, baseType: !7, size: 32, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2695, file: !2573, line: 69, baseType: !7, size: 32, offset: 224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2695, file: !2573, line: 70, baseType: !7, size: 32, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2572, file: !2573, line: 409, baseType: !2570, size: 32, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2572, file: !2573, line: 412, baseType: !2708, size: 32, offset: 544)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{null, !7}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2572, file: !2573, line: 416, baseType: !2713, size: 32, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2573, line: 90, size: 1120, elements: !2715)
!2715 = !{!2716, !2717, !2718, !2721}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2714, file: !2573, line: 91, baseType: !2713, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2714, file: !2573, line: 92, baseType: !7, size: 32, offset: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2714, file: !2573, line: 93, baseType: !2719, size: 1024, offset: 64)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2720, size: 1024, elements: !330)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2714, file: !2573, line: 94, baseType: !2722, size: 32, offset: 1088)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2573, line: 79, size: 2112, elements: !2724)
!2724 = !{!2725, !2727, !2728, !2729}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2723, file: !2573, line: 80, baseType: !2726, size: 1024)
!2726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2723, file: !2573, line: 81, baseType: !2726, size: 1024, offset: 1024)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2723, file: !2573, line: 83, baseType: !2670, size: 32, offset: 2048)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2723, file: !2573, line: 86, baseType: !2670, size: 32, offset: 2080)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2572, file: !2573, line: 417, baseType: !2714, size: 1120, offset: 608)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2572, file: !2573, line: 420, baseType: !2732, size: 96, offset: 1728)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2573, line: 296, size: 96, elements: !2733)
!2733 = !{!2734, !2736, !2737}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2732, file: !2573, line: 298, baseType: !2735, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2732, file: !2573, line: 299, baseType: !7, size: 32, offset: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2732, file: !2573, line: 300, baseType: !2577, size: 32, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2572, file: !2573, line: 421, baseType: !2577, size: 32, offset: 1824)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2572, file: !2573, line: 422, baseType: !2740, size: 32, offset: 1856)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 32)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2573, line: 359, size: 640, elements: !2742)
!2742 = !{!2743, !2744, !2745, !2746, !2747, !2749, !2750, !2751, !2752, !2753, !2754}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2741, file: !2573, line: 362, baseType: !2570, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2741, file: !2573, line: 363, baseType: !2633, size: 64, offset: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2741, file: !2573, line: 364, baseType: !2633, size: 64, offset: 96)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2741, file: !2573, line: 365, baseType: !2633, size: 64, offset: 160)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2741, file: !2573, line: 366, baseType: !2748, size: 64, offset: 224)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1869, size: 64, elements: !960)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2741, file: !2573, line: 367, baseType: !7, size: 32, offset: 288)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2741, file: !2573, line: 368, baseType: !2633, size: 64, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2741, file: !2573, line: 369, baseType: !2633, size: 64, offset: 384)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2741, file: !2573, line: 370, baseType: !2633, size: 64, offset: 448)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2741, file: !2573, line: 371, baseType: !2633, size: 64, offset: 512)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2741, file: !2573, line: 372, baseType: !2633, size: 64, offset: 576)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2572, file: !2573, line: 423, baseType: !2570, size: 32, offset: 1888)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2642, line: 46, baseType: !18)
!2757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2759, globals: !2760, splitDebugInlining: false, nameTableKind: None)
!2758 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2759 = !{!2570, !2568}
!2760 = !{!2562}
!2761 = !{!2762, !2763, !2764, !2765}
!2762 = !DILocalVariable(name: "r", arg: 1, scope: !2564, file: !2565, line: 66, type: !2571)
!2763 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2564, file: !2565, line: 66, type: !2756)
!2764 = !DILocalVariable(name: "prev_heap_end", scope: !2564, file: !2565, line: 70, type: !2570)
!2765 = !DILocalVariable(name: "stack", scope: !2564, file: !2565, line: 71, type: !2570)
!2766 = !DIGlobalVariableExpression(var: !2767, expr: !DIExpression())
!2767 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2768, file: !2769, line: 52, type: !60, isLocal: true, isDefinition: true)
!2768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2770, globals: !2873, splitDebugInlining: false, nameTableKind: None)
!2769 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2770 = !{!2771, !2779, !61, !2824, !2829, !2854}
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1274, line: 656, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1274, line: 650, size: 128, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2773, file: !1274, line: 652, baseType: !60, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2773, file: !1274, line: 653, baseType: !60, size: 32, offset: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2773, file: !1274, line: 654, baseType: !60, size: 32, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2773, file: !1274, line: 655, baseType: !272, size: 32, offset: 96)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2782)
!2782 = !{!2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2793, !2794, !2798, !2799, !2801, !2802, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2821, !2822, !2823}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2781, file: !56, line: 1922, baseType: !60, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2781, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2781, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2781, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2781, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2781, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2781, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2781, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2781, file: !56, line: 1930, baseType: !2792, size: 768, offset: 256)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1313)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2781, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2781, file: !56, line: 1932, baseType: !2795, size: 992, offset: 1056)
!2795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2796)
!2796 = !{!2797}
!2797 = !DISubrange(count: 31)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2781, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2781, file: !56, line: 1934, baseType: !2800, size: 416, offset: 2080)
!2800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !980)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2781, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2781, file: !56, line: 1936, baseType: !2803, size: 1568, offset: 2528)
!2803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2804)
!2804 = !{!2805}
!2805 = !DISubrange(count: 49)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2781, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2781, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2781, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2781, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2781, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2781, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2781, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2781, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2781, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2781, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2781, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2781, file: !56, line: 1948, baseType: !2818, size: 3744, offset: 4448)
!2818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2819)
!2819 = !{!2820}
!2820 = !DISubrange(count: 117)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2781, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2781, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2781, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2827)
!2827 = !{!2828}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2826, file: !56, line: 2157, baseType: !60, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1274, line: 418, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1274, line: 395, size: 1120, elements: !2832)
!2832 = !{!2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2831, file: !1274, line: 397, baseType: !272, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2831, file: !1274, line: 398, baseType: !60, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2831, file: !1274, line: 399, baseType: !60, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2831, file: !1274, line: 400, baseType: !60, size: 32, offset: 96)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2831, file: !1274, line: 401, baseType: !60, size: 32, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2831, file: !1274, line: 402, baseType: !60, size: 32, offset: 160)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2831, file: !1274, line: 403, baseType: !1284, size: 96, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2831, file: !1274, line: 404, baseType: !60, size: 32, offset: 288)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2831, file: !1274, line: 405, baseType: !60, size: 32, offset: 320)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2831, file: !1274, line: 406, baseType: !60, size: 32, offset: 352)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2831, file: !1274, line: 407, baseType: !60, size: 32, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2831, file: !1274, line: 408, baseType: !60, size: 32, offset: 416)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2831, file: !1274, line: 409, baseType: !60, size: 32, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2831, file: !1274, line: 410, baseType: !60, size: 32, offset: 480)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2831, file: !1274, line: 411, baseType: !1293, size: 64, offset: 512)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2831, file: !1274, line: 412, baseType: !272, size: 32, offset: 576)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2831, file: !1274, line: 413, baseType: !272, size: 32, offset: 608)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2831, file: !1274, line: 414, baseType: !1297, size: 128, offset: 640)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2831, file: !1274, line: 415, baseType: !1299, size: 160, offset: 768)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2831, file: !1274, line: 416, baseType: !1303, size: 160, offset: 928)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2831, file: !1274, line: 417, baseType: !60, size: 32, offset: 1088)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2856, file: !56, line: 261, baseType: !60, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2856, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2856, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2856, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2856, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2856, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2856, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2856, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2856, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2856, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2856, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2856, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2856, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2856, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2856, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2873 = !{!2874, !2766}
!2874 = !DIGlobalVariableExpression(var: !2875, expr: !DIExpression())
!2875 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2768, file: !2769, line: 50, type: !61, isLocal: false, isDefinition: true)
!2876 = !DIGlobalVariableExpression(var: !2877, expr: !DIExpression())
!2877 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2878, file: !2883, line: 4, type: !2889, isLocal: false, isDefinition: true)
!2878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2879, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2880, splitDebugInlining: false, nameTableKind: None)
!2879 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2880 = !{!2876, !2881, !2887}
!2881 = !DIGlobalVariableExpression(var: !2882, expr: !DIExpression())
!2882 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2878, file: !2883, line: 5, type: !2884, isLocal: false, isDefinition: true)
!2883 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1869, size: 88, elements: !2885)
!2885 = !{!2886}
!2886 = !DISubrange(count: 11)
!2887 = !DIGlobalVariableExpression(var: !2888, expr: !DIExpression())
!2888 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2878, file: !2883, line: 6, type: !2884, isLocal: false, isDefinition: true)
!2889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1869, size: 248, elements: !2796)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2892, retainedTypes: !2911, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2892 = !{!2296, !245, !259, !1134, !2893, !254, !157}
!2893 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910}
!2895 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2896 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2897 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2898 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2899 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2900 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2901 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2902 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2903 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2904 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2905 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2906 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2907 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2908 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2909 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2910 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2911 = !{!61, !88, !307}
!2912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2914, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2913 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2914 = !{!911, !917, !921, !993}
!2915 = !{!463}
!2916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2918, retainedTypes: !2919, splitDebugInlining: false, nameTableKind: None)
!2917 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2918 = !{!168, !926}
!2919 = !{!528, !2920, !61, !2945, !1335}
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1274, line: 418, baseType: !2922)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1274, line: 395, size: 1120, elements: !2923)
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2922, file: !1274, line: 397, baseType: !272, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2922, file: !1274, line: 398, baseType: !60, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2922, file: !1274, line: 399, baseType: !60, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2922, file: !1274, line: 400, baseType: !60, size: 32, offset: 96)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2922, file: !1274, line: 401, baseType: !60, size: 32, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2922, file: !1274, line: 402, baseType: !60, size: 32, offset: 160)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2922, file: !1274, line: 403, baseType: !1284, size: 96, offset: 192)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2922, file: !1274, line: 404, baseType: !60, size: 32, offset: 288)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2922, file: !1274, line: 405, baseType: !60, size: 32, offset: 320)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2922, file: !1274, line: 406, baseType: !60, size: 32, offset: 352)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2922, file: !1274, line: 407, baseType: !60, size: 32, offset: 384)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2922, file: !1274, line: 408, baseType: !60, size: 32, offset: 416)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2922, file: !1274, line: 409, baseType: !60, size: 32, offset: 448)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2922, file: !1274, line: 410, baseType: !60, size: 32, offset: 480)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2922, file: !1274, line: 411, baseType: !1293, size: 64, offset: 512)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2922, file: !1274, line: 412, baseType: !272, size: 32, offset: 576)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2922, file: !1274, line: 413, baseType: !272, size: 32, offset: 608)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2922, file: !1274, line: 414, baseType: !1297, size: 128, offset: 640)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2922, file: !1274, line: 415, baseType: !1299, size: 160, offset: 768)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2922, file: !1274, line: 416, baseType: !1303, size: 160, offset: 928)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2922, file: !1274, line: 417, baseType: !60, size: 32, offset: 1088)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1274, line: 378, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1274, line: 363, size: 28704, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2947, file: !1274, line: 365, baseType: !1310, size: 256)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2947, file: !1274, line: 366, baseType: !1312, size: 768, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2947, file: !1274, line: 367, baseType: !1310, size: 256, offset: 1024)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2947, file: !1274, line: 368, baseType: !1312, size: 768, offset: 1280)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2947, file: !1274, line: 369, baseType: !1310, size: 256, offset: 2048)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2947, file: !1274, line: 370, baseType: !1312, size: 768, offset: 2304)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2947, file: !1274, line: 371, baseType: !1310, size: 256, offset: 3072)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2947, file: !1274, line: 372, baseType: !1312, size: 768, offset: 3328)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2947, file: !1274, line: 373, baseType: !1310, size: 256, offset: 4096)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2947, file: !1274, line: 374, baseType: !1323, size: 1792, offset: 4352)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2947, file: !1274, line: 375, baseType: !1327, size: 1920, offset: 6144)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2947, file: !1274, line: 376, baseType: !1331, size: 20608, offset: 8064)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2947, file: !1274, line: 377, baseType: !60, size: 32, offset: 28672)
!2962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2963 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2965 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!2966 = !{!"Ubuntu clang version 14.0.6"}
!2967 = !{i32 7, !"Dwarf Version", i32 2}
!2968 = !{i32 2, !"Debug Info Version", i32 3}
!2969 = !{i32 1, !"wchar_size", i32 4}
!2970 = !{i32 1, !"min_enum_size", i32 4}
!2971 = !{i32 1, !"branch-target-enforcement", i32 0}
!2972 = !{i32 1, !"sign-return-address", i32 0}
!2973 = !{i32 1, !"sign-return-address-all", i32 0}
!2974 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2975 = !{i32 7, !"frame-pointer", i32 2}
!2976 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2977, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2980)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!2979}
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2980 = !{!2981, !2983}
!2981 = !DILocalVariable(name: "region", scope: !2976, file: !3, line: 55, type: !2982)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2983 = !DILocalVariable(name: "irq_flag", scope: !2976, file: !3, line: 56, type: !61)
!2984 = !DILocation(line: 59, column: 16, scope: !2976)
!2985 = !DILocation(line: 0, scope: !2976)
!2986 = !DILocation(line: 62, column: 9, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 62, column: 9)
!2988 = !{i8 0, i8 2}
!2989 = !DILocation(line: 62, column: 9, scope: !2976)
!2990 = !DILocation(line: 64, column: 9, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 62, column: 39)
!2992 = !DILocation(line: 66, column: 9, scope: !2991)
!2993 = !DILocation(line: 69, column: 24, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 67, column: 12)
!2995 = !DILocation(line: 72, column: 9, scope: !2994)
!2996 = !DILocation(line: 77, column: 5, scope: !2976)
!2997 = !DILocation(line: 80, column: 22, scope: !2976)
!2998 = !DILocation(line: 81, column: 28, scope: !2976)
!2999 = !DILocation(line: 84, column: 19, scope: !2976)
!3000 = !DILocation(line: 85, column: 23, scope: !2976)
!3001 = !DILocation(line: 88, column: 5, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 88, column: 5)
!3003 = !DILocation(line: 90, column: 9, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 88, column: 81)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 88, column: 5)
!3006 = !DILocation(line: 90, column: 38, scope: !3004)
!3007 = !DILocation(line: 91, column: 9, scope: !3004)
!3008 = !DILocation(line: 91, column: 42, scope: !3004)
!3009 = !DILocation(line: 94, column: 45, scope: !3004)
!3010 = !DILocation(line: 94, column: 47, scope: !3004)
!3011 = !DILocation(line: 95, column: 49, scope: !3004)
!3012 = !DILocation(line: 95, column: 51, scope: !3004)
!3013 = !DILocation(line: 88, column: 77, scope: !3005)
!3014 = !DILocation(line: 88, column: 46, scope: !3005)
!3015 = distinct !{!3015, !3001, !3016}
!3016 = !DILocation(line: 96, column: 5, scope: !3002)
!3017 = !DILocation(line: 99, column: 1, scope: !2976)
!3018 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2977, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3019)
!3019 = !{!3020}
!3020 = !DILocalVariable(name: "irq_flag", scope: !3018, file: !3, line: 329, type: !61)
!3021 = !DILocation(line: 332, column: 16, scope: !3018)
!3022 = !DILocation(line: 0, scope: !3018)
!3023 = !DILocation(line: 335, column: 21, scope: !3018)
!3024 = !DILocation(line: 336, column: 21, scope: !3018)
!3025 = !DILocation(line: 339, column: 21, scope: !3018)
!3026 = !DILocation(line: 340, column: 21, scope: !3018)
!3027 = !DILocation(line: 434, column: 3, scope: !3028, inlinedAt: !3030)
!3028 = distinct !DISubprogram(name: "__ISB", scope: !3029, file: !3029, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!3029 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!3030 = distinct !DILocation(line: 343, column: 5, scope: !3018)
!3031 = !{i64 442814}
!3032 = !DILocation(line: 346, column: 5, scope: !3018)
!3033 = !DILocation(line: 348, column: 5, scope: !3018)
!3034 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2977, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3035)
!3035 = !{!3036}
!3036 = !DILocalVariable(name: "region", scope: !3034, file: !3, line: 103, type: !2982)
!3037 = !DILocation(line: 107, column: 5, scope: !3034)
!3038 = !DILocation(line: 110, column: 22, scope: !3034)
!3039 = !DILocation(line: 111, column: 28, scope: !3034)
!3040 = !DILocation(line: 114, column: 19, scope: !3034)
!3041 = !DILocation(line: 115, column: 23, scope: !3034)
!3042 = !DILocation(line: 0, scope: !3034)
!3043 = !DILocation(line: 118, column: 5, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 118, column: 5)
!3045 = !DILocation(line: 120, column: 9, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 118, column: 81)
!3047 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 118, column: 5)
!3048 = !DILocation(line: 120, column: 38, scope: !3046)
!3049 = !DILocation(line: 121, column: 9, scope: !3046)
!3050 = !DILocation(line: 121, column: 42, scope: !3046)
!3051 = !DILocation(line: 124, column: 45, scope: !3046)
!3052 = !DILocation(line: 124, column: 47, scope: !3046)
!3053 = !DILocation(line: 125, column: 49, scope: !3046)
!3054 = !DILocation(line: 125, column: 51, scope: !3046)
!3055 = !DILocation(line: 118, column: 77, scope: !3047)
!3056 = !DILocation(line: 118, column: 46, scope: !3047)
!3057 = distinct !{!3057, !3043, !3058}
!3058 = !DILocation(line: 126, column: 5, scope: !3044)
!3059 = !DILocation(line: 129, column: 20, scope: !3034)
!3060 = !DILocation(line: 131, column: 5, scope: !3034)
!3061 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2977, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!3062 = !DILocation(line: 137, column: 45, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 137, column: 9)
!3064 = !DILocation(line: 137, column: 28, scope: !3063)
!3065 = !DILocation(line: 137, column: 9, scope: !3061)
!3066 = !DILocation(line: 142, column: 22, scope: !3061)
!3067 = !DILocation(line: 145, column: 28, scope: !3061)
!3068 = !DILocation(line: 145, column: 19, scope: !3061)
!3069 = !DILocation(line: 147, column: 5, scope: !3061)
!3070 = !DILocation(line: 0, scope: !3061)
!3071 = !DILocation(line: 148, column: 1, scope: !3061)
!3072 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2977, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3073)
!3073 = !{!3074}
!3074 = !DILocalVariable(name: "irq_flag", scope: !3072, file: !3, line: 152, type: !61)
!3075 = !DILocation(line: 155, column: 16, scope: !3072)
!3076 = !DILocation(line: 0, scope: !3072)
!3077 = !DILocation(line: 158, column: 16, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 158, column: 9)
!3079 = !DILocation(line: 158, column: 26, scope: !3078)
!3080 = !DILocation(line: 158, column: 9, scope: !3072)
!3081 = !DILocation(line: 160, column: 9, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 158, column: 49)
!3083 = !DILocation(line: 161, column: 5, scope: !3082)
!3084 = !DILocation(line: 164, column: 22, scope: !3072)
!3085 = !DILocation(line: 167, column: 28, scope: !3072)
!3086 = !DILocation(line: 167, column: 19, scope: !3072)
!3087 = !DILocation(line: 170, column: 5, scope: !3072)
!3088 = !DILocation(line: 172, column: 5, scope: !3072)
!3089 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !3090, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3092)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!2979, !2982}
!3092 = !{!3093}
!3093 = !DILocalVariable(name: "region", arg: 1, scope: !3089, file: !3, line: 175, type: !2982)
!3094 = !DILocation(line: 0, scope: !3089)
!3095 = !DILocation(line: 178, column: 16, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 178, column: 9)
!3097 = !DILocation(line: 178, column: 9, scope: !3089)
!3098 = !DILocation(line: 183, column: 9, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 183, column: 9)
!3100 = !DILocation(line: 183, column: 38, scope: !3099)
!3101 = !DILocation(line: 183, column: 9, scope: !3089)
!3102 = !DILocation(line: 184, column: 38, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 183, column: 62)
!3104 = !DILocation(line: 184, column: 32, scope: !3103)
!3105 = !DILocation(line: 190, column: 32, scope: !3089)
!3106 = !DILocation(line: 190, column: 23, scope: !3089)
!3107 = !DILocation(line: 192, column: 5, scope: !3089)
!3108 = !DILocation(line: 193, column: 1, scope: !3089)
!3109 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !3090, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3110)
!3110 = !{!3111}
!3111 = !DILocalVariable(name: "region", arg: 1, scope: !3109, file: !3, line: 195, type: !2982)
!3112 = !DILocation(line: 0, scope: !3109)
!3113 = !DILocation(line: 198, column: 16, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 198, column: 9)
!3115 = !DILocation(line: 198, column: 9, scope: !3109)
!3116 = !DILocation(line: 203, column: 35, scope: !3109)
!3117 = !DILocation(line: 203, column: 31, scope: !3109)
!3118 = !DILocation(line: 203, column: 28, scope: !3109)
!3119 = !DILocation(line: 206, column: 32, scope: !3109)
!3120 = !DILocation(line: 206, column: 23, scope: !3109)
!3121 = !DILocation(line: 209, column: 41, scope: !3109)
!3122 = !DILocation(line: 209, column: 43, scope: !3109)
!3123 = !DILocation(line: 210, column: 45, scope: !3109)
!3124 = !DILocation(line: 210, column: 47, scope: !3109)
!3125 = !DILocation(line: 212, column: 5, scope: !3109)
!3126 = !DILocation(line: 213, column: 1, scope: !3109)
!3127 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !3128, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3131)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!2979, !3130}
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!3131 = !{!3132}
!3132 = !DILocalVariable(name: "cache_size", arg: 1, scope: !3127, file: !3, line: 215, type: !3130)
!3133 = !DILocation(line: 0, scope: !3127)
!3134 = !DILocation(line: 218, column: 20, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 218, column: 9)
!3136 = !DILocation(line: 218, column: 9, scope: !3127)
!3137 = !DILocation(line: 223, column: 22, scope: !3127)
!3138 = !DILocation(line: 224, column: 37, scope: !3127)
!3139 = !DILocation(line: 224, column: 22, scope: !3127)
!3140 = !DILocation(line: 227, column: 20, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 227, column: 9)
!3142 = !DILocation(line: 227, column: 9, scope: !3127)
!3143 = !DILocation(line: 228, column: 26, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 227, column: 43)
!3145 = !DILocation(line: 229, column: 5, scope: !3144)
!3146 = !DILocation(line: 232, column: 28, scope: !3127)
!3147 = !DILocation(line: 232, column: 19, scope: !3127)
!3148 = !DILocation(line: 234, column: 5, scope: !3127)
!3149 = !DILocation(line: 235, column: 1, scope: !3127)
!3150 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !3151, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3160)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!2979, !2982, !3153}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3155)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !3157)
!3157 = !{!3158, !3159}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !3156, file: !6, line: 220, baseType: !61, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !3156, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!3160 = !{!3161, !3162}
!3161 = !DILocalVariable(name: "region", arg: 1, scope: !3150, file: !3, line: 237, type: !2982)
!3162 = !DILocalVariable(name: "region_config", arg: 2, scope: !3150, file: !3, line: 237, type: !3153)
!3163 = !DILocation(line: 0, scope: !3150)
!3164 = !DILocation(line: 240, column: 16, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 240, column: 9)
!3166 = !DILocation(line: 240, column: 9, scope: !3150)
!3167 = !DILocation(line: 245, column: 23, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 245, column: 9)
!3169 = !DILocation(line: 245, column: 9, scope: !3150)
!3170 = !DILocation(line: 250, column: 24, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 250, column: 9)
!3172 = !DILocation(line: 250, column: 45, scope: !3171)
!3173 = !DILocation(line: 250, column: 9, scope: !3150)
!3174 = !DILocation(line: 251, column: 9, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 250, column: 81)
!3176 = !DILocation(line: 256, column: 24, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 256, column: 9)
!3178 = !DILocation(line: 256, column: 42, scope: !3177)
!3179 = !DILocation(line: 256, column: 9, scope: !3150)
!3180 = !DILocation(line: 257, column: 9, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3177, file: !3, line: 256, column: 78)
!3182 = !DILocation(line: 262, column: 5, scope: !3150)
!3183 = !DILocation(line: 262, column: 34, scope: !3150)
!3184 = !DILocation(line: 263, column: 55, scope: !3150)
!3185 = !DILocation(line: 263, column: 93, scope: !3150)
!3186 = !DILocation(line: 263, column: 76, scope: !3150)
!3187 = !DILocation(line: 263, column: 5, scope: !3150)
!3188 = !DILocation(line: 263, column: 38, scope: !3150)
!3189 = !DILocation(line: 266, column: 34, scope: !3150)
!3190 = !DILocation(line: 269, column: 45, scope: !3150)
!3191 = !DILocation(line: 269, column: 41, scope: !3150)
!3192 = !DILocation(line: 269, column: 43, scope: !3150)
!3193 = !DILocation(line: 270, column: 49, scope: !3150)
!3194 = !DILocation(line: 270, column: 45, scope: !3150)
!3195 = !DILocation(line: 270, column: 47, scope: !3150)
!3196 = !DILocation(line: 272, column: 5, scope: !3150)
!3197 = !DILocation(line: 273, column: 1, scope: !3150)
!3198 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !3199, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3201)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!2979, !61}
!3201 = !{!3202, !3203}
!3202 = !DILocalVariable(name: "address", arg: 1, scope: !3198, file: !3, line: 275, type: !61)
!3203 = !DILocalVariable(name: "irq_flag", scope: !3198, file: !3, line: 277, type: !61)
!3204 = !DILocation(line: 0, scope: !3198)
!3205 = !DILocation(line: 280, column: 17, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 280, column: 9)
!3207 = !DILocation(line: 280, column: 9, scope: !3198)
!3208 = !DILocation(line: 284, column: 16, scope: !3198)
!3209 = !DILocation(line: 287, column: 32, scope: !3198)
!3210 = !DILocation(line: 287, column: 21, scope: !3198)
!3211 = !DILocation(line: 288, column: 21, scope: !3198)
!3212 = !DILocation(line: 434, column: 3, scope: !3028, inlinedAt: !3213)
!3213 = distinct !DILocation(line: 291, column: 5, scope: !3198)
!3214 = !DILocation(line: 294, column: 5, scope: !3198)
!3215 = !DILocation(line: 296, column: 5, scope: !3198)
!3216 = !DILocation(line: 297, column: 1, scope: !3198)
!3217 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !3218, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3220)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{!2979, !61, !61}
!3220 = !{!3221, !3222, !3223, !3224}
!3221 = !DILocalVariable(name: "address", arg: 1, scope: !3217, file: !3, line: 299, type: !61)
!3222 = !DILocalVariable(name: "length", arg: 2, scope: !3217, file: !3, line: 299, type: !61)
!3223 = !DILocalVariable(name: "irq_flag", scope: !3217, file: !3, line: 301, type: !61)
!3224 = !DILocalVariable(name: "end_address", scope: !3217, file: !3, line: 302, type: !61)
!3225 = !DILocation(line: 0, scope: !3217)
!3226 = !DILocation(line: 302, column: 36, scope: !3217)
!3227 = !DILocation(line: 305, column: 47, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3217, file: !3, line: 305, column: 9)
!3229 = !DILocation(line: 310, column: 16, scope: !3217)
!3230 = !DILocation(line: 313, column: 20, scope: !3217)
!3231 = !DILocation(line: 313, column: 5, scope: !3217)
!3232 = !DILocation(line: 314, column: 9, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3217, file: !3, line: 313, column: 35)
!3234 = !DILocation(line: 315, column: 17, scope: !3233)
!3235 = distinct !{!3235, !3231, !3236}
!3236 = !DILocation(line: 316, column: 5, scope: !3217)
!3237 = !DILocation(line: 434, column: 3, scope: !3028, inlinedAt: !3238)
!3238 = distinct !DILocation(line: 319, column: 5, scope: !3217)
!3239 = !DILocation(line: 322, column: 5, scope: !3217)
!3240 = !DILocation(line: 324, column: 5, scope: !3217)
!3241 = !DILocation(line: 325, column: 1, scope: !3217)
!3242 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !3199, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3243)
!3243 = !{!3244, !3245}
!3244 = !DILocalVariable(name: "address", arg: 1, scope: !3242, file: !3, line: 351, type: !61)
!3245 = !DILocalVariable(name: "irq_flag", scope: !3242, file: !3, line: 353, type: !61)
!3246 = !DILocation(line: 0, scope: !3242)
!3247 = !DILocation(line: 356, column: 17, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 356, column: 9)
!3249 = !DILocation(line: 356, column: 9, scope: !3242)
!3250 = !DILocation(line: 361, column: 16, scope: !3242)
!3251 = !DILocation(line: 364, column: 32, scope: !3242)
!3252 = !DILocation(line: 364, column: 21, scope: !3242)
!3253 = !DILocation(line: 365, column: 21, scope: !3242)
!3254 = !DILocation(line: 434, column: 3, scope: !3028, inlinedAt: !3255)
!3255 = distinct !DILocation(line: 368, column: 5, scope: !3242)
!3256 = !DILocation(line: 371, column: 5, scope: !3242)
!3257 = !DILocation(line: 373, column: 5, scope: !3242)
!3258 = !DILocation(line: 374, column: 1, scope: !3242)
!3259 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !3218, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3260)
!3260 = !{!3261, !3262, !3263, !3264}
!3261 = !DILocalVariable(name: "address", arg: 1, scope: !3259, file: !3, line: 376, type: !61)
!3262 = !DILocalVariable(name: "length", arg: 2, scope: !3259, file: !3, line: 376, type: !61)
!3263 = !DILocalVariable(name: "irq_flag", scope: !3259, file: !3, line: 378, type: !61)
!3264 = !DILocalVariable(name: "end_address", scope: !3259, file: !3, line: 379, type: !61)
!3265 = !DILocation(line: 0, scope: !3259)
!3266 = !DILocation(line: 379, column: 36, scope: !3259)
!3267 = !DILocation(line: 382, column: 47, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 382, column: 9)
!3269 = !DILocation(line: 387, column: 16, scope: !3259)
!3270 = !DILocation(line: 390, column: 20, scope: !3259)
!3271 = !DILocation(line: 390, column: 5, scope: !3259)
!3272 = !DILocation(line: 391, column: 9, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 390, column: 35)
!3274 = !DILocation(line: 392, column: 17, scope: !3273)
!3275 = distinct !{!3275, !3271, !3276}
!3276 = !DILocation(line: 393, column: 5, scope: !3259)
!3277 = !DILocation(line: 434, column: 3, scope: !3028, inlinedAt: !3278)
!3278 = distinct !DILocation(line: 396, column: 5, scope: !3259)
!3279 = !DILocation(line: 399, column: 5, scope: !3259)
!3280 = !DILocation(line: 401, column: 5, scope: !3259)
!3281 = !DILocation(line: 402, column: 1, scope: !3259)
!3282 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2977, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3283)
!3283 = !{!3284}
!3284 = !DILocalVariable(name: "irq_flag", scope: !3282, file: !3, line: 406, type: !61)
!3285 = !DILocation(line: 409, column: 16, scope: !3282)
!3286 = !DILocation(line: 0, scope: !3282)
!3287 = !DILocation(line: 412, column: 21, scope: !3282)
!3288 = !DILocation(line: 413, column: 21, scope: !3282)
!3289 = !DILocation(line: 434, column: 3, scope: !3028, inlinedAt: !3290)
!3290 = distinct !DILocation(line: 416, column: 5, scope: !3282)
!3291 = !DILocation(line: 419, column: 5, scope: !3282)
!3292 = !DILocation(line: 421, column: 5, scope: !3282)
!3293 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3294, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3296)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!91, !61}
!3296 = !{!3297, !3298}
!3297 = !DILocalVariable(name: "address", arg: 1, scope: !3293, file: !3, line: 424, type: !61)
!3298 = !DILocalVariable(name: "region", scope: !3293, file: !3, line: 426, type: !2982)
!3299 = !DILocation(line: 0, scope: !3293)
!3300 = !DILocation(line: 429, column: 18, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 429, column: 9)
!3302 = !DILocation(line: 429, column: 28, scope: !3301)
!3303 = !DILocation(line: 429, column: 9, scope: !3293)
!3304 = !DILocation(line: 435, column: 20, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 435, column: 13)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 433, column: 81)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 433, column: 5)
!3308 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 433, column: 5)
!3309 = !DILocation(line: 435, column: 41, scope: !3305)
!3310 = !DILocation(line: 435, column: 36, scope: !3305)
!3311 = !DILocation(line: 435, column: 13, scope: !3306)
!3312 = !DILocation(line: 436, column: 30, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 436, column: 17)
!3314 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 435, column: 53)
!3315 = !DILocation(line: 436, column: 59, scope: !3313)
!3316 = !DILocation(line: 436, column: 26, scope: !3313)
!3317 = !DILocation(line: 436, column: 85, scope: !3313)
!3318 = !DILocation(line: 436, column: 99, scope: !3313)
!3319 = !DILocation(line: 436, column: 97, scope: !3313)
!3320 = !DILocation(line: 436, column: 17, scope: !3314)
!3321 = !DILocation(line: 433, column: 77, scope: !3307)
!3322 = !DILocation(line: 433, column: 46, scope: !3307)
!3323 = !DILocation(line: 433, column: 5, scope: !3308)
!3324 = distinct !{!3324, !3323, !3325}
!3325 = !DILocation(line: 440, column: 5, scope: !3308)
!3326 = !DILocation(line: 442, column: 1, scope: !3293)
!3327 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2891, file: !2891, line: 95, type: !3328, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3332)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!3330, !3331}
!3330 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2296)
!3331 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3332 = !{!3333}
!3333 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3327, file: !2891, line: 95, type: !3331)
!3334 = !DILocation(line: 0, scope: !3327)
!3335 = !DILocation(line: 98, column: 9, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3327, file: !2891, line: 98, column: 9)
!3337 = !DILocation(line: 98, column: 9, scope: !3327)
!3338 = !DILocation(line: 102, column: 10, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3327, file: !2891, line: 102, column: 9)
!3340 = !DILocation(line: 102, column: 34, scope: !3339)
!3341 = !DILocation(line: 102, column: 49, scope: !3339)
!3342 = !DILocation(line: 102, column: 69, scope: !3339)
!3343 = !DILocation(line: 103, column: 38, scope: !3339)
!3344 = !DILocation(line: 102, column: 9, scope: !3327)
!3345 = !DILocation(line: 109, column: 12, scope: !3327)
!3346 = !DILocation(line: 109, column: 5, scope: !3327)
!3347 = !DILocation(line: 112, column: 5, scope: !3327)
!3348 = !DILocation(line: 115, column: 44, scope: !3327)
!3349 = !DILocation(line: 118, column: 5, scope: !3327)
!3350 = !DILocation(line: 118, column: 23, scope: !3327)
!3351 = !DILocation(line: 118, column: 35, scope: !3327)
!3352 = !DILocation(line: 121, column: 42, scope: !3327)
!3353 = !DILocation(line: 121, column: 38, scope: !3327)
!3354 = !DILocation(line: 121, column: 5, scope: !3327)
!3355 = !DILocation(line: 121, column: 17, scope: !3327)
!3356 = !DILocation(line: 121, column: 35, scope: !3327)
!3357 = !DILocation(line: 129, column: 5, scope: !3327)
!3358 = !DILocation(line: 131, column: 1, scope: !3327)
!3359 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2891, file: !2891, line: 81, type: !3360, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3362)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!91, !3331}
!3362 = !{!3363}
!3363 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3359, file: !2891, line: 81, type: !3331)
!3364 = !DILocation(line: 0, scope: !3359)
!3365 = !DILocation(line: 84, column: 25, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3359, file: !2891, line: 84, column: 9)
!3367 = !DILocation(line: 84, column: 35, scope: !3366)
!3368 = !DILocation(line: 84, column: 45, scope: !3366)
!3369 = !DILocation(line: 93, column: 1, scope: !3359)
!3370 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2891, file: !2891, line: 133, type: !3328, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3371)
!3371 = !{!3372}
!3372 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3370, file: !2891, line: 133, type: !3331)
!3373 = !DILocation(line: 0, scope: !3370)
!3374 = !DILocation(line: 136, column: 9, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3370, file: !2891, line: 136, column: 9)
!3376 = !DILocation(line: 136, column: 9, scope: !3370)
!3377 = !DILocation(line: 140, column: 9, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3370, file: !2891, line: 140, column: 9)
!3379 = !DILocation(line: 140, column: 33, scope: !3378)
!3380 = !DILocation(line: 140, column: 48, scope: !3378)
!3381 = !DILocation(line: 140, column: 9, scope: !3370)
!3382 = !DILocation(line: 146, column: 12, scope: !3370)
!3383 = !DILocation(line: 146, column: 5, scope: !3370)
!3384 = !DILocation(line: 149, column: 29, scope: !3370)
!3385 = !DILocation(line: 149, column: 44, scope: !3370)
!3386 = !DILocation(line: 151, column: 29, scope: !3370)
!3387 = !DILocation(line: 151, column: 5, scope: !3370)
!3388 = !DILocation(line: 159, column: 5, scope: !3370)
!3389 = !DILocation(line: 160, column: 1, scope: !3370)
!3390 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2891, file: !2891, line: 163, type: !3391, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3394)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!3330, !3393, !1395}
!3393 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !1134)
!3394 = !{!3395, !3396}
!3395 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3390, file: !2891, line: 163, type: !3393)
!3396 = !DILocalVariable(name: "count", arg: 2, scope: !3390, file: !2891, line: 163, type: !1395)
!3397 = !DILocation(line: 0, scope: !3390)
!3398 = !DILocation(line: 166, column: 9, scope: !3390)
!3399 = !DILocation(line: 167, column: 44, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !2891, line: 167, column: 13)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !2891, line: 166, column: 51)
!3402 = distinct !DILexicalBlock(scope: !3390, file: !2891, line: 166, column: 9)
!3403 = !DILocation(line: 167, column: 59, scope: !3400)
!3404 = !DILocation(line: 167, column: 13, scope: !3401)
!3405 = !DILocation(line: 170, column: 38, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3400, file: !2891, line: 167, column: 79)
!3407 = !DILocation(line: 170, column: 13, scope: !3406)
!3408 = !DILocation(line: 172, column: 59, scope: !3406)
!3409 = !DILocation(line: 173, column: 9, scope: !3406)
!3410 = !DILocation(line: 175, column: 36, scope: !3401)
!3411 = !DILocation(line: 175, column: 18, scope: !3401)
!3412 = !DILocation(line: 177, column: 5, scope: !3401)
!3413 = !DILocation(line: 179, column: 44, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !2891, line: 179, column: 13)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !2891, line: 178, column: 55)
!3416 = distinct !DILexicalBlock(scope: !3402, file: !2891, line: 178, column: 14)
!3417 = !DILocation(line: 179, column: 59, scope: !3414)
!3418 = !DILocation(line: 179, column: 13, scope: !3415)
!3419 = !DILocation(line: 182, column: 38, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3414, file: !2891, line: 179, column: 79)
!3421 = !DILocation(line: 182, column: 13, scope: !3420)
!3422 = !DILocation(line: 184, column: 59, scope: !3420)
!3423 = !DILocation(line: 186, column: 9, scope: !3420)
!3424 = !DILocation(line: 188, column: 68, scope: !3415)
!3425 = !DILocation(line: 188, column: 50, scope: !3415)
!3426 = !DILocation(line: 188, column: 18, scope: !3415)
!3427 = !DILocation(line: 0, scope: !3402)
!3428 = !DILocation(line: 193, column: 5, scope: !3390)
!3429 = !DILocation(line: 194, column: 1, scope: !3390)
!3430 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2891, file: !2891, line: 196, type: !3431, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3433)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!3330, !61, !61, !1395}
!3433 = !{!3434, !3435, !3436}
!3434 = !DILocalVariable(name: "start_count", arg: 1, scope: !3430, file: !2891, line: 196, type: !61)
!3435 = !DILocalVariable(name: "end_count", arg: 2, scope: !3430, file: !2891, line: 196, type: !61)
!3436 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3430, file: !2891, line: 196, type: !1395)
!3437 = !DILocation(line: 0, scope: !3430)
!3438 = !DILocation(line: 198, column: 24, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3430, file: !2891, line: 198, column: 9)
!3440 = !DILocation(line: 198, column: 9, scope: !3430)
!3441 = !DILocation(line: 0, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3430, file: !2891, line: 202, column: 9)
!3443 = !DILocation(line: 208, column: 5, scope: !3430)
!3444 = !DILocation(line: 209, column: 1, scope: !3430)
!3445 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2891, file: !2891, line: 211, type: !3446, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3449)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!3330, !3331, !3448}
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3449 = !{!3450, !3451}
!3450 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3445, file: !2891, line: 211, type: !3331)
!3451 = !DILocalVariable(name: "running_status", arg: 2, scope: !3445, file: !2891, line: 211, type: !3448)
!3452 = !DILocation(line: 0, scope: !3445)
!3453 = !DILocation(line: 213, column: 18, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3445, file: !2891, line: 213, column: 9)
!3455 = !DILocation(line: 213, column: 9, scope: !3445)
!3456 = !DILocation(line: 217, column: 47, scope: !3445)
!3457 = !DILocation(line: 217, column: 21, scope: !3445)
!3458 = !DILocation(line: 219, column: 5, scope: !3445)
!3459 = !DILocation(line: 220, column: 1, scope: !3445)
!3460 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2891, file: !2891, line: 222, type: !3461, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3463)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!3330, !3331, !307, !88}
!3463 = !{!3464, !3465, !3466}
!3464 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3460, file: !2891, line: 222, type: !3331)
!3465 = !DILocalVariable(name: "callback", arg: 2, scope: !3460, file: !2891, line: 223, type: !307)
!3466 = !DILocalVariable(name: "user_data", arg: 3, scope: !3460, file: !2891, line: 224, type: !88)
!3467 = !DILocation(line: 0, scope: !3460)
!3468 = !DILocation(line: 227, column: 9, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3460, file: !2891, line: 227, column: 9)
!3470 = !DILocation(line: 227, column: 9, scope: !3460)
!3471 = !DILocation(line: 231, column: 34, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3460, file: !2891, line: 231, column: 9)
!3473 = !DILocation(line: 231, column: 49, scope: !3472)
!3474 = !DILocation(line: 231, column: 69, scope: !3472)
!3475 = !DILocation(line: 232, column: 38, scope: !3472)
!3476 = !DILocation(line: 232, column: 53, scope: !3472)
!3477 = !DILocation(line: 231, column: 9, scope: !3460)
!3478 = !DILocation(line: 237, column: 18, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3460, file: !2891, line: 237, column: 9)
!3480 = !DILocation(line: 237, column: 9, scope: !3460)
!3481 = !DILocation(line: 245, column: 46, scope: !3460)
!3482 = !DILocation(line: 245, column: 56, scope: !3460)
!3483 = !DILocation(line: 246, column: 46, scope: !3460)
!3484 = !DILocation(line: 246, column: 56, scope: !3460)
!3485 = !DILocation(line: 248, column: 5, scope: !3460)
!3486 = !DILocation(line: 250, column: 5, scope: !3460)
!3487 = !DILocation(line: 252, column: 1, scope: !3460)
!3488 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2891, file: !2891, line: 256, type: !3489, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3492)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!3330, !3331, !61, !3491}
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3492 = !{!3493, !3494, !3495, !3496}
!3493 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3488, file: !2891, line: 256, type: !3331)
!3494 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3488, file: !2891, line: 256, type: !61)
!3495 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3488, file: !2891, line: 256, type: !3491)
!3496 = !DILocalVariable(name: "mask", scope: !3488, file: !2891, line: 259, type: !60)
!3497 = !DILocation(line: 0, scope: !3488)
!3498 = !DILocation(line: 259, column: 5, scope: !3488)
!3499 = !DILocation(line: 259, column: 23, scope: !3488)
!3500 = !DILocation(line: 261, column: 9, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3488, file: !2891, line: 261, column: 9)
!3502 = !DILocation(line: 261, column: 9, scope: !3488)
!3503 = !DILocation(line: 265, column: 34, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3488, file: !2891, line: 265, column: 9)
!3505 = !DILocation(line: 265, column: 49, scope: !3504)
!3506 = !DILocation(line: 266, column: 13, scope: !3504)
!3507 = !DILocation(line: 266, column: 41, scope: !3504)
!3508 = !DILocation(line: 266, column: 56, scope: !3504)
!3509 = !DILocation(line: 265, column: 9, scope: !3488)
!3510 = !DILocation(line: 271, column: 25, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3488, file: !2891, line: 271, column: 9)
!3512 = !DILocation(line: 271, column: 9, scope: !3488)
!3513 = !DILocation(line: 282, column: 12, scope: !3488)
!3514 = !DILocation(line: 282, column: 10, scope: !3488)
!3515 = !DILocation(line: 284, column: 5, scope: !3488)
!3516 = !DILocation(line: 286, column: 5, scope: !3488)
!3517 = !DILocation(line: 286, column: 23, scope: !3488)
!3518 = !DILocation(line: 286, column: 34, scope: !3488)
!3519 = !DILocation(line: 287, column: 5, scope: !3488)
!3520 = !DILocation(line: 287, column: 23, scope: !3488)
!3521 = !DILocation(line: 287, column: 34, scope: !3488)
!3522 = !DILocation(line: 290, column: 5, scope: !3488)
!3523 = !DILocation(line: 290, column: 23, scope: !3488)
!3524 = !DILocation(line: 290, column: 37, scope: !3488)
!3525 = !DILocation(line: 291, column: 39, scope: !3488)
!3526 = !DILocation(line: 291, column: 5, scope: !3488)
!3527 = !DILocation(line: 291, column: 23, scope: !3488)
!3528 = !DILocation(line: 291, column: 37, scope: !3488)
!3529 = !DILocation(line: 292, column: 5, scope: !3488)
!3530 = !DILocation(line: 292, column: 23, scope: !3488)
!3531 = !DILocation(line: 292, column: 37, scope: !3488)
!3532 = !DILocation(line: 297, column: 47, scope: !3488)
!3533 = !DILocation(line: 298, column: 33, scope: !3488)
!3534 = !DILocation(line: 296, column: 5, scope: !3488)
!3535 = !DILocation(line: 296, column: 23, scope: !3488)
!3536 = !DILocation(line: 296, column: 31, scope: !3488)
!3537 = !DILocation(line: 300, column: 5, scope: !3488)
!3538 = !DILocation(line: 300, column: 29, scope: !3488)
!3539 = distinct !{!3539, !3537, !3540}
!3540 = !DILocation(line: 300, column: 39, scope: !3488)
!3541 = !DILocation(line: 301, column: 23, scope: !3488)
!3542 = !DILocation(line: 301, column: 33, scope: !3488)
!3543 = !DILocation(line: 302, column: 5, scope: !3488)
!3544 = !DILocation(line: 302, column: 23, scope: !3488)
!3545 = !DILocation(line: 302, column: 34, scope: !3488)
!3546 = !DILocation(line: 303, column: 44, scope: !3488)
!3547 = !DILocation(line: 305, column: 28, scope: !3488)
!3548 = !DILocation(line: 305, column: 5, scope: !3488)
!3549 = !DILocation(line: 306, column: 5, scope: !3488)
!3550 = !DILocation(line: 307, column: 1, scope: !3488)
!3551 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2891, file: !2891, line: 310, type: !3552, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3554)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{!3330, !61}
!3554 = !{!3555}
!3555 = !DILocalVariable(name: "ms", arg: 1, scope: !3551, file: !2891, line: 310, type: !61)
!3556 = !DILocation(line: 0, scope: !3551)
!3557 = !DILocation(line: 313, column: 40, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3551, file: !2891, line: 313, column: 9)
!3559 = !DILocation(line: 313, column: 55, scope: !3558)
!3560 = !DILocation(line: 313, column: 9, scope: !3551)
!3561 = !DILocation(line: 316, column: 34, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3558, file: !2891, line: 313, column: 75)
!3563 = !DILocation(line: 316, column: 9, scope: !3562)
!3564 = !DILocation(line: 317, column: 55, scope: !3562)
!3565 = !DILocation(line: 318, column: 5, scope: !3562)
!3566 = !DILocation(line: 320, column: 20, scope: !3551)
!3567 = !DILocation(line: 320, column: 45, scope: !3551)
!3568 = !DILocation(line: 320, column: 5, scope: !3551)
!3569 = !DILocation(line: 322, column: 5, scope: !3551)
!3570 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2891, file: !2891, line: 327, type: !3489, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3571)
!3571 = !{!3572, !3573, !3574, !3575}
!3572 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3570, file: !2891, line: 327, type: !3331)
!3573 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3570, file: !2891, line: 327, type: !61)
!3574 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3570, file: !2891, line: 327, type: !3491)
!3575 = !DILocalVariable(name: "mask", scope: !3570, file: !2891, line: 329, type: !60)
!3576 = !DILocation(line: 0, scope: !3570)
!3577 = !DILocation(line: 329, column: 5, scope: !3570)
!3578 = !DILocation(line: 329, column: 23, scope: !3570)
!3579 = !DILocation(line: 331, column: 9, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3570, file: !2891, line: 331, column: 9)
!3581 = !DILocation(line: 331, column: 9, scope: !3570)
!3582 = !DILocation(line: 336, column: 34, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3570, file: !2891, line: 336, column: 9)
!3584 = !DILocation(line: 336, column: 49, scope: !3583)
!3585 = !DILocation(line: 337, column: 13, scope: !3583)
!3586 = !DILocation(line: 337, column: 41, scope: !3583)
!3587 = !DILocation(line: 337, column: 56, scope: !3583)
!3588 = !DILocation(line: 336, column: 9, scope: !3570)
!3589 = !DILocation(line: 349, column: 29, scope: !3570)
!3590 = !DILocation(line: 349, column: 49, scope: !3570)
!3591 = !DILocation(line: 351, column: 12, scope: !3570)
!3592 = !DILocation(line: 351, column: 10, scope: !3570)
!3593 = !DILocation(line: 353, column: 5, scope: !3570)
!3594 = !DILocation(line: 355, column: 5, scope: !3570)
!3595 = !DILocation(line: 355, column: 23, scope: !3570)
!3596 = !DILocation(line: 355, column: 34, scope: !3570)
!3597 = !DILocation(line: 356, column: 5, scope: !3570)
!3598 = !DILocation(line: 356, column: 23, scope: !3570)
!3599 = !DILocation(line: 356, column: 34, scope: !3570)
!3600 = !DILocation(line: 359, column: 5, scope: !3570)
!3601 = !DILocation(line: 359, column: 23, scope: !3570)
!3602 = !DILocation(line: 359, column: 37, scope: !3570)
!3603 = !DILocation(line: 360, column: 39, scope: !3570)
!3604 = !DILocation(line: 360, column: 5, scope: !3570)
!3605 = !DILocation(line: 360, column: 23, scope: !3570)
!3606 = !DILocation(line: 360, column: 37, scope: !3570)
!3607 = !DILocation(line: 361, column: 5, scope: !3570)
!3608 = !DILocation(line: 361, column: 23, scope: !3570)
!3609 = !DILocation(line: 361, column: 37, scope: !3570)
!3610 = !DILocation(line: 366, column: 47, scope: !3570)
!3611 = !DILocation(line: 367, column: 33, scope: !3570)
!3612 = !DILocation(line: 365, column: 5, scope: !3570)
!3613 = !DILocation(line: 365, column: 23, scope: !3570)
!3614 = !DILocation(line: 365, column: 31, scope: !3570)
!3615 = !DILocation(line: 369, column: 5, scope: !3570)
!3616 = !DILocation(line: 369, column: 29, scope: !3570)
!3617 = distinct !{!3617, !3615, !3618}
!3618 = !DILocation(line: 369, column: 39, scope: !3570)
!3619 = !DILocation(line: 370, column: 23, scope: !3570)
!3620 = !DILocation(line: 370, column: 33, scope: !3570)
!3621 = !DILocation(line: 371, column: 5, scope: !3570)
!3622 = !DILocation(line: 371, column: 23, scope: !3570)
!3623 = !DILocation(line: 371, column: 34, scope: !3570)
!3624 = !DILocation(line: 373, column: 28, scope: !3570)
!3625 = !DILocation(line: 373, column: 5, scope: !3570)
!3626 = !DILocation(line: 375, column: 44, scope: !3570)
!3627 = !DILocation(line: 377, column: 5, scope: !3570)
!3628 = !DILocation(line: 378, column: 1, scope: !3570)
!3629 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2891, file: !2891, line: 382, type: !3552, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3630)
!3630 = !{!3631}
!3631 = !DILocalVariable(name: "us", arg: 1, scope: !3629, file: !2891, line: 382, type: !61)
!3632 = !DILocation(line: 0, scope: !3629)
!3633 = !DILocation(line: 385, column: 40, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3629, file: !2891, line: 385, column: 9)
!3635 = !DILocation(line: 385, column: 55, scope: !3634)
!3636 = !DILocation(line: 385, column: 9, scope: !3629)
!3637 = !DILocation(line: 388, column: 34, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3634, file: !2891, line: 385, column: 75)
!3639 = !DILocation(line: 388, column: 9, scope: !3638)
!3640 = !DILocation(line: 390, column: 55, scope: !3638)
!3641 = !DILocation(line: 391, column: 5, scope: !3638)
!3642 = !DILocation(line: 392, column: 20, scope: !3629)
!3643 = !DILocation(line: 392, column: 45, scope: !3629)
!3644 = !DILocation(line: 392, column: 5, scope: !3629)
!3645 = !DILocation(line: 394, column: 5, scope: !3629)
!3646 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2891, file: !2891, line: 398, type: !3328, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3647)
!3647 = !{!3648, !3649}
!3648 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3646, file: !2891, line: 398, type: !3331)
!3649 = !DILocalVariable(name: "mask", scope: !3646, file: !2891, line: 400, type: !60)
!3650 = !DILocation(line: 0, scope: !3646)
!3651 = !DILocation(line: 400, column: 5, scope: !3646)
!3652 = !DILocation(line: 400, column: 23, scope: !3646)
!3653 = !DILocation(line: 402, column: 9, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3646, file: !2891, line: 402, column: 9)
!3655 = !DILocation(line: 402, column: 9, scope: !3646)
!3656 = !DILocation(line: 413, column: 12, scope: !3646)
!3657 = !DILocation(line: 413, column: 10, scope: !3646)
!3658 = !DILocation(line: 415, column: 5, scope: !3646)
!3659 = !DILocation(line: 415, column: 23, scope: !3646)
!3660 = !DILocation(line: 415, column: 34, scope: !3646)
!3661 = !DILocation(line: 418, column: 5, scope: !3646)
!3662 = !DILocation(line: 418, column: 23, scope: !3646)
!3663 = !DILocation(line: 418, column: 34, scope: !3646)
!3664 = !DILocation(line: 420, column: 5, scope: !3646)
!3665 = !DILocation(line: 420, column: 23, scope: !3646)
!3666 = !DILocation(line: 420, column: 35, scope: !3646)
!3667 = !DILocation(line: 422, column: 29, scope: !3646)
!3668 = !DILocation(line: 422, column: 44, scope: !3646)
!3669 = !DILocation(line: 423, column: 28, scope: !3646)
!3670 = !DILocation(line: 423, column: 5, scope: !3646)
!3671 = !DILocation(line: 425, column: 33, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3646, file: !2891, line: 425, column: 9)
!3673 = !DILocation(line: 425, column: 9, scope: !3646)
!3674 = !DILocation(line: 427, column: 53, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3672, file: !2891, line: 425, column: 62)
!3676 = !DILocation(line: 428, column: 5, scope: !3675)
!3677 = !DILocation(line: 430, column: 1, scope: !3646)
!3678 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2891, file: !2891, line: 434, type: !3679, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3681)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!3330, !1395}
!3681 = !{!3682, !3683, !3684}
!3682 = !DILocalVariable(name: "handle", arg: 1, scope: !3678, file: !2891, line: 434, type: !1395)
!3683 = !DILocalVariable(name: "timer", scope: !3678, file: !2891, line: 436, type: !61)
!3684 = !DILocalVariable(name: "mask", scope: !3678, file: !2891, line: 437, type: !61)
!3685 = !DILocation(line: 0, scope: !3678)
!3686 = !DILocation(line: 439, column: 24, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3678, file: !2891, line: 439, column: 9)
!3688 = !DILocation(line: 439, column: 41, scope: !3687)
!3689 = !DILocation(line: 439, column: 9, scope: !3678)
!3690 = !DILocation(line: 443, column: 16, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3678, file: !2891, line: 443, column: 9)
!3692 = !DILocation(line: 443, column: 9, scope: !3678)
!3693 = !DILocation(line: 448, column: 12, scope: !3678)
!3694 = !DILocation(line: 450, column: 15, scope: !3678)
!3695 = !DILocation(line: 451, column: 21, scope: !3678)
!3696 = !DILocation(line: 451, column: 13, scope: !3678)
!3697 = !DILocation(line: 452, column: 33, scope: !3678)
!3698 = !DILocation(line: 452, column: 41, scope: !3678)
!3699 = !DILocation(line: 453, column: 36, scope: !3678)
!3700 = !DILocation(line: 455, column: 5, scope: !3678)
!3701 = !DILocation(line: 456, column: 5, scope: !3678)
!3702 = !DILocation(line: 457, column: 1, scope: !3678)
!3703 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2891, file: !2891, line: 459, type: !3552, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3704)
!3704 = !{!3705, !3706}
!3705 = !DILocalVariable(name: "handle", arg: 1, scope: !3703, file: !2891, line: 459, type: !61)
!3706 = !DILocalVariable(name: "timer", scope: !3703, file: !2891, line: 461, type: !60)
!3707 = !DILocation(line: 0, scope: !3703)
!3708 = !DILocation(line: 461, column: 5, scope: !3703)
!3709 = !DILocation(line: 461, column: 23, scope: !3703)
!3710 = !DILocation(line: 463, column: 17, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3703, file: !2891, line: 463, column: 9)
!3712 = !DILocation(line: 463, column: 37, scope: !3711)
!3713 = !DILocation(line: 463, column: 9, scope: !3703)
!3714 = !DILocation(line: 467, column: 20, scope: !3703)
!3715 = !DILocation(line: 467, column: 11, scope: !3703)
!3716 = !DILocation(line: 469, column: 24, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3703, file: !2891, line: 469, column: 9)
!3718 = !DILocation(line: 469, column: 41, scope: !3717)
!3719 = !DILocation(line: 469, column: 9, scope: !3703)
!3720 = !DILocation(line: 473, column: 30, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3703, file: !2891, line: 473, column: 9)
!3722 = !DILocation(line: 473, column: 37, scope: !3721)
!3723 = !DILocation(line: 473, column: 9, scope: !3703)
!3724 = !DILocation(line: 477, column: 30, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3703, file: !2891, line: 477, column: 9)
!3726 = !DILocation(line: 477, column: 37, scope: !3725)
!3727 = !DILocation(line: 477, column: 45, scope: !3725)
!3728 = !DILocation(line: 477, column: 9, scope: !3703)
!3729 = !DILocation(line: 481, column: 26, scope: !3703)
!3730 = !DILocation(line: 481, column: 33, scope: !3703)
!3731 = !DILocation(line: 481, column: 41, scope: !3703)
!3732 = !DILocation(line: 482, column: 36, scope: !3703)
!3733 = !DILocation(line: 484, column: 5, scope: !3703)
!3734 = !DILocation(line: 485, column: 1, scope: !3703)
!3735 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2891, file: !2891, line: 487, type: !3736, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!3330, !61, !61, !307, !88}
!3738 = !{!3739, !3740, !3741, !3742, !3743, !3744, !3745}
!3739 = !DILocalVariable(name: "handle", arg: 1, scope: !3735, file: !2891, line: 487, type: !61)
!3740 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3735, file: !2891, line: 487, type: !61)
!3741 = !DILocalVariable(name: "callback", arg: 3, scope: !3735, file: !2891, line: 487, type: !307)
!3742 = !DILocalVariable(name: "user_data", arg: 4, scope: !3735, file: !2891, line: 487, type: !88)
!3743 = !DILocalVariable(name: "current_time", scope: !3735, file: !2891, line: 489, type: !61)
!3744 = !DILocalVariable(name: "mask", scope: !3735, file: !2891, line: 490, type: !61)
!3745 = !DILocalVariable(name: "timer", scope: !3735, file: !2891, line: 491, type: !61)
!3746 = !DILocation(line: 0, scope: !3735)
!3747 = !DILocation(line: 493, column: 17, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3735, file: !2891, line: 493, column: 9)
!3749 = !DILocation(line: 493, column: 37, scope: !3748)
!3750 = !DILocation(line: 493, column: 9, scope: !3735)
!3751 = !DILocation(line: 497, column: 20, scope: !3735)
!3752 = !DILocation(line: 503, column: 37, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3735, file: !2891, line: 503, column: 9)
!3754 = !DILocation(line: 503, column: 9, scope: !3735)
!3755 = !DILocation(line: 507, column: 37, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3735, file: !2891, line: 507, column: 9)
!3757 = !DILocation(line: 507, column: 45, scope: !3756)
!3758 = !DILocation(line: 507, column: 9, scope: !3735)
!3759 = !DILocation(line: 511, column: 25, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3735, file: !2891, line: 511, column: 9)
!3761 = !DILocation(line: 511, column: 9, scope: !3735)
!3762 = !DILocation(line: 516, column: 12, scope: !3735)
!3763 = !DILocation(line: 519, column: 30, scope: !3735)
!3764 = !DILocation(line: 521, column: 24, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3735, file: !2891, line: 521, column: 9)
!3766 = !DILocation(line: 521, column: 38, scope: !3765)
!3767 = !DILocation(line: 521, column: 9, scope: !3735)
!3768 = !DILocation(line: 522, column: 9, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3765, file: !2891, line: 521, column: 48)
!3770 = !DILocation(line: 523, column: 9, scope: !3769)
!3771 = !DILocation(line: 524, column: 38, scope: !3769)
!3772 = !DILocation(line: 525, column: 5, scope: !3769)
!3773 = !DILocation(line: 526, column: 5, scope: !3735)
!3774 = !DILocation(line: 528, column: 23, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3735, file: !2891, line: 528, column: 8)
!3776 = !DILocation(line: 528, column: 41, scope: !3775)
!3777 = !DILocation(line: 528, column: 8, scope: !3735)
!3778 = !DILocation(line: 529, column: 51, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !2891, line: 528, column: 51)
!3780 = !DILocation(line: 529, column: 24, scope: !3779)
!3781 = !DILocation(line: 530, column: 5, scope: !3779)
!3782 = !DILocation(line: 0, scope: !3775)
!3783 = !DILocation(line: 534, column: 34, scope: !3735)
!3784 = !DILocation(line: 535, column: 39, scope: !3735)
!3785 = !DILocation(line: 537, column: 49, scope: !3735)
!3786 = !DILocation(line: 538, column: 80, scope: !3735)
!3787 = !DILocation(line: 538, column: 33, scope: !3735)
!3788 = !DILocation(line: 538, column: 49, scope: !3735)
!3789 = !DILocation(line: 539, column: 50, scope: !3735)
!3790 = !DILocation(line: 539, column: 61, scope: !3735)
!3791 = !DILocation(line: 540, column: 50, scope: !3735)
!3792 = !DILocation(line: 540, column: 61, scope: !3735)
!3793 = !DILocation(line: 542, column: 5, scope: !3735)
!3794 = !DILocation(line: 546, column: 30, scope: !3735)
!3795 = !DILocation(line: 548, column: 5, scope: !3735)
!3796 = !DILocation(line: 550, column: 5, scope: !3735)
!3797 = !DILocation(line: 551, column: 1, scope: !3735)
!3798 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2891, file: !2891, line: 553, type: !3552, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3799)
!3799 = !{!3800, !3801, !3802, !3803}
!3800 = !DILocalVariable(name: "handle", arg: 1, scope: !3798, file: !2891, line: 553, type: !61)
!3801 = !DILocalVariable(name: "current_time", scope: !3798, file: !2891, line: 555, type: !61)
!3802 = !DILocalVariable(name: "mask", scope: !3798, file: !2891, line: 556, type: !61)
!3803 = !DILocalVariable(name: "timer", scope: !3798, file: !2891, line: 557, type: !61)
!3804 = !DILocation(line: 0, scope: !3798)
!3805 = !DILocation(line: 559, column: 17, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3798, file: !2891, line: 559, column: 9)
!3807 = !DILocation(line: 559, column: 37, scope: !3806)
!3808 = !DILocation(line: 559, column: 9, scope: !3798)
!3809 = !DILocation(line: 563, column: 20, scope: !3798)
!3810 = !DILocation(line: 565, column: 37, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3798, file: !2891, line: 565, column: 9)
!3812 = !DILocation(line: 565, column: 48, scope: !3811)
!3813 = !DILocation(line: 565, column: 9, scope: !3798)
!3814 = !DILocation(line: 569, column: 37, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3798, file: !2891, line: 569, column: 9)
!3816 = !DILocation(line: 569, column: 45, scope: !3815)
!3817 = !DILocation(line: 569, column: 9, scope: !3798)
!3818 = !DILocation(line: 574, column: 12, scope: !3798)
!3819 = !DILocation(line: 577, column: 30, scope: !3798)
!3820 = !DILocation(line: 578, column: 5, scope: !3798)
!3821 = !DILocation(line: 579, column: 30, scope: !3798)
!3822 = !DILocation(line: 581, column: 23, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3798, file: !2891, line: 581, column: 8)
!3824 = !DILocation(line: 581, column: 41, scope: !3823)
!3825 = !DILocation(line: 581, column: 8, scope: !3798)
!3826 = !DILocation(line: 582, column: 51, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3823, file: !2891, line: 581, column: 51)
!3828 = !DILocation(line: 582, column: 24, scope: !3827)
!3829 = !DILocation(line: 583, column: 5, scope: !3827)
!3830 = !DILocation(line: 0, scope: !3823)
!3831 = !DILocation(line: 587, column: 34, scope: !3798)
!3832 = !DILocation(line: 588, column: 39, scope: !3798)
!3833 = !DILocation(line: 590, column: 44, scope: !3798)
!3834 = !DILocation(line: 592, column: 24, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3798, file: !2891, line: 592, column: 9)
!3836 = !DILocation(line: 592, column: 44, scope: !3835)
!3837 = !DILocation(line: 592, column: 9, scope: !3798)
!3838 = !DILocation(line: 593, column: 9, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !2891, line: 592, column: 50)
!3840 = !DILocation(line: 594, column: 5, scope: !3839)
!3841 = !DILocation(line: 598, column: 30, scope: !3798)
!3842 = !DILocation(line: 599, column: 5, scope: !3798)
!3843 = !DILocation(line: 601, column: 5, scope: !3798)
!3844 = !DILocation(line: 603, column: 1, scope: !3798)
!3845 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2891, file: !2891, line: 605, type: !3846, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !3848)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!3330, !61, !1395}
!3848 = !{!3849, !3850, !3851, !3852, !3853}
!3849 = !DILocalVariable(name: "handle", arg: 1, scope: !3845, file: !2891, line: 605, type: !61)
!3850 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3845, file: !2891, line: 605, type: !1395)
!3851 = !DILocalVariable(name: "current_time", scope: !3845, file: !2891, line: 607, type: !61)
!3852 = !DILocalVariable(name: "mask", scope: !3845, file: !2891, line: 608, type: !61)
!3853 = !DILocalVariable(name: "timer", scope: !3845, file: !2891, line: 609, type: !61)
!3854 = !DILocation(line: 0, scope: !3845)
!3855 = !DILocation(line: 611, column: 17, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3845, file: !2891, line: 611, column: 9)
!3857 = !DILocation(line: 611, column: 37, scope: !3856)
!3858 = !DILocation(line: 611, column: 9, scope: !3845)
!3859 = !DILocation(line: 615, column: 20, scope: !3845)
!3860 = !DILocation(line: 617, column: 37, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3845, file: !2891, line: 617, column: 9)
!3862 = !DILocation(line: 617, column: 45, scope: !3861)
!3863 = !DILocation(line: 617, column: 9, scope: !3845)
!3864 = !DILocation(line: 622, column: 12, scope: !3845)
!3865 = !DILocation(line: 624, column: 35, scope: !3845)
!3866 = !DILocation(line: 624, column: 51, scope: !3845)
!3867 = !DILocation(line: 624, column: 76, scope: !3845)
!3868 = !DILocation(line: 624, column: 49, scope: !3845)
!3869 = !DILocation(line: 626, column: 37, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3845, file: !2891, line: 626, column: 9)
!3871 = !DILocation(line: 626, column: 9, scope: !3845)
!3872 = !DILocation(line: 0, scope: !3870)
!3873 = !DILocation(line: 632, column: 5, scope: !3845)
!3874 = !DILocation(line: 634, column: 5, scope: !3845)
!3875 = !DILocation(line: 636, column: 1, scope: !3845)
!3876 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3877, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3879)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!61, !61, !61, !61}
!3879 = !{!3880, !3881, !3882, !3883, !3885, !3886}
!3880 = !DILocalVariable(name: "mul1", arg: 1, scope: !3876, file: !95, line: 56, type: !61)
!3881 = !DILocalVariable(name: "mul2", arg: 2, scope: !3876, file: !95, line: 56, type: !61)
!3882 = !DILocalVariable(name: "div", arg: 3, scope: !3876, file: !95, line: 56, type: !61)
!3883 = !DILocalVariable(name: "data1", scope: !3876, file: !95, line: 58, type: !3884)
!3884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !480)
!3885 = !DILocalVariable(name: "data2", scope: !3876, file: !95, line: 59, type: !3884)
!3886 = !DILocalVariable(name: "result", scope: !3876, file: !95, line: 60, type: !3884)
!3887 = !DILocation(line: 0, scope: !3876)
!3888 = !DILocation(line: 63, column: 22, scope: !3876)
!3889 = !DILocation(line: 63, column: 32, scope: !3876)
!3890 = !DILocation(line: 64, column: 23, scope: !3876)
!3891 = !DILocation(line: 64, column: 40, scope: !3876)
!3892 = !DILocation(line: 66, column: 27, scope: !3876)
!3893 = !DILocation(line: 67, column: 27, scope: !3876)
!3894 = !DILocation(line: 67, column: 44, scope: !3876)
!3895 = !DILocation(line: 69, column: 26, scope: !3876)
!3896 = !DILocation(line: 70, column: 36, scope: !3876)
!3897 = !DILocation(line: 70, column: 43, scope: !3876)
!3898 = !DILocation(line: 70, column: 55, scope: !3876)
!3899 = !DILocation(line: 72, column: 34, scope: !3876)
!3900 = !DILocation(line: 72, column: 41, scope: !3876)
!3901 = !DILocation(line: 72, column: 5, scope: !3876)
!3902 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3903, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3905)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!61, !264}
!3905 = !{!3906}
!3906 = !DILocalVariable(name: "gpt", arg: 1, scope: !3902, file: !95, line: 75, type: !264)
!3907 = !DILocation(line: 0, scope: !3902)
!3908 = !DILocation(line: 77, column: 17, scope: !3902)
!3909 = !DILocation(line: 77, column: 5, scope: !3902)
!3910 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3911, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!61, !61}
!3913 = !{!3914}
!3914 = !DILocalVariable(name: "ms", arg: 1, scope: !3910, file: !95, line: 81, type: !61)
!3915 = !DILocation(line: 0, scope: !3910)
!3916 = !DILocation(line: 83, column: 27, scope: !3910)
!3917 = !DILocation(line: 83, column: 37, scope: !3910)
!3918 = !DILocation(line: 83, column: 43, scope: !3910)
!3919 = !DILocation(line: 83, column: 32, scope: !3910)
!3920 = !DILocation(line: 83, column: 53, scope: !3910)
!3921 = !DILocation(line: 83, column: 59, scope: !3910)
!3922 = !DILocation(line: 83, column: 48, scope: !3910)
!3923 = !DILocation(line: 83, column: 70, scope: !3910)
!3924 = !DILocation(line: 83, column: 76, scope: !3910)
!3925 = !DILocation(line: 83, column: 65, scope: !3910)
!3926 = !DILocation(line: 83, column: 5, scope: !3910)
!3927 = !DILocation(line: 90, column: 9, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3929 = !DILocation(line: 90, column: 9, scope: !290)
!3930 = !DILocation(line: 91, column: 13, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !95, line: 91, column: 13)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !95, line: 90, column: 24)
!3933 = !DILocation(line: 91, column: 13, scope: !3932)
!3934 = !DILocation(line: 92, column: 32, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !95, line: 91, column: 41)
!3936 = !DILocation(line: 92, column: 30, scope: !3935)
!3937 = !DILocation(line: 93, column: 41, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3935, file: !95, line: 93, column: 17)
!3939 = !DILocation(line: 0, scope: !3931)
!3940 = !DILocation(line: 105, column: 1, scope: !290)
!3941 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3942 = !DILocation(line: 109, column: 9, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3941, file: !95, line: 109, column: 9)
!3944 = !DILocation(line: 109, column: 9, scope: !3941)
!3945 = !DILocation(line: 110, column: 9, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3943, file: !95, line: 109, column: 61)
!3947 = !DILocation(line: 111, column: 5, scope: !3946)
!3948 = !DILocation(line: 112, column: 1, scope: !3941)
!3949 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3911, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3950)
!3950 = !{!3951}
!3951 = !DILocalVariable(name: "time_us", arg: 1, scope: !3949, file: !95, line: 114, type: !61)
!3952 = !DILocation(line: 0, scope: !3949)
!3953 = !DILocation(line: 116, column: 5, scope: !3949)
!3954 = !DILocation(line: 118, column: 9, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3949, file: !95, line: 118, column: 9)
!3956 = !DILocation(line: 118, column: 9, scope: !3949)
!3957 = !DILocation(line: 120, column: 49, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3955, file: !95, line: 118, column: 37)
!3959 = !DILocation(line: 120, column: 16, scope: !3958)
!3960 = !DILocation(line: 120, column: 9, scope: !3958)
!3961 = !DILocation(line: 0, scope: !3955)
!3962 = !DILocation(line: 125, column: 1, scope: !3949)
!3963 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3911, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3964)
!3964 = !{!3965}
!3965 = !DILocalVariable(name: "count", arg: 1, scope: !3963, file: !95, line: 127, type: !61)
!3966 = !DILocation(line: 0, scope: !3963)
!3967 = !DILocation(line: 129, column: 5, scope: !3963)
!3968 = !DILocation(line: 131, column: 9, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3963, file: !95, line: 131, column: 9)
!3970 = !DILocation(line: 131, column: 9, scope: !3963)
!3971 = !DILocation(line: 133, column: 69, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3969, file: !95, line: 131, column: 37)
!3973 = !DILocation(line: 133, column: 16, scope: !3972)
!3974 = !DILocation(line: 133, column: 9, scope: !3972)
!3975 = !DILocation(line: 0, scope: !3969)
!3976 = !DILocation(line: 138, column: 1, scope: !3963)
!3977 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3978, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{null, !264, !61, !61}
!3980 = !{!3981, !3982, !3983}
!3981 = !DILocalVariable(name: "gpt", arg: 1, scope: !3977, file: !95, line: 141, type: !264)
!3982 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3977, file: !95, line: 141, type: !61)
!3983 = !DILocalVariable(name: "divide", arg: 3, scope: !3977, file: !95, line: 141, type: !61)
!3984 = !DILocation(line: 0, scope: !3977)
!3985 = !DILocation(line: 143, column: 5, scope: !3977)
!3986 = !DILocation(line: 145, column: 33, scope: !3977)
!3987 = !DILocation(line: 145, column: 10, scope: !3977)
!3988 = !DILocation(line: 145, column: 18, scope: !3977)
!3989 = !DILocation(line: 148, column: 10, scope: !3977)
!3990 = !DILocation(line: 148, column: 18, scope: !3977)
!3991 = !DILocation(line: 149, column: 1, scope: !3977)
!3992 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3993, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3995)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{null, !264, !979}
!3995 = !{!3996, !3997, !3998, !3999}
!3996 = !DILocalVariable(name: "gpt", arg: 1, scope: !3992, file: !95, line: 151, type: !264)
!3997 = !DILocalVariable(name: "count", arg: 2, scope: !3992, file: !95, line: 151, type: !979)
!3998 = !DILocalVariable(name: "end_count", scope: !3992, file: !95, line: 153, type: !61)
!3999 = !DILocalVariable(name: "current", scope: !3992, file: !95, line: 153, type: !61)
!4000 = !DILocation(line: 0, scope: !3992)
!4001 = !DILocation(line: 155, column: 17, scope: !3992)
!4002 = !DILocation(line: 156, column: 25, scope: !3992)
!4003 = !DILocation(line: 156, column: 33, scope: !3992)
!4004 = !DILocation(line: 159, column: 19, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3992, file: !95, line: 159, column: 9)
!4006 = !DILocation(line: 159, column: 9, scope: !3992)
!4007 = !DILocation(line: 160, column: 16, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4005, file: !95, line: 159, column: 30)
!4009 = !DILocation(line: 160, column: 39, scope: !4008)
!4010 = !DILocation(line: 160, column: 9, scope: !4008)
!4011 = distinct !{!4011, !4010, !4012}
!4012 = !DILocation(line: 160, column: 51, scope: !4008)
!4013 = !DILocation(line: 162, column: 16, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4005, file: !95, line: 161, column: 12)
!4015 = !DILocation(line: 162, column: 39, scope: !4014)
!4016 = !DILocation(line: 162, column: 9, scope: !4014)
!4017 = distinct !{!4017, !4016, !4018}
!4018 = !DILocation(line: 162, column: 50, scope: !4014)
!4019 = !DILocation(line: 163, column: 16, scope: !4014)
!4020 = !DILocation(line: 163, column: 39, scope: !4014)
!4021 = !DILocation(line: 163, column: 9, scope: !4014)
!4022 = distinct !{!4022, !4021, !4023}
!4023 = !DILocation(line: 163, column: 51, scope: !4014)
!4024 = !DILocation(line: 165, column: 1, scope: !3992)
!4025 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !4026, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{null, !264}
!4028 = !{!4029}
!4029 = !DILocalVariable(name: "gpt", arg: 1, scope: !4025, file: !95, line: 166, type: !264)
!4030 = !DILocation(line: 0, scope: !4025)
!4031 = !DILocation(line: 168, column: 10, scope: !4025)
!4032 = !DILocation(line: 168, column: 22, scope: !4025)
!4033 = !DILocation(line: 169, column: 10, scope: !4025)
!4034 = !DILocation(line: 169, column: 22, scope: !4025)
!4035 = !DILocation(line: 170, column: 21, scope: !4025)
!4036 = !DILocation(line: 171, column: 5, scope: !4025)
!4037 = !DILocation(line: 171, column: 16, scope: !4025)
!4038 = distinct !{!4038, !4036, !4039}
!4039 = !DILocation(line: 171, column: 26, scope: !4025)
!4040 = !DILocation(line: 172, column: 10, scope: !4025)
!4041 = !DILocation(line: 172, column: 22, scope: !4025)
!4042 = !DILocation(line: 173, column: 10, scope: !4025)
!4043 = !DILocation(line: 173, column: 22, scope: !4025)
!4044 = !DILocation(line: 174, column: 10, scope: !4025)
!4045 = !DILocation(line: 174, column: 22, scope: !4025)
!4046 = !DILocation(line: 176, column: 13, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4025, file: !95, line: 176, column: 9)
!4048 = !DILocation(line: 176, column: 9, scope: !4025)
!4049 = !DILocation(line: 177, column: 27, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4047, file: !95, line: 176, column: 22)
!4051 = !DILocation(line: 178, column: 5, scope: !4050)
!4052 = !DILocation(line: 179, column: 1, scope: !4025)
!4053 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3903, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4054)
!4054 = !{!4055, !4056}
!4055 = !DILocalVariable(name: "gpt", arg: 1, scope: !4053, file: !95, line: 181, type: !264)
!4056 = !DILocalVariable(name: "mask", scope: !4053, file: !95, line: 183, type: !60)
!4057 = !DILocation(line: 0, scope: !4053)
!4058 = !DILocation(line: 183, column: 5, scope: !4053)
!4059 = !DILocation(line: 183, column: 23, scope: !4053)
!4060 = !DILocation(line: 185, column: 17, scope: !4053)
!4061 = !DILocation(line: 185, column: 10, scope: !4053)
!4062 = !DILocation(line: 187, column: 22, scope: !4053)
!4063 = !DILocation(line: 189, column: 12, scope: !4053)
!4064 = !DILocation(line: 190, column: 1, scope: !4053)
!4065 = !DILocation(line: 189, column: 5, scope: !4053)
!4066 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !4067, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !264, !61}
!4069 = !{!4070, !4071}
!4070 = !DILocalVariable(name: "gpt", arg: 1, scope: !4066, file: !95, line: 192, type: !264)
!4071 = !DILocalVariable(name: "mask", arg: 2, scope: !4066, file: !95, line: 192, type: !61)
!4072 = !DILocation(line: 0, scope: !4066)
!4073 = !DILocation(line: 194, column: 10, scope: !4066)
!4074 = !DILocation(line: 194, column: 21, scope: !4066)
!4075 = !DILocation(line: 195, column: 1, scope: !4066)
!4076 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !526, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4077)
!4077 = !{!4078, !4079, !4080, !4081, !4082}
!4078 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4076, file: !95, line: 197, type: !528)
!4079 = !DILocalVariable(name: "i", scope: !4076, file: !95, line: 199, type: !61)
!4080 = !DILocalVariable(name: "mask", scope: !4076, file: !95, line: 200, type: !60)
!4081 = !DILocalVariable(name: "state", scope: !4076, file: !95, line: 201, type: !60)
!4082 = !DILocalVariable(name: "enable", scope: !4076, file: !95, line: 202, type: !60)
!4083 = !DILocation(line: 0, scope: !4076)
!4084 = !DILocation(line: 200, column: 5, scope: !4076)
!4085 = !DILocation(line: 200, column: 23, scope: !4076)
!4086 = !DILocation(line: 201, column: 5, scope: !4076)
!4087 = !DILocation(line: 201, column: 23, scope: !4076)
!4088 = !DILocation(line: 202, column: 5, scope: !4076)
!4089 = !DILocation(line: 202, column: 23, scope: !4076)
!4090 = !DILocation(line: 207, column: 5, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4076, file: !95, line: 207, column: 5)
!4092 = !DILocation(line: 209, column: 18, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !95, line: 207, column: 44)
!4094 = distinct !DILexicalBlock(scope: !4091, file: !95, line: 207, column: 5)
!4095 = !DILocation(line: 209, column: 29, scope: !4093)
!4096 = !DILocation(line: 209, column: 16, scope: !4093)
!4097 = !DILocation(line: 210, column: 29, scope: !4093)
!4098 = !DILocation(line: 210, column: 16, scope: !4093)
!4099 = !DILocation(line: 212, column: 16, scope: !4093)
!4100 = !DILocation(line: 212, column: 14, scope: !4093)
!4101 = !DILocation(line: 214, column: 9, scope: !4093)
!4102 = !DILocation(line: 214, column: 20, scope: !4093)
!4103 = !DILocation(line: 214, column: 32, scope: !4093)
!4104 = !DILocation(line: 216, column: 14, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4093, file: !95, line: 216, column: 13)
!4106 = !DILocation(line: 216, column: 20, scope: !4105)
!4107 = !DILocation(line: 216, column: 40, scope: !4105)
!4108 = !DILocation(line: 216, column: 44, scope: !4105)
!4109 = !DILocation(line: 216, column: 51, scope: !4105)
!4110 = !DILocation(line: 216, column: 13, scope: !4093)
!4111 = !DILocation(line: 224, column: 51, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !95, line: 224, column: 17)
!4113 = distinct !DILexicalBlock(scope: !4105, file: !95, line: 216, column: 70)
!4114 = !DILocation(line: 224, column: 60, scope: !4112)
!4115 = !DILocation(line: 224, column: 17, scope: !4113)
!4116 = !DILocation(line: 225, column: 94, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4112, file: !95, line: 224, column: 69)
!4118 = !DILocation(line: 225, column: 17, scope: !4117)
!4119 = !DILocation(line: 226, column: 13, scope: !4117)
!4120 = !DILocation(line: 229, column: 31, scope: !4093)
!4121 = !DILocation(line: 229, column: 42, scope: !4093)
!4122 = !DILocation(line: 229, column: 9, scope: !4093)
!4123 = !DILocation(line: 207, column: 40, scope: !4094)
!4124 = !DILocation(line: 207, column: 19, scope: !4094)
!4125 = distinct !{!4125, !4090, !4126}
!4126 = !DILocation(line: 231, column: 5, scope: !4091)
!4127 = !DILocation(line: 233, column: 1, scope: !4076)
!4128 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!4129 = !DILocation(line: 238, column: 5, scope: !4128)
!4130 = !DILocation(line: 239, column: 5, scope: !4128)
!4131 = !DILocation(line: 240, column: 5, scope: !4128)
!4132 = !DILocation(line: 241, column: 1, scope: !4128)
!4133 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3903, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4134)
!4134 = !{!4135, !4136, !4137, !4138, !4139}
!4135 = !DILocalVariable(name: "gpt", arg: 1, scope: !4133, file: !95, line: 242, type: !264)
!4136 = !DILocalVariable(name: "time", scope: !4133, file: !95, line: 244, type: !60)
!4137 = !DILocalVariable(name: "count", scope: !4133, file: !95, line: 245, type: !61)
!4138 = !DILocalVariable(name: "time_s", scope: !4133, file: !95, line: 245, type: !61)
!4139 = !DILocalVariable(name: "time_ms", scope: !4133, file: !95, line: 245, type: !61)
!4140 = !DILocation(line: 0, scope: !4133)
!4141 = !DILocation(line: 244, column: 5, scope: !4133)
!4142 = !DILocation(line: 244, column: 23, scope: !4133)
!4143 = !DILocation(line: 247, column: 13, scope: !4133)
!4144 = !DILocation(line: 248, column: 20, scope: !4133)
!4145 = !DILocation(line: 249, column: 23, scope: !4133)
!4146 = !DILocation(line: 249, column: 32, scope: !4133)
!4147 = !DILocation(line: 249, column: 39, scope: !4133)
!4148 = !DILocation(line: 249, column: 48, scope: !4133)
!4149 = !DILocation(line: 250, column: 19, scope: !4133)
!4150 = !DILocation(line: 250, column: 26, scope: !4133)
!4151 = !DILocation(line: 250, column: 10, scope: !4133)
!4152 = !DILocation(line: 253, column: 5, scope: !4133)
!4153 = !DILocation(line: 253, column: 30, scope: !4133)
!4154 = !DILocation(line: 253, column: 38, scope: !4133)
!4155 = !DILocation(line: 254, column: 5, scope: !4133)
!4156 = !DILocation(line: 254, column: 36, scope: !4133)
!4157 = distinct !{!4157, !4155, !4158}
!4158 = !DILocation(line: 254, column: 46, scope: !4133)
!4159 = !DILocation(line: 255, column: 12, scope: !4133)
!4160 = !DILocation(line: 256, column: 1, scope: !4133)
!4161 = !DILocation(line: 255, column: 5, scope: !4133)
!4162 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !4163, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4165)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!61}
!4165 = !{!4166}
!4166 = !DILocalVariable(name: "i", scope: !4162, file: !95, line: 260, type: !61)
!4167 = !DILocation(line: 0, scope: !4162)
!4168 = !DILocation(line: 262, column: 5, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4162, file: !95, line: 262, column: 5)
!4170 = !DILocation(line: 263, column: 37, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !95, line: 263, column: 13)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !95, line: 262, column: 45)
!4173 = distinct !DILexicalBlock(scope: !4169, file: !95, line: 262, column: 5)
!4174 = !DILocation(line: 263, column: 45, scope: !4171)
!4175 = !DILocation(line: 263, column: 13, scope: !4172)
!4176 = !DILocation(line: 262, column: 41, scope: !4173)
!4177 = !DILocation(line: 262, column: 19, scope: !4173)
!4178 = distinct !{!4178, !4168, !4179}
!4179 = !DILocation(line: 266, column: 5, scope: !4169)
!4180 = !DILocation(line: 269, column: 1, scope: !4162)
!4181 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4182)
!4182 = !{!4183, !4184}
!4183 = !DILocalVariable(name: "minimum_time", scope: !4181, file: !95, line: 273, type: !61)
!4184 = !DILocalVariable(name: "current_timer", scope: !4181, file: !95, line: 273, type: !61)
!4185 = !DILocation(line: 273, column: 5, scope: !4181)
!4186 = !DILocation(line: 275, column: 24, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4181, file: !95, line: 275, column: 9)
!4188 = !DILocation(line: 275, column: 9, scope: !4181)
!4189 = !DILocation(line: 0, scope: !4181)
!4190 = !DILocation(line: 279, column: 5, scope: !4181)
!4191 = !DILocation(line: 282, column: 56, scope: !4181)
!4192 = !DILocation(line: 282, column: 39, scope: !4181)
!4193 = !DILocation(line: 284, column: 30, scope: !4181)
!4194 = !DILocation(line: 285, column: 45, scope: !4181)
!4195 = !DILocation(line: 285, column: 5, scope: !4181)
!4196 = !DILocation(line: 286, column: 30, scope: !4181)
!4197 = !DILocation(line: 287, column: 1, scope: !4181)
!4198 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !4199, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4201)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{null, !1395, !1395}
!4201 = !{!4202, !4203, !4204, !4205, !4206}
!4202 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4198, file: !95, line: 308, type: !1395)
!4203 = !DILocalVariable(name: "number", arg: 2, scope: !4198, file: !95, line: 308, type: !1395)
!4204 = !DILocalVariable(name: "i", scope: !4198, file: !95, line: 310, type: !61)
!4205 = !DILocalVariable(name: "minimum", scope: !4198, file: !95, line: 311, type: !61)
!4206 = !DILocalVariable(name: "data", scope: !4198, file: !95, line: 312, type: !61)
!4207 = !DILocation(line: 0, scope: !4198)
!4208 = !DILocation(line: 314, column: 5, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4198, file: !95, line: 314, column: 5)
!4210 = !DILocation(line: 315, column: 37, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !95, line: 315, column: 13)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !95, line: 314, column: 45)
!4213 = distinct !DILexicalBlock(scope: !4209, file: !95, line: 314, column: 5)
!4214 = !DILocation(line: 315, column: 13, scope: !4212)
!4215 = !DILocation(line: 316, column: 20, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4211, file: !95, line: 315, column: 57)
!4217 = !DILocation(line: 318, column: 22, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4216, file: !95, line: 318, column: 17)
!4219 = !DILocation(line: 318, column: 17, scope: !4216)
!4220 = !DILocation(line: 320, column: 25, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4218, file: !95, line: 318, column: 33)
!4222 = !DILocation(line: 321, column: 13, scope: !4221)
!4223 = !DILocation(line: 314, column: 41, scope: !4213)
!4224 = !DILocation(line: 314, column: 19, scope: !4213)
!4225 = distinct !{!4225, !4208, !4226}
!4226 = !DILocation(line: 323, column: 5, scope: !4209)
!4227 = !DILocation(line: 325, column: 19, scope: !4198)
!4228 = !DILocation(line: 326, column: 1, scope: !4198)
!4229 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3911, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4230)
!4230 = !{!4231, !4232, !4233, !4234}
!4231 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4229, file: !95, line: 289, type: !61)
!4232 = !DILocalVariable(name: "time_out_delta", scope: !4229, file: !95, line: 291, type: !61)
!4233 = !DILocalVariable(name: "current_delta", scope: !4229, file: !95, line: 292, type: !61)
!4234 = !DILocalVariable(name: "ret_value", scope: !4229, file: !95, line: 293, type: !61)
!4235 = !DILocation(line: 0, scope: !4229)
!4236 = !DILocation(line: 295, column: 22, scope: !4229)
!4237 = !DILocation(line: 296, column: 22, scope: !4229)
!4238 = !DILocation(line: 298, column: 24, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4229, file: !95, line: 298, column: 9)
!4240 = !DILocation(line: 298, column: 9, scope: !4229)
!4241 = !DILocation(line: 306, column: 5, scope: !4229)
!4242 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4243)
!4243 = !{!4244, !4245, !4246, !4247}
!4244 = !DILocalVariable(name: "parameter", arg: 1, scope: !4242, file: !95, line: 329, type: !88)
!4245 = !DILocalVariable(name: "i", scope: !4242, file: !95, line: 331, type: !61)
!4246 = !DILocalVariable(name: "time_ms", scope: !4242, file: !95, line: 332, type: !60)
!4247 = !DILocalVariable(name: "data", scope: !4242, file: !95, line: 333, type: !60)
!4248 = !DILocation(line: 0, scope: !4242)
!4249 = !DILocation(line: 332, column: 5, scope: !4242)
!4250 = !DILocation(line: 332, column: 23, scope: !4242)
!4251 = !DILocation(line: 333, column: 5, scope: !4242)
!4252 = !DILocation(line: 333, column: 23, scope: !4242)
!4253 = !DILocation(line: 336, column: 24, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4242, file: !95, line: 336, column: 9)
!4255 = !DILocation(line: 336, column: 41, scope: !4254)
!4256 = !DILocation(line: 336, column: 9, scope: !4242)
!4257 = !DILocation(line: 338, column: 34, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !95, line: 336, column: 47)
!4259 = !DILocation(line: 339, column: 9, scope: !4258)
!4260 = !DILocation(line: 340, column: 34, scope: !4258)
!4261 = !DILocation(line: 342, column: 46, scope: !4258)
!4262 = !DILocation(line: 342, column: 19, scope: !4258)
!4263 = !DILocation(line: 342, column: 17, scope: !4258)
!4264 = !DILocation(line: 344, column: 41, scope: !4258)
!4265 = !DILocation(line: 344, column: 38, scope: !4258)
!4266 = !DILocation(line: 345, column: 42, scope: !4258)
!4267 = !DILocation(line: 347, column: 9, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4258, file: !95, line: 347, column: 9)
!4269 = !DILocation(line: 348, column: 41, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !95, line: 348, column: 17)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !95, line: 347, column: 49)
!4272 = distinct !DILexicalBlock(scope: !4268, file: !95, line: 347, column: 9)
!4273 = !DILocation(line: 348, column: 17, scope: !4271)
!4274 = !DILocation(line: 350, column: 24, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !95, line: 348, column: 61)
!4276 = !DILocation(line: 350, column: 22, scope: !4275)
!4277 = !DILocation(line: 352, column: 21, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4275, file: !95, line: 352, column: 21)
!4279 = !DILocation(line: 352, column: 26, scope: !4278)
!4280 = !DILocation(line: 352, column: 21, scope: !4275)
!4281 = !DILocation(line: 353, column: 56, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !95, line: 352, column: 32)
!4283 = !DILocation(line: 354, column: 55, scope: !4282)
!4284 = !DILocation(line: 356, column: 62, scope: !4282)
!4285 = !DILocation(line: 356, column: 112, scope: !4282)
!4286 = !DILocation(line: 356, column: 21, scope: !4282)
!4287 = !DILocation(line: 357, column: 17, scope: !4282)
!4288 = !DILocation(line: 347, column: 45, scope: !4272)
!4289 = !DILocation(line: 347, column: 23, scope: !4272)
!4290 = distinct !{!4290, !4267, !4291}
!4291 = !DILocation(line: 360, column: 9, scope: !4268)
!4292 = !DILocation(line: 362, column: 42, scope: !4258)
!4293 = !DILocation(line: 364, column: 28, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4258, file: !95, line: 364, column: 13)
!4295 = !DILocation(line: 364, column: 48, scope: !4294)
!4296 = !DILocation(line: 364, column: 13, scope: !4258)
!4297 = !DILocation(line: 365, column: 13, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4294, file: !95, line: 364, column: 54)
!4299 = !DILocation(line: 366, column: 9, scope: !4298)
!4300 = !DILocation(line: 369, column: 1, scope: !4242)
!4301 = distinct !DISubprogram(name: "gdma_reset", scope: !346, file: !346, line: 138, type: !4302, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4304)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{null, !61}
!4304 = !{!4305}
!4305 = !DILocalVariable(name: "index", arg: 1, scope: !4301, file: !346, line: 138, type: !61)
!4306 = !DILocation(line: 0, scope: !4301)
!4307 = !DILocation(line: 142, column: 5, scope: !4301)
!4308 = !DILocation(line: 142, column: 18, scope: !4301)
!4309 = !DILocation(line: 142, column: 27, scope: !4301)
!4310 = !DILocation(line: 143, column: 5, scope: !4301)
!4311 = !DILocation(line: 143, column: 18, scope: !4301)
!4312 = !DILocation(line: 143, column: 29, scope: !4301)
!4313 = !DILocation(line: 144, column: 5, scope: !4301)
!4314 = !DILocation(line: 144, column: 18, scope: !4301)
!4315 = !DILocation(line: 144, column: 30, scope: !4301)
!4316 = !DILocation(line: 145, column: 5, scope: !4301)
!4317 = !DILocation(line: 145, column: 18, scope: !4301)
!4318 = !DILocation(line: 145, column: 27, scope: !4301)
!4319 = !DILocation(line: 146, column: 5, scope: !4301)
!4320 = !DILocation(line: 146, column: 18, scope: !4301)
!4321 = !DILocation(line: 146, column: 27, scope: !4301)
!4322 = !DILocation(line: 147, column: 5, scope: !4301)
!4323 = !DILocation(line: 147, column: 18, scope: !4301)
!4324 = !DILocation(line: 147, column: 30, scope: !4301)
!4325 = !DILocation(line: 149, column: 1, scope: !4301)
!4326 = distinct !DISubprogram(name: "gdma_get_global_status", scope: !346, file: !346, line: 151, type: !3911, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4327)
!4327 = !{!4328, !4329}
!4328 = !DILocalVariable(name: "index", arg: 1, scope: !4326, file: !346, line: 151, type: !61)
!4329 = !DILocalVariable(name: "global_status", scope: !4326, file: !346, line: 154, type: !61)
!4330 = !DILocation(line: 0, scope: !4326)
!4331 = !DILocation(line: 157, column: 21, scope: !4326)
!4332 = !DILocation(line: 157, column: 41, scope: !4326)
!4333 = !DILocation(line: 159, column: 5, scope: !4326)
!4334 = distinct !DISubprogram(name: "gdma_register_callback", scope: !346, file: !346, line: 163, type: !4335, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4337)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{null, !61, !517, !88}
!4337 = !{!4338, !4339, !4340}
!4338 = !DILocalVariable(name: "index", arg: 1, scope: !4334, file: !346, line: 163, type: !61)
!4339 = !DILocalVariable(name: "callback", arg: 2, scope: !4334, file: !346, line: 163, type: !517)
!4340 = !DILocalVariable(name: "user_data", arg: 3, scope: !4334, file: !346, line: 163, type: !88)
!4341 = !DILocation(line: 0, scope: !4334)
!4342 = !DILocation(line: 166, column: 32, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4334, file: !346, line: 166, column: 9)
!4344 = !DILocation(line: 166, column: 37, scope: !4343)
!4345 = !DILocation(line: 166, column: 9, scope: !4334)
!4346 = !DILocation(line: 167, column: 37, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !346, line: 166, column: 46)
!4348 = !DILocation(line: 168, column: 32, scope: !4347)
!4349 = !DILocation(line: 168, column: 41, scope: !4347)
!4350 = !DILocation(line: 169, column: 5, scope: !4347)
!4351 = !DILocation(line: 170, column: 1, scope: !4334)
!4352 = distinct !DISubprogram(name: "gdma_stop", scope: !346, file: !346, line: 172, type: !4302, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4353)
!4353 = !{!4354}
!4354 = !DILocalVariable(name: "index", arg: 1, scope: !4352, file: !346, line: 172, type: !61)
!4355 = !DILocation(line: 0, scope: !4352)
!4356 = !DILocation(line: 174, column: 5, scope: !4352)
!4357 = !DILocation(line: 174, column: 18, scope: !4352)
!4358 = !DILocation(line: 174, column: 29, scope: !4352)
!4359 = !DILocation(line: 175, column: 1, scope: !4352)
!4360 = distinct !DISubprogram(name: "gdma_start", scope: !346, file: !346, line: 177, type: !4302, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4361)
!4361 = !{!4362}
!4362 = !DILocalVariable(name: "index", arg: 1, scope: !4360, file: !346, line: 177, type: !61)
!4363 = !DILocation(line: 0, scope: !4360)
!4364 = !DILocation(line: 179, column: 5, scope: !4360)
!4365 = !DILocation(line: 179, column: 18, scope: !4360)
!4366 = !DILocation(line: 179, column: 29, scope: !4360)
!4367 = !DILocation(line: 180, column: 1, scope: !4360)
!4368 = distinct !DISubprogram(name: "gdma_set_control", scope: !346, file: !346, line: 183, type: !4369, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4371)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{null, !61, !61, !61}
!4371 = !{!4372, !4373, !4374}
!4372 = !DILocalVariable(name: "index", arg: 1, scope: !4368, file: !346, line: 183, type: !61)
!4373 = !DILocalVariable(name: "control", arg: 2, scope: !4368, file: !346, line: 183, type: !61)
!4374 = !DILocalVariable(name: "count", arg: 3, scope: !4368, file: !346, line: 183, type: !61)
!4375 = !DILocation(line: 0, scope: !4368)
!4376 = !DILocation(line: 185, column: 5, scope: !4368)
!4377 = !DILocation(line: 185, column: 18, scope: !4368)
!4378 = !DILocation(line: 185, column: 27, scope: !4368)
!4379 = !DILocation(line: 186, column: 5, scope: !4368)
!4380 = !DILocation(line: 186, column: 18, scope: !4368)
!4381 = !DILocation(line: 186, column: 29, scope: !4368)
!4382 = !DILocation(line: 187, column: 1, scope: !4368)
!4383 = distinct !DISubprogram(name: "gdma_set_address", scope: !346, file: !346, line: 189, type: !4369, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4384)
!4384 = !{!4385, !4386, !4387}
!4385 = !DILocalVariable(name: "index", arg: 1, scope: !4383, file: !346, line: 189, type: !61)
!4386 = !DILocalVariable(name: "destination", arg: 2, scope: !4383, file: !346, line: 189, type: !61)
!4387 = !DILocalVariable(name: "source", arg: 3, scope: !4383, file: !346, line: 189, type: !61)
!4388 = !DILocation(line: 0, scope: !4383)
!4389 = !DILocation(line: 191, column: 5, scope: !4383)
!4390 = !DILocation(line: 191, column: 18, scope: !4383)
!4391 = !DILocation(line: 191, column: 27, scope: !4383)
!4392 = !DILocation(line: 192, column: 5, scope: !4383)
!4393 = !DILocation(line: 192, column: 18, scope: !4383)
!4394 = !DILocation(line: 192, column: 27, scope: !4383)
!4395 = !DILocation(line: 194, column: 1, scope: !4383)
!4396 = distinct !DISubprogram(name: "dma_enable_clock", scope: !346, file: !346, line: 195, type: !4397, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4400)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{!61, !4399}
!4399 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_domain_type_t", file: !354, line: 127, baseType: !353)
!4400 = !{!4401, !4402, !4404}
!4401 = !DILocalVariable(name: "domain", arg: 1, scope: !4396, file: !346, line: 195, type: !4399)
!4402 = !DILocalVariable(name: "clock_status", scope: !4396, file: !346, line: 197, type: !4403)
!4403 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !359, line: 106, baseType: !358)
!4404 = !DILocalVariable(name: "status", scope: !4396, file: !346, line: 198, type: !61)
!4405 = !DILocation(line: 0, scope: !4396)
!4406 = !DILocation(line: 200, column: 16, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4396, file: !346, line: 200, column: 9)
!4408 = !DILocation(line: 200, column: 9, scope: !4396)
!4409 = !DILocation(line: 202, column: 24, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4407, file: !346, line: 200, column: 27)
!4411 = !DILocation(line: 203, column: 33, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4410, file: !346, line: 203, column: 13)
!4413 = !DILocation(line: 207, column: 24, scope: !4410)
!4414 = !DILocation(line: 208, column: 33, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4410, file: !346, line: 208, column: 13)
!4416 = !DILocation(line: 208, column: 13, scope: !4410)
!4417 = !DILocation(line: 213, column: 24, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4407, file: !346, line: 211, column: 12)
!4419 = !DILocation(line: 214, column: 33, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4418, file: !346, line: 214, column: 13)
!4421 = !DILocation(line: 214, column: 13, scope: !4418)
!4422 = !DILocation(line: 0, scope: !4407)
!4423 = !DILocation(line: 219, column: 5, scope: !4396)
!4424 = distinct !DISubprogram(name: "dma_disable_clock", scope: !346, file: !346, line: 223, type: !4397, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4425)
!4425 = !{!4426, !4427, !4428}
!4426 = !DILocalVariable(name: "domain", arg: 1, scope: !4424, file: !346, line: 223, type: !4399)
!4427 = !DILocalVariable(name: "return_status", scope: !4424, file: !346, line: 225, type: !61)
!4428 = !DILocalVariable(name: "clock_status", scope: !4424, file: !346, line: 226, type: !4403)
!4429 = !DILocation(line: 0, scope: !4424)
!4430 = !DILocation(line: 228, column: 16, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4424, file: !346, line: 228, column: 9)
!4432 = !DILocation(line: 228, column: 9, scope: !4424)
!4433 = !DILocation(line: 231, column: 24, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4431, file: !346, line: 228, column: 27)
!4435 = !DILocation(line: 232, column: 33, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4434, file: !346, line: 232, column: 13)
!4437 = !DILocation(line: 235, column: 24, scope: !4434)
!4438 = !DILocation(line: 236, column: 33, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4434, file: !346, line: 236, column: 13)
!4440 = !DILocation(line: 236, column: 13, scope: !4434)
!4441 = !DILocation(line: 242, column: 24, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4431, file: !346, line: 240, column: 12)
!4443 = !DILocation(line: 243, column: 33, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4442, file: !346, line: 243, column: 13)
!4445 = !DILocation(line: 243, column: 13, scope: !4442)
!4446 = !DILocation(line: 0, scope: !4431)
!4447 = !DILocation(line: 248, column: 5, scope: !4424)
!4448 = distinct !DISubprogram(name: "pdma_init", scope: !346, file: !346, line: 279, type: !4449, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4452)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!4451, !1192}
!4451 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_status_t", file: !354, line: 171, baseType: !365)
!4452 = !{!4453, !4454, !4455, !4456}
!4453 = !DILocalVariable(name: "channel", arg: 1, scope: !4448, file: !346, line: 279, type: !1192)
!4454 = !DILocalVariable(name: "offset", scope: !4448, file: !346, line: 282, type: !61)
!4455 = !DILocalVariable(name: "result", scope: !4448, file: !346, line: 283, type: !61)
!4456 = !DILocalVariable(name: "saved_mask", scope: !4457, file: !346, line: 291, type: !61)
!4457 = distinct !DILexicalBlock(scope: !4448, file: !346, line: 291, column: 5)
!4458 = !DILocation(line: 0, scope: !4448)
!4459 = !DILocation(line: 284, column: 14, scope: !4448)
!4460 = !DILocation(line: 286, column: 14, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4448, file: !346, line: 286, column: 9)
!4462 = !DILocation(line: 286, column: 9, scope: !4448)
!4463 = !DILocation(line: 291, column: 5, scope: !4457)
!4464 = !DILocation(line: 0, scope: !4457)
!4465 = !DILocation(line: 291, column: 5, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4457, file: !346, line: 291, column: 5)
!4467 = !DILocation(line: 291, column: 5, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4466, file: !346, line: 291, column: 5)
!4469 = !DILocation(line: 291, column: 5, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4466, file: !346, line: 291, column: 5)
!4471 = !DILocation(line: 294, column: 14, scope: !4448)
!4472 = !DILocation(line: 296, column: 14, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4448, file: !346, line: 296, column: 9)
!4474 = !DILocation(line: 296, column: 9, scope: !4448)
!4475 = !DILocation(line: 300, column: 14, scope: !4448)
!4476 = !DILocation(line: 302, column: 14, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4448, file: !346, line: 302, column: 9)
!4478 = !DILocation(line: 302, column: 9, scope: !4448)
!4479 = !DILocation(line: 307, column: 5, scope: !4448)
!4480 = !DILocation(line: 307, column: 19, scope: !4448)
!4481 = !DILocation(line: 307, column: 28, scope: !4448)
!4482 = !DILocation(line: 308, column: 5, scope: !4448)
!4483 = !DILocation(line: 308, column: 19, scope: !4448)
!4484 = !DILocation(line: 308, column: 30, scope: !4448)
!4485 = !DILocation(line: 309, column: 5, scope: !4448)
!4486 = !DILocation(line: 309, column: 19, scope: !4448)
!4487 = !DILocation(line: 309, column: 30, scope: !4448)
!4488 = !DILocation(line: 310, column: 5, scope: !4448)
!4489 = !DILocation(line: 310, column: 19, scope: !4448)
!4490 = !DILocation(line: 310, column: 31, scope: !4448)
!4491 = !DILocation(line: 311, column: 5, scope: !4448)
!4492 = !DILocation(line: 311, column: 19, scope: !4448)
!4493 = !DILocation(line: 311, column: 32, scope: !4448)
!4494 = !DILocation(line: 314, column: 5, scope: !4448)
!4495 = !DILocation(line: 315, column: 5, scope: !4448)
!4496 = !DILocation(line: 316, column: 5, scope: !4448)
!4497 = !DILocation(line: 317, column: 5, scope: !4448)
!4498 = !DILocation(line: 318, column: 5, scope: !4448)
!4499 = !DILocation(line: 319, column: 1, scope: !4448)
!4500 = distinct !DISubprogram(name: "pdma_check_valid_channel", scope: !346, file: !346, line: 262, type: !4501, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4503)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!61, !1192}
!4503 = !{!4504, !4505}
!4504 = !DILocalVariable(name: "channel", arg: 1, scope: !4500, file: !346, line: 262, type: !1192)
!4505 = !DILocalVariable(name: "offset", scope: !4500, file: !346, line: 265, type: !61)
!4506 = !DILocation(line: 0, scope: !4500)
!4507 = !DILocation(line: 268, column: 22, scope: !4500)
!4508 = !DILocation(line: 270, column: 16, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4500, file: !346, line: 270, column: 9)
!4510 = !DILocation(line: 0, scope: !4509)
!4511 = !DILocation(line: 275, column: 1, scope: !4500)
!4512 = !DILocation(line: 0, scope: !525)
!4513 = !DILocation(line: 1113, column: 5, scope: !525)
!4514 = !DILocation(line: 1113, column: 24, scope: !525)
!4515 = !DILocation(line: 1126, column: 21, scope: !525)
!4516 = !DILocation(line: 1126, column: 37, scope: !525)
!4517 = !DILocation(line: 1126, column: 19, scope: !525)
!4518 = !DILocation(line: 1127, column: 9, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !525, file: !346, line: 1127, column: 9)
!4520 = !DILocation(line: 1127, column: 23, scope: !4519)
!4521 = !DILocation(line: 1127, column: 9, scope: !525)
!4522 = !DILocation(line: 1130, column: 9, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4519, file: !346, line: 1127, column: 53)
!4524 = !DILocation(line: 1130, column: 18, scope: !4523)
!4525 = !DILocation(line: 1130, column: 30, scope: !4523)
!4526 = !DILocation(line: 1133, column: 44, scope: !4523)
!4527 = !DILocation(line: 1135, column: 27, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4523, file: !346, line: 1135, column: 13)
!4529 = !DILocation(line: 1135, column: 13, scope: !4523)
!4530 = !DILocation(line: 1134, column: 39, scope: !4523)
!4531 = !DILocation(line: 1136, column: 13, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4528, file: !346, line: 1135, column: 36)
!4533 = !DILocation(line: 1141, column: 5, scope: !4523)
!4534 = !DILocation(line: 1138, column: 13, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !346, line: 1137, column: 16)
!4536 = !DILocation(line: 0, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !525, file: !346, line: 1145, column: 5)
!4538 = !DILocation(line: 1145, column: 5, scope: !4537)
!4539 = !DILocation(line: 0, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !525, file: !346, line: 1170, column: 5)
!4541 = !DILocation(line: 1170, column: 5, scope: !4540)
!4542 = !DILocation(line: 1146, column: 25, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !346, line: 1145, column: 51)
!4544 = distinct !DILexicalBlock(scope: !4537, file: !346, line: 1145, column: 5)
!4545 = !DILocation(line: 1146, column: 45, scope: !4543)
!4546 = !DILocation(line: 1146, column: 23, scope: !4543)
!4547 = !DILocation(line: 1149, column: 13, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4543, file: !346, line: 1149, column: 13)
!4549 = !DILocation(line: 1149, column: 38, scope: !4548)
!4550 = !DILocation(line: 1149, column: 34, scope: !4548)
!4551 = !DILocation(line: 1149, column: 27, scope: !4548)
!4552 = !DILocation(line: 1149, column: 13, scope: !4543)
!4553 = !DILocation(line: 1153, column: 17, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !346, line: 1151, column: 13)
!4555 = distinct !DILexicalBlock(scope: !4548, file: !346, line: 1149, column: 78)
!4556 = !DILocation(line: 1153, column: 30, scope: !4554)
!4557 = !DILocation(line: 1153, column: 42, scope: !4554)
!4558 = !DILocation(line: 1156, column: 56, scope: !4554)
!4559 = !DILocation(line: 1158, column: 35, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4554, file: !346, line: 1158, column: 21)
!4561 = !DILocation(line: 1158, column: 21, scope: !4554)
!4562 = !DILocation(line: 1157, column: 51, scope: !4554)
!4563 = !DILocation(line: 1159, column: 21, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4560, file: !346, line: 1158, column: 44)
!4565 = !DILocation(line: 1163, column: 22, scope: !4554)
!4566 = !DILocation(line: 1163, column: 17, scope: !4554)
!4567 = !DILocation(line: 1163, column: 30, scope: !4554)
!4568 = !DILocation(line: 1163, column: 41, scope: !4554)
!4569 = !DILocation(line: 1165, column: 9, scope: !4555)
!4570 = !DILocation(line: 1161, column: 21, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4560, file: !346, line: 1160, column: 24)
!4572 = !DILocation(line: 1145, column: 47, scope: !4544)
!4573 = !DILocation(line: 1145, column: 27, scope: !4544)
!4574 = distinct !{!4574, !4538, !4575}
!4575 = !DILocation(line: 1166, column: 5, scope: !4537)
!4576 = !DILocation(line: 1171, column: 25, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !346, line: 1170, column: 61)
!4578 = distinct !DILexicalBlock(scope: !4540, file: !346, line: 1170, column: 5)
!4579 = !DILocation(line: 1171, column: 45, scope: !4577)
!4580 = !DILocation(line: 1171, column: 23, scope: !4577)
!4581 = !DILocation(line: 1174, column: 13, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4577, file: !346, line: 1174, column: 13)
!4583 = !DILocation(line: 1174, column: 38, scope: !4582)
!4584 = !DILocation(line: 1174, column: 34, scope: !4582)
!4585 = !DILocation(line: 1174, column: 27, scope: !4582)
!4586 = !DILocation(line: 1174, column: 13, scope: !4577)
!4587 = !DILocation(line: 1178, column: 17, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !346, line: 1176, column: 13)
!4589 = distinct !DILexicalBlock(scope: !4582, file: !346, line: 1174, column: 78)
!4590 = !DILocation(line: 1178, column: 30, scope: !4588)
!4591 = !DILocation(line: 1178, column: 42, scope: !4588)
!4592 = !DILocation(line: 1180, column: 56, scope: !4588)
!4593 = !DILocation(line: 1182, column: 35, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4588, file: !346, line: 1182, column: 21)
!4595 = !DILocation(line: 1182, column: 21, scope: !4588)
!4596 = !DILocation(line: 1181, column: 51, scope: !4588)
!4597 = !DILocation(line: 1183, column: 21, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !346, line: 1182, column: 44)
!4599 = !DILocation(line: 1170, column: 57, scope: !4578)
!4600 = !DILocation(line: 1188, column: 9, scope: !4589)
!4601 = !DILocation(line: 1185, column: 21, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4594, file: !346, line: 1184, column: 24)
!4603 = !DILocation(line: 1170, column: 27, scope: !4578)
!4604 = distinct !{!4604, !4541, !4605}
!4605 = !DILocation(line: 1189, column: 5, scope: !4540)
!4606 = !DILocation(line: 1193, column: 1, scope: !525)
!4607 = distinct !DISubprogram(name: "pdma_deinit", scope: !346, file: !346, line: 324, type: !4449, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4608)
!4608 = !{!4609, !4610, !4611, !4612, !4613, !4614}
!4609 = !DILocalVariable(name: "channel", arg: 1, scope: !4607, file: !346, line: 324, type: !1192)
!4610 = !DILocalVariable(name: "offset", scope: !4607, file: !346, line: 326, type: !61)
!4611 = !DILocalVariable(name: "result", scope: !4607, file: !346, line: 327, type: !61)
!4612 = !DILocalVariable(name: "saved_mask", scope: !4607, file: !346, line: 328, type: !61)
!4613 = !DILocalVariable(name: "global_status", scope: !4607, file: !346, line: 330, type: !60)
!4614 = !DILocalVariable(name: "saved_mask", scope: !4615, file: !346, line: 356, type: !61)
!4615 = distinct !DILexicalBlock(scope: !4607, file: !346, line: 356, column: 5)
!4616 = !DILocation(line: 0, scope: !4607)
!4617 = !DILocation(line: 330, column: 5, scope: !4607)
!4618 = !DILocation(line: 330, column: 24, scope: !4607)
!4619 = !DILocation(line: 331, column: 14, scope: !4607)
!4620 = !DILocation(line: 332, column: 14, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4607, file: !346, line: 332, column: 9)
!4622 = !DILocation(line: 332, column: 9, scope: !4607)
!4623 = !DILocation(line: 336, column: 18, scope: !4607)
!4624 = !DILocation(line: 337, column: 21, scope: !4607)
!4625 = !DILocation(line: 337, column: 42, scope: !4607)
!4626 = !DILocation(line: 337, column: 19, scope: !4607)
!4627 = !DILocation(line: 339, column: 9, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4607, file: !346, line: 339, column: 9)
!4629 = !DILocation(line: 339, column: 34, scope: !4628)
!4630 = !DILocation(line: 339, column: 30, scope: !4628)
!4631 = !DILocation(line: 339, column: 23, scope: !4628)
!4632 = !DILocation(line: 339, column: 9, scope: !4607)
!4633 = !DILocation(line: 341, column: 9, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4628, file: !346, line: 339, column: 75)
!4635 = !DILocation(line: 347, column: 9, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4607, file: !346, line: 347, column: 9)
!4637 = !DILocation(line: 347, column: 30, scope: !4636)
!4638 = !DILocation(line: 347, column: 23, scope: !4636)
!4639 = !DILocation(line: 347, column: 9, scope: !4607)
!4640 = !DILocation(line: 349, column: 9, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4636, file: !346, line: 347, column: 69)
!4642 = !DILocation(line: 353, column: 5, scope: !4607)
!4643 = !DILocation(line: 356, column: 5, scope: !4615)
!4644 = !DILocation(line: 0, scope: !4615)
!4645 = !DILocation(line: 356, column: 5, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4615, file: !346, line: 356, column: 5)
!4647 = !DILocation(line: 356, column: 5, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4646, file: !346, line: 356, column: 5)
!4649 = !DILocation(line: 356, column: 5, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !346, line: 356, column: 5)
!4651 = !DILocation(line: 359, column: 14, scope: !4607)
!4652 = !DILocation(line: 361, column: 14, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4607, file: !346, line: 361, column: 9)
!4654 = !DILocation(line: 361, column: 9, scope: !4607)
!4655 = !DILocation(line: 365, column: 14, scope: !4607)
!4656 = !DILocation(line: 367, column: 14, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4607, file: !346, line: 367, column: 9)
!4658 = !DILocation(line: 372, column: 1, scope: !4607)
!4659 = distinct !DISubprogram(name: "pdma_set_ring_buffer", scope: !346, file: !346, line: 374, type: !4660, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4662)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{!4451, !1192, !61, !61}
!4662 = !{!4663, !4664, !4665, !4666}
!4663 = !DILocalVariable(name: "channel", arg: 1, scope: !4659, file: !346, line: 374, type: !1192)
!4664 = !DILocalVariable(name: "wppt", arg: 2, scope: !4659, file: !346, line: 374, type: !61)
!4665 = !DILocalVariable(name: "wpto", arg: 3, scope: !4659, file: !346, line: 374, type: !61)
!4666 = !DILocalVariable(name: "offset", scope: !4659, file: !346, line: 377, type: !61)
!4667 = !DILocation(line: 0, scope: !4659)
!4668 = !DILocation(line: 379, column: 14, scope: !4659)
!4669 = !DILocation(line: 380, column: 14, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4659, file: !346, line: 380, column: 9)
!4671 = !DILocation(line: 380, column: 9, scope: !4659)
!4672 = !DILocation(line: 385, column: 14, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4659, file: !346, line: 385, column: 9)
!4674 = !DILocation(line: 385, column: 9, scope: !4659)
!4675 = !DILocation(line: 390, column: 5, scope: !4659)
!4676 = !DILocation(line: 390, column: 19, scope: !4659)
!4677 = !DILocation(line: 390, column: 29, scope: !4659)
!4678 = !DILocation(line: 393, column: 5, scope: !4659)
!4679 = !DILocation(line: 393, column: 19, scope: !4659)
!4680 = !DILocation(line: 393, column: 29, scope: !4659)
!4681 = !DILocation(line: 395, column: 5, scope: !4659)
!4682 = !DILocation(line: 397, column: 1, scope: !4659)
!4683 = distinct !DISubprogram(name: "pdma_configure", scope: !346, file: !346, line: 401, type: !4684, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4696)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!4451, !1192, !4686}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 32)
!4687 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !354, line: 275, baseType: !4688)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 270, size: 128, elements: !4689)
!4689 = !{!4690, !4691, !4693, !4694}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !4688, file: !354, line: 271, baseType: !91, size: 8)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4688, file: !354, line: 272, baseType: !4692, size: 32, offset: 32)
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_transfer_size_format_t", file: !354, line: 155, baseType: !381)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4688, file: !354, line: 273, baseType: !61, size: 32, offset: 64)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !4688, file: !354, line: 274, baseType: !4695, size: 32, offset: 96)
!4695 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_master_type_t", file: !354, line: 185, baseType: !386)
!4696 = !{!4697, !4698, !4699, !4700, !4701, !4702}
!4697 = !DILocalVariable(name: "channel", arg: 1, scope: !4683, file: !346, line: 401, type: !1192)
!4698 = !DILocalVariable(name: "pdma_config", arg: 2, scope: !4683, file: !346, line: 401, type: !4686)
!4699 = !DILocalVariable(name: "offset", scope: !4683, file: !346, line: 405, type: !61)
!4700 = !DILocalVariable(name: "saved_mask", scope: !4683, file: !346, line: 407, type: !61)
!4701 = !DILocalVariable(name: "dma_control", scope: !4683, file: !346, line: 410, type: !61)
!4702 = !DILocalVariable(name: "global_status", scope: !4683, file: !346, line: 413, type: !60)
!4703 = !DILocation(line: 0, scope: !4683)
!4704 = !DILocation(line: 413, column: 5, scope: !4683)
!4705 = !DILocation(line: 413, column: 24, scope: !4683)
!4706 = !DILocation(line: 415, column: 14, scope: !4683)
!4707 = !DILocation(line: 416, column: 14, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 416, column: 9)
!4709 = !DILocation(line: 416, column: 9, scope: !4683)
!4710 = !DILocation(line: 422, column: 22, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 422, column: 9)
!4712 = !DILocation(line: 422, column: 9, scope: !4683)
!4713 = !DILocation(line: 432, column: 18, scope: !4683)
!4714 = !DILocation(line: 435, column: 21, scope: !4683)
!4715 = !DILocation(line: 435, column: 42, scope: !4683)
!4716 = !DILocation(line: 435, column: 19, scope: !4683)
!4717 = !DILocation(line: 437, column: 9, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 437, column: 9)
!4719 = !DILocation(line: 437, column: 33, scope: !4718)
!4720 = !DILocation(line: 437, column: 30, scope: !4718)
!4721 = !DILocation(line: 437, column: 23, scope: !4718)
!4722 = !DILocation(line: 437, column: 9, scope: !4683)
!4723 = !DILocation(line: 440, column: 9, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4718, file: !346, line: 437, column: 69)
!4725 = !DILocation(line: 441, column: 9, scope: !4724)
!4726 = !DILocation(line: 447, column: 9, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 447, column: 9)
!4728 = !DILocation(line: 447, column: 30, scope: !4727)
!4729 = !DILocation(line: 447, column: 23, scope: !4727)
!4730 = !DILocation(line: 447, column: 9, scope: !4683)
!4731 = !DILocation(line: 457, column: 5, scope: !4683)
!4732 = !DILocation(line: 457, column: 19, scope: !4683)
!4733 = !DILocation(line: 457, column: 30, scope: !4683)
!4734 = !DILocation(line: 459, column: 26, scope: !4683)
!4735 = !DILocation(line: 459, column: 5, scope: !4683)
!4736 = !DILocation(line: 0, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 459, column: 39)
!4738 = !DILocation(line: 483, column: 26, scope: !4683)
!4739 = !DILocation(line: 483, column: 5, scope: !4683)
!4740 = !DILocation(line: 490, column: 25, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 483, column: 32)
!4742 = !DILocation(line: 491, column: 13, scope: !4741)
!4743 = !DILocation(line: 493, column: 25, scope: !4741)
!4744 = !DILocation(line: 494, column: 13, scope: !4741)
!4745 = !DILocation(line: 0, scope: !4741)
!4746 = !DILocation(line: 499, column: 23, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4683, file: !346, line: 499, column: 9)
!4748 = !DILocation(line: 499, column: 43, scope: !4747)
!4749 = !DILocation(line: 503, column: 17, scope: !4683)
!4750 = !DILocation(line: 505, column: 5, scope: !4683)
!4751 = !DILocation(line: 505, column: 19, scope: !4683)
!4752 = !DILocation(line: 505, column: 28, scope: !4683)
!4753 = !DILocation(line: 506, column: 45, scope: !4683)
!4754 = !DILocation(line: 506, column: 5, scope: !4683)
!4755 = !DILocation(line: 506, column: 19, scope: !4683)
!4756 = !DILocation(line: 506, column: 30, scope: !4683)
!4757 = !DILocation(line: 508, column: 5, scope: !4683)
!4758 = !DILocation(line: 510, column: 1, scope: !4683)
!4759 = distinct !DISubprogram(name: "pdma_start_polling", scope: !346, file: !346, line: 512, type: !4760, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4762)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{!4451, !1192, !61}
!4762 = !{!4763, !4764, !4765, !4766}
!4763 = !DILocalVariable(name: "channel", arg: 1, scope: !4759, file: !346, line: 512, type: !1192)
!4764 = !DILocalVariable(name: "address", arg: 2, scope: !4759, file: !346, line: 512, type: !61)
!4765 = !DILocalVariable(name: "offset", scope: !4759, file: !346, line: 516, type: !61)
!4766 = !DILocalVariable(name: "running_status", scope: !4759, file: !346, line: 518, type: !4767)
!4767 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_running_status_t", file: !354, line: 177, baseType: !392)
!4768 = !DILocation(line: 0, scope: !4759)
!4769 = !DILocation(line: 518, column: 5, scope: !4759)
!4770 = !DILocation(line: 518, column: 28, scope: !4759)
!4771 = !DILocation(line: 520, column: 14, scope: !4759)
!4772 = !DILocation(line: 521, column: 14, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4759, file: !346, line: 521, column: 9)
!4774 = !DILocation(line: 521, column: 9, scope: !4759)
!4775 = !DILocation(line: 526, column: 18, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4759, file: !346, line: 526, column: 9)
!4777 = !DILocation(line: 526, column: 23, scope: !4776)
!4778 = !DILocation(line: 526, column: 9, scope: !4759)
!4779 = !DILocation(line: 527, column: 9, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4776, file: !346, line: 526, column: 28)
!4781 = !DILocation(line: 532, column: 17, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4759, file: !346, line: 532, column: 9)
!4783 = !DILocation(line: 532, column: 9, scope: !4759)
!4784 = !DILocation(line: 533, column: 9, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4782, file: !346, line: 532, column: 50)
!4786 = !DILocation(line: 538, column: 5, scope: !4759)
!4787 = !DILocation(line: 538, column: 19, scope: !4759)
!4788 = !DILocation(line: 538, column: 32, scope: !4759)
!4789 = !DILocation(line: 540, column: 5, scope: !4759)
!4790 = !DILocation(line: 540, column: 19, scope: !4759)
!4791 = !DILocation(line: 540, column: 28, scope: !4759)
!4792 = !DILocation(line: 542, column: 5, scope: !4759)
!4793 = !DILocation(line: 542, column: 19, scope: !4759)
!4794 = !DILocation(line: 542, column: 30, scope: !4759)
!4795 = !DILocation(line: 544, column: 5, scope: !4759)
!4796 = !DILocation(line: 545, column: 12, scope: !4759)
!4797 = !DILocation(line: 545, column: 5, scope: !4759)
!4798 = !DILocation(line: 547, column: 9, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4759, file: !346, line: 545, column: 28)
!4800 = distinct !{!4800, !4797, !4801}
!4801 = !DILocation(line: 548, column: 5, scope: !4759)
!4802 = !DILocation(line: 550, column: 5, scope: !4759)
!4803 = !DILocation(line: 551, column: 5, scope: !4759)
!4804 = !DILocation(line: 553, column: 1, scope: !4759)
!4805 = distinct !DISubprogram(name: "pdma_get_running_status", scope: !346, file: !346, line: 620, type: !4806, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4809)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!4451, !1192, !4808}
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 32)
!4809 = !{!4810, !4811, !4812, !4813}
!4810 = !DILocalVariable(name: "channel", arg: 1, scope: !4805, file: !346, line: 620, type: !1192)
!4811 = !DILocalVariable(name: "running_status", arg: 2, scope: !4805, file: !346, line: 620, type: !4808)
!4812 = !DILocalVariable(name: "offset", scope: !4805, file: !346, line: 624, type: !61)
!4813 = !DILocalVariable(name: "global_status", scope: !4805, file: !346, line: 627, type: !60)
!4814 = !DILocation(line: 0, scope: !4805)
!4815 = !DILocation(line: 627, column: 5, scope: !4805)
!4816 = !DILocation(line: 627, column: 24, scope: !4805)
!4817 = !DILocation(line: 629, column: 14, scope: !4805)
!4818 = !DILocation(line: 630, column: 14, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4805, file: !346, line: 630, column: 9)
!4820 = !DILocation(line: 630, column: 9, scope: !4805)
!4821 = !DILocation(line: 635, column: 21, scope: !4805)
!4822 = !DILocation(line: 635, column: 42, scope: !4805)
!4823 = !DILocation(line: 635, column: 19, scope: !4805)
!4824 = !DILocation(line: 637, column: 9, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4805, file: !346, line: 637, column: 9)
!4826 = !DILocation(line: 637, column: 33, scope: !4825)
!4827 = !DILocation(line: 0, scope: !4825)
!4828 = !DILocation(line: 644, column: 5, scope: !4805)
!4829 = !DILocation(line: 646, column: 1, scope: !4805)
!4830 = distinct !DISubprogram(name: "pdma_stop", scope: !346, file: !346, line: 585, type: !4449, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4831)
!4831 = !{!4832, !4833}
!4832 = !DILocalVariable(name: "channel", arg: 1, scope: !4830, file: !346, line: 585, type: !1192)
!4833 = !DILocalVariable(name: "offset", scope: !4830, file: !346, line: 589, type: !61)
!4834 = !DILocation(line: 0, scope: !4830)
!4835 = !DILocation(line: 591, column: 14, scope: !4830)
!4836 = !DILocation(line: 592, column: 14, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4830, file: !346, line: 592, column: 9)
!4838 = !DILocation(line: 592, column: 9, scope: !4830)
!4839 = !DILocation(line: 597, column: 5, scope: !4830)
!4840 = !DILocation(line: 597, column: 19, scope: !4830)
!4841 = !DILocation(line: 597, column: 30, scope: !4830)
!4842 = !DILocation(line: 598, column: 5, scope: !4830)
!4843 = !DILocation(line: 598, column: 19, scope: !4830)
!4844 = !DILocation(line: 598, column: 31, scope: !4830)
!4845 = !DILocation(line: 600, column: 5, scope: !4830)
!4846 = !DILocation(line: 601, column: 1, scope: !4830)
!4847 = distinct !DISubprogram(name: "pdma_start_interrupt", scope: !346, file: !346, line: 555, type: !4760, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4848)
!4848 = !{!4849, !4850, !4851}
!4849 = !DILocalVariable(name: "channel", arg: 1, scope: !4847, file: !346, line: 555, type: !1192)
!4850 = !DILocalVariable(name: "address", arg: 2, scope: !4847, file: !346, line: 555, type: !61)
!4851 = !DILocalVariable(name: "offset", scope: !4847, file: !346, line: 558, type: !61)
!4852 = !DILocation(line: 0, scope: !4847)
!4853 = !DILocation(line: 561, column: 14, scope: !4847)
!4854 = !DILocation(line: 562, column: 14, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 562, column: 9)
!4856 = !DILocation(line: 562, column: 9, scope: !4847)
!4857 = !DILocation(line: 566, column: 18, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 566, column: 9)
!4859 = !DILocation(line: 566, column: 23, scope: !4858)
!4860 = !DILocation(line: 566, column: 9, scope: !4847)
!4861 = !DILocation(line: 567, column: 9, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !346, line: 566, column: 28)
!4863 = !DILocation(line: 572, column: 17, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 572, column: 9)
!4865 = !DILocation(line: 572, column: 9, scope: !4847)
!4866 = !DILocation(line: 573, column: 9, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4864, file: !346, line: 572, column: 50)
!4868 = !DILocation(line: 577, column: 5, scope: !4847)
!4869 = !DILocation(line: 577, column: 19, scope: !4847)
!4870 = !DILocation(line: 577, column: 32, scope: !4847)
!4871 = !DILocation(line: 578, column: 5, scope: !4847)
!4872 = !DILocation(line: 578, column: 19, scope: !4847)
!4873 = !DILocation(line: 578, column: 28, scope: !4847)
!4874 = !DILocation(line: 579, column: 5, scope: !4847)
!4875 = !DILocation(line: 579, column: 19, scope: !4847)
!4876 = !DILocation(line: 579, column: 30, scope: !4847)
!4877 = !DILocation(line: 581, column: 5, scope: !4847)
!4878 = !DILocation(line: 583, column: 1, scope: !4847)
!4879 = distinct !DISubprogram(name: "pdma_register_callback", scope: !346, file: !346, line: 603, type: !4880, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4882)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!4451, !1192, !535, !88}
!4882 = !{!4883, !4884, !4885, !4886}
!4883 = !DILocalVariable(name: "channel", arg: 1, scope: !4879, file: !346, line: 603, type: !1192)
!4884 = !DILocalVariable(name: "callback", arg: 2, scope: !4879, file: !346, line: 603, type: !535)
!4885 = !DILocalVariable(name: "user_data", arg: 3, scope: !4879, file: !346, line: 603, type: !88)
!4886 = !DILocalVariable(name: "offset", scope: !4879, file: !346, line: 607, type: !61)
!4887 = !DILocation(line: 0, scope: !4879)
!4888 = !DILocation(line: 609, column: 14, scope: !4879)
!4889 = !DILocation(line: 610, column: 14, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4879, file: !346, line: 610, column: 9)
!4891 = !DILocation(line: 610, column: 9, scope: !4879)
!4892 = !DILocation(line: 613, column: 33, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4879, file: !346, line: 613, column: 9)
!4894 = !DILocation(line: 613, column: 38, scope: !4893)
!4895 = !DILocation(line: 613, column: 9, scope: !4879)
!4896 = !DILocation(line: 614, column: 38, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4893, file: !346, line: 613, column: 47)
!4898 = !DILocation(line: 615, column: 33, scope: !4897)
!4899 = !DILocation(line: 615, column: 43, scope: !4897)
!4900 = !DILocation(line: 616, column: 5, scope: !4897)
!4901 = !DILocation(line: 619, column: 1, scope: !4879)
!4902 = distinct !DISubprogram(name: "vdma_init", scope: !346, file: !346, line: 676, type: !4903, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4907)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!4905, !4906}
!4905 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !354, line: 211, baseType: !400)
!4906 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !354, line: 203, baseType: !406)
!4907 = !{!4908, !4909, !4910, !4911, !4912}
!4908 = !DILocalVariable(name: "channel", arg: 1, scope: !4902, file: !346, line: 676, type: !4906)
!4909 = !DILocalVariable(name: "offset", scope: !4902, file: !346, line: 679, type: !61)
!4910 = !DILocalVariable(name: "result", scope: !4902, file: !346, line: 680, type: !61)
!4911 = !DILocalVariable(name: "dma_control", scope: !4902, file: !346, line: 682, type: !61)
!4912 = !DILocalVariable(name: "saved_mask", scope: !4913, file: !346, line: 690, type: !61)
!4913 = distinct !DILexicalBlock(scope: !4902, file: !346, line: 690, column: 5)
!4914 = !DILocation(line: 0, scope: !4902)
!4915 = !DILocation(line: 684, column: 14, scope: !4902)
!4916 = !DILocation(line: 685, column: 14, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4902, file: !346, line: 685, column: 9)
!4918 = !DILocation(line: 685, column: 9, scope: !4902)
!4919 = !DILocation(line: 690, column: 5, scope: !4913)
!4920 = !DILocation(line: 0, scope: !4913)
!4921 = !DILocation(line: 690, column: 5, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4913, file: !346, line: 690, column: 5)
!4923 = !DILocation(line: 690, column: 5, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4922, file: !346, line: 690, column: 5)
!4925 = !DILocation(line: 690, column: 5, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !346, line: 690, column: 5)
!4927 = !DILocation(line: 693, column: 5, scope: !4902)
!4928 = !DILocation(line: 693, column: 19, scope: !4902)
!4929 = !DILocation(line: 693, column: 28, scope: !4902)
!4930 = !DILocation(line: 694, column: 5, scope: !4902)
!4931 = !DILocation(line: 694, column: 19, scope: !4902)
!4932 = !DILocation(line: 694, column: 30, scope: !4902)
!4933 = !DILocation(line: 695, column: 5, scope: !4902)
!4934 = !DILocation(line: 695, column: 19, scope: !4902)
!4935 = !DILocation(line: 695, column: 30, scope: !4902)
!4936 = !DILocation(line: 696, column: 5, scope: !4902)
!4937 = !DILocation(line: 696, column: 19, scope: !4902)
!4938 = !DILocation(line: 696, column: 31, scope: !4902)
!4939 = !DILocation(line: 697, column: 5, scope: !4902)
!4940 = !DILocation(line: 697, column: 19, scope: !4902)
!4941 = !DILocation(line: 697, column: 32, scope: !4902)
!4942 = !DILocation(line: 698, column: 5, scope: !4902)
!4943 = !DILocation(line: 698, column: 19, scope: !4902)
!4944 = !DILocation(line: 698, column: 31, scope: !4902)
!4945 = !DILocation(line: 699, column: 5, scope: !4902)
!4946 = !DILocation(line: 699, column: 19, scope: !4902)
!4947 = !DILocation(line: 699, column: 31, scope: !4902)
!4948 = !DILocation(line: 703, column: 16, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4902, file: !346, line: 703, column: 9)
!4950 = !DILocation(line: 703, column: 9, scope: !4902)
!4951 = !DILocation(line: 705, column: 18, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4949, file: !346, line: 703, column: 37)
!4953 = !DILocation(line: 707, column: 18, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4952, file: !346, line: 707, column: 13)
!4955 = !DILocation(line: 707, column: 13, scope: !4952)
!4956 = !DILocation(line: 713, column: 18, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4949, file: !346, line: 711, column: 12)
!4958 = !DILocation(line: 715, column: 18, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4957, file: !346, line: 715, column: 13)
!4960 = !DILocation(line: 715, column: 13, scope: !4957)
!4961 = !DILocation(line: 720, column: 5, scope: !4902)
!4962 = !DILocation(line: 0, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4902, file: !346, line: 720, column: 22)
!4964 = !DILocation(line: 776, column: 5, scope: !4902)
!4965 = !DILocation(line: 777, column: 5, scope: !4902)
!4966 = !DILocation(line: 778, column: 5, scope: !4902)
!4967 = !DILocation(line: 779, column: 5, scope: !4902)
!4968 = !DILocation(line: 781, column: 5, scope: !4902)
!4969 = !DILocation(line: 783, column: 1, scope: !4902)
!4970 = distinct !DISubprogram(name: "vdma_check_valid_channel", scope: !346, file: !346, line: 660, type: !4971, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4973)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!61, !4906}
!4973 = !{!4974, !4975}
!4974 = !DILocalVariable(name: "channel", arg: 1, scope: !4970, file: !346, line: 660, type: !4906)
!4975 = !DILocalVariable(name: "offset", scope: !4970, file: !346, line: 663, type: !61)
!4976 = !DILocation(line: 0, scope: !4970)
!4977 = !DILocation(line: 666, column: 22, scope: !4970)
!4978 = !DILocation(line: 668, column: 16, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4970, file: !346, line: 668, column: 9)
!4980 = !DILocation(line: 0, scope: !4979)
!4981 = !DILocation(line: 673, column: 1, scope: !4970)
!4982 = distinct !DISubprogram(name: "ao_domain_dma_interrupt_hander", scope: !346, file: !346, line: 1196, type: !526, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4983)
!4983 = !{!4984, !4985, !4986, !4987, !4988}
!4984 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4982, file: !346, line: 1196, type: !528)
!4985 = !DILocalVariable(name: "global_status", scope: !4982, file: !346, line: 1201, type: !60)
!4986 = !DILocalVariable(name: "callback", scope: !4982, file: !346, line: 1204, type: !541)
!4987 = !DILocalVariable(name: "argument", scope: !4982, file: !346, line: 1206, type: !88)
!4988 = !DILocalVariable(name: "count", scope: !4982, file: !346, line: 1209, type: !61)
!4989 = !DILocation(line: 0, scope: !4982)
!4990 = !DILocation(line: 1201, column: 5, scope: !4982)
!4991 = !DILocation(line: 1201, column: 24, scope: !4982)
!4992 = !DILocation(line: 1220, column: 5, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4982, file: !346, line: 1220, column: 5)
!4994 = !DILocation(line: 1221, column: 25, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !346, line: 1220, column: 77)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !346, line: 1220, column: 5)
!4997 = !DILocation(line: 1221, column: 45, scope: !4995)
!4998 = !DILocation(line: 1221, column: 23, scope: !4995)
!4999 = !DILocation(line: 1223, column: 13, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4995, file: !346, line: 1223, column: 13)
!5001 = !DILocation(line: 1223, column: 38, scope: !5000)
!5002 = !DILocation(line: 1223, column: 34, scope: !5000)
!5003 = !DILocation(line: 1223, column: 27, scope: !5000)
!5004 = !DILocation(line: 1223, column: 13, scope: !4995)
!5005 = !DILocation(line: 1227, column: 17, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !346, line: 1225, column: 13)
!5007 = distinct !DILexicalBlock(scope: !5000, file: !346, line: 1223, column: 78)
!5008 = !DILocation(line: 1227, column: 30, scope: !5006)
!5009 = !DILocation(line: 1227, column: 42, scope: !5006)
!5010 = !DILocation(line: 1229, column: 51, scope: !5006)
!5011 = !DILocation(line: 1231, column: 30, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5006, file: !346, line: 1231, column: 21)
!5013 = !DILocation(line: 1231, column: 21, scope: !5006)
!5014 = !DILocation(line: 1230, column: 51, scope: !5006)
!5015 = !DILocation(line: 1232, column: 21, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5012, file: !346, line: 1231, column: 39)
!5017 = !DILocation(line: 1237, column: 9, scope: !5007)
!5018 = !DILocation(line: 1234, column: 21, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5012, file: !346, line: 1233, column: 24)
!5020 = !DILocation(line: 1220, column: 73, scope: !4996)
!5021 = !DILocation(line: 1220, column: 53, scope: !4996)
!5022 = distinct !{!5022, !4992, !5023}
!5023 = !DILocation(line: 1238, column: 5, scope: !4993)
!5024 = !DILocation(line: 1241, column: 1, scope: !4982)
!5025 = distinct !DISubprogram(name: "vdma_deinit", scope: !346, file: !346, line: 785, type: !4903, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5026)
!5026 = !{!5027, !5028, !5029, !5030, !5031, !5032}
!5027 = !DILocalVariable(name: "channel", arg: 1, scope: !5025, file: !346, line: 785, type: !4906)
!5028 = !DILocalVariable(name: "offset", scope: !5025, file: !346, line: 789, type: !61)
!5029 = !DILocalVariable(name: "result", scope: !5025, file: !346, line: 790, type: !61)
!5030 = !DILocalVariable(name: "saved_mask", scope: !5025, file: !346, line: 791, type: !61)
!5031 = !DILocalVariable(name: "global_status", scope: !5025, file: !346, line: 794, type: !60)
!5032 = !DILocalVariable(name: "saved_mask", scope: !5033, file: !346, line: 820, type: !61)
!5033 = distinct !DILexicalBlock(scope: !5025, file: !346, line: 820, column: 5)
!5034 = !DILocation(line: 0, scope: !5025)
!5035 = !DILocation(line: 794, column: 5, scope: !5025)
!5036 = !DILocation(line: 794, column: 24, scope: !5025)
!5037 = !DILocation(line: 796, column: 14, scope: !5025)
!5038 = !DILocation(line: 797, column: 24, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5025, file: !346, line: 797, column: 9)
!5040 = !DILocation(line: 797, column: 9, scope: !5025)
!5041 = !DILocation(line: 801, column: 18, scope: !5025)
!5042 = !DILocation(line: 803, column: 21, scope: !5025)
!5043 = !DILocation(line: 803, column: 42, scope: !5025)
!5044 = !DILocation(line: 803, column: 19, scope: !5025)
!5045 = !DILocation(line: 805, column: 9, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5025, file: !346, line: 805, column: 9)
!5047 = !DILocation(line: 805, column: 34, scope: !5046)
!5048 = !DILocation(line: 805, column: 30, scope: !5046)
!5049 = !DILocation(line: 805, column: 23, scope: !5046)
!5050 = !DILocation(line: 805, column: 9, scope: !5025)
!5051 = !DILocation(line: 806, column: 9, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5046, file: !346, line: 805, column: 75)
!5053 = !DILocation(line: 811, column: 9, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5025, file: !346, line: 811, column: 9)
!5055 = !DILocation(line: 811, column: 30, scope: !5054)
!5056 = !DILocation(line: 811, column: 23, scope: !5054)
!5057 = !DILocation(line: 811, column: 9, scope: !5025)
!5058 = !DILocation(line: 812, column: 9, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5054, file: !346, line: 811, column: 69)
!5060 = !DILocation(line: 817, column: 5, scope: !5025)
!5061 = !DILocation(line: 820, column: 5, scope: !5033)
!5062 = !DILocation(line: 0, scope: !5033)
!5063 = !DILocation(line: 820, column: 5, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5033, file: !346, line: 820, column: 5)
!5065 = !DILocation(line: 820, column: 5, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5064, file: !346, line: 820, column: 5)
!5067 = !DILocation(line: 820, column: 5, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !346, line: 820, column: 5)
!5069 = !DILocation(line: 824, column: 16, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5025, file: !346, line: 824, column: 9)
!5071 = !DILocation(line: 824, column: 9, scope: !5025)
!5072 = !DILocation(line: 826, column: 18, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !346, line: 824, column: 53)
!5074 = !DILocation(line: 828, column: 28, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5073, file: !346, line: 828, column: 13)
!5076 = !DILocation(line: 828, column: 13, scope: !5073)
!5077 = !DILocation(line: 834, column: 18, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5070, file: !346, line: 832, column: 12)
!5079 = !DILocation(line: 836, column: 28, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5078, file: !346, line: 836, column: 13)
!5081 = !DILocation(line: 836, column: 13, scope: !5078)
!5082 = !DILocation(line: 841, column: 5, scope: !5025)
!5083 = !DILocation(line: 842, column: 1, scope: !5025)
!5084 = distinct !DISubprogram(name: "vdma_configure", scope: !346, file: !346, line: 844, type: !5085, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5093)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!4905, !4906, !5087}
!5087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5088, size: 32)
!5088 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !354, line: 283, baseType: !5089)
!5089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 280, size: 64, elements: !5090)
!5090 = !{!5091, !5092}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5089, file: !354, line: 281, baseType: !61, size: 32)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5089, file: !354, line: 282, baseType: !61, size: 32, offset: 32)
!5093 = !{!5094, !5095, !5096}
!5094 = !DILocalVariable(name: "channel", arg: 1, scope: !5084, file: !346, line: 844, type: !4906)
!5095 = !DILocalVariable(name: "vdma_config", arg: 2, scope: !5084, file: !346, line: 844, type: !5087)
!5096 = !DILocalVariable(name: "offset", scope: !5084, file: !346, line: 848, type: !61)
!5097 = !DILocation(line: 0, scope: !5084)
!5098 = !DILocation(line: 850, column: 14, scope: !5084)
!5099 = !DILocation(line: 851, column: 24, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5084, file: !346, line: 851, column: 9)
!5101 = !DILocation(line: 851, column: 9, scope: !5084)
!5102 = !DILocation(line: 856, column: 23, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5084, file: !346, line: 856, column: 9)
!5104 = !DILocation(line: 856, column: 36, scope: !5103)
!5105 = !DILocation(line: 856, column: 41, scope: !5103)
!5106 = !DILocation(line: 856, column: 9, scope: !5084)
!5107 = !DILocation(line: 857, column: 9, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5103, file: !346, line: 856, column: 46)
!5109 = !DILocation(line: 862, column: 17, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5084, file: !346, line: 862, column: 9)
!5111 = !DILocation(line: 862, column: 9, scope: !5084)
!5112 = !DILocation(line: 863, column: 9, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5110, file: !346, line: 862, column: 68)
!5114 = !DILocation(line: 867, column: 46, scope: !5084)
!5115 = !DILocation(line: 867, column: 5, scope: !5084)
!5116 = !DILocation(line: 867, column: 19, scope: !5084)
!5117 = !DILocation(line: 867, column: 31, scope: !5084)
!5118 = !DILocation(line: 868, column: 47, scope: !5084)
!5119 = !DILocation(line: 868, column: 5, scope: !5084)
!5120 = !DILocation(line: 868, column: 19, scope: !5084)
!5121 = !DILocation(line: 868, column: 32, scope: !5084)
!5122 = !DILocation(line: 870, column: 5, scope: !5084)
!5123 = !DILocation(line: 871, column: 1, scope: !5084)
!5124 = distinct !DISubprogram(name: "vdma_enable_interrupt", scope: !346, file: !346, line: 873, type: !4903, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5125)
!5125 = !{!5126, !5127}
!5126 = !DILocalVariable(name: "channel", arg: 1, scope: !5124, file: !346, line: 873, type: !4906)
!5127 = !DILocalVariable(name: "offset", scope: !5124, file: !346, line: 876, type: !61)
!5128 = !DILocation(line: 0, scope: !5124)
!5129 = !DILocation(line: 878, column: 14, scope: !5124)
!5130 = !DILocation(line: 879, column: 24, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5124, file: !346, line: 879, column: 9)
!5132 = !DILocation(line: 879, column: 9, scope: !5124)
!5133 = !DILocation(line: 883, column: 5, scope: !5124)
!5134 = !DILocation(line: 883, column: 19, scope: !5124)
!5135 = !DILocation(line: 883, column: 28, scope: !5124)
!5136 = !DILocation(line: 884, column: 5, scope: !5124)
!5137 = !DILocation(line: 886, column: 1, scope: !5124)
!5138 = distinct !DISubprogram(name: "vdma_start", scope: !346, file: !346, line: 889, type: !4903, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5139)
!5139 = !{!5140, !5141, !5142, !5143}
!5140 = !DILocalVariable(name: "channel", arg: 1, scope: !5138, file: !346, line: 889, type: !4906)
!5141 = !DILocalVariable(name: "offset", scope: !5138, file: !346, line: 892, type: !61)
!5142 = !DILocalVariable(name: "saved_mask", scope: !5138, file: !346, line: 893, type: !61)
!5143 = !DILocalVariable(name: "global_status", scope: !5138, file: !346, line: 895, type: !60)
!5144 = !DILocation(line: 0, scope: !5138)
!5145 = !DILocation(line: 895, column: 5, scope: !5138)
!5146 = !DILocation(line: 895, column: 24, scope: !5138)
!5147 = !DILocation(line: 897, column: 14, scope: !5138)
!5148 = !DILocation(line: 898, column: 24, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5138, file: !346, line: 898, column: 9)
!5150 = !DILocation(line: 898, column: 9, scope: !5138)
!5151 = !DILocation(line: 902, column: 18, scope: !5138)
!5152 = !DILocation(line: 904, column: 21, scope: !5138)
!5153 = !DILocation(line: 904, column: 42, scope: !5138)
!5154 = !DILocation(line: 904, column: 19, scope: !5138)
!5155 = !DILocation(line: 906, column: 9, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5138, file: !346, line: 906, column: 9)
!5157 = !DILocation(line: 906, column: 33, scope: !5156)
!5158 = !DILocation(line: 906, column: 30, scope: !5156)
!5159 = !DILocation(line: 906, column: 23, scope: !5156)
!5160 = !DILocation(line: 906, column: 9, scope: !5138)
!5161 = !DILocation(line: 909, column: 9, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5156, file: !346, line: 906, column: 69)
!5163 = !DILocation(line: 910, column: 9, scope: !5162)
!5164 = !DILocation(line: 916, column: 9, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5138, file: !346, line: 916, column: 9)
!5166 = !DILocation(line: 916, column: 30, scope: !5165)
!5167 = !DILocation(line: 916, column: 23, scope: !5165)
!5168 = !DILocation(line: 916, column: 9, scope: !5138)
!5169 = !DILocation(line: 925, column: 5, scope: !5138)
!5170 = !DILocation(line: 925, column: 19, scope: !5138)
!5171 = !DILocation(line: 925, column: 30, scope: !5138)
!5172 = !DILocation(line: 926, column: 5, scope: !5138)
!5173 = !DILocation(line: 928, column: 1, scope: !5138)
!5174 = distinct !DISubprogram(name: "vdma_disable_interrupt", scope: !346, file: !346, line: 931, type: !4903, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5175)
!5175 = !{!5176, !5177}
!5176 = !DILocalVariable(name: "channel", arg: 1, scope: !5174, file: !346, line: 931, type: !4906)
!5177 = !DILocalVariable(name: "offset", scope: !5174, file: !346, line: 934, type: !61)
!5178 = !DILocation(line: 0, scope: !5174)
!5179 = !DILocation(line: 936, column: 14, scope: !5174)
!5180 = !DILocation(line: 937, column: 24, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5174, file: !346, line: 937, column: 9)
!5182 = !DILocation(line: 937, column: 9, scope: !5174)
!5183 = !DILocation(line: 942, column: 5, scope: !5174)
!5184 = !DILocation(line: 942, column: 19, scope: !5174)
!5185 = !DILocation(line: 942, column: 28, scope: !5174)
!5186 = !DILocation(line: 943, column: 5, scope: !5174)
!5187 = !DILocation(line: 944, column: 1, scope: !5174)
!5188 = distinct !DISubprogram(name: "vdma_stop", scope: !346, file: !346, line: 947, type: !4903, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5189)
!5189 = !{!5190, !5191}
!5190 = !DILocalVariable(name: "channel", arg: 1, scope: !5188, file: !346, line: 947, type: !4906)
!5191 = !DILocalVariable(name: "offset", scope: !5188, file: !346, line: 950, type: !61)
!5192 = !DILocation(line: 0, scope: !5188)
!5193 = !DILocation(line: 952, column: 14, scope: !5188)
!5194 = !DILocation(line: 953, column: 24, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5188, file: !346, line: 953, column: 9)
!5196 = !DILocation(line: 953, column: 9, scope: !5188)
!5197 = !DILocation(line: 957, column: 5, scope: !5188)
!5198 = !DILocation(line: 957, column: 19, scope: !5188)
!5199 = !DILocation(line: 957, column: 30, scope: !5188)
!5200 = !DILocation(line: 958, column: 5, scope: !5188)
!5201 = !DILocation(line: 959, column: 1, scope: !5188)
!5202 = distinct !DISubprogram(name: "vdma_set_threshold", scope: !346, file: !346, line: 961, type: !5203, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5205)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{!4905, !4906, !61}
!5205 = !{!5206, !5207, !5208}
!5206 = !DILocalVariable(name: "channel", arg: 1, scope: !5202, file: !346, line: 961, type: !4906)
!5207 = !DILocalVariable(name: "threshold", arg: 2, scope: !5202, file: !346, line: 961, type: !61)
!5208 = !DILocalVariable(name: "offset", scope: !5202, file: !346, line: 965, type: !61)
!5209 = !DILocation(line: 0, scope: !5202)
!5210 = !DILocation(line: 967, column: 14, scope: !5202)
!5211 = !DILocation(line: 968, column: 24, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5202, file: !346, line: 968, column: 9)
!5213 = !DILocation(line: 968, column: 9, scope: !5202)
!5214 = !DILocation(line: 972, column: 19, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5202, file: !346, line: 972, column: 9)
!5216 = !DILocation(line: 972, column: 9, scope: !5202)
!5217 = !DILocation(line: 975, column: 5, scope: !5202)
!5218 = !DILocation(line: 975, column: 19, scope: !5202)
!5219 = !DILocation(line: 975, column: 30, scope: !5202)
!5220 = !DILocation(line: 977, column: 5, scope: !5202)
!5221 = !DILocation(line: 979, column: 1, scope: !5202)
!5222 = distinct !DISubprogram(name: "vdma_set_alert_length", scope: !346, file: !346, line: 982, type: !5203, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5223)
!5223 = !{!5224, !5225, !5226}
!5224 = !DILocalVariable(name: "channel", arg: 1, scope: !5222, file: !346, line: 982, type: !4906)
!5225 = !DILocalVariable(name: "alert_length", arg: 2, scope: !5222, file: !346, line: 982, type: !61)
!5226 = !DILocalVariable(name: "offset", scope: !5222, file: !346, line: 986, type: !61)
!5227 = !DILocation(line: 0, scope: !5222)
!5228 = !DILocation(line: 988, column: 14, scope: !5222)
!5229 = !DILocation(line: 989, column: 24, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5222, file: !346, line: 989, column: 9)
!5231 = !DILocation(line: 989, column: 9, scope: !5222)
!5232 = !DILocation(line: 993, column: 22, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5222, file: !346, line: 993, column: 9)
!5234 = !DILocation(line: 993, column: 9, scope: !5222)
!5235 = !DILocation(line: 996, column: 5, scope: !5222)
!5236 = !DILocation(line: 996, column: 19, scope: !5222)
!5237 = !DILocation(line: 996, column: 31, scope: !5222)
!5238 = !DILocation(line: 998, column: 5, scope: !5222)
!5239 = !DILocation(line: 1000, column: 1, scope: !5222)
!5240 = distinct !DISubprogram(name: "vdma_push_data", scope: !346, file: !346, line: 1002, type: !5241, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5243)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{!4905, !4906, !463}
!5243 = !{!5244, !5245, !5246}
!5244 = !DILocalVariable(name: "channel", arg: 1, scope: !5240, file: !346, line: 1002, type: !4906)
!5245 = !DILocalVariable(name: "data", arg: 2, scope: !5240, file: !346, line: 1002, type: !463)
!5246 = !DILocalVariable(name: "offset", scope: !5240, file: !346, line: 1007, type: !61)
!5247 = !DILocation(line: 0, scope: !5240)
!5248 = !DILocation(line: 1008, column: 14, scope: !5240)
!5249 = !DILocation(line: 1009, column: 24, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5240, file: !346, line: 1009, column: 9)
!5251 = !DILocation(line: 1009, column: 9, scope: !5240)
!5252 = !DILocation(line: 1016, column: 36, scope: !5240)
!5253 = !DILocation(line: 1016, column: 5, scope: !5240)
!5254 = !DILocation(line: 1016, column: 24, scope: !5240)
!5255 = !DILocation(line: 1016, column: 34, scope: !5240)
!5256 = !DILocation(line: 1018, column: 5, scope: !5240)
!5257 = !DILocation(line: 1019, column: 1, scope: !5240)
!5258 = distinct !DISubprogram(name: "vdma_pop_data", scope: !346, file: !346, line: 1021, type: !5259, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5261)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{!4905, !4906, !969}
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "channel", arg: 1, scope: !5258, file: !346, line: 1021, type: !4906)
!5263 = !DILocalVariable(name: "data", arg: 2, scope: !5258, file: !346, line: 1021, type: !969)
!5264 = !DILocalVariable(name: "offset", scope: !5258, file: !346, line: 1026, type: !61)
!5265 = !DILocation(line: 0, scope: !5258)
!5266 = !DILocation(line: 1028, column: 14, scope: !5258)
!5267 = !DILocation(line: 1029, column: 24, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5258, file: !346, line: 1029, column: 9)
!5269 = !DILocation(line: 1029, column: 9, scope: !5258)
!5270 = !DILocation(line: 1036, column: 13, scope: !5258)
!5271 = !DILocation(line: 1036, column: 32, scope: !5258)
!5272 = !DILocation(line: 1036, column: 11, scope: !5258)
!5273 = !DILocation(line: 1038, column: 5, scope: !5258)
!5274 = !DILocation(line: 1039, column: 1, scope: !5258)
!5275 = distinct !DISubprogram(name: "vdma_get_available_receive_bytes", scope: !346, file: !346, line: 1041, type: !5276, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!4905, !4906, !1395}
!5278 = !{!5279, !5280, !5281}
!5279 = !DILocalVariable(name: "channel", arg: 1, scope: !5275, file: !346, line: 1041, type: !4906)
!5280 = !DILocalVariable(name: "receive_bytes", arg: 2, scope: !5275, file: !346, line: 1041, type: !1395)
!5281 = !DILocalVariable(name: "offset", scope: !5275, file: !346, line: 1045, type: !61)
!5282 = !DILocation(line: 0, scope: !5275)
!5283 = !DILocation(line: 1047, column: 14, scope: !5275)
!5284 = !DILocation(line: 1048, column: 24, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5275, file: !346, line: 1048, column: 9)
!5286 = !DILocation(line: 1048, column: 9, scope: !5275)
!5287 = !DILocation(line: 1052, column: 22, scope: !5275)
!5288 = !DILocation(line: 1052, column: 36, scope: !5275)
!5289 = !DILocation(line: 1052, column: 20, scope: !5275)
!5290 = !DILocation(line: 1054, column: 5, scope: !5275)
!5291 = !DILocation(line: 1056, column: 1, scope: !5275)
!5292 = distinct !DISubprogram(name: "vdma_get_available_send_space", scope: !346, file: !346, line: 1058, type: !5276, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5293)
!5293 = !{!5294, !5295, !5296, !5297, !5298}
!5294 = !DILocalVariable(name: "channel", arg: 1, scope: !5292, file: !346, line: 1058, type: !4906)
!5295 = !DILocalVariable(name: "available_space", arg: 2, scope: !5292, file: !346, line: 1058, type: !1395)
!5296 = !DILocalVariable(name: "offset", scope: !5292, file: !346, line: 1063, type: !61)
!5297 = !DILocalVariable(name: "total_size", scope: !5292, file: !346, line: 1066, type: !61)
!5298 = !DILocalVariable(name: "valid_size", scope: !5292, file: !346, line: 1069, type: !61)
!5299 = !DILocation(line: 0, scope: !5292)
!5300 = !DILocation(line: 1071, column: 14, scope: !5292)
!5301 = !DILocation(line: 1072, column: 24, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5292, file: !346, line: 1072, column: 9)
!5303 = !DILocation(line: 1072, column: 9, scope: !5292)
!5304 = !DILocation(line: 1077, column: 18, scope: !5292)
!5305 = !DILocation(line: 1077, column: 32, scope: !5292)
!5306 = !DILocation(line: 1078, column: 32, scope: !5292)
!5307 = !DILocation(line: 1080, column: 35, scope: !5292)
!5308 = !DILocation(line: 1080, column: 22, scope: !5292)
!5309 = !DILocation(line: 1082, column: 5, scope: !5292)
!5310 = !DILocation(line: 1084, column: 1, scope: !5292)
!5311 = distinct !DISubprogram(name: "vdma_register_callback", scope: !346, file: !346, line: 1087, type: !5312, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5314)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!4905, !4906, !541, !88}
!5314 = !{!5315, !5316, !5317, !5318}
!5315 = !DILocalVariable(name: "channel", arg: 1, scope: !5311, file: !346, line: 1087, type: !4906)
!5316 = !DILocalVariable(name: "callback", arg: 2, scope: !5311, file: !346, line: 1087, type: !541)
!5317 = !DILocalVariable(name: "user_data", arg: 3, scope: !5311, file: !346, line: 1087, type: !88)
!5318 = !DILocalVariable(name: "offset", scope: !5311, file: !346, line: 1091, type: !61)
!5319 = !DILocation(line: 0, scope: !5311)
!5320 = !DILocation(line: 1093, column: 14, scope: !5311)
!5321 = !DILocation(line: 1094, column: 24, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5311, file: !346, line: 1094, column: 9)
!5323 = !DILocation(line: 1094, column: 9, scope: !5311)
!5324 = !DILocation(line: 1098, column: 33, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5311, file: !346, line: 1098, column: 9)
!5326 = !DILocation(line: 1098, column: 38, scope: !5325)
!5327 = !DILocation(line: 1098, column: 9, scope: !5311)
!5328 = !DILocation(line: 1099, column: 38, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5325, file: !346, line: 1098, column: 47)
!5330 = !DILocation(line: 1100, column: 33, scope: !5329)
!5331 = !DILocation(line: 1100, column: 43, scope: !5329)
!5332 = !DILocation(line: 1101, column: 5, scope: !5329)
!5333 = !DILocation(line: 1105, column: 1, scope: !5311)
!5334 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !592, file: !592, line: 50, type: !5335, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5338)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{!61, !5337}
!5337 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !594)
!5338 = !{!5339, !5340, !5341}
!5339 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5334, file: !592, line: 50, type: !5337)
!5340 = !DILocalVariable(name: "i", scope: !5334, file: !592, line: 52, type: !61)
!5341 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !5334, file: !592, line: 53, type: !1303)
!5342 = !DILocation(line: 0, scope: !5334)
!5343 = !DILocation(line: 53, column: 14, scope: !5334)
!5344 = !DILocation(line: 55, column: 5, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5334, file: !592, line: 55, column: 5)
!5346 = !DILocation(line: 55, column: 25, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5345, file: !592, line: 55, column: 5)
!5348 = !DILocation(line: 55, column: 19, scope: !5347)
!5349 = distinct !{!5349, !5344, !5350}
!5350 = !DILocation(line: 59, column: 5, scope: !5345)
!5351 = !DILocation(line: 56, column: 13, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !592, line: 56, column: 13)
!5353 = distinct !DILexicalBlock(scope: !5347, file: !592, line: 55, column: 29)
!5354 = !DILocation(line: 56, column: 40, scope: !5352)
!5355 = !DILocation(line: 56, column: 13, scope: !5353)
!5356 = !DILocation(line: 61, column: 1, scope: !5334)
!5357 = distinct !DISubprogram(name: "hal_gpio_init", scope: !592, file: !592, line: 66, type: !5358, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5361)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{!5360, !5337}
!5360 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !647, line: 229, baseType: !646)
!5361 = !{!5362}
!5362 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5357, file: !592, line: 66, type: !5337)
!5363 = !DILocation(line: 0, scope: !5357)
!5364 = !DILocation(line: 68, column: 5, scope: !5357)
!5365 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !592, file: !592, line: 72, type: !5358, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5366)
!5366 = !{!5367}
!5367 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5365, file: !592, line: 72, type: !5337)
!5368 = !DILocation(line: 0, scope: !5365)
!5369 = !DILocation(line: 74, column: 5, scope: !5365)
!5370 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !592, file: !592, line: 79, type: !5371, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5373)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!5360, !5337, !688}
!5373 = !{!5374, !5375, !5376, !5377}
!5374 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5370, file: !592, line: 79, type: !5337)
!5375 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5370, file: !592, line: 79, type: !688)
!5376 = !DILocalVariable(name: "no", scope: !5370, file: !592, line: 81, type: !61)
!5377 = !DILocalVariable(name: "remainder", scope: !5370, file: !592, line: 82, type: !61)
!5378 = !DILocation(line: 0, scope: !5370)
!5379 = !DILocation(line: 84, column: 18, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5370, file: !592, line: 84, column: 9)
!5381 = !DILocation(line: 84, column: 9, scope: !5370)
!5382 = !DILocation(line: 89, column: 19, scope: !5370)
!5383 = !DILocation(line: 92, column: 26, scope: !5370)
!5384 = !DILocation(line: 94, column: 24, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5370, file: !592, line: 94, column: 9)
!5386 = !DILocation(line: 0, scope: !5385)
!5387 = !DILocation(line: 94, column: 9, scope: !5370)
!5388 = !DILocation(line: 101, column: 1, scope: !5370)
!5389 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !592, file: !592, line: 105, type: !5390, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5393)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!5360, !5337, !5392}
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!5393 = !{!5394, !5395, !5396, !5397, !5398}
!5394 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5389, file: !592, line: 105, type: !5337)
!5395 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5389, file: !592, line: 105, type: !5392)
!5396 = !DILocalVariable(name: "no", scope: !5389, file: !592, line: 107, type: !61)
!5397 = !DILocalVariable(name: "remainder", scope: !5389, file: !592, line: 108, type: !61)
!5398 = !DILocalVariable(name: "temp", scope: !5389, file: !592, line: 109, type: !61)
!5399 = !DILocation(line: 0, scope: !5389)
!5400 = !DILocation(line: 111, column: 18, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5389, file: !592, line: 111, column: 9)
!5402 = !DILocation(line: 111, column: 9, scope: !5389)
!5403 = !DILocation(line: 115, column: 14, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5389, file: !592, line: 115, column: 9)
!5405 = !DILocation(line: 115, column: 9, scope: !5389)
!5406 = !DILocation(line: 120, column: 19, scope: !5389)
!5407 = !DILocation(line: 123, column: 26, scope: !5389)
!5408 = !DILocation(line: 125, column: 12, scope: !5389)
!5409 = !DILocation(line: 125, column: 54, scope: !5389)
!5410 = !DILocation(line: 126, column: 45, scope: !5389)
!5411 = !DILocation(line: 126, column: 17, scope: !5389)
!5412 = !DILocation(line: 127, column: 51, scope: !5389)
!5413 = !DILocation(line: 127, column: 21, scope: !5389)
!5414 = !DILocation(line: 128, column: 5, scope: !5389)
!5415 = !DILocation(line: 130, column: 1, scope: !5389)
!5416 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !592, file: !592, line: 134, type: !5417, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5420)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!5419, !5337, !463}
!5419 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !647, line: 238, baseType: !657)
!5420 = !{!5421, !5422, !5423, !5424, !5425}
!5421 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5416, file: !592, line: 134, type: !5337)
!5422 = !DILocalVariable(name: "function_index", arg: 2, scope: !5416, file: !592, line: 134, type: !463)
!5423 = !DILocalVariable(name: "no", scope: !5416, file: !592, line: 136, type: !61)
!5424 = !DILocalVariable(name: "remainder", scope: !5416, file: !592, line: 137, type: !61)
!5425 = !DILocalVariable(name: "irq_status", scope: !5416, file: !592, line: 138, type: !61)
!5426 = !DILocation(line: 0, scope: !5416)
!5427 = !DILocation(line: 140, column: 18, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5416, file: !592, line: 140, column: 9)
!5429 = !DILocation(line: 140, column: 9, scope: !5416)
!5430 = !DILocation(line: 145, column: 24, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5416, file: !592, line: 145, column: 9)
!5432 = !DILocation(line: 145, column: 9, scope: !5416)
!5433 = !DILocation(line: 145, column: 9, scope: !5431)
!5434 = !DILocation(line: 150, column: 19, scope: !5416)
!5435 = !DILocation(line: 156, column: 18, scope: !5416)
!5436 = !DILocation(line: 157, column: 105, scope: !5416)
!5437 = !DILocation(line: 157, column: 91, scope: !5416)
!5438 = !DILocation(line: 157, column: 5, scope: !5416)
!5439 = !DILocation(line: 157, column: 48, scope: !5416)
!5440 = !DILocation(line: 157, column: 62, scope: !5416)
!5441 = !DILocation(line: 158, column: 80, scope: !5416)
!5442 = !DILocation(line: 158, column: 5, scope: !5416)
!5443 = !DILocation(line: 158, column: 48, scope: !5416)
!5444 = !DILocation(line: 158, column: 62, scope: !5416)
!5445 = !DILocation(line: 159, column: 5, scope: !5416)
!5446 = !DILocation(line: 160, column: 5, scope: !5416)
!5447 = !DILocation(line: 162, column: 1, scope: !5416)
!5448 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !592, file: !592, line: 166, type: !5449, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5452)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!5360, !5337, !5451}
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 32)
!5452 = !{!5453, !5454, !5455, !5456, !5457}
!5453 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5448, file: !592, line: 166, type: !5337)
!5454 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5448, file: !592, line: 166, type: !5451)
!5455 = !DILocalVariable(name: "no", scope: !5448, file: !592, line: 168, type: !61)
!5456 = !DILocalVariable(name: "remainder", scope: !5448, file: !592, line: 169, type: !61)
!5457 = !DILocalVariable(name: "temp", scope: !5448, file: !592, line: 170, type: !61)
!5458 = !DILocation(line: 0, scope: !5448)
!5459 = !DILocation(line: 172, column: 18, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5448, file: !592, line: 172, column: 9)
!5461 = !DILocation(line: 172, column: 9, scope: !5448)
!5462 = !DILocation(line: 176, column: 14, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5448, file: !592, line: 176, column: 9)
!5464 = !DILocation(line: 176, column: 9, scope: !5448)
!5465 = !DILocation(line: 181, column: 19, scope: !5448)
!5466 = !DILocation(line: 184, column: 26, scope: !5448)
!5467 = !DILocation(line: 186, column: 12, scope: !5448)
!5468 = !DILocation(line: 186, column: 54, scope: !5448)
!5469 = !DILocation(line: 187, column: 45, scope: !5448)
!5470 = !DILocation(line: 187, column: 17, scope: !5448)
!5471 = !DILocation(line: 188, column: 41, scope: !5448)
!5472 = !DILocation(line: 188, column: 16, scope: !5448)
!5473 = !DILocation(line: 189, column: 5, scope: !5448)
!5474 = !DILocation(line: 191, column: 1, scope: !5448)
!5475 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !592, file: !592, line: 195, type: !5476, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5478)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!5360, !5337, !689}
!5478 = !{!5479, !5480, !5481, !5482}
!5479 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5475, file: !592, line: 195, type: !5337)
!5480 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5475, file: !592, line: 195, type: !689)
!5481 = !DILocalVariable(name: "no", scope: !5475, file: !592, line: 197, type: !61)
!5482 = !DILocalVariable(name: "remainder", scope: !5475, file: !592, line: 198, type: !61)
!5483 = !DILocation(line: 0, scope: !5475)
!5484 = !DILocation(line: 200, column: 18, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5475, file: !592, line: 200, column: 9)
!5486 = !DILocation(line: 200, column: 9, scope: !5475)
!5487 = !DILocation(line: 205, column: 19, scope: !5475)
!5488 = !DILocation(line: 208, column: 26, scope: !5475)
!5489 = !DILocation(line: 210, column: 9, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5475, file: !592, line: 210, column: 9)
!5491 = !DILocation(line: 0, scope: !5490)
!5492 = !DILocation(line: 210, column: 9, scope: !5475)
!5493 = !DILocation(line: 216, column: 1, scope: !5475)
!5494 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !592, file: !592, line: 220, type: !5449, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5495)
!5495 = !{!5496, !5497, !5498, !5499, !5500}
!5496 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5494, file: !592, line: 220, type: !5337)
!5497 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5494, file: !592, line: 220, type: !5451)
!5498 = !DILocalVariable(name: "no", scope: !5494, file: !592, line: 222, type: !61)
!5499 = !DILocalVariable(name: "remainder", scope: !5494, file: !592, line: 223, type: !61)
!5500 = !DILocalVariable(name: "temp", scope: !5494, file: !592, line: 224, type: !61)
!5501 = !DILocation(line: 0, scope: !5494)
!5502 = !DILocation(line: 226, column: 18, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5494, file: !592, line: 226, column: 9)
!5504 = !DILocation(line: 226, column: 9, scope: !5494)
!5505 = !DILocation(line: 230, column: 14, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5494, file: !592, line: 230, column: 9)
!5507 = !DILocation(line: 230, column: 9, scope: !5494)
!5508 = !DILocation(line: 235, column: 19, scope: !5494)
!5509 = !DILocation(line: 238, column: 26, scope: !5494)
!5510 = !DILocation(line: 240, column: 12, scope: !5494)
!5511 = !DILocation(line: 240, column: 55, scope: !5494)
!5512 = !DILocation(line: 241, column: 45, scope: !5494)
!5513 = !DILocation(line: 241, column: 17, scope: !5494)
!5514 = !DILocation(line: 242, column: 41, scope: !5494)
!5515 = !DILocation(line: 242, column: 16, scope: !5494)
!5516 = !DILocation(line: 243, column: 5, scope: !5494)
!5517 = !DILocation(line: 245, column: 1, scope: !5494)
!5518 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !592, file: !592, line: 249, type: !5358, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5519)
!5519 = !{!5520, !5521, !5522, !5523}
!5520 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5518, file: !592, line: 249, type: !5337)
!5521 = !DILocalVariable(name: "no", scope: !5518, file: !592, line: 251, type: !61)
!5522 = !DILocalVariable(name: "remainder", scope: !5518, file: !592, line: 252, type: !61)
!5523 = !DILocalVariable(name: "temp", scope: !5518, file: !592, line: 253, type: !61)
!5524 = !DILocation(line: 0, scope: !5518)
!5525 = !DILocation(line: 255, column: 18, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5518, file: !592, line: 255, column: 9)
!5527 = !DILocation(line: 255, column: 9, scope: !5518)
!5528 = !DILocation(line: 260, column: 19, scope: !5518)
!5529 = !DILocation(line: 263, column: 26, scope: !5518)
!5530 = !DILocation(line: 265, column: 12, scope: !5518)
!5531 = !DILocation(line: 265, column: 55, scope: !5518)
!5532 = !DILocation(line: 266, column: 45, scope: !5518)
!5533 = !DILocation(line: 266, column: 17, scope: !5518)
!5534 = !DILocation(line: 267, column: 15, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5518, file: !592, line: 267, column: 9)
!5536 = !DILocation(line: 267, column: 9, scope: !5518)
!5537 = !DILocation(line: 0, scope: !5535)
!5538 = !DILocation(line: 273, column: 1, scope: !5518)
!5539 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !592, file: !592, line: 278, type: !5358, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5540)
!5540 = !{!5541, !5542, !5543}
!5541 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5539, file: !592, line: 278, type: !5337)
!5542 = !DILocalVariable(name: "no", scope: !5539, file: !592, line: 280, type: !61)
!5543 = !DILocalVariable(name: "remainder", scope: !5539, file: !592, line: 281, type: !61)
!5544 = !DILocation(line: 0, scope: !5539)
!5545 = !DILocation(line: 283, column: 18, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5539, file: !592, line: 283, column: 9)
!5547 = !DILocation(line: 283, column: 9, scope: !5539)
!5548 = !DILocation(line: 288, column: 19, scope: !5539)
!5549 = !DILocation(line: 291, column: 26, scope: !5539)
!5550 = !DILocation(line: 293, column: 90, scope: !5539)
!5551 = !DILocation(line: 293, column: 5, scope: !5539)
!5552 = !DILocation(line: 293, column: 48, scope: !5539)
!5553 = !DILocation(line: 293, column: 62, scope: !5539)
!5554 = !DILocation(line: 294, column: 5, scope: !5539)
!5555 = !DILocation(line: 295, column: 1, scope: !5539)
!5556 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !592, file: !592, line: 299, type: !5358, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5557)
!5557 = !{!5558, !5559, !5560}
!5558 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5556, file: !592, line: 299, type: !5337)
!5559 = !DILocalVariable(name: "no", scope: !5556, file: !592, line: 301, type: !61)
!5560 = !DILocalVariable(name: "remainder", scope: !5556, file: !592, line: 302, type: !61)
!5561 = !DILocation(line: 0, scope: !5556)
!5562 = !DILocation(line: 304, column: 18, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5556, file: !592, line: 304, column: 9)
!5564 = !DILocation(line: 304, column: 9, scope: !5556)
!5565 = !DILocation(line: 309, column: 19, scope: !5556)
!5566 = !DILocation(line: 312, column: 26, scope: !5556)
!5567 = !DILocation(line: 314, column: 90, scope: !5556)
!5568 = !DILocation(line: 314, column: 5, scope: !5556)
!5569 = !DILocation(line: 314, column: 48, scope: !5556)
!5570 = !DILocation(line: 314, column: 62, scope: !5556)
!5571 = !DILocation(line: 315, column: 5, scope: !5556)
!5572 = !DILocation(line: 316, column: 1, scope: !5556)
!5573 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !592, file: !592, line: 321, type: !5358, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5574)
!5574 = !{!5575, !5576, !5577}
!5575 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5573, file: !592, line: 321, type: !5337)
!5576 = !DILocalVariable(name: "no", scope: !5573, file: !592, line: 323, type: !61)
!5577 = !DILocalVariable(name: "remainder", scope: !5573, file: !592, line: 324, type: !61)
!5578 = !DILocation(line: 0, scope: !5573)
!5579 = !DILocation(line: 326, column: 19, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5573, file: !592, line: 326, column: 9)
!5581 = !DILocation(line: 326, column: 36, scope: !5580)
!5582 = !DILocation(line: 326, column: 41, scope: !5580)
!5583 = !DILocation(line: 326, column: 9, scope: !5573)
!5584 = !DILocation(line: 331, column: 19, scope: !5573)
!5585 = !DILocation(line: 334, column: 26, scope: !5573)
!5586 = !DILocation(line: 336, column: 94, scope: !5573)
!5587 = !DILocation(line: 336, column: 5, scope: !5573)
!5588 = !DILocation(line: 336, column: 50, scope: !5573)
!5589 = !DILocation(line: 336, column: 66, scope: !5573)
!5590 = !DILocation(line: 337, column: 5, scope: !5573)
!5591 = !DILocation(line: 337, column: 51, scope: !5573)
!5592 = !DILocation(line: 337, column: 68, scope: !5573)
!5593 = !DILocation(line: 338, column: 5, scope: !5573)
!5594 = !DILocation(line: 339, column: 1, scope: !5573)
!5595 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !592, file: !592, line: 343, type: !5358, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5596)
!5596 = !{!5597, !5598, !5599}
!5597 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5595, file: !592, line: 343, type: !5337)
!5598 = !DILocalVariable(name: "no", scope: !5595, file: !592, line: 345, type: !61)
!5599 = !DILocalVariable(name: "remainder", scope: !5595, file: !592, line: 346, type: !61)
!5600 = !DILocation(line: 0, scope: !5595)
!5601 = !DILocation(line: 348, column: 19, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5595, file: !592, line: 348, column: 9)
!5603 = !DILocation(line: 348, column: 36, scope: !5602)
!5604 = !DILocation(line: 348, column: 41, scope: !5602)
!5605 = !DILocation(line: 348, column: 9, scope: !5595)
!5606 = !DILocation(line: 353, column: 19, scope: !5595)
!5607 = !DILocation(line: 356, column: 26, scope: !5595)
!5608 = !DILocation(line: 358, column: 94, scope: !5595)
!5609 = !DILocation(line: 358, column: 5, scope: !5595)
!5610 = !DILocation(line: 358, column: 50, scope: !5595)
!5611 = !DILocation(line: 358, column: 66, scope: !5595)
!5612 = !DILocation(line: 359, column: 5, scope: !5595)
!5613 = !DILocation(line: 359, column: 51, scope: !5595)
!5614 = !DILocation(line: 359, column: 68, scope: !5595)
!5615 = !DILocation(line: 360, column: 5, scope: !5595)
!5616 = !DILocation(line: 361, column: 1, scope: !5595)
!5617 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !592, file: !592, line: 365, type: !5358, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5618)
!5618 = !{!5619, !5620, !5621}
!5619 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5617, file: !592, line: 365, type: !5337)
!5620 = !DILocalVariable(name: "no", scope: !5617, file: !592, line: 367, type: !61)
!5621 = !DILocalVariable(name: "remainder", scope: !5617, file: !592, line: 368, type: !61)
!5622 = !DILocation(line: 0, scope: !5617)
!5623 = !DILocation(line: 370, column: 19, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5617, file: !592, line: 370, column: 9)
!5625 = !DILocation(line: 370, column: 36, scope: !5624)
!5626 = !DILocation(line: 370, column: 41, scope: !5624)
!5627 = !DILocation(line: 370, column: 9, scope: !5617)
!5628 = !DILocation(line: 375, column: 19, scope: !5617)
!5629 = !DILocation(line: 378, column: 26, scope: !5617)
!5630 = !DILocation(line: 380, column: 94, scope: !5617)
!5631 = !DILocation(line: 380, column: 5, scope: !5617)
!5632 = !DILocation(line: 380, column: 50, scope: !5617)
!5633 = !DILocation(line: 380, column: 66, scope: !5617)
!5634 = !DILocation(line: 381, column: 5, scope: !5617)
!5635 = !DILocation(line: 382, column: 1, scope: !5617)
!5636 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !592, file: !592, line: 387, type: !5637, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5641)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!5360, !5639, !5640}
!5639 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !667)
!5640 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !676)
!5641 = !{!5642, !5643}
!5642 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !5636, file: !592, line: 387, type: !5639)
!5643 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !5636, file: !592, line: 387, type: !5640)
!5644 = !DILocation(line: 0, scope: !5636)
!5645 = !DILocation(line: 390, column: 24, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5636, file: !592, line: 390, column: 9)
!5647 = !DILocation(line: 390, column: 9, scope: !5636)
!5648 = !DILocation(line: 394, column: 5, scope: !5636)
!5649 = !DILocation(line: 394, column: 62, scope: !5636)
!5650 = !DILocation(line: 394, column: 74, scope: !5636)
!5651 = !DILocation(line: 395, column: 5, scope: !5636)
!5652 = !DILocation(line: 396, column: 1, scope: !5636)
!5653 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !592, file: !592, line: 403, type: !5654, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5656)
!5654 = !DISubroutineType(types: !5655)
!5655 = !{!5360, !5337, !463, !463, !463}
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662}
!5657 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5653, file: !592, line: 403, type: !5337)
!5658 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !5653, file: !592, line: 403, type: !463)
!5659 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !5653, file: !592, line: 403, type: !463)
!5660 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !5653, file: !592, line: 403, type: !463)
!5661 = !DILocalVariable(name: "no", scope: !5653, file: !592, line: 405, type: !61)
!5662 = !DILocalVariable(name: "remainder", scope: !5653, file: !592, line: 406, type: !61)
!5663 = !DILocation(line: 0, scope: !5653)
!5664 = !DILocation(line: 408, column: 19, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5653, file: !592, line: 408, column: 9)
!5666 = !DILocation(line: 408, column: 36, scope: !5665)
!5667 = !DILocation(line: 408, column: 40, scope: !5665)
!5668 = !DILocation(line: 408, column: 9, scope: !5653)
!5669 = !DILocation(line: 413, column: 19, scope: !5653)
!5670 = !DILocation(line: 416, column: 26, scope: !5653)
!5671 = !DILocation(line: 418, column: 9, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5653, file: !592, line: 418, column: 9)
!5673 = !DILocation(line: 0, scope: !5672)
!5674 = !DILocation(line: 418, column: 9, scope: !5653)
!5675 = !DILocation(line: 424, column: 9, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5653, file: !592, line: 424, column: 9)
!5677 = !DILocation(line: 0, scope: !5676)
!5678 = !DILocation(line: 424, column: 9, scope: !5653)
!5679 = !DILocation(line: 430, column: 9, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5653, file: !592, line: 430, column: 9)
!5681 = !DILocation(line: 0, scope: !5680)
!5682 = !DILocation(line: 430, column: 9, scope: !5653)
!5683 = !DILocation(line: 436, column: 1, scope: !5653)
!5684 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !592, file: !592, line: 441, type: !5358, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5685)
!5685 = !{!5686, !5687, !5688, !5689, !5690, !5691, !5692}
!5686 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5684, file: !592, line: 441, type: !5337)
!5687 = !DILocalVariable(name: "no1", scope: !5684, file: !592, line: 443, type: !61)
!5688 = !DILocalVariable(name: "no2", scope: !5684, file: !592, line: 443, type: !61)
!5689 = !DILocalVariable(name: "no3", scope: !5684, file: !592, line: 443, type: !61)
!5690 = !DILocalVariable(name: "remainder1", scope: !5684, file: !592, line: 444, type: !61)
!5691 = !DILocalVariable(name: "remainder2", scope: !5684, file: !592, line: 444, type: !61)
!5692 = !DILocalVariable(name: "remainder3", scope: !5684, file: !592, line: 444, type: !61)
!5693 = !DILocation(line: 0, scope: !5684)
!5694 = !DILocation(line: 446, column: 18, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5684, file: !592, line: 446, column: 9)
!5696 = !DILocation(line: 446, column: 9, scope: !5684)
!5697 = !DILocation(line: 451, column: 20, scope: !5684)
!5698 = !DILocation(line: 454, column: 27, scope: !5684)
!5699 = !DILocation(line: 457, column: 20, scope: !5684)
!5700 = !DILocation(line: 463, column: 20, scope: !5684)
!5701 = !DILocation(line: 469, column: 107, scope: !5684)
!5702 = !DILocation(line: 469, column: 92, scope: !5684)
!5703 = !DILocation(line: 469, column: 5, scope: !5684)
!5704 = !DILocation(line: 469, column: 49, scope: !5684)
!5705 = !DILocation(line: 469, column: 63, scope: !5684)
!5706 = !DILocation(line: 472, column: 89, scope: !5684)
!5707 = !DILocation(line: 472, column: 5, scope: !5684)
!5708 = !DILocation(line: 472, column: 48, scope: !5684)
!5709 = !DILocation(line: 472, column: 61, scope: !5684)
!5710 = !DILocation(line: 475, column: 5, scope: !5684)
!5711 = !DILocation(line: 475, column: 48, scope: !5684)
!5712 = !DILocation(line: 475, column: 61, scope: !5684)
!5713 = !DILocation(line: 478, column: 9, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5684, file: !592, line: 478, column: 9)
!5715 = !DILocation(line: 0, scope: !5714)
!5716 = !DILocation(line: 478, column: 9, scope: !5684)
!5717 = !DILocation(line: 479, column: 55, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !592, line: 478, column: 40)
!5719 = !DILocation(line: 480, column: 5, scope: !5718)
!5720 = !DILocation(line: 483, column: 53, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5714, file: !592, line: 482, column: 10)
!5722 = !DILocation(line: 483, column: 67, scope: !5721)
!5723 = !DILocation(line: 484, column: 9, scope: !5721)
!5724 = !DILocation(line: 484, column: 55, scope: !5721)
!5725 = !DILocation(line: 484, column: 71, scope: !5721)
!5726 = !DILocation(line: 485, column: 9, scope: !5721)
!5727 = !DILocation(line: 485, column: 55, scope: !5721)
!5728 = !DILocation(line: 490, column: 5, scope: !5684)
!5729 = !DILocation(line: 490, column: 48, scope: !5684)
!5730 = !DILocation(line: 490, column: 61, scope: !5684)
!5731 = !DILocation(line: 493, column: 5, scope: !5684)
!5732 = !DILocation(line: 493, column: 47, scope: !5684)
!5733 = !DILocation(line: 493, column: 59, scope: !5684)
!5734 = !DILocation(line: 496, column: 108, scope: !5684)
!5735 = !DILocation(line: 496, column: 93, scope: !5684)
!5736 = !DILocation(line: 496, column: 5, scope: !5684)
!5737 = !DILocation(line: 496, column: 50, scope: !5684)
!5738 = !DILocation(line: 496, column: 65, scope: !5684)
!5739 = !DILocation(line: 498, column: 5, scope: !5684)
!5740 = !DILocation(line: 499, column: 1, scope: !5684)
!5741 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !592, file: !592, line: 502, type: !5358, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5742)
!5742 = !{!5743, !5744, !5745, !5746, !5747}
!5743 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5741, file: !592, line: 502, type: !5337)
!5744 = !DILocalVariable(name: "no1", scope: !5741, file: !592, line: 504, type: !61)
!5745 = !DILocalVariable(name: "no2", scope: !5741, file: !592, line: 504, type: !61)
!5746 = !DILocalVariable(name: "remainder1", scope: !5741, file: !592, line: 505, type: !61)
!5747 = !DILocalVariable(name: "remainder2", scope: !5741, file: !592, line: 505, type: !61)
!5748 = !DILocation(line: 0, scope: !5741)
!5749 = !DILocation(line: 507, column: 18, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5741, file: !592, line: 507, column: 9)
!5751 = !DILocation(line: 507, column: 9, scope: !5741)
!5752 = !DILocation(line: 512, column: 20, scope: !5741)
!5753 = !DILocation(line: 515, column: 27, scope: !5741)
!5754 = !DILocation(line: 518, column: 20, scope: !5741)
!5755 = !DILocation(line: 524, column: 107, scope: !5741)
!5756 = !DILocation(line: 524, column: 92, scope: !5741)
!5757 = !DILocation(line: 524, column: 5, scope: !5741)
!5758 = !DILocation(line: 524, column: 49, scope: !5741)
!5759 = !DILocation(line: 524, column: 63, scope: !5741)
!5760 = !DILocation(line: 527, column: 89, scope: !5741)
!5761 = !DILocation(line: 527, column: 5, scope: !5741)
!5762 = !DILocation(line: 527, column: 48, scope: !5741)
!5763 = !DILocation(line: 527, column: 61, scope: !5741)
!5764 = !DILocation(line: 530, column: 9, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5741, file: !592, line: 530, column: 9)
!5766 = !DILocation(line: 0, scope: !5765)
!5767 = !DILocation(line: 530, column: 9, scope: !5741)
!5768 = !DILocation(line: 531, column: 55, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !592, line: 530, column: 40)
!5770 = !DILocation(line: 531, column: 71, scope: !5769)
!5771 = !DILocation(line: 532, column: 9, scope: !5769)
!5772 = !DILocation(line: 532, column: 56, scope: !5769)
!5773 = !DILocation(line: 533, column: 5, scope: !5769)
!5774 = !DILocation(line: 536, column: 53, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5765, file: !592, line: 535, column: 10)
!5776 = !DILocation(line: 536, column: 67, scope: !5775)
!5777 = !DILocation(line: 537, column: 9, scope: !5775)
!5778 = !DILocation(line: 537, column: 55, scope: !5775)
!5779 = !DILocation(line: 537, column: 71, scope: !5775)
!5780 = !DILocation(line: 538, column: 9, scope: !5775)
!5781 = !DILocation(line: 538, column: 55, scope: !5775)
!5782 = !DILocation(line: 543, column: 5, scope: !5741)
!5783 = !DILocation(line: 543, column: 48, scope: !5741)
!5784 = !DILocation(line: 543, column: 61, scope: !5741)
!5785 = !DILocation(line: 546, column: 5, scope: !5741)
!5786 = !DILocation(line: 546, column: 47, scope: !5741)
!5787 = !DILocation(line: 546, column: 59, scope: !5741)
!5788 = !DILocation(line: 549, column: 5, scope: !5741)
!5789 = !DILocation(line: 550, column: 1, scope: !5741)
!5790 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !592, file: !592, line: 554, type: !5791, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5793)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!5360, !5337, !690}
!5793 = !{!5794, !5795, !5796, !5797}
!5794 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5790, file: !592, line: 554, type: !5337)
!5795 = !DILocalVariable(name: "driving", arg: 2, scope: !5790, file: !592, line: 554, type: !690)
!5796 = !DILocalVariable(name: "no", scope: !5790, file: !592, line: 556, type: !61)
!5797 = !DILocalVariable(name: "remainder", scope: !5790, file: !592, line: 557, type: !61)
!5798 = !DILocation(line: 0, scope: !5790)
!5799 = !DILocation(line: 559, column: 19, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5790, file: !592, line: 559, column: 9)
!5801 = !DILocation(line: 559, column: 9, scope: !5790)
!5802 = !DILocation(line: 564, column: 19, scope: !5790)
!5803 = !DILocation(line: 569, column: 102, scope: !5790)
!5804 = !DILocation(line: 569, column: 88, scope: !5790)
!5805 = !DILocation(line: 569, column: 5, scope: !5790)
!5806 = !DILocation(line: 569, column: 47, scope: !5790)
!5807 = !DILocation(line: 569, column: 60, scope: !5790)
!5808 = !DILocation(line: 570, column: 71, scope: !5790)
!5809 = !DILocation(line: 570, column: 5, scope: !5790)
!5810 = !DILocation(line: 570, column: 47, scope: !5790)
!5811 = !DILocation(line: 570, column: 60, scope: !5790)
!5812 = !DILocation(line: 571, column: 5, scope: !5790)
!5813 = !DILocation(line: 572, column: 1, scope: !5790)
!5814 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !592, file: !592, line: 575, type: !5815, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5818)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!5360, !5337, !5817}
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!5818 = !{!5819, !5820, !5821, !5822, !5823}
!5819 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5814, file: !592, line: 575, type: !5337)
!5820 = !DILocalVariable(name: "driving", arg: 2, scope: !5814, file: !592, line: 575, type: !5817)
!5821 = !DILocalVariable(name: "no", scope: !5814, file: !592, line: 577, type: !61)
!5822 = !DILocalVariable(name: "remainder", scope: !5814, file: !592, line: 578, type: !61)
!5823 = !DILocalVariable(name: "temp", scope: !5814, file: !592, line: 579, type: !61)
!5824 = !DILocation(line: 0, scope: !5814)
!5825 = !DILocation(line: 581, column: 19, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5814, file: !592, line: 581, column: 9)
!5827 = !DILocation(line: 581, column: 9, scope: !5814)
!5828 = !DILocation(line: 585, column: 14, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5814, file: !592, line: 585, column: 9)
!5830 = !DILocation(line: 585, column: 9, scope: !5814)
!5831 = !DILocation(line: 590, column: 19, scope: !5814)
!5832 = !DILocation(line: 595, column: 12, scope: !5814)
!5833 = !DILocation(line: 595, column: 54, scope: !5814)
!5834 = !DILocation(line: 596, column: 59, scope: !5814)
!5835 = !DILocation(line: 596, column: 45, scope: !5814)
!5836 = !DILocation(line: 596, column: 17, scope: !5814)
!5837 = !DILocation(line: 597, column: 18, scope: !5814)
!5838 = !DILocation(line: 600, column: 56, scope: !5814)
!5839 = !DILocation(line: 600, column: 14, scope: !5814)
!5840 = !DILocation(line: 602, column: 5, scope: !5814)
!5841 = !DILocation(line: 603, column: 1, scope: !5814)
!5842 = distinct !DISubprogram(name: "uart_receive_handler", scope: !868, file: !868, line: 146, type: !5843, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5845)
!5843 = !DISubroutineType(types: !5844)
!5844 = !{null, !942, !91}
!5845 = !{!5846, !5847, !5848, !5849, !5850, !5851, !5852, !5908}
!5846 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5842, file: !868, line: 146, type: !942)
!5847 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !5842, file: !868, line: 146, type: !91)
!5848 = !DILocalVariable(name: "channel", scope: !5842, file: !868, line: 148, type: !4906)
!5849 = !DILocalVariable(name: "avail_bytes", scope: !5842, file: !868, line: 149, type: !61)
!5850 = !DILocalVariable(name: "callback", scope: !5842, file: !868, line: 150, type: !951)
!5851 = !DILocalVariable(name: "arg", scope: !5842, file: !868, line: 151, type: !88)
!5852 = !DILocalVariable(name: "uartx", scope: !5842, file: !868, line: 152, type: !5853)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 32)
!5854 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5855)
!5855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5856)
!5856 = !{!5857, !5863, !5868, !5874, !5875, !5880, !5885, !5886, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907}
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5855, file: !56, line: 547, baseType: !5858, size: 32)
!5858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !56, line: 543, size: 32, elements: !5859)
!5859 = !{!5860, !5861, !5862}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5858, file: !56, line: 544, baseType: !272, size: 32)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5858, file: !56, line: 545, baseType: !60, size: 32)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5858, file: !56, line: 546, baseType: !60, size: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5855, file: !56, line: 551, baseType: !5864, size: 32, offset: 32)
!5864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !56, line: 548, size: 32, elements: !5865)
!5865 = !{!5866, !5867}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5864, file: !56, line: 549, baseType: !60, size: 32)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5864, file: !56, line: 550, baseType: !60, size: 32)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5855, file: !56, line: 556, baseType: !5869, size: 32, offset: 64)
!5869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !56, line: 552, size: 32, elements: !5870)
!5870 = !{!5871, !5872, !5873}
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5869, file: !56, line: 553, baseType: !272, size: 32)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5869, file: !56, line: 554, baseType: !60, size: 32)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5869, file: !56, line: 555, baseType: !60, size: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5855, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5855, file: !56, line: 561, baseType: !5876, size: 32, offset: 128)
!5876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !56, line: 558, size: 32, elements: !5877)
!5877 = !{!5878, !5879}
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5876, file: !56, line: 559, baseType: !60, size: 32)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5876, file: !56, line: 560, baseType: !60, size: 32)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5855, file: !56, line: 565, baseType: !5881, size: 32, offset: 160)
!5881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !56, line: 562, size: 32, elements: !5882)
!5882 = !{!5883, !5884}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5881, file: !56, line: 563, baseType: !272, size: 32)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5881, file: !56, line: 564, baseType: !60, size: 32)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5855, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5855, file: !56, line: 570, baseType: !5887, size: 32, offset: 224)
!5887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !56, line: 567, size: 32, elements: !5888)
!5888 = !{!5889, !5890}
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5887, file: !56, line: 568, baseType: !60, size: 32)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5887, file: !56, line: 569, baseType: !60, size: 32)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5855, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5855, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5855, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5855, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5855, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5855, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5855, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5855, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5855, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5855, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5855, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5855, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5855, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5855, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5855, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5855, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5855, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5908 = !DILocalVariable(name: "status", scope: !5842, file: !868, line: 153, type: !4905)
!5909 = !DILocation(line: 0, scope: !5842)
!5910 = !DILocation(line: 149, column: 5, scope: !5842)
!5911 = !DILocation(line: 155, column: 9, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 155, column: 9)
!5913 = !DILocation(line: 155, column: 36, scope: !5912)
!5914 = !DILocation(line: 155, column: 9, scope: !5842)
!5915 = !DILocation(line: 156, column: 9, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !868, line: 155, column: 70)
!5917 = !DILocation(line: 160, column: 13, scope: !5842)
!5918 = !DILocation(line: 161, column: 15, scope: !5842)
!5919 = !DILocation(line: 163, column: 9, scope: !5842)
!5920 = !DILocation(line: 164, column: 9, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !868, line: 163, column: 29)
!5922 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 163, column: 9)
!5923 = !DILocation(line: 165, column: 5, scope: !5921)
!5924 = !DILocation(line: 167, column: 14, scope: !5842)
!5925 = !DILocation(line: 168, column: 16, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 168, column: 9)
!5927 = !DILocation(line: 168, column: 9, scope: !5842)
!5928 = !DILocation(line: 169, column: 9, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5926, file: !868, line: 168, column: 28)
!5930 = !DILocation(line: 172, column: 9, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 172, column: 9)
!5932 = !DILocation(line: 172, column: 21, scope: !5931)
!5933 = !DILocation(line: 172, column: 9, scope: !5842)
!5934 = !DILocation(line: 176, column: 43, scope: !5842)
!5935 = !DILocation(line: 178, column: 18, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 178, column: 9)
!5937 = !DILocation(line: 178, column: 9, scope: !5842)
!5938 = !DILocation(line: 179, column: 9, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5936, file: !868, line: 178, column: 27)
!5940 = !DILocation(line: 177, column: 38, scope: !5842)
!5941 = !DILocation(line: 183, column: 5, scope: !5842)
!5942 = !DILocation(line: 184, column: 5, scope: !5842)
!5943 = !DILocation(line: 185, column: 5, scope: !5842)
!5944 = !DILocation(line: 187, column: 14, scope: !5842)
!5945 = !DILocation(line: 188, column: 16, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 188, column: 9)
!5947 = !DILocation(line: 188, column: 9, scope: !5842)
!5948 = !DILocation(line: 189, column: 9, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5946, file: !868, line: 188, column: 28)
!5950 = !DILocation(line: 192, column: 9, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5842, file: !868, line: 192, column: 9)
!5952 = !DILocation(line: 192, column: 53, scope: !5951)
!5953 = !DILocation(line: 192, column: 21, scope: !5951)
!5954 = !DILocation(line: 192, column: 9, scope: !5842)
!5955 = !DILocation(line: 193, column: 18, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5951, file: !868, line: 192, column: 83)
!5957 = !DILocation(line: 194, column: 20, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5956, file: !868, line: 194, column: 13)
!5959 = !DILocation(line: 194, column: 13, scope: !5956)
!5960 = !DILocation(line: 195, column: 13, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5958, file: !868, line: 194, column: 32)
!5962 = !DILocation(line: 199, column: 1, scope: !5842)
!5963 = distinct !DISubprogram(name: "uart_send_handler", scope: !868, file: !868, line: 210, type: !5843, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5964)
!5964 = !{!5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972}
!5965 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5963, file: !868, line: 210, type: !942)
!5966 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !5963, file: !868, line: 210, type: !91)
!5967 = !DILocalVariable(name: "channel", scope: !5963, file: !868, line: 212, type: !4906)
!5968 = !DILocalVariable(name: "status", scope: !5963, file: !868, line: 213, type: !4905)
!5969 = !DILocalVariable(name: "compare_space", scope: !5963, file: !868, line: 214, type: !61)
!5970 = !DILocalVariable(name: "avail_space", scope: !5963, file: !868, line: 214, type: !61)
!5971 = !DILocalVariable(name: "callback", scope: !5963, file: !868, line: 215, type: !951)
!5972 = !DILocalVariable(name: "arg", scope: !5963, file: !868, line: 216, type: !88)
!5973 = !DILocation(line: 0, scope: !5963)
!5974 = !DILocation(line: 214, column: 5, scope: !5963)
!5975 = !DILocation(line: 221, column: 9, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5963, file: !868, line: 221, column: 9)
!5977 = !DILocation(line: 221, column: 36, scope: !5976)
!5978 = !DILocation(line: 221, column: 9, scope: !5963)
!5979 = !DILocation(line: 222, column: 9, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5976, file: !868, line: 221, column: 70)
!5981 = !DILocation(line: 226, column: 15, scope: !5963)
!5982 = !DILocation(line: 228, column: 9, scope: !5963)
!5983 = !DILocation(line: 253, column: 47, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5985, file: !868, line: 252, column: 12)
!5985 = distinct !DILexicalBlock(scope: !5963, file: !868, line: 228, column: 9)
!5986 = !DILocation(line: 255, column: 22, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5984, file: !868, line: 255, column: 13)
!5988 = !DILocation(line: 255, column: 13, scope: !5984)
!5989 = !DILocation(line: 256, column: 13, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5987, file: !868, line: 255, column: 31)
!5991 = !DILocation(line: 254, column: 42, scope: !5984)
!5992 = !DILocation(line: 260, column: 9, scope: !5984)
!5993 = !DILocation(line: 261, column: 9, scope: !5984)
!5994 = !DILocation(line: 262, column: 9, scope: !5984)
!5995 = !DILocation(line: 264, column: 18, scope: !5984)
!5996 = !DILocation(line: 265, column: 20, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5984, file: !868, line: 265, column: 13)
!5998 = !DILocation(line: 265, column: 13, scope: !5984)
!5999 = !DILocation(line: 266, column: 13, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !868, line: 265, column: 32)
!6001 = !DILocation(line: 269, column: 54, scope: !5984)
!6002 = !DILocation(line: 270, column: 56, scope: !5984)
!6003 = !DILocation(line: 270, column: 25, scope: !5984)
!6004 = !DILocation(line: 271, column: 13, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5984, file: !868, line: 271, column: 13)
!6006 = !DILocation(line: 271, column: 25, scope: !6005)
!6007 = !DILocation(line: 271, column: 13, scope: !5984)
!6008 = !DILocation(line: 272, column: 22, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6005, file: !868, line: 271, column: 43)
!6010 = !DILocation(line: 273, column: 24, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6009, file: !868, line: 273, column: 17)
!6012 = !DILocation(line: 273, column: 17, scope: !6009)
!6013 = !DILocation(line: 274, column: 17, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6011, file: !868, line: 273, column: 36)
!6015 = !DILocation(line: 279, column: 1, scope: !5963)
!6016 = distinct !DISubprogram(name: "uart_error_handler", scope: !868, file: !868, line: 282, type: !6017, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{null, !942}
!6019 = !{!6020, !6021, !6022, !6023}
!6020 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6016, file: !868, line: 282, type: !942)
!6021 = !DILocalVariable(name: "uartx", scope: !6016, file: !868, line: 284, type: !5853)
!6022 = !DILocalVariable(name: "callback", scope: !6016, file: !868, line: 285, type: !951)
!6023 = !DILocalVariable(name: "arg", scope: !6016, file: !868, line: 286, type: !88)
!6024 = !DILocation(line: 0, scope: !6016)
!6025 = !DILocation(line: 288, column: 13, scope: !6016)
!6026 = !DILocation(line: 290, column: 10, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6016, file: !868, line: 290, column: 9)
!6028 = !DILocation(line: 290, column: 9, scope: !6016)
!6029 = !DILocation(line: 291, column: 9, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6027, file: !868, line: 290, column: 36)
!6031 = !DILocation(line: 292, column: 9, scope: !6030)
!6032 = !DILocation(line: 293, column: 47, scope: !6030)
!6033 = !DILocation(line: 295, column: 22, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6030, file: !868, line: 295, column: 13)
!6035 = !DILocation(line: 295, column: 13, scope: !6030)
!6036 = !DILocation(line: 296, column: 13, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6034, file: !868, line: 295, column: 31)
!6038 = !DILocation(line: 294, column: 42, scope: !6030)
!6039 = !DILocation(line: 299, column: 9, scope: !6030)
!6040 = !DILocation(line: 300, column: 5, scope: !6030)
!6041 = !DILocation(line: 301, column: 1, scope: !6016)
!6042 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !868, file: !868, line: 416, type: !6043, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6047)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{!6045, !942, !6046}
!6045 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !878, line: 351, baseType: !888)
!6046 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !878, line: 317, baseType: !895)
!6047 = !{!6048, !6049, !6050, !6051, !6052}
!6048 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6042, file: !868, line: 416, type: !942)
!6049 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6042, file: !868, line: 416, type: !6046)
!6050 = !DILocalVariable(name: "actual_baudrate", scope: !6042, file: !868, line: 418, type: !61)
!6051 = !DILocalVariable(name: "irq_status", scope: !6042, file: !868, line: 418, type: !61)
!6052 = !DILocalVariable(name: "uartx", scope: !6042, file: !868, line: 419, type: !5853)
!6053 = !DILocation(line: 0, scope: !6042)
!6054 = !DILocation(line: 421, column: 11, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6042, file: !868, line: 421, column: 9)
!6056 = !DILocation(line: 421, column: 42, scope: !6055)
!6057 = !DILocation(line: 422, column: 11, scope: !6055)
!6058 = !DILocation(line: 421, column: 9, scope: !6042)
!6059 = !DILocation(line: 426, column: 9, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6042, file: !868, line: 426, column: 9)
!6061 = !DILocation(line: 426, column: 36, scope: !6060)
!6062 = !DILocation(line: 426, column: 9, scope: !6042)
!6063 = !DILocation(line: 430, column: 18, scope: !6042)
!6064 = !DILocation(line: 434, column: 5, scope: !6042)
!6065 = !DILocation(line: 436, column: 13, scope: !6042)
!6066 = !DILocation(line: 437, column: 23, scope: !6042)
!6067 = !DILocation(line: 439, column: 5, scope: !6042)
!6068 = !DILocation(line: 441, column: 5, scope: !6042)
!6069 = !DILocation(line: 442, column: 1, scope: !6042)
!6070 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !868, file: !868, line: 120, type: !6071, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6073)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!91, !942}
!6073 = !{!6074}
!6074 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6070, file: !868, line: 120, type: !942)
!6075 = !DILocation(line: 0, scope: !6070)
!6076 = !DILocation(line: 122, column: 23, scope: !6070)
!6077 = !DILocation(line: 122, column: 5, scope: !6070)
!6078 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !868, file: !868, line: 125, type: !6079, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6081)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{!91, !6046}
!6081 = !{!6082}
!6082 = !DILocalVariable(name: "baudrate", arg: 1, scope: !6078, file: !868, line: 125, type: !6046)
!6083 = !DILocation(line: 0, scope: !6078)
!6084 = !DILocation(line: 127, column: 22, scope: !6078)
!6085 = !DILocation(line: 127, column: 5, scope: !6078)
!6086 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !868, file: !868, line: 444, type: !6087, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6101)
!6087 = !DISubroutineType(types: !6088)
!6088 = !{!6045, !942, !6089}
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6090, size: 32)
!6090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6091)
!6091 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !878, line: 378, baseType: !6092)
!6092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 373, size: 128, elements: !6093)
!6093 = !{!6094, !6095, !6097, !6099}
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !6092, file: !878, line: 374, baseType: !6046, size: 32)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !6092, file: !878, line: 375, baseType: !6096, size: 32, offset: 32)
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !878, line: 326, baseType: !911)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !6092, file: !878, line: 376, baseType: !6098, size: 32, offset: 64)
!6098 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !878, line: 333, baseType: !917)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !6092, file: !878, line: 377, baseType: !6100, size: 32, offset: 96)
!6100 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !878, line: 341, baseType: !921)
!6101 = !{!6102, !6103, !6104, !6105}
!6102 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6086, file: !868, line: 444, type: !942)
!6103 = !DILocalVariable(name: "config", arg: 2, scope: !6086, file: !868, line: 445, type: !6089)
!6104 = !DILocalVariable(name: "irq_status", scope: !6086, file: !868, line: 447, type: !61)
!6105 = !DILocalVariable(name: "uartx", scope: !6086, file: !868, line: 448, type: !5853)
!6106 = !DILocation(line: 0, scope: !6086)
!6107 = !DILocation(line: 450, column: 11, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6086, file: !868, line: 450, column: 9)
!6109 = !DILocation(line: 450, column: 42, scope: !6108)
!6110 = !DILocation(line: 451, column: 11, scope: !6108)
!6111 = !DILocation(line: 450, column: 9, scope: !6086)
!6112 = !DILocation(line: 455, column: 9, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6086, file: !868, line: 455, column: 9)
!6114 = !DILocation(line: 455, column: 36, scope: !6113)
!6115 = !DILocation(line: 455, column: 9, scope: !6086)
!6116 = !DILocation(line: 459, column: 18, scope: !6086)
!6117 = !DILocation(line: 466, column: 5, scope: !6086)
!6118 = !DILocation(line: 468, column: 13, scope: !6086)
!6119 = !DILocation(line: 470, column: 46, scope: !6086)
!6120 = !DILocation(line: 470, column: 5, scope: !6086)
!6121 = !DILocation(line: 471, column: 36, scope: !6086)
!6122 = !DILocation(line: 471, column: 57, scope: !6086)
!6123 = !DILocation(line: 471, column: 75, scope: !6086)
!6124 = !DILocation(line: 471, column: 5, scope: !6086)
!6125 = !DILocation(line: 473, column: 5, scope: !6086)
!6126 = !DILocation(line: 474, column: 1, scope: !6086)
!6127 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !868, file: !868, line: 130, type: !6128, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6130)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!91, !6089}
!6130 = !{!6131}
!6131 = !DILocalVariable(name: "config", arg: 1, scope: !6127, file: !868, line: 130, type: !6089)
!6132 = !DILocation(line: 0, scope: !6127)
!6133 = !DILocation(line: 132, column: 22, scope: !6127)
!6134 = !DILocation(line: 132, column: 31, scope: !6127)
!6135 = !DILocation(line: 132, column: 56, scope: !6127)
!6136 = !DILocation(line: 133, column: 22, scope: !6127)
!6137 = !DILocation(line: 133, column: 34, scope: !6127)
!6138 = !DILocation(line: 133, column: 61, scope: !6127)
!6139 = !DILocation(line: 134, column: 22, scope: !6127)
!6140 = !DILocation(line: 134, column: 31, scope: !6127)
!6141 = !DILocation(line: 134, column: 55, scope: !6127)
!6142 = !DILocation(line: 135, column: 22, scope: !6127)
!6143 = !DILocation(line: 135, column: 29, scope: !6127)
!6144 = !DILocation(line: 132, column: 5, scope: !6127)
!6145 = distinct !DISubprogram(name: "hal_uart_init", scope: !868, file: !868, line: 476, type: !6146, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6149)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!6045, !942, !6148}
!6148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6091, size: 32)
!6149 = !{!6150, !6151, !6152, !6153, !6154, !6155, !6156}
!6150 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6145, file: !868, line: 476, type: !942)
!6151 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6145, file: !868, line: 476, type: !6148)
!6152 = !DILocalVariable(name: "uartx", scope: !6145, file: !868, line: 478, type: !5853)
!6153 = !DILocalVariable(name: "i", scope: !6145, file: !868, line: 479, type: !61)
!6154 = !DILocalVariable(name: "actual_baudrate", scope: !6145, file: !868, line: 479, type: !61)
!6155 = !DILocalVariable(name: "irq_status", scope: !6145, file: !868, line: 479, type: !61)
!6156 = !DILocalVariable(name: "status", scope: !6145, file: !868, line: 480, type: !4403)
!6157 = !DILocation(line: 0, scope: !6145)
!6158 = !DILocation(line: 482, column: 11, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6145, file: !868, line: 482, column: 9)
!6160 = !DILocation(line: 482, column: 42, scope: !6159)
!6161 = !DILocation(line: 483, column: 11, scope: !6159)
!6162 = !DILocation(line: 482, column: 9, scope: !6145)
!6163 = !DILocation(line: 487, column: 18, scope: !6145)
!6164 = !DILocation(line: 488, column: 9, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6145, file: !868, line: 488, column: 9)
!6166 = !DILocation(line: 488, column: 36, scope: !6165)
!6167 = !DILocation(line: 488, column: 9, scope: !6145)
!6168 = !DILocation(line: 489, column: 9, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6165, file: !868, line: 488, column: 68)
!6170 = !DILocation(line: 490, column: 9, scope: !6169)
!6171 = !DILocation(line: 502, column: 9, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6145, file: !868, line: 502, column: 9)
!6173 = !DILocation(line: 502, column: 9, scope: !6145)
!6174 = !DILocation(line: 504, column: 13, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !868, line: 503, column: 44)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !868, line: 503, column: 9)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !868, line: 503, column: 9)
!6178 = distinct !DILexicalBlock(scope: !6172, file: !868, line: 502, column: 50)
!6179 = !DILocation(line: 504, column: 32, scope: !6175)
!6180 = !DILocation(line: 510, column: 32, scope: !6175)
!6181 = !DILocation(line: 510, column: 36, scope: !6175)
!6182 = !DILocation(line: 511, column: 32, scope: !6175)
!6183 = !DILocation(line: 511, column: 37, scope: !6175)
!6184 = !DILocation(line: 503, column: 40, scope: !6176)
!6185 = !DILocation(line: 503, column: 23, scope: !6176)
!6186 = !DILocation(line: 503, column: 9, scope: !6177)
!6187 = distinct !{!6187, !6186, !6188}
!6188 = !DILocation(line: 512, column: 9, scope: !6177)
!6189 = !DILocation(line: 513, column: 40, scope: !6178)
!6190 = !DILocation(line: 514, column: 5, scope: !6178)
!6191 = !DILocation(line: 521, column: 32, scope: !6145)
!6192 = !DILocation(line: 522, column: 5, scope: !6145)
!6193 = !DILocation(line: 524, column: 31, scope: !6145)
!6194 = !DILocation(line: 524, column: 14, scope: !6145)
!6195 = !DILocation(line: 525, column: 16, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6145, file: !868, line: 525, column: 9)
!6197 = !DILocation(line: 525, column: 9, scope: !6145)
!6198 = !DILocation(line: 526, column: 9, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6196, file: !868, line: 525, column: 40)
!6200 = !DILocation(line: 530, column: 13, scope: !6145)
!6201 = !DILocation(line: 532, column: 5, scope: !6145)
!6202 = !DILocation(line: 533, column: 56, scope: !6145)
!6203 = !DILocation(line: 533, column: 23, scope: !6145)
!6204 = !DILocation(line: 534, column: 5, scope: !6145)
!6205 = !DILocation(line: 535, column: 41, scope: !6145)
!6206 = !DILocation(line: 535, column: 67, scope: !6145)
!6207 = !DILocation(line: 535, column: 90, scope: !6145)
!6208 = !DILocation(line: 535, column: 5, scope: !6145)
!6209 = !DILocation(line: 536, column: 5, scope: !6145)
!6210 = !DILocation(line: 541, column: 5, scope: !6145)
!6211 = !DILocation(line: 542, column: 1, scope: !6145)
!6212 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !868, file: !868, line: 544, type: !6213, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6215)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!6045, !942}
!6215 = !{!6216, !6217, !6218, !6219, !6220, !6221, !6222}
!6216 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6212, file: !868, line: 544, type: !942)
!6217 = !DILocalVariable(name: "uartx", scope: !6212, file: !868, line: 546, type: !5853)
!6218 = !DILocalVariable(name: "tx_dma_channel", scope: !6212, file: !868, line: 547, type: !4906)
!6219 = !DILocalVariable(name: "rx_dma_channel", scope: !6212, file: !868, line: 547, type: !4906)
!6220 = !DILocalVariable(name: "irq_status", scope: !6212, file: !868, line: 548, type: !61)
!6221 = !DILocalVariable(name: "status", scope: !6212, file: !868, line: 549, type: !4905)
!6222 = !DILocalVariable(name: "clock_status", scope: !6212, file: !868, line: 550, type: !4403)
!6223 = !DILocation(line: 0, scope: !6212)
!6224 = !DILocation(line: 552, column: 10, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6212, file: !868, line: 552, column: 9)
!6226 = !DILocation(line: 552, column: 9, scope: !6212)
!6227 = !DILocation(line: 556, column: 18, scope: !6212)
!6228 = !DILocation(line: 557, column: 9, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6212, file: !868, line: 557, column: 9)
!6230 = !DILocation(line: 557, column: 36, scope: !6229)
!6231 = !DILocation(line: 557, column: 9, scope: !6212)
!6232 = !DILocation(line: 562, column: 13, scope: !6212)
!6233 = !DILocation(line: 565, column: 5, scope: !6212)
!6234 = !DILocation(line: 568, column: 9, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6212, file: !868, line: 568, column: 9)
!6236 = !DILocation(line: 568, column: 36, scope: !6235)
!6237 = !DILocation(line: 568, column: 9, scope: !6212)
!6238 = !DILocation(line: 569, column: 26, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6235, file: !868, line: 568, column: 70)
!6240 = !DILocation(line: 570, column: 26, scope: !6239)
!6241 = !DILocation(line: 572, column: 18, scope: !6239)
!6242 = !DILocation(line: 573, column: 20, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6239, file: !868, line: 573, column: 13)
!6244 = !DILocation(line: 573, column: 13, scope: !6239)
!6245 = !DILocation(line: 574, column: 13, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !868, line: 573, column: 32)
!6247 = !DILocation(line: 575, column: 13, scope: !6246)
!6248 = !DILocation(line: 578, column: 18, scope: !6239)
!6249 = !DILocation(line: 579, column: 20, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6239, file: !868, line: 579, column: 13)
!6251 = !DILocation(line: 579, column: 13, scope: !6239)
!6252 = !DILocation(line: 580, column: 13, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6250, file: !868, line: 579, column: 32)
!6254 = !DILocation(line: 581, column: 13, scope: !6253)
!6255 = !DILocation(line: 584, column: 18, scope: !6239)
!6256 = !DILocation(line: 585, column: 20, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6239, file: !868, line: 585, column: 13)
!6258 = !DILocation(line: 585, column: 13, scope: !6239)
!6259 = !DILocation(line: 586, column: 13, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !868, line: 585, column: 32)
!6261 = !DILocation(line: 587, column: 13, scope: !6260)
!6262 = !DILocation(line: 590, column: 18, scope: !6239)
!6263 = !DILocation(line: 591, column: 20, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6239, file: !868, line: 591, column: 13)
!6265 = !DILocation(line: 591, column: 13, scope: !6239)
!6266 = !DILocation(line: 592, column: 13, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !868, line: 591, column: 32)
!6268 = !DILocation(line: 593, column: 13, scope: !6267)
!6269 = !DILocation(line: 596, column: 18, scope: !6239)
!6270 = !DILocation(line: 597, column: 20, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6239, file: !868, line: 597, column: 13)
!6272 = !DILocation(line: 597, column: 13, scope: !6239)
!6273 = !DILocation(line: 598, column: 13, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !868, line: 597, column: 32)
!6275 = !DILocation(line: 599, column: 13, scope: !6274)
!6276 = !DILocation(line: 602, column: 18, scope: !6239)
!6277 = !DILocation(line: 603, column: 20, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6239, file: !868, line: 603, column: 13)
!6279 = !DILocation(line: 603, column: 13, scope: !6239)
!6280 = !DILocation(line: 604, column: 13, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6278, file: !868, line: 603, column: 32)
!6282 = !DILocation(line: 605, column: 13, scope: !6281)
!6283 = !DILocation(line: 608, column: 30, scope: !6239)
!6284 = !DILocation(line: 608, column: 9, scope: !6239)
!6285 = !DILocation(line: 609, column: 5, scope: !6239)
!6286 = !DILocation(line: 610, column: 5, scope: !6212)
!6287 = !DILocation(line: 611, column: 38, scope: !6212)
!6288 = !DILocation(line: 611, column: 20, scope: !6212)
!6289 = !DILocation(line: 612, column: 22, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6212, file: !868, line: 612, column: 9)
!6291 = !DILocation(line: 612, column: 9, scope: !6212)
!6292 = !DILocation(line: 613, column: 9, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !868, line: 612, column: 46)
!6294 = !DILocation(line: 614, column: 9, scope: !6293)
!6295 = !DILocation(line: 618, column: 32, scope: !6212)
!6296 = !DILocation(line: 618, column: 37, scope: !6212)
!6297 = !DILocation(line: 619, column: 32, scope: !6212)
!6298 = !DILocation(line: 619, column: 36, scope: !6212)
!6299 = !DILocation(line: 635, column: 32, scope: !6212)
!6300 = !DILocation(line: 639, column: 5, scope: !6212)
!6301 = !DILocation(line: 640, column: 1, scope: !6212)
!6302 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !868, file: !868, line: 642, type: !6303, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6305)
!6303 = !DISubroutineType(types: !6304)
!6304 = !{null, !942, !1869}
!6305 = !{!6306, !6307, !6308}
!6306 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6302, file: !868, line: 642, type: !942)
!6307 = !DILocalVariable(name: "byte", arg: 2, scope: !6302, file: !868, line: 642, type: !1869)
!6308 = !DILocalVariable(name: "uartx", scope: !6302, file: !868, line: 644, type: !5853)
!6309 = !DILocation(line: 0, scope: !6302)
!6310 = !DILocation(line: 646, column: 10, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6302, file: !868, line: 646, column: 9)
!6312 = !DILocation(line: 646, column: 9, scope: !6302)
!6313 = !DILocation(line: 650, column: 9, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6302, file: !868, line: 650, column: 9)
!6315 = !DILocation(line: 650, column: 36, scope: !6314)
!6316 = !DILocation(line: 650, column: 9, scope: !6302)
!6317 = !DILocation(line: 654, column: 13, scope: !6302)
!6318 = !DILocation(line: 655, column: 5, scope: !6302)
!6319 = !DILocation(line: 656, column: 1, scope: !6302)
!6320 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !868, file: !868, line: 658, type: !6321, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6325)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{!61, !942, !6323, !61}
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!6325 = !{!6326, !6327, !6328, !6329}
!6326 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6320, file: !868, line: 658, type: !942)
!6327 = !DILocalVariable(name: "data", arg: 2, scope: !6320, file: !868, line: 658, type: !6323)
!6328 = !DILocalVariable(name: "size", arg: 3, scope: !6320, file: !868, line: 658, type: !61)
!6329 = !DILocalVariable(name: "i", scope: !6320, file: !868, line: 660, type: !61)
!6330 = !DILocation(line: 0, scope: !6320)
!6331 = !DILocation(line: 662, column: 11, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6320, file: !868, line: 662, column: 9)
!6333 = !DILocation(line: 662, column: 42, scope: !6332)
!6334 = !DILocation(line: 666, column: 9, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6320, file: !868, line: 666, column: 9)
!6336 = !DILocation(line: 666, column: 36, scope: !6335)
!6337 = !DILocation(line: 666, column: 9, scope: !6320)
!6338 = !DILocation(line: 671, column: 38, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !868, line: 670, column: 32)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !868, line: 670, column: 5)
!6341 = distinct !DILexicalBlock(scope: !6320, file: !868, line: 670, column: 5)
!6342 = !DILocation(line: 671, column: 9, scope: !6339)
!6343 = !DILocation(line: 672, column: 13, scope: !6339)
!6344 = !DILocation(line: 670, column: 28, scope: !6340)
!6345 = !DILocation(line: 670, column: 19, scope: !6340)
!6346 = !DILocation(line: 670, column: 5, scope: !6341)
!6347 = distinct !{!6347, !6346, !6348}
!6348 = !DILocation(line: 673, column: 5, scope: !6341)
!6349 = !DILocation(line: 676, column: 1, scope: !6320)
!6350 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !868, file: !868, line: 678, type: !6321, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6351)
!6351 = !{!6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359}
!6352 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6350, file: !868, line: 678, type: !942)
!6353 = !DILocalVariable(name: "data", arg: 2, scope: !6350, file: !868, line: 678, type: !6323)
!6354 = !DILocalVariable(name: "size", arg: 3, scope: !6350, file: !868, line: 678, type: !61)
!6355 = !DILocalVariable(name: "channel", scope: !6350, file: !868, line: 680, type: !4906)
!6356 = !DILocalVariable(name: "i", scope: !6350, file: !868, line: 681, type: !61)
!6357 = !DILocalVariable(name: "real_count", scope: !6350, file: !868, line: 681, type: !61)
!6358 = !DILocalVariable(name: "avail_space", scope: !6350, file: !868, line: 681, type: !61)
!6359 = !DILocalVariable(name: "status", scope: !6350, file: !868, line: 682, type: !4905)
!6360 = !DILocation(line: 0, scope: !6350)
!6361 = !DILocation(line: 681, column: 5, scope: !6350)
!6362 = !DILocation(line: 687, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6350, file: !868, line: 687, column: 9)
!6364 = !DILocation(line: 687, column: 42, scope: !6363)
!6365 = !DILocation(line: 691, column: 9, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6350, file: !868, line: 691, column: 9)
!6367 = !DILocation(line: 691, column: 36, scope: !6366)
!6368 = !DILocation(line: 691, column: 9, scope: !6350)
!6369 = !DILocation(line: 704, column: 15, scope: !6350)
!6370 = !DILocation(line: 706, column: 14, scope: !6350)
!6371 = !DILocation(line: 707, column: 16, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6350, file: !868, line: 707, column: 9)
!6373 = !DILocation(line: 707, column: 9, scope: !6350)
!6374 = !DILocation(line: 708, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6372, file: !868, line: 707, column: 28)
!6376 = !DILocation(line: 712, column: 9, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6350, file: !868, line: 712, column: 9)
!6378 = !DILocation(line: 712, column: 21, scope: !6377)
!6379 = !DILocation(line: 717, column: 19, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6381, file: !868, line: 717, column: 5)
!6381 = distinct !DILexicalBlock(scope: !6350, file: !868, line: 717, column: 5)
!6382 = !DILocation(line: 717, column: 5, scope: !6381)
!6383 = distinct !{!6383, !6382, !6384}
!6384 = !DILocation(line: 723, column: 5, scope: !6381)
!6385 = !DILocation(line: 718, column: 42, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6380, file: !868, line: 717, column: 38)
!6387 = !DILocation(line: 718, column: 18, scope: !6386)
!6388 = !DILocation(line: 719, column: 20, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6386, file: !868, line: 719, column: 13)
!6390 = !DILocation(line: 717, column: 34, scope: !6380)
!6391 = !DILocation(line: 719, column: 13, scope: !6386)
!6392 = !DILocation(line: 720, column: 13, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6389, file: !868, line: 719, column: 32)
!6394 = !DILocation(line: 728, column: 23, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6350, file: !868, line: 728, column: 9)
!6396 = !DILocation(line: 728, column: 20, scope: !6395)
!6397 = !DILocation(line: 728, column: 9, scope: !6350)
!6398 = !DILocation(line: 729, column: 18, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !868, line: 728, column: 36)
!6400 = !DILocation(line: 730, column: 20, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6399, file: !868, line: 730, column: 13)
!6402 = !DILocation(line: 730, column: 13, scope: !6399)
!6403 = !DILocation(line: 731, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !868, line: 730, column: 32)
!6405 = !DILocation(line: 737, column: 1, scope: !6350)
!6406 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !868, file: !868, line: 739, type: !6407, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!1869, !942}
!6409 = !{!6410, !6411, !6412}
!6410 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6406, file: !868, line: 739, type: !942)
!6411 = !DILocalVariable(name: "data", scope: !6406, file: !868, line: 741, type: !1869)
!6412 = !DILocalVariable(name: "uartx", scope: !6406, file: !868, line: 742, type: !5853)
!6413 = !DILocation(line: 0, scope: !6406)
!6414 = !DILocation(line: 744, column: 10, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6406, file: !868, line: 744, column: 9)
!6416 = !DILocation(line: 744, column: 9, scope: !6406)
!6417 = !DILocation(line: 748, column: 9, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6406, file: !868, line: 748, column: 9)
!6419 = !DILocation(line: 748, column: 36, scope: !6418)
!6420 = !DILocation(line: 748, column: 9, scope: !6406)
!6421 = !DILocation(line: 752, column: 13, scope: !6406)
!6422 = !DILocation(line: 754, column: 12, scope: !6406)
!6423 = !DILocation(line: 756, column: 5, scope: !6406)
!6424 = !DILocation(line: 757, column: 1, scope: !6406)
!6425 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !868, file: !868, line: 759, type: !6426, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6428)
!6426 = !DISubroutineType(types: !6427)
!6427 = !{!61, !942}
!6428 = !{!6429, !6430, !6431}
!6429 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6425, file: !868, line: 759, type: !942)
!6430 = !DILocalVariable(name: "data", scope: !6425, file: !868, line: 761, type: !61)
!6431 = !DILocalVariable(name: "uartx", scope: !6425, file: !868, line: 762, type: !5853)
!6432 = !DILocation(line: 0, scope: !6425)
!6433 = !DILocation(line: 764, column: 10, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6425, file: !868, line: 764, column: 9)
!6435 = !DILocation(line: 764, column: 9, scope: !6425)
!6436 = !DILocation(line: 768, column: 9, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6425, file: !868, line: 768, column: 9)
!6438 = !DILocation(line: 768, column: 36, scope: !6437)
!6439 = !DILocation(line: 768, column: 9, scope: !6425)
!6440 = !DILocation(line: 772, column: 13, scope: !6425)
!6441 = !DILocation(line: 774, column: 12, scope: !6425)
!6442 = !DILocation(line: 776, column: 5, scope: !6425)
!6443 = !DILocation(line: 777, column: 1, scope: !6425)
!6444 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !868, file: !868, line: 779, type: !6445, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6447)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{!61, !942, !969, !61}
!6447 = !{!6448, !6449, !6450, !6451, !6452}
!6448 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6444, file: !868, line: 779, type: !942)
!6449 = !DILocalVariable(name: "buffer", arg: 2, scope: !6444, file: !868, line: 779, type: !969)
!6450 = !DILocalVariable(name: "size", arg: 3, scope: !6444, file: !868, line: 779, type: !61)
!6451 = !DILocalVariable(name: "i", scope: !6444, file: !868, line: 781, type: !61)
!6452 = !DILocalVariable(name: "pbuf", scope: !6444, file: !868, line: 782, type: !969)
!6453 = !DILocation(line: 0, scope: !6444)
!6454 = !DILocation(line: 784, column: 11, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6444, file: !868, line: 784, column: 9)
!6456 = !DILocation(line: 784, column: 42, scope: !6455)
!6457 = !DILocation(line: 789, column: 9, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6444, file: !868, line: 789, column: 9)
!6459 = !DILocation(line: 789, column: 36, scope: !6458)
!6460 = !DILocation(line: 789, column: 9, scope: !6444)
!6461 = !DILocation(line: 794, column: 19, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !868, line: 793, column: 32)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !868, line: 793, column: 5)
!6464 = distinct !DILexicalBlock(scope: !6444, file: !868, line: 793, column: 5)
!6465 = !DILocation(line: 794, column: 9, scope: !6462)
!6466 = !DILocation(line: 794, column: 17, scope: !6462)
!6467 = !DILocation(line: 793, column: 28, scope: !6463)
!6468 = !DILocation(line: 793, column: 19, scope: !6463)
!6469 = !DILocation(line: 793, column: 5, scope: !6464)
!6470 = distinct !{!6470, !6469, !6471}
!6471 = !DILocation(line: 795, column: 5, scope: !6464)
!6472 = !DILocation(line: 798, column: 1, scope: !6444)
!6473 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !868, file: !868, line: 800, type: !6445, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6474)
!6474 = !{!6475, !6476, !6477, !6478, !6479, !6480, !6481, !6482}
!6475 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6473, file: !868, line: 800, type: !942)
!6476 = !DILocalVariable(name: "buffer", arg: 2, scope: !6473, file: !868, line: 800, type: !969)
!6477 = !DILocalVariable(name: "size", arg: 3, scope: !6473, file: !868, line: 800, type: !61)
!6478 = !DILocalVariable(name: "channel", scope: !6473, file: !868, line: 802, type: !4906)
!6479 = !DILocalVariable(name: "receive_count", scope: !6473, file: !868, line: 803, type: !61)
!6480 = !DILocalVariable(name: "avail_count", scope: !6473, file: !868, line: 803, type: !61)
!6481 = !DILocalVariable(name: "index", scope: !6473, file: !868, line: 804, type: !61)
!6482 = !DILocalVariable(name: "status", scope: !6473, file: !868, line: 805, type: !4905)
!6483 = !DILocation(line: 0, scope: !6473)
!6484 = !DILocation(line: 803, column: 5, scope: !6473)
!6485 = !DILocation(line: 807, column: 11, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6473, file: !868, line: 807, column: 9)
!6487 = !DILocation(line: 807, column: 42, scope: !6486)
!6488 = !DILocation(line: 813, column: 9, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6473, file: !868, line: 813, column: 9)
!6490 = !DILocation(line: 813, column: 36, scope: !6489)
!6491 = !DILocation(line: 813, column: 9, scope: !6473)
!6492 = !DILocation(line: 817, column: 15, scope: !6473)
!6493 = !DILocation(line: 819, column: 14, scope: !6473)
!6494 = !DILocation(line: 820, column: 16, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6473, file: !868, line: 820, column: 9)
!6496 = !DILocation(line: 820, column: 9, scope: !6473)
!6497 = !DILocation(line: 821, column: 9, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6495, file: !868, line: 820, column: 28)
!6499 = !DILocation(line: 825, column: 9, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6473, file: !868, line: 825, column: 9)
!6501 = !DILocation(line: 825, column: 21, scope: !6500)
!6502 = !DILocation(line: 830, column: 27, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !868, line: 830, column: 5)
!6504 = distinct !DILexicalBlock(scope: !6473, file: !868, line: 830, column: 5)
!6505 = !DILocation(line: 830, column: 5, scope: !6504)
!6506 = distinct !{!6506, !6505, !6507}
!6507 = !DILocation(line: 836, column: 5, scope: !6504)
!6508 = !DILocation(line: 831, column: 42, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6503, file: !868, line: 830, column: 53)
!6510 = !DILocation(line: 831, column: 18, scope: !6509)
!6511 = !DILocation(line: 832, column: 20, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6509, file: !868, line: 832, column: 13)
!6513 = !DILocation(line: 830, column: 49, scope: !6503)
!6514 = !DILocation(line: 832, column: 13, scope: !6509)
!6515 = !DILocation(line: 833, column: 13, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6512, file: !868, line: 832, column: 32)
!6517 = !DILocation(line: 841, column: 26, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6473, file: !868, line: 841, column: 9)
!6519 = !DILocation(line: 841, column: 23, scope: !6518)
!6520 = !DILocation(line: 841, column: 9, scope: !6473)
!6521 = !DILocation(line: 842, column: 18, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !868, line: 841, column: 39)
!6523 = !DILocation(line: 843, column: 20, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6522, file: !868, line: 843, column: 13)
!6525 = !DILocation(line: 843, column: 13, scope: !6522)
!6526 = !DILocation(line: 844, column: 13, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6524, file: !868, line: 843, column: 32)
!6528 = !DILocation(line: 850, column: 1, scope: !6473)
!6529 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !868, file: !868, line: 891, type: !6530, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6532)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!6045, !942, !951, !88}
!6532 = !{!6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540}
!6533 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6529, file: !868, line: 891, type: !942)
!6534 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6529, file: !868, line: 892, type: !951)
!6535 = !DILocalVariable(name: "user_data", arg: 3, scope: !6529, file: !868, line: 893, type: !88)
!6536 = !DILocalVariable(name: "tx_dma_channel", scope: !6529, file: !868, line: 895, type: !4906)
!6537 = !DILocalVariable(name: "rx_dma_channel", scope: !6529, file: !868, line: 895, type: !4906)
!6538 = !DILocalVariable(name: "irq_status", scope: !6529, file: !868, line: 896, type: !61)
!6539 = !DILocalVariable(name: "status", scope: !6529, file: !868, line: 897, type: !4905)
!6540 = !DILocalVariable(name: "nvic_status", scope: !6529, file: !868, line: 898, type: !1268)
!6541 = !DILocation(line: 0, scope: !6529)
!6542 = !DILocation(line: 900, column: 11, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6529, file: !868, line: 900, column: 9)
!6544 = !DILocation(line: 900, column: 42, scope: !6543)
!6545 = !DILocation(line: 905, column: 18, scope: !6529)
!6546 = !DILocation(line: 906, column: 9, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6529, file: !868, line: 906, column: 9)
!6548 = !DILocation(line: 906, column: 36, scope: !6547)
!6549 = !DILocation(line: 906, column: 9, scope: !6529)
!6550 = !DILocation(line: 911, column: 22, scope: !6529)
!6551 = !DILocation(line: 912, column: 22, scope: !6529)
!6552 = !DILocation(line: 914, column: 32, scope: !6529)
!6553 = !DILocation(line: 914, column: 37, scope: !6529)
!6554 = !DILocation(line: 915, column: 32, scope: !6529)
!6555 = !DILocation(line: 915, column: 36, scope: !6529)
!6556 = !DILocation(line: 917, column: 91, scope: !6529)
!6557 = !DILocation(line: 917, column: 56, scope: !6529)
!6558 = !DILocation(line: 917, column: 5, scope: !6529)
!6559 = !DILocation(line: 918, column: 80, scope: !6529)
!6560 = !DILocation(line: 918, column: 14, scope: !6529)
!6561 = !DILocation(line: 919, column: 16, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6529, file: !868, line: 919, column: 9)
!6563 = !DILocation(line: 919, column: 9, scope: !6529)
!6564 = !DILocation(line: 920, column: 9, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !868, line: 919, column: 28)
!6566 = !DILocation(line: 921, column: 9, scope: !6565)
!6567 = !DILocation(line: 924, column: 97, scope: !6529)
!6568 = !DILocation(line: 924, column: 56, scope: !6529)
!6569 = !DILocation(line: 924, column: 5, scope: !6529)
!6570 = !DILocation(line: 925, column: 80, scope: !6529)
!6571 = !DILocation(line: 925, column: 14, scope: !6529)
!6572 = !DILocation(line: 926, column: 16, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6529, file: !868, line: 926, column: 9)
!6574 = !DILocation(line: 926, column: 9, scope: !6529)
!6575 = !DILocation(line: 927, column: 9, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6573, file: !868, line: 926, column: 28)
!6577 = !DILocation(line: 928, column: 9, scope: !6576)
!6578 = !DILocation(line: 931, column: 49, scope: !6529)
!6579 = !DILocation(line: 931, column: 19, scope: !6529)
!6580 = !DILocation(line: 932, column: 21, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6529, file: !868, line: 932, column: 9)
!6582 = !DILocation(line: 932, column: 9, scope: !6529)
!6583 = !DILocation(line: 933, column: 9, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6581, file: !868, line: 932, column: 44)
!6585 = !DILocation(line: 934, column: 9, scope: !6584)
!6586 = !DILocation(line: 938, column: 5, scope: !6529)
!6587 = !DILocation(line: 940, column: 32, scope: !6529)
!6588 = !DILocation(line: 944, column: 5, scope: !6529)
!6589 = !DILocation(line: 945, column: 1, scope: !6529)
!6590 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !868, file: !868, line: 303, type: !543, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6591)
!6591 = !{!6592, !6593, !6594}
!6592 = !DILocalVariable(name: "event", arg: 1, scope: !6590, file: !868, line: 303, type: !545)
!6593 = !DILocalVariable(name: "user_data", arg: 2, scope: !6590, file: !868, line: 303, type: !88)
!6594 = !DILocalVariable(name: "callback_data", scope: !6590, file: !868, line: 305, type: !935)
!6595 = !DILocation(line: 0, scope: !6590)
!6596 = !DILocation(line: 307, column: 24, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6590, file: !868, line: 307, column: 9)
!6598 = !DILocation(line: 0, scope: !6597)
!6599 = !DILocation(line: 307, column: 9, scope: !6590)
!6600 = !DILocation(line: 308, column: 9, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6597, file: !868, line: 307, column: 39)
!6602 = !DILocation(line: 309, column: 5, scope: !6601)
!6603 = !DILocation(line: 310, column: 9, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6597, file: !868, line: 309, column: 12)
!6605 = !DILocation(line: 312, column: 1, scope: !6590)
!6606 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !868, file: !868, line: 852, type: !6017, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6607)
!6607 = !{!6608, !6609, !6610, !6611, !6612}
!6608 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6606, file: !868, line: 852, type: !942)
!6609 = !DILocalVariable(name: "uartx", scope: !6606, file: !868, line: 854, type: !5853)
!6610 = !DILocalVariable(name: "tx_dma_channel", scope: !6606, file: !868, line: 855, type: !4906)
!6611 = !DILocalVariable(name: "rx_dma_channel", scope: !6606, file: !868, line: 855, type: !4906)
!6612 = !DILocalVariable(name: "status", scope: !6606, file: !868, line: 856, type: !4905)
!6613 = !DILocation(line: 0, scope: !6606)
!6614 = !DILocation(line: 858, column: 13, scope: !6606)
!6615 = !DILocation(line: 859, column: 22, scope: !6606)
!6616 = !DILocation(line: 860, column: 22, scope: !6606)
!6617 = !DILocation(line: 866, column: 5, scope: !6606)
!6618 = !DILocation(line: 867, column: 25, scope: !6606)
!6619 = !DILocation(line: 867, column: 5, scope: !6606)
!6620 = !DILocation(line: 868, column: 14, scope: !6606)
!6621 = !DILocation(line: 869, column: 16, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6606, file: !868, line: 869, column: 9)
!6623 = !DILocation(line: 869, column: 9, scope: !6606)
!6624 = !DILocation(line: 870, column: 9, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6622, file: !868, line: 869, column: 28)
!6626 = !DILocation(line: 873, column: 14, scope: !6606)
!6627 = !DILocation(line: 874, column: 16, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6606, file: !868, line: 874, column: 9)
!6629 = !DILocation(line: 874, column: 9, scope: !6606)
!6630 = !DILocation(line: 875, column: 9, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6628, file: !868, line: 874, column: 28)
!6632 = !DILocation(line: 878, column: 14, scope: !6606)
!6633 = !DILocation(line: 879, column: 16, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6606, file: !868, line: 879, column: 9)
!6635 = !DILocation(line: 879, column: 9, scope: !6606)
!6636 = !DILocation(line: 880, column: 9, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6634, file: !868, line: 879, column: 28)
!6638 = !DILocation(line: 883, column: 14, scope: !6606)
!6639 = !DILocation(line: 884, column: 16, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6606, file: !868, line: 884, column: 9)
!6641 = !DILocation(line: 884, column: 9, scope: !6606)
!6642 = !DILocation(line: 885, column: 9, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6640, file: !868, line: 884, column: 28)
!6644 = !DILocation(line: 888, column: 5, scope: !6606)
!6645 = !DILocation(line: 889, column: 1, scope: !6606)
!6646 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !868, file: !868, line: 947, type: !6426, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6647)
!6647 = !{!6648, !6649, !6650, !6651}
!6648 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6646, file: !868, line: 947, type: !942)
!6649 = !DILocalVariable(name: "channel", scope: !6646, file: !868, line: 949, type: !4906)
!6650 = !DILocalVariable(name: "roomleft", scope: !6646, file: !868, line: 950, type: !61)
!6651 = !DILocalVariable(name: "status", scope: !6646, file: !868, line: 951, type: !4905)
!6652 = !DILocation(line: 0, scope: !6646)
!6653 = !DILocation(line: 950, column: 5, scope: !6646)
!6654 = !DILocation(line: 953, column: 10, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6646, file: !868, line: 953, column: 9)
!6656 = !DILocation(line: 953, column: 9, scope: !6646)
!6657 = !DILocation(line: 957, column: 9, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6646, file: !868, line: 957, column: 9)
!6659 = !DILocation(line: 957, column: 36, scope: !6658)
!6660 = !DILocation(line: 957, column: 9, scope: !6646)
!6661 = !DILocation(line: 961, column: 15, scope: !6646)
!6662 = !DILocation(line: 962, column: 14, scope: !6646)
!6663 = !DILocation(line: 963, column: 16, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6646, file: !868, line: 963, column: 9)
!6665 = !DILocation(line: 963, column: 9, scope: !6646)
!6666 = !DILocation(line: 964, column: 9, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6664, file: !868, line: 963, column: 28)
!6668 = !DILocation(line: 968, column: 12, scope: !6646)
!6669 = !DILocation(line: 968, column: 5, scope: !6646)
!6670 = !DILocation(line: 969, column: 1, scope: !6646)
!6671 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !868, file: !868, line: 971, type: !6426, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6672)
!6672 = !{!6673, !6674, !6675, !6676}
!6673 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6671, file: !868, line: 971, type: !942)
!6674 = !DILocalVariable(name: "channel", scope: !6671, file: !868, line: 973, type: !4906)
!6675 = !DILocalVariable(name: "avail", scope: !6671, file: !868, line: 974, type: !61)
!6676 = !DILocalVariable(name: "status", scope: !6671, file: !868, line: 975, type: !4905)
!6677 = !DILocation(line: 0, scope: !6671)
!6678 = !DILocation(line: 974, column: 5, scope: !6671)
!6679 = !DILocation(line: 977, column: 10, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6671, file: !868, line: 977, column: 9)
!6681 = !DILocation(line: 977, column: 9, scope: !6671)
!6682 = !DILocation(line: 981, column: 9, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6671, file: !868, line: 981, column: 9)
!6684 = !DILocation(line: 981, column: 36, scope: !6683)
!6685 = !DILocation(line: 981, column: 9, scope: !6671)
!6686 = !DILocation(line: 985, column: 15, scope: !6671)
!6687 = !DILocation(line: 986, column: 14, scope: !6671)
!6688 = !DILocation(line: 987, column: 16, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6671, file: !868, line: 987, column: 9)
!6690 = !DILocation(line: 987, column: 9, scope: !6671)
!6691 = !DILocation(line: 988, column: 9, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6689, file: !868, line: 987, column: 28)
!6693 = !DILocation(line: 992, column: 12, scope: !6671)
!6694 = !DILocation(line: 992, column: 5, scope: !6671)
!6695 = !DILocation(line: 993, column: 1, scope: !6671)
!6696 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !868, file: !868, line: 995, type: !6213, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6697)
!6697 = !{!6698, !6699}
!6698 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6696, file: !868, line: 995, type: !942)
!6699 = !DILocalVariable(name: "uartx", scope: !6696, file: !868, line: 997, type: !5853)
!6700 = !DILocation(line: 0, scope: !6696)
!6701 = !DILocation(line: 999, column: 10, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6696, file: !868, line: 999, column: 9)
!6703 = !DILocation(line: 999, column: 9, scope: !6696)
!6704 = !DILocation(line: 1003, column: 9, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6696, file: !868, line: 1003, column: 9)
!6706 = !DILocation(line: 1003, column: 36, scope: !6705)
!6707 = !DILocation(line: 1003, column: 9, scope: !6696)
!6708 = !DILocation(line: 1007, column: 13, scope: !6696)
!6709 = !DILocation(line: 1009, column: 5, scope: !6696)
!6710 = !DILocation(line: 1015, column: 5, scope: !6696)
!6711 = !DILocation(line: 1016, column: 1, scope: !6696)
!6712 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !868, file: !868, line: 1018, type: !6713, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6715)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!6045, !942, !463, !463, !463}
!6715 = !{!6716, !6717, !6718, !6719, !6720}
!6716 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6712, file: !868, line: 1018, type: !942)
!6717 = !DILocalVariable(name: "xon", arg: 2, scope: !6712, file: !868, line: 1019, type: !463)
!6718 = !DILocalVariable(name: "xoff", arg: 3, scope: !6712, file: !868, line: 1020, type: !463)
!6719 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6712, file: !868, line: 1021, type: !463)
!6720 = !DILocalVariable(name: "uartx", scope: !6712, file: !868, line: 1023, type: !5853)
!6721 = !DILocation(line: 0, scope: !6712)
!6722 = !DILocation(line: 1025, column: 10, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6712, file: !868, line: 1025, column: 9)
!6724 = !DILocation(line: 1025, column: 9, scope: !6712)
!6725 = !DILocation(line: 1029, column: 9, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6712, file: !868, line: 1029, column: 9)
!6727 = !DILocation(line: 1029, column: 36, scope: !6726)
!6728 = !DILocation(line: 1029, column: 9, scope: !6712)
!6729 = !DILocation(line: 1033, column: 13, scope: !6712)
!6730 = !DILocation(line: 1035, column: 5, scope: !6712)
!6731 = !DILocation(line: 1044, column: 5, scope: !6712)
!6732 = !DILocation(line: 1045, column: 1, scope: !6712)
!6733 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !868, file: !868, line: 1047, type: !6213, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6734)
!6734 = !{!6735, !6736}
!6735 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6733, file: !868, line: 1047, type: !942)
!6736 = !DILocalVariable(name: "uartx", scope: !6733, file: !868, line: 1049, type: !5853)
!6737 = !DILocation(line: 0, scope: !6733)
!6738 = !DILocation(line: 1051, column: 10, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !868, line: 1051, column: 9)
!6740 = !DILocation(line: 1051, column: 9, scope: !6733)
!6741 = !DILocation(line: 1055, column: 9, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6733, file: !868, line: 1055, column: 9)
!6743 = !DILocation(line: 1055, column: 36, scope: !6742)
!6744 = !DILocation(line: 1055, column: 9, scope: !6733)
!6745 = !DILocation(line: 1059, column: 13, scope: !6733)
!6746 = !DILocation(line: 1061, column: 5, scope: !6733)
!6747 = !DILocation(line: 1067, column: 5, scope: !6733)
!6748 = !DILocation(line: 1068, column: 1, scope: !6733)
!6749 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !868, file: !868, line: 1071, type: !6750, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6754)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{!6045, !942, !6752}
!6752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6753, size: 32)
!6753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!6754 = !{!6755, !6756, !6757, !6758, !6764, !6765, !6766}
!6755 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6749, file: !868, line: 1071, type: !942)
!6756 = !DILocalVariable(name: "dma_config", arg: 2, scope: !6749, file: !868, line: 1071, type: !6752)
!6757 = !DILocalVariable(name: "irq_status", scope: !6749, file: !868, line: 1073, type: !61)
!6758 = !DILocalVariable(name: "internal_dma_config", scope: !6749, file: !868, line: 1074, type: !6759)
!6759 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !354, line: 283, baseType: !6760)
!6760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 280, size: 64, elements: !6761)
!6761 = !{!6762, !6763}
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !6760, file: !354, line: 281, baseType: !61, size: 32)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6760, file: !354, line: 282, baseType: !61, size: 32, offset: 32)
!6764 = !DILocalVariable(name: "tx_dma_channel", scope: !6749, file: !868, line: 1075, type: !4906)
!6765 = !DILocalVariable(name: "rx_dma_channel", scope: !6749, file: !868, line: 1075, type: !4906)
!6766 = !DILocalVariable(name: "status", scope: !6749, file: !868, line: 1076, type: !4905)
!6767 = !DILocation(line: 0, scope: !6749)
!6768 = !DILocation(line: 1074, column: 5, scope: !6749)
!6769 = !DILocation(line: 1074, column: 19, scope: !6749)
!6770 = !DILocation(line: 1078, column: 10, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1078, column: 9)
!6772 = !DILocation(line: 1078, column: 9, scope: !6749)
!6773 = !DILocation(line: 1081, column: 22, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1081, column: 9)
!6775 = !DILocation(line: 1081, column: 40, scope: !6774)
!6776 = !DILocation(line: 1081, column: 49, scope: !6774)
!6777 = !DILocation(line: 1082, column: 22, scope: !6774)
!6778 = !DILocation(line: 1082, column: 43, scope: !6774)
!6779 = !DILocation(line: 1081, column: 9, scope: !6749)
!6780 = !DILocation(line: 1085, column: 22, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1085, column: 9)
!6782 = !DILocation(line: 1085, column: 45, scope: !6781)
!6783 = !DILocation(line: 1085, column: 76, scope: !6781)
!6784 = !DILocation(line: 1086, column: 22, scope: !6781)
!6785 = !DILocation(line: 1086, column: 48, scope: !6781)
!6786 = !DILocation(line: 1086, column: 79, scope: !6781)
!6787 = !DILocation(line: 1090, column: 22, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1090, column: 9)
!6789 = !DILocation(line: 1090, column: 48, scope: !6788)
!6790 = !DILocation(line: 1090, column: 79, scope: !6788)
!6791 = !DILocation(line: 1091, column: 22, scope: !6788)
!6792 = !DILocation(line: 1091, column: 51, scope: !6788)
!6793 = !DILocation(line: 1091, column: 82, scope: !6788)
!6794 = !DILocation(line: 1092, column: 22, scope: !6788)
!6795 = !DILocation(line: 1092, column: 47, scope: !6788)
!6796 = !DILocation(line: 1092, column: 78, scope: !6788)
!6797 = !DILocation(line: 1098, column: 9, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1098, column: 9)
!6799 = !DILocation(line: 1098, column: 36, scope: !6798)
!6800 = !DILocation(line: 1098, column: 9, scope: !6749)
!6801 = !DILocation(line: 1102, column: 22, scope: !6749)
!6802 = !DILocation(line: 1103, column: 22, scope: !6749)
!6803 = !DILocation(line: 1105, column: 14, scope: !6749)
!6804 = !DILocation(line: 1106, column: 16, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1106, column: 9)
!6806 = !DILocation(line: 1106, column: 9, scope: !6749)
!6807 = !DILocation(line: 1107, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6805, file: !868, line: 1106, column: 28)
!6809 = !DILocation(line: 1110, column: 62, scope: !6749)
!6810 = !DILocation(line: 1110, column: 40, scope: !6749)
!6811 = !DILocation(line: 1110, column: 25, scope: !6749)
!6812 = !DILocation(line: 1110, column: 38, scope: !6749)
!6813 = !DILocation(line: 1111, column: 44, scope: !6749)
!6814 = !DILocation(line: 1111, column: 25, scope: !6749)
!6815 = !DILocation(line: 1111, column: 30, scope: !6749)
!6816 = !DILocation(line: 1112, column: 14, scope: !6749)
!6817 = !DILocation(line: 1113, column: 16, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1113, column: 9)
!6819 = !DILocation(line: 1113, column: 9, scope: !6749)
!6820 = !DILocation(line: 1114, column: 9, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6818, file: !868, line: 1113, column: 28)
!6822 = !DILocation(line: 1117, column: 61, scope: !6749)
!6823 = !DILocation(line: 1117, column: 14, scope: !6749)
!6824 = !DILocation(line: 1118, column: 16, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1118, column: 9)
!6826 = !DILocation(line: 1118, column: 9, scope: !6749)
!6827 = !DILocation(line: 1119, column: 9, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6825, file: !868, line: 1118, column: 28)
!6829 = !DILocation(line: 1123, column: 14, scope: !6749)
!6830 = !DILocation(line: 1124, column: 16, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1124, column: 9)
!6832 = !DILocation(line: 1124, column: 9, scope: !6749)
!6833 = !DILocation(line: 1125, column: 9, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6831, file: !868, line: 1124, column: 28)
!6835 = !DILocation(line: 1128, column: 62, scope: !6749)
!6836 = !DILocation(line: 1128, column: 40, scope: !6749)
!6837 = !DILocation(line: 1128, column: 38, scope: !6749)
!6838 = !DILocation(line: 1129, column: 44, scope: !6749)
!6839 = !DILocation(line: 1129, column: 30, scope: !6749)
!6840 = !DILocation(line: 1130, column: 14, scope: !6749)
!6841 = !DILocation(line: 1131, column: 16, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1131, column: 9)
!6843 = !DILocation(line: 1131, column: 9, scope: !6749)
!6844 = !DILocation(line: 1132, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6842, file: !868, line: 1131, column: 28)
!6846 = !DILocation(line: 1135, column: 61, scope: !6749)
!6847 = !DILocation(line: 1135, column: 14, scope: !6749)
!6848 = !DILocation(line: 1136, column: 16, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1136, column: 9)
!6850 = !DILocation(line: 1136, column: 9, scope: !6749)
!6851 = !DILocation(line: 1137, column: 9, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6849, file: !868, line: 1136, column: 28)
!6853 = !DILocation(line: 1140, column: 64, scope: !6749)
!6854 = !DILocation(line: 1140, column: 14, scope: !6749)
!6855 = !DILocation(line: 1141, column: 16, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6749, file: !868, line: 1141, column: 9)
!6857 = !DILocation(line: 1141, column: 9, scope: !6749)
!6858 = !DILocation(line: 1142, column: 9, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !868, line: 1141, column: 28)
!6860 = !DILocation(line: 1146, column: 18, scope: !6749)
!6861 = !DILocation(line: 1147, column: 66, scope: !6749)
!6862 = !DILocation(line: 1147, column: 34, scope: !6749)
!6863 = !DILocation(line: 1147, column: 52, scope: !6749)
!6864 = !DILocation(line: 1148, column: 71, scope: !6749)
!6865 = !DILocation(line: 1148, column: 34, scope: !6749)
!6866 = !DILocation(line: 1148, column: 57, scope: !6749)
!6867 = !DILocation(line: 1149, column: 74, scope: !6749)
!6868 = !DILocation(line: 1149, column: 34, scope: !6749)
!6869 = !DILocation(line: 1149, column: 60, scope: !6749)
!6870 = !DILocation(line: 1150, column: 73, scope: !6749)
!6871 = !DILocation(line: 1150, column: 34, scope: !6749)
!6872 = !DILocation(line: 1150, column: 59, scope: !6749)
!6873 = !DILocation(line: 1151, column: 69, scope: !6749)
!6874 = !DILocation(line: 1151, column: 34, scope: !6749)
!6875 = !DILocation(line: 1151, column: 55, scope: !6749)
!6876 = !DILocation(line: 1152, column: 74, scope: !6749)
!6877 = !DILocation(line: 1152, column: 34, scope: !6749)
!6878 = !DILocation(line: 1152, column: 60, scope: !6749)
!6879 = !DILocation(line: 1153, column: 77, scope: !6749)
!6880 = !DILocation(line: 1153, column: 34, scope: !6749)
!6881 = !DILocation(line: 1153, column: 63, scope: !6749)
!6882 = !DILocation(line: 1154, column: 5, scope: !6749)
!6883 = !DILocation(line: 1156, column: 5, scope: !6749)
!6884 = !DILocation(line: 1157, column: 1, scope: !6749)
!6885 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2913, file: !2913, line: 52, type: !6886, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !6943)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{null, !6888, !61}
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 32)
!6889 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !6890)
!6890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !6891)
!6891 = !{!6892, !6898, !6903, !6909, !6910, !6915, !6920, !6921, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934, !6935, !6936, !6937, !6938, !6939, !6940, !6941, !6942}
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !6890, file: !56, line: 547, baseType: !6893, size: 32)
!6893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !56, line: 543, size: 32, elements: !6894)
!6894 = !{!6895, !6896, !6897}
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !6893, file: !56, line: 544, baseType: !272, size: 32)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !6893, file: !56, line: 545, baseType: !60, size: 32)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !6893, file: !56, line: 546, baseType: !60, size: 32)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !6890, file: !56, line: 551, baseType: !6899, size: 32, offset: 32)
!6899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !56, line: 548, size: 32, elements: !6900)
!6900 = !{!6901, !6902}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !6899, file: !56, line: 549, baseType: !60, size: 32)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !6899, file: !56, line: 550, baseType: !60, size: 32)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !6890, file: !56, line: 556, baseType: !6904, size: 32, offset: 64)
!6904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !56, line: 552, size: 32, elements: !6905)
!6905 = !{!6906, !6907, !6908}
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !6904, file: !56, line: 553, baseType: !272, size: 32)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !6904, file: !56, line: 554, baseType: !60, size: 32)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !6904, file: !56, line: 555, baseType: !60, size: 32)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !6890, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !6890, file: !56, line: 561, baseType: !6911, size: 32, offset: 128)
!6911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !56, line: 558, size: 32, elements: !6912)
!6912 = !{!6913, !6914}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !6911, file: !56, line: 559, baseType: !60, size: 32)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !6911, file: !56, line: 560, baseType: !60, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !6890, file: !56, line: 565, baseType: !6916, size: 32, offset: 160)
!6916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !56, line: 562, size: 32, elements: !6917)
!6917 = !{!6918, !6919}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !6916, file: !56, line: 563, baseType: !272, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !6916, file: !56, line: 564, baseType: !60, size: 32)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !6890, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !6890, file: !56, line: 570, baseType: !6922, size: 32, offset: 224)
!6922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !56, line: 567, size: 32, elements: !6923)
!6923 = !{!6924, !6925}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !6922, file: !56, line: 568, baseType: !60, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !6922, file: !56, line: 569, baseType: !60, size: 32)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !6890, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !6890, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !6890, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !6890, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !6890, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !6890, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !6890, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !6890, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !6890, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !6890, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !6890, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !6890, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !6890, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !6890, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !6890, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !6890, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !6890, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!6943 = !{!6944, !6945, !6946, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6956}
!6944 = !DILocalVariable(name: "uartx", arg: 1, scope: !6885, file: !2913, line: 52, type: !6888)
!6945 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !6885, file: !2913, line: 52, type: !61)
!6946 = !DILocalVariable(name: "uart_clock", scope: !6885, file: !2913, line: 54, type: !61)
!6947 = !DILocalVariable(name: "integer", scope: !6885, file: !2913, line: 54, type: !61)
!6948 = !DILocalVariable(name: "remainder", scope: !6885, file: !2913, line: 54, type: !61)
!6949 = !DILocalVariable(name: "fraction", scope: !6885, file: !2913, line: 54, type: !61)
!6950 = !DILocalVariable(name: "dll_dlm", scope: !6885, file: !2913, line: 55, type: !61)
!6951 = !DILocalVariable(name: "sample_count", scope: !6885, file: !2913, line: 55, type: !61)
!6952 = !DILocalVariable(name: "sample_point", scope: !6885, file: !2913, line: 55, type: !61)
!6953 = !DILocalVariable(name: "temp_lcr", scope: !6885, file: !2913, line: 55, type: !61)
!6954 = !DILocalVariable(name: "fraction_L_mapping", scope: !6885, file: !2913, line: 56, type: !6955)
!6955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !489)
!6956 = !DILocalVariable(name: "fraction_M_mapping", scope: !6885, file: !2913, line: 57, type: !6955)
!6957 = !DILocation(line: 0, scope: !6885)
!6958 = !DILocation(line: 56, column: 14, scope: !6885)
!6959 = !DILocation(line: 57, column: 5, scope: !6885)
!6960 = !DILocation(line: 57, column: 14, scope: !6885)
!6961 = !DILocation(line: 59, column: 12, scope: !6885)
!6962 = !DILocation(line: 59, column: 23, scope: !6885)
!6963 = !DILocation(line: 60, column: 12, scope: !6885)
!6964 = !DILocation(line: 60, column: 22, scope: !6885)
!6965 = !DILocation(line: 61, column: 12, scope: !6885)
!6966 = !DILocation(line: 61, column: 22, scope: !6885)
!6967 = !DILocation(line: 63, column: 9, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6885, file: !2913, line: 63, column: 9)
!6969 = !DILocation(line: 63, column: 9, scope: !6885)
!6970 = !DILocation(line: 64, column: 22, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6968, file: !2913, line: 63, column: 37)
!6972 = !DILocation(line: 64, column: 45, scope: !6971)
!6973 = !DILocation(line: 65, column: 5, scope: !6971)
!6974 = !DILocation(line: 0, scope: !6968)
!6975 = !DILocation(line: 69, column: 45, scope: !6885)
!6976 = !DILocation(line: 69, column: 26, scope: !6885)
!6977 = !DILocation(line: 70, column: 30, scope: !6885)
!6978 = !DILocation(line: 70, column: 36, scope: !6885)
!6979 = !DILocation(line: 70, column: 63, scope: !6885)
!6980 = !DILocation(line: 71, column: 20, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6885, file: !2913, line: 71, column: 9)
!6982 = !DILocation(line: 71, column: 26, scope: !6981)
!6983 = !DILocation(line: 77, column: 5, scope: !6885)
!6984 = !DILocation(line: 77, column: 25, scope: !6885)
!6985 = !DILocation(line: 78, column: 16, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6885, file: !2913, line: 77, column: 32)
!6987 = distinct !{!6987, !6983, !6988}
!6988 = !DILocation(line: 80, column: 5, scope: !6885)
!6989 = !DILocation(line: 82, column: 35, scope: !6885)
!6990 = !DILocation(line: 82, column: 66, scope: !6885)
!6991 = !DILocation(line: 84, column: 18, scope: !6885)
!6992 = !DILocation(line: 85, column: 34, scope: !6885)
!6993 = !DILocation(line: 85, column: 39, scope: !6885)
!6994 = !DILocation(line: 87, column: 12, scope: !6885)
!6995 = !DILocation(line: 87, column: 22, scope: !6885)
!6996 = !DILocation(line: 89, column: 23, scope: !6885)
!6997 = !DILocation(line: 90, column: 27, scope: !6885)
!6998 = !DILocation(line: 90, column: 16, scope: !6885)
!6999 = !DILocation(line: 91, column: 38, scope: !6885)
!7000 = !DILocation(line: 91, column: 24, scope: !6885)
!7001 = !DILocation(line: 91, column: 28, scope: !6885)
!7002 = !DILocation(line: 92, column: 35, scope: !6885)
!7003 = !DILocation(line: 92, column: 41, scope: !6885)
!7004 = !DILocation(line: 92, column: 20, scope: !6885)
!7005 = !DILocation(line: 92, column: 24, scope: !6885)
!7006 = !DILocation(line: 93, column: 16, scope: !6885)
!7007 = !DILocation(line: 95, column: 12, scope: !6885)
!7008 = !DILocation(line: 95, column: 25, scope: !6885)
!7009 = !DILocation(line: 96, column: 12, scope: !6885)
!7010 = !DILocation(line: 96, column: 25, scope: !6885)
!7011 = !DILocation(line: 98, column: 24, scope: !6885)
!7012 = !DILocation(line: 98, column: 22, scope: !6885)
!7013 = !DILocation(line: 99, column: 24, scope: !6885)
!7014 = !DILocation(line: 99, column: 22, scope: !6885)
!7015 = !DILocation(line: 101, column: 25, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6885, file: !2913, line: 101, column: 9)
!7017 = !DILocation(line: 101, column: 9, scope: !6885)
!7018 = !DILocation(line: 102, column: 16, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !2913, line: 101, column: 37)
!7020 = !DILocation(line: 102, column: 22, scope: !7019)
!7021 = !DILocation(line: 103, column: 5, scope: !7019)
!7022 = !DILocation(line: 104, column: 1, scope: !6885)
!7023 = distinct !DISubprogram(name: "uart_set_format", scope: !2913, file: !2913, line: 106, type: !7024, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7026)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{null, !6888, !6096, !6098, !6100}
!7026 = !{!7027, !7028, !7029, !7030, !7031}
!7027 = !DILocalVariable(name: "uartx", arg: 1, scope: !7023, file: !2913, line: 106, type: !6888)
!7028 = !DILocalVariable(name: "word_length", arg: 2, scope: !7023, file: !2913, line: 107, type: !6096)
!7029 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !7023, file: !2913, line: 108, type: !6098)
!7030 = !DILocalVariable(name: "parity", arg: 4, scope: !7023, file: !2913, line: 109, type: !6100)
!7031 = !DILocalVariable(name: "byte", scope: !7023, file: !2913, line: 111, type: !1208)
!7032 = !DILocation(line: 0, scope: !7023)
!7033 = !DILocation(line: 114, column: 19, scope: !7023)
!7034 = !DILocation(line: 115, column: 16, scope: !7023)
!7035 = !DILocation(line: 118, column: 10, scope: !7023)
!7036 = !DILocation(line: 119, column: 5, scope: !7023)
!7037 = !DILocation(line: 124, column: 18, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7023, file: !2913, line: 119, column: 26)
!7039 = !DILocation(line: 125, column: 13, scope: !7038)
!7040 = !DILocation(line: 127, column: 18, scope: !7038)
!7041 = !DILocation(line: 128, column: 13, scope: !7038)
!7042 = !DILocation(line: 130, column: 18, scope: !7038)
!7043 = !DILocation(line: 131, column: 13, scope: !7038)
!7044 = !DILocation(line: 137, column: 10, scope: !7023)
!7045 = !DILocation(line: 138, column: 5, scope: !7023)
!7046 = !DILocation(line: 151, column: 5, scope: !7023)
!7047 = !DILocation(line: 166, column: 18, scope: !7023)
!7048 = !DILocation(line: 166, column: 16, scope: !7023)
!7049 = !DILocation(line: 167, column: 1, scope: !7023)
!7050 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2913, file: !2913, line: 169, type: !7051, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7053)
!7051 = !DISubroutineType(types: !7052)
!7052 = !{null, !6888, !463}
!7053 = !{!7054, !7055, !7056}
!7054 = !DILocalVariable(name: "uartx", arg: 1, scope: !7050, file: !2913, line: 169, type: !6888)
!7055 = !DILocalVariable(name: "byte", arg: 2, scope: !7050, file: !2913, line: 169, type: !463)
!7056 = !DILocalVariable(name: "LSR", scope: !7050, file: !2913, line: 171, type: !1208)
!7057 = !DILocation(line: 0, scope: !7050)
!7058 = !DILocation(line: 173, column: 5, scope: !7050)
!7059 = !DILocation(line: 174, column: 31, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7050, file: !2913, line: 173, column: 15)
!7061 = !DILocation(line: 175, column: 17, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7060, file: !2913, line: 175, column: 13)
!7063 = !DILocation(line: 175, column: 13, scope: !7060)
!7064 = distinct !{!7064, !7058, !7065}
!7065 = !DILocation(line: 179, column: 5, scope: !7050)
!7066 = !DILocation(line: 176, column: 38, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7062, file: !2913, line: 175, column: 39)
!7068 = !DILocation(line: 176, column: 32, scope: !7067)
!7069 = !DILocation(line: 176, column: 36, scope: !7067)
!7070 = !DILocation(line: 180, column: 1, scope: !7050)
!7071 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2913, file: !2913, line: 182, type: !7072, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7074)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!463, !6888}
!7074 = !{!7075, !7076, !7077}
!7075 = !DILocalVariable(name: "uartx", arg: 1, scope: !7071, file: !2913, line: 182, type: !6888)
!7076 = !DILocalVariable(name: "LSR", scope: !7071, file: !2913, line: 184, type: !1208)
!7077 = !DILocalVariable(name: "byte", scope: !7071, file: !2913, line: 185, type: !463)
!7078 = !DILocation(line: 0, scope: !7071)
!7079 = !DILocation(line: 187, column: 5, scope: !7071)
!7080 = !DILocation(line: 188, column: 31, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7071, file: !2913, line: 187, column: 15)
!7082 = !DILocation(line: 189, column: 17, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7081, file: !2913, line: 189, column: 13)
!7084 = !DILocation(line: 189, column: 13, scope: !7081)
!7085 = distinct !{!7085, !7079, !7086}
!7086 = !DILocation(line: 193, column: 5, scope: !7071)
!7087 = !DILocation(line: 190, column: 48, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !2913, line: 189, column: 37)
!7089 = !DILocation(line: 190, column: 20, scope: !7088)
!7090 = !DILocation(line: 195, column: 5, scope: !7071)
!7091 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2913, file: !2913, line: 198, type: !7092, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7094)
!7092 = !DISubroutineType(types: !7093)
!7093 = !{!61, !6888}
!7094 = !{!7095, !7096, !7097}
!7095 = !DILocalVariable(name: "uartx", arg: 1, scope: !7091, file: !2913, line: 198, type: !6888)
!7096 = !DILocalVariable(name: "LSR", scope: !7091, file: !2913, line: 200, type: !1208)
!7097 = !DILocalVariable(name: "value", scope: !7091, file: !2913, line: 201, type: !61)
!7098 = !DILocation(line: 0, scope: !7091)
!7099 = !DILocation(line: 203, column: 27, scope: !7091)
!7100 = !DILocation(line: 204, column: 13, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7091, file: !2913, line: 204, column: 9)
!7102 = !DILocation(line: 204, column: 9, scope: !7091)
!7103 = !DILocation(line: 205, column: 36, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7101, file: !2913, line: 204, column: 33)
!7105 = !DILocation(line: 206, column: 5, scope: !7104)
!7106 = !DILocation(line: 0, scope: !7101)
!7107 = !DILocation(line: 210, column: 5, scope: !7091)
!7108 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2913, file: !2913, line: 213, type: !7109, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7111)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{null, !6888}
!7111 = !{!7112, !7113, !7114}
!7112 = !DILocalVariable(name: "uartx", arg: 1, scope: !7108, file: !2913, line: 213, type: !6888)
!7113 = !DILocalVariable(name: "EFR", scope: !7108, file: !2913, line: 215, type: !1208)
!7114 = !DILocalVariable(name: "LCR", scope: !7108, file: !2913, line: 215, type: !1208)
!7115 = !DILocation(line: 0, scope: !7108)
!7116 = !DILocation(line: 217, column: 18, scope: !7108)
!7117 = !DILocation(line: 219, column: 16, scope: !7108)
!7118 = !DILocation(line: 220, column: 30, scope: !7108)
!7119 = !DILocation(line: 222, column: 30, scope: !7108)
!7120 = !DILocation(line: 222, column: 28, scope: !7108)
!7121 = !DILocation(line: 223, column: 12, scope: !7108)
!7122 = !DILocation(line: 223, column: 22, scope: !7108)
!7123 = !DILocation(line: 225, column: 16, scope: !7108)
!7124 = !DILocation(line: 226, column: 21, scope: !7108)
!7125 = !DILocation(line: 226, column: 25, scope: !7108)
!7126 = !DILocation(line: 228, column: 18, scope: !7108)
!7127 = !DILocation(line: 228, column: 16, scope: !7108)
!7128 = !DILocation(line: 229, column: 1, scope: !7108)
!7129 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2913, file: !2913, line: 231, type: !7130, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7132)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{null, !6888, !463, !463, !463}
!7132 = !{!7133, !7134, !7135, !7136, !7137, !7138}
!7133 = !DILocalVariable(name: "uartx", arg: 1, scope: !7129, file: !2913, line: 231, type: !6888)
!7134 = !DILocalVariable(name: "xon", arg: 2, scope: !7129, file: !2913, line: 232, type: !463)
!7135 = !DILocalVariable(name: "xoff", arg: 3, scope: !7129, file: !2913, line: 233, type: !463)
!7136 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7129, file: !2913, line: 234, type: !463)
!7137 = !DILocalVariable(name: "EFR", scope: !7129, file: !2913, line: 236, type: !1208)
!7138 = !DILocalVariable(name: "LCR", scope: !7129, file: !2913, line: 236, type: !1208)
!7139 = !DILocation(line: 0, scope: !7129)
!7140 = !DILocation(line: 238, column: 18, scope: !7129)
!7141 = !DILocation(line: 240, column: 16, scope: !7129)
!7142 = !DILocation(line: 241, column: 28, scope: !7129)
!7143 = !DILocation(line: 241, column: 21, scope: !7129)
!7144 = !DILocation(line: 241, column: 26, scope: !7129)
!7145 = !DILocation(line: 242, column: 20, scope: !7129)
!7146 = !DILocation(line: 242, column: 12, scope: !7129)
!7147 = !DILocation(line: 242, column: 18, scope: !7129)
!7148 = !DILocation(line: 243, column: 30, scope: !7129)
!7149 = !DILocation(line: 245, column: 30, scope: !7129)
!7150 = !DILocation(line: 245, column: 28, scope: !7129)
!7151 = !DILocation(line: 246, column: 25, scope: !7129)
!7152 = !DILocation(line: 246, column: 12, scope: !7129)
!7153 = !DILocation(line: 246, column: 23, scope: !7129)
!7154 = !DILocation(line: 247, column: 12, scope: !7129)
!7155 = !DILocation(line: 247, column: 22, scope: !7129)
!7156 = !DILocation(line: 249, column: 18, scope: !7129)
!7157 = !DILocation(line: 249, column: 16, scope: !7129)
!7158 = !DILocation(line: 250, column: 1, scope: !7129)
!7159 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2913, file: !2913, line: 252, type: !7109, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7160)
!7160 = !{!7161, !7162}
!7161 = !DILocalVariable(name: "uartx", arg: 1, scope: !7159, file: !2913, line: 252, type: !6888)
!7162 = !DILocalVariable(name: "LCR", scope: !7159, file: !2913, line: 254, type: !1208)
!7163 = !DILocation(line: 0, scope: !7159)
!7164 = !DILocation(line: 256, column: 18, scope: !7159)
!7165 = !DILocation(line: 258, column: 16, scope: !7159)
!7166 = !DILocation(line: 259, column: 24, scope: !7159)
!7167 = !DILocation(line: 259, column: 28, scope: !7159)
!7168 = !DILocation(line: 261, column: 16, scope: !7159)
!7169 = !DILocation(line: 262, column: 18, scope: !7159)
!7170 = !DILocation(line: 262, column: 16, scope: !7159)
!7171 = !DILocation(line: 263, column: 1, scope: !7159)
!7172 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2913, file: !2913, line: 265, type: !7109, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7173)
!7173 = !{!7174, !7175, !7176}
!7174 = !DILocalVariable(name: "uartx", arg: 1, scope: !7172, file: !2913, line: 265, type: !6888)
!7175 = !DILocalVariable(name: "EFR", scope: !7172, file: !2913, line: 267, type: !1208)
!7176 = !DILocalVariable(name: "LCR", scope: !7172, file: !2913, line: 267, type: !1208)
!7177 = !DILocation(line: 0, scope: !7172)
!7178 = !DILocation(line: 269, column: 18, scope: !7172)
!7179 = !DILocation(line: 271, column: 16, scope: !7172)
!7180 = !DILocation(line: 272, column: 30, scope: !7172)
!7181 = !DILocation(line: 274, column: 30, scope: !7172)
!7182 = !DILocation(line: 274, column: 28, scope: !7172)
!7183 = !DILocation(line: 276, column: 16, scope: !7172)
!7184 = !DILocation(line: 277, column: 28, scope: !7172)
!7185 = !DILocation(line: 283, column: 18, scope: !7172)
!7186 = !DILocation(line: 283, column: 16, scope: !7172)
!7187 = !DILocation(line: 284, column: 1, scope: !7172)
!7188 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2913, file: !2913, line: 307, type: !7109, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7189)
!7189 = !{!7190, !7191, !7192}
!7190 = !DILocalVariable(name: "uartx", arg: 1, scope: !7188, file: !2913, line: 307, type: !6888)
!7191 = !DILocalVariable(name: "IER", scope: !7188, file: !2913, line: 309, type: !1208)
!7192 = !DILocalVariable(name: "LCR", scope: !7188, file: !2913, line: 309, type: !1208)
!7193 = !DILocation(line: 0, scope: !7188)
!7194 = !DILocation(line: 311, column: 18, scope: !7188)
!7195 = !DILocation(line: 313, column: 16, scope: !7188)
!7196 = !DILocation(line: 314, column: 26, scope: !7188)
!7197 = !DILocation(line: 316, column: 26, scope: !7188)
!7198 = !DILocation(line: 316, column: 24, scope: !7188)
!7199 = !DILocation(line: 318, column: 19, scope: !7188)
!7200 = !DILocation(line: 318, column: 16, scope: !7188)
!7201 = !DILocation(line: 319, column: 1, scope: !7188)
!7202 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2913, file: !2913, line: 321, type: !7203, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7205)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{null, !6888, !1335}
!7205 = !{!7206, !7207, !7208}
!7206 = !DILocalVariable(name: "uartx", arg: 1, scope: !7202, file: !2913, line: 321, type: !6888)
!7207 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7202, file: !2913, line: 321, type: !1335)
!7208 = !DILocalVariable(name: "FCR", scope: !7202, file: !2913, line: 323, type: !1208)
!7209 = !DILocation(line: 0, scope: !7202)
!7210 = !DILocation(line: 327, column: 9, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7202, file: !2913, line: 327, column: 9)
!7212 = !DILocation(line: 333, column: 24, scope: !7202)
!7213 = !DILocation(line: 333, column: 28, scope: !7202)
!7214 = !DILocation(line: 334, column: 1, scope: !7202)
!7215 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2913, file: !2913, line: 336, type: !7216, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7219)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!7218, !6888}
!7218 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !937, line: 55, baseType: !993)
!7219 = !{!7220, !7221, !7222, !7223}
!7220 = !DILocalVariable(name: "uartx", arg: 1, scope: !7215, file: !2913, line: 336, type: !6888)
!7221 = !DILocalVariable(name: "IIR", scope: !7215, file: !2913, line: 338, type: !1208)
!7222 = !DILocalVariable(name: "LSR", scope: !7215, file: !2913, line: 338, type: !1208)
!7223 = !DILocalVariable(name: "type", scope: !7215, file: !2913, line: 339, type: !7218)
!7224 = !DILocation(line: 0, scope: !7215)
!7225 = !DILocation(line: 341, column: 30, scope: !7215)
!7226 = !DILocation(line: 342, column: 13, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7215, file: !2913, line: 342, column: 9)
!7228 = !DILocation(line: 342, column: 9, scope: !7215)
!7229 = !DILocation(line: 346, column: 17, scope: !7215)
!7230 = !DILocation(line: 346, column: 5, scope: !7215)
!7231 = !DILocation(line: 350, column: 13, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7215, file: !2913, line: 346, column: 37)
!7233 = !DILocation(line: 353, column: 35, scope: !7232)
!7234 = !DILocation(line: 354, column: 21, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !2913, line: 354, column: 17)
!7236 = !DILocation(line: 363, column: 13, scope: !7232)
!7237 = !DILocation(line: 369, column: 1, scope: !7215)
!7238 = distinct !DISubprogram(name: "uart_verify_error", scope: !2913, file: !2913, line: 371, type: !7239, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7241)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!1335, !6888}
!7241 = !{!7242, !7243, !7244}
!7242 = !DILocalVariable(name: "uartx", arg: 1, scope: !7238, file: !2913, line: 371, type: !6888)
!7243 = !DILocalVariable(name: "LSR", scope: !7238, file: !2913, line: 373, type: !1208)
!7244 = !DILocalVariable(name: "ret", scope: !7238, file: !2913, line: 374, type: !1335)
!7245 = !DILocation(line: 0, scope: !7238)
!7246 = !DILocation(line: 376, column: 27, scope: !7238)
!7247 = !DILocation(line: 377, column: 15, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7238, file: !2913, line: 377, column: 9)
!7249 = !DILocation(line: 377, column: 9, scope: !7238)
!7250 = !DILocation(line: 381, column: 5, scope: !7238)
!7251 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2913, file: !2913, line: 384, type: !7109, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7252)
!7252 = !{!7253, !7254}
!7253 = !DILocalVariable(name: "uartx", arg: 1, scope: !7251, file: !2913, line: 384, type: !6888)
!7254 = !DILocalVariable(name: "DMA_EN", scope: !7251, file: !2913, line: 386, type: !1208)
!7255 = !DILocation(line: 0, scope: !7251)
!7256 = !DILocation(line: 388, column: 21, scope: !7251)
!7257 = !DILocation(line: 390, column: 1, scope: !7251)
!7258 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2913, file: !2913, line: 392, type: !7109, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7259)
!7259 = !{!7260}
!7260 = !DILocalVariable(name: "uartx", arg: 1, scope: !7258, file: !2913, line: 392, type: !6888)
!7261 = !DILocation(line: 0, scope: !7258)
!7262 = !DILocation(line: 394, column: 12, scope: !7258)
!7263 = !DILocation(line: 394, column: 16, scope: !7258)
!7264 = !DILocation(line: 395, column: 24, scope: !7258)
!7265 = !DILocation(line: 395, column: 28, scope: !7258)
!7266 = !DILocation(line: 396, column: 21, scope: !7258)
!7267 = !DILocation(line: 396, column: 26, scope: !7258)
!7268 = !DILocation(line: 397, column: 12, scope: !7258)
!7269 = !DILocation(line: 397, column: 18, scope: !7258)
!7270 = !DILocation(line: 399, column: 16, scope: !7258)
!7271 = !DILocation(line: 400, column: 24, scope: !7258)
!7272 = !DILocation(line: 400, column: 28, scope: !7258)
!7273 = !DILocation(line: 401, column: 20, scope: !7258)
!7274 = !DILocation(line: 401, column: 24, scope: !7258)
!7275 = !DILocation(line: 403, column: 16, scope: !7258)
!7276 = !DILocation(line: 404, column: 24, scope: !7258)
!7277 = !DILocation(line: 405, column: 28, scope: !7258)
!7278 = !DILocation(line: 407, column: 16, scope: !7258)
!7279 = !DILocation(line: 408, column: 28, scope: !7258)
!7280 = !DILocation(line: 409, column: 16, scope: !7258)
!7281 = !DILocation(line: 411, column: 25, scope: !7258)
!7282 = !DILocation(line: 412, column: 22, scope: !7258)
!7283 = !DILocation(line: 412, column: 26, scope: !7258)
!7284 = !DILocation(line: 413, column: 12, scope: !7258)
!7285 = !DILocation(line: 413, column: 24, scope: !7258)
!7286 = !DILocation(line: 414, column: 12, scope: !7258)
!7287 = !DILocation(line: 414, column: 22, scope: !7258)
!7288 = !DILocation(line: 415, column: 12, scope: !7258)
!7289 = !DILocation(line: 415, column: 25, scope: !7258)
!7290 = !DILocation(line: 416, column: 12, scope: !7258)
!7291 = !DILocation(line: 416, column: 25, scope: !7258)
!7292 = !DILocation(line: 417, column: 12, scope: !7258)
!7293 = !DILocation(line: 417, column: 23, scope: !7258)
!7294 = !DILocation(line: 418, column: 12, scope: !7258)
!7295 = !DILocation(line: 418, column: 27, scope: !7258)
!7296 = !DILocation(line: 419, column: 12, scope: !7258)
!7297 = !DILocation(line: 419, column: 18, scope: !7258)
!7298 = !DILocation(line: 420, column: 12, scope: !7258)
!7299 = !DILocation(line: 420, column: 23, scope: !7258)
!7300 = !DILocation(line: 421, column: 12, scope: !7258)
!7301 = !DILocation(line: 421, column: 22, scope: !7258)
!7302 = !DILocation(line: 422, column: 12, scope: !7258)
!7303 = !DILocation(line: 422, column: 21, scope: !7258)
!7304 = !DILocation(line: 423, column: 12, scope: !7258)
!7305 = !DILocation(line: 423, column: 19, scope: !7258)
!7306 = !DILocation(line: 424, column: 23, scope: !7258)
!7307 = !DILocation(line: 425, column: 12, scope: !7258)
!7308 = !DILocation(line: 425, column: 22, scope: !7258)
!7309 = !DILocation(line: 426, column: 12, scope: !7258)
!7310 = !DILocation(line: 426, column: 22, scope: !7258)
!7311 = !DILocation(line: 427, column: 1, scope: !7258)
!7312 = distinct !DISubprogram(name: "uart_query_empty", scope: !2913, file: !2913, line: 429, type: !7109, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !7313)
!7313 = !{!7314}
!7314 = !DILocalVariable(name: "uartx", arg: 1, scope: !7312, file: !2913, line: 429, type: !6888)
!7315 = !DILocation(line: 0, scope: !7312)
!7316 = !DILocation(line: 431, column: 5, scope: !7312)
!7317 = !DILocation(line: 431, column: 31, scope: !7312)
!7318 = !DILocation(line: 431, column: 36, scope: !7312)
!7319 = !DILocation(line: 431, column: 12, scope: !7312)
!7320 = distinct !{!7320, !7316, !7321}
!7321 = !DILocation(line: 431, column: 44, scope: !7312)
!7322 = !DILocation(line: 432, column: 1, scope: !7312)
!7323 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !991, file: !991, line: 134, type: !7324, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7326)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!4906, !942, !1335}
!7326 = !{!7327, !7328, !7329}
!7327 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7323, file: !991, line: 134, type: !942)
!7328 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7323, file: !991, line: 134, type: !1335)
!7329 = !DILocalVariable(name: "dma_channel", scope: !7323, file: !991, line: 136, type: !4906)
!7330 = !DILocation(line: 0, scope: !7323)
!7331 = !DILocation(line: 138, column: 5, scope: !7323)
!7332 = !DILocation(line: 140, column: 17, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !991, line: 140, column: 17)
!7334 = distinct !DILexicalBlock(scope: !7323, file: !991, line: 138, column: 24)
!7335 = !DILocation(line: 147, column: 17, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7334, file: !991, line: 147, column: 17)
!7337 = !DILocation(line: 154, column: 17, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7334, file: !991, line: 154, column: 17)
!7339 = !DILocation(line: 161, column: 17, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7334, file: !991, line: 161, column: 17)
!7341 = !DILocation(line: 171, column: 5, scope: !7323)
!7342 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !991, file: !991, line: 174, type: !7343, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7351)
!7343 = !DISubroutineType(types: !7344)
!7344 = !{null, !4906, !7345}
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7346, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !937, line: 96, baseType: !7347)
!7347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !937, line: 93, size: 64, elements: !7348)
!7348 = !{!7349, !7350}
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !7347, file: !937, line: 94, baseType: !91, size: 8)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !7347, file: !937, line: 95, baseType: !942, size: 32, offset: 32)
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !7342, file: !991, line: 174, type: !4906)
!7353 = !DILocalVariable(name: "user_data", arg: 2, scope: !7342, file: !991, line: 174, type: !7345)
!7354 = !DILocation(line: 0, scope: !7342)
!7355 = !DILocation(line: 176, column: 5, scope: !7342)
!7356 = !DILocation(line: 0, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7342, file: !991, line: 176, column: 26)
!7358 = !DILocation(line: 212, column: 1, scope: !7342)
!7359 = distinct !DISubprogram(name: "uart_enable_dma", scope: !991, file: !991, line: 214, type: !7360, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7362)
!7360 = !DISubroutineType(types: !7361)
!7361 = !{null, !1004}
!7362 = !{!7363}
!7363 = !DILocalVariable(name: "uartx", arg: 1, scope: !7359, file: !991, line: 214, type: !1004)
!7364 = !DILocation(line: 0, scope: !7359)
!7365 = !DILocation(line: 216, column: 12, scope: !7359)
!7366 = !DILocation(line: 216, column: 19, scope: !7359)
!7367 = !DILocation(line: 217, column: 1, scope: !7359)
!7368 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !991, file: !991, line: 219, type: !526, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7369)
!7369 = !{!7370, !7371, !7372, !7373}
!7370 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7368, file: !991, line: 219, type: !528)
!7371 = !DILocalVariable(name: "uart_port", scope: !7368, file: !991, line: 221, type: !942)
!7372 = !DILocalVariable(name: "type", scope: !7368, file: !991, line: 222, type: !7218)
!7373 = !DILocalVariable(name: "uartx", scope: !7368, file: !991, line: 223, type: !1004)
!7374 = !DILocation(line: 0, scope: !7368)
!7375 = !DILocation(line: 225, column: 5, scope: !7368)
!7376 = !DILocation(line: 242, column: 13, scope: !7368)
!7377 = !DILocation(line: 243, column: 12, scope: !7368)
!7378 = !DILocation(line: 245, column: 5, scope: !7368)
!7379 = !DILocation(line: 248, column: 13, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7368, file: !991, line: 245, column: 19)
!7381 = !DILocation(line: 249, column: 13, scope: !7380)
!7382 = !DILocation(line: 252, column: 13, scope: !7380)
!7383 = !DILocation(line: 253, column: 13, scope: !7380)
!7384 = !DILocation(line: 263, column: 13, scope: !7380)
!7385 = !DILocation(line: 264, column: 13, scope: !7380)
!7386 = !DILocation(line: 276, column: 13, scope: !7380)
!7387 = !DILocation(line: 278, column: 1, scope: !7368)
!7388 = distinct !DISubprogram(name: "hal_i2c_master_init", scope: !1074, file: !1074, line: 150, type: !7389, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7398)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!7391, !1141, !7392}
!7391 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_status_t", file: !1077, line: 461, baseType: !1076)
!7392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7393, size: 32)
!7393 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_config_t", file: !1077, line: 496, baseType: !7394)
!7394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 494, size: 32, elements: !7395)
!7395 = !{!7396}
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !7394, file: !1077, line: 495, baseType: !7397, size: 32)
!7397 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_frequency_t", file: !1077, line: 478, baseType: !1090)
!7398 = !{!7399, !7400, !7401, !7402}
!7399 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7388, file: !1074, line: 150, type: !1141)
!7400 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !7388, file: !1074, line: 150, type: !7392)
!7401 = !DILocalVariable(name: "busy_status", scope: !7388, file: !1074, line: 152, type: !7391)
!7402 = !DILocalVariable(name: "saved_mask", scope: !7403, file: !1074, line: 163, type: !61)
!7403 = distinct !DILexicalBlock(scope: !7388, file: !1074, line: 163, column: 5)
!7404 = !DILocation(line: 0, scope: !7388)
!7405 = !DILocation(line: 154, column: 28, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7388, file: !1074, line: 154, column: 9)
!7407 = !DILocation(line: 154, column: 9, scope: !7388)
!7408 = !DILocation(line: 158, column: 46, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7388, file: !1074, line: 158, column: 9)
!7410 = !DILocation(line: 158, column: 31, scope: !7409)
!7411 = !DILocation(line: 158, column: 9, scope: !7388)
!7412 = !DILocation(line: 163, column: 5, scope: !7403)
!7413 = !DILocation(line: 0, scope: !7403)
!7414 = !DILocation(line: 163, column: 5, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7403, file: !1074, line: 163, column: 5)
!7416 = !DILocation(line: 163, column: 5, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7415, file: !1074, line: 163, column: 5)
!7418 = !DILocation(line: 170, column: 22, scope: !7388)
!7419 = !DILocation(line: 170, column: 5, scope: !7388)
!7420 = !DILocation(line: 180, column: 45, scope: !7388)
!7421 = !DILocation(line: 180, column: 5, scope: !7388)
!7422 = !DILocation(line: 182, column: 5, scope: !7388)
!7423 = !DILocation(line: 165, column: 9, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !1074, line: 164, column: 51)
!7425 = distinct !DILexicalBlock(scope: !7388, file: !1074, line: 164, column: 9)
!7426 = !DILocation(line: 166, column: 9, scope: !7424)
!7427 = !DILocation(line: 183, column: 1, scope: !7388)
!7428 = distinct !DISubprogram(name: "hal_i2c_master_deinit", scope: !1074, file: !1074, line: 186, type: !7429, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7431)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!7391, !1141}
!7431 = !{!7432}
!7432 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7428, file: !1074, line: 186, type: !1141)
!7433 = !DILocation(line: 0, scope: !7428)
!7434 = !DILocation(line: 189, column: 28, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7428, file: !1074, line: 189, column: 9)
!7436 = !DILocation(line: 189, column: 9, scope: !7428)
!7437 = !DILocation(line: 195, column: 5, scope: !7428)
!7438 = !DILocation(line: 198, column: 26, scope: !7428)
!7439 = !DILocation(line: 198, column: 5, scope: !7428)
!7440 = !DILocation(line: 201, column: 5, scope: !7428)
!7441 = !DILocation(line: 204, column: 5, scope: !7428)
!7442 = !DILocation(line: 204, column: 30, scope: !7428)
!7443 = !DILocation(line: 207, column: 35, scope: !7428)
!7444 = !DILocation(line: 207, column: 46, scope: !7428)
!7445 = !DILocation(line: 209, column: 23, scope: !7428)
!7446 = !DILocation(line: 209, column: 5, scope: !7428)
!7447 = !DILocation(line: 216, column: 5, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7428, file: !1074, line: 216, column: 5)
!7449 = !DILocation(line: 218, column: 5, scope: !7428)
!7450 = !DILocation(line: 219, column: 1, scope: !7428)
!7451 = distinct !DISubprogram(name: "hal_i2c_master_set_frequency", scope: !1074, file: !1074, line: 222, type: !7452, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7454)
!7452 = !DISubroutineType(types: !7453)
!7453 = !{!7391, !1141, !7397}
!7454 = !{!7455, !7456}
!7455 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7451, file: !1074, line: 222, type: !1141)
!7456 = !DILocalVariable(name: "frequency", arg: 2, scope: !7451, file: !1074, line: 222, type: !7397)
!7457 = !DILocation(line: 0, scope: !7451)
!7458 = !DILocation(line: 224, column: 28, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7451, file: !1074, line: 224, column: 9)
!7460 = !DILocation(line: 224, column: 9, scope: !7451)
!7461 = !DILocation(line: 227, column: 31, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7451, file: !1074, line: 227, column: 9)
!7463 = !DILocation(line: 227, column: 9, scope: !7451)
!7464 = !DILocation(line: 230, column: 21, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7451, file: !1074, line: 230, column: 9)
!7466 = !DILocation(line: 230, column: 18, scope: !7465)
!7467 = !DILocation(line: 230, column: 9, scope: !7451)
!7468 = !DILocation(line: 231, column: 9, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7465, file: !1074, line: 230, column: 57)
!7470 = !DILocation(line: 232, column: 9, scope: !7469)
!7471 = !DILocation(line: 237, column: 5, scope: !7451)
!7472 = !DILocation(line: 239, column: 5, scope: !7451)
!7473 = !DILocation(line: 240, column: 1, scope: !7451)
!7474 = distinct !DISubprogram(name: "hal_i2c_master_register_callback", scope: !1074, file: !1074, line: 245, type: !7475, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7477)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{!7391, !1141, !1163, !88}
!7477 = !{!7478, !7479, !7480}
!7478 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7474, file: !1074, line: 245, type: !1141)
!7479 = !DILocalVariable(name: "i2c_callback", arg: 2, scope: !7474, file: !1074, line: 245, type: !1163)
!7480 = !DILocalVariable(name: "user_data", arg: 3, scope: !7474, file: !1074, line: 245, type: !88)
!7481 = !DILocation(line: 0, scope: !7474)
!7482 = !DILocation(line: 247, column: 28, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7474, file: !1074, line: 247, column: 9)
!7484 = !DILocation(line: 247, column: 9, scope: !7474)
!7485 = !DILocation(line: 250, column: 14, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7474, file: !1074, line: 250, column: 9)
!7487 = !DILocation(line: 250, column: 9, scope: !7474)
!7488 = !DILocation(line: 255, column: 5, scope: !7474)
!7489 = !DILocation(line: 255, column: 30, scope: !7474)
!7490 = !DILocation(line: 256, column: 5, scope: !7474)
!7491 = !DILocation(line: 256, column: 40, scope: !7474)
!7492 = !DILocation(line: 259, column: 35, scope: !7474)
!7493 = !DILocation(line: 259, column: 5, scope: !7474)
!7494 = !DILocation(line: 260, column: 5, scope: !7474)
!7495 = !DILocation(line: 262, column: 5, scope: !7474)
!7496 = !DILocation(line: 263, column: 1, scope: !7474)
!7497 = distinct !DISubprogram(name: "hal_i2c_master_isr", scope: !1074, file: !1074, line: 844, type: !526, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7498)
!7498 = !{!7499, !7500, !7501}
!7499 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7497, file: !1074, line: 844, type: !528)
!7500 = !DILocalVariable(name: "i2c_port", scope: !7497, file: !1074, line: 846, type: !1141)
!7501 = !DILocalVariable(name: "i", scope: !7497, file: !1074, line: 847, type: !61)
!7502 = !DILocation(line: 0, scope: !7497)
!7503 = !DILocation(line: 849, column: 5, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7497, file: !1074, line: 849, column: 5)
!7505 = !DILocation(line: 850, column: 13, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !1074, line: 850, column: 13)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !1074, line: 849, column: 46)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !1074, line: 849, column: 5)
!7509 = !DILocation(line: 850, column: 32, scope: !7506)
!7510 = !DILocation(line: 850, column: 13, scope: !7507)
!7511 = !DILocation(line: 849, column: 42, scope: !7508)
!7512 = !DILocation(line: 849, column: 19, scope: !7508)
!7513 = distinct !{!7513, !7503, !7514}
!7514 = !DILocation(line: 854, column: 5, scope: !7504)
!7515 = !DILocation(line: 857, column: 9, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !1074, line: 856, column: 41)
!7517 = distinct !DILexicalBlock(scope: !7497, file: !1074, line: 856, column: 9)
!7518 = !DILocation(line: 858, column: 9, scope: !7516)
!7519 = !DILocation(line: 862, column: 35, scope: !7497)
!7520 = !DILocation(line: 862, column: 61, scope: !7497)
!7521 = !DILocation(line: 862, column: 5, scope: !7497)
!7522 = !DILocation(line: 864, column: 1, scope: !7497)
!7523 = distinct !DISubprogram(name: "hal_i2c_isr_handler", scope: !1074, file: !1074, line: 866, type: !7524, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7526)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{null, !1141, !1163, !88}
!7526 = !{!7527, !7528, !7529, !7530}
!7527 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7523, file: !1074, line: 866, type: !1141)
!7528 = !DILocalVariable(name: "user_callback", arg: 2, scope: !7523, file: !1074, line: 866, type: !1163)
!7529 = !DILocalVariable(name: "user_data", arg: 3, scope: !7523, file: !1074, line: 866, type: !88)
!7530 = !DILocalVariable(name: "transaction_status", scope: !7523, file: !1074, line: 868, type: !7531)
!7531 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !1106, line: 168, baseType: !1105)
!7532 = !DILocation(line: 0, scope: !7523)
!7533 = !DILocation(line: 874, column: 26, scope: !7523)
!7534 = !DILocation(line: 876, column: 33, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7523, file: !1074, line: 876, column: 9)
!7536 = !DILocation(line: 876, column: 9, scope: !7523)
!7537 = !DILocation(line: 877, column: 9, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7535, file: !1074, line: 876, column: 56)
!7539 = !DILocation(line: 879, column: 32, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7538, file: !1074, line: 879, column: 13)
!7541 = !DILocation(line: 879, column: 13, scope: !7538)
!7542 = !DILocation(line: 892, column: 5, scope: !7523)
!7543 = !DILocation(line: 896, column: 14, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7523, file: !1074, line: 896, column: 9)
!7545 = !DILocation(line: 896, column: 9, scope: !7523)
!7546 = !DILocation(line: 898, column: 23, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !1074, line: 896, column: 32)
!7548 = !DILocation(line: 898, column: 9, scope: !7547)
!7549 = !DILocation(line: 899, column: 5, scope: !7547)
!7550 = !DILocation(line: 900, column: 9, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7544, file: !1074, line: 899, column: 12)
!7552 = !DILocation(line: 903, column: 1, scope: !7523)
!7553 = distinct !DISubprogram(name: "hal_i2c_wait_dma_finish", scope: !1074, file: !1074, line: 964, type: !7554, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7556)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{null, !1141}
!7556 = !{!7557, !7558, !7559, !7560, !7561}
!7557 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7553, file: !1074, line: 964, type: !1141)
!7558 = !DILocalVariable(name: "gpt_start_count", scope: !7553, file: !1074, line: 966, type: !61)
!7559 = !DILocalVariable(name: "gpt_current_count", scope: !7553, file: !1074, line: 966, type: !61)
!7560 = !DILocalVariable(name: "gpt_duration_count", scope: !7553, file: !1074, line: 966, type: !61)
!7561 = !DILocalVariable(name: "saved_mask", scope: !7562, file: !1074, line: 974, type: !61)
!7562 = distinct !DILexicalBlock(scope: !7553, file: !1074, line: 973, column: 15)
!7563 = !DILocation(line: 0, scope: !7553)
!7564 = !DILocation(line: 966, column: 5, scope: !7553)
!7565 = !DILocation(line: 968, column: 10, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7553, file: !1074, line: 968, column: 9)
!7567 = !DILocation(line: 968, column: 9, scope: !7553)
!7568 = !DILocation(line: 971, column: 5, scope: !7553)
!7569 = !DILocation(line: 975, column: 22, scope: !7562)
!7570 = !DILocation(line: 0, scope: !7562)
!7571 = !DILocation(line: 976, column: 13, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7562, file: !1074, line: 976, column: 13)
!7573 = !DILocation(line: 976, column: 13, scope: !7562)
!7574 = !DILocation(line: 977, column: 13, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7572, file: !1074, line: 976, column: 42)
!7576 = !DILocation(line: 978, column: 13, scope: !7575)
!7577 = !DILocation(line: 980, column: 9, scope: !7562)
!7578 = !DILocation(line: 981, column: 36, scope: !7562)
!7579 = !DILocation(line: 981, column: 53, scope: !7562)
!7580 = !DILocation(line: 981, column: 9, scope: !7562)
!7581 = !DILocation(line: 983, column: 41, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7562, file: !1074, line: 983, column: 13)
!7583 = !DILocation(line: 983, column: 39, scope: !7582)
!7584 = !DILocation(line: 983, column: 13, scope: !7562)
!7585 = !DILocation(line: 984, column: 13, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7582, file: !1074, line: 983, column: 61)
!7587 = !DILocation(line: 986, column: 13, scope: !7586)
!7588 = !DILocation(line: 988, column: 73, scope: !7586)
!7589 = !DILocation(line: 988, column: 13, scope: !7586)
!7590 = !DILocation(line: 989, column: 98, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7586, file: !1074, line: 989, column: 17)
!7592 = !DILocation(line: 989, column: 65, scope: !7591)
!7593 = !DILocation(line: 989, column: 115, scope: !7591)
!7594 = !DILocation(line: 990, column: 108, scope: !7591)
!7595 = !DILocation(line: 990, column: 75, scope: !7591)
!7596 = !DILocation(line: 990, column: 126, scope: !7591)
!7597 = !DILocation(line: 990, column: 130, scope: !7591)
!7598 = !DILocation(line: 990, column: 163, scope: !7591)
!7599 = !DILocation(line: 989, column: 17, scope: !7586)
!7600 = !DILocation(line: 991, column: 17, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7591, file: !1074, line: 990, column: 170)
!7602 = !DILocation(line: 992, column: 13, scope: !7601)
!7603 = !DILocation(line: 995, column: 9, scope: !7562)
!7604 = !DILocation(line: 997, column: 1, scope: !7553)
!7605 = distinct !DISubprogram(name: "hal_i2c_master_dma_callback", scope: !1074, file: !1074, line: 905, type: !537, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7606)
!7606 = !{!7607, !7608, !7609}
!7607 = !DILocalVariable(name: "event", arg: 1, scope: !7605, file: !1074, line: 905, type: !539)
!7608 = !DILocalVariable(name: "user_data", arg: 2, scope: !7605, file: !1074, line: 905, type: !88)
!7609 = !DILocalVariable(name: "i2c_dma_parameter", scope: !7605, file: !1074, line: 907, type: !1142)
!7610 = !DILocation(line: 0, scope: !7605)
!7611 = !DILocation(line: 910, column: 67, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7605, file: !1074, line: 910, column: 9)
!7613 = !DILocation(line: 910, column: 84, scope: !7612)
!7614 = !DILocation(line: 912, column: 59, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !1074, line: 911, column: 96)
!7616 = !DILocation(line: 912, column: 19, scope: !7615)
!7617 = !DILocation(line: 912, column: 9, scope: !7615)
!7618 = !DILocation(line: 913, column: 61, scope: !7615)
!7619 = !DILocation(line: 913, column: 21, scope: !7615)
!7620 = !DILocation(line: 913, column: 9, scope: !7615)
!7621 = !DILocation(line: 914, column: 28, scope: !7615)
!7622 = !DILocation(line: 914, column: 39, scope: !7615)
!7623 = !DILocation(line: 915, column: 5, scope: !7615)
!7624 = !DILocation(line: 917, column: 59, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7626, file: !1074, line: 916, column: 102)
!7626 = distinct !DILexicalBlock(scope: !7612, file: !1074, line: 915, column: 16)
!7627 = !DILocation(line: 917, column: 19, scope: !7625)
!7628 = !DILocation(line: 917, column: 9, scope: !7625)
!7629 = !DILocation(line: 918, column: 61, scope: !7625)
!7630 = !DILocation(line: 918, column: 21, scope: !7625)
!7631 = !DILocation(line: 918, column: 9, scope: !7625)
!7632 = !DILocation(line: 919, column: 28, scope: !7625)
!7633 = !DILocation(line: 919, column: 39, scope: !7625)
!7634 = !DILocation(line: 920, column: 5, scope: !7625)
!7635 = !DILocation(line: 922, column: 51, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7637, file: !1074, line: 921, column: 110)
!7637 = distinct !DILexicalBlock(scope: !7626, file: !1074, line: 920, column: 16)
!7638 = !DILocation(line: 922, column: 9, scope: !7636)
!7639 = !DILocation(line: 922, column: 60, scope: !7636)
!7640 = !DILocation(line: 928, column: 46, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7636, file: !1074, line: 928, column: 13)
!7642 = !DILocation(line: 928, column: 43, scope: !7641)
!7643 = !DILocation(line: 928, column: 13, scope: !7636)
!7644 = !DILocation(line: 929, column: 23, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7641, file: !1074, line: 928, column: 99)
!7646 = !DILocation(line: 929, column: 13, scope: !7645)
!7647 = !DILocation(line: 930, column: 63, scope: !7645)
!7648 = !DILocation(line: 930, column: 23, scope: !7645)
!7649 = !DILocation(line: 930, column: 13, scope: !7645)
!7650 = !DILocation(line: 931, column: 65, scope: !7645)
!7651 = !DILocation(line: 931, column: 25, scope: !7645)
!7652 = !DILocation(line: 931, column: 13, scope: !7645)
!7653 = !DILocation(line: 932, column: 65, scope: !7645)
!7654 = !DILocation(line: 932, column: 25, scope: !7645)
!7655 = !DILocation(line: 932, column: 13, scope: !7645)
!7656 = !DILocation(line: 933, column: 32, scope: !7645)
!7657 = !DILocation(line: 933, column: 43, scope: !7645)
!7658 = !DILocation(line: 934, column: 55, scope: !7645)
!7659 = !DILocation(line: 934, column: 13, scope: !7645)
!7660 = !DILocation(line: 934, column: 65, scope: !7645)
!7661 = !DILocation(line: 935, column: 9, scope: !7645)
!7662 = !DILocation(line: 937, column: 1, scope: !7605)
!7663 = distinct !DISubprogram(name: "hal_i2c_master_send_polling", scope: !1074, file: !1074, line: 266, type: !7664, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7666)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!7391, !1141, !463, !6323, !61}
!7666 = !{!7667, !7668, !7669, !7670, !7671, !7672}
!7667 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7663, file: !1074, line: 266, type: !1141)
!7668 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7663, file: !1074, line: 266, type: !463)
!7669 = !DILocalVariable(name: "data", arg: 3, scope: !7663, file: !1074, line: 266, type: !6323)
!7670 = !DILocalVariable(name: "size", arg: 4, scope: !7663, file: !1074, line: 266, type: !61)
!7671 = !DILocalVariable(name: "transaction_status", scope: !7663, file: !1074, line: 268, type: !7531)
!7672 = !DILocalVariable(name: "config_size", scope: !7663, file: !1074, line: 269, type: !7673)
!7673 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !1106, line: 176, baseType: !7674)
!7674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1106, line: 170, size: 160, elements: !7675)
!7675 = !{!7676, !7677, !7678, !7679, !7680}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !7674, file: !1106, line: 171, baseType: !61, size: 32)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !7674, file: !1106, line: 172, baseType: !61, size: 32, offset: 32)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !7674, file: !1106, line: 173, baseType: !61, size: 32, offset: 64)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !7674, file: !1106, line: 174, baseType: !61, size: 32, offset: 96)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !7674, file: !1106, line: 175, baseType: !61, size: 32, offset: 128)
!7681 = !DILocation(line: 0, scope: !7663)
!7682 = !DILocation(line: 269, column: 5, scope: !7663)
!7683 = !DILocation(line: 269, column: 28, scope: !7663)
!7684 = !DILocation(line: 271, column: 28, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7663, file: !1074, line: 271, column: 9)
!7686 = !DILocation(line: 271, column: 9, scope: !7663)
!7687 = !DILocation(line: 274, column: 14, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7663, file: !1074, line: 274, column: 9)
!7689 = !DILocation(line: 274, column: 22, scope: !7688)
!7690 = !DILocation(line: 278, column: 21, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7663, file: !1074, line: 278, column: 9)
!7692 = !DILocation(line: 278, column: 18, scope: !7691)
!7693 = !DILocation(line: 278, column: 9, scope: !7663)
!7694 = !DILocation(line: 279, column: 9, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7691, file: !1074, line: 278, column: 57)
!7696 = !DILocation(line: 280, column: 9, scope: !7695)
!7697 = !DILocation(line: 289, column: 5, scope: !7663)
!7698 = !DILocation(line: 292, column: 17, scope: !7663)
!7699 = !DILocation(line: 292, column: 27, scope: !7663)
!7700 = !DILocation(line: 293, column: 17, scope: !7663)
!7701 = !DILocation(line: 293, column: 30, scope: !7663)
!7702 = !DILocation(line: 294, column: 76, scope: !7663)
!7703 = !DILocation(line: 294, column: 5, scope: !7663)
!7704 = !DILocation(line: 297, column: 5, scope: !7663)
!7705 = !DILocation(line: 300, column: 5, scope: !7663)
!7706 = !DILocation(line: 306, column: 5, scope: !7663)
!7707 = !DILocation(line: 310, column: 26, scope: !7663)
!7708 = !DILocation(line: 316, column: 33, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7663, file: !1074, line: 316, column: 9)
!7710 = !DILocation(line: 316, column: 9, scope: !7663)
!7711 = !DILocation(line: 317, column: 9, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7709, file: !1074, line: 316, column: 56)
!7713 = !DILocation(line: 318, column: 9, scope: !7712)
!7714 = !DILocation(line: 322, column: 1, scope: !7663)
!7715 = distinct !DISubprogram(name: "hal_i2c_master_wait_transaction_finish", scope: !1074, file: !1074, line: 942, type: !7716, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7718)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{null, !1141, !1147}
!7718 = !{!7719, !7720, !7721, !7722, !7723, !7724}
!7719 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7715, file: !1074, line: 942, type: !1141)
!7720 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !7715, file: !1074, line: 942, type: !1147)
!7721 = !DILocalVariable(name: "gpt_start_count", scope: !7715, file: !1074, line: 944, type: !61)
!7722 = !DILocalVariable(name: "gpt_current_count", scope: !7715, file: !1074, line: 944, type: !61)
!7723 = !DILocalVariable(name: "gpt_duration_count", scope: !7715, file: !1074, line: 944, type: !61)
!7724 = !DILocalVariable(name: "saved_mask", scope: !7725, file: !1074, line: 948, type: !61)
!7725 = distinct !DILexicalBlock(scope: !7715, file: !1074, line: 947, column: 15)
!7726 = !DILocation(line: 0, scope: !7715)
!7727 = !DILocation(line: 944, column: 5, scope: !7715)
!7728 = !DILocation(line: 945, column: 5, scope: !7715)
!7729 = !DILocation(line: 949, column: 22, scope: !7725)
!7730 = !DILocation(line: 0, scope: !7725)
!7731 = !DILocation(line: 950, column: 18, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7725, file: !1074, line: 950, column: 13)
!7733 = !DILocation(line: 950, column: 15, scope: !7732)
!7734 = !DILocation(line: 950, column: 13, scope: !7725)
!7735 = !DILocation(line: 954, column: 9, scope: !7725)
!7736 = !DILocation(line: 955, column: 36, scope: !7725)
!7737 = !DILocation(line: 955, column: 53, scope: !7725)
!7738 = !DILocation(line: 955, column: 9, scope: !7725)
!7739 = !DILocation(line: 956, column: 41, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7725, file: !1074, line: 956, column: 13)
!7741 = !DILocation(line: 956, column: 39, scope: !7740)
!7742 = !DILocation(line: 956, column: 13, scope: !7725)
!7743 = !DILocation(line: 957, column: 13, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7740, file: !1074, line: 956, column: 61)
!7745 = !DILocation(line: 959, column: 9, scope: !7744)
!7746 = !DILocation(line: 960, column: 9, scope: !7725)
!7747 = !DILocation(line: 951, column: 13, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7732, file: !1074, line: 950, column: 65)
!7749 = !DILocation(line: 962, column: 1, scope: !7715)
!7750 = distinct !DISubprogram(name: "hal_i2c_master_send_dma", scope: !1074, file: !1074, line: 325, type: !7664, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7751)
!7751 = !{!7752, !7753, !7754, !7755, !7756, !7757}
!7752 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7750, file: !1074, line: 325, type: !1141)
!7753 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7750, file: !1074, line: 325, type: !463)
!7754 = !DILocalVariable(name: "data", arg: 3, scope: !7750, file: !1074, line: 325, type: !6323)
!7755 = !DILocalVariable(name: "size", arg: 4, scope: !7750, file: !1074, line: 325, type: !61)
!7756 = !DILocalVariable(name: "config_size", scope: !7750, file: !1074, line: 327, type: !7673)
!7757 = !DILocalVariable(name: "i2c_dma_config", scope: !7750, file: !1074, line: 328, type: !7758)
!7758 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !354, line: 275, baseType: !7759)
!7759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 270, size: 128, elements: !7760)
!7760 = !{!7761, !7762, !7763, !7764}
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !7759, file: !354, line: 271, baseType: !91, size: 8)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7759, file: !354, line: 272, baseType: !4692, size: 32, offset: 32)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7759, file: !354, line: 273, baseType: !61, size: 32, offset: 64)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !7759, file: !354, line: 274, baseType: !4695, size: 32, offset: 96)
!7765 = !DILocation(line: 0, scope: !7750)
!7766 = !DILocation(line: 327, column: 5, scope: !7750)
!7767 = !DILocation(line: 327, column: 28, scope: !7750)
!7768 = !DILocation(line: 328, column: 5, scope: !7750)
!7769 = !DILocation(line: 328, column: 20, scope: !7750)
!7770 = !DILocation(line: 330, column: 28, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7750, file: !1074, line: 330, column: 9)
!7772 = !DILocation(line: 330, column: 9, scope: !7750)
!7773 = !DILocation(line: 333, column: 14, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7750, file: !1074, line: 333, column: 9)
!7775 = !DILocation(line: 333, column: 9, scope: !7750)
!7776 = !DILocation(line: 337, column: 10, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7750, file: !1074, line: 337, column: 9)
!7778 = !DILocation(line: 337, column: 9, scope: !7750)
!7779 = !DILocation(line: 341, column: 21, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7750, file: !1074, line: 341, column: 9)
!7781 = !DILocation(line: 341, column: 18, scope: !7780)
!7782 = !DILocation(line: 341, column: 9, scope: !7750)
!7783 = !DILocation(line: 342, column: 9, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7780, file: !1074, line: 341, column: 57)
!7785 = !DILocation(line: 343, column: 9, scope: !7784)
!7786 = !DILocation(line: 351, column: 15, scope: !7750)
!7787 = !DILocation(line: 351, column: 5, scope: !7750)
!7788 = !DILocation(line: 353, column: 31, scope: !7750)
!7789 = !DILocation(line: 354, column: 20, scope: !7750)
!7790 = !DILocation(line: 354, column: 26, scope: !7750)
!7791 = !DILocation(line: 355, column: 20, scope: !7750)
!7792 = !DILocation(line: 355, column: 32, scope: !7750)
!7793 = !DILocation(line: 356, column: 20, scope: !7750)
!7794 = !DILocation(line: 356, column: 25, scope: !7750)
!7795 = !DILocation(line: 357, column: 20, scope: !7750)
!7796 = !DILocation(line: 357, column: 5, scope: !7750)
!7797 = !DILocation(line: 360, column: 5, scope: !7750)
!7798 = !DILocation(line: 360, column: 35, scope: !7750)
!7799 = !DILocation(line: 360, column: 52, scope: !7750)
!7800 = !DILocation(line: 361, column: 35, scope: !7750)
!7801 = !DILocation(line: 361, column: 46, scope: !7750)
!7802 = !DILocation(line: 362, column: 46, scope: !7750)
!7803 = !DILocation(line: 362, column: 35, scope: !7750)
!7804 = !DILocation(line: 362, column: 44, scope: !7750)
!7805 = !DILocation(line: 363, column: 28, scope: !7750)
!7806 = !DILocation(line: 363, column: 89, scope: !7750)
!7807 = !DILocation(line: 363, column: 5, scope: !7750)
!7808 = !DILocation(line: 367, column: 17, scope: !7750)
!7809 = !DILocation(line: 367, column: 27, scope: !7750)
!7810 = !DILocation(line: 368, column: 17, scope: !7750)
!7811 = !DILocation(line: 368, column: 30, scope: !7750)
!7812 = !DILocation(line: 369, column: 72, scope: !7750)
!7813 = !DILocation(line: 369, column: 5, scope: !7750)
!7814 = !DILocation(line: 371, column: 5, scope: !7750)
!7815 = !DILocation(line: 374, column: 26, scope: !7750)
!7816 = !DILocation(line: 374, column: 58, scope: !7750)
!7817 = !DILocation(line: 374, column: 5, scope: !7750)
!7818 = !DILocation(line: 376, column: 5, scope: !7750)
!7819 = !DILocation(line: 381, column: 5, scope: !7750)
!7820 = !DILocation(line: 382, column: 1, scope: !7750)
!7821 = distinct !DISubprogram(name: "hal_i2c_master_receive_polling", scope: !1074, file: !1074, line: 385, type: !7822, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7824)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!7391, !1141, !463, !969, !61}
!7824 = !{!7825, !7826, !7827, !7828, !7829, !7830}
!7825 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7821, file: !1074, line: 385, type: !1141)
!7826 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7821, file: !1074, line: 385, type: !463)
!7827 = !DILocalVariable(name: "buffer", arg: 3, scope: !7821, file: !1074, line: 385, type: !969)
!7828 = !DILocalVariable(name: "size", arg: 4, scope: !7821, file: !1074, line: 385, type: !61)
!7829 = !DILocalVariable(name: "transaction_status", scope: !7821, file: !1074, line: 387, type: !7531)
!7830 = !DILocalVariable(name: "config_size", scope: !7821, file: !1074, line: 388, type: !7673)
!7831 = !DILocation(line: 0, scope: !7821)
!7832 = !DILocation(line: 388, column: 5, scope: !7821)
!7833 = !DILocation(line: 388, column: 28, scope: !7821)
!7834 = !DILocation(line: 390, column: 28, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7821, file: !1074, line: 390, column: 9)
!7836 = !DILocation(line: 390, column: 9, scope: !7821)
!7837 = !DILocation(line: 393, column: 14, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7821, file: !1074, line: 393, column: 9)
!7839 = !DILocation(line: 393, column: 24, scope: !7838)
!7840 = !DILocation(line: 397, column: 21, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7821, file: !1074, line: 397, column: 9)
!7842 = !DILocation(line: 397, column: 18, scope: !7841)
!7843 = !DILocation(line: 397, column: 9, scope: !7821)
!7844 = !DILocation(line: 398, column: 9, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7841, file: !1074, line: 397, column: 57)
!7846 = !DILocation(line: 399, column: 9, scope: !7845)
!7847 = !DILocation(line: 406, column: 5, scope: !7821)
!7848 = !DILocation(line: 409, column: 17, scope: !7821)
!7849 = !DILocation(line: 409, column: 27, scope: !7821)
!7850 = !DILocation(line: 410, column: 17, scope: !7821)
!7851 = !DILocation(line: 410, column: 30, scope: !7821)
!7852 = !DILocation(line: 411, column: 79, scope: !7821)
!7853 = !DILocation(line: 411, column: 5, scope: !7821)
!7854 = !DILocation(line: 414, column: 5, scope: !7821)
!7855 = !DILocation(line: 421, column: 5, scope: !7821)
!7856 = !DILocation(line: 425, column: 26, scope: !7821)
!7857 = !DILocation(line: 429, column: 33, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7821, file: !1074, line: 429, column: 9)
!7859 = !DILocation(line: 429, column: 9, scope: !7821)
!7860 = !DILocation(line: 430, column: 9, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7858, file: !1074, line: 429, column: 56)
!7862 = !DILocation(line: 431, column: 9, scope: !7861)
!7863 = !DILocation(line: 433, column: 9, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7858, file: !1074, line: 432, column: 12)
!7865 = !DILocation(line: 434, column: 9, scope: !7864)
!7866 = !DILocation(line: 436, column: 1, scope: !7821)
!7867 = distinct !DISubprogram(name: "hal_i2c_master_receive_dma", scope: !1074, file: !1074, line: 441, type: !7822, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7868)
!7868 = !{!7869, !7870, !7871, !7872, !7873, !7874}
!7869 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7867, file: !1074, line: 441, type: !1141)
!7870 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7867, file: !1074, line: 441, type: !463)
!7871 = !DILocalVariable(name: "buffer", arg: 3, scope: !7867, file: !1074, line: 441, type: !969)
!7872 = !DILocalVariable(name: "size", arg: 4, scope: !7867, file: !1074, line: 441, type: !61)
!7873 = !DILocalVariable(name: "config_size", scope: !7867, file: !1074, line: 443, type: !7673)
!7874 = !DILocalVariable(name: "i2c_dma_config", scope: !7867, file: !1074, line: 444, type: !7758)
!7875 = !DILocation(line: 0, scope: !7867)
!7876 = !DILocation(line: 443, column: 5, scope: !7867)
!7877 = !DILocation(line: 443, column: 28, scope: !7867)
!7878 = !DILocation(line: 444, column: 5, scope: !7867)
!7879 = !DILocation(line: 444, column: 20, scope: !7867)
!7880 = !DILocation(line: 446, column: 28, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7867, file: !1074, line: 446, column: 9)
!7882 = !DILocation(line: 446, column: 9, scope: !7867)
!7883 = !DILocation(line: 449, column: 14, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7867, file: !1074, line: 449, column: 9)
!7885 = !DILocation(line: 449, column: 9, scope: !7867)
!7886 = !DILocation(line: 453, column: 10, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7867, file: !1074, line: 453, column: 9)
!7888 = !DILocation(line: 453, column: 9, scope: !7867)
!7889 = !DILocation(line: 458, column: 21, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7867, file: !1074, line: 458, column: 9)
!7891 = !DILocation(line: 458, column: 18, scope: !7890)
!7892 = !DILocation(line: 458, column: 9, scope: !7867)
!7893 = !DILocation(line: 459, column: 9, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7890, file: !1074, line: 458, column: 57)
!7895 = !DILocation(line: 460, column: 9, scope: !7894)
!7896 = !DILocation(line: 468, column: 15, scope: !7867)
!7897 = !DILocation(line: 468, column: 5, scope: !7867)
!7898 = !DILocation(line: 470, column: 31, scope: !7867)
!7899 = !DILocation(line: 471, column: 20, scope: !7867)
!7900 = !DILocation(line: 471, column: 26, scope: !7867)
!7901 = !DILocation(line: 472, column: 20, scope: !7867)
!7902 = !DILocation(line: 472, column: 32, scope: !7867)
!7903 = !DILocation(line: 473, column: 20, scope: !7867)
!7904 = !DILocation(line: 473, column: 25, scope: !7867)
!7905 = !DILocation(line: 474, column: 20, scope: !7867)
!7906 = !DILocation(line: 474, column: 5, scope: !7867)
!7907 = !DILocation(line: 478, column: 5, scope: !7867)
!7908 = !DILocation(line: 478, column: 35, scope: !7867)
!7909 = !DILocation(line: 478, column: 52, scope: !7867)
!7910 = !DILocation(line: 479, column: 35, scope: !7867)
!7911 = !DILocation(line: 479, column: 46, scope: !7867)
!7912 = !DILocation(line: 480, column: 46, scope: !7867)
!7913 = !DILocation(line: 480, column: 35, scope: !7867)
!7914 = !DILocation(line: 480, column: 44, scope: !7867)
!7915 = !DILocation(line: 481, column: 28, scope: !7867)
!7916 = !DILocation(line: 481, column: 89, scope: !7867)
!7917 = !DILocation(line: 481, column: 5, scope: !7867)
!7918 = !DILocation(line: 484, column: 17, scope: !7867)
!7919 = !DILocation(line: 484, column: 27, scope: !7867)
!7920 = !DILocation(line: 485, column: 17, scope: !7867)
!7921 = !DILocation(line: 485, column: 30, scope: !7867)
!7922 = !DILocation(line: 486, column: 75, scope: !7867)
!7923 = !DILocation(line: 486, column: 5, scope: !7867)
!7924 = !DILocation(line: 488, column: 5, scope: !7867)
!7925 = !DILocation(line: 491, column: 26, scope: !7867)
!7926 = !DILocation(line: 491, column: 58, scope: !7867)
!7927 = !DILocation(line: 491, column: 5, scope: !7867)
!7928 = !DILocation(line: 493, column: 5, scope: !7867)
!7929 = !DILocation(line: 495, column: 5, scope: !7867)
!7930 = !DILocation(line: 496, column: 1, scope: !7867)
!7931 = distinct !DISubprogram(name: "hal_i2c_master_send_to_receive_polling", scope: !1074, file: !1074, line: 501, type: !7932, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !7943)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!7391, !1141, !7934}
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 32)
!7935 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_to_receive_config_t", file: !1077, line: 511, baseType: !7936)
!7936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 505, size: 160, elements: !7937)
!7937 = !{!7938, !7939, !7940, !7941, !7942}
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !7936, file: !1077, line: 506, baseType: !463, size: 8)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !7936, file: !1077, line: 507, baseType: !6323, size: 32, offset: 32)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !7936, file: !1077, line: 508, baseType: !61, size: 32, offset: 64)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !7936, file: !1077, line: 509, baseType: !969, size: 32, offset: 96)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !7936, file: !1077, line: 510, baseType: !61, size: 32, offset: 128)
!7943 = !{!7944, !7945, !7946, !7947}
!7944 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7931, file: !1074, line: 501, type: !1141)
!7945 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !7931, file: !1074, line: 501, type: !7934)
!7946 = !DILocalVariable(name: "transaction_status", scope: !7931, file: !1074, line: 503, type: !7531)
!7947 = !DILocalVariable(name: "config_size", scope: !7931, file: !1074, line: 504, type: !7673)
!7948 = !DILocation(line: 0, scope: !7931)
!7949 = !DILocation(line: 504, column: 5, scope: !7931)
!7950 = !DILocation(line: 504, column: 28, scope: !7931)
!7951 = !DILocation(line: 506, column: 28, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7931, file: !1074, line: 506, column: 9)
!7953 = !DILocation(line: 506, column: 9, scope: !7931)
!7954 = !DILocation(line: 509, column: 45, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7931, file: !1074, line: 509, column: 9)
!7956 = !DILocation(line: 509, column: 14, scope: !7955)
!7957 = !DILocation(line: 509, column: 55, scope: !7955)
!7958 = !DILocation(line: 509, column: 94, scope: !7955)
!7959 = !DILocation(line: 509, column: 63, scope: !7955)
!7960 = !DILocation(line: 509, column: 9, scope: !7931)
!7961 = !DILocation(line: 512, column: 37, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7931, file: !1074, line: 512, column: 9)
!7963 = !DILocation(line: 512, column: 49, scope: !7962)
!7964 = !DILocation(line: 512, column: 66, scope: !7962)
!7965 = !DILocation(line: 512, column: 97, scope: !7962)
!7966 = !DILocation(line: 512, column: 112, scope: !7962)
!7967 = !DILocation(line: 512, column: 9, scope: !7931)
!7968 = !DILocation(line: 517, column: 21, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7931, file: !1074, line: 517, column: 9)
!7970 = !DILocation(line: 517, column: 18, scope: !7969)
!7971 = !DILocation(line: 517, column: 9, scope: !7931)
!7972 = !DILocation(line: 518, column: 9, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7969, file: !1074, line: 517, column: 57)
!7974 = !DILocation(line: 519, column: 9, scope: !7973)
!7975 = !DILocation(line: 527, column: 5, scope: !7931)
!7976 = !DILocation(line: 530, column: 57, scope: !7931)
!7977 = !DILocation(line: 530, column: 17, scope: !7931)
!7978 = !DILocation(line: 530, column: 27, scope: !7931)
!7979 = !DILocation(line: 531, column: 60, scope: !7931)
!7980 = !DILocation(line: 531, column: 17, scope: !7931)
!7981 = !DILocation(line: 531, column: 30, scope: !7931)
!7982 = !DILocation(line: 532, column: 87, scope: !7931)
!7983 = !DILocation(line: 532, column: 5, scope: !7931)
!7984 = !DILocation(line: 535, column: 58, scope: !7931)
!7985 = !DILocation(line: 535, column: 97, scope: !7931)
!7986 = !DILocation(line: 535, column: 5, scope: !7931)
!7987 = !DILocation(line: 538, column: 5, scope: !7931)
!7988 = !DILocation(line: 544, column: 5, scope: !7931)
!7989 = !DILocation(line: 547, column: 26, scope: !7931)
!7990 = !DILocation(line: 551, column: 33, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7931, file: !1074, line: 551, column: 9)
!7992 = !DILocation(line: 551, column: 9, scope: !7931)
!7993 = !DILocation(line: 552, column: 9, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7991, file: !1074, line: 551, column: 56)
!7995 = !DILocation(line: 553, column: 9, scope: !7994)
!7996 = !DILocation(line: 555, column: 61, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7991, file: !1074, line: 554, column: 12)
!7998 = !DILocation(line: 555, column: 105, scope: !7997)
!7999 = !DILocation(line: 555, column: 9, scope: !7997)
!8000 = !DILocation(line: 556, column: 9, scope: !7997)
!8001 = !DILocation(line: 558, column: 1, scope: !7931)
!8002 = distinct !DISubprogram(name: "hal_i2c_master_send_to_receive_dma", scope: !1074, file: !1074, line: 563, type: !7932, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !8003)
!8003 = !{!8004, !8005, !8006, !8007}
!8004 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8002, file: !1074, line: 563, type: !1141)
!8005 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !8002, file: !1074, line: 563, type: !7934)
!8006 = !DILocalVariable(name: "config_size", scope: !8002, file: !1074, line: 565, type: !7673)
!8007 = !DILocalVariable(name: "i2c_dma_config", scope: !8002, file: !1074, line: 566, type: !7758)
!8008 = !DILocation(line: 0, scope: !8002)
!8009 = !DILocation(line: 565, column: 5, scope: !8002)
!8010 = !DILocation(line: 565, column: 28, scope: !8002)
!8011 = !DILocation(line: 566, column: 5, scope: !8002)
!8012 = !DILocation(line: 566, column: 20, scope: !8002)
!8013 = !DILocation(line: 568, column: 28, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8002, file: !1074, line: 568, column: 9)
!8015 = !DILocation(line: 568, column: 9, scope: !8002)
!8016 = !DILocation(line: 571, column: 45, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8002, file: !1074, line: 571, column: 9)
!8018 = !DILocation(line: 571, column: 14, scope: !8017)
!8019 = !DILocation(line: 571, column: 55, scope: !8017)
!8020 = !DILocation(line: 571, column: 94, scope: !8017)
!8021 = !DILocation(line: 571, column: 63, scope: !8017)
!8022 = !DILocation(line: 571, column: 9, scope: !8002)
!8023 = !DILocation(line: 574, column: 10, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8002, file: !1074, line: 574, column: 9)
!8025 = !DILocation(line: 574, column: 9, scope: !8002)
!8026 = !DILocation(line: 578, column: 21, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8002, file: !1074, line: 578, column: 9)
!8028 = !DILocation(line: 578, column: 18, scope: !8027)
!8029 = !DILocation(line: 578, column: 9, scope: !8002)
!8030 = !DILocation(line: 579, column: 9, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !1074, line: 578, column: 57)
!8032 = !DILocation(line: 580, column: 9, scope: !8031)
!8033 = !DILocation(line: 589, column: 15, scope: !8002)
!8034 = !DILocation(line: 589, column: 5, scope: !8002)
!8035 = !DILocation(line: 591, column: 31, scope: !8002)
!8036 = !DILocation(line: 592, column: 56, scope: !8002)
!8037 = !DILocation(line: 592, column: 20, scope: !8002)
!8038 = !DILocation(line: 592, column: 26, scope: !8002)
!8039 = !DILocation(line: 593, column: 20, scope: !8002)
!8040 = !DILocation(line: 593, column: 32, scope: !8002)
!8041 = !DILocation(line: 594, column: 20, scope: !8002)
!8042 = !DILocation(line: 594, column: 25, scope: !8002)
!8043 = !DILocation(line: 595, column: 20, scope: !8002)
!8044 = !DILocation(line: 595, column: 5, scope: !8002)
!8045 = !DILocation(line: 598, column: 5, scope: !8002)
!8046 = !DILocation(line: 598, column: 35, scope: !8002)
!8047 = !DILocation(line: 598, column: 52, scope: !8002)
!8048 = !DILocation(line: 599, column: 35, scope: !8002)
!8049 = !DILocation(line: 599, column: 46, scope: !8002)
!8050 = !DILocation(line: 600, column: 46, scope: !8002)
!8051 = !DILocation(line: 600, column: 35, scope: !8002)
!8052 = !DILocation(line: 600, column: 44, scope: !8002)
!8053 = !DILocation(line: 601, column: 28, scope: !8002)
!8054 = !DILocation(line: 601, column: 89, scope: !8002)
!8055 = !DILocation(line: 601, column: 5, scope: !8002)
!8056 = !DILocation(line: 604, column: 15, scope: !8002)
!8057 = !DILocation(line: 604, column: 5, scope: !8002)
!8058 = !DILocation(line: 606, column: 31, scope: !8002)
!8059 = !DILocation(line: 607, column: 56, scope: !8002)
!8060 = !DILocation(line: 607, column: 26, scope: !8002)
!8061 = !DILocation(line: 608, column: 32, scope: !8002)
!8062 = !DILocation(line: 609, column: 25, scope: !8002)
!8063 = !DILocation(line: 610, column: 20, scope: !8002)
!8064 = !DILocation(line: 610, column: 5, scope: !8002)
!8065 = !DILocation(line: 613, column: 52, scope: !8002)
!8066 = !DILocation(line: 614, column: 46, scope: !8002)
!8067 = !DILocation(line: 615, column: 44, scope: !8002)
!8068 = !DILocation(line: 616, column: 5, scope: !8002)
!8069 = !DILocation(line: 616, column: 38, scope: !8002)
!8070 = !DILocation(line: 617, column: 28, scope: !8002)
!8071 = !DILocation(line: 617, column: 5, scope: !8002)
!8072 = !DILocation(line: 620, column: 57, scope: !8002)
!8073 = !DILocation(line: 620, column: 17, scope: !8002)
!8074 = !DILocation(line: 620, column: 27, scope: !8002)
!8075 = !DILocation(line: 621, column: 60, scope: !8002)
!8076 = !DILocation(line: 621, column: 17, scope: !8002)
!8077 = !DILocation(line: 621, column: 30, scope: !8002)
!8078 = !DILocation(line: 622, column: 83, scope: !8002)
!8079 = !DILocation(line: 622, column: 5, scope: !8002)
!8080 = !DILocation(line: 624, column: 5, scope: !8002)
!8081 = !DILocation(line: 627, column: 26, scope: !8002)
!8082 = !DILocation(line: 627, column: 96, scope: !8002)
!8083 = !DILocation(line: 627, column: 58, scope: !8002)
!8084 = !DILocation(line: 627, column: 5, scope: !8002)
!8085 = !DILocation(line: 629, column: 26, scope: !8002)
!8086 = !DILocation(line: 629, column: 96, scope: !8002)
!8087 = !DILocation(line: 629, column: 58, scope: !8002)
!8088 = !DILocation(line: 629, column: 5, scope: !8002)
!8089 = !DILocation(line: 631, column: 5, scope: !8002)
!8090 = !DILocation(line: 634, column: 5, scope: !8002)
!8091 = !DILocation(line: 635, column: 1, scope: !8002)
!8092 = distinct !DISubprogram(name: "hal_i2c_master_send_dma_ex", scope: !1074, file: !1074, line: 642, type: !8093, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !8103)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!7391, !1141, !8095}
!8095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8096, size: 32)
!8096 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_config_t", file: !1077, line: 524, baseType: !8097)
!8097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 519, size: 128, elements: !8098)
!8098 = !{!8099, !8100, !8101, !8102}
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !8097, file: !1077, line: 520, baseType: !463, size: 8)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !8097, file: !1077, line: 521, baseType: !6323, size: 32, offset: 32)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "send_packet_length", scope: !8097, file: !1077, line: 522, baseType: !61, size: 32, offset: 64)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "send_bytes_in_one_packet", scope: !8097, file: !1077, line: 523, baseType: !61, size: 32, offset: 96)
!8103 = !{!8104, !8105, !8106, !8107}
!8104 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8092, file: !1074, line: 642, type: !1141)
!8105 = !DILocalVariable(name: "i2c_send_config", arg: 2, scope: !8092, file: !1074, line: 642, type: !8095)
!8106 = !DILocalVariable(name: "config_size", scope: !8092, file: !1074, line: 644, type: !7673)
!8107 = !DILocalVariable(name: "i2c_dma_config", scope: !8092, file: !1074, line: 645, type: !7758)
!8108 = !DILocation(line: 0, scope: !8092)
!8109 = !DILocation(line: 644, column: 5, scope: !8092)
!8110 = !DILocation(line: 644, column: 28, scope: !8092)
!8111 = !DILocation(line: 645, column: 5, scope: !8092)
!8112 = !DILocation(line: 645, column: 20, scope: !8092)
!8113 = !DILocation(line: 647, column: 28, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8092, file: !1074, line: 647, column: 9)
!8115 = !DILocation(line: 647, column: 9, scope: !8092)
!8116 = !DILocation(line: 650, column: 34, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8092, file: !1074, line: 650, column: 9)
!8118 = !DILocation(line: 650, column: 14, scope: !8117)
!8119 = !DILocation(line: 650, column: 9, scope: !8092)
!8120 = !DILocation(line: 654, column: 10, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8092, file: !1074, line: 654, column: 9)
!8122 = !DILocation(line: 654, column: 9, scope: !8092)
!8123 = !DILocation(line: 658, column: 21, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8092, file: !1074, line: 658, column: 9)
!8125 = !DILocation(line: 658, column: 18, scope: !8124)
!8126 = !DILocation(line: 658, column: 9, scope: !8092)
!8127 = !DILocation(line: 659, column: 9, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8124, file: !1074, line: 658, column: 57)
!8129 = !DILocation(line: 660, column: 9, scope: !8128)
!8130 = !DILocation(line: 668, column: 15, scope: !8092)
!8131 = !DILocation(line: 668, column: 5, scope: !8092)
!8132 = !DILocation(line: 670, column: 31, scope: !8092)
!8133 = !DILocation(line: 671, column: 46, scope: !8092)
!8134 = !DILocation(line: 671, column: 86, scope: !8092)
!8135 = !DILocation(line: 671, column: 66, scope: !8092)
!8136 = !DILocation(line: 671, column: 20, scope: !8092)
!8137 = !DILocation(line: 671, column: 26, scope: !8092)
!8138 = !DILocation(line: 672, column: 20, scope: !8092)
!8139 = !DILocation(line: 672, column: 32, scope: !8092)
!8140 = !DILocation(line: 673, column: 20, scope: !8092)
!8141 = !DILocation(line: 673, column: 25, scope: !8092)
!8142 = !DILocation(line: 674, column: 20, scope: !8092)
!8143 = !DILocation(line: 674, column: 5, scope: !8092)
!8144 = !DILocation(line: 677, column: 5, scope: !8092)
!8145 = !DILocation(line: 677, column: 35, scope: !8092)
!8146 = !DILocation(line: 677, column: 52, scope: !8092)
!8147 = !DILocation(line: 678, column: 35, scope: !8092)
!8148 = !DILocation(line: 678, column: 46, scope: !8092)
!8149 = !DILocation(line: 679, column: 46, scope: !8092)
!8150 = !DILocation(line: 679, column: 35, scope: !8092)
!8151 = !DILocation(line: 679, column: 44, scope: !8092)
!8152 = !DILocation(line: 680, column: 28, scope: !8092)
!8153 = !DILocation(line: 680, column: 89, scope: !8092)
!8154 = !DILocation(line: 680, column: 5, scope: !8092)
!8155 = !DILocation(line: 684, column: 52, scope: !8092)
!8156 = !DILocation(line: 684, column: 17, scope: !8092)
!8157 = !DILocation(line: 684, column: 33, scope: !8092)
!8158 = !DILocation(line: 685, column: 55, scope: !8092)
!8159 = !DILocation(line: 685, column: 17, scope: !8092)
!8160 = !DILocation(line: 685, column: 36, scope: !8092)
!8161 = !DILocation(line: 686, column: 79, scope: !8092)
!8162 = !DILocation(line: 686, column: 5, scope: !8092)
!8163 = !DILocation(line: 688, column: 5, scope: !8092)
!8164 = !DILocation(line: 691, column: 26, scope: !8092)
!8165 = !DILocation(line: 691, column: 85, scope: !8092)
!8166 = !DILocation(line: 691, column: 58, scope: !8092)
!8167 = !DILocation(line: 691, column: 5, scope: !8092)
!8168 = !DILocation(line: 693, column: 5, scope: !8092)
!8169 = !DILocation(line: 698, column: 5, scope: !8092)
!8170 = !DILocation(line: 699, column: 1, scope: !8092)
!8171 = distinct !DISubprogram(name: "hal_i2c_master_receive_dma_ex", scope: !1074, file: !1074, line: 700, type: !8172, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !8182)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!7391, !1141, !8174}
!8174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8175, size: 32)
!8175 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_receive_config_t", file: !1077, line: 534, baseType: !8176)
!8176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 529, size: 128, elements: !8177)
!8177 = !{!8178, !8179, !8180, !8181}
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !8176, file: !1077, line: 530, baseType: !463, size: 8)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !8176, file: !1077, line: 531, baseType: !969, size: 32, offset: 32)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet_length", scope: !8176, file: !1077, line: 532, baseType: !61, size: 32, offset: 64)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "receive_bytes_in_one_packet", scope: !8176, file: !1077, line: 533, baseType: !61, size: 32, offset: 96)
!8182 = !{!8183, !8184, !8185, !8186}
!8183 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8171, file: !1074, line: 700, type: !1141)
!8184 = !DILocalVariable(name: "i2c_receive_config", arg: 2, scope: !8171, file: !1074, line: 700, type: !8174)
!8185 = !DILocalVariable(name: "config_size", scope: !8171, file: !1074, line: 702, type: !7673)
!8186 = !DILocalVariable(name: "i2c_dma_config", scope: !8171, file: !1074, line: 703, type: !7758)
!8187 = !DILocation(line: 0, scope: !8171)
!8188 = !DILocation(line: 702, column: 5, scope: !8171)
!8189 = !DILocation(line: 702, column: 28, scope: !8171)
!8190 = !DILocation(line: 703, column: 5, scope: !8171)
!8191 = !DILocation(line: 703, column: 20, scope: !8171)
!8192 = !DILocation(line: 705, column: 28, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8171, file: !1074, line: 705, column: 9)
!8194 = !DILocation(line: 705, column: 9, scope: !8171)
!8195 = !DILocation(line: 708, column: 37, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8171, file: !1074, line: 708, column: 9)
!8197 = !DILocation(line: 708, column: 14, scope: !8196)
!8198 = !DILocation(line: 708, column: 9, scope: !8171)
!8199 = !DILocation(line: 712, column: 10, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8171, file: !1074, line: 712, column: 9)
!8201 = !DILocation(line: 712, column: 9, scope: !8171)
!8202 = !DILocation(line: 717, column: 21, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8171, file: !1074, line: 717, column: 9)
!8204 = !DILocation(line: 717, column: 18, scope: !8203)
!8205 = !DILocation(line: 717, column: 9, scope: !8171)
!8206 = !DILocation(line: 718, column: 9, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !1074, line: 717, column: 57)
!8208 = !DILocation(line: 719, column: 9, scope: !8207)
!8209 = !DILocation(line: 727, column: 15, scope: !8171)
!8210 = !DILocation(line: 727, column: 5, scope: !8171)
!8211 = !DILocation(line: 729, column: 31, scope: !8171)
!8212 = !DILocation(line: 730, column: 49, scope: !8171)
!8213 = !DILocation(line: 730, column: 95, scope: !8171)
!8214 = !DILocation(line: 730, column: 72, scope: !8171)
!8215 = !DILocation(line: 730, column: 20, scope: !8171)
!8216 = !DILocation(line: 730, column: 26, scope: !8171)
!8217 = !DILocation(line: 731, column: 20, scope: !8171)
!8218 = !DILocation(line: 731, column: 32, scope: !8171)
!8219 = !DILocation(line: 732, column: 20, scope: !8171)
!8220 = !DILocation(line: 732, column: 25, scope: !8171)
!8221 = !DILocation(line: 733, column: 20, scope: !8171)
!8222 = !DILocation(line: 733, column: 5, scope: !8171)
!8223 = !DILocation(line: 737, column: 5, scope: !8171)
!8224 = !DILocation(line: 737, column: 35, scope: !8171)
!8225 = !DILocation(line: 737, column: 52, scope: !8171)
!8226 = !DILocation(line: 738, column: 35, scope: !8171)
!8227 = !DILocation(line: 738, column: 46, scope: !8171)
!8228 = !DILocation(line: 739, column: 46, scope: !8171)
!8229 = !DILocation(line: 739, column: 35, scope: !8171)
!8230 = !DILocation(line: 739, column: 44, scope: !8171)
!8231 = !DILocation(line: 740, column: 28, scope: !8171)
!8232 = !DILocation(line: 740, column: 89, scope: !8171)
!8233 = !DILocation(line: 740, column: 5, scope: !8171)
!8234 = !DILocation(line: 743, column: 55, scope: !8171)
!8235 = !DILocation(line: 743, column: 17, scope: !8171)
!8236 = !DILocation(line: 743, column: 33, scope: !8171)
!8237 = !DILocation(line: 744, column: 58, scope: !8171)
!8238 = !DILocation(line: 744, column: 17, scope: !8171)
!8239 = !DILocation(line: 744, column: 36, scope: !8171)
!8240 = !DILocation(line: 745, column: 82, scope: !8171)
!8241 = !DILocation(line: 745, column: 5, scope: !8171)
!8242 = !DILocation(line: 747, column: 5, scope: !8171)
!8243 = !DILocation(line: 750, column: 26, scope: !8171)
!8244 = !DILocation(line: 750, column: 88, scope: !8171)
!8245 = !DILocation(line: 750, column: 58, scope: !8171)
!8246 = !DILocation(line: 750, column: 5, scope: !8171)
!8247 = !DILocation(line: 752, column: 5, scope: !8171)
!8248 = !DILocation(line: 754, column: 5, scope: !8171)
!8249 = !DILocation(line: 755, column: 1, scope: !8171)
!8250 = distinct !DISubprogram(name: "hal_i2c_master_send_to_receive_dma_ex", scope: !1074, file: !1074, line: 757, type: !8251, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !8264)
!8251 = !DISubroutineType(types: !8252)
!8252 = !{!7391, !1141, !8253}
!8253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8254, size: 32)
!8254 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_to_receive_config_ex_t", file: !1077, line: 547, baseType: !8255)
!8255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 539, size: 224, elements: !8256)
!8256 = !{!8257, !8258, !8259, !8260, !8261, !8262, !8263}
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !8255, file: !1077, line: 540, baseType: !463, size: 8)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !8255, file: !1077, line: 541, baseType: !6323, size: 32, offset: 32)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !8255, file: !1077, line: 542, baseType: !969, size: 32, offset: 64)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "send_packet_length", scope: !8255, file: !1077, line: 543, baseType: !61, size: 32, offset: 96)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "send_bytes_in_one_packet", scope: !8255, file: !1077, line: 544, baseType: !61, size: 32, offset: 128)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet_length", scope: !8255, file: !1077, line: 545, baseType: !61, size: 32, offset: 160)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "receive_bytes_in_one_packet", scope: !8255, file: !1077, line: 546, baseType: !61, size: 32, offset: 192)
!8264 = !{!8265, !8266, !8267, !8268}
!8265 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8250, file: !1074, line: 757, type: !1141)
!8266 = !DILocalVariable(name: "i2c_send_to_receive_config_ex", arg: 2, scope: !8250, file: !1074, line: 757, type: !8253)
!8267 = !DILocalVariable(name: "config_size", scope: !8250, file: !1074, line: 759, type: !7673)
!8268 = !DILocalVariable(name: "i2c_dma_config", scope: !8250, file: !1074, line: 760, type: !7758)
!8269 = !DILocation(line: 0, scope: !8250)
!8270 = !DILocation(line: 759, column: 5, scope: !8250)
!8271 = !DILocation(line: 759, column: 28, scope: !8250)
!8272 = !DILocation(line: 760, column: 5, scope: !8250)
!8273 = !DILocation(line: 760, column: 20, scope: !8250)
!8274 = !DILocation(line: 762, column: 28, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8250, file: !1074, line: 762, column: 9)
!8276 = !DILocation(line: 762, column: 9, scope: !8250)
!8277 = !DILocation(line: 765, column: 48, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8250, file: !1074, line: 765, column: 9)
!8279 = !DILocation(line: 765, column: 14, scope: !8278)
!8280 = !DILocation(line: 765, column: 58, scope: !8278)
!8281 = !DILocation(line: 765, column: 100, scope: !8278)
!8282 = !DILocation(line: 765, column: 66, scope: !8278)
!8283 = !DILocation(line: 765, column: 9, scope: !8250)
!8284 = !DILocation(line: 768, column: 10, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8250, file: !1074, line: 768, column: 9)
!8286 = !DILocation(line: 768, column: 9, scope: !8250)
!8287 = !DILocation(line: 772, column: 21, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8250, file: !1074, line: 772, column: 9)
!8289 = !DILocation(line: 772, column: 18, scope: !8288)
!8290 = !DILocation(line: 772, column: 9, scope: !8250)
!8291 = !DILocation(line: 773, column: 9, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8288, file: !1074, line: 772, column: 57)
!8293 = !DILocation(line: 774, column: 9, scope: !8292)
!8294 = !DILocation(line: 783, column: 15, scope: !8250)
!8295 = !DILocation(line: 783, column: 5, scope: !8250)
!8296 = !DILocation(line: 785, column: 31, scope: !8250)
!8297 = !DILocation(line: 786, column: 59, scope: !8250)
!8298 = !DILocation(line: 786, column: 20, scope: !8250)
!8299 = !DILocation(line: 786, column: 26, scope: !8250)
!8300 = !DILocation(line: 787, column: 20, scope: !8250)
!8301 = !DILocation(line: 787, column: 32, scope: !8250)
!8302 = !DILocation(line: 788, column: 20, scope: !8250)
!8303 = !DILocation(line: 788, column: 25, scope: !8250)
!8304 = !DILocation(line: 789, column: 20, scope: !8250)
!8305 = !DILocation(line: 789, column: 5, scope: !8250)
!8306 = !DILocation(line: 792, column: 5, scope: !8250)
!8307 = !DILocation(line: 792, column: 35, scope: !8250)
!8308 = !DILocation(line: 792, column: 52, scope: !8250)
!8309 = !DILocation(line: 793, column: 35, scope: !8250)
!8310 = !DILocation(line: 793, column: 46, scope: !8250)
!8311 = !DILocation(line: 794, column: 46, scope: !8250)
!8312 = !DILocation(line: 794, column: 35, scope: !8250)
!8313 = !DILocation(line: 794, column: 44, scope: !8250)
!8314 = !DILocation(line: 795, column: 28, scope: !8250)
!8315 = !DILocation(line: 795, column: 89, scope: !8250)
!8316 = !DILocation(line: 795, column: 5, scope: !8250)
!8317 = !DILocation(line: 798, column: 15, scope: !8250)
!8318 = !DILocation(line: 798, column: 5, scope: !8250)
!8319 = !DILocation(line: 800, column: 31, scope: !8250)
!8320 = !DILocation(line: 801, column: 60, scope: !8250)
!8321 = !DILocation(line: 801, column: 117, scope: !8250)
!8322 = !DILocation(line: 801, column: 83, scope: !8250)
!8323 = !DILocation(line: 801, column: 26, scope: !8250)
!8324 = !DILocation(line: 802, column: 32, scope: !8250)
!8325 = !DILocation(line: 803, column: 25, scope: !8250)
!8326 = !DILocation(line: 804, column: 20, scope: !8250)
!8327 = !DILocation(line: 804, column: 5, scope: !8250)
!8328 = !DILocation(line: 807, column: 52, scope: !8250)
!8329 = !DILocation(line: 808, column: 46, scope: !8250)
!8330 = !DILocation(line: 809, column: 44, scope: !8250)
!8331 = !DILocation(line: 810, column: 5, scope: !8250)
!8332 = !DILocation(line: 810, column: 38, scope: !8250)
!8333 = !DILocation(line: 811, column: 28, scope: !8250)
!8334 = !DILocation(line: 811, column: 5, scope: !8250)
!8335 = !DILocation(line: 814, column: 66, scope: !8250)
!8336 = !DILocation(line: 814, column: 17, scope: !8250)
!8337 = !DILocation(line: 814, column: 33, scope: !8250)
!8338 = !DILocation(line: 815, column: 70, scope: !8250)
!8339 = !DILocation(line: 815, column: 17, scope: !8250)
!8340 = !DILocation(line: 815, column: 37, scope: !8250)
!8341 = !DILocation(line: 816, column: 69, scope: !8250)
!8342 = !DILocation(line: 816, column: 91, scope: !8250)
!8343 = !DILocation(line: 816, column: 17, scope: !8250)
!8344 = !DILocation(line: 816, column: 36, scope: !8250)
!8345 = !DILocation(line: 817, column: 90, scope: !8250)
!8346 = !DILocation(line: 817, column: 5, scope: !8250)
!8347 = !DILocation(line: 819, column: 5, scope: !8250)
!8348 = !DILocation(line: 822, column: 26, scope: !8250)
!8349 = !DILocation(line: 822, column: 99, scope: !8250)
!8350 = !DILocation(line: 822, column: 58, scope: !8250)
!8351 = !DILocation(line: 822, column: 5, scope: !8250)
!8352 = !DILocation(line: 824, column: 26, scope: !8250)
!8353 = !DILocation(line: 824, column: 99, scope: !8250)
!8354 = !DILocation(line: 824, column: 58, scope: !8250)
!8355 = !DILocation(line: 824, column: 5, scope: !8250)
!8356 = !DILocation(line: 826, column: 5, scope: !8250)
!8357 = !DILocation(line: 829, column: 5, scope: !8250)
!8358 = !DILocation(line: 830, column: 1, scope: !8250)
!8359 = distinct !DISubprogram(name: "hal_i2c_master_get_running_status", scope: !1074, file: !1074, line: 834, type: !8360, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1073, retainedNodes: !8367)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!7391, !1141, !8362}
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 32)
!8363 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_running_status_t", file: !1077, line: 501, baseType: !8364)
!8364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 499, size: 32, elements: !8365)
!8365 = !{!8366}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !8364, file: !1077, line: 500, baseType: !1139, size: 32)
!8367 = !{!8368, !8369}
!8368 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8359, file: !1074, line: 834, type: !1141)
!8369 = !DILocalVariable(name: "running_status", arg: 2, scope: !8359, file: !1074, line: 834, type: !8362)
!8370 = !DILocation(line: 0, scope: !8359)
!8371 = !DILocation(line: 837, column: 28, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8359, file: !1074, line: 837, column: 9)
!8373 = !DILocation(line: 837, column: 9, scope: !8359)
!8374 = !DILocation(line: 840, column: 62, scope: !8359)
!8375 = !DILocation(line: 840, column: 21, scope: !8359)
!8376 = !DILocation(line: 840, column: 36, scope: !8359)
!8377 = !DILocation(line: 841, column: 5, scope: !8359)
!8378 = !DILocation(line: 842, column: 1, scope: !8359)
!8379 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !1176, file: !1176, line: 74, type: !8380, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1175, retainedNodes: !8382)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !61, !61}
!8382 = !{!8383, !8384, !8385, !8386, !8387, !8388, !8389, !8390}
!8383 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8379, file: !1176, line: 74, type: !61)
!8384 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !8379, file: !1176, line: 74, type: !61)
!8385 = !DILocalVariable(name: "frequency", scope: !8379, file: !1176, line: 76, type: !61)
!8386 = !DILocalVariable(name: "step_cnt_div", scope: !8379, file: !1176, line: 77, type: !61)
!8387 = !DILocalVariable(name: "sample_cnt_div", scope: !8379, file: !1176, line: 78, type: !61)
!8388 = !DILocalVariable(name: "orignal_register_value", scope: !8379, file: !1176, line: 79, type: !61)
!8389 = !DILocalVariable(name: "register_value", scope: !8379, file: !1176, line: 79, type: !61)
!8390 = !DILocalVariable(name: "temp", scope: !8379, file: !1176, line: 80, type: !61)
!8391 = !DILocation(line: 0, scope: !8379)
!8392 = !DILocation(line: 83, column: 5, scope: !8379)
!8393 = !DILocation(line: 83, column: 36, scope: !8379)
!8394 = !DILocation(line: 83, column: 46, scope: !8379)
!8395 = !DILocation(line: 84, column: 5, scope: !8379)
!8396 = !DILocation(line: 87, column: 54, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8379, file: !1176, line: 84, column: 33)
!8398 = !DILocation(line: 89, column: 13, scope: !8397)
!8399 = !DILocation(line: 95, column: 13, scope: !8397)
!8400 = !DILocation(line: 98, column: 13, scope: !8397)
!8401 = !DILocation(line: 101, column: 13, scope: !8397)
!8402 = !DILocation(line: 104, column: 13, scope: !8397)
!8403 = !DILocation(line: 109, column: 13, scope: !8397)
!8404 = !DILocation(line: 117, column: 5, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8379, file: !1176, line: 117, column: 5)
!8406 = !DILocation(line: 119, column: 31, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !1176, line: 117, column: 69)
!8408 = distinct !DILexicalBlock(scope: !8405, file: !1176, line: 117, column: 5)
!8409 = !DILocation(line: 120, column: 60, scope: !8407)
!8410 = !DILocation(line: 120, column: 67, scope: !8407)
!8411 = !DILocation(line: 120, column: 72, scope: !8407)
!8412 = !DILocation(line: 122, column: 26, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8407, file: !1176, line: 122, column: 13)
!8414 = !DILocation(line: 122, column: 13, scope: !8407)
!8415 = !DILocation(line: 117, column: 65, scope: !8408)
!8416 = !DILocation(line: 117, column: 45, scope: !8408)
!8417 = distinct !{!8417, !8404, !8418}
!8418 = !DILocation(line: 125, column: 5, scope: !8405)
!8419 = !DILocation(line: 0, scope: !8405)
!8420 = !DILocation(line: 128, column: 17, scope: !8379)
!8421 = !DILocation(line: 131, column: 62, scope: !8379)
!8422 = !DILocation(line: 131, column: 70, scope: !8379)
!8423 = !DILocation(line: 132, column: 94, scope: !8379)
!8424 = !DILocation(line: 132, column: 76, scope: !8379)
!8425 = !DILocation(line: 132, column: 157, scope: !8379)
!8426 = !DILocation(line: 132, column: 45, scope: !8379)
!8427 = !DILocation(line: 133, column: 45, scope: !8379)
!8428 = !DILocation(line: 133, column: 43, scope: !8379)
!8429 = !DILocation(line: 134, column: 1, scope: !8379)
!8430 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !1176, file: !1176, line: 143, type: !8431, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1175, retainedNodes: !8442)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{null, !61, !1147, !463, !8433}
!8433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8434, size: 32)
!8434 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !1106, line: 176, baseType: !8435)
!8435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1106, line: 170, size: 160, elements: !8436)
!8436 = !{!8437, !8438, !8439, !8440, !8441}
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !8435, file: !1106, line: 171, baseType: !61, size: 32)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !8435, file: !1106, line: 172, baseType: !61, size: 32, offset: 32)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !8435, file: !1106, line: 173, baseType: !61, size: 32, offset: 64)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !8435, file: !1106, line: 174, baseType: !61, size: 32, offset: 96)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !8435, file: !1106, line: 175, baseType: !61, size: 32, offset: 128)
!8442 = !{!8443, !8444, !8445, !8446}
!8443 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8430, file: !1176, line: 143, type: !61)
!8444 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !8430, file: !1176, line: 143, type: !1147)
!8445 = !DILocalVariable(name: "slave_address", arg: 3, scope: !8430, file: !1176, line: 143, type: !463)
!8446 = !DILocalVariable(name: "config_size", arg: 4, scope: !8430, file: !1176, line: 143, type: !8433)
!8447 = !DILocation(line: 0, scope: !8430)
!8448 = !DILocation(line: 146, column: 49, scope: !8430)
!8449 = !DILocation(line: 146, column: 5, scope: !8430)
!8450 = !DILocation(line: 146, column: 36, scope: !8430)
!8451 = !DILocation(line: 146, column: 47, scope: !8430)
!8452 = !DILocation(line: 148, column: 5, scope: !8430)
!8453 = !DILocation(line: 150, column: 5, scope: !8430)
!8454 = !DILocation(line: 153, column: 5, scope: !8430)
!8455 = !DILocation(line: 0, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !1176, line: 156, column: 17)
!8457 = distinct !DILexicalBlock(scope: !8430, file: !1176, line: 153, column: 31)
!8458 = !DILocation(line: 164, column: 72, scope: !8457)
!8459 = !DILocation(line: 164, column: 59, scope: !8457)
!8460 = !DILocation(line: 164, column: 44, scope: !8457)
!8461 = !DILocation(line: 164, column: 57, scope: !8457)
!8462 = !DILocation(line: 165, column: 44, scope: !8457)
!8463 = !DILocation(line: 165, column: 56, scope: !8457)
!8464 = !DILocation(line: 167, column: 13, scope: !8457)
!8465 = !DILocation(line: 0, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8457, file: !1176, line: 170, column: 17)
!8467 = !DILocation(line: 177, column: 72, scope: !8457)
!8468 = !DILocation(line: 177, column: 59, scope: !8457)
!8469 = !DILocation(line: 177, column: 44, scope: !8457)
!8470 = !DILocation(line: 177, column: 57, scope: !8457)
!8471 = !DILocation(line: 178, column: 44, scope: !8457)
!8472 = !DILocation(line: 178, column: 56, scope: !8457)
!8473 = !DILocation(line: 180, column: 13, scope: !8457)
!8474 = !DILocation(line: 0, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8457, file: !1176, line: 183, column: 17)
!8476 = !DILocation(line: 190, column: 72, scope: !8457)
!8477 = !DILocation(line: 190, column: 59, scope: !8457)
!8478 = !DILocation(line: 190, column: 44, scope: !8457)
!8479 = !DILocation(line: 190, column: 57, scope: !8457)
!8480 = !DILocation(line: 191, column: 44, scope: !8457)
!8481 = !DILocation(line: 191, column: 56, scope: !8457)
!8482 = !DILocation(line: 193, column: 13, scope: !8457)
!8483 = !DILocation(line: 0, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8457, file: !1176, line: 196, column: 17)
!8485 = !DILocation(line: 203, column: 44, scope: !8457)
!8486 = !DILocation(line: 203, column: 57, scope: !8457)
!8487 = !DILocation(line: 204, column: 71, scope: !8457)
!8488 = !DILocation(line: 204, column: 58, scope: !8457)
!8489 = !DILocation(line: 204, column: 44, scope: !8457)
!8490 = !DILocation(line: 204, column: 56, scope: !8457)
!8491 = !DILocation(line: 206, column: 13, scope: !8457)
!8492 = !DILocation(line: 0, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8457, file: !1176, line: 209, column: 17)
!8494 = !DILocation(line: 216, column: 72, scope: !8457)
!8495 = !DILocation(line: 216, column: 59, scope: !8457)
!8496 = !DILocation(line: 216, column: 44, scope: !8457)
!8497 = !DILocation(line: 216, column: 57, scope: !8457)
!8498 = !DILocation(line: 217, column: 44, scope: !8457)
!8499 = !DILocation(line: 217, column: 56, scope: !8457)
!8500 = !DILocation(line: 218, column: 76, scope: !8457)
!8501 = !DILocation(line: 218, column: 63, scope: !8457)
!8502 = !DILocation(line: 219, column: 13, scope: !8457)
!8503 = !DILocation(line: 0, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8457, file: !1176, line: 222, column: 17)
!8505 = !DILocation(line: 229, column: 72, scope: !8457)
!8506 = !DILocation(line: 229, column: 59, scope: !8457)
!8507 = !DILocation(line: 229, column: 44, scope: !8457)
!8508 = !DILocation(line: 229, column: 57, scope: !8457)
!8509 = !DILocation(line: 230, column: 75, scope: !8457)
!8510 = !DILocation(line: 230, column: 58, scope: !8457)
!8511 = !DILocation(line: 230, column: 44, scope: !8457)
!8512 = !DILocation(line: 230, column: 56, scope: !8457)
!8513 = !DILocation(line: 232, column: 13, scope: !8457)
!8514 = !DILocation(line: 235, column: 44, scope: !8457)
!8515 = !DILocation(line: 235, column: 54, scope: !8457)
!8516 = !DILocation(line: 236, column: 44, scope: !8457)
!8517 = !DILocation(line: 236, column: 52, scope: !8457)
!8518 = !DILocation(line: 237, column: 72, scope: !8457)
!8519 = !DILocation(line: 237, column: 59, scope: !8457)
!8520 = !DILocation(line: 237, column: 44, scope: !8457)
!8521 = !DILocation(line: 237, column: 57, scope: !8457)
!8522 = !DILocation(line: 238, column: 71, scope: !8457)
!8523 = !DILocation(line: 238, column: 58, scope: !8457)
!8524 = !DILocation(line: 238, column: 44, scope: !8457)
!8525 = !DILocation(line: 238, column: 56, scope: !8457)
!8526 = !DILocation(line: 240, column: 13, scope: !8457)
!8527 = !DILocation(line: 242, column: 44, scope: !8457)
!8528 = !DILocation(line: 242, column: 54, scope: !8457)
!8529 = !DILocation(line: 243, column: 44, scope: !8457)
!8530 = !DILocation(line: 243, column: 52, scope: !8457)
!8531 = !DILocation(line: 244, column: 72, scope: !8457)
!8532 = !DILocation(line: 244, column: 59, scope: !8457)
!8533 = !DILocation(line: 244, column: 44, scope: !8457)
!8534 = !DILocation(line: 244, column: 57, scope: !8457)
!8535 = !DILocation(line: 245, column: 71, scope: !8457)
!8536 = !DILocation(line: 245, column: 58, scope: !8457)
!8537 = !DILocation(line: 245, column: 44, scope: !8457)
!8538 = !DILocation(line: 245, column: 56, scope: !8457)
!8539 = !DILocation(line: 248, column: 13, scope: !8457)
!8540 = !DILocation(line: 250, column: 44, scope: !8457)
!8541 = !DILocation(line: 250, column: 54, scope: !8457)
!8542 = !DILocation(line: 251, column: 44, scope: !8457)
!8543 = !DILocation(line: 251, column: 52, scope: !8457)
!8544 = !DILocation(line: 252, column: 72, scope: !8457)
!8545 = !DILocation(line: 252, column: 59, scope: !8457)
!8546 = !DILocation(line: 252, column: 44, scope: !8457)
!8547 = !DILocation(line: 252, column: 57, scope: !8457)
!8548 = !DILocation(line: 253, column: 71, scope: !8457)
!8549 = !DILocation(line: 253, column: 58, scope: !8457)
!8550 = !DILocation(line: 253, column: 44, scope: !8457)
!8551 = !DILocation(line: 253, column: 56, scope: !8457)
!8552 = !DILocation(line: 254, column: 76, scope: !8457)
!8553 = !DILocation(line: 254, column: 63, scope: !8457)
!8554 = !DILocation(line: 255, column: 13, scope: !8457)
!8555 = !DILocation(line: 0, scope: !8457)
!8556 = !DILocation(line: 261, column: 1, scope: !8430)
!8557 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !1176, file: !1176, line: 266, type: !8558, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1175, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !61, !6323, !61}
!8560 = !{!8561, !8562, !8563, !8564}
!8561 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8557, file: !1176, line: 266, type: !61)
!8562 = !DILocalVariable(name: "data", arg: 2, scope: !8557, file: !1176, line: 266, type: !6323)
!8563 = !DILocalVariable(name: "size", arg: 3, scope: !8557, file: !1176, line: 266, type: !61)
!8564 = !DILocalVariable(name: "i", scope: !8557, file: !1176, line: 268, type: !61)
!8565 = !DILocation(line: 0, scope: !8557)
!8566 = !DILocation(line: 269, column: 19, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !1176, line: 269, column: 5)
!8568 = distinct !DILexicalBlock(scope: !8557, file: !1176, line: 269, column: 5)
!8569 = !DILocation(line: 269, column: 5, scope: !8568)
!8570 = !DILocation(line: 270, column: 59, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8567, file: !1176, line: 269, column: 32)
!8572 = !DILocation(line: 270, column: 52, scope: !8571)
!8573 = !DILocation(line: 270, column: 50, scope: !8571)
!8574 = !DILocation(line: 269, column: 28, scope: !8567)
!8575 = distinct !{!8575, !8569, !8576}
!8576 = !DILocation(line: 271, column: 5, scope: !8568)
!8577 = !DILocation(line: 272, column: 1, scope: !8557)
!8578 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !1176, file: !1176, line: 274, type: !8579, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1175, retainedNodes: !8581)
!8579 = !DISubroutineType(types: !8580)
!8580 = !{null, !61, !969, !61}
!8581 = !{!8582, !8583, !8584, !8585}
!8582 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8578, file: !1176, line: 274, type: !61)
!8583 = !DILocalVariable(name: "buffer", arg: 2, scope: !8578, file: !1176, line: 274, type: !969)
!8584 = !DILocalVariable(name: "size", arg: 3, scope: !8578, file: !1176, line: 274, type: !61)
!8585 = !DILocalVariable(name: "i", scope: !8578, file: !1176, line: 276, type: !61)
!8586 = !DILocation(line: 0, scope: !8578)
!8587 = !DILocation(line: 277, column: 19, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !1176, line: 277, column: 5)
!8589 = distinct !DILexicalBlock(scope: !8578, file: !1176, line: 277, column: 5)
!8590 = !DILocation(line: 277, column: 5, scope: !8589)
!8591 = !DILocation(line: 278, column: 56, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8588, file: !1176, line: 277, column: 32)
!8593 = !DILocation(line: 278, column: 25, scope: !8592)
!8594 = !DILocation(line: 278, column: 18, scope: !8592)
!8595 = !DILocation(line: 278, column: 23, scope: !8592)
!8596 = !DILocation(line: 277, column: 28, scope: !8588)
!8597 = distinct !{!8597, !8590, !8598}
!8598 = !DILocation(line: 279, column: 5, scope: !8589)
!8599 = !DILocation(line: 280, column: 1, scope: !8578)
!8600 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !1176, file: !1176, line: 282, type: !8601, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1175, retainedNodes: !8603)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{!7531, !61}
!8603 = !{!8604, !8605, !8606}
!8604 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8600, file: !1176, line: 282, type: !61)
!8605 = !DILocalVariable(name: "register_value", scope: !8600, file: !1176, line: 284, type: !1208)
!8606 = !DILocalVariable(name: "return_status", scope: !8600, file: !1176, line: 285, type: !7531)
!8607 = !DILocation(line: 0, scope: !8600)
!8608 = !DILocation(line: 287, column: 22, scope: !8600)
!8609 = !DILocation(line: 287, column: 53, scope: !8600)
!8610 = !DILocation(line: 289, column: 15, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8600, file: !1176, line: 289, column: 9)
!8612 = !DILocation(line: 289, column: 30, scope: !8611)
!8613 = !DILocation(line: 289, column: 11, scope: !8611)
!8614 = !DILocation(line: 289, column: 9, scope: !8600)
!8615 = !DILocation(line: 291, column: 37, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8611, file: !1176, line: 291, column: 16)
!8617 = !DILocation(line: 291, column: 18, scope: !8616)
!8618 = !DILocation(line: 291, column: 16, scope: !8611)
!8619 = !DILocation(line: 293, column: 37, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !1176, line: 293, column: 16)
!8621 = !DILocation(line: 293, column: 18, scope: !8620)
!8622 = !DILocation(line: 293, column: 16, scope: !8616)
!8623 = !DILocation(line: 295, column: 20, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8620, file: !1176, line: 295, column: 16)
!8625 = !DILocation(line: 295, column: 16, scope: !8620)
!8626 = !DILocation(line: 318, column: 5, scope: !8600)
!8627 = !DILocation(line: 319, column: 5, scope: !8600)
!8628 = !DILocation(line: 131, column: 9, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !1264, file: !1265, line: 131, column: 9)
!8630 = !DILocation(line: 131, column: 9, scope: !1264)
!8631 = !DILocation(line: 0, scope: !1264)
!8632 = !DILocation(line: 134, column: 49, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !1265, line: 133, column: 46)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !1265, line: 133, column: 9)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !1265, line: 133, column: 9)
!8636 = distinct !DILexicalBlock(scope: !8629, file: !1265, line: 131, column: 28)
!8637 = !DILocation(line: 134, column: 13, scope: !8633)
!8638 = !DILocation(line: 133, column: 42, scope: !8634)
!8639 = !DILocation(line: 133, column: 23, scope: !8634)
!8640 = !DILocation(line: 133, column: 9, scope: !8635)
!8641 = distinct !{!8641, !8640, !8642}
!8642 = !DILocation(line: 135, column: 9, scope: !8635)
!8643 = !DILocation(line: 136, column: 22, scope: !8636)
!8644 = !DILocation(line: 137, column: 5, scope: !8636)
!8645 = !DILocation(line: 138, column: 5, scope: !1264)
!8646 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1274, file: !1274, line: 1577, type: !8647, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8649)
!8647 = !DISubroutineType(types: !8648)
!8648 = !{null, !529, !61}
!8649 = !{!8650, !8651}
!8650 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8646, file: !1274, line: 1577, type: !529)
!8651 = !DILocalVariable(name: "priority", arg: 2, scope: !8646, file: !1274, line: 1577, type: !61)
!8652 = !DILocation(line: 0, scope: !8646)
!8653 = !DILocation(line: 1582, column: 34, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !1274, line: 1581, column: 8)
!8655 = distinct !DILexicalBlock(scope: !8646, file: !1274, line: 1579, column: 6)
!8656 = !DILocation(line: 1582, column: 5, scope: !8654)
!8657 = !DILocation(line: 1582, column: 32, scope: !8654)
!8658 = !DILocation(line: 1583, column: 1, scope: !8646)
!8659 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1265, file: !1265, line: 141, type: !8660, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8662)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{!1268, !528}
!8662 = !{!8663, !8664}
!8663 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8659, file: !1265, line: 141, type: !528)
!8664 = !DILocalVariable(name: "status", scope: !8659, file: !1265, line: 143, type: !1268)
!8665 = !DILocation(line: 0, scope: !8659)
!8666 = !DILocation(line: 145, column: 40, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8659, file: !1265, line: 145, column: 9)
!8668 = !DILocation(line: 149, column: 9, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8667, file: !1265, line: 148, column: 12)
!8670 = !DILocation(line: 153, column: 5, scope: !8659)
!8671 = !DILocation(line: 154, column: 1, scope: !8659)
!8672 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1274, file: !1274, line: 1494, type: !8673, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8675)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{null, !529}
!8675 = !{!8676}
!8676 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8672, file: !1274, line: 1494, type: !529)
!8677 = !DILocation(line: 0, scope: !8672)
!8678 = !DILocation(line: 1497, column: 91, scope: !8672)
!8679 = !DILocation(line: 1497, column: 61, scope: !8672)
!8680 = !DILocation(line: 1497, column: 40, scope: !8672)
!8681 = !DILocation(line: 1497, column: 3, scope: !8672)
!8682 = !DILocation(line: 1497, column: 46, scope: !8672)
!8683 = !DILocation(line: 1498, column: 1, scope: !8672)
!8684 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1265, file: !1265, line: 156, type: !8660, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8685)
!8685 = !{!8686, !8687}
!8686 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8684, file: !1265, line: 156, type: !528)
!8687 = !DILocalVariable(name: "status", scope: !8684, file: !1265, line: 158, type: !1268)
!8688 = !DILocation(line: 0, scope: !8684)
!8689 = !DILocation(line: 160, column: 40, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8684, file: !1265, line: 160, column: 9)
!8691 = !DILocation(line: 164, column: 9, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8690, file: !1265, line: 163, column: 12)
!8693 = !DILocation(line: 168, column: 5, scope: !8684)
!8694 = !DILocation(line: 169, column: 1, scope: !8684)
!8695 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1274, file: !1274, line: 1507, type: !8673, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8696)
!8696 = !{!8697}
!8697 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8695, file: !1274, line: 1507, type: !529)
!8698 = !DILocation(line: 0, scope: !8695)
!8699 = !DILocation(line: 1509, column: 65, scope: !8695)
!8700 = !DILocation(line: 1509, column: 44, scope: !8695)
!8701 = !DILocation(line: 1509, column: 32, scope: !8695)
!8702 = !DILocation(line: 1509, column: 3, scope: !8695)
!8703 = !DILocation(line: 1509, column: 39, scope: !8695)
!8704 = !DILocation(line: 1510, column: 1, scope: !8695)
!8705 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1265, file: !1265, line: 171, type: !8706, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8708)
!8706 = !DISubroutineType(types: !8707)
!8707 = !{!61, !528}
!8708 = !{!8709, !8710}
!8709 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8705, file: !1265, line: 171, type: !528)
!8710 = !DILocalVariable(name: "ret", scope: !8705, file: !1265, line: 173, type: !61)
!8711 = !DILocation(line: 0, scope: !8705)
!8712 = !DILocation(line: 175, column: 40, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8705, file: !1265, line: 175, column: 9)
!8714 = !DILocation(line: 178, column: 15, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8713, file: !1265, line: 177, column: 12)
!8716 = !DILocation(line: 181, column: 5, scope: !8705)
!8717 = !DILocation(line: 182, column: 1, scope: !8705)
!8718 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1274, file: !1274, line: 1523, type: !8719, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8721)
!8719 = !DISubroutineType(types: !8720)
!8720 = !{!61, !529}
!8721 = !{!8722}
!8722 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8718, file: !1274, line: 1523, type: !529)
!8723 = !DILocation(line: 0, scope: !8718)
!8724 = !DILocation(line: 1525, column: 51, scope: !8718)
!8725 = !DILocation(line: 1525, column: 23, scope: !8718)
!8726 = !DILocation(line: 1525, column: 83, scope: !8718)
!8727 = !DILocation(line: 1525, column: 22, scope: !8718)
!8728 = !DILocation(line: 1525, column: 3, scope: !8718)
!8729 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1265, file: !1265, line: 184, type: !8660, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8730)
!8730 = !{!8731, !8732}
!8731 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8729, file: !1265, line: 184, type: !528)
!8732 = !DILocalVariable(name: "status", scope: !8729, file: !1265, line: 186, type: !1268)
!8733 = !DILocation(line: 0, scope: !8729)
!8734 = !DILocation(line: 188, column: 40, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8729, file: !1265, line: 188, column: 9)
!8736 = !DILocation(line: 192, column: 9, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8735, file: !1265, line: 191, column: 12)
!8738 = !DILocation(line: 196, column: 5, scope: !8729)
!8739 = !DILocation(line: 197, column: 1, scope: !8729)
!8740 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1274, file: !1274, line: 1535, type: !8673, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8741)
!8741 = !{!8742}
!8742 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8740, file: !1274, line: 1535, type: !529)
!8743 = !DILocation(line: 0, scope: !8740)
!8744 = !DILocation(line: 1537, column: 65, scope: !8740)
!8745 = !DILocation(line: 1537, column: 44, scope: !8740)
!8746 = !DILocation(line: 1537, column: 32, scope: !8740)
!8747 = !DILocation(line: 1537, column: 3, scope: !8740)
!8748 = !DILocation(line: 1537, column: 39, scope: !8740)
!8749 = !DILocation(line: 1538, column: 1, scope: !8740)
!8750 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1265, file: !1265, line: 199, type: !8660, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8751)
!8751 = !{!8752, !8753}
!8752 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8750, file: !1265, line: 199, type: !528)
!8753 = !DILocalVariable(name: "status", scope: !8750, file: !1265, line: 201, type: !1268)
!8754 = !DILocation(line: 0, scope: !8750)
!8755 = !DILocation(line: 203, column: 40, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8750, file: !1265, line: 203, column: 9)
!8757 = !DILocation(line: 207, column: 9, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8756, file: !1265, line: 206, column: 12)
!8759 = !DILocation(line: 211, column: 5, scope: !8750)
!8760 = !DILocation(line: 212, column: 1, scope: !8750)
!8761 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1274, file: !1274, line: 1547, type: !8673, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8762)
!8762 = !{!8763}
!8763 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8761, file: !1274, line: 1547, type: !529)
!8764 = !DILocation(line: 0, scope: !8761)
!8765 = !DILocation(line: 1549, column: 65, scope: !8761)
!8766 = !DILocation(line: 1549, column: 44, scope: !8761)
!8767 = !DILocation(line: 1549, column: 32, scope: !8761)
!8768 = !DILocation(line: 1549, column: 3, scope: !8761)
!8769 = !DILocation(line: 1549, column: 39, scope: !8761)
!8770 = !DILocation(line: 1550, column: 1, scope: !8761)
!8771 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1265, file: !1265, line: 214, type: !8772, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8774)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!1268, !528, !61}
!8774 = !{!8775, !8776, !8777}
!8775 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8771, file: !1265, line: 214, type: !528)
!8776 = !DILocalVariable(name: "priority", arg: 2, scope: !8771, file: !1265, line: 214, type: !61)
!8777 = !DILocalVariable(name: "status", scope: !8771, file: !1265, line: 216, type: !1268)
!8778 = !DILocation(line: 0, scope: !8771)
!8779 = !DILocation(line: 218, column: 40, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8771, file: !1265, line: 218, column: 9)
!8781 = !DILocation(line: 222, column: 9, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8780, file: !1265, line: 221, column: 12)
!8783 = !DILocation(line: 226, column: 5, scope: !8771)
!8784 = !DILocation(line: 227, column: 1, scope: !8771)
!8785 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1265, file: !1265, line: 229, type: !8706, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8786)
!8786 = !{!8787, !8788}
!8787 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8785, file: !1265, line: 229, type: !528)
!8788 = !DILocalVariable(name: "ret", scope: !8785, file: !1265, line: 231, type: !61)
!8789 = !DILocation(line: 0, scope: !8785)
!8790 = !DILocation(line: 233, column: 40, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8785, file: !1265, line: 233, column: 9)
!8792 = !DILocation(line: 236, column: 15, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8791, file: !1265, line: 235, column: 12)
!8794 = !DILocation(line: 239, column: 5, scope: !8785)
!8795 = !DILocation(line: 240, column: 1, scope: !8785)
!8796 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1274, file: !1274, line: 1597, type: !8719, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8797)
!8797 = !{!8798}
!8798 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8796, file: !1274, line: 1597, type: !529)
!8799 = !DILocation(line: 0, scope: !8796)
!8800 = !DILocation(line: 1603, column: 23, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !1274, line: 1602, column: 8)
!8802 = distinct !DILexicalBlock(scope: !8796, file: !1274, line: 1600, column: 6)
!8803 = !DILocation(line: 1603, column: 60, scope: !8801)
!8804 = !DILocation(line: 1604, column: 1, scope: !8796)
!8805 = distinct !DISubprogram(name: "isrC_main", scope: !1265, file: !1265, line: 248, type: !1266, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8806)
!8806 = !{!8807, !8808}
!8807 = !DILocalVariable(name: "status", scope: !8805, file: !1265, line: 250, type: !1268)
!8808 = !DILocalVariable(name: "irq_number", scope: !8805, file: !1265, line: 251, type: !528)
!8809 = !DILocation(line: 0, scope: !8805)
!8810 = !DILocation(line: 253, column: 5, scope: !8805)
!8811 = !DILocation(line: 255, column: 35, scope: !8805)
!8812 = !DILocation(line: 256, column: 40, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8805, file: !1265, line: 256, column: 9)
!8814 = !DILocation(line: 259, column: 48, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8813, file: !1265, line: 259, column: 16)
!8816 = !DILocation(line: 259, column: 62, scope: !8815)
!8817 = !DILocation(line: 259, column: 16, scope: !8813)
!8818 = !DILocation(line: 261, column: 9, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8815, file: !1265, line: 259, column: 71)
!8820 = !DILocation(line: 262, column: 9, scope: !8819)
!8821 = !DILocation(line: 264, column: 55, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8815, file: !1265, line: 263, column: 12)
!8823 = !DILocation(line: 264, column: 41, scope: !8822)
!8824 = !DILocation(line: 264, column: 53, scope: !8822)
!8825 = !DILocation(line: 265, column: 41, scope: !8822)
!8826 = !DILocation(line: 265, column: 9, scope: !8822)
!8827 = !DILocation(line: 269, column: 5, scope: !8805)
!8828 = !DILocation(line: 270, column: 1, scope: !8805)
!8829 = distinct !DISubprogram(name: "get_current_irq", scope: !1265, file: !1265, line: 242, type: !4163, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8830)
!8830 = !{!8831}
!8831 = !DILocalVariable(name: "irq_num", scope: !8829, file: !1265, line: 244, type: !61)
!8832 = !DILocation(line: 244, column: 31, scope: !8829)
!8833 = !DILocation(line: 244, column: 36, scope: !8829)
!8834 = !DILocation(line: 0, scope: !8829)
!8835 = !DILocation(line: 245, column: 21, scope: !8829)
!8836 = !DILocation(line: 245, column: 5, scope: !8829)
!8837 = distinct !DISubprogram(name: "get_pending_irq", scope: !1265, file: !1265, line: 121, type: !4163, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !293)
!8838 = !DILocation(line: 123, column: 19, scope: !8837)
!8839 = !DILocation(line: 123, column: 51, scope: !8837)
!8840 = !DILocation(line: 123, column: 5, scope: !8837)
!8841 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1265, file: !1265, line: 272, type: !8842, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8845)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!1268, !528, !8844}
!8844 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !927, line: 175, baseType: !1346)
!8845 = !{!8846, !8847, !8848}
!8846 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8841, file: !1265, line: 272, type: !528)
!8847 = !DILocalVariable(name: "callback", arg: 2, scope: !8841, file: !1265, line: 272, type: !8844)
!8848 = !DILocalVariable(name: "mask", scope: !8841, file: !1265, line: 274, type: !61)
!8849 = !DILocation(line: 0, scope: !8841)
!8850 = !DILocation(line: 276, column: 40, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8841, file: !1265, line: 276, column: 9)
!8852 = !DILocation(line: 280, column: 12, scope: !8841)
!8853 = !DILocation(line: 281, column: 5, scope: !8841)
!8854 = !DILocation(line: 282, column: 37, scope: !8841)
!8855 = !DILocation(line: 282, column: 51, scope: !8841)
!8856 = !DILocation(line: 283, column: 37, scope: !8841)
!8857 = !DILocation(line: 283, column: 49, scope: !8841)
!8858 = !DILocation(line: 284, column: 5, scope: !8841)
!8859 = !DILocation(line: 286, column: 5, scope: !8841)
!8860 = !DILocation(line: 287, column: 1, scope: !8841)
!8861 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1265, file: !1265, line: 289, type: !8862, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8864)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{!1268, !1395}
!8864 = !{!8865}
!8865 = !DILocalVariable(name: "mask", arg: 1, scope: !8861, file: !1265, line: 289, type: !1395)
!8866 = !DILocation(line: 0, scope: !8861)
!8867 = !DILocation(line: 291, column: 13, scope: !8861)
!8868 = !DILocation(line: 291, column: 11, scope: !8861)
!8869 = !DILocation(line: 292, column: 5, scope: !8861)
!8870 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1265, file: !1265, line: 295, type: !8871, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1269, retainedNodes: !8873)
!8871 = !DISubroutineType(types: !8872)
!8872 = !{!1268, !61}
!8873 = !{!8874}
!8874 = !DILocalVariable(name: "mask", arg: 1, scope: !8870, file: !1265, line: 295, type: !61)
!8875 = !DILocation(line: 0, scope: !8870)
!8876 = !DILocation(line: 297, column: 5, scope: !8870)
!8877 = !DILocation(line: 298, column: 5, scope: !8870)
!8878 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2917, file: !2917, line: 51, type: !4163, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8879)
!8879 = !{!8880, !8881}
!8880 = !DILocalVariable(name: "mask", scope: !8878, file: !2917, line: 53, type: !61)
!8881 = !DILocalVariable(name: "priority", scope: !8878, file: !2917, line: 55, type: !61)
!8882 = !DILocation(line: 521, column: 3, scope: !8883, inlinedAt: !8887)
!8883 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !8884, file: !8884, line: 517, type: !4163, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8885)
!8884 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!8885 = !{!8886}
!8886 = !DILocalVariable(name: "result", scope: !8883, file: !8884, line: 519, type: !61)
!8887 = distinct !DILocation(line: 53, column: 21, scope: !8878)
!8888 = !{i64 457578}
!8889 = !DILocation(line: 0, scope: !8883, inlinedAt: !8887)
!8890 = !DILocation(line: 0, scope: !8878)
!8891 = !DILocalVariable(name: "value", arg: 1, scope: !8892, file: !8884, line: 532, type: !61)
!8892 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !8884, file: !8884, line: 532, type: !4302, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8893)
!8893 = !{!8891}
!8894 = !DILocation(line: 0, scope: !8892, inlinedAt: !8895)
!8895 = distinct !DILocation(line: 56, column: 5, scope: !8878)
!8896 = !DILocation(line: 534, column: 3, scope: !8892, inlinedAt: !8895)
!8897 = !{i64 457911}
!8898 = !DILocation(line: 456, column: 3, scope: !8899, inlinedAt: !8900)
!8899 = distinct !DISubprogram(name: "__DMB", scope: !3029, file: !3029, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !293)
!8900 = distinct !DILocation(line: 57, column: 5, scope: !8878)
!8901 = !{i64 430667}
!8902 = !DILocation(line: 434, column: 3, scope: !8903, inlinedAt: !8904)
!8903 = distinct !DISubprogram(name: "__ISB", scope: !3029, file: !3029, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !293)
!8904 = distinct !DILocation(line: 58, column: 5, scope: !8878)
!8905 = !{i64 430082}
!8906 = !DILocation(line: 59, column: 5, scope: !8878)
!8907 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2917, file: !2917, line: 62, type: !4302, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8908)
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "mask", arg: 1, scope: !8907, file: !2917, line: 62, type: !61)
!8910 = !DILocation(line: 0, scope: !8907)
!8911 = !DILocation(line: 0, scope: !8892, inlinedAt: !8912)
!8912 = distinct !DILocation(line: 64, column: 5, scope: !8907)
!8913 = !DILocation(line: 534, column: 3, scope: !8892, inlinedAt: !8912)
!8914 = !DILocation(line: 456, column: 3, scope: !8899, inlinedAt: !8915)
!8915 = distinct !DILocation(line: 65, column: 5, scope: !8907)
!8916 = !DILocation(line: 434, column: 3, scope: !8903, inlinedAt: !8917)
!8917 = distinct !DILocation(line: 66, column: 5, scope: !8907)
!8918 = !DILocation(line: 67, column: 1, scope: !8907)
!8919 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2917, file: !2917, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8920)
!8920 = !{!8921, !8922}
!8921 = !DILocalVariable(name: "irq_number", scope: !8919, file: !2917, line: 71, type: !528)
!8922 = !DILocalVariable(name: "mask", scope: !8919, file: !2917, line: 72, type: !61)
!8923 = !DILocation(line: 72, column: 21, scope: !8919)
!8924 = !DILocation(line: 0, scope: !8919)
!8925 = !DILocation(line: 73, column: 5, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8919, file: !2917, line: 73, column: 5)
!8927 = !DILocation(line: 74, column: 9, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !2917, line: 73, column: 85)
!8929 = distinct !DILexicalBlock(scope: !8926, file: !2917, line: 73, column: 5)
!8930 = !DILocation(line: 73, column: 81, scope: !8929)
!8931 = !DILocation(line: 73, column: 53, scope: !8929)
!8932 = distinct !{!8932, !8925, !8933}
!8933 = !DILocation(line: 75, column: 5, scope: !8926)
!8934 = !DILocation(line: 76, column: 5, scope: !8919)
!8935 = !DILocation(line: 77, column: 1, scope: !8919)
!8936 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1274, file: !1274, line: 1507, type: !8673, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8937)
!8937 = !{!8938}
!8938 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8936, file: !1274, line: 1507, type: !529)
!8939 = !DILocation(line: 0, scope: !8936)
!8940 = !DILocation(line: 1509, column: 65, scope: !8936)
!8941 = !DILocation(line: 1509, column: 44, scope: !8936)
!8942 = !DILocation(line: 1509, column: 32, scope: !8936)
!8943 = !DILocation(line: 1509, column: 3, scope: !8936)
!8944 = !DILocation(line: 1509, column: 39, scope: !8936)
!8945 = !DILocation(line: 1510, column: 1, scope: !8936)
!8946 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2917, file: !2917, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8947)
!8947 = !{!8948, !8949}
!8948 = !DILocalVariable(name: "irq_number", scope: !8946, file: !2917, line: 81, type: !528)
!8949 = !DILocalVariable(name: "mask", scope: !8946, file: !2917, line: 82, type: !61)
!8950 = !DILocation(line: 82, column: 21, scope: !8946)
!8951 = !DILocation(line: 0, scope: !8946)
!8952 = !DILocation(line: 84, column: 5, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8946, file: !2917, line: 84, column: 5)
!8954 = !DILocation(line: 85, column: 9, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !2917, line: 84, column: 85)
!8956 = distinct !DILexicalBlock(scope: !8953, file: !2917, line: 84, column: 5)
!8957 = !DILocation(line: 84, column: 81, scope: !8956)
!8958 = !DILocation(line: 84, column: 53, scope: !8956)
!8959 = distinct !{!8959, !8952, !8960}
!8960 = !DILocation(line: 86, column: 5, scope: !8953)
!8961 = !DILocation(line: 87, column: 5, scope: !8946)
!8962 = !DILocation(line: 88, column: 1, scope: !8946)
!8963 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1274, file: !1274, line: 1494, type: !8673, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8964)
!8964 = !{!8965}
!8965 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8963, file: !1274, line: 1494, type: !529)
!8966 = !DILocation(line: 0, scope: !8963)
!8967 = !DILocation(line: 1497, column: 91, scope: !8963)
!8968 = !DILocation(line: 1497, column: 61, scope: !8963)
!8969 = !DILocation(line: 1497, column: 40, scope: !8963)
!8970 = !DILocation(line: 1497, column: 3, scope: !8963)
!8971 = !DILocation(line: 1497, column: 46, scope: !8963)
!8972 = !DILocation(line: 1498, column: 1, scope: !8963)
!8973 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2917, file: !2917, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8974)
!8974 = !{!8975}
!8975 = !DILocalVariable(name: "irq_number", scope: !8973, file: !2917, line: 92, type: !528)
!8976 = !DILocation(line: 0, scope: !8973)
!8977 = !DILocation(line: 93, column: 5, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8973, file: !2917, line: 93, column: 5)
!8979 = !DILocation(line: 94, column: 9, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !2917, line: 93, column: 85)
!8981 = distinct !DILexicalBlock(scope: !8978, file: !2917, line: 93, column: 5)
!8982 = !DILocation(line: 93, column: 81, scope: !8981)
!8983 = !DILocation(line: 93, column: 53, scope: !8981)
!8984 = distinct !{!8984, !8977, !8985}
!8985 = !DILocation(line: 95, column: 5, scope: !8978)
!8986 = !DILocation(line: 96, column: 1, scope: !8973)
!8987 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1274, file: !1274, line: 1547, type: !8673, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8988)
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8987, file: !1274, line: 1547, type: !529)
!8990 = !DILocation(line: 0, scope: !8987)
!8991 = !DILocation(line: 1549, column: 65, scope: !8987)
!8992 = !DILocation(line: 1549, column: 44, scope: !8987)
!8993 = !DILocation(line: 1549, column: 32, scope: !8987)
!8994 = !DILocation(line: 1549, column: 3, scope: !8987)
!8995 = !DILocation(line: 1549, column: 39, scope: !8987)
!8996 = !DILocation(line: 1550, column: 1, scope: !8987)
!8997 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2917, file: !2917, line: 98, type: !8660, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !8998)
!8998 = !{!8999}
!8999 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8997, file: !2917, line: 98, type: !528)
!9000 = !DILocation(line: 0, scope: !8997)
!9001 = !DILocation(line: 100, column: 24, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8997, file: !2917, line: 100, column: 9)
!9003 = !DILocation(line: 104, column: 5, scope: !8997)
!9004 = !DILocation(line: 105, column: 5, scope: !8997)
!9005 = !DILocation(line: 106, column: 1, scope: !8997)
!9006 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2917, file: !2917, line: 45, type: !526, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !9007)
!9007 = !{!9008}
!9008 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9006, file: !2917, line: 45, type: !528)
!9009 = !DILocation(line: 0, scope: !9006)
!9010 = !DILocation(line: 47, column: 54, scope: !9006)
!9011 = !DILocation(line: 47, column: 16, scope: !9006)
!9012 = !DILocation(line: 445, column: 3, scope: !9013, inlinedAt: !9014)
!9013 = distinct !DISubprogram(name: "__DSB", scope: !3029, file: !3029, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !293)
!9014 = distinct !DILocation(line: 48, column: 5, scope: !9006)
!9015 = !{i64 430378}
!9016 = !DILocation(line: 49, column: 1, scope: !9006)
!9017 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2917, file: !2917, line: 114, type: !4163, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !293)
!9018 = !DILocation(line: 116, column: 19, scope: !9017)
!9019 = !DILocation(line: 116, column: 24, scope: !9017)
!9020 = !DILocation(line: 116, column: 5, scope: !9017)
!9021 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1358, file: !1358, line: 71, type: !9022, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9024)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{null, !88, !61}
!9024 = !{!9025, !9026, !9027, !9121, !9122, !9123}
!9025 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9021, file: !1358, line: 71, type: !88)
!9026 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9021, file: !1358, line: 71, type: !61)
!9027 = !DILocalVariable(name: "D", scope: !9021, file: !1358, line: 73, type: !9028)
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9029, size: 32)
!9029 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1548, line: 193, baseType: !9030)
!9030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1548, line: 134, size: 1824, elements: !9031)
!9031 = !{!9032, !9033, !9034, !9040, !9046, !9047, !9054, !9055, !9062, !9063, !9064, !9065, !9072, !9073, !9103, !9104, !9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112, !9113, !9114, !9115, !9116, !9117, !9118, !9119, !9120}
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !9030, file: !1548, line: 136, baseType: !61, size: 32)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !9030, file: !1548, line: 137, baseType: !969, size: 32, offset: 32)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !9030, file: !1548, line: 138, baseType: !9035, size: 32, offset: 64)
!9035 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1632, line: 56, baseType: !9036)
!9036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9037, size: 32)
!9037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 54, size: 8, elements: !9038)
!9038 = !{!9039}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !9037, file: !1632, line: 55, baseType: !463, size: 8)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !9030, file: !1548, line: 139, baseType: !9041, size: 32, offset: 96)
!9041 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1632, line: 46, baseType: !9042)
!9042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9043, size: 32)
!9043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 44, size: 8, elements: !9044)
!9044 = !{!9045}
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !9043, file: !1632, line: 45, baseType: !463, size: 8)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !9030, file: !1548, line: 140, baseType: !1644, size: 8, offset: 128)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !9030, file: !1548, line: 143, baseType: !9048, size: 32, offset: 160)
!9048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9049, size: 32)
!9049 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1650, line: 146, baseType: !9050)
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 143, size: 64, elements: !9051)
!9051 = !{!9052, !9053}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9050, file: !1650, line: 144, baseType: !61, size: 32)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9050, file: !1650, line: 145, baseType: !61, size: 32, offset: 32)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !9030, file: !1548, line: 144, baseType: !969, size: 32, offset: 192)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !9030, file: !1548, line: 145, baseType: !9056, size: 32, offset: 224)
!9056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9057 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1650, line: 152, baseType: !9058)
!9058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 149, size: 64, elements: !9059)
!9059 = !{!9060, !9061}
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !9058, file: !1650, line: 150, baseType: !61, size: 32)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !9058, file: !1650, line: 151, baseType: !61, size: 32, offset: 32)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !9030, file: !1548, line: 146, baseType: !969, size: 32, offset: 256)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !9030, file: !1548, line: 147, baseType: !61, size: 32, offset: 288)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !9030, file: !1548, line: 148, baseType: !969, size: 32, offset: 320)
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !9030, file: !1548, line: 151, baseType: !9066, size: 1024, offset: 352)
!9066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9067, size: 1024, elements: !1673)
!9067 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1650, line: 170, baseType: !9068)
!9068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 167, size: 64, elements: !9069)
!9069 = !{!9070, !9071}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !9068, file: !1650, line: 168, baseType: !61, size: 32)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !9068, file: !1650, line: 169, baseType: !61, size: 32, offset: 32)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !9030, file: !1548, line: 155, baseType: !1675, size: 32, offset: 1376)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !9030, file: !1548, line: 156, baseType: !9074, size: 32, offset: 1408)
!9074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9075, size: 32)
!9075 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1548, line: 124, baseType: !9076)
!9076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1548, line: 90, size: 200, elements: !9077)
!9077 = !{!9078, !9079, !9080, !9081, !9082, !9083, !9084, !9085, !9086, !9087, !9088, !9089, !9090, !9091, !9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100, !9101, !9102}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !9076, file: !1548, line: 91, baseType: !463, size: 8)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !9076, file: !1548, line: 92, baseType: !463, size: 8, offset: 8)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !9076, file: !1548, line: 94, baseType: !463, size: 8, offset: 16)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !9076, file: !1548, line: 95, baseType: !463, size: 8, offset: 24)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !9076, file: !1548, line: 96, baseType: !463, size: 8, offset: 32)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !9076, file: !1548, line: 98, baseType: !463, size: 8, offset: 40)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !9076, file: !1548, line: 99, baseType: !463, size: 8, offset: 48)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !9076, file: !1548, line: 100, baseType: !463, size: 8, offset: 56)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !9076, file: !1548, line: 101, baseType: !463, size: 8, offset: 64)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !9076, file: !1548, line: 103, baseType: !463, size: 8, offset: 72)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !9076, file: !1548, line: 104, baseType: !463, size: 8, offset: 80)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !9076, file: !1548, line: 106, baseType: !463, size: 8, offset: 88)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !9076, file: !1548, line: 107, baseType: !463, size: 8, offset: 96)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !9076, file: !1548, line: 108, baseType: !463, size: 8, offset: 104)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !9076, file: !1548, line: 109, baseType: !463, size: 8, offset: 112)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !9076, file: !1548, line: 110, baseType: !463, size: 8, offset: 120)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !9076, file: !1548, line: 111, baseType: !463, size: 8, offset: 128)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !9076, file: !1548, line: 112, baseType: !463, size: 8, offset: 136)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !9076, file: !1548, line: 114, baseType: !463, size: 8, offset: 144)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !9076, file: !1548, line: 115, baseType: !463, size: 8, offset: 152)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !9076, file: !1548, line: 118, baseType: !463, size: 8, offset: 160)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !9076, file: !1548, line: 119, baseType: !463, size: 8, offset: 168)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !9076, file: !1548, line: 120, baseType: !463, size: 8, offset: 176)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !9076, file: !1548, line: 121, baseType: !463, size: 8, offset: 184)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !9076, file: !1548, line: 122, baseType: !463, size: 8, offset: 192)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !9030, file: !1548, line: 157, baseType: !61, size: 32, offset: 1440)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !9030, file: !1548, line: 158, baseType: !1208, size: 16, offset: 1472)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !9030, file: !1548, line: 159, baseType: !1208, size: 16, offset: 1488)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !9030, file: !1548, line: 163, baseType: !1208, size: 16, offset: 1504)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !9030, file: !1548, line: 164, baseType: !1208, size: 16, offset: 1520)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !9030, file: !1548, line: 167, baseType: !463, size: 8, offset: 1536)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !9030, file: !1548, line: 168, baseType: !1714, size: 24, offset: 1544)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !9030, file: !1548, line: 169, baseType: !463, size: 8, offset: 1568)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !9030, file: !1548, line: 170, baseType: !463, size: 8, offset: 1576)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !9030, file: !1548, line: 173, baseType: !1208, size: 16, offset: 1584)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !9030, file: !1548, line: 174, baseType: !61, size: 32, offset: 1600)
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !9030, file: !1548, line: 175, baseType: !61, size: 32, offset: 1632)
!9115 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !9030, file: !1548, line: 178, baseType: !91, size: 8, offset: 1664)
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !9030, file: !1548, line: 179, baseType: !91, size: 8, offset: 1672)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !9030, file: !1548, line: 182, baseType: !1723, size: 32, offset: 1696)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !9030, file: !1548, line: 186, baseType: !1723, size: 32, offset: 1728)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !9030, file: !1548, line: 187, baseType: !1728, size: 32, offset: 1760)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !9030, file: !1548, line: 188, baseType: !1728, size: 32, offset: 1792)
!9121 = !DILocalVariable(name: "i", scope: !9021, file: !1358, line: 74, type: !61)
!9122 = !DILocalVariable(name: "data_cnt", scope: !9021, file: !1358, line: 74, type: !61)
!9123 = !DILocalVariable(name: "p_data", scope: !9021, file: !1358, line: 75, type: !1395)
!9124 = !DILocation(line: 0, scope: !9021)
!9125 = !DILocation(line: 77, column: 16, scope: !9021)
!9126 = !DILocation(line: 79, column: 53, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !1358, line: 79, column: 5)
!9128 = distinct !DILexicalBlock(scope: !9021, file: !1358, line: 79, column: 5)
!9129 = !DILocation(line: 79, column: 5, scope: !9128)
!9130 = !DILocation(line: 79, column: 41, scope: !9128)
!9131 = !DILocation(line: 77, column: 47, scope: !9021)
!9132 = !DILocation(line: 80, column: 13, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !1358, line: 80, column: 13)
!9134 = distinct !DILexicalBlock(scope: !9127, file: !1358, line: 79, column: 80)
!9135 = !DILocation(line: 80, column: 21, scope: !9133)
!9136 = !DILocation(line: 80, column: 13, scope: !9134)
!9137 = !DILocation(line: 81, column: 13, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !1358, line: 81, column: 13)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !1358, line: 81, column: 13)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !1358, line: 81, column: 13)
!9141 = distinct !DILexicalBlock(scope: !9133, file: !1358, line: 80, column: 36)
!9142 = !DILocation(line: 79, column: 65, scope: !9127)
!9143 = !DILocation(line: 79, column: 70, scope: !9127)
!9144 = distinct !{!9144, !9129, !9145}
!9145 = !DILocation(line: 84, column: 5, scope: !9128)
!9146 = !DILocation(line: 85, column: 1, scope: !9021)
!9147 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1358, file: !1358, line: 93, type: !3911, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9148)
!9148 = !{!9149, !9150}
!9149 = !DILocalVariable(name: "num", arg: 1, scope: !9147, file: !1358, line: 93, type: !61)
!9150 = !DILocalVariable(name: "ret", scope: !9147, file: !1358, line: 95, type: !18)
!9151 = !DILocation(line: 0, scope: !9147)
!9152 = !DILocation(line: 100, column: 9, scope: !9147)
!9153 = !DILocation(line: 102, column: 5, scope: !9147)
!9154 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1358, file: !1358, line: 110, type: !9155, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9158)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{null, !9157}
!9157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!9158 = !{!9159, !9160}
!9159 = !DILocalVariable(name: "CS", arg: 1, scope: !9154, file: !1358, line: 110, type: !9157)
!9160 = !DILocalVariable(name: "val", scope: !9154, file: !1358, line: 112, type: !61)
!9161 = !DILocation(line: 0, scope: !9154)
!9162 = !DILocation(line: 114, column: 5, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !1358, line: 114, column: 5)
!9164 = distinct !DILexicalBlock(scope: !9154, file: !1358, line: 114, column: 5)
!9165 = !DILocation(line: 116, column: 16, scope: !9154)
!9166 = !DILocation(line: 117, column: 9, scope: !9154)
!9167 = !DILocation(line: 122, column: 13, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !1358, line: 121, column: 27)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !1358, line: 121, column: 16)
!9170 = distinct !DILexicalBlock(scope: !9154, file: !1358, line: 117, column: 9)
!9171 = !DILocation(line: 127, column: 9, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !1358, line: 127, column: 9)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !1358, line: 127, column: 9)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !1358, line: 127, column: 9)
!9175 = distinct !DILexicalBlock(scope: !9169, file: !1358, line: 125, column: 12)
!9176 = !DILocation(line: 0, scope: !9170)
!9177 = !DILocation(line: 134, column: 5, scope: !9154)
!9178 = !DILocation(line: 134, column: 19, scope: !9154)
!9179 = !DILocation(line: 134, column: 35, scope: !9154)
!9180 = !DILocation(line: 134, column: 12, scope: !9154)
!9181 = distinct !{!9181, !9177, !9182}
!9182 = !DILocation(line: 134, column: 57, scope: !9154)
!9183 = !DILocation(line: 135, column: 19, scope: !9154)
!9184 = !DILocation(line: 135, column: 34, scope: !9154)
!9185 = !DILocation(line: 135, column: 12, scope: !9154)
!9186 = !DILocation(line: 135, column: 5, scope: !9154)
!9187 = distinct !{!9187, !9186, !9188}
!9188 = !DILocation(line: 135, column: 50, scope: !9154)
!9189 = !DILocation(line: 130, column: 9, scope: !9154)
!9190 = !DILocation(line: 138, column: 24, scope: !9154)
!9191 = !DILocation(line: 139, column: 1, scope: !9154)
!9192 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1358, file: !1358, line: 148, type: !9155, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9193)
!9193 = !{!9194, !9195}
!9194 = !DILocalVariable(name: "CS", arg: 1, scope: !9192, file: !1358, line: 148, type: !9157)
!9195 = !DILocalVariable(name: "val", scope: !9192, file: !1358, line: 150, type: !61)
!9196 = !DILocation(line: 0, scope: !9192)
!9197 = !DILocation(line: 153, column: 16, scope: !9192)
!9198 = !DILocation(line: 154, column: 9, scope: !9192)
!9199 = !DILocation(line: 155, column: 24, scope: !9192)
!9200 = !DILocation(line: 158, column: 5, scope: !9192)
!9201 = !DILocation(line: 158, column: 18, scope: !9192)
!9202 = !DILocation(line: 158, column: 32, scope: !9192)
!9203 = distinct !{!9203, !9200, !9204}
!9204 = !DILocation(line: 158, column: 49, scope: !9192)
!9205 = !DILocation(line: 163, column: 16, scope: !9192)
!9206 = !DILocation(line: 164, column: 9, scope: !9192)
!9207 = !DILocation(line: 165, column: 24, scope: !9192)
!9208 = !DILocation(line: 168, column: 5, scope: !9192)
!9209 = !DILocation(line: 168, column: 18, scope: !9192)
!9210 = !DILocation(line: 168, column: 32, scope: !9192)
!9211 = distinct !{!9211, !9208, !9212}
!9212 = !DILocation(line: 168, column: 46, scope: !9192)
!9213 = !DILocation(line: 174, column: 10, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9192, file: !1358, line: 174, column: 9)
!9215 = !DILocation(line: 174, column: 25, scope: !9214)
!9216 = !DILocation(line: 174, column: 9, scope: !9192)
!9217 = !DILocation(line: 175, column: 9, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !1358, line: 175, column: 9)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !1358, line: 175, column: 9)
!9220 = distinct !DILexicalBlock(scope: !9214, file: !1358, line: 174, column: 36)
!9221 = !DILocation(line: 176, column: 5, scope: !9220)
!9222 = !DILocation(line: 179, column: 1, scope: !9192)
!9223 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1358, file: !1358, line: 186, type: !9224, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9226)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{!61, !9157}
!9226 = !{!9227, !9228, !9229}
!9227 = !DILocalVariable(name: "CS", arg: 1, scope: !9223, file: !1358, line: 186, type: !9157)
!9228 = !DILocalVariable(name: "val", scope: !9223, file: !1358, line: 188, type: !61)
!9229 = !DILocalVariable(name: "misc_ctl", scope: !9223, file: !1358, line: 189, type: !61)
!9230 = !DILocation(line: 0, scope: !9223)
!9231 = !DILocation(line: 204, column: 16, scope: !9223)
!9232 = !DILocation(line: 208, column: 12, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9223, file: !1358, line: 208, column: 9)
!9234 = !DILocation(line: 208, column: 9, scope: !9223)
!9235 = !DILocation(line: 212, column: 20, scope: !9223)
!9236 = !DILocation(line: 215, column: 1, scope: !9223)
!9237 = !DILocation(line: 215, column: 15, scope: !9223)
!9238 = !DILocation(line: 215, column: 29, scope: !9223)
!9239 = !DILocation(line: 215, column: 8, scope: !9223)
!9240 = distinct !{!9240, !9236, !9241}
!9241 = !DILocation(line: 215, column: 46, scope: !9223)
!9242 = !DILocation(line: 216, column: 22, scope: !9223)
!9243 = !DILocation(line: 216, column: 36, scope: !9223)
!9244 = !DILocation(line: 216, column: 9, scope: !9223)
!9245 = distinct !{!9245, !9244, !9246}
!9246 = !DILocation(line: 216, column: 47, scope: !9223)
!9247 = !DILocation(line: 218, column: 13, scope: !9223)
!9248 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1358, file: !1358, line: 227, type: !9155, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9249)
!9249 = !{!9250}
!9250 = !DILocalVariable(name: "CS", arg: 1, scope: !9248, file: !1358, line: 227, type: !9157)
!9251 = !DILocation(line: 0, scope: !9248)
!9252 = !DILocation(line: 235, column: 5, scope: !9248)
!9253 = !DILocation(line: 236, column: 5, scope: !9248)
!9254 = !DILocation(line: 238, column: 1, scope: !9248)
!9255 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1358, file: !1358, line: 249, type: !9256, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9258)
!9256 = !DISubroutineType(types: !9257)
!9257 = !{null, !9157, !979}
!9258 = !{!9259, !9260, !9261, !9262, !9263}
!9259 = !DILocalVariable(name: "CS", arg: 1, scope: !9255, file: !1358, line: 249, type: !9157)
!9260 = !DILocalVariable(name: "cmd", arg: 2, scope: !9255, file: !1358, line: 249, type: !979)
!9261 = !DILocalVariable(name: "cmdi", scope: !9255, file: !1358, line: 251, type: !61)
!9262 = !DILocalVariable(name: "cmdo", scope: !9255, file: !1358, line: 251, type: !61)
!9263 = !DILocalVariable(name: "len", scope: !9255, file: !1358, line: 252, type: !463)
!9264 = !DILocation(line: 0, scope: !9255)
!9265 = !DILocation(line: 254, column: 46, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !1358, line: 254, column: 5)
!9267 = distinct !DILexicalBlock(scope: !9255, file: !1358, line: 254, column: 5)
!9268 = !DILocation(line: 254, column: 5, scope: !9267)
!9269 = !DILocation(line: 255, column: 22, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !1358, line: 254, column: 103)
!9271 = !DILocation(line: 255, column: 59, scope: !9270)
!9272 = !DILocation(line: 255, column: 51, scope: !9270)
!9273 = !DILocation(line: 254, column: 65, scope: !9266)
!9274 = !DILocation(line: 254, column: 97, scope: !9266)
!9275 = distinct !{!9275, !9268, !9276}
!9276 = !DILocation(line: 256, column: 5, scope: !9267)
!9277 = !DILocation(line: 258, column: 9, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9255, file: !1358, line: 258, column: 9)
!9279 = !DILocation(line: 262, column: 5, scope: !9255)
!9280 = !DILocation(line: 263, column: 33, scope: !9255)
!9281 = !DILocation(line: 264, column: 25, scope: !9255)
!9282 = !DILocation(line: 265, column: 24, scope: !9255)
!9283 = !DILocation(line: 266, column: 5, scope: !9255)
!9284 = !DILocation(line: 268, column: 5, scope: !9255)
!9285 = !DILocation(line: 269, column: 1, scope: !9255)
!9286 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1358, file: !1358, line: 281, type: !9287, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9289)
!9287 = !DISubroutineType(types: !9288)
!9288 = !{null, !9157, !6324, !979, !979}
!9289 = !{!9290, !9291, !9292, !9293, !9294, !9295}
!9290 = !DILocalVariable(name: "CS", arg: 1, scope: !9286, file: !1358, line: 281, type: !9157)
!9291 = !DILocalVariable(name: "cmd", arg: 2, scope: !9286, file: !1358, line: 281, type: !6324)
!9292 = !DILocalVariable(name: "address", arg: 3, scope: !9286, file: !1358, line: 281, type: !979)
!9293 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !9286, file: !1358, line: 281, type: !979)
!9294 = !DILocalVariable(name: "cmd1", scope: !9286, file: !1358, line: 283, type: !61)
!9295 = !DILocalVariable(name: "cmd2", scope: !9286, file: !1358, line: 283, type: !61)
!9296 = !DILocation(line: 0, scope: !9286)
!9297 = !DILocation(line: 285, column: 12, scope: !9286)
!9298 = !DILocation(line: 287, column: 23, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9286, file: !1358, line: 287, column: 9)
!9300 = !DILocation(line: 287, column: 9, scope: !9286)
!9301 = !DILocation(line: 288, column: 22, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9299, file: !1358, line: 287, column: 31)
!9303 = !DILocation(line: 288, column: 55, scope: !9302)
!9304 = !DILocation(line: 288, column: 53, scope: !9302)
!9305 = !DILocation(line: 289, column: 5, scope: !9302)
!9306 = !DILocation(line: 290, column: 22, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9299, file: !1358, line: 289, column: 12)
!9308 = !DILocation(line: 290, column: 53, scope: !9307)
!9309 = !DILocation(line: 290, column: 51, scope: !9307)
!9310 = !DILocation(line: 291, column: 21, scope: !9307)
!9311 = !DILocation(line: 0, scope: !9299)
!9312 = !DILocation(line: 294, column: 33, scope: !9286)
!9313 = !DILocation(line: 295, column: 38, scope: !9286)
!9314 = !DILocation(line: 296, column: 41, scope: !9286)
!9315 = !DILocation(line: 296, column: 25, scope: !9286)
!9316 = !DILocation(line: 297, column: 24, scope: !9286)
!9317 = !DILocation(line: 299, column: 5, scope: !9286)
!9318 = !DILocation(line: 300, column: 5, scope: !9286)
!9319 = !DILocation(line: 302, column: 1, scope: !9286)
!9320 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1358, file: !1358, line: 312, type: !9321, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9323)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{!61, !979, !979}
!9323 = !{!9324, !9325}
!9324 = !DILocalVariable(name: "cmd", arg: 1, scope: !9320, file: !1358, line: 312, type: !979)
!9325 = !DILocalVariable(name: "address", arg: 2, scope: !9320, file: !1358, line: 312, type: !979)
!9326 = !DILocation(line: 0, scope: !9320)
!9327 = !DILocation(line: 314, column: 14, scope: !9320)
!9328 = !DILocation(line: 314, column: 44, scope: !9320)
!9329 = !DILocation(line: 314, column: 82, scope: !9320)
!9330 = !DILocation(line: 314, column: 75, scope: !9320)
!9331 = !DILocation(line: 314, column: 5, scope: !9320)
!9332 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1358, file: !1358, line: 332, type: !9333, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9336)
!9333 = !DISubroutineType(types: !9334)
!9334 = !{!61, !979, !979, !9335, !1395}
!9335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!9336 = !{!9337, !9338, !9339, !9340, !9341, !9349, !9350, !9351}
!9337 = !DILocalVariable(name: "cmd", arg: 1, scope: !9332, file: !1358, line: 332, type: !979)
!9338 = !DILocalVariable(name: "address", arg: 2, scope: !9332, file: !1358, line: 332, type: !979)
!9339 = !DILocalVariable(name: "p_data", arg: 3, scope: !9332, file: !1358, line: 332, type: !9335)
!9340 = !DILocalVariable(name: "length", arg: 4, scope: !9332, file: !1358, line: 332, type: !1395)
!9341 = !DILocalVariable(name: "tmp", scope: !9332, file: !1358, line: 334, type: !9342)
!9342 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1548, line: 202, baseType: !9343)
!9343 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1548, line: 198, size: 32, elements: !9344)
!9344 = !{!9345, !9346, !9348}
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !9343, file: !1548, line: 199, baseType: !61, size: 32)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !9343, file: !1548, line: 200, baseType: !9347, size: 32)
!9347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 32, elements: !480)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !9343, file: !1548, line: 201, baseType: !705, size: 32)
!9349 = !DILocalVariable(name: "cmd1", scope: !9332, file: !1358, line: 335, type: !61)
!9350 = !DILocalVariable(name: "cmd2", scope: !9332, file: !1358, line: 335, type: !61)
!9351 = !DILocalVariable(name: "i", scope: !9332, file: !1358, line: 336, type: !61)
!9352 = !DILocation(line: 0, scope: !9332)
!9353 = !DILocation(line: 334, column: 5, scope: !9332)
!9354 = !DILocation(line: 334, column: 16, scope: !9332)
!9355 = !DILocation(line: 338, column: 12, scope: !9332)
!9356 = !DILocation(line: 340, column: 17, scope: !9332)
!9357 = !DILocation(line: 342, column: 17, scope: !9332)
!9358 = !DILocation(line: 342, column: 9, scope: !9332)
!9359 = !DILocation(line: 342, column: 15, scope: !9332)
!9360 = !DILocation(line: 344, column: 22, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !1358, line: 343, column: 29)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !1358, line: 343, column: 5)
!9363 = distinct !DILexicalBlock(scope: !9332, file: !1358, line: 343, column: 5)
!9364 = !DILocation(line: 343, column: 5, scope: !9363)
!9365 = !DILocation(line: 344, column: 21, scope: !9361)
!9366 = !DILocation(line: 344, column: 9, scope: !9361)
!9367 = !DILocation(line: 344, column: 19, scope: !9361)
!9368 = !DILocation(line: 345, column: 18, scope: !9361)
!9369 = !DILocation(line: 343, column: 25, scope: !9362)
!9370 = !DILocation(line: 343, column: 19, scope: !9362)
!9371 = distinct !{!9371, !9364, !9372}
!9372 = !DILocation(line: 346, column: 5, scope: !9363)
!9373 = !DILocation(line: 347, column: 16, scope: !9332)
!9374 = !DILocation(line: 348, column: 16, scope: !9332)
!9375 = !DILocation(line: 348, column: 15, scope: !9332)
!9376 = !DILocation(line: 339, column: 17, scope: !9332)
!9377 = !DILocation(line: 339, column: 52, scope: !9332)
!9378 = !DILocation(line: 339, column: 45, scope: !9332)
!9379 = !DILocation(line: 348, column: 13, scope: !9332)
!9380 = !DILocation(line: 349, column: 38, scope: !9332)
!9381 = !DILocation(line: 351, column: 1, scope: !9332)
!9382 = !DILocation(line: 350, column: 5, scope: !9332)
!9383 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1358, file: !1358, line: 367, type: !9384, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9386)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{null, !61, !88, !1335}
!9386 = !{!9387, !9388, !9389, !9390, !9391, !9392}
!9387 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !9383, file: !1358, line: 367, type: !61)
!9388 = !DILocalVariable(name: "buff", arg: 2, scope: !9383, file: !1358, line: 367, type: !88)
!9389 = !DILocalVariable(name: "length", arg: 3, scope: !9383, file: !1358, line: 367, type: !1335)
!9390 = !DILocalVariable(name: "i", scope: !9383, file: !1358, line: 369, type: !61)
!9391 = !DILocalVariable(name: "p_data", scope: !9383, file: !1358, line: 370, type: !969)
!9392 = !DILocalVariable(name: "tmp", scope: !9383, file: !1358, line: 371, type: !9342)
!9393 = !DILocation(line: 0, scope: !9383)
!9394 = !DILocation(line: 371, column: 5, scope: !9383)
!9395 = !DILocation(line: 371, column: 13, scope: !9383)
!9396 = !DILocation(line: 373, column: 18, scope: !9383)
!9397 = !DILocation(line: 376, column: 15, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9383, file: !1358, line: 376, column: 9)
!9399 = !DILocation(line: 376, column: 30, scope: !9398)
!9400 = !DILocation(line: 376, column: 11, scope: !9398)
!9401 = !DILocation(line: 376, column: 9, scope: !9383)
!9402 = !DILocation(line: 377, column: 23, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !1358, line: 377, column: 9)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !1358, line: 377, column: 9)
!9405 = distinct !DILexicalBlock(scope: !9398, file: !1358, line: 376, column: 41)
!9406 = !DILocation(line: 377, column: 9, scope: !9404)
!9407 = !DILocation(line: 378, column: 13, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9403, file: !1358, line: 377, column: 80)
!9409 = !DILocation(line: 377, column: 41, scope: !9403)
!9410 = !DILocation(line: 377, column: 54, scope: !9403)
!9411 = !DILocation(line: 377, column: 67, scope: !9403)
!9412 = distinct !{!9412, !9406, !9413}
!9413 = !DILocation(line: 379, column: 9, scope: !9404)
!9414 = !DILocation(line: 382, column: 37, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9398, file: !1358, line: 382, column: 14)
!9416 = !DILocation(line: 382, column: 16, scope: !9415)
!9417 = !DILocation(line: 0, scope: !9415)
!9418 = !DILocation(line: 382, column: 14, scope: !9398)
!9419 = !DILocation(line: 391, column: 9, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !1358, line: 391, column: 9)
!9421 = distinct !DILexicalBlock(scope: !9415, file: !1358, line: 390, column: 13)
!9422 = !DILocation(line: 383, column: 9, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !1358, line: 383, column: 9)
!9424 = distinct !DILexicalBlock(scope: !9415, file: !1358, line: 382, column: 49)
!9425 = !DILocation(line: 384, column: 26, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !1358, line: 383, column: 80)
!9427 = distinct !DILexicalBlock(scope: !9423, file: !1358, line: 383, column: 9)
!9428 = !DILocation(line: 384, column: 24, scope: !9426)
!9429 = !DILocation(line: 385, column: 47, scope: !9426)
!9430 = !DILocation(line: 385, column: 26, scope: !9426)
!9431 = !DILocation(line: 385, column: 24, scope: !9426)
!9432 = !DILocation(line: 386, column: 13, scope: !9426)
!9433 = !DILocation(line: 383, column: 41, scope: !9427)
!9434 = !DILocation(line: 383, column: 54, scope: !9427)
!9435 = !DILocation(line: 383, column: 67, scope: !9427)
!9436 = !DILocation(line: 383, column: 23, scope: !9427)
!9437 = distinct !{!9437, !9422, !9438}
!9438 = !DILocation(line: 387, column: 9, scope: !9423)
!9439 = !DILocation(line: 392, column: 13, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !1358, line: 392, column: 13)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !1358, line: 391, column: 61)
!9442 = distinct !DILexicalBlock(scope: !9420, file: !1358, line: 391, column: 9)
!9443 = !DILocation(line: 393, column: 36, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9445, file: !1358, line: 392, column: 51)
!9445 = distinct !DILexicalBlock(scope: !9440, file: !1358, line: 392, column: 13)
!9446 = !DILocation(line: 393, column: 29, scope: !9444)
!9447 = !DILocation(line: 393, column: 17, scope: !9444)
!9448 = !DILocation(line: 393, column: 27, scope: !9444)
!9449 = !DILocation(line: 392, column: 47, scope: !9445)
!9450 = !DILocation(line: 392, column: 27, scope: !9445)
!9451 = !DILocation(line: 392, column: 31, scope: !9445)
!9452 = distinct !{!9452, !9439, !9453}
!9453 = !DILocation(line: 394, column: 13, scope: !9440)
!9454 = !DILocation(line: 395, column: 13, scope: !9441)
!9455 = !DILocation(line: 391, column: 41, scope: !9442)
!9456 = !DILocation(line: 391, column: 54, scope: !9442)
!9457 = !DILocation(line: 391, column: 23, scope: !9442)
!9458 = distinct !{!9458, !9419, !9459}
!9459 = !DILocation(line: 396, column: 9, scope: !9420)
!9460 = !DILocation(line: 398, column: 1, scope: !9383)
!9461 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1358, file: !1358, line: 414, type: !9462, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9464)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{null, !9157, !6323, !969, !9157, !9157}
!9464 = !{!9465, !9466, !9467, !9468, !9469, !9470, !9471, !9472, !9473, !9474}
!9465 = !DILocalVariable(name: "CS", arg: 1, scope: !9461, file: !1358, line: 414, type: !9157)
!9466 = !DILocalVariable(name: "cmd", arg: 2, scope: !9461, file: !1358, line: 414, type: !6323)
!9467 = !DILocalVariable(name: "data", arg: 3, scope: !9461, file: !1358, line: 414, type: !969)
!9468 = !DILocalVariable(name: "outl", arg: 4, scope: !9461, file: !1358, line: 414, type: !9157)
!9469 = !DILocalVariable(name: "inl", arg: 5, scope: !9461, file: !1358, line: 414, type: !9157)
!9470 = !DILocalVariable(name: "tmp", scope: !9461, file: !1358, line: 416, type: !61)
!9471 = !DILocalVariable(name: "i", scope: !9461, file: !1358, line: 417, type: !61)
!9472 = !DILocalVariable(name: "j", scope: !9461, file: !1358, line: 417, type: !61)
!9473 = !DILocalVariable(name: "p_data", scope: !9461, file: !1358, line: 418, type: !969)
!9474 = !DILocalVariable(name: "p_tmp", scope: !9461, file: !1358, line: 418, type: !969)
!9475 = !DILocation(line: 0, scope: !9461)
!9476 = !DILocation(line: 416, column: 5, scope: !9461)
!9477 = !DILocation(line: 422, column: 60, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !1358, line: 422, column: 5)
!9479 = distinct !DILexicalBlock(scope: !9461, file: !1358, line: 422, column: 5)
!9480 = !DILocation(line: 422, column: 5, scope: !9479)
!9481 = !DILocation(line: 423, column: 25, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1358, line: 423, column: 9)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !1358, line: 422, column: 83)
!9484 = !DILocation(line: 423, column: 32, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9482, file: !1358, line: 423, column: 9)
!9486 = !DILocation(line: 423, column: 9, scope: !9482)
!9487 = !DILocation(line: 424, column: 24, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9485, file: !1358, line: 423, column: 59)
!9489 = !DILocation(line: 424, column: 13, scope: !9488)
!9490 = !DILocation(line: 424, column: 22, scope: !9488)
!9491 = !DILocation(line: 423, column: 50, scope: !9485)
!9492 = !DILocation(line: 423, column: 55, scope: !9485)
!9493 = !DILocation(line: 423, column: 39, scope: !9485)
!9494 = distinct !{!9494, !9486, !9495}
!9495 = !DILocation(line: 425, column: 9, scope: !9482)
!9496 = !DILocation(line: 426, column: 9, scope: !9483)
!9497 = !DILocation(line: 0, scope: !9479)
!9498 = !DILocation(line: 422, column: 75, scope: !9478)
!9499 = distinct !{!9499, !9480, !9500}
!9500 = !DILocation(line: 427, column: 5, scope: !9479)
!9501 = !DILocation(line: 428, column: 25, scope: !9461)
!9502 = !DILocation(line: 429, column: 26, scope: !9461)
!9503 = !DILocation(line: 429, column: 24, scope: !9461)
!9504 = !DILocation(line: 430, column: 5, scope: !9461)
!9505 = !DILocation(line: 431, column: 5, scope: !9461)
!9506 = !DILocation(line: 433, column: 67, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !1358, line: 433, column: 5)
!9508 = distinct !DILexicalBlock(scope: !9461, file: !1358, line: 433, column: 5)
!9509 = !DILocation(line: 433, column: 5, scope: !9508)
!9510 = !DILocation(line: 433, column: 56, scope: !9508)
!9511 = !DILocation(line: 434, column: 17, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9507, file: !1358, line: 433, column: 100)
!9513 = !DILocation(line: 434, column: 15, scope: !9512)
!9514 = !DILocation(line: 433, column: 74, scope: !9507)
!9515 = !DILocation(line: 433, column: 79, scope: !9507)
!9516 = !DILocation(line: 433, column: 87, scope: !9507)
!9517 = distinct !{!9517, !9509, !9518}
!9518 = !DILocation(line: 435, column: 5, scope: !9508)
!9519 = !DILocation(line: 437, column: 1, scope: !9461)
!9520 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1358, file: !1358, line: 462, type: !9521, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9523)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{null, !9157, !6323}
!9523 = !{!9524, !9525, !9526, !9527, !9528}
!9524 = !DILocalVariable(name: "CS", arg: 1, scope: !9520, file: !1358, line: 462, type: !9157)
!9525 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !9520, file: !1358, line: 462, type: !6323)
!9526 = !DILocalVariable(name: "i", scope: !9520, file: !1358, line: 464, type: !61)
!9527 = !DILocalVariable(name: "val", scope: !9520, file: !1358, line: 465, type: !61)
!9528 = !DILocalVariable(name: "status", scope: !9529, file: !1358, line: 492, type: !463)
!9529 = distinct !DILexicalBlock(scope: !9530, file: !1358, line: 491, column: 47)
!9530 = distinct !DILexicalBlock(scope: !9531, file: !1358, line: 491, column: 13)
!9531 = distinct !DILexicalBlock(scope: !9520, file: !1358, line: 477, column: 17)
!9532 = !DILocation(line: 0, scope: !9520)
!9533 = !DILocation(line: 467, column: 17, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9520, file: !1358, line: 467, column: 9)
!9535 = !DILocation(line: 467, column: 9, scope: !9520)
!9536 = !DILocation(line: 474, column: 11, scope: !9520)
!9537 = !DILocation(line: 477, column: 5, scope: !9520)
!9538 = !DILocation(line: 478, column: 17, scope: !9531)
!9539 = !DILocation(line: 478, column: 9, scope: !9531)
!9540 = !DILocation(line: 481, column: 17, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !1358, line: 481, column: 17)
!9542 = distinct !DILexicalBlock(scope: !9531, file: !1358, line: 478, column: 29)
!9543 = !DILocation(line: 481, column: 17, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !1358, line: 481, column: 17)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !1358, line: 481, column: 17)
!9546 = distinct !DILexicalBlock(scope: !9541, file: !1358, line: 481, column: 17)
!9547 = !DILocation(line: 481, column: 17, scope: !9545)
!9548 = !DILocation(line: 481, column: 17, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9550, file: !1358, line: 481, column: 17)
!9550 = distinct !DILexicalBlock(scope: !9546, file: !1358, line: 481, column: 17)
!9551 = !DILocation(line: 484, column: 17, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9542, file: !1358, line: 484, column: 17)
!9553 = !DILocation(line: 484, column: 17, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !1358, line: 484, column: 17)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !1358, line: 484, column: 17)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !1358, line: 484, column: 17)
!9557 = !DILocation(line: 484, column: 17, scope: !9555)
!9558 = !DILocation(line: 484, column: 17, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9560, file: !1358, line: 484, column: 17)
!9560 = distinct !DILexicalBlock(scope: !9556, file: !1358, line: 484, column: 17)
!9561 = !DILocation(line: 0, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9563, file: !1358, line: 487, column: 17)
!9563 = distinct !DILexicalBlock(scope: !9542, file: !1358, line: 487, column: 17)
!9564 = !DILocation(line: 487, column: 17, scope: !9563)
!9565 = !DILocation(line: 487, column: 17, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !1358, line: 487, column: 17)
!9567 = distinct !DILexicalBlock(scope: !9562, file: !1358, line: 487, column: 17)
!9568 = !DILocation(line: 487, column: 17, scope: !9567)
!9569 = !DILocation(line: 487, column: 17, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1358, line: 487, column: 17)
!9571 = distinct !DILexicalBlock(scope: !9562, file: !1358, line: 487, column: 17)
!9572 = !DILocation(line: 487, column: 17, scope: !9571)
!9573 = !DILocation(line: 491, column: 23, scope: !9530)
!9574 = !DILocation(line: 491, column: 13, scope: !9530)
!9575 = !DILocation(line: 491, column: 28, scope: !9530)
!9576 = !DILocation(line: 491, column: 13, scope: !9531)
!9577 = !DILocation(line: 492, column: 13, scope: !9529)
!9578 = !DILocation(line: 494, column: 13, scope: !9529)
!9579 = !DILocation(line: 0, scope: !9529)
!9580 = !DILocation(line: 495, column: 17, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9529, file: !1358, line: 494, column: 16)
!9582 = !DILocation(line: 496, column: 22, scope: !9529)
!9583 = !DILocation(line: 496, column: 31, scope: !9529)
!9584 = !DILocation(line: 496, column: 29, scope: !9529)
!9585 = !DILocation(line: 496, column: 13, scope: !9581)
!9586 = distinct !{!9586, !9578, !9587}
!9587 = !DILocation(line: 496, column: 45, scope: !9529)
!9588 = !DILocation(line: 497, column: 9, scope: !9530)
!9589 = !DILocation(line: 503, column: 25, scope: !9531)
!9590 = !DILocation(line: 497, column: 9, scope: !9529)
!9591 = !DILocation(line: 500, column: 70, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9530, file: !1358, line: 499, column: 14)
!9593 = !DILocation(line: 500, column: 60, scope: !9592)
!9594 = !DILocation(line: 500, column: 13, scope: !9592)
!9595 = !DILocation(line: 503, column: 15, scope: !9531)
!9596 = !DILocation(line: 503, column: 11, scope: !9531)
!9597 = distinct !{!9597, !9537, !9598}
!9598 = !DILocation(line: 504, column: 5, scope: !9520)
!9599 = !DILocation(line: 505, column: 1, scope: !9520)
!9600 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1358, file: !1358, line: 514, type: !9601, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9603)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !9157, !969, !463}
!9603 = !{!9604, !9605, !9606}
!9604 = !DILocalVariable(name: "CS", arg: 1, scope: !9600, file: !1358, line: 514, type: !9157)
!9605 = !DILocalVariable(name: "id", arg: 2, scope: !9600, file: !1358, line: 514, type: !969)
!9606 = !DILocalVariable(name: "cmd", arg: 3, scope: !9600, file: !1358, line: 514, type: !463)
!9607 = !DILocation(line: 0, scope: !9600)
!9608 = !DILocation(line: 517, column: 5, scope: !9600)
!9609 = !DILocation(line: 518, column: 1, scope: !9600)
!9610 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1358, file: !1358, line: 521, type: !9611, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9613)
!9611 = !DISubroutineType(types: !9612)
!9612 = !{null, !9157, !969}
!9613 = !{!9614, !9615}
!9614 = !DILocalVariable(name: "CS", arg: 1, scope: !9610, file: !1358, line: 521, type: !9157)
!9615 = !DILocalVariable(name: "id", arg: 2, scope: !9610, file: !1358, line: 521, type: !969)
!9616 = !DILocation(line: 0, scope: !9610)
!9617 = !DILocation(line: 523, column: 5, scope: !9610)
!9618 = !DILocation(line: 524, column: 1, scope: !9610)
!9619 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1358, file: !1358, line: 536, type: !9620, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !293)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!9622}
!9622 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1361, line: 57, baseType: !1360)
!9623 = !DILocation(line: 540, column: 5, scope: !9619)
!9624 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1358, file: !1358, line: 561, type: !9625, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !293)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!9627}
!9627 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1361, line: 66, baseType: !1368)
!9628 = !DILocation(line: 564, column: 15, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !1358, line: 564, column: 9)
!9630 = !DILocation(line: 564, column: 31, scope: !9629)
!9631 = !DILocation(line: 564, column: 45, scope: !9629)
!9632 = !DILocation(line: 0, scope: !9629)
!9633 = !DILocation(line: 569, column: 1, scope: !9624)
!9634 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1358, file: !1358, line: 580, type: !9635, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9637)
!9635 = !DISubroutineType(types: !9636)
!9636 = !{!91, !969}
!9637 = !{!9638, !9639}
!9638 = !DILocalVariable(name: "buffer", arg: 1, scope: !9634, file: !1358, line: 580, type: !969)
!9639 = !DILocalVariable(name: "i", scope: !9634, file: !1358, line: 582, type: !7)
!9640 = !DILocation(line: 0, scope: !9634)
!9641 = !DILocation(line: 583, column: 5, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9634, file: !1358, line: 583, column: 5)
!9643 = !DILocation(line: 584, column: 9, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !1358, line: 583, column: 29)
!9645 = distinct !DILexicalBlock(scope: !9642, file: !1358, line: 583, column: 5)
!9646 = !DILocation(line: 584, column: 19, scope: !9644)
!9647 = !DILocation(line: 583, column: 25, scope: !9645)
!9648 = !DILocation(line: 583, column: 19, scope: !9645)
!9649 = distinct !{!9649, !9641, !9650}
!9650 = !DILocation(line: 585, column: 5, scope: !9642)
!9651 = !DILocation(line: 586, column: 5, scope: !9634)
!9652 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1358, file: !1358, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !9653)
!9653 = !{!9654}
!9654 = !DILocalVariable(name: "D", scope: !9652, file: !1358, line: 615, type: !9028)
!9655 = !DILocation(line: 0, scope: !9652)
!9656 = !DILocation(line: 616, column: 32, scope: !9652)
!9657 = !DILocation(line: 616, column: 37, scope: !9652)
!9658 = !DILocation(line: 616, column: 27, scope: !9652)
!9659 = !DILocation(line: 617, column: 44, scope: !9652)
!9660 = !DILocation(line: 617, column: 31, scope: !9652)
!9661 = !DILocation(line: 617, column: 28, scope: !9652)
!9662 = !DILocation(line: 618, column: 32, scope: !9652)
!9663 = !DILocation(line: 618, column: 31, scope: !9652)
!9664 = !DILocation(line: 618, column: 29, scope: !9652)
!9665 = !DILocation(line: 621, column: 31, scope: !9652)
!9666 = !DILocation(line: 621, column: 24, scope: !9652)
!9667 = !DILocation(line: 622, column: 34, scope: !9652)
!9668 = !DILocation(line: 622, column: 27, scope: !9652)
!9669 = !DILocation(line: 623, column: 32, scope: !9652)
!9670 = !DILocation(line: 623, column: 25, scope: !9652)
!9671 = !DILocation(line: 624, column: 33, scope: !9652)
!9672 = !DILocation(line: 624, column: 26, scope: !9652)
!9673 = !DILocation(line: 625, column: 33, scope: !9652)
!9674 = !DILocation(line: 625, column: 26, scope: !9652)
!9675 = !DILocation(line: 629, column: 32, scope: !9652)
!9676 = !DILocation(line: 629, column: 47, scope: !9652)
!9677 = !DILocation(line: 629, column: 25, scope: !9652)
!9678 = !DILocation(line: 630, column: 32, scope: !9652)
!9679 = !DILocation(line: 630, column: 47, scope: !9652)
!9680 = !DILocation(line: 630, column: 25, scope: !9652)
!9681 = !DILocation(line: 633, column: 24, scope: !9652)
!9682 = !DILocation(line: 633, column: 31, scope: !9652)
!9683 = !DILocation(line: 633, column: 36, scope: !9652)
!9684 = !DILocation(line: 633, column: 28, scope: !9652)
!9685 = !DILocation(line: 633, column: 5, scope: !9652)
!9686 = !DILocation(line: 635, column: 5, scope: !9652)
!9687 = !DILocation(line: 636, column: 1, scope: !9652)
!9688 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1358, file: !1358, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !293)
!9689 = !DILocation(line: 644, column: 26, scope: !9688)
!9690 = !DILocation(line: 644, column: 24, scope: !9688)
!9691 = !DILocation(line: 645, column: 29, scope: !9688)
!9692 = !DILocation(line: 645, column: 27, scope: !9688)
!9693 = !DILocation(line: 646, column: 27, scope: !9688)
!9694 = !DILocation(line: 646, column: 25, scope: !9688)
!9695 = !DILocation(line: 647, column: 28, scope: !9688)
!9696 = !DILocation(line: 647, column: 26, scope: !9688)
!9697 = !DILocation(line: 648, column: 27, scope: !9688)
!9698 = !DILocation(line: 648, column: 25, scope: !9688)
!9699 = !DILocation(line: 652, column: 32, scope: !9688)
!9700 = !DILocation(line: 652, column: 47, scope: !9688)
!9701 = !DILocation(line: 652, column: 25, scope: !9688)
!9702 = !DILocation(line: 655, column: 24, scope: !9688)
!9703 = !DILocation(line: 655, column: 5, scope: !9688)
!9704 = !DILocation(line: 657, column: 5, scope: !9688)
!9705 = !DILocation(line: 660, column: 9, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9688, file: !1358, line: 660, column: 9)
!9707 = !DILocation(line: 660, column: 59, scope: !9706)
!9708 = !DILocation(line: 660, column: 38, scope: !9706)
!9709 = !DILocation(line: 660, column: 37, scope: !9706)
!9710 = !DILocation(line: 660, column: 33, scope: !9706)
!9711 = !DILocation(line: 660, column: 9, scope: !9688)
!9712 = !DILocation(line: 661, column: 9, scope: !9706)
!9713 = distinct !{!9713, !9712, !9714}
!9714 = !DILocation(line: 661, column: 18, scope: !9706)
!9715 = !DILocation(line: 662, column: 1, scope: !9688)
!9716 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1358, file: !1358, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !293)
!9717 = !DILocation(line: 671, column: 9, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9716, file: !1358, line: 671, column: 9)
!9719 = !DILocation(line: 671, column: 40, scope: !9718)
!9720 = !DILocation(line: 671, column: 9, scope: !9716)
!9721 = !DILocation(line: 672, column: 47, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9718, file: !1358, line: 671, column: 46)
!9723 = !DILocation(line: 672, column: 40, scope: !9722)
!9724 = !DILocation(line: 673, column: 5, scope: !9722)
!9725 = !DILocation(line: 674, column: 9, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9716, file: !1358, line: 674, column: 9)
!9727 = !DILocation(line: 674, column: 41, scope: !9726)
!9728 = !DILocation(line: 674, column: 9, scope: !9716)
!9729 = !DILocation(line: 675, column: 48, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9726, file: !1358, line: 674, column: 47)
!9731 = !DILocation(line: 675, column: 41, scope: !9730)
!9732 = !DILocation(line: 676, column: 5, scope: !9730)
!9733 = !DILocation(line: 679, column: 33, scope: !9716)
!9734 = !DILocation(line: 679, column: 48, scope: !9716)
!9735 = !DILocation(line: 679, column: 25, scope: !9716)
!9736 = !DILocation(line: 680, column: 25, scope: !9716)
!9737 = !DILocation(line: 686, column: 5, scope: !9716)
!9738 = !DILocation(line: 688, column: 1, scope: !9716)
!9739 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1358, file: !1358, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1357, retainedNodes: !293)
!9740 = !DILocation(line: 692, column: 9, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9739, file: !1358, line: 692, column: 9)
!9742 = !DILocation(line: 692, column: 40, scope: !9741)
!9743 = !DILocation(line: 692, column: 9, scope: !9739)
!9744 = !DILocation(line: 693, column: 29, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9741, file: !1358, line: 692, column: 46)
!9746 = !DILocation(line: 694, column: 5, scope: !9745)
!9747 = !DILocation(line: 695, column: 9, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9739, file: !1358, line: 695, column: 9)
!9749 = !DILocation(line: 695, column: 41, scope: !9748)
!9750 = !DILocation(line: 695, column: 9, scope: !9739)
!9751 = !DILocation(line: 696, column: 29, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9748, file: !1358, line: 695, column: 47)
!9753 = !DILocation(line: 697, column: 5, scope: !9752)
!9754 = !DILocation(line: 698, column: 5, scope: !9739)
!9755 = !DILocation(line: 699, column: 1, scope: !9739)
!9756 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1454, file: !1454, line: 91, type: !4163, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9757)
!9757 = !{!9758}
!9758 = !DILocalVariable(name: "counter", scope: !9756, file: !1454, line: 102, type: !61)
!9759 = !DILocation(line: 0, scope: !9756)
!9760 = !DILocation(line: 110, column: 5, scope: !9756)
!9761 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1454, file: !1454, line: 114, type: !4163, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9762)
!9762 = !{!9763}
!9763 = !DILocalVariable(name: "counter", scope: !9761, file: !1454, line: 125, type: !61)
!9764 = !DILocation(line: 0, scope: !9761)
!9765 = !DILocation(line: 133, column: 5, scope: !9761)
!9766 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1454, file: !1454, line: 137, type: !4302, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9767)
!9767 = !{!9768}
!9768 = !DILocalVariable(name: "delay_us", arg: 1, scope: !9766, file: !1454, line: 137, type: !61)
!9769 = !DILocation(line: 0, scope: !9766)
!9770 = !DILocation(line: 142, column: 5, scope: !9766)
!9771 = !DILocation(line: 144, column: 1, scope: !9766)
!9772 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1454, file: !1454, line: 163, type: !4163, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9773)
!9773 = !{!9774}
!9774 = !DILocalVariable(name: "mask", scope: !9772, file: !1454, line: 165, type: !61)
!9775 = !DILocation(line: 166, column: 12, scope: !9772)
!9776 = !DILocation(line: 0, scope: !9772)
!9777 = !DILocation(line: 167, column: 5, scope: !9772)
!9778 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1454, file: !1454, line: 171, type: !4302, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9779)
!9779 = !{!9780}
!9780 = !DILocalVariable(name: "mask", arg: 1, scope: !9778, file: !1454, line: 171, type: !61)
!9781 = !DILocation(line: 0, scope: !9778)
!9782 = !DILocation(line: 173, column: 5, scope: !9778)
!9783 = !DILocation(line: 174, column: 1, scope: !9778)
!9784 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1454, file: !1454, line: 199, type: !1724, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9785)
!9785 = !{!9786}
!9786 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9784, file: !1454, line: 199, type: !88)
!9787 = !DILocation(line: 0, scope: !9784)
!9788 = !DILocation(line: 201, column: 5, scope: !9784)
!9789 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1454, file: !1454, line: 388, type: !9790, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !293)
!9790 = !DISubroutineType(types: !9791)
!9791 = !{!1335}
!9792 = !DILocation(line: 390, column: 5, scope: !9789)
!9793 = distinct !DISubprogram(name: "CompareData", scope: !1454, file: !1454, line: 872, type: !9794, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9796)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!91, !88, !88, !61}
!9796 = !{!9797, !9798, !9799, !9800, !9801, !9804, !9805, !9808, !9809, !9811}
!9797 = !DILocalVariable(name: "Address", arg: 1, scope: !9793, file: !1454, line: 872, type: !88)
!9798 = !DILocalVariable(name: "Data", arg: 2, scope: !9793, file: !1454, line: 872, type: !88)
!9799 = !DILocalVariable(name: "Length", arg: 3, scope: !9793, file: !1454, line: 872, type: !61)
!9800 = !DILocalVariable(name: "i", scope: !9793, file: !1454, line: 874, type: !61)
!9801 = !DILocalVariable(name: "Source", scope: !9802, file: !1454, line: 877, type: !1395)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !1454, line: 876, column: 74)
!9803 = distinct !DILexicalBlock(scope: !9793, file: !1454, line: 876, column: 9)
!9804 = !DILocalVariable(name: "Dest", scope: !9802, file: !1454, line: 878, type: !1395)
!9805 = !DILocalVariable(name: "Source", scope: !9806, file: !1454, line: 885, type: !1426)
!9806 = distinct !DILexicalBlock(scope: !9807, file: !1454, line: 884, column: 79)
!9807 = distinct !DILexicalBlock(scope: !9803, file: !1454, line: 884, column: 16)
!9808 = !DILocalVariable(name: "Dest", scope: !9806, file: !1454, line: 886, type: !1426)
!9809 = !DILocalVariable(name: "Source", scope: !9810, file: !1454, line: 893, type: !969)
!9810 = distinct !DILexicalBlock(scope: !9807, file: !1454, line: 892, column: 12)
!9811 = !DILocalVariable(name: "Dest", scope: !9810, file: !1454, line: 894, type: !969)
!9812 = !DILocation(line: 0, scope: !9793)
!9813 = !DILocation(line: 876, column: 11, scope: !9803)
!9814 = !DILocation(line: 876, column: 42, scope: !9803)
!9815 = !DILocation(line: 877, column: 28, scope: !9802)
!9816 = !DILocation(line: 0, scope: !9802)
!9817 = !DILocation(line: 878, column: 26, scope: !9802)
!9818 = !DILocation(line: 879, column: 23, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !1454, line: 879, column: 9)
!9820 = distinct !DILexicalBlock(scope: !9802, file: !1454, line: 879, column: 9)
!9821 = !DILocation(line: 879, column: 9, scope: !9820)
!9822 = !DILocation(line: 880, column: 17, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !1454, line: 880, column: 17)
!9824 = distinct !DILexicalBlock(scope: !9819, file: !1454, line: 879, column: 68)
!9825 = !DILocation(line: 880, column: 30, scope: !9823)
!9826 = !DILocation(line: 880, column: 27, scope: !9823)
!9827 = !DILocation(line: 879, column: 64, scope: !9819)
!9828 = !DILocation(line: 880, column: 17, scope: !9824)
!9829 = distinct !{!9829, !9821, !9830}
!9830 = !DILocation(line: 883, column: 9, scope: !9820)
!9831 = !DILocation(line: 884, column: 47, scope: !9807)
!9832 = !DILocation(line: 895, column: 23, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !1454, line: 895, column: 9)
!9834 = distinct !DILexicalBlock(scope: !9810, file: !1454, line: 895, column: 9)
!9835 = !DILocation(line: 895, column: 9, scope: !9834)
!9836 = !DILocation(line: 885, column: 28, scope: !9806)
!9837 = !DILocation(line: 0, scope: !9806)
!9838 = !DILocation(line: 886, column: 26, scope: !9806)
!9839 = !DILocation(line: 887, column: 23, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !1454, line: 887, column: 9)
!9841 = distinct !DILexicalBlock(scope: !9806, file: !1454, line: 887, column: 9)
!9842 = !DILocation(line: 887, column: 9, scope: !9841)
!9843 = !DILocation(line: 888, column: 17, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !1454, line: 888, column: 17)
!9845 = distinct !DILexicalBlock(scope: !9840, file: !1454, line: 887, column: 68)
!9846 = !DILocation(line: 888, column: 30, scope: !9844)
!9847 = !DILocation(line: 888, column: 27, scope: !9844)
!9848 = !DILocation(line: 887, column: 64, scope: !9840)
!9849 = !DILocation(line: 888, column: 17, scope: !9845)
!9850 = distinct !{!9850, !9842, !9851}
!9851 = !DILocation(line: 891, column: 9, scope: !9841)
!9852 = !DILocation(line: 896, column: 17, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !1454, line: 896, column: 17)
!9854 = distinct !DILexicalBlock(scope: !9833, file: !1454, line: 895, column: 38)
!9855 = !DILocation(line: 896, column: 30, scope: !9853)
!9856 = !DILocation(line: 896, column: 27, scope: !9853)
!9857 = !DILocation(line: 895, column: 34, scope: !9833)
!9858 = !DILocation(line: 896, column: 17, scope: !9854)
!9859 = distinct !{!9859, !9835, !9860}
!9860 = !DILocation(line: 899, column: 9, scope: !9834)
!9861 = !DILocation(line: 902, column: 1, scope: !9793)
!9862 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1454, file: !1454, line: 919, type: !9863, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9865)
!9863 = !DISubroutineType(types: !9864)
!9864 = !{null, !88, !88, !61}
!9865 = !{!9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876}
!9866 = !DILocalVariable(name: "Target", arg: 1, scope: !9862, file: !1454, line: 919, type: !88)
!9867 = !DILocalVariable(name: "Data", arg: 2, scope: !9862, file: !1454, line: 919, type: !88)
!9868 = !DILocalVariable(name: "Size", arg: 3, scope: !9862, file: !1454, line: 919, type: !61)
!9869 = !DILocalVariable(name: "D", scope: !9862, file: !1454, line: 921, type: !1624)
!9870 = !DILocalVariable(name: "address", scope: !9862, file: !1454, line: 922, type: !61)
!9871 = !DILocalVariable(name: "p_data", scope: !9862, file: !1454, line: 923, type: !969)
!9872 = !DILocalVariable(name: "cmd1", scope: !9862, file: !1454, line: 924, type: !61)
!9873 = !DILocalVariable(name: "length", scope: !9862, file: !1454, line: 924, type: !61)
!9874 = !DILocalVariable(name: "written", scope: !9862, file: !1454, line: 924, type: !61)
!9875 = !DILocalVariable(name: "status", scope: !9862, file: !1454, line: 925, type: !1676)
!9876 = !DILocalVariable(name: "savedMask", scope: !9862, file: !1454, line: 926, type: !61)
!9877 = !DILocation(line: 0, scope: !9862)
!9878 = !DILocation(line: 921, column: 60, scope: !9862)
!9879 = !DILocation(line: 923, column: 5, scope: !9862)
!9880 = !DILocation(line: 923, column: 19, scope: !9862)
!9881 = !DILocation(line: 924, column: 5, scope: !9862)
!9882 = !DILocation(line: 932, column: 9, scope: !9862)
!9883 = !DILocation(line: 933, column: 8, scope: !9862)
!9884 = !DILocation(line: 933, column: 21, scope: !9862)
!9885 = !DILocation(line: 935, column: 14, scope: !9862)
!9886 = !DILocation(line: 935, column: 5, scope: !9862)
!9887 = !DILocation(line: 922, column: 29, scope: !9862)
!9888 = !DILocation(line: 937, column: 18, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9862, file: !1454, line: 935, column: 23)
!9890 = !DILocation(line: 937, column: 35, scope: !9889)
!9891 = !DILocation(line: 937, column: 74, scope: !9889)
!9892 = !DILocation(line: 937, column: 50, scope: !9889)
!9893 = !DILocation(line: 937, column: 39, scope: !9889)
!9894 = !DILocation(line: 940, column: 35, scope: !9889)
!9895 = !DILocation(line: 940, column: 29, scope: !9889)
!9896 = !DILocation(line: 940, column: 16, scope: !9889)
!9897 = !DILocation(line: 942, column: 18, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9889, file: !1454, line: 942, column: 13)
!9899 = !DILocation(line: 942, column: 29, scope: !9898)
!9900 = !DILocation(line: 942, column: 13, scope: !9889)
!9901 = !DILocation(line: 943, column: 13, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9898, file: !1454, line: 942, column: 55)
!9903 = !DILocation(line: 944, column: 9, scope: !9902)
!9904 = !DILocation(line: 947, column: 16, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9889, file: !1454, line: 947, column: 13)
!9906 = !DILocation(line: 947, column: 29, scope: !9905)
!9907 = !DILocation(line: 0, scope: !9905)
!9908 = !DILocation(line: 947, column: 13, scope: !9889)
!9909 = !DILocation(line: 948, column: 20, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9905, file: !1454, line: 947, column: 35)
!9911 = !DILocation(line: 949, column: 32, scope: !9910)
!9912 = !DILocation(line: 949, column: 40, scope: !9910)
!9913 = !DILocation(line: 949, column: 13, scope: !9910)
!9914 = !DILocation(line: 950, column: 9, scope: !9910)
!9915 = !DILocation(line: 953, column: 20, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9905, file: !1454, line: 952, column: 9)
!9917 = !DILocation(line: 954, column: 32, scope: !9916)
!9918 = !DILocation(line: 954, column: 40, scope: !9916)
!9919 = !DILocation(line: 954, column: 13, scope: !9916)
!9920 = !DILocation(line: 957, column: 21, scope: !9889)
!9921 = !DILocation(line: 963, column: 45, scope: !9889)
!9922 = !DILocation(line: 963, column: 42, scope: !9889)
!9923 = !DILocation(line: 963, column: 40, scope: !9889)
!9924 = !DILocation(line: 963, column: 58, scope: !9889)
!9925 = !DILocation(line: 963, column: 29, scope: !9889)
!9926 = !DILocation(line: 964, column: 28, scope: !9889)
!9927 = !DILocation(line: 965, column: 37, scope: !9889)
!9928 = !DILocation(line: 966, column: 9, scope: !9889)
!9929 = !DILocation(line: 967, column: 26, scope: !9889)
!9930 = !DILocation(line: 967, column: 9, scope: !9889)
!9931 = !DILocation(line: 968, column: 29, scope: !9889)
!9932 = !DILocation(line: 968, column: 9, scope: !9889)
!9933 = !DILocation(line: 972, column: 9, scope: !9889)
!9934 = !DILocation(line: 978, column: 9, scope: !9889)
!9935 = !DILocation(line: 979, column: 50, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9889, file: !1454, line: 978, column: 22)
!9937 = !DILocation(line: 979, column: 55, scope: !9936)
!9938 = !DILocation(line: 979, column: 22, scope: !9936)
!9939 = !DILocation(line: 980, column: 35, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9936, file: !1454, line: 980, column: 17)
!9941 = !DILocation(line: 980, column: 32, scope: !9940)
!9942 = !DILocation(line: 980, column: 30, scope: !9940)
!9943 = !DILocation(line: 980, column: 19, scope: !9940)
!9944 = !DILocation(line: 980, column: 17, scope: !9936)
!9945 = distinct !{!9945, !9934, !9946}
!9946 = !DILocation(line: 983, column: 9, scope: !9889)
!9947 = !DILocation(line: 991, column: 9, scope: !9889)
!9948 = !DILocation(line: 993, column: 19, scope: !9889)
!9949 = !DILocation(line: 993, column: 16, scope: !9889)
!9950 = !DILocation(line: 994, column: 14, scope: !9889)
!9951 = !DILocation(line: 995, column: 17, scope: !9889)
!9952 = distinct !{!9952, !9886, !9953}
!9953 = !DILocation(line: 996, column: 5, scope: !9862)
!9954 = !DILocation(line: 998, column: 21, scope: !9862)
!9955 = !DILocation(line: 1005, column: 9, scope: !9862)
!9956 = !DILocation(line: 1008, column: 1, scope: !9862)
!9957 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1454, file: !1454, line: 1427, type: !9958, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9960)
!9958 = !DISubroutineType(types: !9959)
!9959 = !{null, !1624}
!9960 = !{!9961, !9962}
!9961 = !DILocalVariable(name: "D", arg: 1, scope: !9957, file: !1454, line: 1427, type: !1624)
!9962 = !DILocalVariable(name: "Result", scope: !9957, file: !1454, line: 1429, type: !2289)
!9963 = !DILocation(line: 0, scope: !9957)
!9964 = !DILocation(line: 1430, column: 5, scope: !9957)
!9965 = !DILocation(line: 1431, column: 18, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9957, file: !1454, line: 1430, column: 8)
!9967 = !DILocation(line: 1432, column: 21, scope: !9957)
!9968 = !DILocation(line: 1432, column: 5, scope: !9966)
!9969 = distinct !{!9969, !9964, !9970}
!9970 = !DILocation(line: 1432, column: 43, scope: !9957)
!9971 = !DILocation(line: 1433, column: 1, scope: !9957)
!9972 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1454, file: !1454, line: 3478, type: !9958, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9973)
!9973 = !{!9974}
!9974 = !DILocalVariable(name: "D", arg: 1, scope: !9972, file: !1454, line: 3478, type: !1624)
!9975 = !DILocation(line: 0, scope: !9972)
!9976 = !DILocation(line: 3480, column: 30, scope: !9972)
!9977 = !DILocation(line: 3480, column: 35, scope: !9972)
!9978 = !DILocation(line: 3480, column: 27, scope: !9972)
!9979 = !DILocation(line: 3480, column: 5, scope: !9972)
!9980 = !DILocation(line: 3481, column: 1, scope: !9972)
!9981 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1454, file: !1454, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9982)
!9982 = !{!9983}
!9983 = !DILocalVariable(name: "savedMask", scope: !9981, file: !1454, line: 2384, type: !61)
!9984 = !DILocation(line: 2385, column: 17, scope: !9981)
!9985 = !DILocation(line: 0, scope: !9981)
!9986 = !DILocation(line: 2390, column: 20, scope: !9981)
!9987 = !DILocation(line: 2391, column: 5, scope: !9981)
!9988 = !DILocation(line: 2392, column: 1, scope: !9981)
!9989 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1454, file: !1454, line: 3536, type: !9990, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !9992)
!9990 = !DISubroutineType(types: !9991)
!9991 = !{!61, !1624, !463}
!9992 = !{!9993, !9994, !9995, !9996}
!9993 = !DILocalVariable(name: "D", arg: 1, scope: !9989, file: !1454, line: 3536, type: !1624)
!9994 = !DILocalVariable(name: "cmd", arg: 2, scope: !9989, file: !1454, line: 3536, type: !463)
!9995 = !DILocalVariable(name: "savedMask", scope: !9989, file: !1454, line: 3538, type: !61)
!9996 = !DILocalVariable(name: "result", scope: !9989, file: !1454, line: 3539, type: !61)
!9997 = !DILocation(line: 0, scope: !9989)
!9998 = !DILocation(line: 3541, column: 17, scope: !9989)
!9999 = !DILocation(line: 3542, column: 22, scope: !9989)
!10000 = !DILocation(line: 3542, column: 5, scope: !9989)
!10001 = !DILocation(line: 3543, column: 35, scope: !9989)
!10002 = !DILocation(line: 3543, column: 33, scope: !9989)
!10003 = !DILocation(line: 3544, column: 25, scope: !9989)
!10004 = !DILocation(line: 3545, column: 24, scope: !9989)
!10005 = !DILocation(line: 3546, column: 25, scope: !9989)
!10006 = !DILocation(line: 3546, column: 5, scope: !9989)
!10007 = !DILocation(line: 3547, column: 42, scope: !9989)
!10008 = !DILocation(line: 3547, column: 60, scope: !9989)
!10009 = !DILocation(line: 3547, column: 14, scope: !9989)
!10010 = !DILocation(line: 3548, column: 5, scope: !9989)
!10011 = !DILocation(line: 3550, column: 5, scope: !9989)
!10012 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1454, file: !1454, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10013)
!10013 = !{!10014}
!10014 = !DILocalVariable(name: "savedMask", scope: !10012, file: !1454, line: 2395, type: !61)
!10015 = !DILocation(line: 2396, column: 17, scope: !10012)
!10016 = !DILocation(line: 0, scope: !10012)
!10017 = !DILocation(line: 2401, column: 20, scope: !10012)
!10018 = !DILocation(line: 2402, column: 5, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10020, file: !1454, line: 2402, column: 5)
!10020 = distinct !DILexicalBlock(scope: !10012, file: !1454, line: 2402, column: 5)
!10021 = !DILocation(line: 2403, column: 5, scope: !10012)
!10022 = !DILocation(line: 2404, column: 1, scope: !10012)
!10023 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1454, file: !1454, line: 1440, type: !9958, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10024)
!10024 = !{!10025, !10026}
!10025 = !DILocalVariable(name: "D", arg: 1, scope: !10023, file: !1454, line: 1440, type: !1624)
!10026 = !DILocalVariable(name: "savedMask", scope: !10023, file: !1454, line: 1442, type: !1335)
!10027 = !DILocation(line: 0, scope: !10023)
!10028 = !DILocation(line: 1443, column: 17, scope: !10023)
!10029 = !DILocation(line: 1444, column: 9, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10023, file: !1454, line: 1444, column: 9)
!10031 = !DILocation(line: 1444, column: 9, scope: !10023)
!10032 = !DILocation(line: 1445, column: 17, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10030, file: !1454, line: 1444, column: 24)
!10034 = !DILocation(line: 1446, column: 9, scope: !10033)
!10035 = !DILocation(line: 1451, column: 1, scope: !10023)
!10036 = !DILocation(line: 1448, column: 9, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10030, file: !1454, line: 1447, column: 12)
!10038 = !DILocation(line: 1449, column: 9, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10040, file: !1454, line: 1449, column: 9)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !1454, line: 1449, column: 9)
!10041 = distinct !DILexicalBlock(scope: !10037, file: !1454, line: 1449, column: 9)
!10042 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1454, file: !1454, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10043)
!10043 = !{!10044, !10045, !10046, !10047}
!10044 = !DILocalVariable(name: "D", scope: !10042, file: !1454, line: 1029, type: !1624)
!10045 = !DILocalVariable(name: "status", scope: !10042, file: !1454, line: 1030, type: !1676)
!10046 = !DILocalVariable(name: "savedMask", scope: !10042, file: !1454, line: 1031, type: !61)
!10047 = !DILocalVariable(name: "duration", scope: !10048, file: !1454, line: 1231, type: !61)
!10048 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1230, column: 5)
!10049 = !DILocation(line: 0, scope: !10042)
!10050 = !DILocation(line: 1033, column: 17, scope: !10042)
!10051 = !DILocation(line: 1034, column: 8, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1034, column: 8)
!10053 = !DILocation(line: 1034, column: 30, scope: !10052)
!10054 = !DILocation(line: 1034, column: 8, scope: !10042)
!10055 = !DILocation(line: 1039, column: 27, scope: !10042)
!10056 = !DILocation(line: 1058, column: 48, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1055, column: 5)
!10058 = !DILocation(line: 1069, column: 5, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !1454, line: 1069, column: 5)
!10060 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1069, column: 5)
!10061 = !DILocation(line: 1069, column: 5, scope: !10060)
!10062 = !DILocation(line: 1069, column: 5, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10059, file: !1454, line: 1069, column: 5)
!10064 = !DILocation(line: 1075, column: 10, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1075, column: 9)
!10066 = !DILocation(line: 1075, column: 27, scope: !10065)
!10067 = !DILocation(line: 1075, column: 33, scope: !10065)
!10068 = !DILocation(line: 1075, column: 40, scope: !10065)
!10069 = !DILocation(line: 1075, column: 53, scope: !10065)
!10070 = !DILocation(line: 1075, column: 9, scope: !10042)
!10071 = !DILocation(line: 1084, column: 9, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10065, file: !1454, line: 1083, column: 11)
!10073 = !DILocation(line: 1085, column: 50, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10072, file: !1454, line: 1084, column: 21)
!10075 = !DILocation(line: 1085, column: 55, scope: !10074)
!10076 = !DILocation(line: 1085, column: 22, scope: !10074)
!10077 = !DILocation(line: 1086, column: 35, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10074, file: !1454, line: 1086, column: 17)
!10079 = !DILocation(line: 1086, column: 32, scope: !10078)
!10080 = !DILocation(line: 1086, column: 30, scope: !10078)
!10081 = !DILocation(line: 1086, column: 19, scope: !10078)
!10082 = !DILocation(line: 1086, column: 17, scope: !10074)
!10083 = distinct !{!10083, !10071, !10084}
!10084 = !DILocation(line: 1089, column: 9, scope: !10072)
!10085 = !DILocation(line: 1107, column: 11, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1107, column: 9)
!10087 = !DILocation(line: 1107, column: 30, scope: !10086)
!10088 = !DILocation(line: 1117, column: 46, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10086, file: !1454, line: 1107, column: 53)
!10090 = !DILocation(line: 1117, column: 51, scope: !10089)
!10091 = !DILocation(line: 1117, column: 18, scope: !10089)
!10092 = !DILocation(line: 1120, column: 31, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10089, file: !1454, line: 1120, column: 13)
!10094 = !DILocation(line: 1120, column: 28, scope: !10093)
!10095 = !DILocation(line: 1120, column: 26, scope: !10093)
!10096 = !DILocation(line: 1120, column: 15, scope: !10093)
!10097 = !DILocation(line: 1120, column: 13, scope: !10089)
!10098 = !DILocation(line: 1128, column: 13, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10093, file: !1454, line: 1120, column: 55)
!10100 = !DILocation(line: 1131, column: 13, scope: !10099)
!10101 = !DILocation(line: 1132, column: 54, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10099, file: !1454, line: 1131, column: 23)
!10103 = !DILocation(line: 1132, column: 59, scope: !10102)
!10104 = !DILocation(line: 1132, column: 26, scope: !10102)
!10105 = !DILocation(line: 1133, column: 39, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10102, file: !1454, line: 1133, column: 21)
!10107 = !DILocation(line: 1133, column: 36, scope: !10106)
!10108 = !DILocation(line: 1133, column: 34, scope: !10106)
!10109 = !DILocation(line: 1133, column: 23, scope: !10106)
!10110 = !DILocation(line: 1133, column: 21, scope: !10102)
!10111 = distinct !{!10111, !10100, !10112}
!10112 = !DILocation(line: 1158, column: 13, scope: !10099)
!10113 = !DILocation(line: 1162, column: 21, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10099, file: !1454, line: 1162, column: 17)
!10115 = !DILocation(line: 1162, column: 32, scope: !10114)
!10116 = !DILocation(line: 1162, column: 51, scope: !10114)
!10117 = !DILocation(line: 1162, column: 58, scope: !10114)
!10118 = !DILocation(line: 1162, column: 71, scope: !10114)
!10119 = !DILocation(line: 1162, column: 17, scope: !10099)
!10120 = !DILocation(line: 1164, column: 45, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10114, file: !1454, line: 1162, column: 91)
!10122 = !DILocation(line: 1165, column: 36, scope: !10121)
!10123 = !DILocation(line: 1166, column: 37, scope: !10121)
!10124 = !DILocation(line: 1167, column: 34, scope: !10121)
!10125 = !DILocation(line: 1167, column: 17, scope: !10121)
!10126 = !DILocation(line: 1168, column: 37, scope: !10121)
!10127 = !DILocation(line: 1168, column: 17, scope: !10121)
!10128 = !DILocation(line: 1171, column: 50, scope: !10121)
!10129 = !DILocation(line: 1172, column: 37, scope: !10121)
!10130 = !DILocation(line: 1173, column: 45, scope: !10121)
!10131 = !DILocation(line: 1174, column: 34, scope: !10121)
!10132 = !DILocation(line: 1174, column: 17, scope: !10121)
!10133 = !DILocation(line: 1175, column: 37, scope: !10121)
!10134 = !DILocation(line: 1175, column: 17, scope: !10121)
!10135 = !DILocation(line: 1178, column: 17, scope: !10121)
!10136 = !DILocation(line: 1179, column: 49, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10121, file: !1454, line: 1178, column: 20)
!10138 = !DILocation(line: 1180, column: 40, scope: !10137)
!10139 = !DILocation(line: 1181, column: 41, scope: !10137)
!10140 = !DILocation(line: 1182, column: 38, scope: !10137)
!10141 = !DILocation(line: 1182, column: 21, scope: !10137)
!10142 = !DILocation(line: 1183, column: 41, scope: !10137)
!10143 = !DILocation(line: 1183, column: 21, scope: !10137)
!10144 = !DILocation(line: 1184, column: 43, scope: !10137)
!10145 = !DILocation(line: 1185, column: 17, scope: !10137)
!10146 = distinct !{!10146, !10135, !10147}
!10147 = !DILocation(line: 1185, column: 32, scope: !10121)
!10148 = !DILocation(line: 1194, column: 13, scope: !10099)
!10149 = !DILocation(line: 1195, column: 9, scope: !10099)
!10150 = !DILocation(line: 1197, column: 21, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10152, file: !1454, line: 1197, column: 17)
!10152 = distinct !DILexicalBlock(scope: !10093, file: !1454, line: 1195, column: 16)
!10153 = !DILocation(line: 1197, column: 32, scope: !10151)
!10154 = !DILocation(line: 1197, column: 53, scope: !10151)
!10155 = !DILocation(line: 1197, column: 60, scope: !10151)
!10156 = !DILocation(line: 1197, column: 76, scope: !10151)
!10157 = !DILocation(line: 1197, column: 17, scope: !10152)
!10158 = !DILocation(line: 1198, column: 54, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10151, file: !1454, line: 1197, column: 98)
!10160 = !DILocation(line: 1198, column: 59, scope: !10159)
!10161 = !DILocation(line: 1198, column: 26, scope: !10159)
!10162 = !DILocation(line: 1199, column: 40, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10159, file: !1454, line: 1199, column: 21)
!10164 = !DILocation(line: 1199, column: 37, scope: !10163)
!10165 = !DILocation(line: 1199, column: 35, scope: !10163)
!10166 = !DILocation(line: 1199, column: 24, scope: !10163)
!10167 = !DILocation(line: 1199, column: 63, scope: !10163)
!10168 = !DILocation(line: 1200, column: 41, scope: !10163)
!10169 = !DILocation(line: 1200, column: 39, scope: !10163)
!10170 = !DILocation(line: 1200, column: 28, scope: !10163)
!10171 = !DILocation(line: 1199, column: 21, scope: !10159)
!10172 = !DILocation(line: 1201, column: 40, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10163, file: !1454, line: 1200, column: 68)
!10174 = !DILocation(line: 1201, column: 21, scope: !10173)
!10175 = !DILocation(line: 1202, column: 40, scope: !10173)
!10176 = !DILocation(line: 1202, column: 21, scope: !10173)
!10177 = !DILocation(line: 1203, column: 17, scope: !10173)
!10178 = !DILocation(line: 1206, column: 13, scope: !10152)
!10179 = !DILocation(line: 1228, column: 25, scope: !10042)
!10180 = !DILocation(line: 1231, column: 29, scope: !10048)
!10181 = !DILocation(line: 0, scope: !10048)
!10182 = !DILocation(line: 1232, column: 13, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10048, file: !1454, line: 1232, column: 13)
!10184 = !DILocation(line: 1232, column: 43, scope: !10183)
!10185 = !DILocation(line: 1232, column: 13, scope: !10048)
!10186 = !DILocation(line: 1233, column: 43, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10183, file: !1454, line: 1232, column: 55)
!10188 = !DILocation(line: 1234, column: 9, scope: !10187)
!10189 = !DILocation(line: 1237, column: 5, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !1454, line: 1237, column: 5)
!10191 = distinct !DILexicalBlock(scope: !10042, file: !1454, line: 1237, column: 5)
!10192 = !DILocation(line: 1240, column: 5, scope: !10042)
!10193 = !DILocation(line: 1241, column: 1, scope: !10042)
!10194 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1454, file: !1454, line: 3421, type: !9958, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10195)
!10195 = !{!10196, !10197, !10198, !10199}
!10196 = !DILocalVariable(name: "D", arg: 1, scope: !10194, file: !1454, line: 3421, type: !1624)
!10197 = !DILocalVariable(name: "savedMask", scope: !10194, file: !1454, line: 3423, type: !61)
!10198 = !DILocalVariable(name: "currtime", scope: !10194, file: !1454, line: 3424, type: !61)
!10199 = !DILocalVariable(name: "difftime", scope: !10194, file: !1454, line: 3424, type: !61)
!10200 = !DILocation(line: 0, scope: !10194)
!10201 = !DILocation(line: 3427, column: 9, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10194, file: !1454, line: 3427, column: 9)
!10203 = !DILocation(line: 3427, column: 28, scope: !10202)
!10204 = !DILocation(line: 3427, column: 9, scope: !10194)
!10205 = !DILocation(line: 3429, column: 20, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !1454, line: 3427, column: 59)
!10207 = !DILocation(line: 3430, column: 27, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10206, file: !1454, line: 3430, column: 13)
!10209 = !DILocation(line: 3430, column: 24, scope: !10208)
!10210 = !DILocation(line: 3430, column: 22, scope: !10208)
!10211 = !DILocation(line: 3430, column: 13, scope: !10206)
!10212 = !DILocation(line: 3431, column: 47, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10208, file: !1454, line: 3430, column: 46)
!10214 = !DILocation(line: 3431, column: 13, scope: !10213)
!10215 = !DILocation(line: 3432, column: 9, scope: !10213)
!10216 = !DILocation(line: 3435, column: 17, scope: !10194)
!10217 = !DILocation(line: 3436, column: 24, scope: !10194)
!10218 = !DILocation(line: 3436, column: 31, scope: !10194)
!10219 = !DILocation(line: 3436, column: 36, scope: !10194)
!10220 = !DILocation(line: 3436, column: 28, scope: !10194)
!10221 = !DILocation(line: 3436, column: 5, scope: !10194)
!10222 = !DILocation(line: 3442, column: 5, scope: !10194)
!10223 = !DILocation(line: 3443, column: 1, scope: !10194)
!10224 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1454, file: !1454, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10225)
!10225 = !{!10226}
!10226 = !DILocalVariable(name: "savedMask", scope: !10224, file: !1454, line: 2407, type: !61)
!10227 = !DILocation(line: 2408, column: 17, scope: !10224)
!10228 = !DILocation(line: 0, scope: !10224)
!10229 = !DILocation(line: 2413, column: 25, scope: !10224)
!10230 = !DILocation(line: 2414, column: 5, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1454, line: 2414, column: 5)
!10232 = distinct !DILexicalBlock(scope: !10224, file: !1454, line: 2414, column: 5)
!10233 = !DILocation(line: 2415, column: 5, scope: !10224)
!10234 = !DILocation(line: 2416, column: 1, scope: !10224)
!10235 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1454, file: !1454, line: 3561, type: !10236, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10238)
!10236 = !DISubroutineType(types: !10237)
!10237 = !{null, !1624, !979, !463}
!10238 = !{!10239, !10240, !10241, !10242}
!10239 = !DILocalVariable(name: "D", arg: 1, scope: !10235, file: !1454, line: 3561, type: !1624)
!10240 = !DILocalVariable(name: "cmd", arg: 2, scope: !10235, file: !1454, line: 3561, type: !979)
!10241 = !DILocalVariable(name: "outlen", arg: 3, scope: !10235, file: !1454, line: 3561, type: !463)
!10242 = !DILocalVariable(name: "savedMask", scope: !10235, file: !1454, line: 3563, type: !61)
!10243 = !DILocation(line: 0, scope: !10235)
!10244 = !DILocation(line: 3565, column: 17, scope: !10235)
!10245 = !DILocation(line: 3566, column: 22, scope: !10235)
!10246 = !DILocation(line: 3566, column: 5, scope: !10235)
!10247 = !DILocation(line: 3567, column: 33, scope: !10235)
!10248 = !DILocation(line: 3568, column: 27, scope: !10235)
!10249 = !DILocation(line: 3568, column: 25, scope: !10235)
!10250 = !DILocation(line: 3569, column: 24, scope: !10235)
!10251 = !DILocation(line: 3570, column: 25, scope: !10235)
!10252 = !DILocation(line: 3570, column: 5, scope: !10235)
!10253 = !DILocation(line: 3571, column: 5, scope: !10235)
!10254 = !DILocation(line: 3573, column: 1, scope: !10235)
!10255 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1454, file: !1454, line: 1410, type: !10256, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!2289}
!10258 = !{!10259}
!10259 = !DILocalVariable(name: "savedMask", scope: !10255, file: !1454, line: 1412, type: !1335)
!10260 = !DILocation(line: 1413, column: 17, scope: !10255)
!10261 = !DILocation(line: 0, scope: !10255)
!10262 = !DILocation(line: 1414, column: 9, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10255, file: !1454, line: 1414, column: 9)
!10264 = !DILocation(line: 1414, column: 9, scope: !10255)
!10265 = !DILocation(line: 1415, column: 17, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10263, file: !1454, line: 1414, column: 24)
!10267 = !DILocation(line: 1417, column: 9, scope: !10266)
!10268 = !DILocation(line: 0, scope: !10263)
!10269 = !DILocation(line: 1425, column: 1, scope: !10255)
!10270 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1454, file: !1454, line: 1257, type: !10271, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!91}
!10273 = !{!10274, !10275, !10276}
!10274 = !DILocalVariable(name: "D", scope: !10270, file: !1454, line: 1259, type: !1624)
!10275 = !DILocalVariable(name: "status", scope: !10270, file: !1454, line: 1260, type: !1676)
!10276 = !DILocalVariable(name: "result", scope: !10270, file: !1454, line: 1261, type: !91)
!10277 = !DILocation(line: 1259, column: 57, scope: !10270)
!10278 = !DILocation(line: 0, scope: !10270)
!10279 = !DILocation(line: 1263, column: 5, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !1454, line: 1263, column: 5)
!10281 = distinct !DILexicalBlock(scope: !10270, file: !1454, line: 1263, column: 5)
!10282 = !DILocation(line: 1263, column: 5, scope: !10281)
!10283 = !DILocation(line: 1263, column: 5, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10280, file: !1454, line: 1263, column: 5)
!10285 = !DILocation(line: 1265, column: 5, scope: !10270)
!10286 = !DILocation(line: 1267, column: 42, scope: !10270)
!10287 = !DILocation(line: 1267, column: 47, scope: !10270)
!10288 = !DILocation(line: 1267, column: 14, scope: !10270)
!10289 = !DILocation(line: 1269, column: 27, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10270, file: !1454, line: 1269, column: 9)
!10291 = !DILocation(line: 1269, column: 24, scope: !10290)
!10292 = !DILocation(line: 1269, column: 22, scope: !10290)
!10293 = !DILocation(line: 1269, column: 11, scope: !10290)
!10294 = !DILocation(line: 1269, column: 9, scope: !10270)
!10295 = !DILocation(line: 1270, column: 9, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10290, file: !1454, line: 1269, column: 51)
!10297 = !DILocation(line: 1272, column: 5, scope: !10296)
!10298 = !DILocation(line: 1274, column: 5, scope: !10270)
!10299 = !DILocation(line: 1276, column: 5, scope: !10270)
!10300 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1454, file: !1454, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10301)
!10301 = !{!10302}
!10302 = !DILocalVariable(name: "D", scope: !10300, file: !1454, line: 1291, type: !1624)
!10303 = !DILocation(line: 0, scope: !10300)
!10304 = !DILocation(line: 1293, column: 5, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !1454, line: 1293, column: 5)
!10306 = distinct !DILexicalBlock(scope: !10300, file: !1454, line: 1293, column: 5)
!10307 = !DILocation(line: 1293, column: 5, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !1454, line: 1293, column: 5)
!10309 = !DILocation(line: 1293, column: 5, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !1454, line: 1293, column: 5)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !1454, line: 1293, column: 5)
!10312 = distinct !DILexicalBlock(scope: !10308, file: !1454, line: 1293, column: 5)
!10313 = !DILocation(line: 1291, column: 60, scope: !10300)
!10314 = !DILocation(line: 1295, column: 5, scope: !10300)
!10315 = !DILocation(line: 1296, column: 1, scope: !10300)
!10316 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1454, file: !1454, line: 3452, type: !9958, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10317)
!10317 = !{!10318, !10319}
!10318 = !DILocalVariable(name: "D", arg: 1, scope: !10316, file: !1454, line: 3452, type: !1624)
!10319 = !DILocalVariable(name: "savedMask", scope: !10316, file: !1454, line: 3454, type: !61)
!10320 = !DILocation(line: 0, scope: !10316)
!10321 = !DILocation(line: 3456, column: 17, scope: !10316)
!10322 = !DILocation(line: 3462, column: 24, scope: !10316)
!10323 = !DILocation(line: 3462, column: 31, scope: !10316)
!10324 = !DILocation(line: 3462, column: 36, scope: !10316)
!10325 = !DILocation(line: 3462, column: 28, scope: !10316)
!10326 = !DILocation(line: 3462, column: 5, scope: !10316)
!10327 = !DILocation(line: 3463, column: 12, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10316, file: !1454, line: 3463, column: 9)
!10329 = !DILocation(line: 3463, column: 27, scope: !10328)
!10330 = !DILocation(line: 3463, column: 9, scope: !10316)
!10331 = !DILocation(line: 3464, column: 28, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10328, file: !1454, line: 3463, column: 33)
!10333 = !DILocation(line: 3465, column: 5, scope: !10332)
!10334 = !DILocation(line: 3467, column: 5, scope: !10316)
!10335 = !DILocation(line: 3468, column: 5, scope: !10316)
!10336 = !DILocation(line: 3469, column: 1, scope: !10316)
!10337 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1454, file: !1454, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10338)
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "savedMask", scope: !10337, file: !1454, line: 2419, type: !61)
!10340 = !DILocation(line: 2420, column: 17, scope: !10337)
!10341 = !DILocation(line: 0, scope: !10337)
!10342 = !DILocation(line: 2425, column: 25, scope: !10337)
!10343 = !DILocation(line: 2426, column: 5, scope: !10337)
!10344 = !DILocation(line: 2427, column: 1, scope: !10337)
!10345 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1454, file: !1454, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10346)
!10346 = !{!10347, !10348}
!10347 = !DILocalVariable(name: "D", scope: !10345, file: !1454, line: 1310, type: !1624)
!10348 = !DILocalVariable(name: "status", scope: !10345, file: !1454, line: 1311, type: !1676)
!10349 = !DILocation(line: 1310, column: 60, scope: !10345)
!10350 = !DILocation(line: 0, scope: !10345)
!10351 = !DILocation(line: 1313, column: 5, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10353, file: !1454, line: 1313, column: 5)
!10353 = distinct !DILexicalBlock(scope: !10345, file: !1454, line: 1313, column: 5)
!10354 = !DILocation(line: 1313, column: 5, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10352, file: !1454, line: 1313, column: 5)
!10356 = !DILocation(line: 1313, column: 5, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !1454, line: 1313, column: 5)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !1454, line: 1313, column: 5)
!10359 = distinct !DILexicalBlock(scope: !10355, file: !1454, line: 1313, column: 5)
!10360 = !DILocation(line: 1315, column: 5, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !1454, line: 1315, column: 5)
!10362 = distinct !DILexicalBlock(scope: !10345, file: !1454, line: 1315, column: 5)
!10363 = !DILocation(line: 1315, column: 5, scope: !10362)
!10364 = !DILocation(line: 1315, column: 5, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10361, file: !1454, line: 1315, column: 5)
!10366 = !DILocation(line: 1317, column: 5, scope: !10345)
!10367 = !DILocation(line: 1319, column: 5, scope: !10345)
!10368 = !DILocation(line: 1320, column: 46, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10345, file: !1454, line: 1319, column: 15)
!10370 = !DILocation(line: 1320, column: 51, scope: !10369)
!10371 = !DILocation(line: 1320, column: 18, scope: !10369)
!10372 = !DILocation(line: 1322, column: 31, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10369, file: !1454, line: 1322, column: 13)
!10374 = !DILocation(line: 1322, column: 28, scope: !10373)
!10375 = !DILocation(line: 1322, column: 26, scope: !10373)
!10376 = !DILocation(line: 1322, column: 15, scope: !10373)
!10377 = !DILocation(line: 1322, column: 13, scope: !10369)
!10378 = distinct !{!10378, !10367, !10379}
!10379 = !DILocation(line: 1325, column: 5, scope: !10345)
!10380 = !DILocation(line: 1327, column: 5, scope: !10345)
!10381 = !DILocation(line: 1328, column: 1, scope: !10345)
!10382 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1454, file: !1454, line: 1394, type: !9958, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10383)
!10383 = !{!10384}
!10384 = !DILocalVariable(name: "D", arg: 1, scope: !10382, file: !1454, line: 1394, type: !1624)
!10385 = !DILocation(line: 0, scope: !10382)
!10386 = !DILocation(line: 1401, column: 1, scope: !10382)
!10387 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1454, file: !1454, line: 1556, type: !10388, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10409)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!1335, !10390, !1624}
!10390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10391, size: 32)
!10391 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1650, line: 121, baseType: !10392)
!10392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 105, size: 480, elements: !10393)
!10393 = !{!10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403, !10404, !10405, !10406, !10407, !10408}
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !10392, file: !1650, line: 106, baseType: !1921, size: 32)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !10392, file: !1650, line: 107, baseType: !1723, size: 32, offset: 32)
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !10392, file: !1650, line: 108, baseType: !1926, size: 32, offset: 64)
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !10392, file: !1650, line: 109, baseType: !1930, size: 32, offset: 96)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !10392, file: !1650, line: 110, baseType: !1934, size: 32, offset: 128)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !10392, file: !1650, line: 111, baseType: !1930, size: 32, offset: 160)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !10392, file: !1650, line: 112, baseType: !1939, size: 32, offset: 192)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !10392, file: !1650, line: 113, baseType: !1930, size: 32, offset: 224)
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !10392, file: !1650, line: 114, baseType: !1930, size: 32, offset: 256)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !10392, file: !1650, line: 115, baseType: !1930, size: 32, offset: 288)
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !10392, file: !1650, line: 116, baseType: !1946, size: 32, offset: 320)
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !10392, file: !1650, line: 117, baseType: !1951, size: 32, offset: 352)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !10392, file: !1650, line: 118, baseType: !1956, size: 32, offset: 384)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !10392, file: !1650, line: 119, baseType: !1960, size: 32, offset: 416)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !10392, file: !1650, line: 120, baseType: !1964, size: 32, offset: 448)
!10409 = !{!10410, !10411, !10412}
!10410 = !DILocalVariable(name: "driver", arg: 1, scope: !10387, file: !1454, line: 1556, type: !10390)
!10411 = !DILocalVariable(name: "D", arg: 2, scope: !10387, file: !1454, line: 1556, type: !1624)
!10412 = !DILocalVariable(name: "smap", scope: !10387, file: !1454, line: 1558, type: !1675)
!10413 = !DILocation(line: 0, scope: !10387)
!10414 = !DILocation(line: 1561, column: 15, scope: !10387)
!10415 = !DILocation(line: 1562, column: 22, scope: !10387)
!10416 = !DILocation(line: 1563, column: 5, scope: !10387)
!10417 = !DILocation(line: 1563, column: 22, scope: !10387)
!10418 = !DILocation(line: 1565, column: 5, scope: !10387)
!10419 = !DILocation(line: 1565, column: 22, scope: !10387)
!10420 = !DILocation(line: 1566, column: 5, scope: !10387)
!10421 = !DILocation(line: 1566, column: 22, scope: !10387)
!10422 = !DILocation(line: 1568, column: 5, scope: !10387)
!10423 = !DILocation(line: 1568, column: 22, scope: !10387)
!10424 = !DILocation(line: 1569, column: 5, scope: !10387)
!10425 = !DILocation(line: 1569, column: 22, scope: !10387)
!10426 = !DILocation(line: 1570, column: 5, scope: !10387)
!10427 = !DILocation(line: 1570, column: 22, scope: !10387)
!10428 = !DILocation(line: 1573, column: 8, scope: !10387)
!10429 = !DILocation(line: 1573, column: 13, scope: !10387)
!10430 = !DILocation(line: 1573, column: 28, scope: !10387)
!10431 = !DILocation(line: 1574, column: 8, scope: !10387)
!10432 = !DILocation(line: 1574, column: 13, scope: !10387)
!10433 = !DILocation(line: 1574, column: 29, scope: !10387)
!10434 = !DILocation(line: 1575, column: 8, scope: !10387)
!10435 = !DILocation(line: 1575, column: 13, scope: !10387)
!10436 = !DILocation(line: 1575, column: 30, scope: !10387)
!10437 = !DILocation(line: 1576, column: 8, scope: !10387)
!10438 = !DILocation(line: 1576, column: 13, scope: !10387)
!10439 = !DILocation(line: 1576, column: 23, scope: !10387)
!10440 = !DILocation(line: 1577, column: 8, scope: !10387)
!10441 = !DILocation(line: 1577, column: 13, scope: !10387)
!10442 = !DILocation(line: 1577, column: 24, scope: !10387)
!10443 = !DILocation(line: 1578, column: 8, scope: !10387)
!10444 = !DILocation(line: 1578, column: 13, scope: !10387)
!10445 = !DILocation(line: 1578, column: 25, scope: !10387)
!10446 = !DILocation(line: 1579, column: 8, scope: !10387)
!10447 = !DILocation(line: 1579, column: 23, scope: !10387)
!10448 = !DILocation(line: 1583, column: 10, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10387, file: !1454, line: 1583, column: 9)
!10450 = !DILocation(line: 1583, column: 24, scope: !10449)
!10451 = !DILocation(line: 1583, column: 32, scope: !10449)
!10452 = !DILocation(line: 1583, column: 35, scope: !10449)
!10453 = !DILocation(line: 1583, column: 49, scope: !10449)
!10454 = !DILocation(line: 1583, column: 9, scope: !10387)
!10455 = !DILocation(line: 1586, column: 12, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10449, file: !1454, line: 1583, column: 59)
!10457 = !DILocation(line: 1586, column: 17, scope: !10456)
!10458 = !DILocation(line: 1586, column: 25, scope: !10456)
!10459 = !DILocation(line: 1587, column: 12, scope: !10456)
!10460 = !DILocation(line: 1587, column: 17, scope: !10456)
!10461 = !DILocation(line: 1587, column: 24, scope: !10456)
!10462 = !DILocation(line: 1591, column: 10, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10387, file: !1454, line: 1591, column: 9)
!10464 = !DILocation(line: 1589, column: 5, scope: !10456)
!10465 = !DILocation(line: 1600, column: 32, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10387, file: !1454, line: 1600, column: 9)
!10467 = !DILocation(line: 1600, column: 35, scope: !10466)
!10468 = !DILocation(line: 1600, column: 49, scope: !10466)
!10469 = !DILocation(line: 1600, column: 9, scope: !10387)
!10470 = !DILocation(line: 1601, column: 12, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10466, file: !1454, line: 1600, column: 59)
!10472 = !DILocation(line: 1601, column: 17, scope: !10471)
!10473 = !DILocation(line: 1601, column: 25, scope: !10471)
!10474 = !DILocation(line: 1602, column: 12, scope: !10471)
!10475 = !DILocation(line: 1602, column: 17, scope: !10471)
!10476 = !DILocation(line: 1602, column: 24, scope: !10471)
!10477 = !DILocation(line: 1603, column: 5, scope: !10471)
!10478 = !DILocation(line: 1607, column: 8, scope: !10387)
!10479 = !DILocation(line: 1607, column: 20, scope: !10387)
!10480 = !DILocation(line: 1622, column: 5, scope: !10387)
!10481 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1454, file: !1454, line: 4553, type: !1724, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10482)
!10482 = !{!10483, !10484, !10485, !10486}
!10483 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10481, file: !1454, line: 4553, type: !88)
!10484 = !DILocalVariable(name: "D", scope: !10481, file: !1454, line: 4555, type: !1624)
!10485 = !DILocalVariable(name: "unlock", scope: !10481, file: !1454, line: 4556, type: !61)
!10486 = !DILocalVariable(name: "cmd", scope: !10481, file: !1454, line: 4557, type: !463)
!10487 = !DILocation(line: 0, scope: !10481)
!10488 = !DILocation(line: 4555, column: 24, scope: !10481)
!10489 = !DILocation(line: 4557, column: 5, scope: !10481)
!10490 = !DILocation(line: 4558, column: 12, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10481, file: !1454, line: 4558, column: 9)
!10492 = !DILocation(line: 4558, column: 9, scope: !10491)
!10493 = !DILocation(line: 4558, column: 23, scope: !10491)
!10494 = !DILocation(line: 4558, column: 31, scope: !10491)
!10495 = !DILocation(line: 4558, column: 34, scope: !10491)
!10496 = !DILocation(line: 4558, column: 48, scope: !10491)
!10497 = !DILocation(line: 4558, column: 56, scope: !10491)
!10498 = !DILocation(line: 4558, column: 59, scope: !10491)
!10499 = !DILocation(line: 4558, column: 73, scope: !10491)
!10500 = !DILocation(line: 4558, column: 9, scope: !10481)
!10501 = !DILocation(line: 4563, column: 24, scope: !10481)
!10502 = !DILocation(line: 4563, column: 31, scope: !10481)
!10503 = !DILocation(line: 4563, column: 36, scope: !10481)
!10504 = !DILocation(line: 4563, column: 28, scope: !10481)
!10505 = !DILocation(line: 4563, column: 5, scope: !10481)
!10506 = !DILocation(line: 4564, column: 5, scope: !10481)
!10507 = !DILocation(line: 4567, column: 28, scope: !10481)
!10508 = !DILocation(line: 4567, column: 36, scope: !10481)
!10509 = !DILocation(line: 4567, column: 41, scope: !10481)
!10510 = !DILocation(line: 4567, column: 5, scope: !10481)
!10511 = !DILocation(line: 4568, column: 17, scope: !10481)
!10512 = !DILocation(line: 4568, column: 22, scope: !10481)
!10513 = !DILocation(line: 4568, column: 14, scope: !10481)
!10514 = !DILocation(line: 4569, column: 22, scope: !10481)
!10515 = !DILocation(line: 4569, column: 54, scope: !10481)
!10516 = !DILocation(line: 4569, column: 65, scope: !10481)
!10517 = !DILocation(line: 4569, column: 62, scope: !10481)
!10518 = !DILocation(line: 4569, column: 87, scope: !10481)
!10519 = !DILocation(line: 4569, column: 85, scope: !10481)
!10520 = !DILocation(line: 4569, column: 60, scope: !10481)
!10521 = !DILocation(line: 4569, column: 58, scope: !10481)
!10522 = !DILocation(line: 4569, column: 51, scope: !10481)
!10523 = !DILocation(line: 4572, column: 24, scope: !10481)
!10524 = !DILocation(line: 4572, column: 5, scope: !10481)
!10525 = !DILocation(line: 4573, column: 5, scope: !10481)
!10526 = !DILocation(line: 4575, column: 5, scope: !10481)
!10527 = !DILocation(line: 4576, column: 1, scope: !10481)
!10528 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1454, file: !1454, line: 4488, type: !9958, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10529)
!10529 = !{!10530, !10531}
!10530 = !DILocalVariable(name: "D", arg: 1, scope: !10528, file: !1454, line: 4488, type: !1624)
!10531 = !DILocalVariable(name: "status", scope: !10528, file: !1454, line: 4490, type: !1676)
!10532 = !DILocation(line: 0, scope: !10528)
!10533 = !DILocation(line: 4490, column: 5, scope: !10528)
!10534 = !DILocation(line: 4491, column: 5, scope: !10528)
!10535 = !DILocation(line: 4492, column: 32, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10528, file: !1454, line: 4491, column: 10)
!10537 = !DILocation(line: 4492, column: 40, scope: !10536)
!10538 = !DILocation(line: 4492, column: 45, scope: !10536)
!10539 = !DILocation(line: 4492, column: 9, scope: !10536)
!10540 = !DILocation(line: 4493, column: 20, scope: !10528)
!10541 = !DILocation(line: 4493, column: 32, scope: !10528)
!10542 = !DILocation(line: 4493, column: 29, scope: !10528)
!10543 = !DILocation(line: 4493, column: 27, scope: !10528)
!10544 = !DILocation(line: 4493, column: 16, scope: !10528)
!10545 = !DILocation(line: 4493, column: 5, scope: !10536)
!10546 = distinct !{!10546, !10534, !10547}
!10547 = !DILocation(line: 4493, column: 54, scope: !10528)
!10548 = !DILocation(line: 4494, column: 1, scope: !10528)
!10549 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1454, file: !1454, line: 1742, type: !10388, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10550)
!10550 = !{!10551, !10552, !10553}
!10551 = !DILocalVariable(name: "driver", arg: 1, scope: !10549, file: !1454, line: 1742, type: !10390)
!10552 = !DILocalVariable(name: "D", arg: 2, scope: !10549, file: !1454, line: 1742, type: !1624)
!10553 = !DILocalVariable(name: "smap", scope: !10549, file: !1454, line: 1744, type: !1675)
!10554 = !DILocation(line: 0, scope: !10549)
!10555 = !DILocation(line: 1747, column: 15, scope: !10549)
!10556 = !DILocation(line: 1748, column: 22, scope: !10549)
!10557 = !DILocation(line: 1749, column: 5, scope: !10549)
!10558 = !DILocation(line: 1749, column: 22, scope: !10549)
!10559 = !DILocation(line: 1750, column: 5, scope: !10549)
!10560 = !DILocation(line: 1750, column: 22, scope: !10549)
!10561 = !DILocation(line: 1751, column: 5, scope: !10549)
!10562 = !DILocation(line: 1751, column: 22, scope: !10549)
!10563 = !DILocation(line: 1752, column: 5, scope: !10549)
!10564 = !DILocation(line: 1752, column: 22, scope: !10549)
!10565 = !DILocation(line: 1753, column: 5, scope: !10549)
!10566 = !DILocation(line: 1753, column: 22, scope: !10549)
!10567 = !DILocation(line: 1756, column: 8, scope: !10549)
!10568 = !DILocation(line: 1756, column: 13, scope: !10549)
!10569 = !DILocation(line: 1756, column: 24, scope: !10549)
!10570 = !DILocation(line: 1758, column: 8, scope: !10549)
!10571 = !DILocation(line: 1758, column: 13, scope: !10549)
!10572 = !DILocation(line: 1758, column: 28, scope: !10549)
!10573 = !DILocation(line: 1759, column: 8, scope: !10549)
!10574 = !DILocation(line: 1759, column: 13, scope: !10549)
!10575 = !DILocation(line: 1759, column: 29, scope: !10549)
!10576 = !DILocation(line: 1760, column: 8, scope: !10549)
!10577 = !DILocation(line: 1760, column: 13, scope: !10549)
!10578 = !DILocation(line: 1760, column: 23, scope: !10549)
!10579 = !DILocation(line: 1761, column: 8, scope: !10549)
!10580 = !DILocation(line: 1761, column: 13, scope: !10549)
!10581 = !DILocation(line: 1761, column: 24, scope: !10549)
!10582 = !DILocation(line: 1762, column: 8, scope: !10549)
!10583 = !DILocation(line: 1762, column: 13, scope: !10549)
!10584 = !DILocation(line: 1762, column: 21, scope: !10549)
!10585 = !DILocation(line: 1763, column: 8, scope: !10549)
!10586 = !DILocation(line: 1763, column: 13, scope: !10549)
!10587 = !DILocation(line: 1763, column: 20, scope: !10549)
!10588 = !DILocation(line: 1764, column: 8, scope: !10549)
!10589 = !DILocation(line: 1764, column: 23, scope: !10549)
!10590 = !DILocation(line: 1768, column: 8, scope: !10549)
!10591 = !DILocation(line: 1768, column: 20, scope: !10549)
!10592 = !DILocation(line: 1770, column: 5, scope: !10549)
!10593 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1454, file: !1454, line: 1775, type: !10388, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10594)
!10594 = !{!10595, !10596}
!10595 = !DILocalVariable(name: "driver", arg: 1, scope: !10593, file: !1454, line: 1775, type: !10390)
!10596 = !DILocalVariable(name: "D", arg: 2, scope: !10593, file: !1454, line: 1775, type: !1624)
!10597 = !DILocation(line: 0, scope: !10593)
!10598 = !DILocation(line: 1793, column: 5, scope: !10593)
!10599 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1454, file: !1454, line: 1932, type: !10388, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10600)
!10600 = !{!10601, !10602}
!10601 = !DILocalVariable(name: "driver", arg: 1, scope: !10599, file: !1454, line: 1932, type: !10390)
!10602 = !DILocalVariable(name: "D", arg: 2, scope: !10599, file: !1454, line: 1932, type: !1624)
!10603 = !DILocation(line: 0, scope: !10599)
!10604 = !DILocation(line: 1935, column: 13, scope: !10599)
!10605 = !DILocation(line: 1935, column: 25, scope: !10599)
!10606 = !DILocation(line: 1936, column: 13, scope: !10599)
!10607 = !DILocation(line: 1936, column: 22, scope: !10599)
!10608 = !DILocation(line: 1937, column: 13, scope: !10599)
!10609 = !DILocation(line: 1937, column: 23, scope: !10599)
!10610 = !DILocation(line: 1939, column: 13, scope: !10599)
!10611 = !DILocation(line: 1939, column: 24, scope: !10599)
!10612 = !DILocation(line: 1940, column: 13, scope: !10599)
!10613 = !DILocation(line: 1940, column: 25, scope: !10599)
!10614 = !DILocation(line: 1945, column: 13, scope: !10599)
!10615 = !DILocation(line: 1945, column: 32, scope: !10599)
!10616 = !DILocation(line: 1946, column: 13, scope: !10599)
!10617 = !DILocation(line: 1946, column: 30, scope: !10599)
!10618 = !DILocation(line: 1947, column: 13, scope: !10599)
!10619 = !DILocation(line: 1947, column: 26, scope: !10599)
!10620 = !DILocation(line: 1948, column: 13, scope: !10599)
!10621 = !DILocation(line: 1948, column: 25, scope: !10599)
!10622 = !DILocation(line: 1949, column: 13, scope: !10599)
!10623 = !DILocation(line: 1949, column: 24, scope: !10599)
!10624 = !DILocation(line: 1956, column: 13, scope: !10599)
!10625 = !DILocation(line: 1956, column: 23, scope: !10599)
!10626 = !DILocation(line: 1957, column: 13, scope: !10599)
!10627 = !DILocation(line: 1957, column: 28, scope: !10599)
!10628 = !DILocation(line: 1960, column: 13, scope: !10599)
!10629 = !DILocation(line: 1960, column: 30, scope: !10599)
!10630 = !DILocation(line: 1961, column: 13, scope: !10599)
!10631 = !DILocation(line: 1961, column: 30, scope: !10599)
!10632 = !DILocation(line: 1962, column: 13, scope: !10599)
!10633 = !DILocation(line: 1962, column: 20, scope: !10599)
!10634 = !DILocation(line: 1968, column: 9, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10599, file: !1454, line: 1968, column: 9)
!10636 = !DILocation(line: 1968, column: 36, scope: !10635)
!10637 = !DILocation(line: 1968, column: 9, scope: !10599)
!10638 = !DILocation(line: 1971, column: 12, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10635, file: !1454, line: 1970, column: 5)
!10640 = !DILocation(line: 1971, column: 25, scope: !10639)
!10641 = !DILocation(line: 1979, column: 8, scope: !10599)
!10642 = !DILocation(line: 1979, column: 13, scope: !10599)
!10643 = !DILocation(line: 1979, column: 25, scope: !10599)
!10644 = !DILocation(line: 1980, column: 8, scope: !10599)
!10645 = !DILocation(line: 1980, column: 13, scope: !10599)
!10646 = !DILocation(line: 1980, column: 24, scope: !10599)
!10647 = !DILocation(line: 1981, column: 8, scope: !10599)
!10648 = !DILocation(line: 1981, column: 13, scope: !10599)
!10649 = !DILocation(line: 1981, column: 24, scope: !10599)
!10650 = !DILocation(line: 1982, column: 8, scope: !10599)
!10651 = !DILocation(line: 1982, column: 13, scope: !10599)
!10652 = !DILocation(line: 1982, column: 22, scope: !10599)
!10653 = !DILocation(line: 1983, column: 8, scope: !10599)
!10654 = !DILocation(line: 1983, column: 13, scope: !10599)
!10655 = !DILocation(line: 1983, column: 21, scope: !10599)
!10656 = !DILocation(line: 1984, column: 8, scope: !10599)
!10657 = !DILocation(line: 1984, column: 13, scope: !10599)
!10658 = !DILocation(line: 1984, column: 22, scope: !10599)
!10659 = !DILocation(line: 1985, column: 8, scope: !10599)
!10660 = !DILocation(line: 1985, column: 13, scope: !10599)
!10661 = !DILocation(line: 1985, column: 22, scope: !10599)
!10662 = !DILocation(line: 1986, column: 8, scope: !10599)
!10663 = !DILocation(line: 1986, column: 13, scope: !10599)
!10664 = !DILocation(line: 1986, column: 21, scope: !10599)
!10665 = !DILocation(line: 1987, column: 8, scope: !10599)
!10666 = !DILocation(line: 1987, column: 13, scope: !10599)
!10667 = !DILocation(line: 1987, column: 20, scope: !10599)
!10668 = !DILocation(line: 1988, column: 8, scope: !10599)
!10669 = !DILocation(line: 1988, column: 13, scope: !10599)
!10670 = !DILocation(line: 1988, column: 25, scope: !10599)
!10671 = !DILocation(line: 1989, column: 8, scope: !10599)
!10672 = !DILocation(line: 1989, column: 13, scope: !10599)
!10673 = !DILocation(line: 1989, column: 22, scope: !10599)
!10674 = !DILocation(line: 1990, column: 8, scope: !10599)
!10675 = !DILocation(line: 1990, column: 13, scope: !10599)
!10676 = !DILocation(line: 1990, column: 22, scope: !10599)
!10677 = !DILocation(line: 1993, column: 8, scope: !10599)
!10678 = !DILocation(line: 1993, column: 13, scope: !10599)
!10679 = !DILocation(line: 1993, column: 26, scope: !10599)
!10680 = !DILocation(line: 1996, column: 8, scope: !10599)
!10681 = !DILocation(line: 1996, column: 20, scope: !10599)
!10682 = !DILocation(line: 1999, column: 8, scope: !10599)
!10683 = !DILocation(line: 1999, column: 24, scope: !10599)
!10684 = !DILocation(line: 2000, column: 8, scope: !10599)
!10685 = !DILocation(line: 2000, column: 19, scope: !10599)
!10686 = !DILocation(line: 2001, column: 8, scope: !10599)
!10687 = !DILocation(line: 2001, column: 24, scope: !10599)
!10688 = !DILocation(line: 2002, column: 8, scope: !10599)
!10689 = !DILocation(line: 2002, column: 23, scope: !10599)
!10690 = !DILocation(line: 2004, column: 5, scope: !10599)
!10691 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1454, file: !1454, line: 2160, type: !1922, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10692)
!10692 = !{!10693, !10694, !10695, !10708, !10709, !10710}
!10693 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10691, file: !1454, line: 2160, type: !88)
!10694 = !DILocalVariable(name: "Info", arg: 2, scope: !10691, file: !1454, line: 2160, type: !88)
!10695 = !DILocalVariable(name: "FlashInfo", scope: !10691, file: !1454, line: 2162, type: !10696)
!10696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10697, size: 32)
!10697 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1650, line: 99, baseType: !10698)
!10698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 90, size: 928, elements: !10699)
!10699 = !{!10700, !10701, !10702, !10703, !10704, !10705, !10706, !10707}
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10698, file: !1650, line: 91, baseType: !61, size: 32)
!10701 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10698, file: !1650, line: 92, baseType: !1978, size: 256, offset: 32)
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10698, file: !1650, line: 93, baseType: !1978, size: 256, offset: 288)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10698, file: !1650, line: 94, baseType: !1978, size: 256, offset: 544)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10698, file: !1650, line: 95, baseType: !61, size: 32, offset: 800)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10698, file: !1650, line: 96, baseType: !1970, size: 16, offset: 832)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10698, file: !1650, line: 97, baseType: !61, size: 32, offset: 864)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10698, file: !1650, line: 98, baseType: !61, size: 32, offset: 896)
!10708 = !DILocalVariable(name: "D", scope: !10691, file: !1454, line: 2163, type: !1624)
!10709 = !DILocalVariable(name: "i", scope: !10691, file: !1454, line: 2164, type: !61)
!10710 = !DILocalVariable(name: "result", scope: !10691, file: !1454, line: 2166, type: !1335)
!10711 = !DILocation(line: 0, scope: !10691)
!10712 = !DILocation(line: 2163, column: 37, scope: !10691)
!10713 = !DILocation(line: 2202, column: 16, scope: !10691)
!10714 = !DILocation(line: 2202, column: 28, scope: !10691)
!10715 = !DILocation(line: 2204, column: 15, scope: !10691)
!10716 = !DILocation(line: 2204, column: 29, scope: !10691)
!10717 = !DILocation(line: 2204, column: 39, scope: !10691)
!10718 = !DILocation(line: 2204, column: 5, scope: !10691)
!10719 = !DILocation(line: 2205, column: 9, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10691, file: !1454, line: 2204, column: 45)
!10721 = !DILocation(line: 2205, column: 33, scope: !10720)
!10722 = !DILocation(line: 2206, column: 41, scope: !10720)
!10723 = !DILocation(line: 2206, column: 55, scope: !10720)
!10724 = !DILocation(line: 2206, column: 9, scope: !10720)
!10725 = !DILocation(line: 2206, column: 36, scope: !10720)
!10726 = !DILocation(line: 2207, column: 38, scope: !10720)
!10727 = !DILocation(line: 2207, column: 52, scope: !10720)
!10728 = !DILocation(line: 2207, column: 32, scope: !10720)
!10729 = !DILocation(line: 2209, column: 10, scope: !10720)
!10730 = distinct !{!10730, !10718, !10731}
!10731 = !DILocation(line: 2210, column: 5, scope: !10691)
!10732 = !DILocation(line: 2212, column: 16, scope: !10691)
!10733 = !DILocation(line: 2212, column: 32, scope: !10691)
!10734 = !DILocation(line: 2213, column: 16, scope: !10691)
!10735 = !DILocation(line: 2213, column: 25, scope: !10691)
!10736 = !DILocation(line: 2236, column: 5, scope: !10691)
!10737 = !DILocation(line: 2238, column: 5, scope: !10691)
!10738 = !DILocation(line: 2239, column: 18, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10691, file: !1454, line: 2238, column: 10)
!10740 = !DILocation(line: 2240, column: 34, scope: !10691)
!10741 = !DILocation(line: 2240, column: 5, scope: !10739)
!10742 = distinct !{!10742, !10737, !10743}
!10743 = !DILocation(line: 2240, column: 43, scope: !10691)
!10744 = !DILocation(line: 2259, column: 5, scope: !10691)
!10745 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1454, file: !1454, line: 2275, type: !1724, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10746)
!10746 = !{!10747, !10748, !10749, !10750}
!10747 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10745, file: !1454, line: 2275, type: !88)
!10748 = !DILocalVariable(name: "D", scope: !10745, file: !1454, line: 2278, type: !1624)
!10749 = !DILocalVariable(name: "status", scope: !10745, file: !1454, line: 2279, type: !1676)
!10750 = !DILocalVariable(name: "saved_mask", scope: !10745, file: !1454, line: 2280, type: !61)
!10751 = !DILocation(line: 0, scope: !10745)
!10752 = !DILocation(line: 2278, column: 33, scope: !10745)
!10753 = !DILocation(line: 2286, column: 5, scope: !10745)
!10754 = !DILocation(line: 2293, column: 9, scope: !10745)
!10755 = !DILocation(line: 2294, column: 26, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10745, file: !1454, line: 2293, column: 19)
!10757 = !DILocation(line: 2297, column: 17, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10756, file: !1454, line: 2297, column: 17)
!10759 = !DILocation(line: 2297, column: 17, scope: !10756)
!10760 = !DILocation(line: 2298, column: 17, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10758, file: !1454, line: 2297, column: 36)
!10762 = !DILocation(line: 2299, column: 37, scope: !10761)
!10763 = !DILocation(line: 2300, column: 13, scope: !10761)
!10764 = !DILocation(line: 2303, column: 50, scope: !10756)
!10765 = !DILocation(line: 2303, column: 55, scope: !10756)
!10766 = !DILocation(line: 2303, column: 22, scope: !10756)
!10767 = !DILocation(line: 2306, column: 35, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10756, file: !1454, line: 2306, column: 17)
!10769 = !DILocation(line: 2306, column: 32, scope: !10768)
!10770 = !DILocation(line: 2306, column: 30, scope: !10768)
!10771 = !DILocation(line: 2306, column: 19, scope: !10768)
!10772 = !DILocation(line: 2306, column: 17, scope: !10756)
!10773 = !DILocation(line: 2307, column: 17, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10768, file: !1454, line: 2306, column: 59)
!10775 = !DILocation(line: 2308, column: 17, scope: !10774)
!10776 = !DILocation(line: 2315, column: 12, scope: !10745)
!10777 = !DILocation(line: 2315, column: 21, scope: !10745)
!10778 = !DILocation(line: 2325, column: 9, scope: !10745)
!10779 = !DILocation(line: 2326, column: 5, scope: !10745)
!10780 = !DILocation(line: 2311, column: 17, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10768, file: !1454, line: 2310, column: 20)
!10782 = distinct !{!10782, !10754, !10783}
!10783 = !DILocation(line: 2313, column: 9, scope: !10745)
!10784 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1454, file: !1454, line: 2819, type: !1931, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10785)
!10785 = !{!10786, !10787, !10788, !10789, !10790, !10791, !10792, !10793, !10794, !10795, !10798, !10799}
!10786 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10784, file: !1454, line: 2819, type: !88)
!10787 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10784, file: !1454, line: 2819, type: !61)
!10788 = !DILocalVariable(name: "result", scope: !10784, file: !1454, line: 2821, type: !1335)
!10789 = !DILocalVariable(name: "blocksize", scope: !10784, file: !1454, line: 2822, type: !61)
!10790 = !DILocalVariable(name: "eraseunit", scope: !10784, file: !1454, line: 2823, type: !61)
!10791 = !DILocalVariable(name: "eraseaddr", scope: !10784, file: !1454, line: 2824, type: !61)
!10792 = !DILocalVariable(name: "iteration", scope: !10784, file: !1454, line: 2825, type: !61)
!10793 = !DILocalVariable(name: "D", scope: !10784, file: !1454, line: 2826, type: !1624)
!10794 = !DILocalVariable(name: "erase_block", scope: !10784, file: !1454, line: 2827, type: !61)
!10795 = !DILocalVariable(name: "a", scope: !10796, file: !1454, line: 2853, type: !61)
!10796 = distinct !DILexicalBlock(scope: !10797, file: !1454, line: 2852, column: 56)
!10797 = distinct !DILexicalBlock(scope: !10784, file: !1454, line: 2852, column: 9)
!10798 = !DILocalVariable(name: "b", scope: !10796, file: !1454, line: 2853, type: !61)
!10799 = !DILocalVariable(name: "c", scope: !10796, file: !1454, line: 2853, type: !61)
!10800 = !DILocation(line: 0, scope: !10784)
!10801 = !DILocation(line: 2826, column: 30, scope: !10784)
!10802 = !DILocation(line: 2829, column: 5, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !1454, line: 2829, column: 5)
!10804 = distinct !DILexicalBlock(scope: !10784, file: !1454, line: 2829, column: 5)
!10805 = !DILocation(line: 2829, column: 5, scope: !10804)
!10806 = !DILocation(line: 2829, column: 5, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10803, file: !1454, line: 2829, column: 5)
!10808 = !DILocation(line: 2836, column: 9, scope: !10784)
!10809 = !DILocation(line: 2838, column: 8, scope: !10784)
!10810 = !DILocation(line: 2838, column: 21, scope: !10784)
!10811 = !DILocation(line: 2847, column: 5, scope: !10784)
!10812 = !DILocation(line: 2848, column: 18, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10784, file: !1454, line: 2847, column: 10)
!10814 = !DILocation(line: 2850, column: 34, scope: !10784)
!10815 = !DILocation(line: 2850, column: 5, scope: !10813)
!10816 = distinct !{!10816, !10811, !10817}
!10817 = !DILocation(line: 2850, column: 43, scope: !10784)
!10818 = !DILocation(line: 2839, column: 32, scope: !10784)
!10819 = !DILocation(line: 2861, column: 53, scope: !10796)
!10820 = !DILocation(line: 2861, column: 40, scope: !10796)
!10821 = !DILocation(line: 2861, column: 25, scope: !10796)
!10822 = !DILocation(line: 2874, column: 16, scope: !10796)
!10823 = !DILocation(line: 2874, column: 13, scope: !10796)
!10824 = !DILocation(line: 0, scope: !10796)
!10825 = !DILocation(line: 2875, column: 24, scope: !10796)
!10826 = !DILocation(line: 2877, column: 21, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10796, file: !1454, line: 2877, column: 13)
!10828 = !DILocation(line: 2877, column: 13, scope: !10796)
!10829 = !DILocation(line: 2879, column: 23, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !1454, line: 2879, column: 21)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !1454, line: 2878, column: 120)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !1454, line: 2878, column: 13)
!10833 = distinct !DILexicalBlock(scope: !10834, file: !1454, line: 2878, column: 13)
!10834 = distinct !DILexicalBlock(scope: !10827, file: !1454, line: 2877, column: 27)
!10835 = !DILocation(line: 2879, column: 21, scope: !10831)
!10836 = !DILocation(line: 2878, column: 48, scope: !10832)
!10837 = !DILocation(line: 2878, column: 83, scope: !10832)
!10838 = !DILocation(line: 2878, column: 113, scope: !10832)
!10839 = !DILocation(line: 2878, column: 35, scope: !10832)
!10840 = !DILocation(line: 2878, column: 13, scope: !10833)
!10841 = distinct !{!10841, !10840, !10842}
!10842 = !DILocation(line: 2883, column: 13, scope: !10833)
!10843 = !DILocation(line: 2863, column: 19, scope: !10796)
!10844 = !DILocation(line: 2825, column: 24, scope: !10784)
!10845 = !DILocation(line: 2886, column: 9, scope: !10796)
!10846 = !DILocation(line: 2888, column: 36, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10796, file: !1454, line: 2886, column: 31)
!10848 = !DILocation(line: 2888, column: 41, scope: !10847)
!10849 = !DILocation(line: 2889, column: 17, scope: !10847)
!10850 = !DILocation(line: 2891, column: 36, scope: !10847)
!10851 = !DILocation(line: 2891, column: 41, scope: !10847)
!10852 = !DILocation(line: 2892, column: 17, scope: !10847)
!10853 = !DILocation(line: 2894, column: 36, scope: !10847)
!10854 = !DILocation(line: 2894, column: 41, scope: !10847)
!10855 = !DILocation(line: 2895, column: 17, scope: !10847)
!10856 = !DILocation(line: 2897, column: 17, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !1454, line: 2897, column: 17)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !1454, line: 2897, column: 17)
!10859 = distinct !DILexicalBlock(scope: !10847, file: !1454, line: 2897, column: 17)
!10860 = !DILocation(line: 0, scope: !10847)
!10861 = !DILocation(line: 2906, column: 5, scope: !10784)
!10862 = !DILocation(line: 2908, column: 32, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10784, file: !1454, line: 2906, column: 27)
!10864 = !DILocation(line: 2908, column: 37, scope: !10863)
!10865 = !DILocation(line: 2909, column: 13, scope: !10863)
!10866 = !DILocation(line: 2911, column: 32, scope: !10863)
!10867 = !DILocation(line: 2911, column: 37, scope: !10863)
!10868 = !DILocation(line: 2912, column: 13, scope: !10863)
!10869 = !DILocation(line: 2914, column: 32, scope: !10863)
!10870 = !DILocation(line: 2914, column: 37, scope: !10863)
!10871 = !DILocation(line: 2915, column: 13, scope: !10863)
!10872 = !DILocation(line: 0, scope: !10863)
!10873 = !DILocation(line: 2921, column: 56, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10875, file: !1454, line: 2921, column: 5)
!10875 = distinct !DILexicalBlock(scope: !10784, file: !1454, line: 2921, column: 5)
!10876 = !DILocation(line: 2921, column: 5, scope: !10875)
!10877 = !DILocation(line: 2921, column: 35, scope: !10875)
!10878 = !DILocation(line: 2921, column: 22, scope: !10875)
!10879 = !DILocation(line: 2922, column: 9, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !1454, line: 2921, column: 99)
!10881 = !DILocation(line: 2929, column: 9, scope: !10880)
!10882 = !DILocation(line: 2938, column: 26, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10880, file: !1454, line: 2929, column: 26)
!10884 = !DILocation(line: 2939, column: 37, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10883, file: !1454, line: 2939, column: 17)
!10886 = !DILocation(line: 2939, column: 17, scope: !10883)
!10887 = distinct !{!10887, !10881, !10888}
!10888 = !DILocation(line: 2943, column: 9, scope: !10880)
!10889 = !DILocation(line: 2921, column: 71, scope: !10874)
!10890 = !DILocation(line: 2921, column: 85, scope: !10874)
!10891 = distinct !{!10891, !10876, !10892}
!10892 = !DILocation(line: 2983, column: 5, scope: !10875)
!10893 = !DILocation(line: 2985, column: 21, scope: !10784)
!10894 = !DILocation(line: 2992, column: 9, scope: !10784)
!10895 = !DILocation(line: 3000, column: 5, scope: !10784)
!10896 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1454, file: !1454, line: 2533, type: !1935, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10897)
!10897 = !{!10898, !10899, !10900, !10901, !10902, !10903, !10904, !10905, !10906, !10907, !10908, !10909, !10910, !10911}
!10898 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10896, file: !1454, line: 2533, type: !88)
!10899 = !DILocalVariable(name: "Address", arg: 2, scope: !10896, file: !1454, line: 2533, type: !88)
!10900 = !DILocalVariable(name: "Data", arg: 3, scope: !10896, file: !1454, line: 2533, type: !88)
!10901 = !DILocalVariable(name: "Length", arg: 4, scope: !10896, file: !1454, line: 2533, type: !61)
!10902 = !DILocalVariable(name: "D", scope: !10896, file: !1454, line: 2535, type: !1624)
!10903 = !DILocalVariable(name: "savedMask", scope: !10896, file: !1454, line: 2536, type: !61)
!10904 = !DILocalVariable(name: "address", scope: !10896, file: !1454, line: 2537, type: !61)
!10905 = !DILocalVariable(name: "p_data", scope: !10896, file: !1454, line: 2538, type: !969)
!10906 = !DILocalVariable(name: "p_data_first", scope: !10896, file: !1454, line: 2539, type: !969)
!10907 = !DILocalVariable(name: "result", scope: !10896, file: !1454, line: 2540, type: !1335)
!10908 = !DILocalVariable(name: "written", scope: !10896, file: !1454, line: 2541, type: !61)
!10909 = !DILocalVariable(name: "length", scope: !10896, file: !1454, line: 2542, type: !61)
!10910 = !DILocalVariable(name: "cmd1", scope: !10896, file: !1454, line: 2543, type: !61)
!10911 = !DILocalVariable(name: "j", scope: !10912, file: !1454, line: 2599, type: !61)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !1454, line: 2597, column: 61)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !1454, line: 2597, column: 13)
!10914 = distinct !DILexicalBlock(scope: !10896, file: !1454, line: 2583, column: 25)
!10915 = !DILocation(line: 0, scope: !10896)
!10916 = !DILocation(line: 2535, column: 26, scope: !10896)
!10917 = !DILocation(line: 2537, column: 37, scope: !10896)
!10918 = !DILocation(line: 2538, column: 5, scope: !10896)
!10919 = !DILocation(line: 2538, column: 19, scope: !10896)
!10920 = !DILocation(line: 2542, column: 5, scope: !10896)
!10921 = !DILocation(line: 2545, column: 5, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !1454, line: 2545, column: 5)
!10923 = distinct !DILexicalBlock(scope: !10896, file: !1454, line: 2545, column: 5)
!10924 = !DILocation(line: 2545, column: 5, scope: !10923)
!10925 = !DILocation(line: 2545, column: 5, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !1454, line: 2545, column: 5)
!10927 = !DILocation(line: 2567, column: 9, scope: !10896)
!10928 = !DILocation(line: 2569, column: 8, scope: !10896)
!10929 = !DILocation(line: 2569, column: 21, scope: !10896)
!10930 = !DILocation(line: 2576, column: 5, scope: !10896)
!10931 = !DILocation(line: 2577, column: 18, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10896, file: !1454, line: 2576, column: 10)
!10933 = !DILocation(line: 2579, column: 34, scope: !10896)
!10934 = !DILocation(line: 2579, column: 5, scope: !10932)
!10935 = distinct !{!10935, !10930, !10936}
!10936 = !DILocation(line: 2579, column: 43, scope: !10896)
!10937 = !DILocation(line: 2583, column: 14, scope: !10896)
!10938 = !DILocation(line: 2583, column: 5, scope: !10896)
!10939 = !DILocation(line: 2584, column: 27, scope: !10914)
!10940 = !DILocation(line: 2592, column: 18, scope: !10914)
!10941 = !DILocation(line: 2592, column: 35, scope: !10914)
!10942 = !DILocation(line: 2592, column: 74, scope: !10914)
!10943 = !DILocation(line: 2592, column: 50, scope: !10914)
!10944 = !DILocation(line: 2592, column: 39, scope: !10914)
!10945 = !DILocation(line: 2595, column: 37, scope: !10914)
!10946 = !DILocation(line: 2595, column: 29, scope: !10914)
!10947 = !DILocation(line: 2595, column: 16, scope: !10914)
!10948 = !DILocation(line: 2597, column: 13, scope: !10913)
!10949 = !DILocation(line: 2597, column: 30, scope: !10913)
!10950 = !DILocation(line: 2597, column: 13, scope: !10914)
!10951 = !DILocation(line: 0, scope: !10912)
!10952 = !DILocation(line: 2600, column: 27, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1454, line: 2600, column: 13)
!10954 = distinct !DILexicalBlock(scope: !10912, file: !1454, line: 2600, column: 13)
!10955 = !DILocation(line: 2600, column: 13, scope: !10954)
!10956 = !DILocation(line: 2601, column: 38, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10953, file: !1454, line: 2600, column: 42)
!10958 = !DILocation(line: 2601, column: 17, scope: !10957)
!10959 = !DILocation(line: 2601, column: 36, scope: !10957)
!10960 = !DILocation(line: 2600, column: 38, scope: !10953)
!10961 = distinct !{!10961, !10955, !10962}
!10962 = !DILocation(line: 2602, column: 13, scope: !10954)
!10963 = !DILocation(line: 0, scope: !10914)
!10964 = !DILocation(line: 2606, column: 18, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10914, file: !1454, line: 2606, column: 13)
!10966 = !DILocation(line: 2606, column: 29, scope: !10965)
!10967 = !DILocation(line: 2606, column: 13, scope: !10914)
!10968 = !DILocation(line: 2607, column: 13, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10965, file: !1454, line: 2606, column: 55)
!10970 = !DILocation(line: 2608, column: 9, scope: !10969)
!10971 = !DILocation(line: 2613, column: 16, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10914, file: !1454, line: 2613, column: 13)
!10973 = !DILocation(line: 2613, column: 29, scope: !10972)
!10974 = !DILocation(line: 0, scope: !10972)
!10975 = !DILocation(line: 2613, column: 13, scope: !10914)
!10976 = !DILocation(line: 2614, column: 20, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10972, file: !1454, line: 2613, column: 35)
!10978 = !DILocation(line: 2615, column: 32, scope: !10977)
!10979 = !DILocation(line: 2615, column: 40, scope: !10977)
!10980 = !DILocation(line: 2615, column: 13, scope: !10977)
!10981 = !DILocation(line: 2616, column: 9, scope: !10977)
!10982 = !DILocation(line: 2619, column: 20, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10972, file: !1454, line: 2618, column: 9)
!10984 = !DILocation(line: 2620, column: 32, scope: !10983)
!10985 = !DILocation(line: 2620, column: 40, scope: !10983)
!10986 = !DILocation(line: 2620, column: 13, scope: !10983)
!10987 = !DILocation(line: 2626, column: 21, scope: !10914)
!10988 = !DILocation(line: 2633, column: 37, scope: !10914)
!10989 = !DILocation(line: 2634, column: 45, scope: !10914)
!10990 = !DILocation(line: 2634, column: 42, scope: !10914)
!10991 = !DILocation(line: 2634, column: 40, scope: !10914)
!10992 = !DILocation(line: 2634, column: 58, scope: !10914)
!10993 = !DILocation(line: 2634, column: 29, scope: !10914)
!10994 = !DILocation(line: 2635, column: 28, scope: !10914)
!10995 = !DILocation(line: 2636, column: 9, scope: !10914)
!10996 = !DILocation(line: 2638, column: 26, scope: !10914)
!10997 = !DILocation(line: 2638, column: 9, scope: !10914)
!10998 = !DILocation(line: 2639, column: 29, scope: !10914)
!10999 = !DILocation(line: 2639, column: 9, scope: !10914)
!11000 = !DILocation(line: 2662, column: 9, scope: !10914)
!11001 = !DILocation(line: 2670, column: 9, scope: !10914)
!11002 = !DILocation(line: 2676, column: 89, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10914, file: !1454, line: 2670, column: 13)
!11004 = !DILocation(line: 2676, column: 26, scope: !11003)
!11005 = !DILocation(line: 2678, column: 36, scope: !10914)
!11006 = !DILocation(line: 2678, column: 9, scope: !11003)
!11007 = distinct !{!11007, !11001, !11008}
!11008 = !DILocation(line: 2678, column: 45, scope: !10914)
!11009 = !DILocation(line: 2718, column: 19, scope: !10914)
!11010 = !DILocation(line: 2718, column: 16, scope: !10914)
!11011 = !DILocation(line: 2719, column: 16, scope: !10914)
!11012 = !DILocation(line: 2722, column: 31, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10914, file: !1454, line: 2722, column: 13)
!11014 = !DILocation(line: 2722, column: 13, scope: !10914)
!11015 = distinct !{!11015, !10938, !11016}
!11016 = !DILocation(line: 2725, column: 5, scope: !10896)
!11017 = !DILocation(line: 2748, column: 21, scope: !10896)
!11018 = !DILocation(line: 2755, column: 9, scope: !10896)
!11019 = !DILocation(line: 2757, column: 16, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !10896, file: !1454, line: 2757, column: 9)
!11021 = !DILocation(line: 2761, column: 1, scope: !10896)
!11022 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1454, file: !1454, line: 3019, type: !1931, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11023)
!11023 = !{!11024, !11025}
!11024 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11022, file: !1454, line: 3019, type: !88)
!11025 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11022, file: !1454, line: 3019, type: !61)
!11026 = !DILocation(line: 0, scope: !11022)
!11027 = !DILocation(line: 3021, column: 5, scope: !11022)
!11028 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1454, file: !1454, line: 3124, type: !1940, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11029)
!11029 = !{!11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037}
!11030 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11028, file: !1454, line: 3124, type: !88)
!11031 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11028, file: !1454, line: 3124, type: !61)
!11032 = !DILocalVariable(name: "result", scope: !11028, file: !1454, line: 3126, type: !1335)
!11033 = !DILocalVariable(name: "savedMask", scope: !11028, file: !1454, line: 3127, type: !61)
!11034 = !DILocalVariable(name: "D", scope: !11028, file: !1454, line: 3128, type: !1624)
!11035 = !DILocalVariable(name: "status_busy", scope: !11028, file: !1454, line: 3129, type: !1676)
!11036 = !DILocalVariable(name: "status_suspend", scope: !11028, file: !1454, line: 3129, type: !1676)
!11037 = !DILocalVariable(name: "check_status", scope: !11038, file: !1454, line: 3141, type: !1676)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !1454, line: 3140, column: 56)
!11039 = distinct !DILexicalBlock(scope: !11028, file: !1454, line: 3140, column: 9)
!11040 = !DILocation(line: 0, scope: !11028)
!11041 = !DILocation(line: 3128, column: 47, scope: !11028)
!11042 = !DILocation(line: 3131, column: 5, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !1454, line: 3131, column: 5)
!11044 = distinct !DILexicalBlock(scope: !11028, file: !1454, line: 3131, column: 5)
!11045 = !DILocation(line: 3131, column: 5, scope: !11044)
!11046 = !DILocation(line: 3131, column: 5, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11043, file: !1454, line: 3131, column: 5)
!11048 = !DILocation(line: 3134, column: 50, scope: !11028)
!11049 = !DILocation(line: 3134, column: 55, scope: !11028)
!11050 = !DILocation(line: 3134, column: 22, scope: !11028)
!11051 = !DILocation(line: 3135, column: 50, scope: !11028)
!11052 = !DILocation(line: 3135, column: 55, scope: !11028)
!11053 = !DILocation(line: 3135, column: 22, scope: !11028)
!11054 = !DILocation(line: 3138, column: 17, scope: !11028)
!11055 = !DILocation(line: 3140, column: 32, scope: !11039)
!11056 = !DILocation(line: 3140, column: 29, scope: !11039)
!11057 = !DILocation(line: 3140, column: 27, scope: !11039)
!11058 = !DILocation(line: 3140, column: 11, scope: !11039)
!11059 = !DILocation(line: 3140, column: 9, scope: !11028)
!11060 = !DILocation(line: 3141, column: 34, scope: !11038)
!11061 = !DILocation(line: 3141, column: 60, scope: !11038)
!11062 = !DILocation(line: 3141, column: 58, scope: !11038)
!11063 = !DILocation(line: 0, scope: !11038)
!11064 = !DILocation(line: 3144, column: 37, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11038, file: !1454, line: 3144, column: 13)
!11066 = !DILocation(line: 3144, column: 35, scope: !11065)
!11067 = !DILocation(line: 3144, column: 16, scope: !11065)
!11068 = !DILocation(line: 3144, column: 52, scope: !11065)
!11069 = !DILocation(line: 3145, column: 21, scope: !11065)
!11070 = !DILocation(line: 3145, column: 38, scope: !11065)
!11071 = !DILocation(line: 3147, column: 13, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !1454, line: 3147, column: 13)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1454, line: 3147, column: 13)
!11074 = distinct !DILexicalBlock(scope: !11065, file: !1454, line: 3145, column: 61)
!11075 = !DILocation(line: 3147, column: 13, scope: !11073)
!11076 = !DILocation(line: 3147, column: 13, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11072, file: !1454, line: 3147, column: 13)
!11078 = !DILocation(line: 3150, column: 13, scope: !11074)
!11079 = !DILocation(line: 3151, column: 33, scope: !11074)
!11080 = !DILocation(line: 3153, column: 9, scope: !11074)
!11081 = !DILocation(line: 3155, column: 20, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11083, file: !1454, line: 3155, column: 17)
!11083 = distinct !DILexicalBlock(scope: !11065, file: !1454, line: 3153, column: 16)
!11084 = !DILocation(line: 3155, column: 31, scope: !11082)
!11085 = !DILocation(line: 3155, column: 17, scope: !11083)
!11086 = !DILocation(line: 3156, column: 36, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11082, file: !1454, line: 3155, column: 54)
!11088 = !DILocation(line: 3156, column: 17, scope: !11087)
!11089 = !DILocation(line: 3157, column: 36, scope: !11087)
!11090 = !DILocation(line: 3157, column: 17, scope: !11087)
!11091 = !DILocation(line: 3158, column: 13, scope: !11087)
!11092 = !DILocation(line: 3191, column: 5, scope: !11028)
!11093 = !DILocation(line: 3193, column: 9, scope: !11028)
!11094 = !DILocation(line: 3160, column: 13, scope: !11083)
!11095 = !DILocation(line: 3173, column: 13, scope: !11083)
!11096 = !DILocation(line: 3194, column: 18, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !1454, line: 3193, column: 32)
!11098 = distinct !DILexicalBlock(scope: !11028, file: !1454, line: 3193, column: 9)
!11099 = !DILocation(line: 3195, column: 5, scope: !11097)
!11100 = !DILocation(line: 3197, column: 5, scope: !11028)
!11101 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1454, file: !1454, line: 3225, type: !1931, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11102)
!11102 = !{!11103, !11104, !11105, !11106, !11107}
!11103 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11101, file: !1454, line: 3225, type: !88)
!11104 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11101, file: !1454, line: 3225, type: !61)
!11105 = !DILocalVariable(name: "D", scope: !11101, file: !1454, line: 3227, type: !1624)
!11106 = !DILocalVariable(name: "status", scope: !11101, file: !1454, line: 3228, type: !1676)
!11107 = !DILocalVariable(name: "savedMask", scope: !11101, file: !1454, line: 3229, type: !61)
!11108 = !DILocation(line: 0, scope: !11101)
!11109 = !DILocation(line: 3227, column: 30, scope: !11101)
!11110 = !DILocation(line: 3231, column: 17, scope: !11101)
!11111 = !DILocation(line: 3234, column: 5, scope: !11101)
!11112 = !DILocation(line: 3238, column: 5, scope: !11101)
!11113 = !DILocation(line: 3239, column: 46, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11101, file: !1454, line: 3238, column: 15)
!11115 = !DILocation(line: 3239, column: 51, scope: !11114)
!11116 = !DILocation(line: 3239, column: 18, scope: !11114)
!11117 = !DILocation(line: 3241, column: 31, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11114, file: !1454, line: 3241, column: 13)
!11119 = !DILocation(line: 3241, column: 28, scope: !11118)
!11120 = !DILocation(line: 3241, column: 26, scope: !11118)
!11121 = !DILocation(line: 3241, column: 15, scope: !11118)
!11122 = !DILocation(line: 3241, column: 13, scope: !11114)
!11123 = distinct !{!11123, !11112, !11124}
!11124 = !DILocation(line: 3244, column: 5, scope: !11101)
!11125 = !DILocation(line: 3246, column: 5, scope: !11101)
!11126 = !DILocation(line: 3248, column: 5, scope: !11101)
!11127 = !DILocation(line: 3250, column: 5, scope: !11101)
!11128 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1454, file: !1454, line: 3277, type: !1931, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11129)
!11129 = !{!11130, !11131, !11132}
!11130 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11128, file: !1454, line: 3277, type: !88)
!11131 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11128, file: !1454, line: 3277, type: !61)
!11132 = !DILocalVariable(name: "D", scope: !11128, file: !1454, line: 3279, type: !1624)
!11133 = !DILocation(line: 0, scope: !11128)
!11134 = !DILocation(line: 3279, column: 29, scope: !11128)
!11135 = !DILocation(line: 3281, column: 5, scope: !11128)
!11136 = !DILocation(line: 3282, column: 5, scope: !11128)
!11137 = !DILocation(line: 3283, column: 5, scope: !11128)
!11138 = !DILocation(line: 3285, column: 5, scope: !11128)
!11139 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1454, file: !1454, line: 3332, type: !1957, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11140)
!11140 = !{!11141, !11142, !11143}
!11141 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11139, file: !1454, line: 3332, type: !88)
!11142 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !11139, file: !1454, line: 3332, type: !88)
!11143 = !DILocalVariable(name: "ACTION", arg: 3, scope: !11139, file: !1454, line: 3332, type: !61)
!11144 = !DILocation(line: 0, scope: !11139)
!11145 = !DILocation(line: 3334, column: 5, scope: !11139)
!11146 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1454, file: !1454, line: 2350, type: !1965, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11147)
!11147 = !{!11148, !11149, !11150, !11151}
!11148 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11146, file: !1454, line: 2350, type: !88)
!11149 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !11146, file: !1454, line: 2350, type: !61)
!11150 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !11146, file: !1454, line: 2350, type: !88)
!11151 = !DILocalVariable(name: "D", scope: !11146, file: !1454, line: 2352, type: !1624)
!11152 = !DILocation(line: 0, scope: !11146)
!11153 = !DILocation(line: 2353, column: 9, scope: !11146)
!11154 = !DILocation(line: 2354, column: 12, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !1454, line: 2353, column: 51)
!11156 = distinct !DILexicalBlock(scope: !11146, file: !1454, line: 2353, column: 9)
!11157 = !DILocation(line: 2354, column: 9, scope: !11155)
!11158 = !DILocation(line: 2355, column: 5, scope: !11155)
!11159 = !DILocation(line: 2356, column: 17, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11161, file: !1454, line: 2356, column: 13)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !1454, line: 2355, column: 71)
!11162 = distinct !DILexicalBlock(scope: !11156, file: !1454, line: 2355, column: 16)
!11163 = !DILocation(line: 2356, column: 14, scope: !11160)
!11164 = !DILocation(line: 2356, column: 28, scope: !11160)
!11165 = !DILocation(line: 2356, column: 49, scope: !11160)
!11166 = !DILocation(line: 2356, column: 56, scope: !11160)
!11167 = !DILocation(line: 2356, column: 70, scope: !11160)
!11168 = !DILocation(line: 2356, column: 80, scope: !11160)
!11169 = !DILocation(line: 2356, column: 13, scope: !11161)
!11170 = !DILocation(line: 2361, column: 9, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !1454, line: 2361, column: 9)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !1454, line: 2361, column: 9)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !1454, line: 2361, column: 9)
!11174 = distinct !DILexicalBlock(scope: !11162, file: !1454, line: 2359, column: 12)
!11175 = !DILocation(line: 2363, column: 5, scope: !11146)
!11176 = !DILocation(line: 2364, column: 1, scope: !11146)
!11177 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1454, file: !1454, line: 3355, type: !1724, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11178)
!11178 = !{!11179, !11180, !11181}
!11179 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11177, file: !1454, line: 3355, type: !88)
!11180 = !DILocalVariable(name: "D", scope: !11177, file: !1454, line: 3357, type: !1624)
!11181 = !DILocalVariable(name: "status", scope: !11177, file: !1454, line: 3358, type: !1208)
!11182 = !DILocation(line: 0, scope: !11177)
!11183 = !DILocation(line: 3366, column: 12, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11177, file: !1454, line: 3366, column: 9)
!11185 = !DILocation(line: 3366, column: 17, scope: !11184)
!11186 = !DILocation(line: 3366, column: 9, scope: !11184)
!11187 = !DILocation(line: 3366, column: 9, scope: !11177)
!11188 = !DILocation(line: 3357, column: 25, scope: !11177)
!11189 = !DILocation(line: 3367, column: 18, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11184, file: !1454, line: 3366, column: 33)
!11191 = !DILocation(line: 3368, column: 25, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11190, file: !1454, line: 3368, column: 13)
!11193 = !DILocation(line: 3368, column: 22, scope: !11192)
!11194 = !DILocation(line: 3368, column: 20, scope: !11192)
!11195 = !DILocation(line: 3368, column: 13, scope: !11190)
!11196 = !DILocation(line: 3373, column: 5, scope: !11177)
!11197 = !DILocation(line: 3374, column: 1, scope: !11177)
!11198 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1454, file: !1454, line: 3044, type: !11199, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11201)
!11199 = !DISubroutineType(types: !11200)
!11200 = !{!1335, !88, !61, !463}
!11201 = !{!11202, !11203, !11204, !11205, !11206, !11207, !11208, !11209}
!11202 = !DILocalVariable(name: "MTDData", arg: 1, scope: !11198, file: !1454, line: 3044, type: !88)
!11203 = !DILocalVariable(name: "addr", arg: 2, scope: !11198, file: !1454, line: 3044, type: !61)
!11204 = !DILocalVariable(name: "data", arg: 3, scope: !11198, file: !1454, line: 3044, type: !463)
!11205 = !DILocalVariable(name: "savedMask", scope: !11198, file: !1454, line: 3046, type: !61)
!11206 = !DILocalVariable(name: "D", scope: !11198, file: !1454, line: 3047, type: !1624)
!11207 = !DILocalVariable(name: "result", scope: !11198, file: !1454, line: 3048, type: !1335)
!11208 = !DILocalVariable(name: "check_data", scope: !11198, file: !1454, line: 3049, type: !463)
!11209 = !DILocalVariable(name: "status_busy", scope: !11198, file: !1454, line: 3050, type: !1208)
!11210 = !DILocation(line: 0, scope: !11198)
!11211 = !DILocation(line: 3047, column: 43, scope: !11198)
!11212 = !DILocation(line: 3053, column: 47, scope: !11198)
!11213 = !DILocation(line: 3053, column: 52, scope: !11198)
!11214 = !DILocation(line: 3053, column: 19, scope: !11198)
!11215 = !DILocation(line: 3056, column: 9, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11198, file: !1454, line: 3056, column: 9)
!11217 = !DILocation(line: 3056, column: 9, scope: !11198)
!11218 = !DILocation(line: 3058, column: 9, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !1454, line: 3058, column: 9)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !1454, line: 3058, column: 9)
!11221 = distinct !DILexicalBlock(scope: !11216, file: !1454, line: 3056, column: 28)
!11222 = !DILocation(line: 3058, column: 9, scope: !11220)
!11223 = !DILocation(line: 3058, column: 9, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11219, file: !1454, line: 3058, column: 9)
!11225 = !DILocation(line: 3060, column: 9, scope: !11221)
!11226 = !DILocation(line: 3062, column: 29, scope: !11221)
!11227 = !DILocation(line: 3063, column: 5, scope: !11221)
!11228 = !DILocation(line: 3065, column: 38, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11216, file: !1454, line: 3065, column: 15)
!11230 = !DILocation(line: 3065, column: 35, scope: !11229)
!11231 = !DILocation(line: 3065, column: 33, scope: !11229)
!11232 = !DILocation(line: 3065, column: 17, scope: !11229)
!11233 = !DILocation(line: 3065, column: 15, scope: !11216)
!11234 = !DILocation(line: 3066, column: 21, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11229, file: !1454, line: 3065, column: 62)
!11236 = !DILocation(line: 3068, column: 9, scope: !11235)
!11237 = !DILocation(line: 3071, column: 23, scope: !11235)
!11238 = !DILocation(line: 3071, column: 22, scope: !11235)
!11239 = !DILocation(line: 3073, column: 24, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11235, file: !1454, line: 3073, column: 13)
!11241 = !DILocation(line: 3073, column: 13, scope: !11235)
!11242 = !DILocation(line: 3078, column: 16, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !1454, line: 3078, column: 16)
!11244 = distinct !DILexicalBlock(scope: !11240, file: !1454, line: 3075, column: 16)
!11245 = !DILocation(line: 3078, column: 16, scope: !11244)
!11246 = !DILocation(line: 3081, column: 58, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11243, file: !1454, line: 3078, column: 46)
!11248 = !DILocation(line: 3081, column: 17, scope: !11247)
!11249 = !DILocation(line: 3082, column: 22, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11247, file: !1454, line: 3082, column: 21)
!11251 = !DILocation(line: 3082, column: 49, scope: !11250)
!11252 = !DILocation(line: 3082, column: 21, scope: !11247)
!11253 = !DILocation(line: 3088, column: 9, scope: !11235)
!11254 = !DILocation(line: 3091, column: 9, scope: !11198)
!11255 = !DILocation(line: 3092, column: 13, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !1454, line: 3092, column: 13)
!11257 = distinct !DILexicalBlock(scope: !11198, file: !1454, line: 3091, column: 9)
!11258 = !DILocation(line: 3092, column: 33, scope: !11256)
!11259 = !DILocation(line: 3092, column: 13, scope: !11257)
!11260 = !DILocation(line: 3106, column: 5, scope: !11198)
!11261 = !DILocation(line: 3107, column: 1, scope: !11198)
!11262 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1454, file: !1454, line: 3497, type: !11263, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11265)
!11263 = !DISubroutineType(types: !11264)
!11264 = !{null, !1624, !61}
!11265 = !{!11266, !11267, !11268}
!11266 = !DILocalVariable(name: "D", arg: 1, scope: !11262, file: !1454, line: 3497, type: !1624)
!11267 = !DILocalVariable(name: "addr", arg: 2, scope: !11262, file: !1454, line: 3497, type: !61)
!11268 = !DILocalVariable(name: "savedMask", scope: !11262, file: !1454, line: 3499, type: !61)
!11269 = !DILocation(line: 0, scope: !11262)
!11270 = !DILocation(line: 3501, column: 14, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11262, file: !1454, line: 3501, column: 9)
!11272 = !DILocation(line: 3501, column: 25, scope: !11271)
!11273 = !DILocation(line: 3501, column: 9, scope: !11262)
!11274 = !DILocation(line: 3502, column: 9, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11271, file: !1454, line: 3501, column: 51)
!11276 = !DILocation(line: 3503, column: 5, scope: !11275)
!11277 = !DILocation(line: 3507, column: 17, scope: !11262)
!11278 = !DILocation(line: 3516, column: 5, scope: !11262)
!11279 = !DILocation(line: 3517, column: 31, scope: !11262)
!11280 = !DILocation(line: 3517, column: 38, scope: !11262)
!11281 = !DILocation(line: 3517, column: 43, scope: !11262)
!11282 = !DILocation(line: 3517, column: 59, scope: !11262)
!11283 = !DILocation(line: 3517, column: 56, scope: !11262)
!11284 = !DILocation(line: 3517, column: 5, scope: !11262)
!11285 = !DILocation(line: 3523, column: 5, scope: !11262)
!11286 = !DILocation(line: 3524, column: 1, scope: !11262)
!11287 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1454, file: !1454, line: 2018, type: !10388, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11288)
!11288 = !{!11289, !11290, !11291}
!11289 = !DILocalVariable(name: "driver", arg: 1, scope: !11287, file: !1454, line: 2018, type: !10390)
!11290 = !DILocalVariable(name: "D", arg: 2, scope: !11287, file: !1454, line: 2018, type: !1624)
!11291 = !DILocalVariable(name: "result", scope: !11287, file: !1454, line: 2020, type: !1335)
!11292 = !DILocation(line: 0, scope: !11287)
!11293 = !DILocation(line: 2022, column: 13, scope: !11287)
!11294 = !DILocation(line: 2022, column: 5, scope: !11287)
!11295 = !DILocation(line: 2031, column: 16, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11287, file: !1454, line: 2022, column: 31)
!11297 = !DILocation(line: 2031, column: 27, scope: !11296)
!11298 = !DILocation(line: 2033, column: 22, scope: !11296)
!11299 = !DILocation(line: 2034, column: 13, scope: !11296)
!11300 = !DILocation(line: 2049, column: 16, scope: !11296)
!11301 = !DILocation(line: 2049, column: 27, scope: !11296)
!11302 = !DILocation(line: 2051, column: 23, scope: !11296)
!11303 = !DILocation(line: 2053, column: 13, scope: !11296)
!11304 = !DILocation(line: 2058, column: 22, scope: !11296)
!11305 = !DILocation(line: 2059, column: 13, scope: !11296)
!11306 = !DILocation(line: 2079, column: 13, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !1454, line: 2079, column: 13)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !1454, line: 2079, column: 13)
!11309 = distinct !DILexicalBlock(scope: !11296, file: !1454, line: 2079, column: 13)
!11310 = !DILocation(line: 2083, column: 5, scope: !11287)
!11311 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1454, file: !1454, line: 2100, type: !11312, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11314)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{!1335, !10390, !1624, !61, !61}
!11314 = !{!11315, !11316, !11317, !11318, !11319}
!11315 = !DILocalVariable(name: "driver", arg: 1, scope: !11311, file: !1454, line: 2100, type: !10390)
!11316 = !DILocalVariable(name: "D", arg: 2, scope: !11311, file: !1454, line: 2100, type: !1624)
!11317 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !11311, file: !1454, line: 2100, type: !61)
!11318 = !DILocalVariable(name: "parameter", arg: 4, scope: !11311, file: !1454, line: 2100, type: !61)
!11319 = !DILocalVariable(name: "result", scope: !11311, file: !1454, line: 2102, type: !1335)
!11320 = !DILocation(line: 0, scope: !11311)
!11321 = !DILocation(line: 2105, column: 16, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11311, file: !1454, line: 2105, column: 9)
!11323 = !DILocation(line: 2105, column: 24, scope: !11322)
!11324 = !DILocation(line: 2109, column: 12, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11311, file: !1454, line: 2109, column: 9)
!11326 = !DILocation(line: 2109, column: 16, scope: !11325)
!11327 = !DILocation(line: 2109, column: 24, scope: !11325)
!11328 = !DILocation(line: 2109, column: 30, scope: !11325)
!11329 = !DILocation(line: 2109, column: 40, scope: !11325)
!11330 = !DILocation(line: 2109, column: 9, scope: !11311)
!11331 = !DILocation(line: 2118, column: 19, scope: !11311)
!11332 = !DILocation(line: 2118, column: 8, scope: !11311)
!11333 = !DILocation(line: 2118, column: 17, scope: !11311)
!11334 = !DILocation(line: 2119, column: 23, scope: !11311)
!11335 = !DILocation(line: 2119, column: 8, scope: !11311)
!11336 = !DILocation(line: 2119, column: 21, scope: !11311)
!11337 = !DILocation(line: 2122, column: 5, scope: !11311)
!11338 = !DILocation(line: 2125, column: 8, scope: !11311)
!11339 = !DILocation(line: 2125, column: 13, scope: !11311)
!11340 = !DILocation(line: 2125, column: 24, scope: !11311)
!11341 = !DILocation(line: 2126, column: 26, scope: !11311)
!11342 = !DILocation(line: 2126, column: 5, scope: !11311)
!11343 = !DILocation(line: 2128, column: 9, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11311, file: !1454, line: 2128, column: 9)
!11345 = !DILocation(line: 2128, column: 31, scope: !11344)
!11346 = !DILocation(line: 2128, column: 60, scope: !11344)
!11347 = !DILocation(line: 2128, column: 9, scope: !11311)
!11348 = !DILocation(line: 2129, column: 12, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11344, file: !1454, line: 2128, column: 110)
!11350 = !DILocation(line: 2129, column: 17, scope: !11349)
!11351 = !DILocation(line: 2129, column: 28, scope: !11349)
!11352 = !DILocation(line: 2130, column: 9, scope: !11349)
!11353 = !DILocation(line: 2131, column: 5, scope: !11349)
!11354 = !DILocation(line: 2134, column: 14, scope: !11311)
!11355 = !DILocation(line: 2136, column: 5, scope: !11311)
!11356 = !DILocation(line: 2137, column: 1, scope: !11311)
!11357 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1454, file: !1454, line: 3387, type: !11358, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11360)
!11358 = !DISubroutineType(types: !11359)
!11359 = !{null, !1624, !969}
!11360 = !{!11361, !11362, !11363}
!11361 = !DILocalVariable(name: "D", arg: 1, scope: !11357, file: !1454, line: 3387, type: !1624)
!11362 = !DILocalVariable(name: "id", arg: 2, scope: !11357, file: !1454, line: 3387, type: !969)
!11363 = !DILocalVariable(name: "cmd", scope: !11357, file: !1454, line: 3389, type: !463)
!11364 = !DILocation(line: 0, scope: !11357)
!11365 = !DILocation(line: 3389, column: 5, scope: !11357)
!11366 = !DILocation(line: 3405, column: 9, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11357, file: !1454, line: 3405, column: 9)
!11368 = !DILocation(line: 3405, column: 21, scope: !11367)
!11369 = !DILocation(line: 0, scope: !11367)
!11370 = !DILocation(line: 3405, column: 9, scope: !11357)
!11371 = !DILocation(line: 3411, column: 31, scope: !11357)
!11372 = !DILocation(line: 3411, column: 5, scope: !11357)
!11373 = !DILocation(line: 3412, column: 1, scope: !11357)
!11374 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1454, file: !1454, line: 3585, type: !11375, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{null, !9157, !969, !969, !9157, !9157}
!11377 = !{!11378, !11379, !11380, !11381, !11382, !11383}
!11378 = !DILocalVariable(name: "CS", arg: 1, scope: !11374, file: !1454, line: 3585, type: !9157)
!11379 = !DILocalVariable(name: "cmd", arg: 2, scope: !11374, file: !1454, line: 3585, type: !969)
!11380 = !DILocalVariable(name: "data", arg: 3, scope: !11374, file: !1454, line: 3585, type: !969)
!11381 = !DILocalVariable(name: "outl", arg: 4, scope: !11374, file: !1454, line: 3585, type: !9157)
!11382 = !DILocalVariable(name: "inl", arg: 5, scope: !11374, file: !1454, line: 3585, type: !9157)
!11383 = !DILocalVariable(name: "savedMask", scope: !11374, file: !1454, line: 3587, type: !61)
!11384 = !DILocation(line: 0, scope: !11374)
!11385 = !DILocation(line: 3589, column: 17, scope: !11374)
!11386 = !DILocation(line: 3590, column: 5, scope: !11374)
!11387 = !DILocation(line: 3591, column: 5, scope: !11374)
!11388 = !DILocation(line: 3593, column: 1, scope: !11374)
!11389 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1777, file: !1777, line: 110, type: !9635, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !11390)
!11390 = !{!11391, !11392, !11393, !11394}
!11391 = !DILocalVariable(name: "id", arg: 1, scope: !11389, file: !1777, line: 110, type: !969)
!11392 = !DILocalVariable(name: "i", scope: !11389, file: !1777, line: 114, type: !1335)
!11393 = !DILocalVariable(name: "j", scope: !11389, file: !1777, line: 114, type: !1335)
!11394 = !DILocalVariable(name: "id_list", scope: !11389, file: !1777, line: 115, type: !11395)
!11395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11396, size: 32)
!11396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!11397 = !DILocation(line: 0, scope: !11389)
!11398 = !DILocation(line: 119, column: 5, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11389, file: !1777, line: 119, column: 5)
!11400 = !DILocation(line: 119, column: 46, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11399, file: !1777, line: 119, column: 5)
!11402 = !DILocation(line: 119, column: 19, scope: !11401)
!11403 = distinct !{!11403, !11398, !11404}
!11404 = !DILocation(line: 131, column: 5, scope: !11399)
!11405 = !DILocation(line: 121, column: 23, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !1777, line: 121, column: 9)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !1777, line: 121, column: 9)
!11408 = distinct !DILexicalBlock(scope: !11401, file: !1777, line: 119, column: 50)
!11409 = !DILocation(line: 121, column: 9, scope: !11407)
!11410 = !DILocation(line: 122, column: 17, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !1777, line: 122, column: 17)
!11412 = distinct !DILexicalBlock(scope: !11406, file: !1777, line: 121, column: 51)
!11413 = !DILocation(line: 122, column: 37, scope: !11411)
!11414 = !DILocation(line: 122, column: 34, scope: !11411)
!11415 = !DILocation(line: 122, column: 17, scope: !11412)
!11416 = !DILocation(line: 121, column: 47, scope: !11406)
!11417 = distinct !{!11417, !11409, !11418}
!11418 = !DILocation(line: 125, column: 9, scope: !11407)
!11419 = !DILocation(line: 0, scope: !11407)
!11420 = !DILocation(line: 127, column: 15, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11408, file: !1777, line: 127, column: 13)
!11422 = !DILocation(line: 127, column: 13, scope: !11408)
!11423 = !DILocation(line: 134, column: 1, scope: !11389)
!11424 = distinct !DISubprogram(name: "CMEM_Index", scope: !1777, file: !1777, line: 153, type: !9790, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !11425)
!11425 = !{!11426, !11427, !11428, !11435}
!11426 = !DILocalVariable(name: "i", scope: !11424, file: !1777, line: 156, type: !1335)
!11427 = !DILocalVariable(name: "j", scope: !11424, file: !1777, line: 156, type: !1335)
!11428 = !DILocalVariable(name: "id", scope: !11424, file: !1777, line: 157, type: !11429)
!11429 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1847, line: 89, baseType: !11430)
!11430 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1847, line: 86, size: 64, elements: !11431)
!11431 = !{!11432, !11433}
!11432 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !11430, file: !1847, line: 87, baseType: !1860, size: 64)
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !11430, file: !1847, line: 88, baseType: !11434, size: 64)
!11434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 64, elements: !706)
!11435 = !DILocalVariable(name: "id_list", scope: !11424, file: !1777, line: 158, type: !11395)
!11436 = !DILocation(line: 157, column: 5, scope: !11424)
!11437 = !DILocation(line: 157, column: 17, scope: !11424)
!11438 = !DILocation(line: 0, scope: !11424)
!11439 = !DILocation(line: 161, column: 9, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11424, file: !1777, line: 161, column: 9)
!11441 = !DILocation(line: 161, column: 20, scope: !11440)
!11442 = !DILocation(line: 161, column: 9, scope: !11424)
!11443 = !DILocation(line: 172, column: 58, scope: !11424)
!11444 = !DILocation(line: 172, column: 5, scope: !11424)
!11445 = !DILocation(line: 178, column: 5, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11424, file: !1777, line: 178, column: 5)
!11447 = !DILocation(line: 180, column: 23, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !1777, line: 180, column: 9)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !1777, line: 180, column: 9)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !1777, line: 178, column: 53)
!11451 = distinct !DILexicalBlock(scope: !11446, file: !1777, line: 178, column: 5)
!11452 = !DILocation(line: 180, column: 9, scope: !11449)
!11453 = !DILocation(line: 181, column: 17, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !1777, line: 181, column: 17)
!11455 = distinct !DILexicalBlock(scope: !11448, file: !1777, line: 180, column: 51)
!11456 = !DILocation(line: 181, column: 37, scope: !11454)
!11457 = !DILocation(line: 181, column: 34, scope: !11454)
!11458 = !DILocation(line: 181, column: 17, scope: !11455)
!11459 = !DILocation(line: 180, column: 47, scope: !11448)
!11460 = distinct !{!11460, !11452, !11461}
!11461 = !DILocation(line: 184, column: 9, scope: !11449)
!11462 = !DILocation(line: 0, scope: !11449)
!11463 = !DILocation(line: 186, column: 15, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11450, file: !1777, line: 186, column: 13)
!11465 = !DILocation(line: 186, column: 13, scope: !11450)
!11466 = !DILocation(line: 188, column: 26, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11464, file: !1777, line: 186, column: 41)
!11468 = !DILocation(line: 188, column: 24, scope: !11467)
!11469 = !DILocation(line: 189, column: 13, scope: !11467)
!11470 = !DILocation(line: 178, column: 46, scope: !11451)
!11471 = !DILocation(line: 178, column: 19, scope: !11451)
!11472 = distinct !{!11472, !11445, !11473}
!11473 = !DILocation(line: 191, column: 5, scope: !11446)
!11474 = !DILocation(line: 222, column: 12, scope: !11424)
!11475 = !DILocation(line: 223, column: 1, scope: !11424)
!11476 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1777, file: !1777, line: 240, type: !11477, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !11479)
!11477 = !DISubroutineType(types: !11478)
!11478 = !{!11395, !61}
!11479 = !{!11480}
!11480 = !DILocalVariable(name: "index", arg: 1, scope: !11476, file: !1777, line: 240, type: !61)
!11481 = !DILocation(line: 0, scope: !11476)
!11482 = !DILocation(line: 242, column: 13, scope: !11476)
!11483 = !DILocation(line: 242, column: 5, scope: !11476)
!11484 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1777, file: !1777, line: 254, type: !11485, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !11487)
!11485 = !DISubroutineType(types: !11486)
!11486 = !{null, !9157, !88, !1426}
!11487 = !{!11488, !11489, !11490, !11491, !11493, !11494}
!11488 = !DILocalVariable(name: "CS", arg: 1, scope: !11484, file: !1777, line: 254, type: !9157)
!11489 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !11484, file: !1777, line: 254, type: !88)
!11490 = !DILocalVariable(name: "flashid", arg: 3, scope: !11484, file: !1777, line: 254, type: !1426)
!11491 = !DILocalVariable(name: "cmd", scope: !11492, file: !1777, line: 258, type: !463)
!11492 = distinct !DILexicalBlock(scope: !11484, file: !1777, line: 257, column: 5)
!11493 = !DILocalVariable(name: "id", scope: !11492, file: !1777, line: 258, type: !1714)
!11494 = !DILocalVariable(name: "i", scope: !11492, file: !1777, line: 258, type: !463)
!11495 = !DILocation(line: 0, scope: !11484)
!11496 = !DILocation(line: 258, column: 9, scope: !11492)
!11497 = !DILocation(line: 258, column: 22, scope: !11492)
!11498 = !DILocation(line: 0, scope: !11492)
!11499 = !DILocation(line: 260, column: 13, scope: !11492)
!11500 = !DILocation(line: 261, column: 9, scope: !11492)
!11501 = !DILocation(line: 263, column: 13, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11492, file: !1777, line: 263, column: 13)
!11503 = !DILocation(line: 263, column: 27, scope: !11502)
!11504 = !DILocation(line: 263, column: 48, scope: !11502)
!11505 = !DILocation(line: 263, column: 13, scope: !11492)
!11506 = !DILocation(line: 264, column: 17, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11502, file: !1777, line: 263, column: 95)
!11508 = !DILocation(line: 265, column: 13, scope: !11507)
!11509 = !DILocation(line: 266, column: 9, scope: !11507)
!11510 = !DILocation(line: 268, column: 9, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11492, file: !1777, line: 268, column: 9)
!11512 = !DILocation(line: 269, column: 26, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !1777, line: 268, column: 50)
!11514 = distinct !DILexicalBlock(scope: !11511, file: !1777, line: 268, column: 9)
!11515 = !DILocation(line: 269, column: 13, scope: !11513)
!11516 = !DILocation(line: 269, column: 24, scope: !11513)
!11517 = !DILocation(line: 268, column: 46, scope: !11514)
!11518 = !DILocation(line: 268, column: 23, scope: !11514)
!11519 = distinct !{!11519, !11510, !11520}
!11520 = !DILocation(line: 270, column: 9, scope: !11511)
!11521 = !DILocation(line: 271, column: 5, scope: !11484)
!11522 = !DILocation(line: 272, column: 5, scope: !11484)
!11523 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1777, file: !1777, line: 285, type: !9635, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !11524)
!11524 = !{!11525, !11526, !11527, !11528}
!11525 = !DILocalVariable(name: "id", arg: 1, scope: !11523, file: !1777, line: 285, type: !969)
!11526 = !DILocalVariable(name: "i", scope: !11523, file: !1777, line: 289, type: !1335)
!11527 = !DILocalVariable(name: "j", scope: !11523, file: !1777, line: 289, type: !1335)
!11528 = !DILocalVariable(name: "id_list", scope: !11523, file: !1777, line: 290, type: !11395)
!11529 = !DILocation(line: 0, scope: !11523)
!11530 = !DILocation(line: 294, column: 5, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11523, file: !1777, line: 294, column: 5)
!11532 = !DILocation(line: 294, column: 46, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11531, file: !1777, line: 294, column: 5)
!11534 = !DILocation(line: 294, column: 19, scope: !11533)
!11535 = distinct !{!11535, !11530, !11536}
!11536 = !DILocation(line: 306, column: 5, scope: !11531)
!11537 = !DILocation(line: 296, column: 23, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !1777, line: 296, column: 9)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !1777, line: 296, column: 9)
!11540 = distinct !DILexicalBlock(scope: !11533, file: !1777, line: 294, column: 53)
!11541 = !DILocation(line: 296, column: 9, scope: !11539)
!11542 = !DILocation(line: 297, column: 17, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !1777, line: 297, column: 17)
!11544 = distinct !DILexicalBlock(scope: !11538, file: !1777, line: 296, column: 51)
!11545 = !DILocation(line: 297, column: 37, scope: !11543)
!11546 = !DILocation(line: 297, column: 34, scope: !11543)
!11547 = !DILocation(line: 297, column: 17, scope: !11544)
!11548 = !DILocation(line: 296, column: 47, scope: !11538)
!11549 = distinct !{!11549, !11541, !11550}
!11550 = !DILocation(line: 300, column: 9, scope: !11539)
!11551 = !DILocation(line: 0, scope: !11539)
!11552 = !DILocation(line: 302, column: 15, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11540, file: !1777, line: 302, column: 13)
!11554 = !DILocation(line: 302, column: 13, scope: !11540)
!11555 = !DILocation(line: 310, column: 1, scope: !11523)
!11556 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1777, file: !1777, line: 328, type: !9790, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560, !11561}
!11558 = !DILocalVariable(name: "i", scope: !11556, file: !1777, line: 331, type: !1335)
!11559 = !DILocalVariable(name: "j", scope: !11556, file: !1777, line: 331, type: !1335)
!11560 = !DILocalVariable(name: "id", scope: !11556, file: !1777, line: 332, type: !11429)
!11561 = !DILocalVariable(name: "id_list", scope: !11556, file: !1777, line: 333, type: !11395)
!11562 = !DILocation(line: 332, column: 5, scope: !11556)
!11563 = !DILocation(line: 332, column: 17, scope: !11556)
!11564 = !DILocation(line: 0, scope: !11556)
!11565 = !DILocation(line: 336, column: 9, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11556, file: !1777, line: 336, column: 9)
!11567 = !DILocation(line: 336, column: 28, scope: !11566)
!11568 = !DILocation(line: 336, column: 9, scope: !11556)
!11569 = !DILocation(line: 344, column: 60, scope: !11556)
!11570 = !DILocation(line: 344, column: 5, scope: !11556)
!11571 = !DILocation(line: 350, column: 5, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11556, file: !1777, line: 350, column: 5)
!11573 = !DILocation(line: 352, column: 23, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !1777, line: 352, column: 9)
!11575 = distinct !DILexicalBlock(scope: !11576, file: !1777, line: 352, column: 9)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !1777, line: 350, column: 53)
!11577 = distinct !DILexicalBlock(scope: !11572, file: !1777, line: 350, column: 5)
!11578 = !DILocation(line: 352, column: 9, scope: !11575)
!11579 = !DILocation(line: 353, column: 17, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !1777, line: 353, column: 17)
!11581 = distinct !DILexicalBlock(scope: !11574, file: !1777, line: 352, column: 51)
!11582 = !DILocation(line: 353, column: 37, scope: !11580)
!11583 = !DILocation(line: 353, column: 34, scope: !11580)
!11584 = !DILocation(line: 353, column: 17, scope: !11581)
!11585 = !DILocation(line: 352, column: 47, scope: !11574)
!11586 = distinct !{!11586, !11578, !11587}
!11587 = !DILocation(line: 356, column: 9, scope: !11575)
!11588 = !DILocation(line: 0, scope: !11575)
!11589 = !DILocation(line: 358, column: 15, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11576, file: !1777, line: 358, column: 13)
!11591 = !DILocation(line: 358, column: 13, scope: !11576)
!11592 = !DILocation(line: 360, column: 34, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11590, file: !1777, line: 358, column: 41)
!11594 = !DILocation(line: 360, column: 32, scope: !11593)
!11595 = !DILocation(line: 361, column: 13, scope: !11593)
!11596 = !DILocation(line: 350, column: 46, scope: !11577)
!11597 = !DILocation(line: 350, column: 19, scope: !11577)
!11598 = distinct !{!11598, !11571, !11599}
!11599 = !DILocation(line: 363, column: 5, scope: !11572)
!11600 = !DILocation(line: 364, column: 12, scope: !11556)
!11601 = !DILocation(line: 365, column: 1, scope: !11556)
!11602 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2963, file: !2963, line: 64, type: !11603, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !11609)
!11603 = !DISubroutineType(types: !11604)
!11604 = !{null, !9157, !11605, !1426}
!11605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11606, size: 32)
!11606 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !11607)
!11607 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11608, line: 158, baseType: !1208)
!11608 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!11609 = !{!11610, !11611, !11612, !11613, !11614, !11616, !11617}
!11610 = !DILocalVariable(name: "CS", arg: 1, scope: !11602, file: !2963, line: 64, type: !9157)
!11611 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !11602, file: !2963, line: 64, type: !11605)
!11612 = !DILocalVariable(name: "flashid", arg: 3, scope: !11602, file: !2963, line: 64, type: !1426)
!11613 = !DILocalVariable(name: "savedMask", scope: !11602, file: !2963, line: 66, type: !61)
!11614 = !DILocalVariable(name: "cmd", scope: !11615, file: !2963, line: 70, type: !463)
!11615 = distinct !DILexicalBlock(scope: !11602, file: !2963, line: 69, column: 5)
!11616 = !DILocalVariable(name: "id", scope: !11615, file: !2963, line: 70, type: !1714)
!11617 = !DILocalVariable(name: "i", scope: !11615, file: !2963, line: 70, type: !463)
!11618 = !DILocation(line: 0, scope: !11602)
!11619 = !DILocation(line: 70, column: 9, scope: !11615)
!11620 = !DILocation(line: 70, column: 22, scope: !11615)
!11621 = !DILocation(line: 0, scope: !11615)
!11622 = !DILocation(line: 72, column: 13, scope: !11615)
!11623 = !DILocation(line: 73, column: 21, scope: !11615)
!11624 = !DILocation(line: 74, column: 9, scope: !11615)
!11625 = !DILocation(line: 75, column: 9, scope: !11615)
!11626 = !DILocation(line: 77, column: 13, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11615, file: !2963, line: 77, column: 13)
!11628 = !DILocation(line: 77, column: 27, scope: !11627)
!11629 = !DILocation(line: 77, column: 48, scope: !11627)
!11630 = !DILocation(line: 77, column: 13, scope: !11615)
!11631 = !DILocation(line: 78, column: 17, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11627, file: !2963, line: 77, column: 87)
!11633 = !DILocation(line: 79, column: 25, scope: !11632)
!11634 = !DILocation(line: 80, column: 13, scope: !11632)
!11635 = !DILocation(line: 81, column: 13, scope: !11632)
!11636 = !DILocation(line: 82, column: 9, scope: !11632)
!11637 = !DILocation(line: 84, column: 9, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11615, file: !2963, line: 84, column: 9)
!11639 = !DILocation(line: 85, column: 26, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !2963, line: 84, column: 50)
!11641 = distinct !DILexicalBlock(scope: !11638, file: !2963, line: 84, column: 9)
!11642 = !DILocation(line: 85, column: 13, scope: !11640)
!11643 = !DILocation(line: 85, column: 24, scope: !11640)
!11644 = !DILocation(line: 84, column: 46, scope: !11641)
!11645 = !DILocation(line: 84, column: 23, scope: !11641)
!11646 = distinct !{!11646, !11637, !11647}
!11647 = !DILocation(line: 86, column: 9, scope: !11638)
!11648 = !DILocation(line: 87, column: 5, scope: !11602)
!11649 = !DILocation(line: 89, column: 1, scope: !11602)
!11650 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1864, file: !1864, line: 248, type: !4163, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11651 = !DILocation(line: 250, column: 5, scope: !11650)
!11652 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1864, file: !1864, line: 270, type: !4163, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11653 = !DILocation(line: 272, column: 5, scope: !11652)
!11654 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1864, file: !1864, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11655 = !DILocation(line: 296, column: 5, scope: !11654)
!11656 = !DILocation(line: 297, column: 5, scope: !11654)
!11657 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1864, file: !1864, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11658 = !DILocation(line: 309, column: 5, scope: !11657)
!11659 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1864, file: !1864, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11660 = !DILocation(line: 317, column: 5, scope: !11659)
!11661 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1864, file: !1864, line: 334, type: !4163, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11662 = !DILocation(line: 336, column: 5, scope: !11661)
!11663 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1864, file: !1864, line: 353, type: !4163, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11664 = !DILocation(line: 355, column: 5, scope: !11663)
!11665 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1864, file: !1864, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11666 = !DILocation(line: 376, column: 5, scope: !11665)
!11667 = !DILocation(line: 377, column: 1, scope: !11665)
!11668 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1864, file: !1864, line: 395, type: !4163, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11669 = !DILocation(line: 397, column: 5, scope: !11668)
!11670 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1864, file: !1864, line: 416, type: !4163, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1863, retainedNodes: !293)
!11671 = !DILocation(line: 418, column: 5, scope: !11670)
!11672 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1875, file: !1875, line: 254, type: !4163, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !293)
!11673 = !DILocation(line: 256, column: 32, scope: !11672)
!11674 = !DILocation(line: 257, column: 5, scope: !11672)
!11675 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1875, file: !1875, line: 269, type: !9790, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !293)
!11676 = !DILocation(line: 275, column: 24, scope: !11675)
!11677 = !DILocation(line: 278, column: 24, scope: !11675)
!11678 = !DILocation(line: 278, column: 33, scope: !11675)
!11679 = !DILocation(line: 278, column: 49, scope: !11675)
!11680 = !DILocation(line: 278, column: 22, scope: !11675)
!11681 = !DILocation(line: 281, column: 5, scope: !11675)
!11682 = !DILocation(line: 283, column: 34, scope: !11675)
!11683 = !DILocation(line: 283, column: 23, scope: !11675)
!11684 = !DILocation(line: 286, column: 25, scope: !11675)
!11685 = !DILocation(line: 321, column: 5, scope: !11675)
!11686 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1875, file: !1875, line: 332, type: !9790, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11687)
!11687 = !{!11688}
!11688 = !DILocalVariable(name: "result", scope: !11686, file: !1875, line: 334, type: !1335)
!11689 = !DILocation(line: 340, column: 30, scope: !11686)
!11690 = !DILocation(line: 343, column: 24, scope: !11686)
!11691 = !DILocation(line: 344, column: 18, scope: !11686)
!11692 = !DILocation(line: 348, column: 17, scope: !11686)
!11693 = !DILocation(line: 353, column: 19, scope: !11686)
!11694 = !DILocation(line: 354, column: 18, scope: !11686)
!11695 = !DILocation(line: 354, column: 27, scope: !11686)
!11696 = !DILocation(line: 354, column: 43, scope: !11686)
!11697 = !DILocation(line: 350, column: 14, scope: !11686)
!11698 = !DILocation(line: 0, scope: !11686)
!11699 = !DILocation(line: 356, column: 16, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11686, file: !1875, line: 356, column: 9)
!11701 = !DILocation(line: 395, column: 1, scope: !11686)
!11702 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1875, file: !1875, line: 406, type: !11703, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !293)
!11703 = !DISubroutineType(types: !2915)
!11704 = !DILocation(line: 408, column: 5, scope: !11702)
!11705 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1875, file: !1875, line: 420, type: !11706, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11708)
!11706 = !DISubroutineType(types: !11707)
!11707 = !{!61, !463}
!11708 = !{!11709, !11710, !11711}
!11709 = !DILocalVariable(name: "CS", arg: 1, scope: !11705, file: !1875, line: 420, type: !463)
!11710 = !DILocalVariable(name: "index", scope: !11705, file: !1875, line: 422, type: !61)
!11711 = !DILocalVariable(name: "list", scope: !11705, file: !1875, line: 423, type: !2192)
!11712 = !DILocation(line: 0, scope: !11705)
!11713 = !DILocation(line: 427, column: 13, scope: !11705)
!11714 = !DILocation(line: 430, column: 34, scope: !11705)
!11715 = !DILocation(line: 430, column: 5, scope: !11705)
!11716 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1875, file: !1875, line: 442, type: !11717, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11719)
!11717 = !DISubroutineType(types: !11718)
!11718 = !{!61, !61, !2064}
!11719 = !{!11720, !11721, !11722}
!11720 = !DILocalVariable(name: "address", arg: 1, scope: !11716, file: !1875, line: 442, type: !61)
!11721 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !11716, file: !1875, line: 442, type: !2064)
!11722 = !DILocalVariable(name: "i", scope: !11716, file: !1875, line: 444, type: !1208)
!11723 = !DILocation(line: 0, scope: !11716)
!11724 = !DILocation(line: 446, column: 23, scope: !11716)
!11725 = !DILocation(line: 448, column: 36, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !1875, line: 448, column: 5)
!11727 = distinct !DILexicalBlock(scope: !11716, file: !1875, line: 448, column: 5)
!11728 = !DILocation(line: 448, column: 41, scope: !11726)
!11729 = !DILocation(line: 448, column: 5, scope: !11727)
!11730 = !DILocation(line: 449, column: 39, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !1875, line: 449, column: 13)
!11732 = distinct !DILexicalBlock(scope: !11726, file: !1875, line: 448, column: 54)
!11733 = !DILocation(line: 449, column: 21, scope: !11731)
!11734 = !DILocation(line: 449, column: 46, scope: !11731)
!11735 = !DILocation(line: 450, column: 46, scope: !11731)
!11736 = !DILocation(line: 450, column: 25, scope: !11731)
!11737 = !DILocation(line: 449, column: 13, scope: !11732)
!11738 = !DILocation(line: 448, column: 48, scope: !11726)
!11739 = !DILocation(line: 448, column: 29, scope: !11726)
!11740 = !DILocation(line: 448, column: 31, scope: !11726)
!11741 = distinct !{!11741, !11729, !11742}
!11742 = !DILocation(line: 453, column: 5, scope: !11727)
!11743 = !DILocation(line: 454, column: 27, scope: !11716)
!11744 = !DILocation(line: 454, column: 5, scope: !11716)
!11745 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1875, file: !1875, line: 462, type: !3911, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11746)
!11746 = !{!11747}
!11747 = !DILocalVariable(name: "address", arg: 1, scope: !11745, file: !1875, line: 462, type: !61)
!11748 = !DILocation(line: 0, scope: !11745)
!11749 = !DILocation(line: 464, column: 45, scope: !11745)
!11750 = !DILocation(line: 464, column: 12, scope: !11745)
!11751 = !DILocation(line: 464, column: 5, scope: !11745)
!11752 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1875, file: !1875, line: 487, type: !3911, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11753)
!11753 = !{!11754, !11755, !11756}
!11754 = !DILocalVariable(name: "address", arg: 1, scope: !11752, file: !1875, line: 487, type: !61)
!11755 = !DILocalVariable(name: "index", scope: !11752, file: !1875, line: 490, type: !61)
!11756 = !DILocalVariable(name: "list", scope: !11752, file: !1875, line: 491, type: !2192)
!11757 = !DILocation(line: 0, scope: !11752)
!11758 = !DILocation(line: 490, column: 22, scope: !11752)
!11759 = !DILocation(line: 495, column: 45, scope: !11752)
!11760 = !DILocation(line: 495, column: 12, scope: !11752)
!11761 = !DILocation(line: 495, column: 5, scope: !11752)
!11762 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1875, file: !1875, line: 517, type: !11763, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11767)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{!1335, !11765}
!11765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11766, size: 32)
!11766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2078)
!11767 = !{!11768, !11769, !11770}
!11768 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !11762, file: !1875, line: 517, type: !11765)
!11769 = !DILocalVariable(name: "result", scope: !11762, file: !1875, line: 519, type: !61)
!11770 = !DILocalVariable(name: "i", scope: !11762, file: !1875, line: 519, type: !61)
!11771 = !DILocation(line: 0, scope: !11762)
!11772 = !DILocation(line: 522, column: 29, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !1875, line: 522, column: 5)
!11774 = distinct !DILexicalBlock(scope: !11762, file: !1875, line: 522, column: 5)
!11775 = !DILocation(line: 522, column: 38, scope: !11773)
!11776 = !DILocation(line: 522, column: 5, scope: !11774)
!11777 = !DILocation(line: 523, column: 31, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11773, file: !1875, line: 522, column: 51)
!11779 = !DILocation(line: 523, column: 37, scope: !11778)
!11780 = !DILocation(line: 523, column: 16, scope: !11778)
!11781 = !DILocation(line: 522, column: 45, scope: !11773)
!11782 = distinct !{!11782, !11776, !11783}
!11783 = !DILocation(line: 524, column: 5, scope: !11774)
!11784 = !DILocation(line: 525, column: 5, scope: !11762)
!11785 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1875, file: !1875, line: 535, type: !11786, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11788)
!11786 = !DISubroutineType(types: !11787)
!11787 = !{!61, !61, !61, !1890, !2064}
!11788 = !{!11789, !11790, !11791, !11792, !11793, !11794, !11795, !11796, !11797}
!11789 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11785, file: !1875, line: 536, type: !61)
!11790 = !DILocalVariable(name: "length", arg: 2, scope: !11785, file: !1875, line: 537, type: !61)
!11791 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11785, file: !1875, line: 538, type: !1890)
!11792 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !11785, file: !1875, line: 539, type: !2064)
!11793 = !DILocalVariable(name: "addr", scope: !11785, file: !1875, line: 541, type: !61)
!11794 = !DILocalVariable(name: "ptr", scope: !11785, file: !1875, line: 541, type: !61)
!11795 = !DILocalVariable(name: "blksize", scope: !11785, file: !1875, line: 541, type: !61)
!11796 = !DILocalVariable(name: "total_blocks", scope: !11785, file: !1875, line: 541, type: !61)
!11797 = !DILocalVariable(name: "endaddr", scope: !11785, file: !1875, line: 542, type: !61)
!11798 = !DILocation(line: 0, scope: !11785)
!11799 = !DILocation(line: 542, column: 33, scope: !11785)
!11800 = !DILocation(line: 557, column: 59, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !1875, line: 557, column: 5)
!11802 = distinct !DILexicalBlock(scope: !11785, file: !1875, line: 557, column: 5)
!11803 = !DILocation(line: 557, column: 5, scope: !11802)
!11804 = !DILocation(line: 560, column: 19, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11801, file: !1875, line: 559, column: 5)
!11806 = !DILocation(line: 562, column: 26, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11805, file: !1875, line: 562, column: 13)
!11808 = !DILocation(line: 0, scope: !11807)
!11809 = !DILocation(line: 562, column: 13, scope: !11805)
!11810 = !DILocation(line: 563, column: 39, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11807, file: !1875, line: 562, column: 34)
!11812 = !DILocation(line: 564, column: 29, scope: !11811)
!11813 = !DILocation(line: 564, column: 42, scope: !11811)
!11814 = !DILocation(line: 565, column: 9, scope: !11811)
!11815 = !DILocation(line: 567, column: 45, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11807, file: !1875, line: 567, column: 18)
!11817 = !DILocation(line: 567, column: 26, scope: !11816)
!11818 = !DILocation(line: 567, column: 18, scope: !11807)
!11819 = !DILocation(line: 568, column: 29, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11816, file: !1875, line: 567, column: 59)
!11821 = !DILocation(line: 568, column: 41, scope: !11820)
!11822 = !DILocation(line: 569, column: 9, scope: !11820)
!11823 = !DILocation(line: 572, column: 16, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11816, file: !1875, line: 571, column: 14)
!11825 = !DILocation(line: 573, column: 21, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11824, file: !1875, line: 573, column: 17)
!11827 = !DILocation(line: 573, column: 17, scope: !11824)
!11828 = !DILocation(line: 576, column: 29, scope: !11824)
!11829 = !DILocation(line: 576, column: 39, scope: !11824)
!11830 = !DILocation(line: 577, column: 29, scope: !11824)
!11831 = !DILocation(line: 577, column: 42, scope: !11824)
!11832 = !DILocation(line: 0, scope: !11802)
!11833 = !DILocation(line: 579, column: 14, scope: !11805)
!11834 = !DILocation(line: 580, column: 21, scope: !11805)
!11835 = distinct !{!11835, !11803, !11836}
!11836 = !DILocation(line: 581, column: 5, scope: !11802)
!11837 = !DILocation(line: 586, column: 1, scope: !11785)
!11838 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1875, file: !1875, line: 593, type: !11839, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!1335, !61, !61, !1890}
!11841 = !{!11842, !11843, !11844}
!11842 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11838, file: !1875, line: 593, type: !61)
!11843 = !DILocalVariable(name: "length", arg: 2, scope: !11838, file: !1875, line: 593, type: !61)
!11844 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11838, file: !1875, line: 593, type: !1890)
!11845 = !DILocation(line: 0, scope: !11838)
!11846 = !DILocation(line: 595, column: 12, scope: !11838)
!11847 = !DILocation(line: 595, column: 5, scope: !11838)
!11848 = !DILocation(line: 597, column: 81, scope: !11838)
!11849 = !DILocation(line: 597, column: 12, scope: !11838)
!11850 = !DILocation(line: 597, column: 5, scope: !11838)
!11851 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1875, file: !1875, line: 606, type: !11839, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11852)
!11852 = !{!11853, !11854, !11855}
!11853 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11851, file: !1875, line: 606, type: !61)
!11854 = !DILocalVariable(name: "length", arg: 2, scope: !11851, file: !1875, line: 606, type: !61)
!11855 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11851, file: !1875, line: 606, type: !1890)
!11856 = !DILocation(line: 0, scope: !11851)
!11857 = !DILocation(line: 624, column: 5, scope: !11851)
!11858 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1875, file: !1875, line: 637, type: !11839, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11859)
!11859 = !{!11860, !11861, !11862, !11863, !11864}
!11860 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11858, file: !1875, line: 637, type: !61)
!11861 = !DILocalVariable(name: "length", arg: 2, scope: !11858, file: !1875, line: 637, type: !61)
!11862 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11858, file: !1875, line: 637, type: !1890)
!11863 = !DILocalVariable(name: "index", scope: !11858, file: !1875, line: 642, type: !61)
!11864 = !DILocalVariable(name: "list", scope: !11858, file: !1875, line: 644, type: !2192)
!11865 = !DILocation(line: 0, scope: !11858)
!11866 = !DILocation(line: 642, column: 22, scope: !11858)
!11867 = !DILocation(line: 648, column: 81, scope: !11858)
!11868 = !DILocation(line: 648, column: 12, scope: !11858)
!11869 = !DILocation(line: 648, column: 5, scope: !11858)
!11870 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1875, file: !1875, line: 658, type: !11839, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11871)
!11871 = !{!11872, !11873, !11874}
!11872 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11870, file: !1875, line: 658, type: !61)
!11873 = !DILocalVariable(name: "length", arg: 2, scope: !11870, file: !1875, line: 658, type: !61)
!11874 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11870, file: !1875, line: 658, type: !1890)
!11875 = !DILocation(line: 0, scope: !11870)
!11876 = !DILocation(line: 688, column: 5, scope: !11870)
!11877 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1875, file: !1875, line: 700, type: !9224, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11878)
!11878 = !{!11879, !11880, !11881}
!11879 = !DILocalVariable(name: "CS", arg: 1, scope: !11877, file: !1875, line: 700, type: !9157)
!11880 = !DILocalVariable(name: "index", scope: !11877, file: !1875, line: 705, type: !61)
!11881 = !DILocalVariable(name: "list", scope: !11877, file: !1875, line: 707, type: !2192)
!11882 = !DILocation(line: 0, scope: !11877)
!11883 = !DILocation(line: 705, column: 22, scope: !11877)
!11884 = !DILocation(line: 711, column: 24, scope: !11877)
!11885 = !DILocation(line: 711, column: 5, scope: !11877)
!11886 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1875, file: !1875, line: 721, type: !11887, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11889)
!11887 = !DISubroutineType(types: !11888)
!11888 = !{null, !2110, !1395, !61}
!11889 = !{!11890, !11891, !11892}
!11890 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !11886, file: !1875, line: 721, type: !2110)
!11891 = !DILocalVariable(name: "index", arg: 2, scope: !11886, file: !1875, line: 721, type: !1395)
!11892 = !DILocalVariable(name: "bankSize", arg: 3, scope: !11886, file: !1875, line: 721, type: !61)
!11893 = !DILocation(line: 0, scope: !11886)
!11894 = !DILocation(line: 723, column: 18, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11886, file: !1875, line: 723, column: 9)
!11896 = !DILocation(line: 723, column: 26, scope: !11895)
!11897 = !DILocation(line: 723, column: 35, scope: !11895)
!11898 = !DILocation(line: 723, column: 9, scope: !11886)
!11899 = !DILocation(line: 724, column: 26, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11895, file: !1875, line: 723, column: 48)
!11901 = !DILocation(line: 724, column: 32, scope: !11900)
!11902 = !DILocation(line: 725, column: 5, scope: !11900)
!11903 = !DILocation(line: 726, column: 18, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11895, file: !1875, line: 725, column: 12)
!11905 = !DILocation(line: 727, column: 26, scope: !11904)
!11906 = !DILocation(line: 727, column: 32, scope: !11904)
!11907 = !DILocation(line: 728, column: 18, scope: !11904)
!11908 = !DILocation(line: 728, column: 26, scope: !11904)
!11909 = !DILocation(line: 728, column: 35, scope: !11904)
!11910 = !DILocation(line: 731, column: 1, scope: !11886)
!11911 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1875, file: !1875, line: 739, type: !11912, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11914)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{!61, !61, !61, !2110, !11765}
!11914 = !{!11915, !11916, !11917, !11918, !11919, !11920, !11921, !11922, !11923}
!11915 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11911, file: !1875, line: 740, type: !61)
!11916 = !DILocalVariable(name: "length", arg: 2, scope: !11911, file: !1875, line: 741, type: !61)
!11917 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !11911, file: !1875, line: 742, type: !2110)
!11918 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !11911, file: !1875, line: 743, type: !11765)
!11919 = !DILocalVariable(name: "Partition", scope: !11911, file: !1875, line: 745, type: !61)
!11920 = !DILocalVariable(name: "Index", scope: !11911, file: !1875, line: 746, type: !1335)
!11921 = !DILocalVariable(name: "bankSize", scope: !11911, file: !1875, line: 747, type: !61)
!11922 = !DILocalVariable(name: "NextBankAddr", scope: !11911, file: !1875, line: 748, type: !61)
!11923 = !DILocalVariable(name: "srcBankIdx", scope: !11911, file: !1875, line: 748, type: !61)
!11924 = !DILocation(line: 0, scope: !11911)
!11925 = !DILocation(line: 750, column: 12, scope: !11911)
!11926 = !DILocation(line: 750, column: 5, scope: !11911)
!11927 = !DILocation(line: 752, column: 51, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !1875, line: 752, column: 5)
!11929 = distinct !DILexicalBlock(scope: !11911, file: !1875, line: 752, column: 5)
!11930 = !DILocation(line: 752, column: 5, scope: !11929)
!11931 = !DILocation(line: 753, column: 51, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !1875, line: 753, column: 13)
!11933 = distinct !DILexicalBlock(scope: !11928, file: !1875, line: 752, column: 70)
!11934 = !DILocation(line: 753, column: 24, scope: !11932)
!11935 = !DILocation(line: 753, column: 13, scope: !11933)
!11936 = !DILocation(line: 758, column: 49, scope: !11933)
!11937 = !DILocation(line: 758, column: 22, scope: !11933)
!11938 = !DILocation(line: 760, column: 22, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11933, file: !1875, line: 760, column: 13)
!11940 = !DILocation(line: 760, column: 13, scope: !11933)
!11941 = !DILocation(line: 761, column: 37, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11939, file: !1875, line: 760, column: 39)
!11943 = !DILocation(line: 762, column: 24, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11942, file: !1875, line: 762, column: 17)
!11945 = !DILocation(line: 762, column: 17, scope: !11942)
!11946 = !DILocation(line: 767, column: 33, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11942, file: !1875, line: 767, column: 17)
!11948 = !DILocation(line: 767, column: 42, scope: !11947)
!11949 = !DILocation(line: 767, column: 17, scope: !11942)
!11950 = !DILocation(line: 768, column: 33, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11947, file: !1875, line: 767, column: 55)
!11952 = !DILocation(line: 768, column: 39, scope: !11951)
!11953 = !DILocation(line: 769, column: 13, scope: !11951)
!11954 = !DILocation(line: 770, column: 46, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !1875, line: 770, column: 21)
!11956 = distinct !DILexicalBlock(scope: !11947, file: !1875, line: 769, column: 20)
!11957 = !DILocation(line: 770, column: 21, scope: !11956)
!11958 = !DILocation(line: 773, column: 33, scope: !11956)
!11959 = !DILocation(line: 773, column: 39, scope: !11956)
!11960 = !DILocation(line: 774, column: 33, scope: !11956)
!11961 = !DILocation(line: 774, column: 42, scope: !11956)
!11962 = !DILocation(line: 777, column: 22, scope: !11942)
!11963 = !DILocation(line: 778, column: 20, scope: !11942)
!11964 = !DILocation(line: 779, column: 9, scope: !11942)
!11965 = !DILocation(line: 746, column: 13, scope: !11911)
!11966 = !DILocation(line: 752, column: 66, scope: !11928)
!11967 = distinct !{!11967, !11930, !11968}
!11968 = !DILocation(line: 781, column: 5, scope: !11929)
!11969 = !DILocation(line: 784, column: 5, scope: !11911)
!11970 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1875, file: !1875, line: 796, type: !9790, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !11971)
!11971 = !{!11972, !11973}
!11972 = !DILocalVariable(name: "result", scope: !11970, file: !1875, line: 798, type: !1335)
!11973 = !DILocalVariable(name: "i", scope: !11970, file: !1875, line: 799, type: !1335)
!11974 = !DILocation(line: 803, column: 19, scope: !11970)
!11975 = !DILocation(line: 803, column: 28, scope: !11970)
!11976 = !DILocation(line: 803, column: 17, scope: !11970)
!11977 = !DILocation(line: 822, column: 33, scope: !11970)
!11978 = !DILocation(line: 822, column: 56, scope: !11970)
!11979 = !DILocation(line: 822, column: 88, scope: !11970)
!11980 = !DILocation(line: 822, column: 97, scope: !11970)
!11981 = !DILocation(line: 822, column: 5, scope: !11970)
!11982 = !DILocation(line: 829, column: 39, scope: !11970)
!11983 = !DILocation(line: 829, column: 62, scope: !11970)
!11984 = !DILocation(line: 829, column: 14, scope: !11970)
!11985 = !DILocation(line: 0, scope: !11970)
!11986 = !DILocation(line: 834, column: 16, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11970, file: !1875, line: 834, column: 9)
!11988 = !DILocation(line: 834, column: 9, scope: !11970)
!11989 = !DILocation(line: 838, column: 30, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11970, file: !1875, line: 838, column: 5)
!11991 = !DILocation(line: 838, column: 58, scope: !11990)
!11992 = !DILocation(line: 838, column: 78, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11990, file: !1875, line: 838, column: 5)
!11994 = !DILocation(line: 838, column: 88, scope: !11993)
!11995 = !DILocation(line: 838, column: 5, scope: !11990)
!11996 = !DILocation(line: 839, column: 39, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11993, file: !1875, line: 838, column: 102)
!11998 = !DILocation(line: 839, column: 22, scope: !11997)
!11999 = !DILocation(line: 840, column: 37, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11997, file: !1875, line: 840, column: 13)
!12001 = !DILocation(line: 840, column: 13, scope: !11997)
!12002 = !DILocation(line: 841, column: 36, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12000, file: !1875, line: 840, column: 63)
!12004 = !DILocation(line: 842, column: 9, scope: !12003)
!12005 = !DILocation(line: 838, column: 95, scope: !11993)
!12006 = distinct !{!12006, !11995, !12007}
!12007 = !DILocation(line: 843, column: 5, scope: !11990)
!12008 = !DILocation(line: 871, column: 49, scope: !11970)
!12009 = !DILocation(line: 871, column: 72, scope: !11970)
!12010 = !DILocation(line: 871, column: 47, scope: !11970)
!12011 = !DILocation(line: 871, column: 97, scope: !11970)
!12012 = !DILocation(line: 871, column: 19, scope: !11970)
!12013 = !DILocation(line: 882, column: 14, scope: !11970)
!12014 = !DILocation(line: 887, column: 13, scope: !11970)
!12015 = !DILocation(line: 887, column: 22, scope: !11970)
!12016 = !DILocation(line: 887, column: 5, scope: !11970)
!12017 = !DILocation(line: 889, column: 22, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !11970, file: !1875, line: 887, column: 34)
!12019 = !DILocation(line: 890, column: 13, scope: !12018)
!12020 = !DILocation(line: 902, column: 1, scope: !11970)
!12021 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1875, file: !1875, line: 912, type: !12022, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12024)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{null, !979}
!12024 = !{!12025}
!12025 = !DILocalVariable(name: "CS", arg: 1, scope: !12021, file: !1875, line: 912, type: !979)
!12026 = !DILocation(line: 0, scope: !12021)
!12027 = !DILocation(line: 914, column: 12, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12021, file: !1875, line: 914, column: 9)
!12029 = !DILocation(line: 914, column: 9, scope: !12021)
!12030 = !DILocation(line: 918, column: 26, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12028, file: !1875, line: 914, column: 18)
!12032 = !DILocation(line: 918, column: 24, scope: !12031)
!12033 = !DILocation(line: 920, column: 28, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12031, file: !1875, line: 920, column: 13)
!12035 = !DILocation(line: 920, column: 13, scope: !12031)
!12036 = !DILocation(line: 921, column: 13, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !1875, line: 921, column: 13)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !1875, line: 921, column: 13)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !1875, line: 921, column: 13)
!12040 = distinct !DILexicalBlock(scope: !12034, file: !1875, line: 920, column: 33)
!12041 = !DILocation(line: 923, column: 19, scope: !12031)
!12042 = !DILocation(line: 923, column: 17, scope: !12031)
!12043 = !DILocation(line: 924, column: 5, scope: !12031)
!12044 = !DILocation(line: 935, column: 14, scope: !12021)
!12045 = !DILocation(line: 936, column: 1, scope: !12021)
!12046 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1875, file: !1875, line: 952, type: !9790, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !293)
!12047 = !DILocation(line: 955, column: 5, scope: !12046)
!12048 = !DILocation(line: 956, column: 12, scope: !12046)
!12049 = !DILocation(line: 956, column: 5, scope: !12046)
!12050 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1875, file: !1875, line: 974, type: !9790, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1874, retainedNodes: !12051)
!12051 = !{!12052}
!12052 = !DILocalVariable(name: "result", scope: !12050, file: !1875, line: 976, type: !1335)
!12053 = !DILocation(line: 981, column: 5, scope: !12050)
!12054 = !DILocation(line: 986, column: 24, scope: !12050)
!12055 = !DILocation(line: 986, column: 33, scope: !12050)
!12056 = !DILocation(line: 986, column: 49, scope: !12050)
!12057 = !DILocation(line: 986, column: 22, scope: !12050)
!12058 = !DILocation(line: 1002, column: 19, scope: !12050)
!12059 = !DILocation(line: 1002, column: 17, scope: !12050)
!12060 = !DILocation(line: 1014, column: 22, scope: !12050)
!12061 = !DILocation(line: 1014, column: 5, scope: !12050)
!12062 = !DILocation(line: 1024, column: 33, scope: !12050)
!12063 = !DILocation(line: 1026, column: 27, scope: !12050)
!12064 = !DILocation(line: 1027, column: 26, scope: !12050)
!12065 = !DILocation(line: 1042, column: 33, scope: !12050)
!12066 = !DILocation(line: 1044, column: 32, scope: !12050)
!12067 = !DILocation(line: 1052, column: 18, scope: !12050)
!12068 = !DILocation(line: 1052, column: 27, scope: !12050)
!12069 = !DILocation(line: 1052, column: 43, scope: !12050)
!12070 = !DILocation(line: 1048, column: 14, scope: !12050)
!12071 = !DILocation(line: 0, scope: !12050)
!12072 = !DILocation(line: 1063, column: 5, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !1875, line: 1063, column: 5)
!12074 = distinct !DILexicalBlock(scope: !12050, file: !1875, line: 1063, column: 5)
!12075 = !DILocation(line: 1063, column: 5, scope: !12074)
!12076 = !DILocation(line: 1063, column: 5, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !1875, line: 1063, column: 5)
!12078 = !DILocation(line: 1096, column: 36, scope: !12050)
!12079 = !DILocation(line: 1096, column: 34, scope: !12050)
!12080 = !DILocation(line: 1101, column: 5, scope: !12050)
!12081 = !DILocation(line: 1103, column: 34, scope: !12050)
!12082 = !DILocation(line: 1109, column: 35, scope: !12050)
!12083 = !DILocation(line: 1110, column: 33, scope: !12050)
!12084 = !DILocation(line: 1111, column: 34, scope: !12050)
!12085 = !DILocation(line: 1113, column: 5, scope: !12050)
!12086 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2233, file: !2233, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12087 = !DILocation(line: 86, column: 1, scope: !12086)
!12088 = distinct !DISubprogram(name: "GetFDMLock", scope: !2233, file: !2233, line: 87, type: !10256, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12089)
!12089 = !{!12090}
!12090 = !DILocalVariable(name: "savedMask", scope: !12088, file: !2233, line: 89, type: !1335)
!12091 = !DILocation(line: 90, column: 17, scope: !12088)
!12092 = !DILocation(line: 0, scope: !12088)
!12093 = !DILocation(line: 91, column: 9, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12088, file: !2233, line: 91, column: 9)
!12095 = !DILocation(line: 91, column: 9, scope: !12088)
!12096 = !DILocation(line: 92, column: 17, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12094, file: !2233, line: 91, column: 24)
!12098 = !DILocation(line: 94, column: 9, scope: !12097)
!12099 = !DILocation(line: 0, scope: !12094)
!12100 = !DILocation(line: 102, column: 1, scope: !12088)
!12101 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2233, file: !2233, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12102)
!12102 = !{!12103}
!12103 = !DILocalVariable(name: "savedMask", scope: !12101, file: !2233, line: 105, type: !1335)
!12104 = !DILocation(line: 106, column: 17, scope: !12101)
!12105 = !DILocation(line: 0, scope: !12101)
!12106 = !DILocation(line: 107, column: 9, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12101, file: !2233, line: 107, column: 9)
!12108 = !DILocation(line: 107, column: 9, scope: !12101)
!12109 = !DILocation(line: 108, column: 17, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12107, file: !2233, line: 107, column: 24)
!12111 = !DILocation(line: 109, column: 9, scope: !12110)
!12112 = !DILocation(line: 114, column: 1, scope: !12101)
!12113 = !DILocation(line: 111, column: 9, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12107, file: !2233, line: 110, column: 12)
!12115 = !DILocation(line: 112, column: 9, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !2233, line: 112, column: 9)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !2233, line: 112, column: 9)
!12118 = distinct !DILexicalBlock(scope: !12114, file: !2233, line: 112, column: 9)
!12119 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2233, file: !2233, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12120 = !DILocation(line: 123, column: 1, scope: !12119)
!12121 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2233, file: !2233, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12122)
!12122 = !{!12123}
!12123 = !DILocalVariable(name: "Result", scope: !12121, file: !2233, line: 132, type: !2289)
!12124 = !DILocation(line: 133, column: 5, scope: !12121)
!12125 = !DILocation(line: 134, column: 18, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12121, file: !2233, line: 133, column: 8)
!12127 = !DILocation(line: 0, scope: !12121)
!12128 = !DILocation(line: 135, column: 21, scope: !12121)
!12129 = !DILocation(line: 135, column: 5, scope: !12126)
!12130 = distinct !{!12130, !12124, !12131}
!12131 = !DILocation(line: 135, column: 43, scope: !12121)
!12132 = !DILocation(line: 136, column: 1, scope: !12121)
!12133 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2233, file: !2233, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12134 = !DILocation(line: 147, column: 5, scope: !12133)
!12135 = !DILocation(line: 148, column: 1, scope: !12133)
!12136 = distinct !DISubprogram(name: "readRawDiskData", scope: !2233, file: !2233, line: 216, type: !12137, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12178)
!12137 = !DISubroutineType(types: !12138)
!12138 = !{!1335, !12139, !61, !969, !61}
!12139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12140, size: 32)
!12140 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2180, line: 93, baseType: !12141)
!12141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2180, line: 83, size: 1056, elements: !12142)
!12142 = !{!12143, !12144, !12164, !12165, !12177}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !12141, file: !2180, line: 84, baseType: !61, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !12141, file: !2180, line: 85, baseType: !12145, size: 32, offset: 32)
!12145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12146, size: 32)
!12146 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1650, line: 121, baseType: !12147)
!12147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 105, size: 480, elements: !12148)
!12148 = !{!12149, !12150, !12151, !12152, !12153, !12154, !12155, !12156, !12157, !12158, !12159, !12160, !12161, !12162, !12163}
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !12147, file: !1650, line: 106, baseType: !1921, size: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !12147, file: !1650, line: 107, baseType: !1723, size: 32, offset: 32)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !12147, file: !1650, line: 108, baseType: !1926, size: 32, offset: 64)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !12147, file: !1650, line: 109, baseType: !1930, size: 32, offset: 96)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !12147, file: !1650, line: 110, baseType: !1934, size: 32, offset: 128)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !12147, file: !1650, line: 111, baseType: !1930, size: 32, offset: 160)
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !12147, file: !1650, line: 112, baseType: !1939, size: 32, offset: 192)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !12147, file: !1650, line: 113, baseType: !1930, size: 32, offset: 224)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !12147, file: !1650, line: 114, baseType: !1930, size: 32, offset: 256)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !12147, file: !1650, line: 115, baseType: !1930, size: 32, offset: 288)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !12147, file: !1650, line: 116, baseType: !1946, size: 32, offset: 320)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !12147, file: !1650, line: 117, baseType: !1951, size: 32, offset: 352)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !12147, file: !1650, line: 118, baseType: !1956, size: 32, offset: 384)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !12147, file: !1650, line: 119, baseType: !1960, size: 32, offset: 416)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !12147, file: !1650, line: 120, baseType: !1964, size: 32, offset: 448)
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !12141, file: !2180, line: 86, baseType: !88, size: 32, offset: 64)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !12141, file: !2180, line: 87, baseType: !12166, size: 928, offset: 96)
!12166 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1650, line: 99, baseType: !12167)
!12167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1650, line: 90, size: 928, elements: !12168)
!12168 = !{!12169, !12170, !12171, !12172, !12173, !12174, !12175, !12176}
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !12167, file: !1650, line: 91, baseType: !61, size: 32)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !12167, file: !1650, line: 92, baseType: !1978, size: 256, offset: 32)
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !12167, file: !1650, line: 93, baseType: !1978, size: 256, offset: 288)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !12167, file: !1650, line: 94, baseType: !1978, size: 256, offset: 544)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !12167, file: !1650, line: 95, baseType: !61, size: 32, offset: 800)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !12167, file: !1650, line: 96, baseType: !1970, size: 16, offset: 832)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !12167, file: !1650, line: 97, baseType: !61, size: 32, offset: 864)
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !12167, file: !1650, line: 98, baseType: !61, size: 32, offset: 896)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !12141, file: !2180, line: 92, baseType: !91, size: 8, offset: 1024)
!12178 = !{!12179, !12180, !12181, !12182, !12183, !12184}
!12179 = !DILocalVariable(name: "D", arg: 1, scope: !12136, file: !2233, line: 216, type: !12139)
!12180 = !DILocalVariable(name: "addr", arg: 2, scope: !12136, file: !2233, line: 216, type: !61)
!12181 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !12136, file: !2233, line: 216, type: !969)
!12182 = !DILocalVariable(name: "len", arg: 4, scope: !12136, file: !2233, line: 216, type: !61)
!12183 = !DILocalVariable(name: "phyAddr", scope: !12136, file: !2233, line: 219, type: !61)
!12184 = !DILocalVariable(name: "diskSize", scope: !12136, file: !2233, line: 220, type: !61)
!12185 = !DILocation(line: 0, scope: !12136)
!12186 = !DILocation(line: 220, column: 28, scope: !12136)
!12187 = !DILocation(line: 222, column: 14, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12136, file: !2233, line: 222, column: 9)
!12189 = !DILocation(line: 222, column: 26, scope: !12188)
!12190 = !DILocation(line: 225, column: 51, scope: !12136)
!12191 = !DILocation(line: 225, column: 61, scope: !12136)
!12192 = !DILocation(line: 225, column: 15, scope: !12136)
!12193 = !DILocation(line: 225, column: 70, scope: !12136)
!12194 = !DILocation(line: 227, column: 13, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12136, file: !2233, line: 227, column: 9)
!12196 = !DILocation(line: 227, column: 9, scope: !12136)
!12197 = !DILocation(line: 228, column: 9, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12195, file: !2233, line: 227, column: 23)
!12199 = !DILocation(line: 229, column: 5, scope: !12198)
!12200 = !DILocation(line: 231, column: 5, scope: !12136)
!12201 = !DILocation(line: 233, column: 22, scope: !12136)
!12202 = !DILocation(line: 233, column: 5, scope: !12136)
!12203 = !DILocation(line: 235, column: 5, scope: !12136)
!12204 = !DILocation(line: 237, column: 5, scope: !12136)
!12205 = !DILocation(line: 238, column: 1, scope: !12136)
!12206 = distinct !DISubprogram(name: "MountDevice", scope: !2233, file: !2233, line: 165, type: !12207, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12209)
!12207 = !DISubroutineType(types: !12208)
!12208 = !{null, !12139}
!12209 = !{!12210, !12211}
!12210 = !DILocalVariable(name: "D", arg: 1, scope: !12206, file: !2233, line: 165, type: !12139)
!12211 = !DILocalVariable(name: "Result", scope: !12206, file: !2233, line: 167, type: !1335)
!12212 = !DILocation(line: 0, scope: !12206)
!12213 = !DILocation(line: 171, column: 12, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12206, file: !2233, line: 171, column: 9)
!12215 = !DILocation(line: 171, column: 9, scope: !12206)
!12216 = !DILocation(line: 176, column: 5, scope: !12206)
!12217 = !DILocation(line: 186, column: 17, scope: !12206)
!12218 = !DILocation(line: 186, column: 28, scope: !12206)
!12219 = !DILocation(line: 186, column: 43, scope: !12206)
!12220 = !DILocation(line: 186, column: 64, scope: !12206)
!12221 = !DILocation(line: 186, column: 52, scope: !12206)
!12222 = !DILocation(line: 186, column: 14, scope: !12206)
!12223 = !DILocation(line: 188, column: 5, scope: !12206)
!12224 = !DILocation(line: 190, column: 16, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12206, file: !2233, line: 190, column: 9)
!12226 = !DILocation(line: 190, column: 9, scope: !12206)
!12227 = !DILocation(line: 191, column: 9, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12229, file: !2233, line: 191, column: 9)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !2233, line: 191, column: 9)
!12230 = distinct !DILexicalBlock(scope: !12231, file: !2233, line: 191, column: 9)
!12231 = distinct !DILexicalBlock(scope: !12225, file: !2233, line: 190, column: 31)
!12232 = !DILocation(line: 194, column: 17, scope: !12206)
!12233 = !DILocation(line: 195, column: 1, scope: !12206)
!12234 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2233, file: !2233, line: 277, type: !12137, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12235)
!12235 = !{!12236, !12237, !12238, !12239, !12240, !12241, !12242, !12243, !12244, !12245, !12249, !12250, !12251, !12256}
!12236 = !DILocalVariable(name: "D", arg: 1, scope: !12234, file: !2233, line: 277, type: !12139)
!12237 = !DILocalVariable(name: "addr", arg: 2, scope: !12234, file: !2233, line: 277, type: !61)
!12238 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !12234, file: !2233, line: 277, type: !969)
!12239 = !DILocalVariable(name: "len", arg: 4, scope: !12234, file: !2233, line: 277, type: !61)
!12240 = !DILocalVariable(name: "dest", scope: !12234, file: !2233, line: 279, type: !61)
!12241 = !DILocalVariable(name: "src", scope: !12234, file: !2233, line: 279, type: !61)
!12242 = !DILocalVariable(name: "diskSize", scope: !12234, file: !2233, line: 280, type: !61)
!12243 = !DILocalVariable(name: "result", scope: !12234, file: !2233, line: 281, type: !1335)
!12244 = !DILocalVariable(name: "DoneLength", scope: !12234, file: !2233, line: 282, type: !61)
!12245 = !DILocalVariable(name: "blockSize", scope: !12246, file: !2233, line: 313, type: !61)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !2233, line: 312, column: 14)
!12247 = distinct !DILexicalBlock(scope: !12248, file: !2233, line: 305, column: 13)
!12248 = distinct !DILexicalBlock(scope: !12234, file: !2233, line: 298, column: 30)
!12249 = !DILocalVariable(name: "programBytes", scope: !12246, file: !2233, line: 314, type: !61)
!12250 = !DILocalVariable(name: "nextBlkAddr", scope: !12246, file: !2233, line: 316, type: !61)
!12251 = !DILocalVariable(name: "Cell", scope: !12252, file: !2233, line: 346, type: !12254)
!12252 = distinct !DILexicalBlock(scope: !12253, file: !2233, line: 345, column: 83)
!12253 = distinct !DILexicalBlock(scope: !12246, file: !2233, line: 345, column: 17)
!12254 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !12255, line: 76, baseType: !1208)
!12255 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/i2c_control_EEPROM_with_dma_ex/GCC")
!12256 = !DILocalVariable(name: "b", scope: !12252, file: !2233, line: 347, type: !969)
!12257 = !DILocation(line: 0, scope: !12234)
!12258 = !DILocation(line: 280, column: 28, scope: !12234)
!12259 = !DILocation(line: 284, column: 14, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12234, file: !2233, line: 284, column: 9)
!12261 = !DILocation(line: 284, column: 9, scope: !12234)
!12262 = !DILocation(line: 288, column: 14, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12234, file: !2233, line: 288, column: 9)
!12264 = !DILocation(line: 288, column: 20, scope: !12263)
!12265 = !DILocation(line: 288, column: 9, scope: !12234)
!12266 = !DILocation(line: 292, column: 13, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12234, file: !2233, line: 292, column: 9)
!12268 = !DILocation(line: 292, column: 9, scope: !12234)
!12269 = !DILocation(line: 293, column: 9, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12267, file: !2233, line: 292, column: 23)
!12271 = !DILocation(line: 294, column: 5, scope: !12270)
!12272 = !DILocation(line: 296, column: 5, scope: !12234)
!12273 = !DILocation(line: 346, column: 17, scope: !12252)
!12274 = !DILocation(line: 298, column: 23, scope: !12234)
!12275 = !DILocation(line: 298, column: 5, scope: !12234)
!12276 = !DILocation(line: 299, column: 52, scope: !12248)
!12277 = !DILocation(line: 299, column: 62, scope: !12248)
!12278 = !DILocation(line: 299, column: 16, scope: !12248)
!12279 = !DILocation(line: 299, column: 71, scope: !12248)
!12280 = !DILocation(line: 299, column: 78, scope: !12248)
!12281 = !DILocation(line: 300, column: 34, scope: !12248)
!12282 = !DILocation(line: 302, column: 12, scope: !12248)
!12283 = !DILocation(line: 302, column: 23, scope: !12248)
!12284 = !DILocation(line: 302, column: 81, scope: !12248)
!12285 = !DILocation(line: 302, column: 45, scope: !12248)
!12286 = !DILocation(line: 302, column: 9, scope: !12248)
!12287 = !DILocation(line: 305, column: 29, scope: !12247)
!12288 = !DILocation(line: 305, column: 57, scope: !12247)
!12289 = !DILocation(line: 305, column: 66, scope: !12247)
!12290 = !DILocation(line: 305, column: 80, scope: !12247)
!12291 = !DILocation(line: 305, column: 13, scope: !12248)
!12292 = !DILocation(line: 306, column: 25, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12247, file: !2233, line: 305, column: 87)
!12294 = !DILocation(line: 306, column: 36, scope: !12293)
!12295 = !DILocation(line: 306, column: 51, scope: !12293)
!12296 = !DILocation(line: 306, column: 60, scope: !12293)
!12297 = !DILocation(line: 306, column: 74, scope: !12293)
!12298 = !DILocation(line: 306, column: 22, scope: !12293)
!12299 = !DILocation(line: 307, column: 24, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12293, file: !2233, line: 307, column: 17)
!12301 = !DILocation(line: 307, column: 17, scope: !12293)
!12302 = !DILocation(line: 310, column: 23, scope: !12293)
!12303 = !DILocation(line: 311, column: 9, scope: !12293)
!12304 = !DILocation(line: 313, column: 47, scope: !12246)
!12305 = !DILocation(line: 313, column: 56, scope: !12246)
!12306 = !DILocation(line: 313, column: 34, scope: !12246)
!12307 = !DILocation(line: 0, scope: !12246)
!12308 = !DILocation(line: 316, column: 42, scope: !12246)
!12309 = !DILocation(line: 316, column: 58, scope: !12246)
!12310 = !DILocation(line: 316, column: 55, scope: !12246)
!12311 = !DILocation(line: 326, column: 22, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12246, file: !2233, line: 326, column: 17)
!12313 = !DILocation(line: 326, column: 37, scope: !12312)
!12314 = !DILocation(line: 326, column: 17, scope: !12246)
!12315 = !DILocation(line: 332, column: 43, scope: !12246)
!12316 = !DILocation(line: 345, column: 30, scope: !12253)
!12317 = !DILocation(line: 345, column: 52, scope: !12253)
!12318 = !DILocation(line: 0, scope: !12252)
!12319 = !DILocation(line: 348, column: 26, scope: !12252)
!12320 = !DILocation(line: 348, column: 24, scope: !12252)
!12321 = !DILocation(line: 348, column: 22, scope: !12252)
!12322 = !DILocation(line: 349, column: 41, scope: !12252)
!12323 = !DILocation(line: 349, column: 24, scope: !12252)
!12324 = !DILocation(line: 349, column: 22, scope: !12252)
!12325 = !DILocation(line: 350, column: 29, scope: !12252)
!12326 = !DILocation(line: 350, column: 40, scope: !12252)
!12327 = !DILocation(line: 350, column: 55, scope: !12252)
!12328 = !DILocation(line: 350, column: 64, scope: !12252)
!12329 = !DILocation(line: 350, column: 26, scope: !12252)
!12330 = !DILocation(line: 351, column: 28, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12252, file: !2233, line: 351, column: 21)
!12332 = !DILocation(line: 354, column: 13, scope: !12253)
!12333 = !DILocation(line: 362, column: 33, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !2233, line: 361, column: 24)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !2233, line: 355, column: 21)
!12336 = distinct !DILexicalBlock(scope: !12253, file: !2233, line: 354, column: 20)
!12337 = !DILocation(line: 362, column: 44, scope: !12334)
!12338 = !DILocation(line: 362, column: 59, scope: !12334)
!12339 = !DILocation(line: 362, column: 68, scope: !12334)
!12340 = !DILocation(line: 362, column: 82, scope: !12334)
!12341 = !DILocation(line: 362, column: 30, scope: !12334)
!12342 = !DILocation(line: 364, column: 28, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12336, file: !2233, line: 364, column: 21)
!12344 = !DILocation(line: 364, column: 21, scope: !12336)
!12345 = !DILocation(line: 368, column: 24, scope: !12246)
!12346 = !DILocation(line: 0, scope: !12247)
!12347 = distinct !{!12347, !12275, !12348}
!12348 = !DILocation(line: 370, column: 5, scope: !12234)
!12349 = !DILocation(line: 372, column: 5, scope: !12234)
!12350 = !DILocation(line: 379, column: 1, scope: !12234)
!12351 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2233, file: !2233, line: 398, type: !12352, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12354)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!1335, !12139, !61}
!12354 = !{!12355, !12356, !12357, !12358}
!12355 = !DILocalVariable(name: "D", arg: 1, scope: !12351, file: !2233, line: 398, type: !12139)
!12356 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !12351, file: !2233, line: 398, type: !61)
!12357 = !DILocalVariable(name: "result", scope: !12351, file: !2233, line: 401, type: !1335)
!12358 = !DILocalVariable(name: "block_index", scope: !12351, file: !2233, line: 402, type: !61)
!12359 = !DILocation(line: 0, scope: !12351)
!12360 = !DILocation(line: 402, column: 36, scope: !12351)
!12361 = !DILocation(line: 403, column: 13, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12351, file: !2233, line: 403, column: 9)
!12363 = !DILocation(line: 403, column: 9, scope: !12351)
!12364 = !DILocation(line: 404, column: 9, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12362, file: !2233, line: 403, column: 23)
!12366 = !DILocation(line: 405, column: 5, scope: !12365)
!12367 = !DILocation(line: 407, column: 37, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12351, file: !2233, line: 407, column: 9)
!12369 = !DILocation(line: 407, column: 21, scope: !12368)
!12370 = !DILocation(line: 407, column: 9, scope: !12351)
!12371 = !DILocation(line: 412, column: 5, scope: !12351)
!12372 = !DILocation(line: 414, column: 8, scope: !12351)
!12373 = !DILocation(line: 414, column: 19, scope: !12351)
!12374 = !DILocation(line: 414, column: 32, scope: !12351)
!12375 = !DILocation(line: 414, column: 5, scope: !12351)
!12376 = !DILocation(line: 416, column: 17, scope: !12351)
!12377 = !DILocation(line: 416, column: 28, scope: !12351)
!12378 = !DILocation(line: 416, column: 42, scope: !12351)
!12379 = !DILocation(line: 416, column: 14, scope: !12351)
!12380 = !DILocation(line: 418, column: 5, scope: !12351)
!12381 = !DILocation(line: 420, column: 16, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12351, file: !2233, line: 420, column: 9)
!12383 = !DILocation(line: 424, column: 1, scope: !12351)
!12384 = distinct !DISubprogram(name: "NOR_init", scope: !2233, file: !2233, line: 433, type: !9790, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12385 = !DILocation(line: 436, column: 9, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12384, file: !2233, line: 436, column: 9)
!12387 = !DILocation(line: 436, column: 9, scope: !12384)
!12388 = !DILocation(line: 437, column: 9, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12386, file: !2233, line: 436, column: 62)
!12390 = !DILocation(line: 438, column: 9, scope: !12389)
!12391 = !DILocation(line: 439, column: 27, scope: !12389)
!12392 = !DILocation(line: 440, column: 5, scope: !12389)
!12393 = !DILocation(line: 441, column: 5, scope: !12384)
!12394 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2233, file: !2233, line: 444, type: !10256, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12395 = !DILocation(line: 446, column: 12, scope: !12394)
!12396 = !DILocation(line: 446, column: 5, scope: !12394)
!12397 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2233, file: !2233, line: 449, type: !12398, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12400)
!12398 = !DISubroutineType(types: !12399)
!12399 = !{!1335, !61, !61, !969}
!12400 = !{!12401, !12402, !12403, !12404, !12405, !12406, !12407}
!12401 = !DILocalVariable(name: "block_idx", arg: 1, scope: !12397, file: !2233, line: 449, type: !61)
!12402 = !DILocalVariable(name: "page_idx", arg: 2, scope: !12397, file: !2233, line: 449, type: !61)
!12403 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !12397, file: !2233, line: 449, type: !969)
!12404 = !DILocalVariable(name: "D", scope: !12397, file: !2233, line: 451, type: !12139)
!12405 = !DILocalVariable(name: "mtdData", scope: !12397, file: !2233, line: 452, type: !2241)
!12406 = !DILocalVariable(name: "result", scope: !12397, file: !2233, line: 453, type: !1335)
!12407 = !DILocalVariable(name: "addr", scope: !12397, file: !2233, line: 455, type: !61)
!12408 = !DILocation(line: 0, scope: !12397)
!12409 = !DILocation(line: 452, column: 60, scope: !12397)
!12410 = !DILocation(line: 455, column: 32, scope: !12397)
!12411 = !DILocation(line: 455, column: 22, scope: !12397)
!12412 = !DILocation(line: 455, column: 95, scope: !12397)
!12413 = !DILocation(line: 455, column: 76, scope: !12397)
!12414 = !DILocation(line: 455, column: 118, scope: !12397)
!12415 = !DILocation(line: 455, column: 74, scope: !12397)
!12416 = !DILocation(line: 455, column: 106, scope: !12397)
!12417 = !DILocation(line: 457, column: 14, scope: !12397)
!12418 = !DILocation(line: 459, column: 16, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12397, file: !2233, line: 459, column: 9)
!12420 = !DILocation(line: 463, column: 1, scope: !12397)
!12421 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2233, file: !2233, line: 466, type: !12398, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12422)
!12422 = !{!12423, !12424, !12425, !12426, !12427, !12428, !12429}
!12423 = !DILocalVariable(name: "block_idx", arg: 1, scope: !12421, file: !2233, line: 466, type: !61)
!12424 = !DILocalVariable(name: "page_idx", arg: 2, scope: !12421, file: !2233, line: 466, type: !61)
!12425 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !12421, file: !2233, line: 466, type: !969)
!12426 = !DILocalVariable(name: "D", scope: !12421, file: !2233, line: 468, type: !12139)
!12427 = !DILocalVariable(name: "mtdData", scope: !12421, file: !2233, line: 469, type: !2241)
!12428 = !DILocalVariable(name: "result", scope: !12421, file: !2233, line: 470, type: !1335)
!12429 = !DILocalVariable(name: "addr", scope: !12421, file: !2233, line: 472, type: !61)
!12430 = !DILocation(line: 0, scope: !12421)
!12431 = !DILocation(line: 469, column: 60, scope: !12421)
!12432 = !DILocation(line: 472, column: 32, scope: !12421)
!12433 = !DILocation(line: 472, column: 22, scope: !12421)
!12434 = !DILocation(line: 472, column: 95, scope: !12421)
!12435 = !DILocation(line: 472, column: 76, scope: !12421)
!12436 = !DILocation(line: 472, column: 118, scope: !12421)
!12437 = !DILocation(line: 472, column: 74, scope: !12421)
!12438 = !DILocation(line: 472, column: 106, scope: !12421)
!12439 = !DILocation(line: 474, column: 14, scope: !12421)
!12440 = !DILocation(line: 475, column: 16, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12421, file: !2233, line: 475, column: 9)
!12442 = !DILocation(line: 479, column: 1, scope: !12421)
!12443 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2233, file: !2233, line: 481, type: !12444, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12446)
!12444 = !DISubroutineType(types: !12445)
!12445 = !{!1335, !61}
!12446 = !{!12447, !12448}
!12447 = !DILocalVariable(name: "block_idx", arg: 1, scope: !12443, file: !2233, line: 481, type: !61)
!12448 = !DILocalVariable(name: "result", scope: !12443, file: !2233, line: 483, type: !1335)
!12449 = !DILocation(line: 0, scope: !12443)
!12450 = !DILocation(line: 484, column: 14, scope: !12443)
!12451 = !DILocation(line: 485, column: 16, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12443, file: !2233, line: 485, column: 9)
!12453 = !DILocation(line: 489, column: 1, scope: !12443)
!12454 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2233, file: !2233, line: 492, type: !3911, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12455)
!12455 = !{!12456, !12457, !12458}
!12456 = !DILocalVariable(name: "block_idx", arg: 1, scope: !12454, file: !2233, line: 492, type: !61)
!12457 = !DILocalVariable(name: "D", scope: !12454, file: !2233, line: 494, type: !12139)
!12458 = !DILocalVariable(name: "mtdData", scope: !12454, file: !2233, line: 495, type: !2241)
!12459 = !DILocation(line: 0, scope: !12454)
!12460 = !DILocation(line: 495, column: 60, scope: !12454)
!12461 = !DILocation(line: 496, column: 12, scope: !12454)
!12462 = !DILocation(line: 496, column: 5, scope: !12454)
!12463 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2233, file: !2233, line: 499, type: !3911, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12464)
!12464 = !{!12465, !12466, !12467}
!12465 = !DILocalVariable(name: "block_addr", arg: 1, scope: !12463, file: !2233, line: 499, type: !61)
!12466 = !DILocalVariable(name: "D", scope: !12463, file: !2233, line: 501, type: !12139)
!12467 = !DILocalVariable(name: "mtdData", scope: !12463, file: !2233, line: 502, type: !2241)
!12468 = !DILocation(line: 0, scope: !12463)
!12469 = !DILocation(line: 502, column: 60, scope: !12463)
!12470 = !DILocation(line: 504, column: 12, scope: !12463)
!12471 = !DILocation(line: 504, column: 5, scope: !12463)
!12472 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2233, file: !2233, line: 510, type: !12473, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12475)
!12473 = !DISubroutineType(types: !12474)
!12474 = !{!1335, !61, !1395, !1395}
!12475 = !{!12476, !12477, !12478, !12479, !12480}
!12476 = !DILocalVariable(name: "block_addr", arg: 1, scope: !12472, file: !2233, line: 510, type: !61)
!12477 = !DILocalVariable(name: "block_index", arg: 2, scope: !12472, file: !2233, line: 510, type: !1395)
!12478 = !DILocalVariable(name: "offset", arg: 3, scope: !12472, file: !2233, line: 510, type: !1395)
!12479 = !DILocalVariable(name: "D", scope: !12472, file: !2233, line: 512, type: !12139)
!12480 = !DILocalVariable(name: "mtdData", scope: !12472, file: !2233, line: 513, type: !2241)
!12481 = !DILocation(line: 0, scope: !12472)
!12482 = !DILocation(line: 513, column: 60, scope: !12472)
!12483 = !DILocation(line: 519, column: 20, scope: !12472)
!12484 = !DILocation(line: 519, column: 18, scope: !12472)
!12485 = !DILocation(line: 520, column: 22, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12472, file: !2233, line: 520, column: 9)
!12487 = !DILocation(line: 520, column: 9, scope: !12472)
!12488 = !DILocation(line: 524, column: 28, scope: !12472)
!12489 = !DILocation(line: 524, column: 26, scope: !12472)
!12490 = !DILocation(line: 524, column: 13, scope: !12472)
!12491 = !DILocation(line: 526, column: 5, scope: !12472)
!12492 = !DILocation(line: 527, column: 1, scope: !12472)
!12493 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2233, file: !2233, line: 532, type: !12494, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12496)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!1335, !61, !61, !1395}
!12496 = !{!12497, !12498, !12499, !12500, !12501}
!12497 = !DILocalVariable(name: "block_index", arg: 1, scope: !12493, file: !2233, line: 532, type: !61)
!12498 = !DILocalVariable(name: "offset", arg: 2, scope: !12493, file: !2233, line: 532, type: !61)
!12499 = !DILocalVariable(name: "addr", arg: 3, scope: !12493, file: !2233, line: 532, type: !1395)
!12500 = !DILocalVariable(name: "D", scope: !12493, file: !2233, line: 534, type: !12139)
!12501 = !DILocalVariable(name: "mtdData", scope: !12493, file: !2233, line: 535, type: !2241)
!12502 = !DILocation(line: 0, scope: !12493)
!12503 = !DILocation(line: 535, column: 60, scope: !12493)
!12504 = !DILocation(line: 537, column: 23, scope: !12493)
!12505 = !DILocation(line: 537, column: 13, scope: !12493)
!12506 = !DILocation(line: 537, column: 79, scope: !12493)
!12507 = !DILocation(line: 537, column: 60, scope: !12493)
!12508 = !DILocation(line: 537, column: 58, scope: !12493)
!12509 = !DILocation(line: 537, column: 88, scope: !12493)
!12510 = !DILocation(line: 537, column: 11, scope: !12493)
!12511 = !DILocation(line: 539, column: 5, scope: !12493)
!12512 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2233, file: !2233, line: 545, type: !12513, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12515)
!12513 = !DISubroutineType(types: !12514)
!12514 = !{!2289, !1335}
!12515 = !{!12516}
!12516 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !12512, file: !2233, line: 545, type: !1335)
!12517 = !DILocation(line: 0, scope: !12512)
!12518 = !DILocation(line: 547, column: 9, scope: !12512)
!12519 = !DILocation(line: 558, column: 9, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12521, file: !2233, line: 558, column: 9)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !2233, line: 558, column: 9)
!12522 = distinct !DILexicalBlock(scope: !12523, file: !2233, line: 558, column: 9)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !2233, line: 557, column: 12)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !2233, line: 555, column: 16)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !2233, line: 553, column: 16)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !2233, line: 551, column: 16)
!12527 = distinct !DILexicalBlock(scope: !12528, file: !2233, line: 549, column: 16)
!12528 = distinct !DILexicalBlock(scope: !12512, file: !2233, line: 547, column: 9)
!12529 = !DILocation(line: 560, column: 1, scope: !12512)
!12530 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2233, file: !2233, line: 561, type: !12531, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12534)
!12531 = !DISubroutineType(types: !12532)
!12532 = !{!12533, !61}
!12533 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1573, line: 127, baseType: !2235)
!12534 = !{!12535, !12536, !12537}
!12535 = !DILocalVariable(name: "address", arg: 1, scope: !12530, file: !2233, line: 561, type: !61)
!12536 = !DILocalVariable(name: "block_size", scope: !12530, file: !2233, line: 563, type: !61)
!12537 = !DILocalVariable(name: "block_index", scope: !12530, file: !2233, line: 564, type: !61)
!12538 = !DILocation(line: 0, scope: !12530)
!12539 = !DILocation(line: 566, column: 19, scope: !12530)
!12540 = !DILocation(line: 567, column: 21, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12530, file: !2233, line: 567, column: 9)
!12542 = !DILocation(line: 567, column: 9, scope: !12530)
!12543 = !DILocation(line: 568, column: 9, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !2233, line: 568, column: 9)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !2233, line: 568, column: 9)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !2233, line: 568, column: 9)
!12547 = distinct !DILexicalBlock(scope: !12541, file: !2233, line: 567, column: 45)
!12548 = !DILocation(line: 570, column: 18, scope: !12530)
!12549 = !DILocation(line: 571, column: 9, scope: !12530)
!12550 = !DILocation(line: 574, column: 9, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !2233, line: 573, column: 38)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !2233, line: 573, column: 16)
!12553 = distinct !DILexicalBlock(scope: !12530, file: !2233, line: 571, column: 9)
!12554 = !DILocation(line: 576, column: 9, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12556, file: !2233, line: 575, column: 39)
!12556 = distinct !DILexicalBlock(scope: !12552, file: !2233, line: 575, column: 16)
!12557 = !DILocation(line: 578, column: 9, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12559, file: !2233, line: 578, column: 9)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !2233, line: 578, column: 9)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !2233, line: 578, column: 9)
!12561 = distinct !DILexicalBlock(scope: !12556, file: !2233, line: 577, column: 12)
!12562 = !DILocation(line: 0, scope: !12553)
!12563 = !DILocation(line: 580, column: 1, scope: !12530)
!12564 = distinct !DISubprogram(name: "hal_flash_init", scope: !2233, file: !2233, line: 583, type: !10256, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12565 = !DILocation(line: 585, column: 5, scope: !12564)
!12566 = !DILocation(line: 586, column: 5, scope: !12564)
!12567 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2233, file: !2233, line: 589, type: !10256, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !293)
!12568 = !DILocation(line: 591, column: 5, scope: !12567)
!12569 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2233, file: !2233, line: 595, type: !12570, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12572)
!12570 = !DISubroutineType(types: !12571)
!12571 = !{!2289, !61, !12533}
!12572 = !{!12573, !12574, !12575, !12576, !12577}
!12573 = !DILocalVariable(name: "start_address", arg: 1, scope: !12569, file: !2233, line: 595, type: !61)
!12574 = !DILocalVariable(name: "block", arg: 2, scope: !12569, file: !2233, line: 595, type: !12533)
!12575 = !DILocalVariable(name: "result", scope: !12569, file: !2233, line: 597, type: !1335)
!12576 = !DILocalVariable(name: "block_index", scope: !12569, file: !2233, line: 598, type: !61)
!12577 = !DILocalVariable(name: "erase_type", scope: !12569, file: !2233, line: 599, type: !61)
!12578 = !DILocation(line: 0, scope: !12569)
!12579 = !DILocation(line: 601, column: 9, scope: !12569)
!12580 = !DILocation(line: 602, column: 28, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !2233, line: 602, column: 13)
!12582 = distinct !DILexicalBlock(scope: !12583, file: !2233, line: 601, column: 38)
!12583 = distinct !DILexicalBlock(scope: !12569, file: !2233, line: 601, column: 9)
!12584 = !DILocation(line: 602, column: 37, scope: !12581)
!12585 = !DILocation(line: 602, column: 13, scope: !12582)
!12586 = !DILocation(line: 607, column: 28, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !2233, line: 607, column: 13)
!12588 = distinct !DILexicalBlock(scope: !12589, file: !2233, line: 606, column: 46)
!12589 = distinct !DILexicalBlock(scope: !12583, file: !2233, line: 606, column: 16)
!12590 = !DILocation(line: 607, column: 38, scope: !12587)
!12591 = !DILocation(line: 607, column: 13, scope: !12588)
!12592 = !DILocation(line: 612, column: 28, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12594, file: !2233, line: 612, column: 13)
!12594 = distinct !DILexicalBlock(scope: !12595, file: !2233, line: 611, column: 46)
!12595 = distinct !DILexicalBlock(scope: !12589, file: !2233, line: 611, column: 16)
!12596 = !DILocation(line: 612, column: 38, scope: !12593)
!12597 = !DILocation(line: 612, column: 13, scope: !12594)
!12598 = !DILocation(line: 0, scope: !12583)
!12599 = !DILocation(line: 621, column: 19, scope: !12569)
!12600 = !DILocation(line: 622, column: 21, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12569, file: !2233, line: 622, column: 9)
!12602 = !DILocation(line: 622, column: 9, scope: !12569)
!12603 = !DILocation(line: 626, column: 17, scope: !12569)
!12604 = !DILocation(line: 627, column: 14, scope: !12569)
!12605 = !DILocation(line: 628, column: 16, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12569, file: !2233, line: 628, column: 9)
!12607 = !DILocation(line: 628, column: 9, scope: !12569)
!12608 = !DILocation(line: 629, column: 16, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12606, file: !2233, line: 628, column: 38)
!12610 = !DILocation(line: 629, column: 9, scope: !12609)
!12611 = !DILocation(line: 632, column: 1, scope: !12569)
!12612 = distinct !DISubprogram(name: "hal_flash_read", scope: !2233, file: !2233, line: 634, type: !12613, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12615)
!12613 = !DISubroutineType(types: !12614)
!12614 = !{!2289, !61, !969, !61}
!12615 = !{!12616, !12617, !12618, !12619, !12620}
!12616 = !DILocalVariable(name: "start_address", arg: 1, scope: !12612, file: !2233, line: 634, type: !61)
!12617 = !DILocalVariable(name: "buffer", arg: 2, scope: !12612, file: !2233, line: 634, type: !969)
!12618 = !DILocalVariable(name: "length", arg: 3, scope: !12612, file: !2233, line: 634, type: !61)
!12619 = !DILocalVariable(name: "D", scope: !12612, file: !2233, line: 636, type: !12139)
!12620 = !DILocalVariable(name: "result", scope: !12612, file: !2233, line: 637, type: !1335)
!12621 = !DILocation(line: 0, scope: !12612)
!12622 = !DILocation(line: 639, column: 14, scope: !12612)
!12623 = !DILocation(line: 641, column: 16, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12612, file: !2233, line: 641, column: 9)
!12625 = !DILocation(line: 641, column: 9, scope: !12612)
!12626 = !DILocation(line: 642, column: 16, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12624, file: !2233, line: 641, column: 38)
!12628 = !DILocation(line: 642, column: 9, scope: !12627)
!12629 = !DILocation(line: 645, column: 1, scope: !12612)
!12630 = distinct !DISubprogram(name: "hal_flash_write", scope: !2233, file: !2233, line: 647, type: !12631, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !12633)
!12631 = !DISubroutineType(types: !12632)
!12632 = !{!2289, !61, !6323, !61}
!12633 = !{!12634, !12635, !12636, !12637, !12638, !12639}
!12634 = !DILocalVariable(name: "address", arg: 1, scope: !12630, file: !2233, line: 647, type: !61)
!12635 = !DILocalVariable(name: "data", arg: 2, scope: !12630, file: !2233, line: 647, type: !6323)
!12636 = !DILocalVariable(name: "length", arg: 3, scope: !12630, file: !2233, line: 647, type: !61)
!12637 = !DILocalVariable(name: "D", scope: !12630, file: !2233, line: 649, type: !12139)
!12638 = !DILocalVariable(name: "result", scope: !12630, file: !2233, line: 650, type: !1335)
!12639 = !DILocalVariable(name: "addr", scope: !12640, file: !2233, line: 660, type: !61)
!12640 = distinct !DILexicalBlock(scope: !12641, file: !2233, line: 659, column: 40)
!12641 = distinct !DILexicalBlock(scope: !12630, file: !2233, line: 659, column: 8)
!12642 = !DILocation(line: 0, scope: !12630)
!12643 = !DILocation(line: 652, column: 14, scope: !12630)
!12644 = !DILocation(line: 653, column: 16, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12630, file: !2233, line: 653, column: 9)
!12646 = !DILocation(line: 653, column: 9, scope: !12630)
!12647 = !DILocation(line: 654, column: 16, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12645, file: !2233, line: 653, column: 38)
!12649 = !DILocation(line: 654, column: 9, scope: !12648)
!12650 = !DILocation(line: 659, column: 8, scope: !12641)
!12651 = !DILocation(line: 659, column: 8, scope: !12630)
!12652 = !DILocation(line: 661, column: 25, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12640, file: !2233, line: 661, column: 8)
!12654 = !DILocation(line: 0, scope: !12640)
!12655 = !DILocation(line: 661, column: 58, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12653, file: !2233, line: 661, column: 8)
!12657 = !DILocation(line: 661, column: 8, scope: !12653)
!12658 = !DILocation(line: 662, column: 13, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12656, file: !2233, line: 661, column: 147)
!12660 = !DILocation(line: 661, column: 128, scope: !12656)
!12661 = distinct !{!12661, !12657, !12662}
!12662 = !DILocation(line: 663, column: 8, scope: !12653)
!12663 = !DILocation(line: 668, column: 1, scope: !12630)
!12664 = distinct !DISubprogram(name: "BlockAddress", scope: !2294, file: !2294, line: 111, type: !12665, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !12667)
!12665 = !DISubroutineType(types: !12666)
!12666 = !{!88, !88, !61}
!12667 = !{!12668, !12669, !12670, !12671, !12672, !12673}
!12668 = !DILocalVariable(name: "DriverData", arg: 1, scope: !12664, file: !2294, line: 111, type: !88)
!12669 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !12664, file: !2294, line: 111, type: !61)
!12670 = !DILocalVariable(name: "D", scope: !12664, file: !2294, line: 113, type: !2322)
!12671 = !DILocalVariable(name: "addr", scope: !12664, file: !2294, line: 114, type: !61)
!12672 = !DILocalVariable(name: "region", scope: !12664, file: !2294, line: 115, type: !61)
!12673 = !DILocalVariable(name: "BlockUpperBound", scope: !12664, file: !2294, line: 115, type: !61)
!12674 = !DILocation(line: 0, scope: !12664)
!12675 = !DILocation(line: 117, column: 26, scope: !12664)
!12676 = !DILocation(line: 117, column: 40, scope: !12664)
!12677 = !DILocation(line: 118, column: 28, scope: !12664)
!12678 = !DILocation(line: 118, column: 5, scope: !12664)
!12679 = !DILocation(line: 119, column: 39, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12664, file: !2294, line: 118, column: 43)
!12681 = !DILocation(line: 119, column: 76, scope: !12680)
!12682 = !DILocation(line: 119, column: 52, scope: !12680)
!12683 = !DILocation(line: 119, column: 14, scope: !12680)
!12684 = !DILocation(line: 120, column: 15, scope: !12680)
!12685 = !DILocation(line: 121, column: 50, scope: !12680)
!12686 = !DILocation(line: 121, column: 25, scope: !12680)
!12687 = distinct !{!12687, !12678, !12688}
!12688 = !DILocation(line: 122, column: 5, scope: !12664)
!12689 = !DILocation(line: 123, column: 68, scope: !12664)
!12690 = !DILocation(line: 123, column: 44, scope: !12664)
!12691 = !DILocation(line: 123, column: 25, scope: !12664)
!12692 = !DILocation(line: 123, column: 107, scope: !12664)
!12693 = !DILocation(line: 123, column: 83, scope: !12664)
!12694 = !DILocation(line: 123, column: 10, scope: !12664)
!12695 = !DILocation(line: 125, column: 16, scope: !12664)
!12696 = !DILocation(line: 125, column: 25, scope: !12664)
!12697 = !DILocation(line: 125, column: 5, scope: !12664)
!12698 = distinct !DISubprogram(name: "MapWindow", scope: !2294, file: !2294, line: 180, type: !1927, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !12699)
!12699 = !{!12700, !12701, !12702, !12703}
!12700 = !DILocalVariable(name: "DriveData", arg: 1, scope: !12698, file: !2294, line: 180, type: !88)
!12701 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !12698, file: !2294, line: 180, type: !61)
!12702 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !12698, file: !2294, line: 180, type: !61)
!12703 = !DILocalVariable(name: "D", scope: !12698, file: !2294, line: 182, type: !2322)
!12704 = !DILocation(line: 0, scope: !12698)
!12705 = !DILocation(line: 185, column: 5, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !2294, line: 185, column: 5)
!12707 = distinct !DILexicalBlock(scope: !12698, file: !2294, line: 185, column: 5)
!12708 = !DILocation(line: 185, column: 5, scope: !12707)
!12709 = !DILocation(line: 185, column: 5, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12706, file: !2294, line: 185, column: 5)
!12711 = !DILocation(line: 186, column: 27, scope: !12698)
!12712 = !DILocation(line: 186, column: 19, scope: !12698)
!12713 = !DILocation(line: 186, column: 8, scope: !12698)
!12714 = !DILocation(line: 186, column: 17, scope: !12698)
!12715 = !DILocation(line: 188, column: 5, scope: !12698)
!12716 = !DILocation(line: 0, scope: !2315)
!12717 = !DILocation(line: 142, column: 12, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !2315, file: !2294, line: 142, column: 9)
!12719 = !DILocation(line: 142, column: 34, scope: !12718)
!12720 = !DILocation(line: 142, column: 64, scope: !12718)
!12721 = !DILocation(line: 142, column: 75, scope: !12718)
!12722 = !DILocation(line: 142, column: 9, scope: !2315)
!12723 = !DILocation(line: 143, column: 79, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !2294, line: 143, column: 13)
!12725 = distinct !DILexicalBlock(scope: !12718, file: !2294, line: 142, column: 99)
!12726 = !DILocation(line: 143, column: 13, scope: !12725)
!12727 = !DILocation(line: 144, column: 72, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !2294, line: 144, column: 17)
!12729 = distinct !DILexicalBlock(scope: !12724, file: !2294, line: 143, column: 94)
!12730 = !DILocation(line: 144, column: 83, scope: !12728)
!12731 = !DILocation(line: 144, column: 17, scope: !12729)
!12732 = !DILocation(line: 145, column: 87, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12734, file: !2294, line: 145, column: 21)
!12734 = distinct !DILexicalBlock(scope: !12728, file: !2294, line: 144, column: 107)
!12735 = !DILocation(line: 145, column: 21, scope: !12734)
!12736 = !DILocation(line: 146, column: 33, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12733, file: !2294, line: 145, column: 102)
!12738 = !DILocation(line: 147, column: 25, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12737, file: !2294, line: 147, column: 25)
!12740 = !DILocation(line: 147, column: 62, scope: !12739)
!12741 = !DILocation(line: 147, column: 34, scope: !12739)
!12742 = !DILocation(line: 147, column: 25, scope: !12737)
!12743 = !DILocation(line: 148, column: 91, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12739, file: !2294, line: 147, column: 106)
!12745 = !DILocation(line: 149, column: 111, scope: !12744)
!12746 = !DILocation(line: 149, column: 101, scope: !12744)
!12747 = !DILocation(line: 149, column: 87, scope: !12744)
!12748 = !DILocation(line: 149, column: 99, scope: !12744)
!12749 = !DILocation(line: 150, column: 37, scope: !12744)
!12750 = !DILocation(line: 150, column: 34, scope: !12744)
!12751 = !DILocation(line: 151, column: 21, scope: !12744)
!12752 = !DILocation(line: 152, column: 91, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12739, file: !2294, line: 151, column: 28)
!12754 = !DILocation(line: 153, column: 111, scope: !12753)
!12755 = !DILocation(line: 153, column: 101, scope: !12753)
!12756 = !DILocation(line: 153, column: 87, scope: !12753)
!12757 = !DILocation(line: 153, column: 99, scope: !12753)
!12758 = !DILocation(line: 154, column: 34, scope: !12753)
!12759 = !DILocation(line: 157, column: 32, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12733, file: !2294, line: 156, column: 24)
!12761 = !DILocation(line: 158, column: 83, scope: !12760)
!12762 = !DILocation(line: 159, column: 60, scope: !12760)
!12763 = !DILocation(line: 159, column: 33, scope: !12760)
!12764 = !DILocation(line: 159, column: 30, scope: !12760)
!12765 = !DILocation(line: 162, column: 29, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12728, file: !2294, line: 161, column: 20)
!12767 = !DILocation(line: 163, column: 83, scope: !12766)
!12768 = !DILocation(line: 164, column: 103, scope: !12766)
!12769 = !DILocation(line: 164, column: 93, scope: !12766)
!12770 = !DILocation(line: 164, column: 79, scope: !12766)
!12771 = !DILocation(line: 164, column: 91, scope: !12766)
!12772 = !DILocation(line: 165, column: 56, scope: !12766)
!12773 = !DILocation(line: 165, column: 29, scope: !12766)
!12774 = !DILocation(line: 165, column: 26, scope: !12766)
!12775 = !DILocation(line: 168, column: 24, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12724, file: !2294, line: 167, column: 16)
!12777 = !DILocation(line: 169, column: 75, scope: !12776)
!12778 = !DILocation(line: 170, column: 50, scope: !12776)
!12779 = !DILocation(line: 170, column: 22, scope: !12776)
!12780 = !DILocation(line: 173, column: 21, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12718, file: !2294, line: 172, column: 12)
!12782 = !DILocation(line: 174, column: 75, scope: !12781)
!12783 = !DILocation(line: 175, column: 95, scope: !12781)
!12784 = !DILocation(line: 175, column: 85, scope: !12781)
!12785 = !DILocation(line: 175, column: 71, scope: !12781)
!12786 = !DILocation(line: 175, column: 83, scope: !12781)
!12787 = !DILocation(line: 176, column: 46, scope: !12781)
!12788 = !DILocation(line: 176, column: 18, scope: !12781)
!12789 = !DILocation(line: 0, scope: !12718)
!12790 = !DILocation(line: 178, column: 5, scope: !2315)
!12791 = distinct !DISubprogram(name: "BlockSize", scope: !2294, file: !2294, line: 191, type: !2316, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !12792)
!12792 = !{!12793, !12794, !12795, !12796, !12797}
!12793 = !DILocalVariable(name: "DriveData", arg: 1, scope: !12791, file: !2294, line: 191, type: !88)
!12794 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !12791, file: !2294, line: 191, type: !61)
!12795 = !DILocalVariable(name: "D", scope: !12791, file: !2294, line: 193, type: !2322)
!12796 = !DILocalVariable(name: "region", scope: !12791, file: !2294, line: 194, type: !61)
!12797 = !DILocalVariable(name: "BlockUpperBound", scope: !12791, file: !2294, line: 194, type: !61)
!12798 = !DILocation(line: 0, scope: !12791)
!12799 = !DILocation(line: 196, column: 26, scope: !12791)
!12800 = !DILocation(line: 196, column: 45, scope: !12791)
!12801 = !DILocation(line: 197, column: 28, scope: !12791)
!12802 = !DILocation(line: 197, column: 5, scope: !12791)
!12803 = !DILocation(line: 198, column: 15, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12791, file: !2294, line: 197, column: 43)
!12805 = !DILocation(line: 199, column: 50, scope: !12804)
!12806 = !DILocation(line: 199, column: 25, scope: !12804)
!12807 = distinct !{!12807, !12802, !12808}
!12808 = !DILocation(line: 200, column: 5, scope: !12791)
!12809 = !DILocation(line: 202, column: 35, scope: !12791)
!12810 = !DILocation(line: 202, column: 5, scope: !12791)
!12811 = distinct !DISubprogram(name: "BlockIndex", scope: !2294, file: !2294, line: 205, type: !2316, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !12812)
!12812 = !{!12813, !12814, !12815, !12816, !12817, !12818}
!12813 = !DILocalVariable(name: "DriveData", arg: 1, scope: !12811, file: !2294, line: 205, type: !88)
!12814 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !12811, file: !2294, line: 205, type: !61)
!12815 = !DILocalVariable(name: "D", scope: !12811, file: !2294, line: 207, type: !2322)
!12816 = !DILocalVariable(name: "region", scope: !12811, file: !2294, line: 208, type: !61)
!12817 = !DILocalVariable(name: "BlockUpperAddr", scope: !12811, file: !2294, line: 208, type: !61)
!12818 = !DILocalVariable(name: "blk_idx", scope: !12811, file: !2294, line: 209, type: !61)
!12819 = !DILocation(line: 0, scope: !12811)
!12820 = !DILocation(line: 211, column: 25, scope: !12811)
!12821 = !DILocation(line: 211, column: 44, scope: !12811)
!12822 = !DILocation(line: 211, column: 81, scope: !12811)
!12823 = !DILocation(line: 211, column: 57, scope: !12811)
!12824 = !DILocation(line: 213, column: 28, scope: !12811)
!12825 = !DILocation(line: 213, column: 40, scope: !12811)
!12826 = !DILocation(line: 213, column: 66, scope: !12811)
!12827 = !DILocation(line: 213, column: 5, scope: !12811)
!12828 = !DILocation(line: 214, column: 17, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12811, file: !2294, line: 213, column: 78)
!12830 = !DILocation(line: 215, column: 18, scope: !12829)
!12831 = !DILocation(line: 216, column: 15, scope: !12829)
!12832 = !DILocation(line: 217, column: 48, scope: !12829)
!12833 = !DILocation(line: 217, column: 85, scope: !12829)
!12834 = !DILocation(line: 217, column: 61, scope: !12829)
!12835 = distinct !{!12835, !12827, !12836}
!12836 = !DILocation(line: 218, column: 5, scope: !12811)
!12837 = !DILocation(line: 221, column: 53, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !2294, line: 220, column: 37)
!12839 = distinct !DILexicalBlock(scope: !12811, file: !2294, line: 220, column: 9)
!12840 = !DILocation(line: 221, column: 29, scope: !12838)
!12841 = !DILocation(line: 221, column: 17, scope: !12838)
!12842 = !DILocation(line: 222, column: 5, scope: !12838)
!12843 = !DILocation(line: 0, scope: !12839)
!12844 = !DILocation(line: 225, column: 5, scope: !12811)
!12845 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2294, file: !2294, line: 232, type: !4163, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !293)
!12846 = !DILocation(line: 238, column: 5, scope: !12845)
!12847 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2294, file: !2294, line: 243, type: !4163, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !293)
!12848 = !DILocation(line: 245, column: 5, scope: !12847)
!12849 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2294, file: !2294, line: 249, type: !4163, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !293)
!12850 = !DILocation(line: 254, column: 5, scope: !12849)
!12851 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2294, file: !2294, line: 259, type: !4163, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !293)
!12852 = !DILocation(line: 261, column: 5, scope: !12851)
!12853 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2294, file: !2294, line: 271, type: !4302, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !12854)
!12854 = !{!12855, !12856}
!12855 = !DILocalVariable(name: "delay", arg: 1, scope: !12853, file: !2294, line: 271, type: !61)
!12856 = !DILocalVariable(name: "ret", scope: !12853, file: !2294, line: 276, type: !3330)
!12857 = !DILocation(line: 0, scope: !12853)
!12858 = !DILocation(line: 277, column: 11, scope: !12853)
!12859 = !DILocation(line: 278, column: 13, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12853, file: !2294, line: 278, column: 9)
!12861 = !DILocation(line: 278, column: 9, scope: !12853)
!12862 = !DILocation(line: 279, column: 9, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !2294, line: 279, column: 9)
!12864 = distinct !DILexicalBlock(scope: !12865, file: !2294, line: 279, column: 9)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !2294, line: 279, column: 9)
!12866 = distinct !DILexicalBlock(scope: !12860, file: !2294, line: 278, column: 35)
!12867 = !DILocation(line: 282, column: 1, scope: !12853)
!12868 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2965, file: !2965, line: 58, type: !12869, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !12871)
!12869 = !DISubroutineType(types: !12870)
!12870 = !{null, !2603, !7, !2603, null}
!12871 = !{!12872, !12873, !12874, !12875, !12884}
!12872 = !DILocalVariable(name: "func", arg: 1, scope: !12868, file: !2965, line: 58, type: !2603)
!12873 = !DILocalVariable(name: "line", arg: 2, scope: !12868, file: !2965, line: 58, type: !7)
!12874 = !DILocalVariable(name: "message", arg: 3, scope: !12868, file: !2965, line: 58, type: !2603)
!12875 = !DILocalVariable(name: "ap", scope: !12868, file: !2965, line: 60, type: !12876)
!12876 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !12877, line: 46, baseType: !12878)
!12877 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!12878 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !12879, line: 32, baseType: !12880)
!12879 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!12880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2965, baseType: !12881)
!12881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !12882)
!12882 = !{!12883}
!12883 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !12881, file: !2965, line: 60, baseType: !88, size: 32)
!12884 = !DILocalVariable(name: "mask", scope: !12868, file: !2965, line: 62, type: !61)
!12885 = !DILocation(line: 0, scope: !12868)
!12886 = !DILocation(line: 60, column: 5, scope: !12868)
!12887 = !DILocation(line: 60, column: 13, scope: !12868)
!12888 = !DILocation(line: 62, column: 5, scope: !12868)
!12889 = !DILocation(line: 63, column: 5, scope: !12868)
!12890 = !DILocation(line: 65, column: 5, scope: !12868)
!12891 = !DILocation(line: 66, column: 5, scope: !12868)
!12892 = !DILocation(line: 67, column: 5, scope: !12868)
!12893 = !DILocation(line: 69, column: 37, scope: !12868)
!12894 = !DILocation(line: 69, column: 5, scope: !12868)
!12895 = !DILocation(line: 71, column: 1, scope: !12868)
!12896 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2965, file: !2965, line: 72, type: !12869, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !12897)
!12897 = !{!12898, !12899, !12900, !12901, !12902}
!12898 = !DILocalVariable(name: "func", arg: 1, scope: !12896, file: !2965, line: 72, type: !2603)
!12899 = !DILocalVariable(name: "line", arg: 2, scope: !12896, file: !2965, line: 72, type: !7)
!12900 = !DILocalVariable(name: "message", arg: 3, scope: !12896, file: !2965, line: 72, type: !2603)
!12901 = !DILocalVariable(name: "ap", scope: !12896, file: !2965, line: 74, type: !12876)
!12902 = !DILocalVariable(name: "mask", scope: !12896, file: !2965, line: 76, type: !61)
!12903 = !DILocation(line: 0, scope: !12896)
!12904 = !DILocation(line: 74, column: 5, scope: !12896)
!12905 = !DILocation(line: 74, column: 13, scope: !12896)
!12906 = !DILocation(line: 76, column: 5, scope: !12896)
!12907 = !DILocation(line: 77, column: 5, scope: !12896)
!12908 = !DILocation(line: 79, column: 5, scope: !12896)
!12909 = !DILocation(line: 80, column: 5, scope: !12896)
!12910 = !DILocation(line: 81, column: 5, scope: !12896)
!12911 = !DILocation(line: 83, column: 37, scope: !12896)
!12912 = !DILocation(line: 83, column: 5, scope: !12896)
!12913 = !DILocation(line: 85, column: 1, scope: !12896)
!12914 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2965, file: !2965, line: 86, type: !12869, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !12915)
!12915 = !{!12916, !12917, !12918, !12919, !12920}
!12916 = !DILocalVariable(name: "func", arg: 1, scope: !12914, file: !2965, line: 86, type: !2603)
!12917 = !DILocalVariable(name: "line", arg: 2, scope: !12914, file: !2965, line: 86, type: !7)
!12918 = !DILocalVariable(name: "message", arg: 3, scope: !12914, file: !2965, line: 86, type: !2603)
!12919 = !DILocalVariable(name: "ap", scope: !12914, file: !2965, line: 88, type: !12876)
!12920 = !DILocalVariable(name: "mask", scope: !12914, file: !2965, line: 90, type: !61)
!12921 = !DILocation(line: 0, scope: !12914)
!12922 = !DILocation(line: 88, column: 5, scope: !12914)
!12923 = !DILocation(line: 88, column: 13, scope: !12914)
!12924 = !DILocation(line: 90, column: 5, scope: !12914)
!12925 = !DILocation(line: 91, column: 5, scope: !12914)
!12926 = !DILocation(line: 93, column: 5, scope: !12914)
!12927 = !DILocation(line: 94, column: 5, scope: !12914)
!12928 = !DILocation(line: 95, column: 5, scope: !12914)
!12929 = !DILocation(line: 97, column: 37, scope: !12914)
!12930 = !DILocation(line: 97, column: 5, scope: !12914)
!12931 = !DILocation(line: 99, column: 1, scope: !12914)
!12932 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2965, file: !2965, line: 101, type: !12933, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2964, retainedNodes: !12937)
!12933 = !DISubroutineType(types: !12934)
!12934 = !{null, !2603, !7, !2603, !12935, !7, null}
!12935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12936, size: 32)
!12936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!12937 = !{!12938, !12939, !12940, !12941, !12942}
!12938 = !DILocalVariable(name: "func", arg: 1, scope: !12932, file: !2965, line: 101, type: !2603)
!12939 = !DILocalVariable(name: "line", arg: 2, scope: !12932, file: !2965, line: 101, type: !7)
!12940 = !DILocalVariable(name: "message", arg: 3, scope: !12932, file: !2965, line: 101, type: !2603)
!12941 = !DILocalVariable(name: "data", arg: 4, scope: !12932, file: !2965, line: 101, type: !12935)
!12942 = !DILocalVariable(name: "length", arg: 5, scope: !12932, file: !2965, line: 101, type: !7)
!12943 = !DILocation(line: 0, scope: !12932)
!12944 = !DILocation(line: 103, column: 1, scope: !12932)
!12945 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2374, file: !2374, line: 87, type: !3911, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !12946)
!12946 = !{!12947, !12948}
!12947 = !DILocalVariable(name: "bank_no", arg: 1, scope: !12945, file: !2374, line: 87, type: !61)
!12948 = !DILocalVariable(name: "value", scope: !12945, file: !2374, line: 89, type: !61)
!12949 = !DILocation(line: 0, scope: !12945)
!12950 = !DILocation(line: 91, column: 41, scope: !12945)
!12951 = !DILocation(line: 91, column: 5, scope: !12945)
!12952 = !DILocation(line: 91, column: 19, scope: !12945)
!12953 = !DILocation(line: 91, column: 31, scope: !12945)
!12954 = !DILocation(line: 92, column: 77, scope: !12945)
!12955 = !DILocation(line: 92, column: 60, scope: !12945)
!12956 = !DILocation(line: 92, column: 31, scope: !12945)
!12957 = !DILocation(line: 94, column: 5, scope: !12945)
!12958 = !DILocation(line: 94, column: 27, scope: !12945)
!12959 = !DILocation(line: 94, column: 39, scope: !12945)
!12960 = !DILocation(line: 94, column: 65, scope: !12945)
!12961 = distinct !{!12961, !12957, !12962}
!12962 = !DILocation(line: 94, column: 70, scope: !12945)
!12963 = !DILocation(line: 96, column: 29, scope: !12945)
!12964 = !DILocation(line: 96, column: 64, scope: !12945)
!12965 = !DILocation(line: 98, column: 5, scope: !12945)
!12966 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2374, file: !2374, line: 102, type: !8380, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !12967)
!12967 = !{!12968, !12969}
!12968 = !DILocalVariable(name: "bank_no", arg: 1, scope: !12966, file: !2374, line: 102, type: !61)
!12969 = !DILocalVariable(name: "value", arg: 2, scope: !12966, file: !2374, line: 102, type: !61)
!12970 = !DILocation(line: 0, scope: !12966)
!12971 = !DILocation(line: 106, column: 40, scope: !12966)
!12972 = !DILocation(line: 106, column: 77, scope: !12966)
!12973 = !DILocation(line: 106, column: 102, scope: !12966)
!12974 = !DILocation(line: 106, column: 5, scope: !12966)
!12975 = !DILocation(line: 106, column: 19, scope: !12966)
!12976 = !DILocation(line: 106, column: 31, scope: !12966)
!12977 = !DILocation(line: 107, column: 77, scope: !12966)
!12978 = !DILocation(line: 107, column: 60, scope: !12966)
!12979 = !DILocation(line: 107, column: 31, scope: !12966)
!12980 = !DILocation(line: 109, column: 5, scope: !12966)
!12981 = !DILocation(line: 109, column: 27, scope: !12966)
!12982 = !DILocation(line: 109, column: 39, scope: !12966)
!12983 = !DILocation(line: 109, column: 65, scope: !12966)
!12984 = distinct !{!12984, !12980, !12985}
!12985 = !DILocation(line: 109, column: 70, scope: !12966)
!12986 = !DILocation(line: 111, column: 5, scope: !12966)
!12987 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2374, file: !2374, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!12988 = !DILocation(line: 117, column: 36, scope: !12987)
!12989 = !DILocation(line: 117, column: 18, scope: !12987)
!12990 = !DILocation(line: 118, column: 37, scope: !12987)
!12991 = !DILocation(line: 118, column: 18, scope: !12987)
!12992 = !DILocation(line: 119, column: 37, scope: !12987)
!12993 = !DILocation(line: 119, column: 19, scope: !12987)
!12994 = !DILocation(line: 120, column: 37, scope: !12987)
!12995 = !DILocation(line: 120, column: 19, scope: !12987)
!12996 = !DILocation(line: 121, column: 37, scope: !12987)
!12997 = !DILocation(line: 121, column: 19, scope: !12987)
!12998 = !DILocation(line: 122, column: 37, scope: !12987)
!12999 = !DILocation(line: 122, column: 19, scope: !12987)
!13000 = !DILocation(line: 123, column: 37, scope: !12987)
!13001 = !DILocation(line: 123, column: 19, scope: !12987)
!13002 = !DILocation(line: 125, column: 37, scope: !12987)
!13003 = !DILocation(line: 125, column: 19, scope: !12987)
!13004 = !DILocation(line: 126, column: 37, scope: !12987)
!13005 = !DILocation(line: 126, column: 19, scope: !12987)
!13006 = !DILocation(line: 127, column: 37, scope: !12987)
!13007 = !DILocation(line: 127, column: 19, scope: !12987)
!13008 = !DILocation(line: 128, column: 37, scope: !12987)
!13009 = !DILocation(line: 128, column: 19, scope: !12987)
!13010 = !DILocation(line: 130, column: 36, scope: !12987)
!13011 = !DILocation(line: 130, column: 18, scope: !12987)
!13012 = !DILocation(line: 131, column: 36, scope: !12987)
!13013 = !DILocation(line: 131, column: 18, scope: !12987)
!13014 = !DILocation(line: 133, column: 5, scope: !12987)
!13015 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2374, file: !2374, line: 140, type: !13016, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{!7}
!13018 = !DILocation(line: 144, column: 5, scope: !13015)
!13019 = !DILocation(line: 144, column: 19, scope: !13015)
!13020 = !DILocation(line: 144, column: 28, scope: !13015)
!13021 = !DILocation(line: 147, column: 19, scope: !13015)
!13022 = !DILocation(line: 147, column: 28, scope: !13015)
!13023 = !DILocation(line: 150, column: 19, scope: !13015)
!13024 = !DILocation(line: 150, column: 28, scope: !13015)
!13025 = !DILocation(line: 152, column: 5, scope: !13015)
!13026 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2374, file: !2374, line: 157, type: !9790, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !13027)
!13027 = !{!13028, !13029, !13030, !13031, !13032, !13033}
!13028 = !DILocalVariable(name: "mbist_src", scope: !13026, file: !2374, line: 159, type: !61)
!13029 = !DILocalVariable(name: "mbist_len", scope: !13026, file: !2374, line: 159, type: !61)
!13030 = !DILocalVariable(name: "mbist_data", scope: !13026, file: !2374, line: 159, type: !3884)
!13031 = !DILocalVariable(name: "i", scope: !13026, file: !2374, line: 160, type: !61)
!13032 = !DILocalVariable(name: "bist_data_inv", scope: !13026, file: !2374, line: 160, type: !61)
!13033 = !DILocalVariable(name: "bist_data_random", scope: !13026, file: !2374, line: 160, type: !61)
!13034 = !DILocation(line: 159, column: 36, scope: !13026)
!13035 = !DILocation(line: 0, scope: !13026)
!13036 = !DILocation(line: 165, column: 5, scope: !13026)
!13037 = !DILocation(line: 165, column: 19, scope: !13026)
!13038 = !DILocation(line: 165, column: 30, scope: !13026)
!13039 = !DILocation(line: 166, column: 5, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13026, file: !2374, line: 166, column: 5)
!13041 = !DILocation(line: 167, column: 9, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !2374, line: 167, column: 9)
!13043 = distinct !DILexicalBlock(scope: !13044, file: !2374, line: 166, column: 66)
!13044 = distinct !DILexicalBlock(scope: !13040, file: !2374, line: 166, column: 5)
!13045 = !DILocation(line: 168, column: 13, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !2374, line: 168, column: 13)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !2374, line: 167, column: 34)
!13048 = distinct !DILexicalBlock(scope: !13042, file: !2374, line: 167, column: 9)
!13049 = !DILocation(line: 168, column: 57, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13046, file: !2374, line: 168, column: 13)
!13051 = distinct !{!13051, !13045, !13052}
!13052 = !DILocation(line: 183, column: 13, scope: !13046)
!13053 = !DILocation(line: 170, column: 42, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13050, file: !2374, line: 168, column: 83)
!13055 = !DILocation(line: 172, column: 42, scope: !13054)
!13056 = !DILocation(line: 174, column: 45, scope: !13054)
!13057 = !DILocation(line: 174, column: 59, scope: !13054)
!13058 = !DILocation(line: 174, column: 154, scope: !13054)
!13059 = !DILocation(line: 174, column: 87, scope: !13054)
!13060 = !DILocation(line: 174, column: 134, scope: !13054)
!13061 = !DILocation(line: 174, column: 42, scope: !13054)
!13062 = !DILocation(line: 175, column: 42, scope: !13054)
!13063 = !DILocation(line: 177, column: 17, scope: !13054)
!13064 = !DILocation(line: 177, column: 39, scope: !13054)
!13065 = !DILocation(line: 177, column: 50, scope: !13054)
!13066 = !DILocation(line: 177, column: 71, scope: !13054)
!13067 = distinct !{!13067, !13063, !13068}
!13068 = !DILocation(line: 177, column: 78, scope: !13054)
!13069 = !DILocation(line: 179, column: 36, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13054, file: !2374, line: 179, column: 21)
!13071 = !DILocation(line: 179, column: 47, scope: !13070)
!13072 = !DILocation(line: 179, column: 69, scope: !13070)
!13073 = !DILocation(line: 168, column: 79, scope: !13050)
!13074 = !DILocation(line: 179, column: 21, scope: !13054)
!13075 = !DILocation(line: 167, column: 30, scope: !13048)
!13076 = !DILocation(line: 167, column: 23, scope: !13048)
!13077 = distinct !{!13077, !13041, !13078}
!13078 = !DILocation(line: 184, column: 9, scope: !13042)
!13079 = !DILocation(line: 166, column: 62, scope: !13044)
!13080 = !DILocation(line: 166, column: 43, scope: !13044)
!13081 = distinct !{!13081, !13039, !13082}
!13082 = !DILocation(line: 185, column: 5, scope: !13040)
!13083 = !DILocation(line: 189, column: 1, scope: !13026)
!13084 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2374, file: !2374, line: 190, type: !9790, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13085 = !DILocation(line: 192, column: 9, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13084, file: !2374, line: 192, column: 9)
!13087 = !DILocation(line: 192, column: 26, scope: !13086)
!13088 = !DILocation(line: 0, scope: !13084)
!13089 = !DILocation(line: 197, column: 1, scope: !13084)
!13090 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2374, file: !2374, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !13091)
!13091 = !{!13092, !13093}
!13092 = !DILocalVariable(name: "dqy_in_del", scope: !13090, file: !2374, line: 203, type: !1335)
!13093 = !DILocalVariable(name: "dqs_in_del", scope: !13090, file: !2374, line: 204, type: !1335)
!13094 = !DILocation(line: 0, scope: !13090)
!13095 = !DILocation(line: 206, column: 5, scope: !13090)
!13096 = !DILocation(line: 206, column: 19, scope: !13090)
!13097 = !DILocation(line: 206, column: 28, scope: !13090)
!13098 = !DILocation(line: 207, column: 19, scope: !13090)
!13099 = !DILocation(line: 207, column: 28, scope: !13090)
!13100 = !DILocation(line: 208, column: 19, scope: !13090)
!13101 = !DILocation(line: 208, column: 28, scope: !13090)
!13102 = !DILocation(line: 209, column: 19, scope: !13090)
!13103 = !DILocation(line: 209, column: 28, scope: !13090)
!13104 = !DILocation(line: 212, column: 23, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !2374, line: 211, column: 78)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !2374, line: 211, column: 5)
!13107 = distinct !DILexicalBlock(scope: !13090, file: !2374, line: 211, column: 5)
!13108 = !DILocation(line: 212, column: 32, scope: !13105)
!13109 = !DILocation(line: 213, column: 23, scope: !13105)
!13110 = !DILocation(line: 213, column: 32, scope: !13105)
!13111 = !DILocation(line: 215, column: 19, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13105, file: !2374, line: 215, column: 13)
!13113 = !DILocation(line: 215, column: 15, scope: !13112)
!13114 = !DILocation(line: 215, column: 13, scope: !13105)
!13115 = !DILocation(line: 211, column: 40, scope: !13106)
!13116 = !DILocation(line: 211, column: 5, scope: !13107)
!13117 = distinct !{!13117, !13116, !13118}
!13118 = !DILocation(line: 218, column: 5, scope: !13107)
!13119 = !DILocation(line: 211, column: 57, scope: !13106)
!13120 = !DILocation(line: 212, column: 9, scope: !13105)
!13121 = !DILocation(line: 212, column: 45, scope: !13105)
!13122 = !DILocation(line: 212, column: 83, scope: !13105)
!13123 = !DILocation(line: 212, column: 121, scope: !13105)
!13124 = !DILocation(line: 212, column: 70, scope: !13105)
!13125 = !DILocation(line: 212, column: 108, scope: !13105)
!13126 = !DILocation(line: 212, column: 146, scope: !13105)
!13127 = !DILocation(line: 222, column: 49, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13129, file: !2374, line: 221, column: 84)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !2374, line: 221, column: 9)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !2374, line: 221, column: 9)
!13131 = distinct !DILexicalBlock(scope: !13132, file: !2374, line: 220, column: 25)
!13132 = distinct !DILexicalBlock(scope: !13090, file: !2374, line: 220, column: 9)
!13133 = !DILocation(line: 222, column: 13, scope: !13128)
!13134 = !DILocation(line: 222, column: 27, scope: !13128)
!13135 = !DILocation(line: 222, column: 36, scope: !13128)
!13136 = !DILocation(line: 224, column: 23, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13128, file: !2374, line: 224, column: 17)
!13138 = !DILocation(line: 224, column: 19, scope: !13137)
!13139 = !DILocation(line: 224, column: 17, scope: !13128)
!13140 = distinct !{!13140, !13141, !13142}
!13141 = !DILocation(line: 221, column: 9, scope: !13130)
!13142 = !DILocation(line: 227, column: 9, scope: !13130)
!13143 = !DILocation(line: 230, column: 1, scope: !13090)
!13144 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2374, file: !2374, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13145 = !DILocation(line: 257, column: 26, scope: !13144)
!13146 = !DILocation(line: 259, column: 5, scope: !13144)
!13147 = !DILocation(line: 259, column: 19, scope: !13144)
!13148 = !DILocation(line: 259, column: 29, scope: !13144)
!13149 = !DILocation(line: 260, column: 5, scope: !13144)
!13150 = !DILocation(line: 260, column: 27, scope: !13144)
!13151 = !DILocation(line: 260, column: 93, scope: !13144)
!13152 = distinct !{!13152, !13149, !13153}
!13153 = !DILocation(line: 260, column: 98, scope: !13144)
!13154 = !DILocation(line: 261, column: 29, scope: !13144)
!13155 = !DILocation(line: 262, column: 5, scope: !13144)
!13156 = !DILocation(line: 262, column: 27, scope: !13144)
!13157 = !DILocation(line: 262, column: 93, scope: !13144)
!13158 = distinct !{!13158, !13155, !13159}
!13159 = !DILocation(line: 262, column: 98, scope: !13144)
!13160 = !DILocation(line: 264, column: 42, scope: !13144)
!13161 = !DILocation(line: 265, column: 48, scope: !13144)
!13162 = !DILocation(line: 267, column: 5, scope: !13144)
!13163 = !DILocation(line: 267, column: 27, scope: !13144)
!13164 = !DILocation(line: 267, column: 39, scope: !13144)
!13165 = !DILocation(line: 267, column: 65, scope: !13144)
!13166 = distinct !{!13166, !13162, !13167}
!13167 = !DILocation(line: 267, column: 70, scope: !13144)
!13168 = !DILocation(line: 269, column: 5, scope: !13144)
!13169 = !DILocation(line: 273, column: 8, scope: !13144)
!13170 = !DILocation(line: 275, column: 5, scope: !13144)
!13171 = !DILocation(line: 275, column: 27, scope: !13144)
!13172 = !DILocation(line: 275, column: 39, scope: !13144)
!13173 = !DILocation(line: 275, column: 65, scope: !13144)
!13174 = distinct !{!13174, !13170, !13175}
!13175 = !DILocation(line: 275, column: 70, scope: !13144)
!13176 = !DILocation(line: 278, column: 9, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13144, file: !2374, line: 278, column: 9)
!13178 = !DILocation(line: 278, column: 44, scope: !13177)
!13179 = !DILocation(line: 278, column: 9, scope: !13144)
!13180 = !DILocation(line: 279, column: 13, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13182, file: !2374, line: 279, column: 12)
!13182 = distinct !DILexicalBlock(scope: !13177, file: !2374, line: 278, column: 55)
!13183 = !DILocation(line: 279, column: 48, scope: !13181)
!13184 = !DILocation(line: 279, column: 56, scope: !13181)
!13185 = !DILocation(line: 0, scope: !13181)
!13186 = !DILocation(line: 288, column: 1, scope: !13144)
!13187 = distinct !DISubprogram(name: "custom_setEMI", scope: !2374, file: !2374, line: 294, type: !13188, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13188 = !DISubroutineType(types: !13189)
!13189 = !{!1644}
!13190 = !DILocation(line: 298, column: 5, scope: !13187)
!13191 = !DILocation(line: 300, column: 5, scope: !13187)
!13192 = !DILocation(line: 302, column: 20, scope: !13187)
!13193 = !DILocation(line: 302, column: 18, scope: !13187)
!13194 = !DILocation(line: 303, column: 20, scope: !13187)
!13195 = !DILocation(line: 303, column: 18, scope: !13187)
!13196 = !DILocation(line: 304, column: 20, scope: !13187)
!13197 = !DILocation(line: 304, column: 18, scope: !13187)
!13198 = !DILocation(line: 307, column: 5, scope: !13187)
!13199 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2374, file: !2374, line: 312, type: !13188, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13200 = !DILocation(line: 319, column: 29, scope: !13199)
!13201 = !DILocation(line: 319, column: 5, scope: !13199)
!13202 = !DILocation(line: 319, column: 19, scope: !13199)
!13203 = !DILocation(line: 319, column: 27, scope: !13199)
!13204 = !DILocation(line: 320, column: 29, scope: !13199)
!13205 = !DILocation(line: 320, column: 19, scope: !13199)
!13206 = !DILocation(line: 320, column: 27, scope: !13199)
!13207 = !DILocation(line: 322, column: 30, scope: !13199)
!13208 = !DILocation(line: 322, column: 19, scope: !13199)
!13209 = !DILocation(line: 322, column: 28, scope: !13199)
!13210 = !DILocation(line: 324, column: 30, scope: !13199)
!13211 = !DILocation(line: 324, column: 19, scope: !13199)
!13212 = !DILocation(line: 324, column: 28, scope: !13199)
!13213 = !DILocation(line: 326, column: 31, scope: !13199)
!13214 = !DILocation(line: 326, column: 19, scope: !13199)
!13215 = !DILocation(line: 326, column: 29, scope: !13199)
!13216 = !DILocation(line: 327, column: 31, scope: !13199)
!13217 = !DILocation(line: 327, column: 19, scope: !13199)
!13218 = !DILocation(line: 327, column: 29, scope: !13199)
!13219 = !DILocation(line: 332, column: 30, scope: !13199)
!13220 = !DILocation(line: 332, column: 19, scope: !13199)
!13221 = !DILocation(line: 332, column: 28, scope: !13199)
!13222 = !DILocation(line: 333, column: 30, scope: !13199)
!13223 = !DILocation(line: 333, column: 19, scope: !13199)
!13224 = !DILocation(line: 333, column: 28, scope: !13199)
!13225 = !DILocation(line: 334, column: 30, scope: !13199)
!13226 = !DILocation(line: 334, column: 19, scope: !13199)
!13227 = !DILocation(line: 334, column: 28, scope: !13199)
!13228 = !DILocation(line: 336, column: 30, scope: !13199)
!13229 = !DILocation(line: 336, column: 19, scope: !13199)
!13230 = !DILocation(line: 336, column: 28, scope: !13199)
!13231 = !DILocation(line: 337, column: 30, scope: !13199)
!13232 = !DILocation(line: 337, column: 19, scope: !13199)
!13233 = !DILocation(line: 337, column: 28, scope: !13199)
!13234 = !DILocation(line: 338, column: 30, scope: !13199)
!13235 = !DILocation(line: 338, column: 19, scope: !13199)
!13236 = !DILocation(line: 338, column: 28, scope: !13199)
!13237 = !DILocation(line: 339, column: 30, scope: !13199)
!13238 = !DILocation(line: 339, column: 19, scope: !13199)
!13239 = !DILocation(line: 339, column: 28, scope: !13199)
!13240 = !DILocation(line: 341, column: 5, scope: !13199)
!13241 = !DILocation(line: 345, column: 5, scope: !13199)
!13242 = !DILocation(line: 345, column: 19, scope: !13199)
!13243 = !DILocation(line: 345, column: 28, scope: !13199)
!13244 = !DILocation(line: 346, column: 5, scope: !13199)
!13245 = !DILocation(line: 346, column: 28, scope: !13199)
!13246 = !DILocation(line: 346, column: 82, scope: !13199)
!13247 = distinct !{!13247, !13244, !13248}
!13248 = !DILocation(line: 346, column: 87, scope: !13199)
!13249 = !DILocation(line: 347, column: 28, scope: !13199)
!13250 = !DILocation(line: 348, column: 5, scope: !13199)
!13251 = !DILocation(line: 348, column: 28, scope: !13199)
!13252 = !DILocation(line: 348, column: 82, scope: !13199)
!13253 = distinct !{!13253, !13250, !13254}
!13254 = !DILocation(line: 348, column: 87, scope: !13199)
!13255 = !DILocation(line: 349, column: 28, scope: !13199)
!13256 = !DILocation(line: 351, column: 5, scope: !13199)
!13257 = !DILocation(line: 353, column: 5, scope: !13199)
!13258 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2374, file: !2374, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13259 = !DILocation(line: 361, column: 36, scope: !13258)
!13260 = !DILocation(line: 361, column: 50, scope: !13258)
!13261 = !DILocation(line: 361, column: 34, scope: !13258)
!13262 = !DILocation(line: 362, column: 50, scope: !13258)
!13263 = !DILocation(line: 362, column: 34, scope: !13258)
!13264 = !DILocation(line: 363, column: 50, scope: !13258)
!13265 = !DILocation(line: 363, column: 34, scope: !13258)
!13266 = !DILocation(line: 364, column: 50, scope: !13258)
!13267 = !DILocation(line: 364, column: 34, scope: !13258)
!13268 = !DILocation(line: 365, column: 50, scope: !13258)
!13269 = !DILocation(line: 365, column: 34, scope: !13258)
!13270 = !DILocation(line: 366, column: 50, scope: !13258)
!13271 = !DILocation(line: 366, column: 34, scope: !13258)
!13272 = !DILocation(line: 367, column: 50, scope: !13258)
!13273 = !DILocation(line: 367, column: 34, scope: !13258)
!13274 = !DILocation(line: 368, column: 50, scope: !13258)
!13275 = !DILocation(line: 368, column: 34, scope: !13258)
!13276 = !DILocation(line: 369, column: 50, scope: !13258)
!13277 = !DILocation(line: 369, column: 34, scope: !13258)
!13278 = !DILocation(line: 370, column: 50, scope: !13258)
!13279 = !DILocation(line: 370, column: 34, scope: !13258)
!13280 = !DILocation(line: 371, column: 50, scope: !13258)
!13281 = !DILocation(line: 371, column: 34, scope: !13258)
!13282 = !DILocation(line: 372, column: 50, scope: !13258)
!13283 = !DILocation(line: 372, column: 34, scope: !13258)
!13284 = !DILocation(line: 373, column: 51, scope: !13258)
!13285 = !DILocation(line: 373, column: 35, scope: !13258)
!13286 = !DILocation(line: 374, column: 51, scope: !13258)
!13287 = !DILocation(line: 374, column: 35, scope: !13258)
!13288 = !DILocation(line: 375, column: 50, scope: !13258)
!13289 = !DILocation(line: 375, column: 34, scope: !13258)
!13290 = !DILocation(line: 376, column: 50, scope: !13258)
!13291 = !DILocation(line: 376, column: 34, scope: !13258)
!13292 = !DILocation(line: 377, column: 50, scope: !13258)
!13293 = !DILocation(line: 377, column: 34, scope: !13258)
!13294 = !DILocation(line: 378, column: 50, scope: !13258)
!13295 = !DILocation(line: 378, column: 34, scope: !13258)
!13296 = !DILocation(line: 379, column: 50, scope: !13258)
!13297 = !DILocation(line: 379, column: 34, scope: !13258)
!13298 = !DILocation(line: 380, column: 50, scope: !13258)
!13299 = !DILocation(line: 380, column: 34, scope: !13258)
!13300 = !DILocation(line: 382, column: 1, scope: !13258)
!13301 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2374, file: !2374, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13302 = !DILocation(line: 387, column: 5, scope: !13301)
!13303 = !DILocation(line: 387, column: 27, scope: !13301)
!13304 = !DILocation(line: 387, column: 36, scope: !13301)
!13305 = !DILocation(line: 387, column: 76, scope: !13301)
!13306 = distinct !{!13306, !13302, !13307}
!13307 = !DILocation(line: 387, column: 84, scope: !13301)
!13308 = !DILocation(line: 388, column: 50, scope: !13301)
!13309 = !DILocation(line: 388, column: 19, scope: !13301)
!13310 = !DILocation(line: 388, column: 28, scope: !13301)
!13311 = !DILocation(line: 389, column: 50, scope: !13301)
!13312 = !DILocation(line: 389, column: 19, scope: !13301)
!13313 = !DILocation(line: 389, column: 28, scope: !13301)
!13314 = !DILocation(line: 390, column: 50, scope: !13301)
!13315 = !DILocation(line: 390, column: 19, scope: !13301)
!13316 = !DILocation(line: 390, column: 28, scope: !13301)
!13317 = !DILocation(line: 391, column: 50, scope: !13301)
!13318 = !DILocation(line: 391, column: 19, scope: !13301)
!13319 = !DILocation(line: 391, column: 28, scope: !13301)
!13320 = !DILocation(line: 392, column: 50, scope: !13301)
!13321 = !DILocation(line: 392, column: 19, scope: !13301)
!13322 = !DILocation(line: 392, column: 28, scope: !13301)
!13323 = !DILocation(line: 393, column: 50, scope: !13301)
!13324 = !DILocation(line: 393, column: 19, scope: !13301)
!13325 = !DILocation(line: 393, column: 28, scope: !13301)
!13326 = !DILocation(line: 394, column: 51, scope: !13301)
!13327 = !DILocation(line: 394, column: 19, scope: !13301)
!13328 = !DILocation(line: 394, column: 29, scope: !13301)
!13329 = !DILocation(line: 395, column: 51, scope: !13301)
!13330 = !DILocation(line: 395, column: 19, scope: !13301)
!13331 = !DILocation(line: 395, column: 29, scope: !13301)
!13332 = !DILocation(line: 396, column: 50, scope: !13301)
!13333 = !DILocation(line: 396, column: 19, scope: !13301)
!13334 = !DILocation(line: 396, column: 28, scope: !13301)
!13335 = !DILocation(line: 397, column: 50, scope: !13301)
!13336 = !DILocation(line: 397, column: 19, scope: !13301)
!13337 = !DILocation(line: 397, column: 28, scope: !13301)
!13338 = !DILocation(line: 398, column: 50, scope: !13301)
!13339 = !DILocation(line: 398, column: 19, scope: !13301)
!13340 = !DILocation(line: 398, column: 28, scope: !13301)
!13341 = !DILocation(line: 399, column: 50, scope: !13301)
!13342 = !DILocation(line: 399, column: 19, scope: !13301)
!13343 = !DILocation(line: 399, column: 28, scope: !13301)
!13344 = !DILocation(line: 400, column: 50, scope: !13301)
!13345 = !DILocation(line: 400, column: 19, scope: !13301)
!13346 = !DILocation(line: 400, column: 28, scope: !13301)
!13347 = !DILocation(line: 401, column: 50, scope: !13301)
!13348 = !DILocation(line: 401, column: 19, scope: !13301)
!13349 = !DILocation(line: 401, column: 28, scope: !13301)
!13350 = !DILocation(line: 402, column: 50, scope: !13301)
!13351 = !DILocation(line: 402, column: 19, scope: !13301)
!13352 = !DILocation(line: 402, column: 28, scope: !13301)
!13353 = !DILocation(line: 403, column: 50, scope: !13301)
!13354 = !DILocation(line: 403, column: 19, scope: !13301)
!13355 = !DILocation(line: 403, column: 28, scope: !13301)
!13356 = !DILocation(line: 404, column: 50, scope: !13301)
!13357 = !DILocation(line: 404, column: 19, scope: !13301)
!13358 = !DILocation(line: 404, column: 28, scope: !13301)
!13359 = !DILocation(line: 405, column: 50, scope: !13301)
!13360 = !DILocation(line: 405, column: 19, scope: !13301)
!13361 = !DILocation(line: 405, column: 28, scope: !13301)
!13362 = !DILocation(line: 406, column: 50, scope: !13301)
!13363 = !DILocation(line: 406, column: 19, scope: !13301)
!13364 = !DILocation(line: 406, column: 28, scope: !13301)
!13365 = !DILocation(line: 408, column: 1, scope: !13301)
!13366 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2374, file: !2374, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13367 = !DILocation(line: 413, column: 29, scope: !13366)
!13368 = !DILocation(line: 413, column: 43, scope: !13366)
!13369 = !DILocation(line: 413, column: 51, scope: !13366)
!13370 = !DILocation(line: 413, column: 27, scope: !13366)
!13371 = !DILocation(line: 416, column: 19, scope: !13366)
!13372 = !DILocation(line: 416, column: 29, scope: !13366)
!13373 = !DILocation(line: 417, column: 5, scope: !13366)
!13374 = !DILocation(line: 417, column: 27, scope: !13366)
!13375 = !DILocation(line: 417, column: 93, scope: !13366)
!13376 = distinct !{!13376, !13373, !13377}
!13377 = !DILocation(line: 417, column: 98, scope: !13366)
!13378 = !DILocation(line: 418, column: 29, scope: !13366)
!13379 = !DILocation(line: 419, column: 5, scope: !13366)
!13380 = !DILocation(line: 419, column: 27, scope: !13366)
!13381 = !DILocation(line: 419, column: 93, scope: !13366)
!13382 = distinct !{!13382, !13379, !13383}
!13383 = !DILocation(line: 419, column: 98, scope: !13366)
!13384 = !DILocation(line: 421, column: 5, scope: !13366)
!13385 = !DILocation(line: 422, column: 5, scope: !13366)
!13386 = !DILocation(line: 422, column: 19, scope: !13366)
!13387 = !DILocation(line: 422, column: 28, scope: !13366)
!13388 = !DILocation(line: 423, column: 5, scope: !13366)
!13389 = !DILocation(line: 423, column: 28, scope: !13366)
!13390 = !DILocation(line: 423, column: 82, scope: !13366)
!13391 = distinct !{!13391, !13388, !13392}
!13392 = !DILocation(line: 423, column: 87, scope: !13366)
!13393 = !DILocation(line: 424, column: 28, scope: !13366)
!13394 = !DILocation(line: 425, column: 5, scope: !13366)
!13395 = !DILocation(line: 425, column: 28, scope: !13366)
!13396 = !DILocation(line: 425, column: 82, scope: !13366)
!13397 = distinct !{!13397, !13394, !13398}
!13398 = !DILocation(line: 425, column: 87, scope: !13366)
!13399 = !DILocation(line: 426, column: 28, scope: !13366)
!13400 = !DILocation(line: 428, column: 50, scope: !13366)
!13401 = !DILocation(line: 428, column: 19, scope: !13366)
!13402 = !DILocation(line: 428, column: 28, scope: !13366)
!13403 = !DILocation(line: 432, column: 1, scope: !13366)
!13404 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2374, file: !2374, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13405 = !DILocation(line: 437, column: 5, scope: !13404)
!13406 = !DILocation(line: 440, column: 5, scope: !13404)
!13407 = !DILocation(line: 440, column: 27, scope: !13404)
!13408 = !DILocation(line: 440, column: 36, scope: !13404)
!13409 = !DILocation(line: 440, column: 76, scope: !13404)
!13410 = distinct !{!13410, !13406, !13411}
!13411 = !DILocation(line: 440, column: 84, scope: !13404)
!13412 = !DILocation(line: 441, column: 45, scope: !13404)
!13413 = !DILocation(line: 441, column: 54, scope: !13404)
!13414 = !DILocation(line: 441, column: 28, scope: !13404)
!13415 = !DILocation(line: 442, column: 19, scope: !13404)
!13416 = !DILocation(line: 442, column: 31, scope: !13404)
!13417 = !DILocation(line: 443, column: 5, scope: !13404)
!13418 = !DILocation(line: 443, column: 27, scope: !13404)
!13419 = !DILocation(line: 443, column: 39, scope: !13404)
!13420 = !DILocation(line: 443, column: 65, scope: !13404)
!13421 = distinct !{!13421, !13417, !13422}
!13422 = !DILocation(line: 443, column: 70, scope: !13404)
!13423 = !DILocation(line: 444, column: 19, scope: !13404)
!13424 = !DILocation(line: 444, column: 28, scope: !13404)
!13425 = !DILocation(line: 445, column: 5, scope: !13404)
!13426 = !DILocation(line: 445, column: 27, scope: !13404)
!13427 = !DILocation(line: 445, column: 91, scope: !13404)
!13428 = distinct !{!13428, !13425, !13429}
!13429 = !DILocation(line: 445, column: 96, scope: !13404)
!13430 = !DILocation(line: 447, column: 43, scope: !13404)
!13431 = !DILocation(line: 447, column: 51, scope: !13404)
!13432 = !DILocation(line: 447, column: 27, scope: !13404)
!13433 = !DILocation(line: 450, column: 1, scope: !13404)
!13434 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2374, file: !2374, line: 452, type: !13435, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !13438)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!1335, !13437}
!13437 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2377, line: 43, baseType: !2376)
!13438 = !{!13439, !13440}
!13439 = !DILocalVariable(name: "clock", arg: 1, scope: !13434, file: !2374, line: 452, type: !13437)
!13440 = !DILocalVariable(name: "delay", scope: !13434, file: !2374, line: 457, type: !60)
!13441 = !DILocation(line: 0, scope: !13434)
!13442 = !DILocation(line: 457, column: 5, scope: !13434)
!13443 = !DILocation(line: 457, column: 23, scope: !13434)
!13444 = !DILocation(line: 458, column: 9, scope: !13434)
!13445 = !DILocation(line: 465, column: 9, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !2374, line: 458, column: 39)
!13447 = distinct !DILexicalBlock(scope: !13434, file: !2374, line: 458, column: 9)
!13448 = !DILocation(line: 465, column: 23, scope: !13446)
!13449 = !DILocation(line: 465, column: 32, scope: !13446)
!13450 = !DILocation(line: 466, column: 32, scope: !13446)
!13451 = !DILocation(line: 467, column: 9, scope: !13446)
!13452 = !DILocation(line: 467, column: 32, scope: !13446)
!13453 = !DILocation(line: 467, column: 86, scope: !13446)
!13454 = distinct !{!13454, !13451, !13455}
!13455 = !DILocation(line: 467, column: 91, scope: !13446)
!13456 = !DILocation(line: 468, column: 32, scope: !13446)
!13457 = !DILocation(line: 469, column: 9, scope: !13446)
!13458 = !DILocation(line: 469, column: 32, scope: !13446)
!13459 = !DILocation(line: 469, column: 86, scope: !13446)
!13460 = distinct !{!13460, !13457, !13461}
!13461 = !DILocation(line: 469, column: 91, scope: !13446)
!13462 = !DILocation(line: 470, column: 32, scope: !13446)
!13463 = !DILocation(line: 472, column: 20, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13446, file: !2374, line: 472, column: 9)
!13465 = !DILocation(line: 472, column: 25, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13464, file: !2374, line: 472, column: 9)
!13467 = !DILocation(line: 472, column: 31, scope: !13466)
!13468 = !DILocation(line: 472, column: 9, scope: !13464)
!13469 = !DILocation(line: 472, column: 44, scope: !13466)
!13470 = distinct !{!13470, !13468, !13471}
!13471 = !DILocation(line: 472, column: 47, scope: !13464)
!13472 = !DILocation(line: 478, column: 9, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !2374, line: 477, column: 12)
!13474 = distinct !DILexicalBlock(scope: !13447, file: !2374, line: 475, column: 16)
!13475 = !DILocation(line: 483, column: 1, scope: !13434)
!13476 = distinct !DISubprogram(name: "emi_mask_master", scope: !2374, file: !2374, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13477 = !DILocation(line: 490, column: 30, scope: !13476)
!13478 = !DILocation(line: 490, column: 44, scope: !13476)
!13479 = !DILocation(line: 490, column: 53, scope: !13476)
!13480 = !DILocation(line: 490, column: 28, scope: !13476)
!13481 = !DILocation(line: 492, column: 1, scope: !13476)
!13482 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2374, file: !2374, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !293)
!13483 = !DILocation(line: 497, column: 30, scope: !13482)
!13484 = !DILocation(line: 497, column: 44, scope: !13482)
!13485 = !DILocation(line: 497, column: 53, scope: !13482)
!13486 = !DILocation(line: 497, column: 28, scope: !13482)
!13487 = !DILocation(line: 500, column: 1, scope: !13482)
!13488 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2540, file: !2540, line: 56, type: !10271, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !293)
!13489 = !DILocation(line: 61, column: 5, scope: !13488)
!13490 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2540, file: !2540, line: 65, type: !10271, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !293)
!13491 = !DILocation(line: 70, column: 5, scope: !13490)
!13492 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2540, file: !2540, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !293)
!13493 = !DILocation(line: 79, column: 9, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !2540, line: 78, column: 12)
!13495 = distinct !DILexicalBlock(scope: !13492, file: !2540, line: 76, column: 9)
!13496 = !DILocation(line: 81, column: 1, scope: !13492)
!13497 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2540, file: !2540, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !293)
!13498 = !DILocation(line: 88, column: 9, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13500, file: !2540, line: 87, column: 12)
!13500 = distinct !DILexicalBlock(scope: !13497, file: !2540, line: 85, column: 9)
!13501 = !DILocation(line: 90, column: 1, scope: !13497)
!13502 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2540, file: !2540, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !293)
!13503 = !DILocation(line: 97, column: 9, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13505, file: !2540, line: 96, column: 12)
!13505 = distinct !DILexicalBlock(scope: !13502, file: !2540, line: 94, column: 9)
!13506 = !DILocation(line: 99, column: 1, scope: !13502)
!13507 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2540, file: !2540, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !293)
!13508 = !DILocation(line: 106, column: 9, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !2540, line: 105, column: 12)
!13510 = distinct !DILexicalBlock(scope: !13507, file: !2540, line: 103, column: 9)
!13511 = !DILocation(line: 108, column: 1, scope: !13507)
!13512 = distinct !DISubprogram(name: "__io_putchar", scope: !2552, file: !2552, line: 61, type: !13513, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !13515)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{!7, !7}
!13515 = !{!13516}
!13516 = !DILocalVariable(name: "ch", arg: 1, scope: !13512, file: !2552, line: 61, type: !7)
!13517 = !DILocation(line: 0, scope: !13512)
!13518 = !DILocation(line: 68, column: 35, scope: !13512)
!13519 = !DILocation(line: 68, column: 5, scope: !13512)
!13520 = !DILocation(line: 69, column: 5, scope: !13512)
!13521 = distinct !DISubprogram(name: "main", scope: !2552, file: !2552, line: 272, type: !13016, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !293)
!13522 = !DILocation(line: 275, column: 5, scope: !13521)
!13523 = !DILocation(line: 277, column: 5, scope: !13521)
!13524 = !DILocation(line: 280, column: 5, scope: !13521)
!13525 = !DILocation(line: 319, column: 3, scope: !13526, inlinedAt: !13527)
!13526 = distinct !DISubprogram(name: "__enable_irq", scope: !8884, file: !8884, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !293)
!13527 = distinct !DILocation(line: 283, column: 5, scope: !13521)
!13528 = !{i64 664365}
!13529 = !DILocation(line: 496, column: 3, scope: !13530, inlinedAt: !13531)
!13530 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !8884, file: !8884, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !293)
!13531 = distinct !DILocation(line: 284, column: 5, scope: !13521)
!13532 = !{i64 668640}
!13533 = !DILocation(line: 287, column: 5, scope: !13521)
!13534 = !DILocation(line: 289, column: 5, scope: !13521)
!13535 = !DILocation(line: 290, column: 5, scope: !13521)
!13536 = !DILocation(line: 291, column: 5, scope: !13521)
!13537 = !DILocation(line: 293, column: 5, scope: !13521)
!13538 = !DILocation(line: 295, column: 5, scope: !13521)
!13539 = distinct !{!13539, !13538, !13540}
!13540 = !DILocation(line: 295, column: 14, scope: !13521)
!13541 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2552, file: !2552, line: 100, type: !291, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !293)
!13542 = !DILocation(line: 102, column: 5, scope: !13541)
!13543 = !DILocation(line: 103, column: 1, scope: !13541)
!13544 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2552, file: !2552, line: 110, type: !291, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !293)
!13545 = !DILocation(line: 113, column: 5, scope: !13544)
!13546 = !DILocation(line: 114, column: 5, scope: !13544)
!13547 = !DILocation(line: 115, column: 5, scope: !13544)
!13548 = !DILocation(line: 117, column: 1, scope: !13544)
!13549 = distinct !DISubprogram(name: "i2c_control_EEPROM_with_dma_extended_example", scope: !2552, file: !2552, line: 136, type: !291, scopeLine: 137, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !13550)
!13550 = !{!13551, !13556, !13564, !13572, !13573, !13574, !13575}
!13551 = !DILocalVariable(name: "i2c_init", scope: !13549, file: !2552, line: 139, type: !13552)
!13552 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_config_t", file: !1077, line: 496, baseType: !13553)
!13553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 494, size: 32, elements: !13554)
!13554 = !{!13555}
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !13553, file: !1077, line: 495, baseType: !7397, size: 32)
!13556 = !DILocalVariable(name: "i2c_send_config", scope: !13549, file: !2552, line: 140, type: !13557)
!13557 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_send_config_t", file: !1077, line: 524, baseType: !13558)
!13558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 519, size: 128, elements: !13559)
!13559 = !{!13560, !13561, !13562, !13563}
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !13558, file: !1077, line: 520, baseType: !463, size: 8)
!13561 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !13558, file: !1077, line: 521, baseType: !6323, size: 32, offset: 32)
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "send_packet_length", scope: !13558, file: !1077, line: 522, baseType: !61, size: 32, offset: 64)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "send_bytes_in_one_packet", scope: !13558, file: !1077, line: 523, baseType: !61, size: 32, offset: 96)
!13564 = !DILocalVariable(name: "i2c_receive_config", scope: !13549, file: !2552, line: 141, type: !13565)
!13565 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_i2c_receive_config_t", file: !1077, line: 534, baseType: !13566)
!13566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1077, line: 529, size: 128, elements: !13567)
!13567 = !{!13568, !13569, !13570, !13571}
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !13566, file: !1077, line: 530, baseType: !463, size: 8)
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !13566, file: !1077, line: 531, baseType: !969, size: 32, offset: 32)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet_length", scope: !13566, file: !1077, line: 532, baseType: !61, size: 32, offset: 64)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "receive_bytes_in_one_packet", scope: !13566, file: !1077, line: 533, baseType: !61, size: 32, offset: 96)
!13572 = !DILocalVariable(name: "i", scope: !13549, file: !2552, line: 142, type: !61)
!13573 = !DILocalVariable(name: "input_frequency", scope: !13549, file: !2552, line: 143, type: !7397)
!13574 = !DILocalVariable(name: "i2c_port", scope: !13549, file: !2552, line: 144, type: !1141)
!13575 = !DILocalVariable(name: "test_fail", scope: !13549, file: !2552, line: 145, type: !61)
!13576 = !DILocation(line: 139, column: 5, scope: !13549)
!13577 = !DILocation(line: 139, column: 22, scope: !13549)
!13578 = !DILocation(line: 140, column: 5, scope: !13549)
!13579 = !DILocation(line: 140, column: 27, scope: !13549)
!13580 = !DILocation(line: 141, column: 5, scope: !13549)
!13581 = !DILocation(line: 141, column: 30, scope: !13549)
!13582 = !DILocation(line: 0, scope: !13549)
!13583 = !DILocation(line: 147, column: 35, scope: !13549)
!13584 = !DILocation(line: 148, column: 21, scope: !13549)
!13585 = !DILocation(line: 148, column: 31, scope: !13549)
!13586 = !DILocation(line: 149, column: 21, scope: !13549)
!13587 = !DILocation(line: 149, column: 40, scope: !13549)
!13588 = !DILocation(line: 151, column: 38, scope: !13549)
!13589 = !DILocation(line: 152, column: 24, scope: !13549)
!13590 = !DILocation(line: 152, column: 39, scope: !13549)
!13591 = !DILocation(line: 153, column: 24, scope: !13549)
!13592 = !DILocation(line: 153, column: 46, scope: !13549)
!13593 = !DILocation(line: 155, column: 5, scope: !13549)
!13594 = !DILocation(line: 159, column: 5, scope: !13549)
!13595 = !DILocation(line: 160, column: 5, scope: !13549)
!13596 = !DILocation(line: 162, column: 5, scope: !13549)
!13597 = !DILocation(line: 163, column: 5, scope: !13549)
!13598 = !DILocation(line: 167, column: 17, scope: !13549)
!13599 = !DILocation(line: 168, column: 14, scope: !13549)
!13600 = !DILocation(line: 168, column: 24, scope: !13549)
!13601 = !DILocation(line: 169, column: 30, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 169, column: 9)
!13603 = !DILocation(line: 169, column: 27, scope: !13602)
!13604 = !DILocation(line: 169, column: 9, scope: !13549)
!13605 = !DILocation(line: 170, column: 9, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13602, file: !2552, line: 169, column: 72)
!13607 = !DILocation(line: 171, column: 9, scope: !13606)
!13608 = !DILocation(line: 174, column: 30, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 174, column: 9)
!13610 = !DILocation(line: 174, column: 27, scope: !13609)
!13611 = !DILocation(line: 174, column: 9, scope: !13549)
!13612 = !DILocation(line: 175, column: 9, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13609, file: !2552, line: 174, column: 94)
!13614 = !DILocation(line: 176, column: 9, scope: !13613)
!13615 = !DILocation(line: 178, column: 48, scope: !13549)
!13616 = !DILocation(line: 178, column: 60, scope: !13549)
!13617 = !DILocation(line: 178, column: 21, scope: !13549)
!13618 = !DILocation(line: 178, column: 46, scope: !13549)
!13619 = !DILocation(line: 179, column: 30, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 179, column: 9)
!13621 = !DILocation(line: 179, column: 27, scope: !13620)
!13622 = !DILocation(line: 179, column: 9, scope: !13549)
!13623 = !DILocation(line: 180, column: 9, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13620, file: !2552, line: 179, column: 86)
!13625 = !DILocation(line: 181, column: 9, scope: !13624)
!13626 = !DILocation(line: 184, column: 17, scope: !13549)
!13627 = !DILocation(line: 184, column: 14, scope: !13549)
!13628 = !DILocation(line: 184, column: 5, scope: !13549)
!13629 = distinct !{!13629, !13628, !13630}
!13630 = !DILocation(line: 184, column: 33, scope: !13549)
!13631 = !DILocation(line: 185, column: 21, scope: !13549)
!13632 = !DILocation(line: 186, column: 30, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 186, column: 9)
!13634 = !DILocation(line: 186, column: 27, scope: !13633)
!13635 = !DILocation(line: 186, column: 9, scope: !13549)
!13636 = !DILocation(line: 187, column: 9, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13633, file: !2552, line: 186, column: 63)
!13638 = !DILocation(line: 188, column: 9, scope: !13637)
!13639 = !DILocation(line: 191, column: 5, scope: !13549)
!13640 = !DILocation(line: 195, column: 24, scope: !13549)
!13641 = !DILocation(line: 196, column: 30, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 196, column: 9)
!13643 = !DILocation(line: 196, column: 27, scope: !13642)
!13644 = !DILocation(line: 196, column: 9, scope: !13549)
!13645 = !DILocation(line: 197, column: 9, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13642, file: !2552, line: 196, column: 72)
!13647 = !DILocation(line: 198, column: 9, scope: !13646)
!13648 = !DILocation(line: 201, column: 30, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 201, column: 9)
!13650 = !DILocation(line: 201, column: 27, scope: !13649)
!13651 = !DILocation(line: 201, column: 9, scope: !13549)
!13652 = !DILocation(line: 202, column: 9, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13649, file: !2552, line: 201, column: 94)
!13654 = !DILocation(line: 203, column: 9, scope: !13653)
!13655 = !DILocation(line: 206, column: 46, scope: !13549)
!13656 = !DILocation(line: 207, column: 30, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 207, column: 9)
!13658 = !DILocation(line: 207, column: 27, scope: !13657)
!13659 = !DILocation(line: 207, column: 9, scope: !13549)
!13660 = !DILocation(line: 208, column: 9, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13657, file: !2552, line: 207, column: 86)
!13662 = !DILocation(line: 209, column: 9, scope: !13661)
!13663 = !DILocation(line: 212, column: 17, scope: !13549)
!13664 = !DILocation(line: 212, column: 14, scope: !13549)
!13665 = !DILocation(line: 212, column: 5, scope: !13549)
!13666 = distinct !{!13666, !13665, !13667}
!13667 = !DILocation(line: 212, column: 33, scope: !13549)
!13668 = !DILocation(line: 213, column: 21, scope: !13549)
!13669 = !DILocation(line: 214, column: 30, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 214, column: 9)
!13671 = !DILocation(line: 214, column: 27, scope: !13670)
!13672 = !DILocation(line: 214, column: 9, scope: !13549)
!13673 = !DILocation(line: 215, column: 9, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13670, file: !2552, line: 214, column: 63)
!13675 = !DILocation(line: 216, column: 9, scope: !13674)
!13676 = !DILocation(line: 220, column: 5, scope: !13549)
!13677 = !DILocation(line: 224, column: 24, scope: !13549)
!13678 = !DILocation(line: 225, column: 30, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 225, column: 9)
!13680 = !DILocation(line: 225, column: 27, scope: !13679)
!13681 = !DILocation(line: 225, column: 9, scope: !13549)
!13682 = !DILocation(line: 226, column: 9, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13679, file: !2552, line: 225, column: 72)
!13684 = !DILocation(line: 227, column: 9, scope: !13683)
!13685 = !DILocation(line: 230, column: 30, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 230, column: 9)
!13687 = !DILocation(line: 230, column: 27, scope: !13686)
!13688 = !DILocation(line: 230, column: 9, scope: !13549)
!13689 = !DILocation(line: 231, column: 9, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13686, file: !2552, line: 230, column: 94)
!13691 = !DILocation(line: 232, column: 9, scope: !13690)
!13692 = !DILocation(line: 235, column: 54, scope: !13549)
!13693 = !DILocation(line: 235, column: 24, scope: !13549)
!13694 = !DILocation(line: 235, column: 52, scope: !13549)
!13695 = !DILocation(line: 236, column: 30, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 236, column: 9)
!13697 = !DILocation(line: 236, column: 27, scope: !13696)
!13698 = !DILocation(line: 236, column: 9, scope: !13549)
!13699 = !DILocation(line: 237, column: 9, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13696, file: !2552, line: 236, column: 92)
!13701 = !DILocation(line: 238, column: 9, scope: !13700)
!13702 = !DILocation(line: 241, column: 17, scope: !13549)
!13703 = !DILocation(line: 241, column: 14, scope: !13549)
!13704 = !DILocation(line: 241, column: 5, scope: !13549)
!13705 = distinct !{!13705, !13704, !13706}
!13706 = !DILocation(line: 241, column: 33, scope: !13549)
!13707 = !DILocation(line: 242, column: 21, scope: !13549)
!13708 = !DILocation(line: 243, column: 30, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 243, column: 9)
!13710 = !DILocation(line: 243, column: 27, scope: !13709)
!13711 = !DILocation(line: 243, column: 9, scope: !13549)
!13712 = !DILocation(line: 244, column: 9, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13709, file: !2552, line: 243, column: 63)
!13714 = !DILocation(line: 245, column: 9, scope: !13713)
!13715 = !DILocation(line: 249, column: 5, scope: !13549)
!13716 = !DILocation(line: 251, column: 10, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 251, column: 5)
!13718 = !DILocation(line: 0, scope: !13717)
!13719 = !DILocation(line: 251, column: 22, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13717, file: !2552, line: 251, column: 5)
!13721 = !DILocation(line: 251, column: 19, scope: !13720)
!13722 = !DILocation(line: 251, column: 5, scope: !13717)
!13723 = !DILocation(line: 252, column: 29, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !2552, line: 252, column: 13)
!13725 = distinct !DILexicalBlock(scope: !13720, file: !2552, line: 251, column: 41)
!13726 = !DILocation(line: 252, column: 13, scope: !13724)
!13727 = !DILocation(line: 252, column: 37, scope: !13724)
!13728 = !DILocation(line: 252, column: 34, scope: !13724)
!13729 = !DILocation(line: 252, column: 13, scope: !13725)
!13730 = distinct !{!13730, !13722, !13731}
!13731 = !DILocation(line: 257, column: 5, scope: !13717)
!13732 = !DILocation(line: 259, column: 9, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13734, file: !2552, line: 258, column: 25)
!13734 = distinct !DILexicalBlock(scope: !13549, file: !2552, line: 258, column: 9)
!13735 = !DILocation(line: 264, column: 5, scope: !13733)
!13736 = !DILocation(line: 266, column: 5, scope: !13549)
!13737 = !DILocation(line: 267, column: 5, scope: !13549)
!13738 = !DILocation(line: 269, column: 1, scope: !13549)
!13739 = distinct !DISubprogram(name: "i2c_callback", scope: !2552, file: !2552, line: 125, type: !1165, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !13740)
!13740 = !{!13741, !13742, !13743}
!13741 = !DILocalVariable(name: "slave_address", arg: 1, scope: !13739, file: !2552, line: 125, type: !463)
!13742 = !DILocalVariable(name: "event", arg: 2, scope: !13739, file: !2552, line: 125, type: !1140)
!13743 = !DILocalVariable(name: "user_data", arg: 3, scope: !13739, file: !2552, line: 125, type: !88)
!13744 = !DILocation(line: 0, scope: !13739)
!13745 = !DILocation(line: 127, column: 5, scope: !13739)
!13746 = !DILocation(line: 128, column: 21, scope: !13739)
!13747 = !DILocation(line: 129, column: 1, scope: !13739)
!13748 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2552, file: !2552, line: 77, type: !291, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !13749)
!13749 = !{!13750}
!13750 = !DILocalVariable(name: "uart_config", scope: !13748, file: !2552, line: 79, type: !13751)
!13751 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !878, line: 378, baseType: !13752)
!13752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 373, size: 128, elements: !13753)
!13753 = !{!13754, !13755, !13756, !13757}
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !13752, file: !878, line: 374, baseType: !6046, size: 32)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !13752, file: !878, line: 375, baseType: !6096, size: 32, offset: 32)
!13756 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !13752, file: !878, line: 376, baseType: !6098, size: 32, offset: 64)
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !13752, file: !878, line: 377, baseType: !6100, size: 32, offset: 96)
!13758 = !DILocation(line: 79, column: 5, scope: !13748)
!13759 = !DILocation(line: 79, column: 23, scope: !13748)
!13760 = !DILocation(line: 82, column: 5, scope: !13748)
!13761 = !DILocation(line: 83, column: 5, scope: !13748)
!13762 = !DILocation(line: 84, column: 5, scope: !13748)
!13763 = !DILocation(line: 85, column: 5, scope: !13748)
!13764 = !DILocation(line: 88, column: 17, scope: !13748)
!13765 = !DILocation(line: 88, column: 26, scope: !13748)
!13766 = !DILocation(line: 89, column: 17, scope: !13748)
!13767 = !DILocation(line: 89, column: 29, scope: !13748)
!13768 = !DILocation(line: 90, column: 17, scope: !13748)
!13769 = !DILocation(line: 90, column: 26, scope: !13748)
!13770 = !DILocation(line: 91, column: 17, scope: !13748)
!13771 = !DILocation(line: 91, column: 24, scope: !13748)
!13772 = !DILocation(line: 92, column: 5, scope: !13748)
!13773 = !DILocation(line: 93, column: 1, scope: !13748)
!13774 = distinct !DISubprogram(name: "_close", scope: !2565, file: !2565, line: 5, type: !13513, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13775)
!13775 = !{!13776}
!13776 = !DILocalVariable(name: "file", arg: 1, scope: !13774, file: !2565, line: 5, type: !7)
!13777 = !DILocation(line: 0, scope: !13774)
!13778 = !DILocation(line: 7, column: 5, scope: !13774)
!13779 = distinct !DISubprogram(name: "_fstat", scope: !2565, file: !2565, line: 10, type: !13780, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13828)
!13780 = !DISubroutineType(types: !13781)
!13781 = !{!7, !7, !13782}
!13782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13783, size: 32)
!13783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !13784, line: 27, size: 704, elements: !13785)
!13784 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!13785 = !{!13786, !13789, !13792, !13795, !13798, !13801, !13804, !13805, !13808, !13818, !13819, !13820, !13823, !13826}
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13783, file: !13784, line: 29, baseType: !13787, size: 16)
!13787 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2569, line: 161, baseType: !13788)
!13788 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2609, line: 56, baseType: !1827)
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13783, file: !13784, line: 30, baseType: !13790, size: 16, offset: 16)
!13790 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2569, line: 139, baseType: !13791)
!13791 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2609, line: 75, baseType: !1210)
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13783, file: !13784, line: 31, baseType: !13793, size: 32, offset: 32)
!13793 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2569, line: 189, baseType: !13794)
!13794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2609, line: 90, baseType: !63)
!13795 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13783, file: !13784, line: 32, baseType: !13796, size: 16, offset: 64)
!13796 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2569, line: 194, baseType: !13797)
!13797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2609, line: 209, baseType: !1210)
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13783, file: !13784, line: 33, baseType: !13799, size: 16, offset: 80)
!13799 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2569, line: 165, baseType: !13800)
!13800 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2609, line: 60, baseType: !1210)
!13801 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13783, file: !13784, line: 34, baseType: !13802, size: 16, offset: 96)
!13802 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2569, line: 169, baseType: !13803)
!13803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2609, line: 63, baseType: !1210)
!13804 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13783, file: !13784, line: 35, baseType: !13787, size: 16, offset: 112)
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13783, file: !13784, line: 36, baseType: !13806, size: 32, offset: 128)
!13806 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2569, line: 157, baseType: !13807)
!13807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2609, line: 102, baseType: !2625)
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13783, file: !13784, line: 42, baseType: !13809, size: 128, offset: 192)
!13809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !13810, line: 47, size: 128, elements: !13811)
!13810 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!13811 = !{!13812, !13817}
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13809, file: !13810, line: 48, baseType: !13813, size: 64)
!13813 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !13814, line: 42, baseType: !13815)
!13814 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!13815 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !13816)
!13816 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!13817 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13809, file: !13810, line: 49, baseType: !2610, size: 32, offset: 64)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13783, file: !13784, line: 43, baseType: !13809, size: 128, offset: 320)
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13783, file: !13784, line: 44, baseType: !13809, size: 128, offset: 448)
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13783, file: !13784, line: 45, baseType: !13821, size: 32, offset: 576)
!13821 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2569, line: 102, baseType: !13822)
!13822 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2609, line: 34, baseType: !2610)
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13783, file: !13784, line: 46, baseType: !13824, size: 32, offset: 608)
!13824 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2569, line: 97, baseType: !13825)
!13825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2609, line: 30, baseType: !2610)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !13783, file: !13784, line: 48, baseType: !13827, size: 64, offset: 640)
!13827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2610, size: 64, elements: !480)
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "file", arg: 1, scope: !13779, file: !2565, line: 10, type: !7)
!13830 = !DILocalVariable(name: "st", arg: 2, scope: !13779, file: !2565, line: 10, type: !13782)
!13831 = !DILocation(line: 0, scope: !13779)
!13832 = !DILocation(line: 12, column: 5, scope: !13779)
!13833 = distinct !DISubprogram(name: "_isatty", scope: !2565, file: !2565, line: 15, type: !13513, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13834)
!13834 = !{!13835}
!13835 = !DILocalVariable(name: "file", arg: 1, scope: !13833, file: !2565, line: 15, type: !7)
!13836 = !DILocation(line: 0, scope: !13833)
!13837 = !DILocation(line: 17, column: 5, scope: !13833)
!13838 = distinct !DISubprogram(name: "_lseek", scope: !2565, file: !2565, line: 20, type: !13839, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!7, !7, !7, !7}
!13841 = !{!13842, !13843, !13844}
!13842 = !DILocalVariable(name: "file", arg: 1, scope: !13838, file: !2565, line: 20, type: !7)
!13843 = !DILocalVariable(name: "ptr", arg: 2, scope: !13838, file: !2565, line: 20, type: !7)
!13844 = !DILocalVariable(name: "dir", arg: 3, scope: !13838, file: !2565, line: 20, type: !7)
!13845 = !DILocation(line: 0, scope: !13838)
!13846 = !DILocation(line: 22, column: 5, scope: !13838)
!13847 = distinct !DISubprogram(name: "_open", scope: !2565, file: !2565, line: 25, type: !13848, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13850)
!13848 = !DISubroutineType(types: !13849)
!13849 = !{!7, !2603, !7, !7}
!13850 = !{!13851, !13852, !13853}
!13851 = !DILocalVariable(name: "name", arg: 1, scope: !13847, file: !2565, line: 25, type: !2603)
!13852 = !DILocalVariable(name: "flags", arg: 2, scope: !13847, file: !2565, line: 25, type: !7)
!13853 = !DILocalVariable(name: "mode", arg: 3, scope: !13847, file: !2565, line: 25, type: !7)
!13854 = !DILocation(line: 0, scope: !13847)
!13855 = !DILocation(line: 27, column: 5, scope: !13847)
!13856 = distinct !DISubprogram(name: "_read", scope: !2565, file: !2565, line: 30, type: !13857, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!7, !7, !2570, !7}
!13859 = !{!13860, !13861, !13862}
!13860 = !DILocalVariable(name: "file", arg: 1, scope: !13856, file: !2565, line: 30, type: !7)
!13861 = !DILocalVariable(name: "ptr", arg: 2, scope: !13856, file: !2565, line: 30, type: !2570)
!13862 = !DILocalVariable(name: "len", arg: 3, scope: !13856, file: !2565, line: 30, type: !7)
!13863 = !DILocation(line: 0, scope: !13856)
!13864 = !DILocation(line: 32, column: 5, scope: !13856)
!13865 = distinct !DISubprogram(name: "_getpid", scope: !2565, file: !2565, line: 48, type: !13016, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !293)
!13866 = !DILocation(line: 50, column: 5, scope: !13865)
!13867 = distinct !DISubprogram(name: "_kill", scope: !2565, file: !2565, line: 56, type: !13868, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13870)
!13868 = !DISubroutineType(types: !13869)
!13869 = !{!7, !7, !7}
!13870 = !{!13871, !13872}
!13871 = !DILocalVariable(name: "pid", arg: 1, scope: !13867, file: !2565, line: 56, type: !7)
!13872 = !DILocalVariable(name: "sig", arg: 2, scope: !13867, file: !2565, line: 56, type: !7)
!13873 = !DILocation(line: 0, scope: !13867)
!13874 = !DILocation(line: 58, column: 5, scope: !13867)
!13875 = distinct !DISubprogram(name: "_exit", scope: !2565, file: !2565, line: 61, type: !13513, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13876)
!13876 = !{!13877}
!13877 = !DILocalVariable(name: "val", arg: 1, scope: !13875, file: !2565, line: 61, type: !7)
!13878 = !DILocation(line: 0, scope: !13875)
!13879 = !DILocation(line: 63, column: 5, scope: !13875)
!13880 = !DILocation(line: 0, scope: !2564)
!13881 = !DILocation(line: 73, column: 5, scope: !2564)
!13882 = !{i64 1127}
!13883 = !DILocation(line: 75, column: 14, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !2564, file: !2565, line: 75, column: 9)
!13885 = !DILocation(line: 75, column: 11, scope: !13884)
!13886 = !DILocation(line: 75, column: 9, scope: !2564)
!13887 = !DILocation(line: 81, column: 32, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !2564, file: !2565, line: 81, column: 9)
!13889 = !DILocation(line: 81, column: 15, scope: !13888)
!13890 = !DILocation(line: 92, column: 1, scope: !2564)
!13891 = !DILocation(line: 81, column: 9, scope: !2564)
!13892 = distinct !DISubprogram(name: "_write", scope: !2565, file: !2565, line: 94, type: !13857, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !13893)
!13893 = !{!13894, !13895, !13896, !13897}
!13894 = !DILocalVariable(name: "file", arg: 1, scope: !13892, file: !2565, line: 94, type: !7)
!13895 = !DILocalVariable(name: "ptr", arg: 2, scope: !13892, file: !2565, line: 94, type: !2570)
!13896 = !DILocalVariable(name: "len", arg: 3, scope: !13892, file: !2565, line: 94, type: !7)
!13897 = !DILocalVariable(name: "DataIdx", scope: !13892, file: !2565, line: 96, type: !7)
!13898 = !DILocation(line: 0, scope: !13892)
!13899 = !DILocation(line: 98, column: 31, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13901, file: !2565, line: 98, column: 5)
!13901 = distinct !DILexicalBlock(scope: !13892, file: !2565, line: 98, column: 5)
!13902 = !DILocation(line: 98, column: 5, scope: !13901)
!13903 = !DILocation(line: 99, column: 26, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13900, file: !2565, line: 98, column: 49)
!13905 = !DILocation(line: 99, column: 22, scope: !13904)
!13906 = !DILocation(line: 99, column: 9, scope: !13904)
!13907 = !DILocation(line: 98, column: 45, scope: !13900)
!13908 = distinct !{!13908, !13902, !13909}
!13909 = !DILocation(line: 100, column: 5, scope: !13901)
!13910 = !DILocation(line: 101, column: 5, scope: !13892)
!13911 = distinct !DISubprogram(name: "SysTick_Set", scope: !2769, file: !2769, line: 62, type: !3911, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !13912)
!13912 = !{!13913, !13914}
!13913 = !DILocalVariable(name: "ticks", arg: 1, scope: !13911, file: !2769, line: 62, type: !61)
!13914 = !DILocalVariable(name: "val", scope: !13911, file: !2769, line: 64, type: !61)
!13915 = !DILocation(line: 0, scope: !13911)
!13916 = !DILocation(line: 67, column: 16, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13911, file: !2769, line: 67, column: 9)
!13918 = !DILocation(line: 67, column: 21, scope: !13917)
!13919 = !DILocation(line: 67, column: 9, scope: !13911)
!13920 = !DILocation(line: 72, column: 20, scope: !13911)
!13921 = !DILocation(line: 75, column: 19, scope: !13911)
!13922 = !DILocation(line: 79, column: 20, scope: !13911)
!13923 = !DILocation(line: 80, column: 20, scope: !13911)
!13924 = !DILocation(line: 83, column: 19, scope: !13911)
!13925 = !DILocation(line: 85, column: 5, scope: !13911)
!13926 = !DILocation(line: 86, column: 1, scope: !13911)
!13927 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2769, file: !2769, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !293)
!13928 = !DILocation(line: 97, column: 28, scope: !13927)
!13929 = !DILocation(line: 98, column: 1, scope: !13927)
!13930 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2769, file: !2769, line: 107, type: !4163, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !293)
!13931 = !DILocation(line: 109, column: 12, scope: !13930)
!13932 = !DILocation(line: 109, column: 5, scope: !13930)
!13933 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2769, file: !2769, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !13934)
!13934 = !{!13935}
!13935 = !DILocalVariable(name: "cm_mux_sel", scope: !13933, file: !2769, line: 121, type: !463)
!13936 = !DILocation(line: 121, column: 38, scope: !13933)
!13937 = !DILocation(line: 121, column: 26, scope: !13933)
!13938 = !DILocation(line: 0, scope: !13933)
!13939 = !DILocation(line: 123, column: 5, scope: !13933)
!13940 = !DILocation(line: 132, column: 13, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13933, file: !2769, line: 123, column: 25)
!13942 = !DILocation(line: 140, column: 13, scope: !13941)
!13943 = !DILocation(line: 0, scope: !13941)
!13944 = !DILocation(line: 146, column: 26, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13933, file: !2769, line: 146, column: 9)
!13946 = !DILocation(line: 146, column: 50, scope: !13945)
!13947 = !DILocation(line: 146, column: 41, scope: !13945)
!13948 = !DILocation(line: 148, column: 25, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13945, file: !2769, line: 147, column: 52)
!13950 = !DILocation(line: 149, column: 5, scope: !13949)
!13951 = !DILocation(line: 150, column: 1, scope: !13933)
!13952 = distinct !DISubprogram(name: "SystemInit", scope: !2769, file: !2769, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !293)
!13953 = !DILocation(line: 162, column: 16, scope: !13952)
!13954 = !DILocation(line: 166, column: 16, scope: !13952)
!13955 = !DILocation(line: 169, column: 16, scope: !13952)
!13956 = !DILocation(line: 172, column: 1, scope: !13952)
!13957 = distinct !DISubprogram(name: "CachePreInit", scope: !2769, file: !2769, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !293)
!13958 = !DILocation(line: 183, column: 22, scope: !13957)
!13959 = !DILocation(line: 186, column: 21, scope: !13957)
!13960 = !DILocation(line: 189, column: 21, scope: !13957)
!13961 = !DILocation(line: 192, column: 29, scope: !13957)
!13962 = !DILocation(line: 193, column: 33, scope: !13957)
!13963 = !DILocation(line: 195, column: 28, scope: !13957)
!13964 = !DILocation(line: 200, column: 30, scope: !13957)
!13965 = !DILocation(line: 214, column: 1, scope: !13957)
